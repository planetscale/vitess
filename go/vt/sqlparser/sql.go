// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const JSON_CONTAINS = 57444
const JSON_CONTAINS_PATH = 57445
const JSON_EXTRACT = 57446
const JSON_KEYS = 57447
const JSON_OVERLAPS = 57448
const JSON_SEARCH = 57449
const JSON_VALUE = 57450
const EXTRACT = 57451
const NULL = 57452
const TRUE = 57453
const FALSE = 57454
const OFF = 57455
const DISCARD = 57456
const IMPORT = 57457
const ENABLE = 57458
const DISABLE = 57459
const TABLESPACE = 57460
const VIRTUAL = 57461
const STORED = 57462
const BOTH = 57463
const LEADING = 57464
const TRAILING = 57465
const EMPTY_FROM_CLAUSE = 57466
const LOWER_THAN_CHARSET = 57467
const CHARSET = 57468
const MEMBER = 57469
const UNIQUE = 57470
const KEY = 57471
const EXPRESSION_PREC_SETTER = 57472
const OR = 57473
const XOR = 57474
const AND = 57475
const NOT = 57476
const BETWEEN = 57477
const CASE = 57478
const WHEN = 57479
const THEN = 57480
const ELSE = 57481
const END = 57482
const LE = 57483
const GE = 57484
const NE = 57485
const NULL_SAFE_EQUAL = 57486
const IS = 57487
const LIKE = 57488
const REGEXP = 57489
const IN = 57490
const SHIFT_LEFT = 57491
const SHIFT_RIGHT = 57492
const DIV = 57493
const MOD = 57494
const UNARY = 57495
const COLLATE = 57496
const BINARY = 57497
const UNDERSCORE_ARMSCII8 = 57498
const UNDERSCORE_ASCII = 57499
const UNDERSCORE_BIG5 = 57500
const UNDERSCORE_BINARY = 57501
const UNDERSCORE_CP1250 = 57502
const UNDERSCORE_CP1251 = 57503
const UNDERSCORE_CP1256 = 57504
const UNDERSCORE_CP1257 = 57505
const UNDERSCORE_CP850 = 57506
const UNDERSCORE_CP852 = 57507
const UNDERSCORE_CP866 = 57508
const UNDERSCORE_CP932 = 57509
const UNDERSCORE_DEC8 = 57510
const UNDERSCORE_EUCJPMS = 57511
const UNDERSCORE_EUCKR = 57512
const UNDERSCORE_GB18030 = 57513
const UNDERSCORE_GB2312 = 57514
const UNDERSCORE_GBK = 57515
const UNDERSCORE_GEOSTD8 = 57516
const UNDERSCORE_GREEK = 57517
const UNDERSCORE_HEBREW = 57518
const UNDERSCORE_HP8 = 57519
const UNDERSCORE_KEYBCS2 = 57520
const UNDERSCORE_KOI8R = 57521
const UNDERSCORE_KOI8U = 57522
const UNDERSCORE_LATIN1 = 57523
const UNDERSCORE_LATIN2 = 57524
const UNDERSCORE_LATIN5 = 57525
const UNDERSCORE_LATIN7 = 57526
const UNDERSCORE_MACCE = 57527
const UNDERSCORE_MACROMAN = 57528
const UNDERSCORE_SJIS = 57529
const UNDERSCORE_SWE7 = 57530
const UNDERSCORE_TIS620 = 57531
const UNDERSCORE_UCS2 = 57532
const UNDERSCORE_UJIS = 57533
const UNDERSCORE_UTF16 = 57534
const UNDERSCORE_UTF16LE = 57535
const UNDERSCORE_UTF32 = 57536
const UNDERSCORE_UTF8 = 57537
const UNDERSCORE_UTF8MB4 = 57538
const INTERVAL = 57539
const JSON_EXTRACT_OP = 57540
const JSON_UNQUOTE_EXTRACT_OP = 57541
const CREATE = 57542
const ALTER = 57543
const DROP = 57544
const RENAME = 57545
const ANALYZE = 57546
const ADD = 57547
const FLUSH = 57548
const CHANGE = 57549
const MODIFY = 57550
const DEALLOCATE = 57551
const REVERT = 57552
const SCHEMA = 57553
const TABLE = 57554
const INDEX = 57555
const VIEW = 57556
const TO = 57557
const IGNORE = 57558
const IF = 57559
const PRIMARY = 57560
const COLUMN = 57561
const SPATIAL = 57562
const FULLTEXT = 57563
const KEY_BLOCK_SIZE = 57564
const CHECK = 57565
const INDEXES = 57566
const ACTION = 57567
const CASCADE = 57568
const CONSTRAINT = 57569
const FOREIGN = 57570
const NO = 57571
const REFERENCES = 57572
const RESTRICT = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const COALESCE = 57582
const EXCHANGE = 57583
const REBUILD = 57584
const PARTITIONING = 57585
const REMOVE = 57586
const PREPARE = 57587
const EXECUTE = 57588
const MAXVALUE = 57589
const PARTITION = 57590
const REORGANIZE = 57591
const LESS = 57592
const THAN = 57593
const PROCEDURE = 57594
const TRIGGER = 57595
const VINDEX = 57596
const VINDEXES = 57597
const DIRECTORY = 57598
const NAME = 57599
const UPGRADE = 57600
const STATUS = 57601
const VARIABLES = 57602
const WARNINGS = 57603
const CASCADED = 57604
const DEFINER = 57605
const OPTION = 57606
const SQL = 57607
const UNDEFINED = 57608
const SEQUENCE = 57609
const MERGE = 57610
const TEMPORARY = 57611
const TEMPTABLE = 57612
const INVOKER = 57613
const SECURITY = 57614
const FIRST = 57615
const AFTER = 57616
const LAST = 57617
const VITESS_MIGRATION = 57618
const CANCEL = 57619
const RETRY = 57620
const COMPLETE = 57621
const CLEANUP = 57622
const BEGIN = 57623
const START = 57624
const TRANSACTION = 57625
const COMMIT = 57626
const ROLLBACK = 57627
const SAVEPOINT = 57628
const RELEASE = 57629
const WORK = 57630
const BIT = 57631
const TINYINT = 57632
const SMALLINT = 57633
const MEDIUMINT = 57634
const INT = 57635
const INTEGER = 57636
const BIGINT = 57637
const INTNUM = 57638
const REAL = 57639
const DOUBLE = 57640
const FLOAT_TYPE = 57641
const DECIMAL_TYPE = 57642
const NUMERIC = 57643
const TIME = 57644
const TIMESTAMP = 57645
const DATETIME = 57646
const YEAR = 57647
const CHAR = 57648
const VARCHAR = 57649
const BOOL = 57650
const CHARACTER = 57651
const VARBINARY = 57652
const NCHAR = 57653
const TEXT = 57654
const TINYTEXT = 57655
const MEDIUMTEXT = 57656
const LONGTEXT = 57657
const BLOB = 57658
const TINYBLOB = 57659
const MEDIUMBLOB = 57660
const LONGBLOB = 57661
const JSON = 57662
const ENUM = 57663
const GEOMETRY = 57664
const POINT = 57665
const LINESTRING = 57666
const POLYGON = 57667
const GEOMETRYCOLLECTION = 57668
const MULTIPOINT = 57669
const MULTILINESTRING = 57670
const MULTIPOLYGON = 57671
const ASCII = 57672
const UNICODE = 57673
const NULLX = 57674
const AUTO_INCREMENT = 57675
const APPROXNUM = 57676
const SIGNED = 57677
const UNSIGNED = 57678
const ZEROFILL = 57679
const CODE = 57680
const COLLATION = 57681
const COLUMNS = 57682
const DATABASES = 57683
const ENGINES = 57684
const EVENT = 57685
const EXTENDED = 57686
const FIELDS = 57687
const FULL = 57688
const FUNCTION = 57689
const GTID_EXECUTED = 57690
const KEYSPACES = 57691
const OPEN = 57692
const PLUGINS = 57693
const PRIVILEGES = 57694
const PROCESSLIST = 57695
const SCHEMAS = 57696
const TABLES = 57697
const TRIGGERS = 57698
const USER = 57699
const VGTID_EXECUTED = 57700
const VITESS_KEYSPACES = 57701
const VITESS_METADATA = 57702
const VITESS_MIGRATIONS = 57703
const VITESS_REPLICATION_STATUS = 57704
const VITESS_SHARDS = 57705
const VITESS_TABLETS = 57706
const VITESS_TARGET = 57707
const VSCHEMA = 57708
const NAMES = 57709
const GLOBAL = 57710
const SESSION = 57711
const ISOLATION = 57712
const LEVEL = 57713
const READ = 57714
const WRITE = 57715
const ONLY = 57716
const REPEATABLE = 57717
const COMMITTED = 57718
const UNCOMMITTED = 57719
const SERIALIZABLE = 57720
const CURRENT_TIMESTAMP = 57721
const DATABASE = 57722
const CURRENT_DATE = 57723
const CURRENT_TIME = 57724
const LOCALTIME = 57725
const LOCALTIMESTAMP = 57726
const CURRENT_USER = 57727
const UTC_DATE = 57728
const UTC_TIME = 57729
const UTC_TIMESTAMP = 57730
const DAY = 57731
const DAY_HOUR = 57732
const DAY_MICROSECOND = 57733
const DAY_MINUTE = 57734
const DAY_SECOND = 57735
const HOUR = 57736
const HOUR_MICROSECOND = 57737
const HOUR_MINUTE = 57738
const HOUR_SECOND = 57739
const MICROSECOND = 57740
const MINUTE = 57741
const MINUTE_MICROSECOND = 57742
const MINUTE_SECOND = 57743
const MONTH = 57744
const QUARTER = 57745
const SECOND = 57746
const SECOND_MICROSECOND = 57747
const YEAR_MONTH = 57748
const WEEK = 57749
const REPLACE = 57750
const CONVERT = 57751
const CAST = 57752
const SUBSTR = 57753
const SUBSTRING = 57754
const GROUP_CONCAT = 57755
const SEPARATOR = 57756
const TIMESTAMPADD = 57757
const TIMESTAMPDIFF = 57758
const WEIGHT_STRING = 57759
const LTRIM = 57760
const RTRIM = 57761
const TRIM = 57762
const JSON_ARRAY = 57763
const JSON_OBJECT = 57764
const JSON_QUOTE = 57765
const MATCH = 57766
const AGAINST = 57767
const BOOLEAN = 57768
const LANGUAGE = 57769
const WITH = 57770
const QUERY = 57771
const EXPANSION = 57772
const WITHOUT = 57773
const VALIDATION = 57774
const UNUSED = 57775
const ARRAY = 57776
const CUME_DIST = 57777
const DESCRIPTION = 57778
const DENSE_RANK = 57779
const EMPTY = 57780
const EXCEPT = 57781
const FIRST_VALUE = 57782
const GROUPING = 57783
const GROUPS = 57784
const JSON_TABLE = 57785
const LAG = 57786
const LAST_VALUE = 57787
const LATERAL = 57788
const LEAD = 57789
const NTH_VALUE = 57790
const NTILE = 57791
const OF = 57792
const OVER = 57793
const PERCENT_RANK = 57794
const RANK = 57795
const RECURSIVE = 57796
const ROW_NUMBER = 57797
const SYSTEM = 57798
const WINDOW = 57799
const ACTIVE = 57800
const ADMIN = 57801
const BUCKETS = 57802
const CLONE = 57803
const COMPONENT = 57804
const DEFINITION = 57805
const ENFORCED = 57806
const EXCLUDE = 57807
const FOLLOWING = 57808
const GEOMCOLLECTION = 57809
const GET_MASTER_PUBLIC_KEY = 57810
const HISTOGRAM = 57811
const HISTORY = 57812
const INACTIVE = 57813
const INVISIBLE = 57814
const LOCKED = 57815
const MASTER_COMPRESSION_ALGORITHMS = 57816
const MASTER_PUBLIC_KEY_PATH = 57817
const MASTER_TLS_CIPHERSUITES = 57818
const MASTER_ZSTD_COMPRESSION_LEVEL = 57819
const NESTED = 57820
const NETWORK_NAMESPACE = 57821
const NOWAIT = 57822
const NULLS = 57823
const OJ = 57824
const OLD = 57825
const OPTIONAL = 57826
const ORDINALITY = 57827
const ORGANIZATION = 57828
const OTHERS = 57829
const PATH = 57830
const PERSIST = 57831
const PERSIST_ONLY = 57832
const PRECEDING = 57833
const PRIVILEGE_CHECKS_USER = 57834
const PROCESS = 57835
const RANDOM = 57836
const REFERENCE = 57837
const REQUIRE_ROW_FORMAT = 57838
const RESOURCE = 57839
const RESPECT = 57840
const RESTART = 57841
const RETAIN = 57842
const REUSE = 57843
const ROLE = 57844
const SECONDARY = 57845
const SECONDARY_ENGINE = 57846
const SECONDARY_LOAD = 57847
const SECONDARY_UNLOAD = 57848
const SKIP = 57849
const SRID = 57850
const THREAD_PRIORITY = 57851
const TIES = 57852
const UNBOUNDED = 57853
const VCPU = 57854
const VISIBLE = 57855
const FORMAT = 57856
const TREE = 57857
const VITESS = 57858
const TRADITIONAL = 57859
const LOCAL = 57860
const LOW_PRIORITY = 57861
const NO_WRITE_TO_BINLOG = 57862
const LOGS = 57863
const ERROR = 57864
const GENERAL = 57865
const HOSTS = 57866
const OPTIMIZER_COSTS = 57867
const USER_RESOURCES = 57868
const SLOW = 57869
const CHANNEL = 57870
const RELAY = 57871
const EXPORT = 57872
const AVG_ROW_LENGTH = 57873
const CONNECTION = 57874
const CHECKSUM = 57875
const DELAY_KEY_WRITE = 57876
const ENCRYPTION = 57877
const ENGINE = 57878
const INSERT_METHOD = 57879
const MAX_ROWS = 57880
const MIN_ROWS = 57881
const PACK_KEYS = 57882
const PASSWORD = 57883
const FIXED = 57884
const DYNAMIC = 57885
const COMPRESSED = 57886
const REDUNDANT = 57887
const COMPACT = 57888
const ROW_FORMAT = 57889
const STATS_AUTO_RECALC = 57890
const STATS_PERSISTENT = 57891
const STATS_SAMPLE_PAGES = 57892
const STORAGE = 57893
const MEMORY = 57894
const DISK = 57895
const PARTITIONS = 57896
const LINEAR = 57897
const RANGE = 57898
const LIST = 57899
const SUBPARTITION = 57900
const SUBPARTITIONS = 57901
const HASH = 57902

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"MEMBER",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	578, 145,
	-2, 151,
	-1, 48,
	129, 151,
	170, 151,
	326, 151,
	-2, 454,
	-1, 55,
	33, 652,
	230, 652,
	241, 652,
	276, 666,
	277, 666,
	-2, 654,
	-1, 60,
	232, 679,
	-2, 677,
	-1, 114,
	229, 1181,
	-2, 119,
	-1, 116,
	1, 146,
	578, 146,
	-2, 151,
	-1, 126,
	131, 357,
	235, 357,
	-2, 448,
	-1, 145,
	129, 151,
	170, 151,
	326, 151,
	-2, 463,
	-1, 644,
	214, 1202,
	-2, 1198,
	-1, 645,
	214, 1203,
	-2, 1199,
	-1, 719,
	57, 747,
	-2, 762,
	-1, 756,
	146, 1584,
	-2, 112,
	-1, 757,
	146, 1445,
	-2, 113,
	-1, 763,
	146, 1513,
	-2, 1175,
	-1, 910,
	146, 1376,
	-2, 1172,
	-1, 948,
	240, 41,
	245, 41,
	-2, 368,
	-1, 1025,
	1, 502,
	578, 502,
	-2, 151,
	-1, 1245,
	57, 748,
	-2, 767,
	-1, 1246,
	57, 749,
	-2, 768,
	-1, 1299,
	129, 151,
	170, 151,
	326, 151,
	-2, 398,
	-1, 1376,
	131, 357,
	235, 357,
	-2, 448,
	-1, 1385,
	240, 42,
	245, 42,
	-2, 369,
	-1, 1668,
	214, 1207,
	-2, 1201,
	-1, 1751,
	129, 151,
	170, 151,
	326, 151,
	-2, 399,
	-1, 1758,
	23, 170,
	-2, 172,
	-1, 1974,
	84, 39,
	-2, 804,
	-1, 2026,
	75, 94,
	84, 94,
	-2, 824,
	-1, 2212,
	47, 1143,
	-2, 1137,
	-1, 2391,
	84, 39,
	-2, 805,
	-1, 2429,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 796,
	-1, 2690,
	20, 1515,
	30, 1515,
	171, 1515,
	252, 1515,
	306, 1515,
	307, 1515,
	308, 1515,
	309, 1515,
	310, 1515,
	311, 1515,
	312, 1515,
	314, 1515,
	315, 1515,
	316, 1515,
	317, 1515,
	318, 1515,
	319, 1515,
	320, 1515,
	321, 1515,
	322, 1515,
	323, 1515,
	324, 1515,
	325, 1515,
	327, 1515,
	329, 1515,
	330, 1515,
	331, 1515,
	332, 1515,
	333, 1515,
	334, 1515,
	335, 1515,
	336, 1515,
	337, 1515,
	338, 1515,
	339, 1515,
	340, 1515,
	341, 1515,
	342, 1515,
	343, 1515,
	344, 1515,
	345, 1515,
	346, 1515,
	443, 1515,
	-2, 542,
}

const yyPrivate = 57344

const yyLast = 39070

var yyAct = [...]int{
	644, 653, 2756, 2181, 2755, 2738, 2632, 646, 2732, 1748,
	2335, 2490, 2688, 1302, 2692, 2672, 1682, 2265, 2272, 1943,
	1088, 1702, 638, 37, 2591, 734, 96, 2306, 2520, 3,
	2223, 1962, 2226, 2318, 1811, 2608, 2317, 639, 1260, 1224,
	2274, 712, 2400, 2227, 583, 579, 2394, 2224, 2525, 2179,
	2180, 182, 647, 636, 182, 637, 544, 182, 576, 605,
	2320, 1721, 559, 1706, 182, 2020, 2420, 2221, 1989, 2213,
	2386, 2087, 182, 577, 1037, 2058, 1786, 1997, 2128, 1781,
	2059, 1737, 2060, 575, 1801, 978, 154, 182, 36, 2009,
	761, 1247, 735, 1726, 38, 2145, 1725, 913, 1981, 1964,
	716, 1662, 720, 714, 1652, 1383, 1542, 571, 140, 559,
	1594, 1788, 559, 182, 559, 1820, 1800, 943, 1853, 1584,
	737, 2052, 938, 1291, 1728, 2028, 1684, 1227, 91, 758,
	95, 1269, 1173, 588, 1606, 1491, 1561, 1390, 1109, 921,
	1487, 920, 1798, 1473, 949, 946, 1713, 917, 944, 945,
	1290, 956, 1777, 1648, 1399, 1086, 1707, 1288, 1274, 1351,
	157, 1080, 726, 117, 1496, 118, 98, 748, 721, 1375,
	123, 124, 1066, 1021, 722, 724, 85, 566, 1180, 1176,
	1675, 89, 2739, 2641, 1813, 1814, 1815, 1813, 2080, 2303,
	76, 2107, 2106, 97, 2078, 1851, 2136, 1459, 1110, 723,
	77, 8, 7, 6, 2137, 2759, 2765, 2766, 119, 1679,
	1680, 1356, 516, 742, 1549, 747, 1548, 90, 125, 728,
	184, 185, 186, 1547, 1546, 1545, 1544, 1527, 980, 914,
	1536, 1110, 983, 569, 2706, 570, 1960, 2209, 929, 1991,
	924, 994, 995, 567, 998, 999, 1000, 1001, 2752, 1665,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 762, 755, 2716, 715, 102,
	713, 2729, 729, 959, 736, 2289, 936, 119, 2455, 960,
	935, 1554, 934, 2587, 2586, 2483, 982, 981, 2484, 2758,
	2766, 2751, 984, 985, 986, 78, 1793, 2682, 80, 2742,
	1891, 2652, 1142, 1120, 2727, 991, 2491, 2673, 78, 1839,
	104, 105, 78, 108, 996, 2681, 114, 2651, 2144, 179,
	1791, 2369, 511, 2596, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1151, 1150, 1152, 1153, 1365, 1120, 78, 1073, 1961,
	1075, 119, 708, 709, 710, 711, 1024, 2261, 719, 184,
	185, 186, 1229, 1636, 2135, 2115, 1681, 2538, 1888, 2114,
	2037, 2000, 1083, 2036, 1889, 1742, 2038, 2262, 2263, 1743,
	1744, 928, 87, 1292, 930, 1293, 750, 751, 1072, 1074,
	1056, 706, 1061, 1062, 705, 87, 2001, 2633, 2081, 87,
	1044, 2049, 548, 1044, 2397, 1045, 1116, 1057, 1045, 1108,
	1050, 1761, 1760, 1043, 2360, 1042, 513, 2171, 548, 2337,
	2358, 1535, 557, 561, 87, 555, 562, 548, 1020, 1865,
	1862, 1864, 1863, 548, 707, 1537, 1538, 1539, 1231, 1116,
	2088, 1479, 1821, 2110, 545, 1854, 2741, 1628, 1617, 1618,
	1619, 1620, 1630, 1621, 1622, 1623, 1635, 1631, 1624, 1625,
	1632, 1633, 1634, 1626, 1627, 1629, 1449, 548, 997, 2330,
	1790, 1474, 1082, 1077, 937, 919, 1859, 2331, 933, 1070,
	925, 1063, 1065, 1071, 2268, 1026, 1058, 927, 926, 1051,
	532, 1064, 2123, 1076, 933, 1870, 1030, 1031, 2338, 1867,
	2707, 1868, 530, 1869, 1059, 1060, 933, 1019, 1003, 1002,
	1450, 1858, 1451, 2339, 1856, 939, 1069, 2476, 967, 940,
	1824, 182, 2314, 182, 87, 1722, 182, 940, 1033, 2269,
	965, 1860, 976, 975, 974, 973, 931, 972, 1154, 971,
	970, 969, 527, 1234, 1368, 964, 977, 1889, 2278, 2746,
	2127, 540, 931, 1857, 2271, 559, 1090, 559, 559, 918,
	2725, 1054, 918, 918, 952, 1154, 537, 916, 2266, 2172,
	951, 1023, 559, 559, 1488, 1115, 1112, 1113, 1114, 1119,
	1121, 1118, 1799, 1117, 1965, 1967, 2276, 2277, 2736, 1389,
	1111, 958, 749, 2267, 958, 2124, 37, 1845, 2296, 549,
	1363, 1484, 1040, 1102, 1046, 1047, 1048, 1049, 1115, 1112,
	1113, 1114, 1119, 1121, 1118, 549, 1117, 1096, 987, 958,
	2109, 2140, 2597, 1111, 549, 2273, 1084, 1085, 2288, 517,
	549, 519, 533, 2313, 551, 1362, 550, 523, 2640, 521,
	525, 534, 526, 2079, 520, 1480, 531, 932, 1903, 522,
	535, 536, 538, 541, 542, 543, 539, 1361, 529, 552,
	2099, 1022, 968, 932, 549, 993, 1485, 1359, 1157, 1158,
	1159, 1160, 2082, 515, 966, 932, 1792, 510, 1165, 1841,
	1168, 2112, 1091, 2629, 2398, 1708, 1709, 958, 1222, 957,
	2275, 1478, 957, 1388, 961, 951, 2436, 961, 951, 2650,
	2146, 1749, 2278, 2416, 962, 2583, 2130, 962, 1217, 2130,
	116, 2129, 1092, 1093, 2129, 2122, 182, 957, 2121, 1078,
	559, 559, 1155, 1156, 81, 2757, 1154, 963, 2033, 1996,
	1952, 1674, 1278, 1204, 1161, 1890, 182, 1461, 1460, 1462,
	1463, 1464, 1153, 2260, 86, 1966, 1237, 1035, 1235, 1067,
	1241, 731, 714, 1240, 1223, 559, 716, 86, 1053, 182,
	1032, 86, 1029, 1081, 559, 2646, 111, 1238, 1041, 1055,
	559, 1497, 2472, 77, 958, 1105, 1103, 1104, 2410, 979,
	1039, 2148, 958, 1855, 758, 957, 86, 1481, 2164, 2698,
	1294, 951, 954, 955, 1178, 918, 1179, 1182, 1106, 948,
	952, 2734, 1607, 2696, 2735, 2270, 2733, 1607, 553, 1917,
	2071, 1126, 2700, 2701, 1125, 1123, 1223, 1124, 1125, 1239,
	947, 2276, 2277, 95, 2166, 2534, 546, 2447, 2697, 1210,
	1211, 1212, 1213, 2446, 1475, 1828, 1476, 112, 1398, 1477,
	1228, 547, 1397, 2158, 2157, 2156, 2150, 1833, 2154, 1387,
	2149, 1838, 2147, 1714, 1715, 1566, 1836, 2152, 2721, 98,
	1148, 1149, 1151, 1150, 1152, 1153, 2151, 967, 1840, 1567,
	1568, 1565, 957, 1028, 992, 1034, 1124, 1125, 1036, 965,
	957, 2153, 2155, 2437, 1837, 1279, 951, 954, 955, 1833,
	918, 1025, 1225, 1068, 948, 952, 2749, 1556, 1558, 1559,
	1236, 1144, 1145, 1146, 1147, 1148, 1149, 1151, 1150, 1152,
	1153, 1259, 1256, 1468, 1289, 1498, 1142, 2578, 2139, 713,
	762, 1038, 1557, 182, 715, 2275, 1835, 1352, 1284, 1285,
	184, 185, 186, 2506, 1586, 2366, 1360, 2278, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1151, 1150, 1152, 1153, 1146,
	1147, 1148, 1149, 1151, 1150, 1152, 1153, 559, 1126, 1385,
	2505, 2454, 1123, 2453, 1124, 1125, 2747, 1394, 1895, 1896,
	1897, 1396, 2607, 1254, 559, 559, 1467, 559, 2658, 559,
	559, 1142, 559, 559, 559, 559, 559, 559, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1128, 2622, 559, 1242, 2304,
	1254, 182, 1432, 1143, 1144, 1145, 1146, 1147, 1148, 1149,
	1151, 1150, 1152, 1153, 1395, 1587, 2294, 182, 1126, 2723,
	2659, 87, 1123, 753, 1124, 1125, 1466, 1456, 559, 2722,
	182, 1934, 1366, 1367, 2056, 1564, 1254, 2055, 2623, 1427,
	1428, 1486, 1796, 1611, 559, 1126, 182, 1612, 1469, 1123,
	2748, 1124, 1125, 1454, 1381, 658, 659, 660, 1453, 1126,
	1944, 1374, 182, 1123, 1126, 1124, 1125, 1452, 1123, 182,
	1124, 1125, 1393, 1926, 2364, 1254, 1443, 1437, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 559, 1434, 1465,
	1455, 1433, 1435, 1436, 1429, 1408, 2626, 2625, 1441, 1442,
	2624, 559, 559, 1392, 1254, 2533, 1126, 1358, 2531, 2334,
	1123, 1283, 1124, 1125, 2502, 1263, 1391, 1391, 1384, 182,
	1126, 1371, 1372, 1370, 1123, 2451, 1124, 1125, 2443, 1401,
	2065, 1402, 2053, 1404, 1406, 1501, 1493, 1410, 1412, 1414,
	1416, 1418, 1505, 1445, 1507, 1508, 1509, 1510, 1219, 1126,
	1849, 1514, 2431, 1123, 1430, 1124, 1125, 184, 185, 186,
	1848, 2444, 1705, 1526, 1264, 1585, 1687, 1591, 1591, 1588,
	1592, 1528, 1494, 1589, 1589, 184, 185, 186, 1597, 559,
	1126, 1457, 1444, 1489, 1123, 1562, 1124, 1125, 184, 185,
	186, 1095, 2040, 1440, 559, 559, 119, 1439, 1126, 935,
	1438, 934, 1123, 1265, 1124, 1125, 1079, 1254, 1569, 1364,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1560, 1570, 1499, 1500, 1503, 1908, 2604,
	1608, 1987, 2740, 92, 1913, 1666, 1142, 1907, 1902, 1504,
	182, 2603, 1524, 1649, 93, 559, 1511, 1512, 1513, 1525,
	1267, 184, 185, 186, 2572, 1809, 1532, 1533, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1151, 1150, 1152, 1153, 182,
	2712, 1254, 559, 2571, 1692, 1301, 1693, 1987, 2679, 1983,
	1649, 1563, 182, 1126, 1987, 2666, 559, 1123, 2489, 1124,
	1125, 182, 92, 182, 94, 182, 182, 559, 1254, 94,
	559, 1987, 2662, 93, 1906, 1668, 1912, 1142, 2029, 1666,
	1138, 559, 1139, 2654, 1254, 1266, 2409, 758, 1670, 1671,
	758, 2089, 1758, 1987, 2642, 95, 1140, 1141, 1137, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1151, 1150, 1152, 1153,
	2411, 184, 185, 186, 95, 1807, 2481, 2639, 100, 1698,
	1667, 1904, 1126, 1431, 2222, 2637, 1123, 1254, 1124, 1125,
	1724, 1126, 2381, 1254, 2409, 1123, 559, 1124, 1125, 94,
	101, 2030, 1802, 1803, 1804, 1987, 2579, 1806, 1808, 1668,
	2032, 100, 1472, 99, 2481, 1254, 2068, 1767, 1768, 1769,
	1770, 559, 94, 1757, 1686, 728, 1752, 559, 1394, 1122,
	1126, 1394, 1735, 1394, 1123, 1834, 1124, 1125, 1753, 1832,
	2645, 1126, 1254, 1998, 1502, 1123, 1904, 1124, 1125, 1987,
	2479, 1506, 1593, 1987, 1719, 2576, 1822, 1254, 1756, 1599,
	1600, 1700, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 559,
	1783, 1585, 1833, 1254, 1717, 2005, 1585, 1585, 1740, 1789,
	1254, 2414, 1254, 762, 1739, 2006, 762, 1126, 2029, 1755,
	1754, 1123, 1833, 1124, 1125, 1669, 2286, 2285, 1672, 1673,
	1126, 1543, 101, 2473, 1123, 1998, 1124, 1125, 2282, 2283,
	2282, 2281, 182, 100, 2006, 99, 2006, 1254, 1819, 182,
	1904, 1254, 1889, 2108, 182, 182, 1355, 2093, 182, 2006,
	182, 2085, 2086, 1827, 1697, 1794, 1830, 182, 1831, 1784,
	1779, 1780, 1797, 1795, 182, 1987, 1986, 1805, 1126, 645,
	2381, 2030, 1123, 2057, 1124, 1125, 1122, 1254, 2456, 1762,
	1889, 1763, 1764, 1765, 1766, 959, 1842, 1829, 1826, 1825,
	182, 960, 1784, 2284, 2383, 559, 2409, 1773, 1774, 1775,
	1776, 1391, 1254, 1355, 1354, 1843, 2197, 2379, 1300, 1299,
	1844, 1741, 2255, 1904, 1937, 1846, 1847, 1923, 1126, 1922,
	183, 1889, 1123, 183, 1124, 1125, 183, 1833, 2457, 2458,
	2459, 560, 1816, 183, 1880, 1881, 1712, 1258, 1852, 1883,
	1126, 183, 1677, 1540, 1123, 1483, 1124, 1125, 1884, 1286,
	2372, 942, 718, 1126, 941, 1423, 183, 1123, 2371, 1124,
	1125, 2704, 2669, 1562, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1151, 1150, 1152, 1153, 1947, 87, 2593, 560, 2307,
	1946, 560, 183, 560, 1716, 1899, 1873, 1901, 1261, 2764,
	1945, 2569, 2545, 1720, 2471, 1723, 1126, 2468, 1543, 2449,
	1123, 1900, 1124, 1125, 1126, 1424, 1425, 1426, 1123, 2062,
	1124, 1125, 2375, 2336, 1942, 2374, 1357, 1782, 2332, 2309,
	2305, 1126, 1024, 1941, 2094, 1123, 1126, 1124, 1125, 87,
	1123, 1940, 1124, 1125, 1778, 1772, 1126, 1771, 182, 1887,
	1123, 1471, 1124, 1125, 1938, 1386, 182, 1382, 1353, 113,
	1591, 559, 1971, 2594, 2460, 1958, 1589, 559, 2061, 1563,
	1126, 1420, 1898, 1793, 1123, 1690, 1124, 1125, 559, 1126,
	2421, 2422, 1975, 1123, 2762, 1124, 1125, 1126, 1530, 2718,
	2693, 1123, 2424, 1124, 1125, 2301, 2300, 2299, 2222, 2072,
	1126, 182, 1874, 2244, 1123, 182, 1124, 1125, 2245, 2427,
	1916, 2461, 2462, 2426, 37, 2062, 2241, 2242, 1421, 1422,
	2039, 2002, 2243, 2022, 2240, 2709, 2011, 2014, 2015, 2016,
	2012, 2680, 2013, 2017, 1704, 1668, 2421, 2422, 1262, 1988,
	1696, 2011, 2014, 2015, 2016, 2012, 1932, 2013, 2017, 2246,
	1531, 2015, 2016, 2515, 2415, 2514, 2214, 2216, 2202, 2201,
	1984, 2091, 2402, 2524, 559, 2217, 2621, 2405, 2526, 182,
	2401, 732, 1228, 2211, 1482, 1959, 182, 704, 2047, 733,
	1667, 2280, 1969, 2066, 989, 988, 2346, 2061, 559, 2021,
	2133, 92, 1094, 2101, 1543, 559, 1980, 2050, 2051, 1394,
	1394, 1861, 93, 2513, 559, 1985, 1871, 1872, 2043, 2084,
	1876, 2027, 2100, 120, 1995, 2407, 2105, 1714, 1715, 1879,
	94, 2744, 1914, 1603, 2104, 2638, 1882, 182, 182, 182,
	182, 182, 2031, 1252, 1248, 2034, 2589, 1604, 2297, 1877,
	92, 2044, 1789, 2041, 182, 182, 2064, 94, 1249, 2279,
	101, 93, 1885, 2019, 1701, 1866, 1252, 1248, 740, 741,
	182, 100, 2200, 99, 2054, 101, 2387, 1893, 2613, 2063,
	2199, 1249, 94, 1694, 1695, 1251, 100, 1250, 99, 1585,
	99, 2612, 2532, 1949, 1950, 2103, 2069, 2530, 2529, 2073,
	2074, 2075, 2522, 2469, 2406, 1374, 1245, 1246, 1251, 2404,
	1250, 2310, 1817, 1369, 2095, 2096, 101, 739, 100, 2521,
	2395, 714, 1998, 103, 1591, 1983, 1591, 100, 2173, 1591,
	1589, 1924, 1589, 559, 1688, 1589, 2163, 1280, 2102, 2720,
	2719, 2720, 1271, 106, 107, 2627, 2442, 730, 88, 559,
	1, 2695, 528, 2191, 1678, 1226, 2691, 2142, 1458, 1448,
	2125, 2492, 1650, 1651, 182, 2590, 2141, 2182, 559, 2182,
	2090, 1823, 2182, 2467, 2184, 1787, 950, 559, 2187, 145,
	1750, 1751, 2675, 2159, 559, 559, 110, 182, 182, 182,
	182, 182, 911, 109, 953, 2143, 1052, 2191, 1818, 182,
	183, 2482, 183, 2219, 182, 183, 720, 182, 2160, 182,
	2048, 1759, 182, 182, 182, 1306, 2234, 1304, 1305, 2228,
	1303, 1308, 2175, 2254, 1307, 2225, 1241, 2022, 1925, 2205,
	2225, 1534, 2131, 2190, 560, 2132, 560, 560, 556, 2204,
	2018, 180, 1295, 2192, 1272, 990, 518, 2295, 2287, 1850,
	524, 560, 560, 182, 1166, 1529, 2206, 2198, 2035, 2203,
	759, 752, 1689, 1973, 2230, 2399, 559, 2026, 2210, 2212,
	1990, 2215, 721, 2208, 2256, 559, 2620, 2257, 722, 2523,
	182, 2236, 2237, 2235, 2239, 2667, 2238, 2247, 2045, 1268,
	182, 1915, 2251, 2252, 2258, 95, 2316, 2193, 2194, 2195,
	1605, 1729, 1555, 2196, 1493, 182, 581, 580, 182, 2264,
	578, 1976, 1999, 2312, 1129, 648, 1963, 1281, 2347, 2010,
	2008, 2291, 2290, 2007, 1875, 1736, 2423, 2292, 2293, 2419,
	2754, 2070, 2687, 1731, 1727, 2324, 1982, 2323, 589, 2233,
	582, 574, 2439, 2322, 2111, 2333, 2113, 2046, 2329, 1107,
	2315, 1244, 568, 923, 2327, 1602, 2595, 2581, 1789, 1892,
	2368, 1243, 1615, 2311, 1616, 2302, 1810, 63, 41, 1643,
	563, 2705, 1098, 746, 32, 31, 30, 2378, 559, 182,
	29, 28, 2342, 23, 2341, 22, 2344, 2345, 21, 2116,
	2117, 2118, 2119, 2120, 2350, 183, 20, 19, 25, 560,
	560, 18, 17, 2349, 16, 2715, 1543, 2126, 2743, 115,
	2356, 50, 47, 45, 122, 183, 121, 48, 44, 1027,
	42, 27, 2134, 26, 15, 14, 13, 12, 11, 10,
	9, 5, 4, 35, 560, 34, 182, 33, 183, 1101,
	24, 2, 2077, 560, 1812, 2388, 2389, 0, 0, 560,
	0, 0, 0, 0, 2445, 0, 0, 2396, 0, 182,
	0, 2393, 2403, 0, 0, 0, 0, 2428, 0, 0,
	0, 2408, 0, 0, 0, 0, 0, 182, 0, 0,
	182, 182, 182, 0, 0, 2425, 0, 0, 0, 0,
	559, 559, 2418, 0, 0, 0, 2432, 0, 0, 0,
	0, 2433, 2324, 0, 2323, 0, 0, 0, 2440, 2441,
	0, 2474, 2475, 0, 2434, 2435, 0, 559, 559, 559,
	559, 0, 0, 0, 0, 2450, 0, 2452, 0, 0,
	0, 0, 2477, 0, 0, 0, 0, 0, 2353, 2354,
	0, 2355, 0, 0, 2357, 0, 2359, 2488, 2361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2486, 2487,
	0, 1591, 0, 1591, 0, 0, 0, 1589, 0, 1589,
	0, 182, 0, 0, 2501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2518, 0, 0,
	2497, 0, 0, 0, 0, 559, 0, 559, 2498, 0,
	0, 0, 183, 0, 2182, 2298, 2182, 0, 0, 2509,
	0, 0, 2510, 1591, 0, 2547, 37, 0, 0, 1589,
	2519, 0, 2528, 2539, 0, 714, 0, 2527, 2541, 2228,
	0, 0, 2319, 2228, 2225, 2537, 560, 2535, 0, 0,
	2543, 0, 2328, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 560, 560, 0, 560, 2340, 560, 560,
	2343, 560, 560, 560, 560, 560, 560, 0, 2551, 0,
	0, 0, 559, 2577, 0, 0, 560, 0, 0, 0,
	183, 0, 2573, 0, 2575, 2574, 0, 0, 0, 0,
	2548, 2549, 2592, 559, 2580, 2585, 183, 559, 559, 0,
	2584, 0, 0, 0, 0, 0, 0, 560, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 0, 183, 559, 0, 2617, 0,
	2616, 2392, 2614, 2615, 0, 0, 0, 0, 0, 0,
	0, 183, 2619, 0, 0, 0, 0, 2631, 183, 2630,
	559, 2628, 0, 0, 0, 714, 2228, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 560, 0, 629, 0,
	2634, 2636, 0, 0, 559, 182, 0, 0, 0, 0,
	560, 560, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 37, 0, 0, 2647, 0, 0, 183, 2644,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	559, 2448, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 0, 559, 559, 0, 2463,
	558, 0, 2464, 2465, 2466, 559, 0, 162, 2660, 0,
	2665, 37, 0, 0, 182, 559, 2592, 2676, 2668, 2670,
	2674, 0, 2225, 2683, 0, 0, 0, 0, 560, 0,
	2686, 0, 0, 0, 2702, 2694, 2699, 0, 0, 0,
	2708, 0, 0, 560, 560, 0, 0, 760, 0, 2042,
	915, 0, 922, 2714, 0, 559, 2717, 0, 0, 0,
	0, 0, 0, 559, 159, 0, 160, 1591, 0, 2731,
	2726, 0, 0, 1589, 2730, 2728, 2724, 0, 0, 2737,
	0, 0, 0, 0, 0, 0, 177, 0, 2745, 183,
	0, 0, 0, 0, 560, 0, 2750, 0, 0, 0,
	0, 0, 0, 0, 1591, 0, 2753, 2761, 0, 2760,
	1589, 1591, 0, 2763, 0, 0, 0, 1589, 183, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 560, 0, 0, 0, 0,
	183, 0, 183, 0, 183, 183, 560, 0, 0, 560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 0, 142, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 162,
	0, 0, 0, 0, 168, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	560, 0, 0, 0, 120, 0, 560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 159, 162, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 151, 150, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 0, 0, 0, 0, 0, 2648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 155, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 177, 0, 183, 0,
	0, 0, 0, 183, 183, 0, 0, 183, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 127, 153, 134, 126,
	0, 147, 148, 0, 0, 0, 0, 163, 0, 183,
	0, 0, 0, 0, 560, 0, 168, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 136, 131, 132, 133, 137, 0, 0, 0,
	0, 0, 0, 128, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 2553, 2555, 2554,
	2562, 2563, 2564, 2565, 2566, 2567, 2568, 611, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 760, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1097, 1099, 0, 0, 0, 0, 0, 155, 0, 630,
	0, 0, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 0, 0, 178, 0, 173,
	174, 175, 176, 0, 0, 0, 0, 183, 2083, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	560, 120, 0, 142, 0, 0, 560, 0, 0, 0,
	181, 0, 0, 514, 162, 155, 554, 560, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 149, 0, 0, 0, 0, 0, 0,
	183, 0, 1220, 0, 183, 152, 727, 0, 0, 0,
	141, 0, 143, 0, 0, 144, 0, 0, 0, 0,
	0, 1253, 745, 0, 745, 0, 0, 0, 0, 0,
	0, 159, 514, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1377,
	1378, 151, 150, 177, 0, 0, 0, 0, 1232, 1233,
	0, 0, 0, 560, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 0, 0,
	0, 0, 0, 1276, 560, 0, 0, 0, 0, 0,
	0, 0, 760, 560, 0, 0, 0, 0, 1296, 0,
	0, 0, 0, 0, 0, 156, 161, 158, 164, 165,
	166, 167, 169, 170, 171, 172, 183, 183, 183, 183,
	183, 173, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 183, 0, 0, 0, 0, 0,
	146, 1379, 153, 0, 1376, 0, 147, 148, 0, 183,
	0, 640, 163, 606, 608, 641, 642, 0, 604, 607,
	643, 168, 0, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 0, 0, 0, 0, 173,
	174, 175, 176, 0, 0, 0, 0, 609, 610, 2552,
	2556, 2557, 2558, 2559, 2560, 2561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 560, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 560, 560, 0, 183, 183, 183, 183,
	183, 0, 155, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 183, 0, 915, 183, 0, 183, 0,
	0, 183, 183, 183, 0, 0, 0, 0, 1220, 0,
	0, 0, 1400, 1400, 0, 1400, 0, 1400, 1400, 0,
	1409, 1400, 1400, 1400, 1400, 1400, 0, 0, 0, 0,
	0, 0, 0, 1220, 1220, 915, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 149, 0,
	0, 0, 0, 0, 560, 0, 1470, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 183,
	144, 0, 1490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 0,
	514, 0, 514, 0, 0, 514, 0, 0, 0, 760,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 560, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 0, 0, 0, 0, 0, 173, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 39, 40, 80, 0, 0, 0, 1598, 0, 0,
	0, 0, 0, 0, 1220, 183, 0, 0, 0, 0,
	84, 0, 1613, 1614, 43, 69, 70, 0, 67, 71,
	0, 0, 0, 0, 0, 0, 0, 68, 183, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 183,
	183, 183, 0, 1221, 0, 0, 56, 0, 0, 560,
	560, 0, 0, 1691, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 560, 560, 560,
	1703, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 514, 0, 760, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 760, 0,
	0, 0, 0, 0, 0, 727, 0, 0, 0, 915,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 0, 0,
	0, 0, 0, 0, 560, 0, 560, 0, 1373, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 0, 142, 922, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 46, 49, 52, 51, 54, 0, 66, 0, 915,
	75, 72, 0, 0, 0, 922, 0, 0, 0, 0,
	0, 560, 0, 1255, 1257, 152, 0, 0, 0, 0,
	141, 0, 0, 55, 83, 82, 0, 0, 64, 65,
	53, 560, 0, 0, 0, 0, 73, 74, 0, 0,
	0, 159, 0, 160, 0, 0, 0, 915, 0, 0,
	0, 0, 560, 0, 0, 0, 560, 560, 0, 1377,
	1378, 151, 150, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 57, 58, 0, 59, 60, 61, 62, 0,
	0, 0, 0, 0, 0, 560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 183, 0, 0, 0, 0, 0,
	0, 0, 655, 79, 0, 0, 744, 0, 0, 1221,
	0, 0, 0, 1886, 0, 0, 0, 0, 0, 0,
	146, 1379, 153, 0, 1376, 0, 147, 148, 0, 560,
	0, 0, 163, 0, 1221, 1221, 0, 0, 0, 0,
	514, 168, 0, 0, 0, 560, 560, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 1446, 0, 0, 81,
	0, 0, 0, 183, 560, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 572, 0, 0, 0, 0, 86,
	717, 0, 79, 0, 0, 1492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	717, 514, 0, 0, 560, 0, 738, 0, 514, 0,
	0, 0, 560, 0, 0, 0, 0, 1515, 1516, 514,
	514, 514, 514, 514, 514, 514, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 760, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	0, 0, 0, 0, 0, 1977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 745,
	745, 0, 0, 0, 0, 1221, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	144, 0, 0, 745, 1492, 745, 745, 745, 745, 745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 1446,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 1703, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 727, 0,
	0, 0, 2097, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 0, 0, 1492, 1609,
	514, 0, 514, 1610, 514, 1738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 0, 0, 0, 0, 0, 173, 174, 175, 176,
	0, 0, 0, 0, 0, 1255, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1220, 0, 1220, 0, 0, 1220, 0, 0, 0,
	0, 760, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1400, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2207, 0, 0, 0,
	0, 0, 0, 0, 0, 760, 0, 0, 0, 1220,
	0, 0, 2232, 1400, 1220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 514, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 514, 514, 0, 0, 514, 0, 1878,
	0, 0, 0, 0, 0, 0, 514, 1087, 0, 1087,
	1087, 0, 0, 514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 915, 0, 79, 1220, 0, 0,
	0, 0, 0, 1703, 0, 0, 0, 0, 0, 514,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 717, 1162, 1163, 1164, 0, 1167, 0,
	1169, 1170, 1171, 1172, 0, 1175, 1177, 1177, 1174, 1177,
	1181, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 0, 1205, 1206, 1207, 1208, 1209, 0,
	0, 0, 0, 1181, 1181, 1181, 1181, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1230, 0, 0, 745, 745, 0, 717, 0, 0, 0,
	717, 0, 0, 0, 1492, 0, 717, 514, 0, 0,
	0, 0, 0, 0, 0, 1446, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1905, 1270, 0, 0, 1909,
	0, 1910, 1911, 0, 0, 0, 0, 0, 0, 0,
	1919, 0, 0, 1920, 1921, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	514, 0, 0, 0, 514, 0, 0, 0, 1703, 1703,
	1927, 1928, 1929, 1930, 1931, 0, 1933, 0, 0, 0,
	1935, 0, 1936, 0, 0, 0, 1939, 0, 0, 0,
	0, 0, 0, 0, 1948, 2493, 2494, 2495, 2496, 0,
	0, 1953, 1954, 1955, 1956, 1957, 0, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 2076, 0, 0, 1220, 0,
	1220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1220, 0,
	0, 0, 0, 2540, 0, 2542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 514, 514, 514,
	514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 514, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	760, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2610, 1221, 0, 1221, 2610, 2610, 1221, 0, 0,
	0, 745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 0, 0, 0, 0, 0,
	0, 0, 0, 514, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 1703, 0,
	1221, 0, 0, 0, 0, 1221, 514, 514, 514, 514,
	514, 0, 0, 0, 0, 0, 0, 0, 2248, 0,
	0, 0, 1703, 514, 0, 0, 1446, 2170, 514, 1087,
	0, 514, 2259, 1492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 1087, 2183, 0, 0, 0, 0,
	0, 2188, 2189, 0, 0, 0, 1220, 0, 2661, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 760, 760, 0, 0, 0, 1550,
	1551, 1552, 1553, 2684, 0, 0, 0, 0, 1221, 0,
	0, 0, 0, 2689, 0, 0, 0, 0, 0, 514,
	0, 0, 0, 0, 0, 2231, 0, 0, 0, 514,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1595, 1596, 2249, 2250, 514, 0, 2713, 514, 1601, 0,
	0, 0, 0, 1703, 0, 0, 1323, 0, 0, 0,
	0, 2689, 0, 1637, 1638, 1639, 1640, 1641, 1642, 1644,
	572, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1323, 0, 0, 0, 0, 572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1710, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1730, 0, 0,
	2348, 0, 0, 0, 0, 0, 0, 2352, 0, 0,
	0, 1747, 0, 0, 0, 514, 0, 0, 0, 0,
	0, 2362, 2363, 2365, 2367, 0, 0, 0, 0, 0,
	0, 2373, 0, 0, 0, 0, 2377, 1311, 514, 0,
	0, 2380, 0, 0, 0, 0, 0, 2382, 0, 2384,
	0, 0, 2385, 0, 0, 0, 514, 0, 2390, 514,
	514, 514, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1311, 0, 0, 0, 0, 0, 0,
	0, 2412, 2413, 0, 0, 2417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2429, 2430, 0, 0, 0, 1324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1221,
	0, 1221, 0, 0, 0, 0, 0, 0, 0, 0,
	1446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 0, 0, 0, 0, 1221,
	0, 0, 1337, 1340, 1341, 1342, 1343, 1344, 1345, 2480,
	1346, 1347, 1348, 1349, 1350, 1325, 1326, 1327, 1328, 1309,
	1310, 1338, 0, 1312, 0, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 0, 0, 0, 0, 0, 1337, 1340,
	1341, 1342, 1343, 1344, 1345, 0, 1346, 1347, 1348, 1349,
	1350, 1325, 1326, 1327, 1328, 1309, 1310, 1338, 2507, 1312,
	2508, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1918, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2588, 0, 0,
	0, 0, 0, 0, 514, 1339, 0, 0, 0, 0,
	1174, 2598, 2599, 2600, 0, 2601, 2602, 0, 0, 0,
	0, 2605, 0, 2606, 2609, 0, 0, 0, 0, 1951,
	0, 0, 0, 0, 0, 0, 0, 1221, 0, 0,
	0, 0, 0, 0, 0, 0, 1968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2635, 0, 717, 0, 0, 0, 0, 0,
	0, 0, 0, 1446, 0, 0, 0, 0, 0, 1270,
	0, 0, 0, 0, 2003, 2004, 0, 0, 0, 0,
	0, 0, 0, 2023, 0, 2024, 2025, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2655, 0, 0, 0, 0, 0, 2656, 2657, 87, 0,
	0, 0, 0, 0, 649, 656, 657, 658, 659, 660,
	650, 652, 0, 0, 2663, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2671, 0, 0, 654, 661,
	662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2710, 0, 2098, 0, 2711,
	0, 0, 0, 0, 0, 2325, 2326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 664, 665,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 0, 0,
	0, 2138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2161,
	2162, 0, 0, 0, 2165, 0, 0, 0, 0, 2167,
	2168, 2169, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2174, 0, 0, 1653, 2176, 0, 2177, 2178, 0,
	0, 87, 2185, 2186, 0, 0, 0, 649, 656, 657,
	658, 659, 660, 650, 652, 0, 0, 0, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 654, 661, 662, 0, 0, 1730, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2229, 2220, 79, 0, 0, 1730,
	1730, 1730, 1730, 1730, 0, 0, 0, 0, 0, 0,
	0, 1972, 0, 0, 656, 657, 2023, 717, 2325, 2326,
	1590, 1730, 2253, 0, 1730, 0, 0, 0, 0, 0,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 640, 0, 0, 0, 641, 642, 0, 2308, 0,
	643, 0, 0, 0, 0, 0, 0, 0, 0, 656,
	657, 0, 0, 0, 2321, 1590, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 2351, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2370, 0, 0, 0, 0, 0, 0,
	2376, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1730, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2438, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2470, 0, 0, 0, 0, 2478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2499, 0, 2500, 0, 0, 0, 0, 2503, 2504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2512,
	2511, 2516, 2517, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2229, 0, 79, 2536, 2229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2544, 0,
	0, 2546, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2570, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2582,
	0, 0, 0, 0, 0, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2618, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 572,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2653, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2664, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 893, 878, 434, 2703, 825, 896, 794,
	813, 906, 816, 819, 860, 773, 839, 355, 810, 765,
	798, 768, 805, 769, 796, 827, 244, 793, 880, 843,
	895, 310, 241, 775, 799, 369, 815, 193, 862, 410,
	228, 320, 317, 441, 255, 247, 243, 227, 281, 327,
	367, 428, 361, 902, 314, 849, 0, 419, 340, 0,
	0, 0, 829, 884, 837, 874, 824, 861, 783, 848,
	897, 811, 857, 898, 287, 226, 192, 352, 420, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 2677, 0,
	2678, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	807, 854, 892, 808, 856, 239, 285, 246, 238, 438,
	903, 883, 772, 836, 891, 0, 0, 209, 337, 894,
	831, 0, 859, 0, 909, 767, 851, 0, 770, 774,
	905, 887, 802, 249, 0, 0, 0, 0, 0, 0,
	0, 828, 838, 871, 822, 0, 0, 0, 0, 0,
	0, 0, 800, 0, 847, 0, 0, 0, 779, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 826, 0, 0, 0, 782, 0, 801, 872, 0,
	764, 268, 776, 341, 231, 0, 876, 886, 823, 472,
	890, 821, 820, 866, 780, 882, 814, 309, 778, 293,
	188, 205, 0, 812, 351, 392, 398, 881, 797, 806,
	229, 804, 396, 365, 456, 213, 257, 389, 370, 394,
	377, 260, 846, 864, 395, 315, 443, 384, 453, 473,
	474, 237, 345, 463, 432, 469, 486, 206, 234, 359,
	425, 459, 416, 338, 439, 440, 292, 415, 266, 191,
	313, 479, 204, 404, 221, 211, 197, 427, 451, 218,
	407, 0, 0, 488, 199, 449, 424, 334, 289, 290,
	198, 0, 388, 242, 264, 232, 354, 446, 447, 230,
	489, 208, 468, 201, 1089, 467, 347, 442, 450, 335,
	325, 200, 448, 333, 324, 295, 253, 275, 382, 318,
	383, 276, 343, 342, 344, 194, 460, 0, 195, 0,
	421, 461, 490, 214, 215, 216, 792, 252, 256, 263,
	265, 271, 272, 279, 311, 358, 381, 379, 385, 877,
	437, 454, 464, 471, 477, 478, 480, 481, 482, 483,
	484, 485, 346, 278, 417, 294, 316, 869, 908, 364,
	397, 219, 458, 418, 787, 791, 785, 786, 841, 842,
	788, 899, 900, 901, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 873, 781, 0, 789, 790, 0, 879,
	888, 889, 509, 326, 409, 455, 296, 301, 304, 845,
	187, 202, 312, 904, 386, 261, 487, 466, 462, 766,
	784, 236, 795, 803, 0, 809, 817, 818, 830, 832,
	833, 834, 835, 852, 853, 855, 863, 865, 868, 870,
	875, 885, 907, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 844, 850, 323, 254, 273, 284,
	858, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	840, 867, 319, 435, 436, 280, 893, 878, 434, 0,
	825, 896, 794, 813, 906, 816, 819, 860, 773, 839,
	355, 810, 765, 798, 768, 805, 769, 796, 827, 244,
	793, 880, 843, 895, 310, 241, 775, 799, 369, 815,
	193, 862, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 902, 314, 849, 0,
	419, 340, 0, 0, 0, 829, 884, 837, 874, 824,
	861, 783, 848, 897, 811, 857, 898, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 807, 854, 892, 808, 856, 239, 285,
	246, 238, 438, 903, 883, 772, 836, 891, 0, 0,
	209, 337, 894, 831, 0, 859, 0, 909, 767, 851,
	0, 770, 774, 905, 887, 802, 249, 0, 0, 0,
	0, 0, 0, 0, 828, 838, 871, 822, 0, 0,
	0, 0, 0, 2260, 0, 800, 0, 847, 0, 0,
	0, 779, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 826, 0, 0, 0, 782, 0,
	801, 872, 0, 764, 268, 776, 341, 231, 0, 876,
	886, 823, 472, 890, 821, 820, 866, 780, 882, 814,
	309, 778, 293, 188, 205, 0, 812, 351, 392, 398,
	881, 797, 806, 229, 804, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 846, 864, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 486,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 488, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 489, 208, 468, 201, 1089, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 490, 214, 215, 216, 792,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 877, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 485, 346, 278, 417, 294, 316,
	869, 908, 364, 397, 219, 458, 418, 787, 791, 785,
	786, 841, 842, 788, 899, 900, 901, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 873, 781, 0, 789,
	790, 0, 879, 888, 889, 509, 326, 409, 455, 296,
	301, 304, 845, 187, 202, 312, 904, 386, 261, 487,
	466, 462, 766, 784, 236, 795, 803, 0, 809, 817,
	818, 830, 832, 833, 834, 835, 852, 853, 855, 863,
	865, 868, 870, 875, 885, 907, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 844, 850, 323,
	254, 273, 284, 858, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 840, 867, 319, 435, 436, 280, 893,
	878, 434, 0, 825, 896, 794, 813, 906, 816, 819,
	860, 773, 839, 355, 810, 765, 798, 768, 805, 769,
	796, 827, 244, 793, 880, 843, 895, 310, 241, 775,
	799, 369, 815, 193, 862, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 902,
	314, 849, 0, 419, 340, 0, 0, 0, 829, 884,
	837, 874, 824, 861, 783, 848, 897, 811, 857, 898,
	287, 226, 192, 352, 420, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 807, 854, 892, 808,
	856, 239, 285, 246, 238, 438, 903, 883, 772, 836,
	891, 0, 0, 209, 337, 894, 831, 0, 859, 0,
	909, 767, 851, 0, 770, 774, 905, 887, 802, 249,
	0, 0, 0, 0, 0, 0, 0, 828, 838, 871,
	822, 0, 0, 0, 0, 0, 2218, 0, 800, 0,
	847, 0, 0, 0, 779, 771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 826, 0, 0,
	0, 782, 0, 801, 872, 0, 764, 268, 776, 341,
	231, 0, 876, 886, 823, 472, 890, 821, 820, 866,
	780, 882, 814, 309, 778, 293, 188, 205, 0, 812,
	351, 392, 398, 881, 797, 806, 229, 804, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 846, 864,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 486, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 488,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 489, 208, 468, 201,
	1089, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 490, 214,
	215, 216, 792, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 877, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 485, 346, 278,
	417, 294, 316, 869, 908, 364, 397, 219, 458, 418,
	787, 791, 785, 786, 841, 842, 788, 899, 900, 901,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 873,
	781, 0, 789, 790, 0, 879, 888, 889, 509, 326,
	409, 455, 296, 301, 304, 845, 187, 202, 312, 904,
	386, 261, 487, 466, 462, 766, 784, 236, 795, 803,
	0, 809, 817, 818, 830, 832, 833, 834, 835, 852,
	853, 855, 863, 865, 868, 870, 875, 885, 907, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	844, 850, 323, 254, 273, 284, 858, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 840, 867, 319, 435,
	436, 280, 893, 878, 434, 0, 825, 896, 794, 813,
	906, 816, 819, 860, 773, 839, 355, 810, 765, 798,
	768, 805, 769, 796, 827, 244, 793, 880, 843, 895,
	310, 241, 775, 799, 369, 815, 193, 862, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 902, 314, 849, 0, 419, 340, 0, 0,
	0, 829, 884, 837, 874, 824, 861, 783, 848, 897,
	811, 857, 898, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 807,
	854, 892, 808, 856, 239, 285, 246, 238, 438, 903,
	883, 772, 836, 891, 0, 0, 209, 337, 894, 831,
	0, 859, 0, 909, 767, 851, 0, 770, 774, 905,
	887, 802, 249, 0, 0, 0, 0, 0, 0, 0,
	828, 838, 871, 822, 0, 0, 0, 0, 0, 1718,
	0, 800, 0, 847, 0, 0, 0, 779, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	826, 0, 0, 0, 782, 0, 801, 872, 0, 764,
	268, 776, 341, 231, 0, 876, 886, 823, 472, 890,
	821, 820, 866, 780, 882, 814, 309, 778, 293, 188,
	205, 0, 812, 351, 392, 398, 881, 797, 806, 229,
	804, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 846, 864, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 1089, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 792, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 877, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 869, 908, 364, 397,
	219, 458, 418, 787, 791, 785, 786, 841, 842, 788,
	899, 900, 901, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 873, 781, 0, 789, 790, 0, 879, 888,
	889, 509, 326, 409, 455, 296, 301, 304, 845, 187,
	202, 312, 904, 386, 261, 487, 466, 462, 766, 784,
	236, 795, 803, 0, 809, 817, 818, 830, 832, 833,
	834, 835, 852, 853, 855, 863, 865, 868, 870, 875,
	885, 907, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 844, 850, 323, 254, 273, 284, 858,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 840,
	867, 319, 435, 436, 280, 893, 878, 434, 0, 825,
	896, 794, 813, 906, 816, 819, 860, 773, 839, 355,
	810, 765, 798, 768, 805, 769, 796, 827, 244, 793,
	880, 843, 895, 310, 241, 775, 799, 369, 815, 193,
	862, 410, 228, 320, 317, 441, 255, 247, 243, 227,
	281, 327, 367, 428, 361, 902, 314, 849, 0, 419,
	340, 0, 0, 0, 829, 884, 837, 874, 824, 861,
	783, 848, 897, 811, 857, 898, 287, 226, 192, 352,
	420, 259, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 807, 854, 892, 808, 856, 239, 285, 246,
	238, 438, 903, 883, 772, 836, 891, 0, 0, 209,
	337, 894, 831, 0, 859, 0, 909, 767, 851, 0,
	770, 774, 905, 887, 802, 249, 0, 0, 0, 0,
	0, 0, 0, 828, 838, 871, 822, 0, 0, 0,
	0, 0, 0, 0, 800, 0, 847, 0, 0, 0,
	779, 771, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 0, 0, 0, 782, 0, 801,
	872, 0, 764, 268, 776, 341, 231, 0, 876, 886,
	823, 472, 890, 821, 820, 866, 780, 882, 814, 309,
	778, 293, 188, 205, 0, 812, 351, 392, 398, 881,
	797, 806, 229, 804, 396, 365, 456, 213, 257, 389,
	370, 394, 377, 260, 846, 864, 395, 315, 443, 384,
	453, 473, 474, 237, 345, 463, 432, 469, 486, 206,
	234, 359, 425, 459, 416, 338, 439, 440, 292, 415,
	266, 191, 313, 479, 204, 404, 221, 211, 197, 427,
	451, 218, 407, 0, 0, 488, 199, 449, 424, 334,
	289, 290, 198, 0, 388, 242, 264, 232, 354, 446,
	447, 230, 489, 208, 468, 201, 1089, 467, 347, 442,
	450, 335, 325, 200, 448, 333, 324, 295, 253, 275,
	382, 318, 383, 276, 343, 342, 344, 194, 460, 0,
	195, 0, 421, 461, 490, 214, 215, 216, 792, 252,
	256, 263, 265, 271, 272, 279, 311, 358, 381, 379,
	385, 877, 437, 454, 464, 471, 477, 478, 480, 481,
	482, 483, 484, 485, 346, 278, 417, 294, 316, 869,
	908, 364, 397, 219, 458, 418, 787, 791, 785, 786,
	841, 842, 788, 899, 900, 901, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 873, 781, 0, 789, 790,
	0, 879, 888, 889, 509, 326, 409, 455, 296, 301,
	304, 845, 187, 202, 312, 904, 386, 261, 487, 466,
	462, 766, 784, 236, 795, 803, 0, 809, 817, 818,
	830, 832, 833, 834, 835, 852, 853, 855, 863, 865,
	868, 870, 875, 885, 907, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 844, 850, 323, 254,
	273, 284, 858, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 840, 867, 319, 435, 436, 280, 893, 878,
	434, 0, 825, 896, 794, 813, 906, 816, 819, 860,
	773, 839, 355, 810, 765, 798, 768, 805, 769, 796,
	827, 244, 793, 880, 843, 895, 310, 241, 775, 799,
	369, 815, 193, 862, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 902, 314,
	849, 0, 419, 340, 0, 0, 0, 829, 884, 837,
	874, 824, 861, 783, 848, 897, 811, 857, 898, 287,
	226, 192, 352, 420, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 807, 854, 892, 808, 856,
	239, 285, 246, 238, 438, 903, 883, 772, 836, 891,
	0, 0, 209, 337, 894, 831, 0, 859, 0, 909,
	767, 851, 0, 770, 774, 905, 887, 802, 249, 0,
	0, 0, 0, 0, 0, 0, 828, 838, 871, 822,
	0, 0, 0, 0, 0, 0, 0, 800, 0, 847,
	0, 0, 0, 779, 771, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 826, 0, 0, 0,
	782, 0, 801, 872, 0, 764, 268, 776, 341, 231,
	0, 876, 886, 823, 472, 890, 821, 820, 866, 780,
	882, 814, 309, 778, 293, 188, 205, 0, 812, 351,
	392, 398, 881, 797, 806, 229, 804, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 846, 864, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 486, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 488, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 489, 208, 468, 201, 1089,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 490, 214, 215,
	216, 792, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 877, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 485, 346, 278, 417,
	294, 316, 869, 908, 364, 397, 219, 458, 418, 787,
	791, 785, 786, 841, 842, 788, 899, 900, 901, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 873, 781,
	0, 789, 790, 0, 879, 888, 889, 509, 326, 409,
	455, 296, 301, 304, 845, 187, 202, 312, 904, 386,
	261, 487, 466, 462, 766, 784, 236, 795, 803, 0,
	809, 817, 818, 830, 832, 833, 834, 835, 852, 853,
	855, 863, 865, 868, 870, 875, 885, 907, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 844,
	850, 323, 254, 273, 284, 858, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 840, 867, 319, 435, 436,
	280, 893, 878, 434, 0, 825, 896, 794, 813, 906,
	816, 819, 860, 773, 839, 355, 810, 765, 798, 768,
	805, 769, 796, 827, 244, 793, 880, 843, 895, 310,
	241, 775, 799, 369, 815, 193, 862, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 902, 314, 849, 0, 419, 340, 0, 0, 0,
	829, 884, 837, 874, 824, 861, 783, 848, 897, 811,
	857, 898, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 807, 854,
	892, 808, 856, 239, 285, 246, 238, 438, 903, 883,
	772, 836, 891, 0, 0, 910, 337, 894, 831, 0,
	859, 0, 909, 767, 851, 0, 770, 774, 905, 887,
	802, 249, 0, 0, 0, 0, 0, 0, 0, 828,
	838, 871, 822, 0, 0, 0, 0, 0, 0, 0,
	800, 0, 847, 0, 0, 0, 779, 771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 782, 0, 801, 872, 0, 764, 268,
	776, 341, 231, 0, 876, 886, 823, 472, 890, 821,
	820, 866, 780, 882, 814, 309, 778, 293, 188, 205,
	0, 812, 351, 392, 398, 881, 797, 806, 229, 804,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	846, 864, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 486, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 488, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 489, 208,
	468, 201, 777, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	490, 214, 215, 216, 792, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 877, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 485,
	763, 757, 756, 294, 316, 869, 908, 364, 397, 219,
	458, 418, 787, 791, 785, 786, 841, 842, 788, 899,
	900, 901, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 873, 781, 0, 789, 790, 0, 879, 888, 889,
	509, 326, 409, 455, 296, 301, 304, 845, 187, 202,
	312, 904, 386, 261, 487, 466, 462, 766, 784, 236,
	795, 803, 0, 809, 817, 818, 830, 832, 833, 834,
	835, 852, 853, 855, 863, 865, 868, 870, 875, 885,
	907, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 844, 850, 323, 254, 273, 284, 858, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 840, 867,
	319, 435, 436, 280, 893, 878, 434, 0, 825, 896,
	794, 813, 906, 816, 819, 860, 773, 839, 355, 810,
	765, 798, 768, 805, 769, 796, 827, 244, 793, 880,
	843, 895, 310, 241, 775, 799, 369, 815, 193, 862,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 902, 314, 849, 0, 419, 340,
	0, 0, 0, 829, 884, 837, 874, 824, 861, 783,
	848, 897, 811, 857, 898, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 807, 854, 892, 808, 856, 239, 285, 246, 238,
	438, 903, 883, 772, 836, 891, 0, 0, 910, 337,
	894, 831, 0, 859, 0, 909, 767, 851, 0, 770,
	774, 905, 887, 802, 249, 0, 0, 0, 0, 0,
	0, 0, 828, 838, 871, 822, 0, 0, 0, 0,
	0, 0, 0, 800, 0, 847, 0, 0, 0, 779,
	771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 826, 0, 0, 0, 782, 0, 801, 872,
	0, 764, 268, 776, 341, 231, 0, 876, 886, 823,
	472, 890, 821, 820, 866, 780, 882, 814, 309, 778,
	293, 188, 205, 0, 812, 351, 392, 398, 881, 797,
	806, 229, 804, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 846, 864, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 486, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 1287,
	218, 407, 0, 0, 488, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 489, 208, 468, 201, 777, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 490, 214, 215, 216, 792, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	877, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 485, 763, 757, 756, 294, 316, 869, 908,
	364, 397, 219, 458, 418, 787, 791, 785, 786, 841,
	842, 788, 899, 900, 901, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 873, 781, 0, 789, 790, 0,
	879, 888, 889, 509, 326, 409, 455, 296, 301, 304,
	845, 187, 202, 312, 904, 386, 261, 487, 466, 462,
	766, 784, 236, 795, 803, 0, 809, 817, 818, 830,
	832, 833, 834, 835, 852, 853, 855, 863, 865, 868,
	870, 875, 885, 907, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 844, 850, 323, 254, 273,
	284, 858, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 840, 867, 319, 435, 436, 280, 893, 878, 434,
	0, 825, 896, 794, 813, 906, 816, 819, 860, 773,
	839, 355, 810, 765, 798, 768, 805, 769, 796, 827,
	244, 793, 880, 843, 895, 310, 241, 775, 799, 369,
	815, 193, 862, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 902, 314, 849,
	0, 419, 340, 0, 0, 0, 829, 884, 837, 874,
	824, 861, 783, 848, 897, 811, 857, 898, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 807, 854, 892, 808, 856, 239,
	285, 246, 238, 438, 903, 883, 772, 836, 891, 0,
	0, 910, 337, 894, 831, 0, 859, 0, 909, 767,
	851, 0, 770, 774, 905, 887, 802, 249, 0, 0,
	0, 0, 0, 0, 0, 828, 838, 871, 822, 0,
	0, 0, 0, 0, 0, 0, 800, 0, 847, 0,
	0, 0, 779, 771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 826, 0, 0, 0, 782,
	0, 801, 872, 0, 764, 268, 776, 341, 231, 0,
	876, 886, 823, 472, 890, 821, 820, 866, 780, 882,
	814, 309, 778, 293, 188, 205, 0, 812, 351, 392,
	398, 881, 797, 806, 229, 804, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 846, 864, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 754, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 777, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	792, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 877, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 763, 757, 756, 294,
	316, 869, 908, 364, 397, 219, 458, 418, 787, 791,
	785, 786, 841, 842, 788, 899, 900, 901, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 873, 781, 0,
	789, 790, 0, 879, 888, 889, 509, 326, 409, 455,
	296, 301, 304, 845, 187, 202, 312, 904, 386, 261,
	487, 466, 462, 766, 784, 236, 795, 803, 0, 809,
	817, 818, 830, 832, 833, 834, 835, 852, 853, 855,
	863, 865, 868, 870, 875, 885, 907, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 844, 850,
	323, 254, 273, 284, 858, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 840, 867, 319, 435, 436, 280,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 1663, 0, 590, 0, 0,
	0, 244, 595, 0, 0, 0, 310, 241, 0, 1664,
	369, 0, 193, 0, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 602, 314,
	0, 0, 419, 340, 0, 0, 0, 0, 0, 597,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 352, 420, 259, 0, 87, 0, 0, 184,
	185, 186, 649, 656, 657, 658, 659, 660, 650, 652,
	0, 0, 217, 651, 224, 613, 615, 614, 622, 623,
	624, 625, 626, 627, 628, 611, 654, 661, 662, 0,
	239, 285, 246, 238, 438, 0, 0, 0, 0, 0,
	0, 0, 209, 337, 0, 0, 0, 0, 0, 0,
	0, 573, 587, 0, 601, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 585, 743, 0, 0, 0, 634,
	0, 586, 0, 0, 594, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 341, 231,
	0, 633, 0, 0, 472, 0, 0, 631, 0, 0,
	0, 0, 309, 0, 293, 188, 205, 0, 0, 351,
	392, 398, 0, 0, 0, 229, 0, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 0, 0, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 486, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 488, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 489, 208, 468, 201, 0,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 490, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 0, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 485, 346, 278, 417,
	294, 316, 0, 0, 364, 397, 219, 458, 418, 640,
	632, 606, 608, 641, 642, 603, 604, 607, 643, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 635, 593,
	592, 0, 599, 600, 0, 609, 610, 612, 616, 617,
	618, 619, 620, 621, 591, 187, 202, 312, 0, 386,
	261, 487, 466, 462, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 0,
	0, 323, 254, 273, 284, 0, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 434, 0, 319, 435, 436,
	280, 0, 0, 0, 0, 0, 0, 355, 0, 0,
	0, 0, 590, 0, 0, 0, 244, 595, 0, 0,
	0, 310, 241, 0, 0, 369, 0, 193, 0, 410,
	228, 320, 317, 441, 255, 247, 243, 227, 281, 327,
	367, 428, 361, 602, 314, 0, 0, 419, 340, 0,
	0, 0, 0, 0, 597, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 352, 420, 259,
	0, 87, 0, 0, 184, 185, 186, 649, 656, 657,
	658, 659, 660, 650, 652, 0, 0, 217, 651, 224,
	613, 615, 614, 622, 623, 624, 625, 626, 627, 628,
	611, 654, 661, 662, 0, 239, 285, 246, 238, 438,
	0, 0, 1645, 1646, 1647, 0, 0, 209, 337, 0,
	0, 0, 0, 0, 0, 0, 573, 587, 0, 601,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 584, 585,
	0, 0, 0, 0, 634, 0, 586, 0, 0, 594,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 341, 231, 0, 633, 0, 0, 472,
	0, 0, 631, 0, 0, 0, 0, 309, 0, 293,
	188, 205, 0, 0, 351, 392, 398, 0, 0, 0,
	229, 0, 396, 365, 456, 213, 257, 389, 370, 394,
	377, 260, 0, 0, 395, 315, 443, 384, 453, 473,
	474, 237, 345, 463, 432, 469, 486, 206, 234, 359,
	425, 459, 416, 338, 439, 440, 292, 415, 266, 191,
	313, 479, 204, 404, 221, 211, 197, 427, 451, 218,
	407, 0, 0, 488, 199, 449, 424, 334, 289, 290,
	198, 0, 388, 242, 264, 232, 354, 446, 447, 230,
	489, 208, 468, 201, 0, 467, 347, 442, 450, 335,
	325, 200, 448, 333, 324, 295, 253, 275, 382, 318,
	383, 276, 343, 342, 344, 194, 460, 0, 195, 0,
	421, 461, 490, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 311, 358, 381, 379, 385, 0,
	437, 454, 464, 471, 477, 478, 480, 481, 482, 483,
	484, 485, 346, 278, 417, 294, 316, 0, 0, 364,
	397, 219, 458, 418, 640, 632, 606, 608, 641, 642,
	603, 604, 607, 643, 491, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 0, 635, 593, 592, 0, 599, 600, 0,
	609, 610, 612, 616, 617, 618, 619, 620, 621, 591,
	187, 202, 312, 0, 386, 261, 487, 466, 462, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 322, 328,
	329, 330, 331, 348, 349, 350, 353, 356, 357, 360,
	362, 363, 366, 373, 374, 375, 376, 378, 380, 387,
	391, 399, 400, 401, 402, 403, 405, 406, 411, 412,
	413, 414, 422, 426, 444, 445, 457, 470, 475, 270,
	452, 476, 0, 321, 0, 0, 323, 254, 273, 284,
	0, 465, 423, 207, 393, 262, 196, 225, 210, 233,
	248, 251, 288, 332, 339, 368, 372, 267, 245, 223,
	390, 220, 408, 429, 430, 431, 433, 336, 240, 371,
	434, 0, 319, 435, 436, 280, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 590, 0, 0,
	0, 244, 595, 0, 0, 0, 310, 241, 0, 0,
	369, 0, 193, 0, 410, 228, 320, 317, 441, 255,
	247, 243, 227, 281, 327, 367, 428, 361, 602, 314,
	0, 0, 419, 340, 0, 0, 0, 0, 0, 597,
	598, 0, 0, 0, 0, 0, 0, 1745, 0, 287,
	226, 192, 352, 420, 259, 0, 87, 0, 0, 184,
	185, 186, 649, 656, 657, 658, 659, 660, 650, 652,
	0, 0, 217, 651, 224, 613, 615, 614, 622, 623,
	624, 625, 626, 627, 628, 611, 654, 661, 662, 1746,
	239, 285, 246, 238, 438, 0, 0, 0, 0, 0,
	0, 0, 209, 337, 0, 0, 0, 0, 0, 0,
	0, 573, 587, 0, 601, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 584, 585, 0, 0, 0, 0, 634,
	0, 586, 0, 0, 594, 663, 664, 665, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 341, 231,
	0, 633, 0, 0, 472, 0, 0, 631, 0, 0,
	0, 0, 309, 0, 293, 188, 205, 0, 0, 351,
	392, 398, 0, 0, 0, 229, 0, 396, 365, 456,
	213, 257, 389, 370, 394, 377, 260, 0, 0, 395,
	315, 443, 384, 453, 473, 474, 237, 345, 463, 432,
	469, 486, 206, 234, 359, 425, 459, 416, 338, 439,
	440, 292, 415, 266, 191, 313, 479, 204, 404, 221,
	211, 197, 427, 451, 218, 407, 0, 0, 488, 199,
	449, 424, 334, 289, 290, 198, 0, 388, 242, 264,
	232, 354, 446, 447, 230, 489, 208, 468, 201, 0,
	467, 347, 442, 450, 335, 325, 200, 448, 333, 324,
	295, 253, 275, 382, 318, 383, 276, 343, 342, 344,
	194, 460, 0, 195, 0, 421, 461, 490, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 311,
	358, 381, 379, 385, 0, 437, 454, 464, 471, 477,
	478, 480, 481, 482, 483, 484, 485, 346, 278, 417,
	294, 316, 0, 0, 364, 397, 219, 458, 418, 640,
	632, 606, 608, 641, 642, 603, 604, 607, 643, 491,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 0, 635, 593,
	592, 0, 599, 600, 0, 609, 610, 612, 616, 617,
	618, 619, 620, 621, 591, 187, 202, 312, 0, 386,
	261, 487, 466, 462, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 322, 328, 329, 330, 331, 348, 349,
	350, 353, 356, 357, 360, 362, 363, 366, 373, 374,
	375, 376, 378, 380, 387, 391, 399, 400, 401, 402,
	403, 405, 406, 411, 412, 413, 414, 422, 426, 444,
	445, 457, 470, 475, 270, 452, 476, 0, 321, 0,
	0, 323, 254, 273, 284, 0, 465, 423, 207, 393,
	262, 196, 225, 210, 233, 248, 251, 288, 332, 339,
	368, 372, 267, 245, 223, 390, 220, 408, 429, 430,
	431, 433, 336, 240, 371, 78, 434, 319, 435, 436,
	280, 0, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 590, 0, 0, 0, 244, 595, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 602, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 87, 0, 0, 184, 185, 186, 649, 656,
	657, 658, 659, 660, 650, 652, 0, 0, 217, 651,
	224, 613, 615, 614, 622, 623, 624, 625, 626, 627,
	628, 611, 654, 661, 662, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 573, 587, 0,
	601, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	585, 0, 0, 0, 0, 634, 0, 586, 0, 0,
	594, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 633, 0, 0,
	472, 0, 0, 631, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 486, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 488, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 489, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 490, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 485, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 640, 632, 606, 608, 641,
	642, 603, 604, 607, 643, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 635, 593, 592, 0, 599, 600,
	0, 609, 610, 612, 616, 617, 618, 619, 620, 621,
	591, 187, 202, 312, 86, 386, 261, 487, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 590, 0,
	0, 0, 244, 595, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 602,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 87, 0, 0,
	184, 185, 186, 649, 656, 657, 658, 659, 660, 650,
	652, 0, 0, 217, 651, 224, 613, 615, 614, 622,
	623, 624, 625, 626, 627, 628, 611, 654, 661, 662,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 573, 587, 0, 601, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 585, 0, 0, 0, 0,
	634, 0, 586, 0, 0, 594, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 633, 0, 0, 472, 0, 0, 631, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 2643, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 486, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 488,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 489, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 490, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 485, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	640, 632, 606, 608, 641, 642, 603, 604, 607, 643,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 635,
	593, 592, 0, 599, 600, 0, 609, 610, 612, 616,
	617, 618, 619, 620, 621, 591, 187, 202, 312, 0,
	386, 261, 487, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 590, 0, 0, 0, 244, 595, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 602, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 87, 0, 1254, 184, 185, 186, 649, 656,
	657, 658, 659, 660, 650, 652, 0, 0, 217, 651,
	224, 613, 615, 614, 622, 623, 624, 625, 626, 627,
	628, 611, 654, 661, 662, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 573, 587, 0,
	601, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	585, 0, 0, 0, 0, 634, 0, 586, 0, 0,
	594, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 633, 0, 0,
	472, 0, 0, 631, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 486, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 488, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 489, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 490, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 485, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 640, 632, 606, 608, 641,
	642, 603, 604, 607, 643, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 635, 593, 592, 0, 599, 600,
	0, 609, 610, 612, 616, 617, 618, 619, 620, 621,
	591, 187, 202, 312, 0, 386, 261, 487, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 590, 0,
	0, 0, 244, 595, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 602,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 87, 0, 0,
	184, 185, 186, 649, 656, 657, 658, 659, 660, 650,
	652, 0, 0, 217, 651, 224, 613, 615, 614, 622,
	623, 624, 625, 626, 627, 628, 611, 654, 661, 662,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 573, 587, 0, 601, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 585, 743, 0, 0, 0,
	634, 0, 586, 0, 0, 594, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 633, 0, 0, 472, 0, 0, 631, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 486, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 488,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 489, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 490, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 485, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	640, 632, 606, 608, 641, 642, 603, 604, 607, 643,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 635,
	593, 592, 0, 599, 600, 0, 609, 610, 612, 616,
	617, 618, 619, 620, 621, 591, 187, 202, 312, 0,
	386, 261, 487, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 590, 0, 0, 0, 244, 595, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 602, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 597, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 87, 0, 0, 184, 185, 186, 649, 656,
	657, 658, 659, 660, 650, 652, 0, 0, 217, 651,
	224, 613, 615, 614, 622, 623, 624, 625, 626, 627,
	628, 611, 654, 661, 662, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 573, 587, 0,
	601, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 584,
	585, 0, 0, 0, 0, 634, 0, 586, 0, 0,
	594, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 596, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 633, 0, 0,
	472, 0, 0, 631, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 486, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 488, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 489, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 490, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 485, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 640, 632, 606, 608, 641,
	642, 603, 604, 607, 643, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 635, 593, 592, 0, 599, 600,
	0, 609, 610, 612, 616, 617, 618, 619, 620, 621,
	591, 187, 202, 312, 0, 386, 261, 487, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 590, 0,
	0, 0, 244, 595, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 602,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	597, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 87, 0, 0,
	184, 185, 186, 649, 656, 657, 658, 659, 660, 650,
	652, 0, 0, 217, 651, 224, 613, 615, 614, 622,
	623, 624, 625, 626, 627, 628, 611, 654, 661, 662,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 587, 0, 601, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 584, 585, 0, 0, 0, 0,
	634, 0, 586, 0, 0, 594, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 596, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 633, 0, 0, 472, 0, 0, 631, 0,
	0, 0, 0, 309, 0, 293, 188, 205, 0, 0,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 486, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 488,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 489, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 490, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 485, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	640, 632, 606, 608, 641, 642, 603, 604, 607, 643,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 635,
	593, 592, 0, 599, 600, 0, 609, 610, 612, 616,
	617, 618, 619, 620, 621, 591, 187, 202, 312, 0,
	386, 261, 487, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 434, 0, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 310, 241, 0, 0, 369, 0, 193, 0,
	410, 228, 320, 317, 441, 255, 247, 243, 227, 281,
	327, 367, 428, 361, 0, 314, 0, 0, 419, 340,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 352, 420,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 656,
	657, 0, 0, 0, 0, 1590, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	438, 0, 0, 0, 0, 0, 0, 0, 209, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 341, 231, 0, 0, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 309, 0,
	293, 188, 205, 0, 0, 351, 392, 398, 0, 0,
	0, 229, 0, 396, 365, 456, 213, 257, 389, 370,
	394, 377, 260, 0, 0, 395, 315, 443, 384, 453,
	473, 474, 237, 345, 463, 432, 469, 486, 206, 234,
	359, 425, 459, 416, 338, 439, 440, 292, 415, 266,
	191, 313, 479, 204, 404, 221, 211, 197, 427, 451,
	218, 407, 0, 0, 488, 199, 449, 424, 334, 289,
	290, 198, 0, 388, 242, 264, 232, 354, 446, 447,
	230, 489, 208, 468, 201, 0, 467, 347, 442, 450,
	335, 325, 200, 448, 333, 324, 295, 253, 275, 382,
	318, 383, 276, 343, 342, 344, 194, 460, 0, 195,
	0, 421, 461, 490, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 311, 358, 381, 379, 385,
	0, 437, 454, 464, 471, 477, 478, 480, 481, 482,
	483, 484, 485, 346, 278, 417, 294, 316, 0, 0,
	364, 397, 219, 458, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 491, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 326, 409, 455, 296, 301, 304,
	0, 187, 202, 312, 0, 386, 261, 487, 466, 462,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 322,
	328, 329, 330, 331, 348, 349, 350, 353, 356, 357,
	360, 362, 363, 366, 373, 374, 375, 376, 378, 380,
	387, 391, 399, 400, 401, 402, 403, 405, 406, 411,
	412, 413, 414, 422, 426, 444, 445, 457, 470, 475,
	270, 452, 476, 0, 321, 0, 0, 323, 254, 273,
	284, 0, 465, 423, 207, 393, 262, 196, 225, 210,
	233, 248, 251, 288, 332, 339, 368, 372, 267, 245,
	223, 390, 220, 408, 429, 430, 431, 433, 336, 240,
	371, 434, 0, 319, 435, 436, 280, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 310, 241, 0,
	0, 369, 0, 193, 0, 410, 228, 320, 317, 441,
	255, 247, 243, 227, 281, 327, 367, 428, 361, 0,
	314, 0, 0, 419, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 352, 420, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 438, 0, 0, 0, 0,
	0, 0, 0, 209, 337, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 341,
	231, 0, 0, 0, 957, 472, 0, 0, 0, 0,
	0, 954, 955, 309, 918, 293, 188, 205, 948, 952,
	351, 392, 398, 0, 0, 0, 229, 0, 396, 365,
	456, 213, 257, 389, 370, 394, 377, 260, 0, 0,
	395, 315, 443, 384, 453, 473, 474, 237, 345, 463,
	432, 469, 486, 206, 234, 359, 425, 459, 416, 338,
	439, 440, 292, 415, 266, 191, 313, 479, 204, 404,
	221, 211, 197, 427, 451, 218, 407, 0, 0, 488,
	199, 449, 424, 334, 289, 290, 198, 0, 388, 242,
	264, 232, 354, 446, 447, 230, 489, 208, 468, 201,
	0, 467, 347, 442, 450, 335, 325, 200, 448, 333,
	324, 295, 253, 275, 382, 318, 383, 276, 343, 342,
	344, 194, 460, 0, 195, 0, 421, 461, 490, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	311, 358, 381, 379, 385, 0, 437, 454, 464, 471,
	477, 478, 480, 481, 482, 483, 484, 485, 346, 278,
	417, 294, 316, 0, 0, 364, 397, 219, 458, 418,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 509, 326,
	409, 455, 296, 301, 304, 0, 187, 202, 312, 0,
	386, 261, 487, 466, 462, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 322, 328, 329, 330, 331, 348,
	349, 350, 353, 356, 357, 360, 362, 363, 366, 373,
	374, 375, 376, 378, 380, 387, 391, 399, 400, 401,
	402, 403, 405, 406, 411, 412, 413, 414, 422, 426,
	444, 445, 457, 470, 475, 270, 452, 476, 0, 321,
	0, 0, 323, 254, 273, 284, 0, 465, 423, 207,
	393, 262, 196, 225, 210, 233, 248, 251, 288, 332,
	339, 368, 372, 267, 245, 223, 390, 220, 408, 429,
	430, 431, 433, 336, 240, 371, 78, 434, 319, 435,
	436, 280, 0, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 310, 241, 0, 0, 369, 0, 193,
	0, 410, 228, 320, 317, 441, 255, 247, 243, 227,
	281, 327, 367, 428, 361, 0, 314, 0, 0, 419,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 352,
	420, 259, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 438, 0, 0, 0, 0, 0, 0, 0, 209,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 341, 231, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 293, 188, 205, 0, 0, 351, 392, 398, 0,
	0, 0, 229, 0, 396, 365, 456, 213, 257, 389,
	370, 394, 377, 260, 0, 0, 395, 315, 443, 384,
	453, 473, 474, 237, 345, 463, 432, 469, 486, 206,
	234, 359, 425, 459, 416, 338, 439, 440, 292, 415,
	266, 191, 313, 479, 204, 404, 221, 211, 197, 427,
	451, 218, 407, 0, 0, 488, 199, 449, 424, 334,
	289, 290, 198, 0, 388, 242, 264, 232, 354, 446,
	447, 230, 489, 208, 468, 201, 0, 467, 347, 442,
	450, 335, 325, 200, 448, 333, 324, 295, 253, 275,
	382, 318, 383, 276, 343, 342, 344, 194, 460, 0,
	195, 0, 421, 461, 490, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 311, 358, 381, 379,
	385, 0, 437, 454, 464, 471, 477, 478, 480, 481,
	482, 483, 484, 485, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 326, 409, 455, 296, 301,
	304, 0, 187, 202, 312, 86, 386, 261, 487, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	1733, 0, 0, 1732, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 434, 0, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 1275, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 310, 241,
	0, 0, 369, 0, 193, 0, 410, 228, 320, 317,
	441, 255, 247, 243, 227, 281, 327, 367, 428, 361,
	0, 314, 0, 0, 419, 340, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 352, 420, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1277, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 438, 0, 0, 0,
	0, 0, 0, 0, 209, 1273, 0, 0, 0, 1123,
	0, 1124, 1125, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	341, 231, 0, 0, 0, 0, 472, 0, 0, 0,
	0, 0, 0, 0, 309, 0, 293, 188, 205, 0,
	0, 351, 392, 398, 0, 0, 0, 229, 0, 396,
	365, 456, 213, 257, 389, 370, 394, 377, 260, 0,
	0, 395, 315, 443, 384, 453, 473, 474, 237, 345,
	463, 432, 469, 486, 206, 234, 359, 425, 459, 416,
	338, 439, 440, 292, 415, 266, 191, 313, 479, 204,
	404, 221, 211, 197, 427, 451, 218, 407, 0, 0,
	488, 199, 449, 424, 334, 289, 290, 198, 0, 388,
	242, 264, 232, 354, 446, 447, 230, 489, 208, 468,
	201, 0, 467, 347, 442, 450, 335, 325, 200, 448,
	333, 324, 295, 253, 275, 382, 318, 383, 276, 343,
	342, 344, 194, 460, 0, 195, 0, 421, 461, 490,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 311, 358, 381, 379, 385, 0, 437, 454, 464,
	471, 477, 478, 480, 481, 482, 483, 484, 485, 346,
	278, 417, 294, 316, 0, 0, 364, 397, 219, 458,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 509,
	326, 409, 455, 296, 301, 304, 0, 187, 202, 312,
	0, 386, 261, 487, 466, 462, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 322, 328, 329, 330, 331,
	348, 349, 350, 353, 356, 357, 360, 362, 363, 366,
	373, 374, 375, 376, 378, 380, 387, 391, 399, 400,
	401, 402, 403, 405, 406, 411, 412, 413, 414, 422,
	426, 444, 445, 457, 470, 475, 270, 452, 476, 0,
	321, 0, 0, 323, 254, 273, 284, 0, 465, 423,
	207, 393, 262, 196, 225, 210, 233, 248, 251, 288,
	332, 339, 368, 372, 267, 245, 223, 390, 220, 408,
	429, 430, 431, 433, 336, 240, 371, 434, 0, 319,
	435, 436, 280, 0, 0, 0, 0, 0, 0, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 310, 241, 0, 0, 369, 0, 193,
	0, 410, 228, 320, 317, 441, 255, 247, 243, 227,
	281, 327, 367, 428, 361, 0, 314, 0, 0, 419,
	340, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 352,
	420, 259, 0, 0, 0, 0, 184, 185, 186, 1216,
	1219, 0, 0, 0, 0, 1215, 1218, 0, 0, 217,
	1214, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 438, 0, 0, 0, 0, 0, 0, 0, 209,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 341, 231, 0, 0, 0,
	0, 472, 0, 0, 0, 0, 0, 0, 0, 309,
	0, 293, 188, 205, 0, 0, 351, 392, 398, 0,
	0, 0, 229, 0, 396, 365, 456, 213, 257, 389,
	370, 394, 377, 260, 0, 0, 395, 315, 443, 384,
	453, 473, 474, 237, 345, 463, 432, 469, 486, 206,
	234, 359, 425, 459, 416, 338, 439, 440, 292, 415,
	266, 191, 313, 479, 204, 404, 221, 211, 197, 427,
	451, 218, 407, 0, 0, 488, 199, 449, 424, 334,
	289, 290, 198, 0, 388, 242, 264, 232, 354, 446,
	447, 230, 489, 208, 468, 201, 0, 467, 347, 442,
	450, 335, 325, 200, 448, 333, 324, 295, 253, 275,
	382, 318, 383, 276, 343, 342, 344, 194, 460, 0,
	195, 0, 421, 461, 490, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 311, 358, 381, 379,
	385, 0, 437, 454, 464, 471, 477, 478, 480, 481,
	482, 483, 484, 485, 346, 278, 417, 294, 316, 0,
	0, 364, 397, 219, 458, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 509, 326, 409, 455, 296, 301,
	304, 0, 187, 202, 312, 0, 386, 261, 487, 466,
	462, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	322, 328, 329, 330, 331, 348, 349, 350, 353, 356,
	357, 360, 362, 363, 366, 373, 374, 375, 376, 378,
	380, 387, 391, 399, 400, 401, 402, 403, 405, 406,
	411, 412, 413, 414, 422, 426, 444, 445, 457, 470,
	475, 270, 452, 476, 0, 321, 0, 0, 323, 254,
	273, 284, 0, 465, 423, 207, 393, 262, 196, 225,
	210, 233, 248, 251, 288, 332, 339, 368, 372, 267,
	245, 223, 390, 220, 408, 429, 430, 431, 433, 336,
	240, 371, 78, 434, 319, 435, 436, 280, 0, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 87,
	0, 1254, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 486, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 488, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 489, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	490, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 485,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 86, 386, 261, 487, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 486,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 488, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 489, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 490, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 485, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 487,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 1733, 0, 0, 1732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 1685,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1447, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 1683, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 486, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 488, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 489, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	490, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 485,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 487, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 918, 293, 188, 205, 916, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 486,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 488, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 489, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 490, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 485, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 487,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 1685,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1447, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 486, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 488, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 489, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	490, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 485,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 487, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 1254, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 2611, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 486,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 488, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 489, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 490, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 485, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 487,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1993, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1994, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 486, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 488, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 489, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	490, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 485,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 487, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 1978, 0, 0, 0, 1979, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 486,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 488, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 489, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 490, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 485, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 487,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 1298, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1297, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 486, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 488, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 489, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	490, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 485,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 487, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 2685, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 486,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 488, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 489, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 490, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 485, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 487,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 434, 0, 319, 435, 436, 280, 0,
	0, 0, 0, 0, 0, 355, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 310,
	241, 0, 0, 369, 0, 193, 0, 410, 228, 320,
	317, 441, 255, 247, 243, 227, 281, 327, 367, 428,
	361, 0, 314, 0, 0, 419, 340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 352, 420, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 438, 0, 0,
	0, 0, 0, 0, 0, 209, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 341, 231, 0, 0, 0, 0, 472, 0, 0,
	0, 2611, 0, 0, 0, 309, 0, 293, 188, 205,
	0, 0, 351, 392, 398, 0, 0, 0, 229, 0,
	396, 365, 456, 213, 257, 389, 370, 394, 377, 260,
	0, 0, 395, 315, 443, 384, 453, 473, 474, 237,
	345, 463, 432, 469, 486, 206, 234, 359, 425, 459,
	416, 338, 439, 440, 292, 415, 266, 191, 313, 479,
	204, 404, 221, 211, 197, 427, 451, 218, 407, 0,
	0, 488, 199, 449, 424, 334, 289, 290, 198, 0,
	388, 242, 264, 232, 354, 446, 447, 230, 489, 208,
	468, 201, 0, 467, 347, 442, 450, 335, 325, 200,
	448, 333, 324, 295, 253, 275, 382, 318, 383, 276,
	343, 342, 344, 194, 460, 0, 195, 0, 421, 461,
	490, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 311, 358, 381, 379, 385, 0, 437, 454,
	464, 471, 477, 478, 480, 481, 482, 483, 484, 485,
	346, 278, 417, 294, 316, 0, 0, 364, 397, 219,
	458, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	509, 326, 409, 455, 296, 301, 304, 0, 187, 202,
	312, 0, 386, 261, 487, 466, 462, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 322, 328, 329, 330,
	331, 348, 349, 350, 353, 356, 357, 360, 362, 363,
	366, 373, 374, 375, 376, 378, 380, 387, 391, 399,
	400, 401, 402, 403, 405, 406, 411, 412, 413, 414,
	422, 426, 444, 445, 457, 470, 475, 270, 452, 476,
	0, 321, 0, 0, 323, 254, 273, 284, 0, 465,
	423, 207, 393, 262, 196, 225, 210, 233, 248, 251,
	288, 332, 339, 368, 372, 267, 245, 223, 390, 220,
	408, 429, 430, 431, 433, 336, 240, 371, 434, 0,
	319, 435, 436, 280, 0, 0, 0, 0, 0, 0,
	355, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 310, 241, 0, 0, 369, 0,
	193, 0, 410, 228, 320, 317, 441, 255, 247, 243,
	227, 281, 327, 367, 428, 361, 0, 314, 0, 0,
	419, 340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	352, 420, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1447, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 438, 0, 0, 0, 0, 0, 0, 0,
	209, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 341, 231, 0, 0,
	0, 0, 472, 0, 0, 0, 0, 0, 0, 0,
	309, 0, 293, 188, 205, 0, 0, 351, 392, 398,
	0, 0, 0, 229, 0, 396, 365, 456, 213, 257,
	389, 370, 394, 377, 260, 0, 0, 395, 315, 443,
	384, 453, 473, 474, 237, 345, 463, 432, 469, 486,
	206, 234, 359, 425, 459, 416, 338, 439, 440, 292,
	415, 266, 191, 313, 479, 204, 404, 221, 211, 197,
	427, 451, 218, 407, 0, 0, 488, 199, 449, 424,
	334, 289, 290, 198, 0, 388, 242, 264, 232, 354,
	446, 447, 230, 489, 208, 468, 201, 0, 467, 347,
	442, 450, 335, 325, 200, 448, 333, 324, 295, 253,
	275, 382, 318, 383, 276, 343, 342, 344, 194, 460,
	0, 195, 0, 421, 461, 490, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 311, 358, 381,
	379, 385, 0, 437, 454, 464, 471, 477, 478, 480,
	481, 482, 483, 484, 485, 346, 278, 417, 294, 316,
	0, 0, 364, 397, 219, 458, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 491, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 509, 326, 409, 455, 296,
	301, 304, 0, 187, 202, 312, 0, 386, 261, 487,
	466, 462, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 322, 328, 329, 330, 331, 348, 349, 350, 353,
	356, 357, 360, 362, 363, 366, 373, 374, 375, 376,
	378, 380, 387, 391, 399, 400, 401, 402, 403, 405,
	406, 411, 412, 413, 414, 422, 426, 444, 445, 457,
	470, 475, 270, 452, 476, 0, 321, 0, 0, 323,
	254, 273, 284, 0, 465, 423, 207, 393, 262, 196,
	225, 210, 233, 248, 251, 288, 332, 339, 368, 372,
	267, 245, 223, 390, 220, 408, 429, 430, 431, 433,
	336, 240, 371, 0, 434, 319, 435, 436, 280, 1734,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1277, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1154, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 1541, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 1419, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 1417, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 1415, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 1413, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 1411, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 1407, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 1405, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 1403, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	1380, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 1282,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1100, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 725, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 564, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 512, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 2690, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 434, 0, 319, 435, 436, 280,
	0, 0, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	310, 241, 0, 0, 369, 0, 193, 0, 410, 228,
	320, 317, 441, 255, 247, 243, 227, 281, 327, 367,
	428, 361, 0, 314, 0, 0, 419, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 352, 420, 259, 0,
	0, 0, 0, 184, 2391, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 438, 0,
	0, 0, 0, 0, 0, 0, 209, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 341, 231, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 0, 309, 0, 293, 188,
	205, 0, 0, 351, 392, 398, 0, 0, 0, 229,
	0, 396, 365, 456, 213, 257, 389, 370, 394, 377,
	260, 0, 0, 395, 315, 443, 384, 453, 473, 474,
	237, 345, 463, 432, 469, 486, 206, 234, 359, 425,
	459, 416, 338, 439, 440, 292, 415, 266, 191, 313,
	479, 204, 404, 221, 211, 197, 427, 451, 218, 407,
	0, 0, 488, 199, 449, 424, 334, 289, 290, 198,
	0, 388, 242, 264, 232, 354, 446, 447, 230, 489,
	208, 468, 201, 0, 467, 347, 442, 450, 335, 325,
	200, 448, 333, 324, 295, 253, 275, 382, 318, 383,
	276, 343, 342, 344, 194, 460, 0, 195, 0, 421,
	461, 490, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 311, 358, 381, 379, 385, 0, 437,
	454, 464, 471, 477, 478, 480, 481, 482, 483, 484,
	485, 346, 278, 417, 294, 316, 0, 0, 364, 397,
	219, 458, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 491, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 509, 326, 409, 455, 296, 301, 304, 0, 187,
	202, 312, 0, 386, 261, 487, 466, 462, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 322, 328, 329,
	330, 331, 348, 349, 350, 353, 356, 357, 360, 362,
	363, 366, 373, 374, 375, 376, 378, 380, 387, 391,
	399, 400, 401, 402, 403, 405, 406, 411, 412, 413,
	414, 422, 426, 444, 445, 457, 470, 475, 270, 452,
	476, 0, 321, 0, 0, 323, 254, 273, 284, 0,
	465, 423, 207, 393, 262, 196, 225, 210, 233, 248,
	251, 288, 332, 339, 368, 372, 267, 245, 223, 390,
	220, 408, 429, 430, 431, 433, 336, 240, 371, 434,
	0, 319, 435, 436, 280, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 310, 241, 0, 0, 369,
	0, 193, 0, 410, 228, 320, 317, 441, 255, 247,
	243, 227, 281, 327, 367, 428, 361, 0, 314, 0,
	0, 419, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 352, 420, 259, 0, 0, 0, 0, 184, 1974,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 438, 0, 0, 0, 0, 0, 0,
	0, 209, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 341, 231, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 309, 0, 293, 188, 205, 0, 0, 351, 392,
	398, 0, 0, 0, 229, 0, 396, 365, 456, 213,
	257, 389, 370, 394, 377, 260, 0, 0, 395, 315,
	443, 384, 453, 473, 474, 237, 345, 463, 432, 469,
	486, 206, 234, 359, 425, 459, 416, 338, 439, 440,
	292, 415, 266, 191, 313, 479, 204, 404, 221, 211,
	197, 427, 451, 218, 407, 0, 0, 488, 199, 449,
	424, 334, 289, 290, 198, 0, 388, 242, 264, 232,
	354, 446, 447, 230, 489, 208, 468, 201, 0, 467,
	347, 442, 450, 335, 325, 200, 448, 333, 324, 295,
	253, 275, 382, 318, 383, 276, 343, 342, 344, 194,
	460, 0, 195, 0, 421, 461, 490, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 311, 358,
	381, 379, 385, 0, 437, 454, 464, 471, 477, 478,
	480, 481, 482, 483, 484, 485, 346, 278, 417, 294,
	316, 0, 0, 364, 397, 219, 458, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 491, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 509, 326, 409, 455,
	296, 301, 304, 0, 187, 202, 312, 0, 386, 261,
	487, 466, 462, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 322, 328, 329, 330, 331, 348, 349, 350,
	353, 356, 357, 360, 362, 363, 366, 373, 374, 375,
	376, 378, 380, 387, 391, 399, 400, 401, 402, 403,
	405, 406, 411, 412, 413, 414, 422, 426, 444, 445,
	457, 470, 475, 270, 452, 476, 0, 321, 0, 0,
	323, 254, 273, 284, 0, 465, 423, 207, 393, 262,
	196, 225, 210, 233, 248, 251, 288, 332, 339, 368,
	372, 267, 245, 223, 390, 220, 408, 429, 430, 431,
	433, 336, 240, 371, 0, 0, 319, 435, 436, 280,
}

var yyPact = [...]int{
	3744, -1000, -397, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1850, 1875, -1000, -1000,
	-1000, -1000, 1953, -1000, 673, 1606, -1000, 1814, 2807, -1000,
	37362, 438, -1000, 36232, 434, 263, 37362, -1000, 115, -1000,
	107, 37362, 110, 35667, -1000, -1000, -302, 15889, 1765, 12,
	9, 37362, -1000, -1000, -1000, -1000, 1931, 1586, -1000, 306,
	-1000, -1000, -1000, -1000, -1000, -1000, 35102, -1000, -1000, -1000,
	1823, 1801, 1957, 585, 1761, -1000, 1892, 1586, -1000, 15889,
	1920, 1867, 15324, -1000, 15324, 349, -1000, -1000, 11362, -1000,
	-1000, 21541, 37362, 37362, 240, -1000, 1814, -1000, -1000, 294,
	-1000, 244, 1510, -1000, 1507, -1000, 545, 452, 270, 399,
	387, 266, 265, 264, 262, 260, 259, 258, 257, 276,
	-1000, 623, 623, -162, -163, 2865, 324, 324, 324, 376,
	1782, 1781, -1000, 632, -1000, 623, 623, 288, 623, 623,
	623, 623, 226, 225, 623, 623, 623, 623, 623, 623,
	623, 623, 623, 623, 623, 623, 623, 623, 623, 268,
	1814, 200, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	37362, 256, 37362, -1000, 523, 37362, 757, 757, 33, 757,
	757, 757, 757, 124, 518, 8, -1000, 121, 218, 106,
	196, 727, 109, -1000, -1000, 186, 727, 1106, 599, 90,
	-1000, 757, 757, -1000, 9070, 134, 9070, 9070, -1000, 1792,
	-1000, -1000, -1000, -1000, 1094, -1000, 375, -1000, -1000, -1000,
	-1000, 37362, 34537, 289, 642, -1000, -1000, -1000, 27, -1000,
	-1000, 1305, 919, 15889, 832, -1000, 1162, 546, -1000, -1000,
	-1000, -1000, -1000, 497, 16454, 16454, 16454, 16454, -1000, -1000,
	1533, 1533, 1533, 1533, 16454, 1533, 16454, 1533, 1533, 1533,
	1533, 15889, 1533, 1533, 1533, -1000, 1533, 1533, 1533, 1533,
	1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533,
	1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533,
	509, 1533, 1533, 1533, 1533, 1533, -1000, -1000, -1000, -1000,
	1533, 1533, 1533, 1533, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19280, -1000, 13629, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 37362, -1000, 1533, 135, 37362,
	37362, 271, 1892, 1586, -1000, 1931, 1890, 306, -1000, 1865,
	1355, 1262, 1112, 1586, 1493, 37362, -1000, 1545, -1000, -1000,
	-1000, 1709, 1064, 1103, -1000, -1000, -1000, -1000, 1221, 15889,
	-1000, -1000, 1950, -1000, 18715, 508, 777, 1945, 33972, -1000,
	349, 349, 1505, 10789, -14, -1000, -1000, -1000, 634, 24366,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1792, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1464, 37362, -1000, -1000, 5312, 1079, -1000, 1605, -1000,
	1459, -1000, 1573, 1584, 428, 1079, 417, 395, 360, -1000,
	-90, -1000, -1000, -1000, -1000, -1000, 623, 623, -1000, 274,
	1916, 2807, 3912, -1000, -1000, -1000, 33407, 1604, 1079, -1000,
	1602, -1000, 707, 448, 477, 477, 1079, -1000, -1000, 37362,
	1079, 700, 696, 37362, 37362, -1000, 32842, -1000, 32277, 31712,
	993, 37362, 31147, 30582, 30017, 29452, 28887, -1000, 1672, -1000,
	1566, -1000, -1000, -1000, 37362, 37362, 37362, 279, -1000, -1000,
	37362, 1079, -1000, -1000, 989, 986, 623, 623, 975, 1100,
	1097, 1093, 623, 623, 974, 1082, 26061, 210, 965, 956,
	951, 988, 1081, 168, 987, 874, 946, 37362, 1598, 37362,
	-1000, 181, 607, 341, 631, 1814, 1762, 1501, 359, 427,
	1079, 330, 330, 37362, -1000, 9643, -1000, -1000, 1072, 15889,
	-1000, 749, 727, 727, -1000, -1000, -1000, -1000, -1000, -1000,
	757, 37362, 749, -1000, -1000, -1000, 727, 757, 37362, 757,
	757, 757, 757, 727, 727, 727, 757, 37362, 37362, 37362,
	37362, 37362, 37362, 37362, 37362, 37362, 9070, 599, 757, -311,
	-1000, 1071, -1000, 1706, -1000, -1000, -1000, -1000, -1000, -1000,
	9070, 9070, -1000, -1000, -1000, -1000, 108, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -107, 1499, 28322, -1000,
	-312, -313, -314, -315, -1000, -1000, -1000, -322, -324, -1000,
	-1000, -1000, 15889, 15889, 15889, 15889, -186, -1000, 774, 16454,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 928, 705, 16454,
	16454, 16454, 16454, 16454, 16454, 16454, 16454, 16454, 16454, 16454,
	16454, 16454, 16454, 16454, 834, 6119, 6119, 546, 546, 546,
	546, -1000, 15324, 15889, 15889, 546, -1000, 1079, 27757, 15324,
	15324, 15889, 1831, 650, 919, 37362, -1000, 1112, -1000, -1000,
	-1000, 941, -1000, 37362, 37362, 31, 15889, 15889, 15889, 15889,
	15889, 15889, 12498, 15889, 15889, 15889, 15889, 15889, 15889, 15889,
	15889, 15889, 15889, 11933, 9643, 15324, 15324, 15324, 15324, 15324,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 507, 1457, 1203, 1432, -1000, 1498, -1000, -180, 20976,
	15889, 1066, 1942, 1630, 37362, -1000, -1000, -1000, 1892, -1000,
	1892, 1457, 1842, 1713, 15324, -1000, -1000, 1842, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1332, -1000, 37362, 1493,
	1861, 37362, 1704, 1062, 328, -1000, 15889, 15889, 1492, -1000,
	818, 37362, -1000, -186, -1000, 27192, -1000, -1000, 8497, -1000,
	37362, 250, 37362, -1000, 20411, 26627, 10216, -14, -1000, 10216,
	1467, -1000, -23, -21, 13063, 521, -1000, -1000, -1000, 2865,
	17584, 1298, 521, 49, -1000, -1000, -1000, 1573, -1000, 1573,
	1573, 1573, 1573, 328, 328, 328, 328, -1000, -1000, -1000,
	-1000, -1000, 1594, 1592, -1000, 1573, 1573, 1573, 1573, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1591, 1591, 1591, 1574,
	1574, 312, -1000, 15889, 221, 37362, 1822, 940, 181, 338,
	1628, 1079, 1079, 1079, 338, -1000, 1245, 1155, -1000, -388,
	1488, -1000, -1000, 1915, -1000, -1000, 640, 748, 736, 449,
	37362, 142, 245, -1000, 309, -1000, 37362, 1079, 693, 477,
	1079, -1000, 1079, -1000, -1000, -1000, -1000, -1000, 1079, 1483,
	-1000, 1368, 795, 725, 753, 720, 1483, -1000, -1000, -136,
	1483, -1000, 1483, -1000, 1483, -1000, 1483, -1000, 1483, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 639, 37362, 142,
	834, -1000, 355, -1000, -1000, 834, 834, -1000, -1000, -1000,
	-1000, 1060, 1050, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-373, 37362, -1000, 153, 627, 233, 272, 237, 37362, 125,
	1864, 206, 212, 37362, 37362, 330, 1658, 37362, 1845, 37362,
	-1000, -1000, -1000, -1000, -1000, 919, 37362, -1000, -1000, 757,
	757, -1000, -1000, 37362, 757, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 757, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37362,
	-1000, -1000, -1000, -1000, 37362, -1000, -1000, -1000, -1000, -1000,
	60, -31, 280, -1000, -1000, -1000, -1000, -1000, 1877, -1000,
	919, 730, 667, -1000, 1533, -1000, -1000, 845, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 928, 16454, 16454, 16454, 1091,
	385, 836, 1447, 733, 779, 779, 688, 688, 565, 565,
	565, 565, 565, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1048, -1000, 1396, -1000, 1271, 1143, 1112, -1000, 1396,
	1396, 1212, 15324, -1000, -1000, 655, -1000, 15889, 1112, -1000,
	-1000, 1112, 1112, 1475, 1473, 1939, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1040, 1317, 1317,
	1317, 1317, 1317, 15889, 1009, -1000, -1000, -1000, 1112, 1305,
	1112, 1470, -1000, 1600, 1317, 1587, 1579, 1570, 966, 1546,
	1536, 1531, 1112, 15324, 15324, 1469, 1533, 506, -1000, 1396,
	1112, 1112, 1396, 1396, 9643, 1112, -1000, 37362, -1000, -299,
	-1000, -51, 502, 1533, -1000, 26061, 1112, -1000, 6044, -1000,
	38492, -1000, -1000, -1000, -1000, -1000, 23801, 1257, 1842, -1000,
	-1000, 1533, 1421, -1000, -1000, 328, 36, 23236, -1000, -1000,
	919, 919, 15889, -1000, -1000, -1000, -1000, -1000, -1000, 505,
	1929, 331, 1533, -1000, 1405, 1707, -1000, -1000, -1000, 1860,
	18150, -1000, 1533, 1533, 37362, 1436, 1286, -1000, 504, -1000,
	1467, -14, -29, -1000, -1000, -1000, -1000, 919, -1000, 1092,
	252, 2615, -1000, 313, -1000, -1000, -1000, -1000, 1770, 37,
	-1000, -1000, -1000, 328, 328, -1000, -1000, -1000, -1000, -1000,
	-1000, 1032, 1032, -1000, -1000, -1000, -1000, -1000, 935, -1000,
	-1000, -1000, 932, -1000, -1000, 1428, 1667, 221, -1000, -1000,
	623, 1030, 1776, 37362, -1000, -1000, 1291, 153, 37362, 662,
	1655, -1000, 1628, 1628, 1628, 37362, -1000, -1000, -1000, -1000,
	-377, 56, 305, -1000, -1000, -1000, 3172, 37362, 1407, -1000,
	139, -1000, 1226, 1736, 37362, -1000, 1402, 1581, 1079, 1079,
	-1000, -1000, -1000, 37362, 1533, -1000, -1000, -1000, -1000, 421,
	1813, 1794, 142, 139, 521, 1079, -1000, -1000, -1000, -1000,
	-1000, -378, 1398, 379, 144, 269, 37362, 37362, 37362, 37362,
	37362, 486, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	208, 353, -1000, 37362, 37362, 456, -1000, -1000, -1000, 727,
	-1000, -1000, 727, -1000, -1000, -1000, -1000, -1000, 1789, 37362,
	-35, -351, -1000, -341, 15889, -1000, -1000, -1000, -1000, 771,
	358, 836, 16454, 16454, 15324, -124, 519, 519, 834, -1000,
	-1000, -1000, 15889, 15889, 1322, 633, -1000, 15889, 671, -1000,
	-1000, -1000, 15889, 15889, 15889, 1112, 236, -1000, -1000, -1000,
	-1000, -1000, 1936, -1000, 15889, -1000, -1000, 15889, 15889, -1000,
	15889, 15889, 17019, 1112, 17019, 15889, 15889, 17019, -1000, 1396,
	1396, 15324, 9643, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 502, -1000, 477, 477, 477, 37362, -1000,
	-1000, -1000, -1000, -1000, -1000, 1462, 1880, -1000, 1734, 1733,
	1933, 1929, -1000, 20411, 1842, -1000, -1000, 37362, -294, -1000,
	1759, 1741, -1000, -1000, -1000, -1000, 7924, 1892, 15889, 1654,
	37362, 1533, -1000, 19846, 37362, 37362, 20411, 20411, 20411, 20411,
	20411, -1000, 1690, 1682, -1000, 1683, 1669, 1715, 37362, -1000,
	1392, 1112, 1890, 18150, 306, 15889, 22106, 1477, 20411, -1000,
	-1000, 20411, 37362, 7351, -1000, -1000, -42, -26, -1000, -1000,
	-1000, -1000, 2865, -1000, -1000, 445, 1856, 1772, -1000, -1000,
	-1000, -1000, 1386, -1000, 1384, 1449, 1372, 137, -1000, 1571,
	1786, 623, 623, -1000, 914, -1000, 1079, -1000, -1000, 357,
	-1000, 1844, 37362, 1653, 1652, 1651, -1000, -386, 897, 1577,
	1541, 15889, 1576, 1914, 1329, 37362, -1000, -1000, 37362, -1000,
	-1000, 356, -1000, 221, 37362, -1000, -1000, -1000, 245, 37362,
	-1000, 5978, 139, -1000, -1000, -1000, -1000, -1000, -1000, 37362,
	179, -1000, 1575, 1012, -1000, -1000, 1578, -1000, -1000, -1000,
	-1000, 138, 232, -1000, 37362, 453, 1667, 37362, -1000, -1000,
	-1000, 757, 757, -1000, -1000, 1785, -1000, 1079, 1317, 16454,
	16454, -1000, 546, -1000, 1533, 1112, 1573, 1573, -1000, 1573,
	1574, -1000, 1573, 99, 1573, 93, 1573, -1000, -1000, 1112,
	1112, 980, 905, -110, -1000, 919, 15889, 1514, 1506, 1317,
	-1000, 1572, 1569, 15889, 1317, -1000, 919, 966, 1463, 1268,
	-1000, -1000, -1000, -1000, 1426, 1317, 1450, 1112, -1000, -1000,
	1112, -1000, -1000, 1876, 1876, 1876, 1348, 37927, 37362, -1000,
	-1000, -1000, -1000, 1929, 1926, 1361, -1000, -1000, 36, 345,
	-1000, 1747, 1741, -1000, 1912, 1750, 1907, -1000, -1000, -1000,
	919, -1000, 1817, 1270, -1000, 622, 1246, -1000, -1000, 14759,
	1357, 1729, 479, 1348, 1452, 1707, 1636, 1648, 1692, -1000,
	-1000, -1000, -1000, 1679, -1000, 1675, -1000, -1000, 1545, -1000,
	-1000, 1203, 1112, 1058, 250, 20411, 1390, 1390, -1000, 472,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 760, 5795, 1956,
	-1000, 1028, -1000, 1061, -1000, 691, 685, -1000, 37362, 1556,
	-1000, 328, 1025, 328, 861, -1000, 859, -1000, -1000, -203,
	-1000, -1000, 1489, 1665, -1000, -1000, 37362, -1000, -1000, 37362,
	37362, 37362, 1554, 1906, -1000, 15889, 1551, 616, 1378, 37362,
	37362, -1000, -1000, 239, 1533, -1000, 1325, 1290, -1000, -160,
	-1000, 15889, -1000, -1000, -1000, 953, 953, -1000, 1545, -1000,
	-1000, -1000, 1193, -1000, -1000, -139, 37362, 37362, 37362, 37362,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	546, 16454, -1000, -1000, 328, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15889, -1000, 15889, -1000, 1892, 1014,
	919, 15889, 15889, -1000, 858, 831, 1317, -1000, 1112, 17019,
	-1000, 17019, -1000, 15889, -1000, -1000, 1533, 1769, 1533, 1533,
	22106, -1000, -1000, 1926, 1924, 1905, 1742, 1748, 1748, 1747,
	-1000, 1901, 1900, -1000, 1008, 1895, 1005, 683, -1000, 37362,
	15889, 1533, -1000, 302, 37362, 1533, 37362, -1000, 1922, -1000,
	-1000, 15889, 1549, -1000, 15889, -1000, -1000, -1000, -1000, -1000,
	-1000, 6119, 1929, 1390, -1000, -1000, 571, -1000, 15889, -1000,
	-1000, -1000, 3005, -1000, -1000, -1000, -1000, -1000, 1548, 15889,
	-1000, -1000, -1000, 1178, 1159, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1545, -1000, -1000, -1000, -1000, 245, -385,
	1330, 37362, 815, -1000, 1281, 1329, 431, -1000, 15889, 291,
	-1000, 245, -1000, -165, -166, 1317, -1000, -1000, 1843, -1000,
	-1000, 9643, -1000, -1000, 1534, 1618, -1000, 167, -1000, 1317,
	1317, 1112, -1000, 1317, 1317, 1146, 1134, -1000, -1000, 1268,
	-1000, 878, 22671, -1000, 1894, 1881, 25496, 25496, 502, 1924,
	-1000, 15889, 15889, 1744, 912, -1000, -1000, -1000, -1000, 1000,
	997, -1000, 996, -1000, 1955, -1000, 919, -1000, 1533, -1000,
	459, 1246, -1000, 1892, 919, 37362, 919, 30, 1922, -1000,
	1317, -1000, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533,
	1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 1533, 37362,
	1260, -1000, -1000, 1832, 1252, 51, -1000, 1229, -1000, -1000,
	-1000, -1000, 14194, -1000, -1000, -1000, -1000, -1000, -1000, 306,
	1316, -1000, 609, 37362, 37362, 1112, 246, -145, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15889, 1219, -1000,
	-1000, -1000, -1000, -1000, 1219, 1219, -1000, -1000, 919, 1305,
	-1000, 894, -1000, -1000, -1000, -1000, -1000, 37362, 1246, 37362,
	-1000, 1207, 1112, 1533, 1892, -1000, 1190, -1000, 306, -1000,
	1519, 1541, -1000, 1112, -138, 9643, 6778, 1183, -1000, -1000,
	1701, -129, -150, 966, 24931, -1000, -1000, -1000, -1000, -1000,
	1222, -1000, -1000, 22106, 36797, -1000, 1646, 680, -138, 15889,
	1518, -1000, -1000, -45, -1000, -1000, -1000, -1000, -1000, 1578,
	-1000, 1695, -1000, 1112, -1000, -1000, -1000, 1176, -1000, 5266,
	-238, 1645, -1000, 1949, -1000, -1000, -1000, 735, 929, -1000,
	-1000, -1000, -1000, 924, 37362, 310, -1000, -1000, -139, -141,
	-1000, -1000, 36797, -231, 521, 6119, -1000, -1000, 1951, 548,
	548, -1000, -1000, -394, 1137, 155, -1000, -147, -1000, -1000,
	1827, 30, -1000, -1000, -1000, 297, 927, -1000, -1000, 794,
	-394, -1000, -156, -257, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 6119, 176, 176, -1000, 1640, -1000, -1000, 6119,
	-1000, 1555, -249, -1000, -332, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2264, 2262, 27, 5, 2261, 22, 88, 190, 29,
	176, 94, 2260, 2259, 2257, 2255, 2253, 2252, 2251, 203,
	202, 201, 2250, 2249, 2248, 2247, 2246, 2245, 2244, 2243,
	2241, 2240, 199, 162, 175, 2239, 2238, 2237, 108, 169,
	80, 82, 171, 2236, 2234, 75, 2233, 2232, 2231, 165,
	163, 700, 2229, 160, 115, 34, 2228, 2225, 2224, 2222,
	2221, 2218, 2217, 2216, 2208, 2205, 2203, 2201, 2200, 2196,
	2195, 2194, 269, 2193, 2192, 15, 2191, 78, 2190, 2189,
	2188, 2187, 122, 2186, 2185, 2184, 2182, 2181, 2180, 138,
	2179, 2177, 2176, 2175, 193, 2173, 2172, 249, 101, 110,
	2171, 2169, 91, 173, 2168, 118, 2167, 2166, 2165, 143,
	2164, 4116, 2163, 60, 55, 2162, 58, 73, 53, 52,
	7, 3, 2161, 2160, 59, 83, 2158, 98, 65, 2156,
	96, 93, 2154, 2153, 12, 6, 2152, 4, 2150, 2,
	66, 2149, 2146, 106, 2145, 2144, 2143, 89, 2140, 2139,
	352, 2137, 81, 124, 99, 70, 2136, 31, 77, 2135,
	2134, 2132, 2131, 2130, 45, 2127, 2126, 2122, 136, 39,
	153, 32, 37, 43, 133, 2121, 44, 71, 2120, 134,
	132, 2111, 46, 28, 41, 2109, 26, 131, 146, 25,
	92, 128, 2108, 2105, 48, 68, 2099, 2096, 2093, 2091,
	2090, 2089, 69, 2088, 42, 2085, 180, 2084, 21, 2083,
	38, 35, 2082, 61, 154, 67, 30, 2081, 156, 2080,
	47, 157, 123, 150, 2078, 2077, 2075, 2074, 167, 239,
	2070, 2069, 74, 161, 140, 142, 2068, 240, 2066, 2065,
	90, 1509, 2588, 20, 158, 2064, 2062, 3159, 135, 126,
	16, 2061, 172, 2060, 2058, 2051, 177, 155, 119, 904,
	95, 2048, 13, 2044, 2041, 2040, 2038, 2037, 2035, 211,
	178, 63, 9, 152, 79, 2031, 2030, 2021, 121, 97,
	2018, 149, 148, 117, 151, 2016, 164, 137, 105, 2014,
	85, 2013, 2012, 2006, 2002, 86, 2001, 2000, 1999, 1996,
	139, 141, 111, 84, 1995, 76, 116, 144, 147, 36,
	1993, 33, 1991, 1990, 170, 24, 1985, 11, 50, 49,
	19, 104, 1983, 1982, 0, 1981, 10, 159, 238, 145,
	1979, 1978, 8, 1976, 14, 1975, 127, 1974, 1972, 1971,
	18, 40, 17, 1, 1970, 1968, 4112, 3261, 125, 1943,
	179,
}

//line sql.y:6528
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 344, 345, 345, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 324, 324,
	324, 327, 327, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	348, 348, 145, 145, 143, 143, 144, 144, 213, 213,
	22, 23, 23, 223, 223, 222, 222, 222, 224, 224,
	224, 224, 259, 259, 24, 24, 24, 24, 24, 95,
	95, 326, 326, 325, 317, 317, 316, 316, 315, 323,
	323, 322, 322, 321, 36, 37, 46, 46, 46, 46,
	47, 48, 328, 328, 291, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 293, 293, 280,
	280, 292, 292, 292, 292, 292, 292, 292, 279, 279,
	106, 106, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 339, 339, 193, 193, 193, 193, 193,
	193, 115, 115, 124, 124, 124, 124, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 123, 123, 119, 119,
	119, 120, 120, 120, 121, 121, 340, 340, 340, 340,
	262, 262, 262, 262, 265, 265, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 264, 264, 264, 264, 264,
	266, 266, 266, 266, 266, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	268, 268, 268, 268, 268, 268, 268, 268, 278, 278,
	269, 269, 273, 273, 274, 274, 274, 275, 275, 275,
	276, 276, 271, 271, 271, 271, 271, 271, 272, 272,
	272, 281, 305, 305, 304, 304, 302, 302, 302, 302,
	290, 290, 299, 299, 299, 299, 299, 289, 289, 285,
	285, 285, 286, 286, 287, 287, 284, 284, 288, 288,
	301, 301, 300, 282, 282, 283, 283, 307, 341, 341,
	341, 341, 342, 342, 308, 333, 334, 332, 332, 332,
	332, 332, 77, 77, 77, 236, 236, 236, 297, 297,
	296, 296, 296, 298, 298, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 231, 231, 231, 331, 331, 331, 331,
	331, 331, 330, 330, 330, 294, 294, 294, 329, 329,
	54, 54, 177, 177, 43, 43, 43, 43, 43, 43,
	42, 42, 42, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 44, 44, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 82, 82, 83,
	83, 83, 83, 84, 84, 84, 310, 310, 55, 55,
	3, 3, 133, 135, 136, 136, 134, 134, 134, 134,
	134, 134, 57, 57, 56, 56, 138, 137, 139, 139,
	139, 1, 1, 2, 2, 4, 4, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 277,
	277, 277, 309, 309, 311, 313, 313, 313, 313, 312,
	91, 91, 26, 35, 35, 27, 27, 27, 27, 28,
	28, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 230, 230, 238, 238, 229, 229, 252, 252,
	252, 232, 232, 232, 233, 233, 338, 338, 338, 226,
	226, 60, 60, 60, 62, 62, 63, 64, 64, 254,
	254, 255, 255, 65, 66, 78, 78, 78, 78, 78,
	78, 81, 81, 81, 13, 13, 13, 13, 74, 74,
	74, 12, 12, 61, 61, 68, 335, 335, 336, 337,
	337, 337, 337, 69, 71, 29, 29, 29, 29, 29,
	29, 101, 101, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 96, 96, 96, 90, 90,
	349, 72, 73, 73, 94, 94, 94, 87, 87, 87,
	93, 93, 93, 14, 14, 15, 212, 212, 16, 16,
	98, 98, 100, 100, 100, 100, 100, 102, 102, 102,
	102, 102, 102, 102, 97, 97, 99, 99, 99, 99,
	245, 245, 245, 244, 244, 127, 127, 129, 128, 128,
	130, 130, 131, 131, 131, 131, 175, 175, 153, 153,
	210, 210, 208, 208, 209, 209, 211, 211, 211, 211,
	214, 214, 132, 132, 132, 132, 140, 140, 141, 141,
	142, 142, 253, 253, 250, 250, 250, 249, 249, 146,
	146, 146, 148, 147, 147, 147, 147, 149, 149, 151,
	151, 150, 150, 152, 157, 157, 156, 156, 154, 154,
	154, 154, 155, 155, 155, 155, 158, 158, 111, 111,
	111, 111, 111, 111, 111, 122, 122, 122, 122, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 79, 79, 79, 227,
	227, 159, 159, 167, 167, 167, 167, 160, 160, 160,
	160, 160, 160, 160, 168, 168, 168, 174, 169, 169,
	165, 165, 165, 165, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 320, 320, 319, 319, 318, 318, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 350,
	350, 270, 270, 270, 270, 166, 166, 166, 166, 166,
	92, 92, 92, 92, 92, 258, 258, 258, 261, 261,
	261, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 180, 180, 88, 88,
	178, 178, 179, 181, 181, 176, 176, 176, 162, 162,
	162, 182, 182, 183, 183, 184, 184, 186, 185, 185,
	187, 188, 188, 188, 189, 189, 190, 190, 190, 45,
	45, 45, 45, 45, 40, 40, 40, 40, 41, 41,
	41, 103, 103, 103, 103, 105, 105, 104, 104, 75,
	75, 76, 76, 76, 109, 109, 110, 110, 110, 107,
	107, 108, 108, 206, 206, 191, 191, 191, 198, 198,
	198, 194, 194, 196, 196, 196, 197, 197, 197, 195,
	203, 203, 205, 205, 204, 204, 200, 200, 201, 201,
	202, 202, 202, 199, 199, 161, 161, 161, 161, 161,
	207, 207, 207, 207, 215, 215, 171, 171, 173, 173,
	172, 126, 216, 216, 220, 217, 217, 221, 221, 221,
	221, 221, 218, 218, 219, 219, 246, 246, 246, 225,
	225, 237, 237, 234, 234, 235, 235, 228, 228, 239,
	239, 239, 70, 170, 170, 306, 306, 303, 242, 242,
	243, 243, 247, 247, 251, 251, 248, 248, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 346, 347, 256,
	257, 257, 257,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 4, 4, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 1, 1, 1, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 6, 0, 2, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -344, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 7,
	8, -80, -31, 30, -36, -46, 217, -47, -37, 218,
	-48, 220, 219, 256, 221, 249, 72, 298, 299, 301,
	302, 303, 304, -81, 254, 255, 223, 34, 43, 31,
	32, 35, 227, 262, 263, 226, -8, -32, 6, -346,
	9, 425, 251, 250, 26, -10, 445, 83, -345, 578,
	-206, -191, 20, 31, 27, -190, -186, -94, -191, 18,
	16, 5, -72, -349, -72, -72, 10, 11, -72, -291,
	-293, 83, 154, 83, -72, -52, -51, -50, -49, -53,
	29, -43, -44, -314, -42, -39, 222, 219, 266, 117,
	118, 256, 257, 258, 221, 240, 255, 259, 254, 275,
	-38, 78, 31, 445, 448, -298, 218, 224, 225, 426,
	120, 119, 73, 220, -295, 350, 548, -53, 550, 99,
	101, 549, 42, 230, 551, 552, 553, 554, 239, 555,
	556, 557, 558, 564, 565, 566, 567, 121, 5, -72,
	-251, -247, -324, -241, 86, 87, 88, 442, 242, 475,
	476, 291, 78, 39, 347, 350, 548, 298, 312, 306,
	333, 325, 443, 477, 294, 243, 279, 545, 323, 129,
	550, 297, 478, 257, 355, 356, 357, 99, 301, 393,
	563, 296, 479, 561, 101, 549, 77, 49, 42, 252,
	321, 226, 317, 551, 280, 480, 453, 273, 120, 117,
	570, 34, 315, 48, 28, 560, 119, 47, 552, 145,
	481, 553, 359, 338, 539, 46, 360, 258, 482, 81,
	263, 447, 547, 361, 316, 362, 290, 559, 223, 483,
	531, 363, 364, 540, 484, 339, 343, 485, 385, 365,
	577, 50, 486, 487, 541, 118, 488, 76, 554, 310,
	311, 489, 288, 241, 387, 337, 438, 105, 106, 107,
	108, 439, 109, 102, 440, 110, 104, 103, 111, 239,
	33, 366, 444, 292, 56, 267, 388, 44, 341, 574,
	43, 535, 490, 538, 336, 332, 435, 51, 491, 492,
	493, 494, 555, 335, 309, 331, 569, 130, 285, 556,
	60, 225, 345, 344, 346, 274, 384, 328, 495, 496,
	497, 246, 79, 498, 318, 19, 499, 500, 367, 281,
	501, 54, 502, 503, 391, 255, 504, 52, 557, 37,
	260, 571, 558, 505, 506, 507, 508, 262, 509, 369,
	510, 368, 340, 342, 269, 370, 446, 511, 314, 259,
	562, 512, 247, 546, 261, 266, 254, 392, 248, 513,
	514, 515, 516, 517, 295, 518, 519, 302, 564, 436,
	41, 520, 521, 522, 523, 289, 284, 386, 395, 59,
	80, 352, 524, 544, 308, 282, 525, 299, 53, 565,
	566, 567, 276, 568, 7, 575, 576, 372, 121, 286,
	287, 45, 329, 268, 526, 527, 319, 320, 334, 307,
	330, 300, 532, 270, 373, 437, 256, 528, 394, 283,
	348, 353, 450, 275, 374, 543, 449, 327, 324, 277,
	529, 375, 231, 271, 272, 530, 533, 376, 377, 293,
	378, 379, 380, 381, 382, 383, 278, 448, 305, 322,
	354, 406, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 434,
	229, -72, 229, -150, -247, 229, -218, 356, -238, 358,
	371, 366, 376, 364, -230, 367, 369, 269, -338, 385,
	229, 373, 217, 359, 368, 377, 378, 293, 379, 383,
	278, 380, 381, 382, -324, 171, 553, 568, 129, 326,
	363, 361, 386, 535, -247, 300, -254, 305, -242, -324,
	-241, 303, -150, -78, 531, 221, -256, -256, -96, 535,
	537, -169, -111, 138, -122, -125, -116, -117, -163, -164,
	-165, -166, -123, -176, 160, 161, 168, 139, -174, -126,
	24, 441, 427, 426, 171, 29, 213, 66, 67, 429,
	430, 141, 55, 402, 403, -124, 398, 404, 399, 432,
	433, 112, 434, 102, 104, 103, 435, 436, 437, 438,
	439, 440, 105, 106, 107, 108, 109, 110, 111, -242,
	-247, 234, 397, 228, 166, 425, -118, -114, -6, -172,
	396, 400, 401, 405, -324, -241, -120, -119, -159, 89,
	95, 100, 96, -343, 113, -346, 90, 91, 92, 93,
	94, 114, 115, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 42, 372, 372, -150, -72, -72,
	-72, -72, -184, -94, -186, -8, -6, -346, 6, -72,
	-6, -7, -11, -32, -34, 471, -33, -247, -191, -206,
	10, 156, 40, 48, -189, -190, -10, -6, -111, 17,
	21, 22, -99, 162, -111, -247, -73, -99, -228, 233,
	-72, -72, -217, -259, 300, -221, 386, 385, -243, -219,
	-242, -240, -218, 384, 222, 21, 451, 137, 23, 25,
	140, 171, 124, 17, 141, 35, 224, 326, 240, 170,
	236, 426, 217, 70, 452, 398, 399, 396, 402, 428,
	429, 397, 358, 29, 11, 454, 26, 250, 22, 36,
	164, 219, 144, 455, 253, 24, 251, 112, 115, 457,
	20, 73, 245, 12, 238, 38, 14, 458, 459, 15,
	234, 233, 156, 230, 68, 9, 213, 27, 153, 64,
	460, 132, 461, 462, 463, 464, 125, 66, 154, 18,
	572, 400, 401, 31, 536, 441, 264, 166, 71, 57,
	537, 138, 465, 466, 113, 467, 116, 74, 542, 134,
	16, 69, 40, 468, 265, 469, 235, 573, 470, 389,
	471, 155, 220, 425, 67, 472, 228, 371, 6, 431,
	30, 249, 237, 123, 65, 473, 229, 143, 432, 433,
	232, 126, 114, 5, 131, 32, 10, 72, 75, 403,
	404, 405, 55, 122, 445, 142, 13, 474, 390, 136,
	129, -292, 154, -279, -283, -242, 244, -308, 240, -150,
	-301, -300, -242, -95, -237, 230, 238, 237, 131, -328,
	134, 286, 397, 228, -49, -50, -218, 170, -82, 261,
	265, 84, 84, -283, -282, -281, -329, 265, 244, -307,
	-299, 236, 245, -289, 237, 238, -284, 230, 132, -329,
	-284, 235, 245, 265, 265, 121, 265, 121, 265, 265,
	265, 265, 265, 265, 265, 265, 265, 260, -290, 146,
	-290, 449, 449, -295, -329, -329, -329, 232, 33, 33,
	-239, -284, 232, 23, -290, -290, -218, 170, -290, -290,
	-290, -290, 273, 273, -290, -290, -290, -290, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, 229,
	-328, -103, 383, 293, 78, -51, 275, -35, -150, -237,
	230, 231, -328, 262, -150, 214, -150, -232, 154, 13,
	-232, -229, 372, 370, 357, 362, -232, -232, -232, -232,
	276, 355, -285, 230, 33, 241, 372, 276, 355, 276,
	277, 276, 277, 365, 375, 276, -252, 12, 156, 397,
	360, 364, 269, 229, 270, 231, 374, 277, -252, 90,
	-233, 154, 372, 272, -232, -232, -257, -346, -243, 326,
	-324, 538, -257, -257, 30, 87, 232, -242, -74, -242,
	90, -13, -9, -20, -19, -21, 146, -101, 372, -89,
	171, 553, 539, 540, 541, 538, 369, 546, 544, 542,
	276, 543, 84, 134, 136, 137, 130, -111, 153, -160,
	146, 147, 148, 149, 150, 151, 152, 156, 138, 140,
	154, 155, 135, 157, 158, 159, 160, 161, 162, 163,
	165, 164, 166, 167, 170, 215, 216, -117, -117, -117,
	-117, -174, -346, -346, -346, -117, -227, -346, -117, -346,
	-346, -346, -346, -180, -111, -346, -350, -346, -350, -350,
	-270, -346, -270, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, 214, -346, -346, -346, -346, -346,
	-270, -270, -270, -270, 100, 95, 89, -176, 96, 90,
	-242, -247, -6, -7, -169, -256, -335, -336, -153, -150,
	-346, 293, -242, -242, 262, -189, -10, -6, -184, -190,
	-186, -6, -72, -87, -100, 61, 62, -102, 22, 36,
	65, 63, 21, -347, 85, -347, -206, -347, 84, -34,
	-210, 83, 59, 41, 90, 90, 84, 19, -185, -187,
	-111, 12, -245, 130, -244, 23, -242, 90, 214, 98,
	12, -151, 27, -150, -228, -228, 84, 300, -221, -259,
	-223, -222, 387, 389, 146, -246, -242, 90, 29, 85,
	84, -150, -262, -265, -267, -266, -268, -263, -264, 323,
	324, 171, 327, 329, 330, 331, 332, 333, 334, 335,
	336, 337, 338, 30, 252, 319, 320, 321, 322, 339,
	340, 341, 342, 343, 344, 345, 346, 306, 325, 443,
	307, 308, 309, 310, 311, 312, 314, 315, 316, 317,
	318, -327, -324, 83, 85, 84, -269, 83, -103, 229,
	-324, 230, 230, 230, -72, 425, -290, -290, 260, 17,
	-42, -39, -314, 16, -38, -39, 222, 117, 118, 219,
	83, -279, 83, -288, -327, -324, 83, 132, 235, 131,
	-287, -284, -287, -288, -324, -176, -324, 132, 132, -214,
	-242, -214, -214, 21, -214, 21, -214, 21, 92, -242,
	-214, 21, -214, 21, -214, 21, -214, 21, -214, 21,
	29, 76, 77, 29, 79, 80, 81, -176, -176, -279,
	-218, -150, -324, 92, 92, -290, -290, 92, 90, 90,
	90, -290, -290, 92, 90, -249, -247, 90, -330, 246,
	290, 292, 92, 92, 92, 92, 29, 90, -331, 29,
	560, 559, 561, 562, 563, 92, 29, 92, 29, 92,
	-242, 83, -150, -109, 280, 217, 219, 222, 74, 90,
	294, 146, 42, 84, 232, 229, -324, -234, 234, -234,
	-242, -248, -247, -240, 90, -111, -286, 12, 156, -252,
	-252, -232, -150, -286, -252, -232, -150, -232, -232, -232,
	-232, -252, -252, -252, -232, -247, -247, -150, -150, -150,
	-150, -150, -150, -150, -257, -233, -232, 538, 90, -226,
	12, 74, -257, -257, -255, 303, 337, 532, 533, 534,
	84, 445, -143, -150, 538, 538, 538, 538, 538, 538,
	-111, -111, -111, -111, 467, -167, 113, 138, 114, 115,
	-125, -168, -172, -174, 97, 156, 140, 154, 155, -116,
	-117, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -258, -324, 90, 171, -121, -120,
	96, -343, -121, -97, -99, -111, -111, -324, -242, -97,
	-97, -111, -93, 22, 36, -178, -179, 142, -176, -347,
	-347, 92, 96, -242, -242, -86, -85, 407, 408, 409,
	410, 412, 413, 414, 417, 418, 422, 423, 406, 424,
	411, 416, 419, 420, 421, 415, 322, -111, -111, -111,
	-111, -111, -111, -79, -111, 124, 125, 126, -170, -169,
	-323, -322, -321, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -98, 22, 36, -97, -243, -248, -240, -97,
	-98, -98, -97, -97, 214, -206, -347, 84, -337, 389,
	390, 536, -250, 265, -249, 23, -170, 90, 12, -212,
	75, -242, -189, -189, 61, 62, 57, -97, -102, -347,
	-33, 23, -208, -242, 60, 90, -271, -218, 347, 348,
	-111, -111, 84, -188, 25, 26, -150, -244, 162, -248,
	-150, -213, 265, -150, -128, -130, -131, -132, -153, -175,
	-346, -133, 463, 460, 12, -143, -144, -152, -247, -221,
	-223, 84, 388, 390, 391, 74, 116, -111, -272, 170,
	-297, -296, -295, -279, -281, -282, -283, 85, -272, -275,
	353, 352, -269, -269, -269, -269, -269, -271, -271, -271,
	-271, 83, 83, -269, -269, -269, -269, -273, 83, -273,
	-273, -274, 83, -274, -308, -111, -305, -304, -302, -303,
	239, 99, 445, 75, -300, -188, 92, -109, -235, 234,
	-306, -303, -324, -324, -324, -235, -324, 90, -324, 90,
	-83, -55, -1, 572, 573, 574, 84, 17, -280, -279,
	-54, 290, -311, -312, 265, -307, -301, -288, 132, -287,
	-288, -288, -324, 84, 27, 121, 121, 121, 121, 445,
	219, 30, -279, -54, -258, 232, -258, -258, 90, 90,
	-231, 568, -143, -105, 282, 146, 271, 271, 229, 229,
	284, -150, 295, 297, 296, 294, 21, 283, 285, 287,
	273, -150, -150, -234, 74, -145, -150, 24, -247, -150,
	-232, -232, -150, -232, -232, -150, -242, -89, 389, 84,
	445, 20, -90, 20, -346, 113, 114, 115, -168, -116,
	-117, -116, 137, 253, 84, -347, 23, 84, 75, -347,
	-347, -347, 84, 12, -97, -181, -179, 144, -111, -347,
	-347, -347, 84, 84, 12, -261, 23, -347, -347, -347,
	-347, -347, -180, -347, 12, -347, -347, 84, 84, -347,
	84, 84, 84, -320, 84, 84, 84, 84, -347, -97,
	-97, -346, 214, -347, -347, -347, -347, -347, -243, -336,
	535, 390, -157, -156, -154, 72, 233, 73, -346, -249,
	-347, -121, 87, -209, 87, -208, -162, -242, 92, 96,
	-191, -127, -129, 12, -102, -174, 85, 84, -271, -195,
	-200, -229, -242, 90, 171, -187, 214, -158, 13, -161,
	30, 55, -9, -346, -346, 30, 84, -146, -148, -147,
	-149, 64, 68, 70, 65, 66, 67, 71, -253, 23,
	-128, -7, -6, -346, -346, -346, -150, -143, -348, 12,
	75, -348, 84, 214, -222, -224, 392, 389, 395, -324,
	90, -82, 84, -295, -283, -192, -106, 38, -276, 354,
	-271, -271, -278, 90, -278, 92, 92, 85, -45, -40,
	-41, 31, 78, -302, -290, 90, 37, -242, 85, -105,
	-150, 138, 74, -306, -306, -306, -247, -2, 571, 577,
	132, 83, 357, 16, -208, 84, 85, -177, 291, 85,
	-313, 55, -242, 85, 83, -288, -288, -242, -346, 229,
	29, 29, -54, -177, -272, -324, 570, 569, 85, 231,
	289, -110, 402, -107, 90, 86, -150, -150, -150, -150,
	-150, 222, 219, 274, 232, -143, -150, 84, -77, 248,
	243, -252, -252, 31, -150, 389, 547, 545, -111, 137,
	253, -125, -117, -99, 442, -260, 171, 323, 252, 321,
	317, 337, 328, 352, 319, 353, 316, 315, 314, -260,
	-258, -111, -111, -184, 145, -111, 143, -111, -111, -111,
	-347, 171, 323, 12, -111, -321, -111, -111, -111, -319,
	-318, -121, -176, -347, -319, -111, -111, -318, -347, -347,
	-98, -243, -154, -284, -284, -284, -214, 84, -225, 20,
	12, 55, 55, -127, -158, -128, -102, -242, -198, 531,
	-203, 44, -201, -202, 45, -199, 46, 54, 162, -189,
	-111, -215, 74, -216, -220, -176, -171, -173, -172, -346,
	-207, -347, -242, -214, -216, -130, -131, -131, -130, -131,
	64, 64, 64, 69, 64, 69, 64, -147, -247, -347,
	-347, -7, -7, -111, -250, 75, -128, -128, -152, -247,
	162, 389, 393, 394, -295, -342, 113, 138, 29, 74,
	350, 99, -340, 170, -341, 235, 131, 132, 247, 23,
	39, 85, 84, 85, 84, 85, 84, -236, 481, 138,
	-41, -40, -290, -290, 92, -324, 231, 24, -150, 74,
	74, 74, -84, 575, 92, 83, -3, 78, -111, 83,
	17, -279, -176, 267, 156, -305, -208, -309, -311, -150,
	-113, -346, -112, -114, -118, 160, 161, -177, -150, -104,
	280, 288, 83, -108, 87, -326, 75, 271, 350, 271,
	-150, -77, -45, -150, -232, -232, 31, -324, -347, -125,
	-117, -346, -347, -269, -269, -269, -274, -269, 311, -269,
	311, -269, -347, -347, 84, -347, 20, -347, -88, 431,
	-111, 84, 84, -347, 83, 83, -111, -347, -320, 84,
	-347, 84, -347, 84, -347, -347, -155, 20, -155, -155,
	-347, 87, -150, -158, -182, 14, -195, 49, 329, -205,
	-204, 53, 45, -202, 17, 47, 17, 28, -215, 84,
	146, 84, -347, -347, 84, 55, 214, -347, -158, -141,
	-140, 74, 75, -142, 74, -140, 64, 64, -210, -347,
	-347, 84, -213, -128, -158, -158, 214, 113, -346, -115,
	-124, -113, 10, 90, 90, -324, 132, 132, -150, 83,
	-271, 90, -271, 92, 92, 481, 29, 79, 80, 81,
	29, 76, 77, -150, -150, -150, -150, -310, 83, 17,
	-111, 83, 146, 85, -208, -208, 268, -172, -346, 85,
	-347, 84, -277, 445, 448, -111, -119, -119, -210, 85,
	-317, 445, -325, -242, -242, -242, -242, -116, -271, -111,
	-111, -189, 90, -111, -111, 92, 92, -347, -347, -319,
	-318, -111, -346, 64, 16, 14, -346, -346, -250, -182,
	-183, 15, 17, -196, 51, -194, 50, -194, -204, 17,
	17, 90, 17, 90, 132, -220, -111, -173, 55, -9,
	-242, -171, -242, -184, -111, 83, -111, -121, -158, -158,
	-111, -164, 434, 102, 104, 103, 435, 436, 437, 438,
	439, 440, 105, 106, 107, 108, 109, 110, 111, 83,
	-111, 85, 85, -210, -309, -55, 85, -208, 92, 85,
	-172, -91, -346, 264, -341, -311, 449, 449, -347, 23,
	-316, -315, -243, 83, 75, -92, 156, 445, -347, -347,
	-347, -347, -347, 85, 85, -347, -347, 84, -211, -347,
	-242, 235, 17, 17, -211, -211, -157, -183, -111, -169,
	-197, 52, 74, 116, 90, 90, 90, 10, -171, 214,
	-189, -208, -135, 357, -184, -347, -208, 85, 23, 85,
	577, 132, 85, 264, -9, 84, 146, -208, -150, -347,
	443, 71, 446, -111, 84, -347, -347, -347, 74, 116,
	-216, -242, 85, -347, -346, -189, 85, -193, -9, 83,
	-3, -347, -75, 445, -315, -294, -243, 90, 92, 85,
	60, 444, 447, -320, -242, 235, -250, -136, -134, -242,
	495, -333, -334, 74, -342, -339, 113, 138, 99, -340,
	122, 123, -75, -111, 83, -76, 279, 535, -326, 60,
	-347, -347, 84, 20, -262, -57, 505, -334, 74, 11,
	10, 113, 90, 85, -208, 240, -317, 445, -134, 502,
	-272, -121, -332, 248, 243, 246, 30, -332, -4, 576,
	85, 281, 446, -56, 24, -135, 242, 29, 113, 92,
	-4, 447, 505, -121, -138, -137, -139, 539, 113, 29,
	-137, -139, 74, -121, 74, 455, 539,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 740,
	740, 740, 0, 740, 0, 0, 740, -2, -2, 740,
	1204, 0, 740, 0, 0, -2, 672, 674, 0, 676,
	-2, 0, 0, 685, 1679, 1679, 735, 0, 0, 0,
	0, 0, 740, 740, 740, 740, 1065, 48, 740, 0,
	83, 84, 691, 692, 693, 63, 0, 1677, 1, 3,
	69, 73, 0, 0, 0, 56, 1074, 0, 76, 0,
	0, 744, 0, 742, 0, 1187, 740, 740, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 517, 457, 500, 455, 486, -2, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 350, 350, 0, 0, -2, 448, 448, 448, 0,
	0, 0, 483, 1189, 403, 350, 350, 0, 350, 350,
	350, 350, 0, 0, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 1091,
	151, 1205, 1202, 1203, 38, 39, 40, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	0, 1181, 0, 600, 841, 0, 661, 661, 0, 661,
	661, 661, 661, 0, 0, 0, 612, 0, 0, 0,
	0, 658, 0, 628, 629, 0, 658, 0, 664, 0,
	639, 661, 661, 642, 1680, 0, 1680, 1680, 1172, 0,
	655, 653, 667, 668, 671, 675, 0, 680, 683, 1198,
	1199, 0, 698, 47, 1437, 690, 703, 704, 0, 736,
	737, 43, 938, 0, 863, 868, 879, 892, 893, 894,
	895, 896, 898, 899, 0, 0, 0, 0, 904, 905,
	0, 0, 0, 0, 0, 919, 0, 0, 0, 0,
	0, 1046, 0, 1009, 1009, 955, 1009, 1011, 1011, 0,
	0, 0, 1676, 1470, 1473, 1474, 1493, 1576, 1622, 1463,
	1468, 1471, 1464, 1465, 1466, 1467, 1469, 1472, 1475, 1055,
	0, 0, 0, 0, 0, 0, 256, 257, 937, 1161,
	1011, 1011, 1011, 1011, -2, -2, 203, 204, 205, 206,
	207, 208, 209, 0, 199, 0, 261, 262, 258, 259,
	260, 921, 922, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 1679, 0, 713, 0, 0, 0,
	0, 0, 1074, 0, 1066, 1065, 61, 0, 740, -2,
	0, 0, 0, 0, 45, 0, 50, 800, 75, 74,
	1113, 0, 0, 0, 57, 1075, 65, 67, 1076, 0,
	745, 746, 0, 776, 780, 0, 741, 0, 0, 1188,
	1187, 1187, 100, 0, 1618, 1165, -2, -2, 0, 0,
	1200, 1201, 1174, -2, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	-2, 0, 0, 161, 162, 0, 41, 376, 0, 157,
	0, 370, 320, 1091, 0, 0, 0, 0, 0, 740,
	0, 1182, 142, 143, 149, 150, 350, 350, 497, 0,
	0, 151, 151, 464, 465, 466, 0, 0, -2, 374,
	0, 449, 0, 0, 364, 364, 368, 366, 367, 0,
	0, 0, 0, 0, 0, 477, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 578, 0, 351,
	0, 495, 496, 404, 0, 0, 0, 0, 475, 476,
	0, 0, 1190, 1191, 0, 0, 350, 350, 0, 0,
	0, 0, 350, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 1104, 0, 0, 0, -2, 0, 592, 0, 0,
	0, 1183, 1183, 0, 599, 0, 601, 602, 0, 0,
	603, 0, 658, 658, 656, 657, 605, 606, 607, 608,
	661, 0, 0, 359, 360, 361, 658, 661, 0, 661,
	661, 661, 661, 658, 658, 658, 661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 664, 661, 0,
	635, 0, 636, 637, 640, 641, 643, 1681, 1682, 1221,
	1680, 1680, 647, 651, 1173, 673, 681, 684, 701, 699,
	700, 702, 694, 695, 696, 697, 0, 715, 716, 721,
	0, 0, 0, 0, 727, 728, 729, 0, 0, 732,
	733, 734, 0, 0, 0, 0, 0, 861, 0, 0,
	927, 928, 929, 930, 931, 932, 933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 900, 901, 902,
	903, 906, 0, 0, 0, 911, 912, 0, 0, 0,
	0, 0, 750, 0, 1047, 0, 953, 0, 954, 956,
	957, 0, 958, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1193, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 0, 760, 760, 0, 0,
	193, 194, 195, 196, 210, 211, 212, 213, 214, 263,
	1055, 0, 937, 0, 0, 44, 705, 706, 0, 824,
	1193, 0, 0, 756, 0, 55, 64, 66, 1074, 59,
	1074, 0, 762, 0, 0, -2, -2, 763, 769, 770,
	771, 772, 773, 52, 1678, 53, 0, 72, 0, 46,
	0, 0, 0, 0, 332, 1116, 0, 0, 1067, 1068,
	1071, 0, 777, 1504, 781, 0, 783, 784, 0, 743,
	0, 98, 0, 840, 0, 0, 0, 1618, 1171, 0,
	102, 103, 0, 0, 0, 338, 1176, 1177, 1178, -2,
	357, 0, 338, 327, 271, 272, 273, 320, 275, 320,
	320, 320, 320, 332, 332, 332, 332, 303, 304, 305,
	306, 307, 0, 0, 290, 320, 320, 320, 320, 310,
	311, 312, 313, 314, 315, 316, 317, 276, 277, 278,
	279, 280, 281, 282, 283, 284, 322, 322, 322, 324,
	324, 0, 42, 0, 342, 0, 1071, 0, 1104, 1185,
	1195, 0, 0, 0, 1185, 120, 0, 0, 498, 528,
	458, 487, 499, 0, 461, 462, -2, 0, 0, 448,
	0, 450, 0, 358, 0, -2, 0, 368, 0, 364,
	368, 365, 368, 356, 369, 479, 480, 481, 0, 558,
	810, 0, 0, 0, 0, 0, 564, 565, 566, 0,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	488, 489, 490, 491, 492, 493, 494, 0, 0, 450,
	0, 484, 0, 405, 406, 0, 0, 409, 410, 411,
	412, 0, 0, 415, 416, 417, 827, 828, 418, 442,
	443, 444, 419, 420, 421, 422, 423, 424, 425, 436,
	437, 438, 439, 440, 441, 426, 427, 428, 429, 430,
	433, 0, 135, 1095, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1183, 0, 0, 0, 0,
	759, 842, 1206, 1207, 662, 663, 0, 362, 363, 661,
	661, 609, 648, 0, 661, 613, 649, 614, 616, 615,
	617, 630, 631, 661, 620, 659, 660, 621, 622, 623,
	624, 625, 626, 627, 644, 632, 633, 634, 665, 0,
	669, 670, 645, 646, 0, 682, 686, 687, 688, 689,
	0, 0, 718, 94, 723, 724, 725, 726, 738, 731,
	939, 858, 859, 860, 0, 862, 865, 0, 923, 925,
	867, 869, 934, 935, 936, 0, 0, 0, 0, 0,
	873, 877, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 897, 1025, 1026, 1027, 914, 264,
	265, 0, 915, 0, 774, 0, 0, 0, 913, 0,
	0, 0, 0, 751, 752, 1053, 1050, 0, 0, 1010,
	1012, 0, 0, 0, 0, 0, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1028, 0, 0,
	0, 0, 0, 1046, 0, 916, 917, 918, 0, 1194,
	0, 130, 131, 0, 0, 0, 0, 0, 982, 0,
	0, 0, 0, 0, 0, 761, 1056, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 1160, 0, 708, 709,
	711, 0, 844, 0, 825, 0, 0, 714, 0, 755,
	0, 758, 58, 60, 767, 768, 0, 785, 764, 54,
	49, 0, 0, 802, 1114, 332, 1136, 0, 336, 337,
	1077, 1078, 0, 1070, 1072, 1073, 77, 782, 778, 0,
	856, 0, 0, 839, 0, 788, 790, 791, 792, 822,
	0, 795, 0, 0, 0, 0, 0, 96, 841, 1166,
	101, 0, 0, 106, 107, 1167, 1168, 1169, 1170, 0,
	517, -2, 400, 163, 165, 166, 167, 158, -2, 330,
	328, 329, 274, 332, 332, 297, 298, 299, 300, 301,
	302, 0, 0, 291, 292, 293, 294, 285, 0, 286,
	287, 288, 0, 289, 375, 0, 1079, 343, 344, 346,
	350, 0, 0, 0, 371, 372, 0, 1095, 0, 0,
	0, 1196, 1195, 1195, 1195, 0, 153, 154, 155, 156,
	553, 0, 0, 529, 551, 552, 151, 0, 0, 159,
	452, 451, 0, 585, 0, 373, 0, 0, 368, 368,
	353, 354, 482, 0, 0, 560, 561, 562, 563, 0,
	0, 0, 450, 452, 338, 0, 407, 408, 413, 414,
	431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 514, 515, 516, 1092, 1093, 1094,
	0, 0, 593, 0, 0, 392, 92, 1184, 598, 658,
	619, 650, 658, 611, 618, 638, 678, 722, 0, 0,
	0, 0, 730, 0, 0, 866, 924, 926, 870, 0,
	874, 878, 0, 0, 0, 0, 0, 0, 0, 920,
	944, 945, 0, 0, 1065, 0, 1051, 0, 0, 952,
	1013, 1014, 0, 0, 0, 0, 0, 963, 964, 965,
	966, 967, 0, 969, 0, 971, 972, 0, 0, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 760, 0, 1015, 1016, 1017, 1018, 1019, 1056, 707,
	710, 712, 798, 845, 846, 0, 0, 0, 0, 826,
	1192, 753, 754, 757, -2, 0, 0, 1058, 0, 0,
	785, 856, 786, 0, 765, 51, 801, 0, 1118, 1117,
	1130, 1143, 333, 334, 335, 1069, 0, 1074, 0, 1154,
	0, 0, 1146, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 832, 0, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 339,
	340, 144, 151, 402, 164, 382, 0, 0, 270, 331,
	295, 296, 0, 318, 0, 0, 0, 395, 116, 1083,
	1082, 350, 350, 345, 0, 348, 0, 1197, 321, 0,
	134, 0, 0, 0, 0, 0, 140, 523, 0, 0,
	530, 0, 0, 0, 456, 0, 467, 468, 0, 557,
	584, 0, 589, 342, 0, 352, 355, 811, 0, 0,
	469, 0, 452, 473, 474, 485, 434, 435, 432, 0,
	0, 1105, 1106, 1111, 1109, 1110, 121, 505, 507, 506,
	510, 0, 0, 503, 0, 392, 1079, 0, 597, 393,
	394, 661, 661, 717, 95, 0, 720, 0, 0, 0,
	0, 871, 875, 775, 0, 0, 320, 320, 1033, 320,
	324, 1036, 320, 1038, 320, 1041, 320, 1044, 1045, 0,
	0, 0, 0, 1048, 951, 1054, 0, 0, 0, 0,
	962, 0, 0, 0, 0, 132, 133, 982, 0, 0,
	984, 986, 987, 977, 983, 0, 0, 0, 941, 942,
	0, 1057, 847, 852, 852, 852, 0, 0, 0, 1179,
	1180, 1059, 1060, 856, 1061, 787, 766, 803, 1136, 0,
	1129, 0, -2, 1138, 0, 0, 0, 1144, 779, 78,
	857, 81, 0, 1154, 1162, 0, 1145, 1156, 1158, 0,
	0, 0, 1150, 0, 856, 789, 818, 820, 0, 815,
	830, 831, 833, 0, 835, 0, 837, 838, 800, 794,
	796, 0, 0, 0, 98, 0, 856, 856, 97, 0,
	843, 108, 109, 110, 401, 168, 173, 0, 0, 0,
	178, 0, 180, 0, 383, 0, 267, 269, 0, 0,
	171, 332, 0, 332, 0, 325, 0, 384, 396, 0,
	1080, 1081, 0, 0, 347, 349, 0, 1186, 136, 0,
	0, 0, 526, 0, 554, 0, 0, 0, 0, 0,
	0, 160, 453, 0, 0, 341, 0, 0, 582, 579,
	470, 0, 197, 198, 200, 0, 0, 472, 800, 1096,
	1097, 1098, 0, 1108, 1112, 124, 0, 0, 0, 0,
	594, 595, 596, 93, 604, 610, 719, 739, 864, 872,
	876, 0, 908, 1031, 332, 1034, 1035, 1037, 1039, 1040,
	1042, 1043, 909, 910, 0, 947, 0, 949, 1074, 0,
	1052, 0, 0, 961, 0, 0, 0, 970, 0, 0,
	976, 0, 978, 0, 981, 943, 0, 0, 0, 0,
	824, -2, 62, 1061, 1063, 0, 1123, 1121, 1121, 1131,
	1132, 0, 0, 1139, 0, 0, 0, 0, 82, 0,
	0, 0, 1159, 0, 0, 0, 0, 99, 1065, 812,
	819, 0, 0, 813, 0, 814, 834, 836, 793, -2,
	797, 0, 856, 856, 88, 89, 0, 174, 0, 176,
	191, 192, 0, 179, 181, 182, 266, 268, 0, 0,
	308, 319, 309, 0, 0, 397, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 800, 137, 138, 139, 518, 0, 528,
	0, 0, 0, 521, 0, 459, 0, 588, 0, 0,
	559, 0, 567, 0, 0, 0, 201, 202, 0, 1107,
	504, 0, 122, 123, 0, 0, 509, 1020, 1032, 0,
	0, 0, 1049, 0, 0, 0, 0, 968, 974, 0,
	985, 0, 0, 853, 0, 0, 0, 0, 844, 1063,
	80, 0, 0, 1126, 0, 1119, 1122, 1120, 1133, 0,
	0, 1140, 0, 1142, 0, 1163, 1164, 1157, 0, 1149,
	1152, 1148, 1151, 1074, 816, 0, 821, 0, 1065, 87,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 323, 326, 0, 0, 0, 519, 0, 531, 522,
	586, 587, 0, 590, 377, 583, 580, 581, 471, 0,
	125, 126, 0, 0, 0, 0, 0, 0, 946, 948,
	950, 959, 960, 1029, 1030, 975, 979, 0, 0, 849,
	806, 807, 854, 855, 0, 0, 799, 79, 1064, 1062,
	1115, 0, 1124, 1125, 1134, 1135, 1141, 0, 1147, 0,
	85, 0, 0, 0, 1074, 175, 0, 185, 0, 527,
	0, 530, 520, 0, 1099, 0, 0, 0, 511, 907,
	0, 0, 0, 982, 0, 848, 850, 851, 1127, 1128,
	1155, 1153, 817, 824, 0, 86, 378, 382, 1099, 0,
	0, 591, 501, 1101, 127, 128, 445, 446, 447, 121,
	1021, 0, 1024, 0, 808, 809, 532, 0, 534, 0,
	-2, 379, 380, 0, 169, 186, 187, 0, 0, 190,
	183, 184, 117, 0, 0, 0, 1102, 1103, 124, 1022,
	980, 533, 0, 0, 338, 0, 543, 381, 0, 0,
	0, 188, 189, 555, 0, 0, 508, 0, 535, 536,
	544, 0, 385, 387, 388, 0, 0, 386, 524, 0,
	555, 1100, 0, 0, 545, 541, 389, 390, 391, 556,
	525, 1023, 0, 537, 538, 539, 0, 548, 549, 0,
	540, 0, 0, 550, 0, 546, 547,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 139, 3, 3, 3, 165, 157, 3,
	83, 85, 162, 160, 84, 161, 214, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 578,
	147, 146, 148, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 167, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 135, 3, 168,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	136, 137, 138, 140, 141, 142, 143, 144, 145, 149,
	150, 151, 152, 153, 154, 155, 156, 158, 159, 164,
	166, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:498
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:504
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:508
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:544
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:573
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:579
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:585
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:589
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:598
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:608
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:614
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:620
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:628
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:688
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:767
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:773
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:793
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:817
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:821
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:833
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:837
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:855
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:865
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:869
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:875
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:888
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:904
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:910
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:920
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:924
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:928
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:934
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:938
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:942
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:946
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:952
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:956
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1004
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1008
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1019
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1024
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1030
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1050
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1056
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1072
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1079
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1086
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1091
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1096
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1101
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1108
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1115
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1126
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1137
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1143
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1147
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1175
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1181
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1185
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1192
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1196
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1202
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1212
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1217
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1250
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1259
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1268
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1281
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1285
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1291
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1322
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1338
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1342
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1351
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1356
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1689
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1693
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1697
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1701
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1932
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1937
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1949
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1959
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1984
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2031
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2040
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2046
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2056
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2060
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2065
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2069
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2085
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2089
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2093
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2097
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2101
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = yyDollar[2].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = "key"
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = yyDollar[1].str
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2169
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2179
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2185
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2189
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2195
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2199
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2205
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2211
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2215
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2219
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2223
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2232
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2238
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2244
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2250
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2256
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2260
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2264
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2268
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2272
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2307
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2313
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2327
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2509
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2518
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2526
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2534
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2540
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2586
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2634
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2638
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2648
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2662
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2666
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2670
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2682
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2686
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2690
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2696
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2710
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2763
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2794
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2830
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2848
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2857
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2865
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2874
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2881
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2893
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2902
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2917
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2931
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2935
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2941
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2947
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2953
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2963
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2967
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2973
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2979
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2985
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2991
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3015
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3021
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3027
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3031
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3035
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3041
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3045
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3050
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3054
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3059
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3063
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3069
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3073
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3077
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3081
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3085
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3089
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3093
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3097
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3101
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3105
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3109
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3113
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3117
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3121
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3125
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3141
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3145
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3149
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3153
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3158
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3173
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3177
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3192
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3199
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3206
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3215
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3237
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3241
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3421
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3437
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3441
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3445
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3460
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3464
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3472
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3476
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3480
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3484
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3490
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.str = "extended "
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3500
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3504
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3520
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3534
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3538
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3542
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3552
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3558
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3566
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3582
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3586
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3590
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3596
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3600
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3606
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3612
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3616
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3621
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3626
		{
			yyVAL.empty = struct{}{}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.empty = struct{}{}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3644
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3648
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3652
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3656
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3660
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3664
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3684
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3688
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3692
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3696
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3719
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3725
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3729
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3735
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3741
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3751
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3757
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3761
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3765
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3769
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3787
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3791
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3799
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3803
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3839
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3872
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3876
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3880
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3894
		{
			setAllowComments(yylex, true)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3904
		{
			yyVAL.strs = nil
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3908
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3918
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3922
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3927
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3931
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.str = SQLCacheStr
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3940
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3944
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3948
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3954
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3958
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3975
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3979
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3985
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3989
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3998
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4003
		{
			yyVAL.strs = nil
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4011
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4015
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4019
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.str = SQLCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.str = DistinctStr
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			yyVAL.str = DistinctStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = StraightJoinHint
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4055
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4065
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4069
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4073
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4077
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4090
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4102
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4106
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4112
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4118
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4122
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4132
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4136
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4140
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4144
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4150
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4154
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4160
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4164
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4173
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4179
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4189
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4199
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4203
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4207
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4217
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4221
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4234
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4238
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4242
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4246
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4252
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4254
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4266
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4282
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4289
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4295
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4299
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4303
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4309
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4315
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4319
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4323
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4327
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4333
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4337
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4351
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4367
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4372
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4376
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4382
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4392
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4396
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4400
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4404
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4409
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4413
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4417
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4421
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4427
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4431
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4446
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4450
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4481
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4511
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4515
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4519
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4527
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4533
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4537
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4541
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4545
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4577
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4591
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4599
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4679
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4683
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4689
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4693
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4697
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4703
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4707
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4713
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4717
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4724
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4728
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4732
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4736
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4742
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4746
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4750
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4754
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4758
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4762
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4766
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4772
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4776
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4780
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4787
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4793
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4811
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4815
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4819
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4849
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4853
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4857
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4865
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4876
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4880
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4886
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4890
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4903
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4907
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4911
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4915
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4919
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4923
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4927
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4943
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4992
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4996
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5002
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5006
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5012
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5016
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5024
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5028
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5032
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5036
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5040
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5044
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5048
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5052
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5056
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5060
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5064
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5070
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5074
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5078
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5082
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5086
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5090
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5094
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5098
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5102
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5157
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5161
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5165
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5169
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5173
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5183
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5187
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5197
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5201
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5207
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5211
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5215
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5219
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5223
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5229
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5233
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5237
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5241
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5245
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5249
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5253
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5257
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5261
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5265
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5280
		{
			yyVAL.str = string("")
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5284
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5290
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5300
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5315
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5319
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5323
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5338
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5342
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5352
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5357
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5361
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5370
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5376
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5382
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5386
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5392
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5397
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5401
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5405
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5410
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5414
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5420
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5424
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5428
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5433
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5437
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5441
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5445
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5449
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5456
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5460
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5464
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5468
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5474
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5478
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5482
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5487
		{
			yyVAL.str = ""
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5491
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5495
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5499
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5504
		{
			yyVAL.str = ""
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5508
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5523
		{
			yyVAL.str = ""
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5527
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5532
		{
			yyVAL.str = "cascaded"
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5536
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5540
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5549
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5555
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5561
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5567
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5576
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5580
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5585
		{
			yyVAL.str = ""
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5589
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5595
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5599
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5605
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5609
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5613
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5618
		{
			yyVAL.str = ""
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5622
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5626
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5631
		{
			yyVAL.str = ""
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5635
		{
			yyVAL.str = " header"
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5640
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5644
		{
			yyVAL.str = " manifest on"
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5648
		{
			yyVAL.str = " manifest off"
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5653
		{
			yyVAL.str = ""
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5657
		{
			yyVAL.str = " overwrite on"
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5661
		{
			yyVAL.str = " overwrite off"
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5667
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5672
		{
			yyVAL.str = ""
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5676
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5692
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5696
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5701
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5705
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5711
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5715
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5721
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5734
		{
			yyVAL.str = ""
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5738
		{
			yyVAL.str = " optionally"
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5751
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5755
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5759
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5763
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5767
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5773
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5777
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5781
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5785
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5794
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5800
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5804
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5810
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5814
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5820
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5835
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5839
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5845
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5851
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5855
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5861
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5865
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5869
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5873
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5877
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5885
		{
			yyVAL.str = "charset"
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5919
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5927
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5929
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5932
		{
			yyVAL.empty = struct{}{}
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5934
		{
			yyVAL.empty = struct{}{}
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5936
		{
			yyVAL.empty = struct{}{}
		}
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5940
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5949
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5956
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5960
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5966
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5970
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5983
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5993
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6004
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6498
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6507
		{
			decNesting(yylex)
		}
	case 1679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6512
		{
			skipToEnd(yylex)
		}
	case 1680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6517
		{
			skipToEnd(yylex)
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6521
		{
			skipToEnd(yylex)
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6525
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
