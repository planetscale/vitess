// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const EXPRESSION_PREC_SETTER = 57457
const OR = 57458
const XOR = 57459
const AND = 57460
const NOT = 57461
const BETWEEN = 57462
const CASE = 57463
const WHEN = 57464
const THEN = 57465
const ELSE = 57466
const END = 57467
const LE = 57468
const GE = 57469
const NE = 57470
const NULL_SAFE_EQUAL = 57471
const IS = 57472
const LIKE = 57473
const REGEXP = 57474
const IN = 57475
const SHIFT_LEFT = 57476
const SHIFT_RIGHT = 57477
const DIV = 57478
const MOD = 57479
const UNARY = 57480
const COLLATE = 57481
const BINARY = 57482
const UNDERSCORE_ARMSCII8 = 57483
const UNDERSCORE_ASCII = 57484
const UNDERSCORE_BIG5 = 57485
const UNDERSCORE_BINARY = 57486
const UNDERSCORE_CP1250 = 57487
const UNDERSCORE_CP1251 = 57488
const UNDERSCORE_CP1256 = 57489
const UNDERSCORE_CP1257 = 57490
const UNDERSCORE_CP850 = 57491
const UNDERSCORE_CP852 = 57492
const UNDERSCORE_CP866 = 57493
const UNDERSCORE_CP932 = 57494
const UNDERSCORE_DEC8 = 57495
const UNDERSCORE_EUCJPMS = 57496
const UNDERSCORE_EUCKR = 57497
const UNDERSCORE_GB18030 = 57498
const UNDERSCORE_GB2312 = 57499
const UNDERSCORE_GBK = 57500
const UNDERSCORE_GEOSTD8 = 57501
const UNDERSCORE_GREEK = 57502
const UNDERSCORE_HEBREW = 57503
const UNDERSCORE_HP8 = 57504
const UNDERSCORE_KEYBCS2 = 57505
const UNDERSCORE_KOI8R = 57506
const UNDERSCORE_KOI8U = 57507
const UNDERSCORE_LATIN1 = 57508
const UNDERSCORE_LATIN2 = 57509
const UNDERSCORE_LATIN5 = 57510
const UNDERSCORE_LATIN7 = 57511
const UNDERSCORE_MACCE = 57512
const UNDERSCORE_MACROMAN = 57513
const UNDERSCORE_SJIS = 57514
const UNDERSCORE_SWE7 = 57515
const UNDERSCORE_TIS620 = 57516
const UNDERSCORE_UCS2 = 57517
const UNDERSCORE_UJIS = 57518
const UNDERSCORE_UTF16 = 57519
const UNDERSCORE_UTF16LE = 57520
const UNDERSCORE_UTF32 = 57521
const UNDERSCORE_UTF8 = 57522
const UNDERSCORE_UTF8MB4 = 57523
const INTERVAL = 57524
const JSON_EXTRACT_OP = 57525
const JSON_UNQUOTE_EXTRACT_OP = 57526
const CREATE = 57527
const ALTER = 57528
const DROP = 57529
const RENAME = 57530
const ANALYZE = 57531
const ADD = 57532
const FLUSH = 57533
const CHANGE = 57534
const MODIFY = 57535
const REVERT = 57536
const SCHEMA = 57537
const TABLE = 57538
const INDEX = 57539
const VIEW = 57540
const TO = 57541
const IGNORE = 57542
const IF = 57543
const PRIMARY = 57544
const COLUMN = 57545
const SPATIAL = 57546
const FULLTEXT = 57547
const KEY_BLOCK_SIZE = 57548
const CHECK = 57549
const INDEXES = 57550
const ACTION = 57551
const CASCADE = 57552
const CONSTRAINT = 57553
const FOREIGN = 57554
const NO = 57555
const REFERENCES = 57556
const RESTRICT = 57557
const SHOW = 57558
const DESCRIBE = 57559
const EXPLAIN = 57560
const DATE = 57561
const ESCAPE = 57562
const REPAIR = 57563
const OPTIMIZE = 57564
const TRUNCATE = 57565
const COALESCE = 57566
const EXCHANGE = 57567
const REBUILD = 57568
const PARTITIONING = 57569
const REMOVE = 57570
const MAXVALUE = 57571
const PARTITION = 57572
const REORGANIZE = 57573
const LESS = 57574
const THAN = 57575
const PROCEDURE = 57576
const TRIGGER = 57577
const VINDEX = 57578
const VINDEXES = 57579
const DIRECTORY = 57580
const NAME = 57581
const UPGRADE = 57582
const STATUS = 57583
const VARIABLES = 57584
const WARNINGS = 57585
const CASCADED = 57586
const DEFINER = 57587
const OPTION = 57588
const SQL = 57589
const UNDEFINED = 57590
const SEQUENCE = 57591
const MERGE = 57592
const TEMPORARY = 57593
const TEMPTABLE = 57594
const INVOKER = 57595
const SECURITY = 57596
const FIRST = 57597
const AFTER = 57598
const LAST = 57599
const VITESS_MIGRATION = 57600
const CANCEL = 57601
const RETRY = 57602
const COMPLETE = 57603
const CLEANUP = 57604
const BEGIN = 57605
const START = 57606
const TRANSACTION = 57607
const COMMIT = 57608
const ROLLBACK = 57609
const SAVEPOINT = 57610
const RELEASE = 57611
const WORK = 57612
const BIT = 57613
const TINYINT = 57614
const SMALLINT = 57615
const MEDIUMINT = 57616
const INT = 57617
const INTEGER = 57618
const BIGINT = 57619
const INTNUM = 57620
const REAL = 57621
const DOUBLE = 57622
const FLOAT_TYPE = 57623
const DECIMAL = 57624
const NUMERIC = 57625
const TIME = 57626
const TIMESTAMP = 57627
const DATETIME = 57628
const YEAR = 57629
const CHAR = 57630
const VARCHAR = 57631
const BOOL = 57632
const CHARACTER = 57633
const VARBINARY = 57634
const NCHAR = 57635
const TEXT = 57636
const TINYTEXT = 57637
const MEDIUMTEXT = 57638
const LONGTEXT = 57639
const BLOB = 57640
const TINYBLOB = 57641
const MEDIUMBLOB = 57642
const LONGBLOB = 57643
const JSON = 57644
const ENUM = 57645
const GEOMETRY = 57646
const POINT = 57647
const LINESTRING = 57648
const POLYGON = 57649
const GEOMETRYCOLLECTION = 57650
const MULTIPOINT = 57651
const MULTILINESTRING = 57652
const MULTIPOLYGON = 57653
const NULLX = 57654
const AUTO_INCREMENT = 57655
const APPROXNUM = 57656
const SIGNED = 57657
const UNSIGNED = 57658
const ZEROFILL = 57659
const CODE = 57660
const COLLATION = 57661
const COLUMNS = 57662
const DATABASES = 57663
const ENGINES = 57664
const EVENT = 57665
const EXTENDED = 57666
const FIELDS = 57667
const FULL = 57668
const FUNCTION = 57669
const GTID_EXECUTED = 57670
const KEYSPACES = 57671
const OPEN = 57672
const PLUGINS = 57673
const PRIVILEGES = 57674
const PROCESSLIST = 57675
const SCHEMAS = 57676
const TABLES = 57677
const TRIGGERS = 57678
const USER = 57679
const VGTID_EXECUTED = 57680
const VITESS_KEYSPACES = 57681
const VITESS_METADATA = 57682
const VITESS_MIGRATIONS = 57683
const VITESS_REPLICATION_STATUS = 57684
const VITESS_SHARDS = 57685
const VITESS_TABLETS = 57686
const VSCHEMA = 57687
const NAMES = 57688
const GLOBAL = 57689
const SESSION = 57690
const ISOLATION = 57691
const LEVEL = 57692
const READ = 57693
const WRITE = 57694
const ONLY = 57695
const REPEATABLE = 57696
const COMMITTED = 57697
const UNCOMMITTED = 57698
const SERIALIZABLE = 57699
const CURRENT_TIMESTAMP = 57700
const DATABASE = 57701
const CURRENT_DATE = 57702
const CURRENT_TIME = 57703
const LOCALTIME = 57704
const LOCALTIMESTAMP = 57705
const CURRENT_USER = 57706
const UTC_DATE = 57707
const UTC_TIME = 57708
const UTC_TIMESTAMP = 57709
const DAY = 57710
const DAY_HOUR = 57711
const DAY_MICROSECOND = 57712
const DAY_MINUTE = 57713
const DAY_SECOND = 57714
const HOUR = 57715
const HOUR_MICROSECOND = 57716
const HOUR_MINUTE = 57717
const HOUR_SECOND = 57718
const MICROSECOND = 57719
const MINUTE = 57720
const MINUTE_MICROSECOND = 57721
const MINUTE_SECOND = 57722
const MONTH = 57723
const QUARTER = 57724
const SECOND = 57725
const SECOND_MICROSECOND = 57726
const YEAR_MONTH = 57727
const WEEK = 57728
const REPLACE = 57729
const CONVERT = 57730
const CAST = 57731
const SUBSTR = 57732
const SUBSTRING = 57733
const GROUP_CONCAT = 57734
const SEPARATOR = 57735
const TIMESTAMPADD = 57736
const TIMESTAMPDIFF = 57737
const MATCH = 57738
const AGAINST = 57739
const BOOLEAN = 57740
const LANGUAGE = 57741
const WITH = 57742
const QUERY = 57743
const EXPANSION = 57744
const WITHOUT = 57745
const VALIDATION = 57746
const UNUSED = 57747
const ARRAY = 57748
const CUME_DIST = 57749
const DESCRIPTION = 57750
const DENSE_RANK = 57751
const EMPTY = 57752
const EXCEPT = 57753
const FIRST_VALUE = 57754
const GROUPING = 57755
const GROUPS = 57756
const JSON_TABLE = 57757
const LAG = 57758
const LAST_VALUE = 57759
const LATERAL = 57760
const LEAD = 57761
const MEMBER = 57762
const NTH_VALUE = 57763
const NTILE = 57764
const OF = 57765
const OVER = 57766
const PERCENT_RANK = 57767
const RANK = 57768
const RECURSIVE = 57769
const ROW_NUMBER = 57770
const SYSTEM = 57771
const WINDOW = 57772
const ACTIVE = 57773
const ADMIN = 57774
const BUCKETS = 57775
const CLONE = 57776
const COMPONENT = 57777
const DEFINITION = 57778
const ENFORCED = 57779
const EXCLUDE = 57780
const FOLLOWING = 57781
const GEOMCOLLECTION = 57782
const GET_MASTER_PUBLIC_KEY = 57783
const HISTOGRAM = 57784
const HISTORY = 57785
const INACTIVE = 57786
const INVISIBLE = 57787
const LOCKED = 57788
const MASTER_COMPRESSION_ALGORITHMS = 57789
const MASTER_PUBLIC_KEY_PATH = 57790
const MASTER_TLS_CIPHERSUITES = 57791
const MASTER_ZSTD_COMPRESSION_LEVEL = 57792
const NESTED = 57793
const NETWORK_NAMESPACE = 57794
const NOWAIT = 57795
const NULLS = 57796
const OJ = 57797
const OLD = 57798
const OPTIONAL = 57799
const ORDINALITY = 57800
const ORGANIZATION = 57801
const OTHERS = 57802
const PATH = 57803
const PERSIST = 57804
const PERSIST_ONLY = 57805
const PRECEDING = 57806
const PRIVILEGE_CHECKS_USER = 57807
const PROCESS = 57808
const RANDOM = 57809
const REFERENCE = 57810
const REQUIRE_ROW_FORMAT = 57811
const RESOURCE = 57812
const RESPECT = 57813
const RESTART = 57814
const RETAIN = 57815
const REUSE = 57816
const ROLE = 57817
const SECONDARY = 57818
const SECONDARY_ENGINE = 57819
const SECONDARY_LOAD = 57820
const SECONDARY_UNLOAD = 57821
const SKIP = 57822
const SRID = 57823
const THREAD_PRIORITY = 57824
const TIES = 57825
const UNBOUNDED = 57826
const VCPU = 57827
const VISIBLE = 57828
const FORMAT = 57829
const TREE = 57830
const VITESS = 57831
const TRADITIONAL = 57832
const LOCAL = 57833
const LOW_PRIORITY = 57834
const NO_WRITE_TO_BINLOG = 57835
const LOGS = 57836
const ERROR = 57837
const GENERAL = 57838
const HOSTS = 57839
const OPTIMIZER_COSTS = 57840
const USER_RESOURCES = 57841
const SLOW = 57842
const CHANNEL = 57843
const RELAY = 57844
const EXPORT = 57845
const AVG_ROW_LENGTH = 57846
const CONNECTION = 57847
const CHECKSUM = 57848
const DELAY_KEY_WRITE = 57849
const ENCRYPTION = 57850
const ENGINE = 57851
const INSERT_METHOD = 57852
const MAX_ROWS = 57853
const MIN_ROWS = 57854
const PACK_KEYS = 57855
const PASSWORD = 57856
const FIXED = 57857
const DYNAMIC = 57858
const COMPRESSED = 57859
const REDUNDANT = 57860
const COMPACT = 57861
const ROW_FORMAT = 57862
const STATS_AUTO_RECALC = 57863
const STATS_PERSISTENT = 57864
const STATS_SAMPLE_PAGES = 57865
const STORAGE = 57866
const MEMORY = 57867
const DISK = 57868
const PARTITIONS = 57869
const LINEAR = 57870
const RANGE = 57871
const LIST = 57872
const SUBPARTITION = 57873
const SUBPARTITIONS = 57874
const HASH = 57875

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	551, 137,
	-2, 143,
	-1, 45,
	115, 143,
	155, 143,
	308, 143,
	-2, 441,
	-1, 52,
	33, 614,
	214, 614,
	225, 614,
	258, 628,
	259, 628,
	-2, 616,
	-1, 57,
	216, 638,
	-2, 636,
	-1, 108,
	213, 1083,
	-2, 116,
	-1, 110,
	1, 138,
	551, 138,
	-2, 143,
	-1, 120,
	116, 344,
	219, 344,
	-2, 435,
	-1, 139,
	115, 143,
	155, 143,
	308, 143,
	-2, 450,
	-1, 598,
	199, 1104,
	-2, 1100,
	-1, 599,
	199, 1105,
	-2, 1101,
	-1, 669,
	57, 706,
	-2, 714,
	-1, 706,
	131, 1462,
	-2, 109,
	-1, 707,
	131, 1339,
	-2, 110,
	-1, 713,
	131, 1393,
	-2, 1077,
	-1, 855,
	131, 1272,
	-2, 1074,
	-1, 891,
	224, 38,
	229, 38,
	-2, 355,
	-1, 968,
	1, 489,
	551, 489,
	-2, 143,
	-1, 1164,
	57, 707,
	-2, 719,
	-1, 1165,
	57, 708,
	-2, 720,
	-1, 1217,
	115, 143,
	155, 143,
	308, 143,
	-2, 385,
	-1, 1220,
	23, 162,
	-2, 164,
	-1, 1293,
	116, 344,
	219, 344,
	-2, 435,
	-1, 1302,
	224, 39,
	229, 39,
	-2, 356,
	-1, 1552,
	199, 1109,
	-2, 1103,
	-1, 1627,
	115, 143,
	155, 143,
	308, 143,
	-2, 386,
	-1, 1863,
	75, 91,
	84, 91,
	-2, 772,
	-1, 2030,
	47, 1045,
	-2, 1039,
	-1, 2218,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 747,
}

const yyPrivate = 57344

const yyLast = 33265

var yyAct = [...]int{
	598, 2483, 1583, 2263, 2399, 2454, 2369, 2432, 2371, 2224,
	2139, 2418, 2127, 2405, 2044, 1146, 1883, 592, 34, 3,
	2335, 2287, 1890, 2041, 1808, 2128, 1031, 90, 1892, 1179,
	1836, 662, 2045, 2042, 2183, 2189, 2279, 2292, 550, 554,
	1566, 593, 601, 1600, 2209, 2039, 547, 2031, 176, 1659,
	1909, 176, 684, 514, 176, 1828, 1587, 546, 1970, 530,
	1859, 176, 1932, 548, 590, 591, 2086, 1910, 1679, 176,
	1664, 1911, 979, 576, 148, 858, 33, 1613, 1848, 711,
	542, 176, 35, 1986, 1166, 1820, 1497, 685, 1604, 666,
	1624, 670, 1504, 1456, 1692, 1724, 1546, 1666, 664, 921,
	134, 1678, 1903, 530, 1300, 886, 530, 176, 530, 687,
	1865, 1188, 559, 1607, 1149, 1605, 1516, 1474, 1568, 1209,
	1407, 1274, 89, 1307, 1049, 899, 1404, 85, 1676, 708,
	1206, 865, 866, 1390, 862, 892, 1208, 887, 888, 1192,
	1592, 676, 1292, 1316, 1269, 1029, 1412, 1024, 117, 698,
	671, 1655, 674, 889, 79, 96, 672, 964, 118, 70,
	83, 91, 92, 1115, 2484, 1119, 2467, 537, 2317, 2400,
	2226, 151, 2372, 1588, 8, 111, 1722, 112, 2226, 2227,
	2228, 1950, 1949, 1978, 1979, 1563, 1564, 7, 119, 692,
	1050, 697, 6, 98, 99, 1559, 102, 673, 71, 108,
	1463, 1462, 173, 1461, 1460, 482, 1459, 178, 179, 180,
	1458, 859, 678, 1376, 926, 1445, 113, 540, 2446, 541,
	1450, 1806, 2027, 1830, 874, 661, 487, 1549, 669, 84,
	538, 665, 663, 705, 2240, 2331, 923, 2108, 2258, 2330,
	869, 2259, 72, 925, 924, 74, 686, 903, 2477, 937,
	938, 2428, 941, 942, 943, 944, 700, 701, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 934, 2472, 902, 712, 1081, 1050, 72,
	1762, 679, 113, 2387, 2462, 2264, 880, 881, 879, 2419,
	1710, 72, 1060, 2427, 927, 928, 929, 72, 2340, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1090, 1089, 1091, 1092,
	1671, 2386, 1985, 2171, 1008, 1839, 1283, 2078, 2079, 81,
	1957, 172, 1619, 1620, 1956, 939, 1565, 1210, 2305, 1211,
	2077, 873, 1928, 1669, 875, 178, 179, 180, 1807, 1015,
	1840, 1017, 1977, 1759, 1760, 114, 113, 136, 878, 1874,
	973, 974, 1873, 1618, 1027, 1875, 81, 998, 156, 967,
	986, 659, 172, 658, 517, 987, 1003, 1004, 81, 2319,
	999, 992, 1900, 985, 81, 984, 986, 1014, 1016, 517,
	1060, 987, 2141, 1056, 1639, 1638, 114, 2186, 2163, 146,
	582, 517, 2161, 528, 135, 1449, 532, 526, 963, 156,
	1736, 1733, 1735, 1734, 876, 504, 1451, 1452, 1453, 1153,
	517, 1933, 1366, 1693, 153, 1953, 154, 1725, 1396, 940,
	2135, 1391, 1294, 1295, 145, 144, 171, 878, 2136, 870,
	1738, 882, 1739, 1730, 1740, 2471, 872, 871, 1001, 1002,
	1021, 1880, 1965, 1007, 969, 1741, 946, 1000, 993, 945,
	2143, 503, 1026, 1005, 1367, 153, 1368, 154, 1668, 2142,
	1727, 1729, 501, 1006, 2327, 2447, 1012, 171, 2253, 1695,
	1013, 1056, 1601, 1879, 1048, 910, 919, 918, 917, 908,
	1018, 1286, 176, 876, 176, 916, 1731, 176, 915, 178,
	179, 180, 914, 878, 962, 1093, 1093, 913, 912, 907,
	498, 1728, 1011, 883, 2468, 1019, 920, 863, 1760, 512,
	1896, 861, 877, 894, 2460, 530, 530, 530, 517, 140,
	1296, 147, 1969, 1293, 509, 141, 142, 863, 863, 2458,
	157, 1405, 895, 530, 530, 1677, 699, 1809, 1811, 162,
	1966, 1306, 1716, 996, 2115, 1055, 1052, 1053, 1054, 1059,
	1061, 1058, 34, 1057, 1042, 1401, 966, 518, 1036, 930,
	1051, 982, 1952, 988, 989, 990, 991, 2014, 2107, 2013,
	2012, 157, 518, 1281, 2341, 1280, 1279, 1981, 1773, 1942,
	162, 901, 1712, 1402, 518, 488, 1028, 490, 505, 936,
	520, 877, 519, 494, 1277, 492, 496, 506, 497, 2466,
	491, 2316, 502, 518, 1397, 493, 507, 508, 510, 524,
	523, 511, 911, 500, 521, 1955, 909, 486, 481, 1096,
	1097, 1098, 1099, 2320, 1093, 1964, 2364, 1144, 1963, 1104,
	2223, 1107, 1020, 1055, 1052, 1053, 1054, 1059, 1061, 1058,
	75, 1057, 2205, 965, 1305, 1870, 149, 1139, 1051, 2187,
	1835, 1972, 1670, 80, 1987, 2385, 1971, 877, 1798, 176,
	1558, 1033, 1034, 1625, 594, 1972, 577, 579, 595, 596,
	1971, 575, 578, 597, 1100, 1196, 176, 1761, 900, 1395,
	901, 1156, 1810, 901, 1126, 1160, 1145, 149, 1094, 1095,
	80, 666, 901, 664, 1159, 530, 977, 1157, 110, 176,
	580, 581, 80, 901, 530, 1092, 2076, 975, 80, 1045,
	530, 518, 681, 983, 2398, 1154, 1378, 1377, 1379, 1380,
	1381, 143, 1043, 972, 995, 105, 2456, 1044, 1009, 2457,
	708, 2455, 71, 137, 1989, 997, 138, 1413, 1025, 1117,
	2381, 1118, 981, 2199, 1145, 1121, 178, 179, 180, 922,
	1499, 178, 179, 180, 1158, 1832, 1711, 522, 89, 1726,
	1132, 1133, 1134, 1135, 1085, 1086, 1087, 1088, 1090, 1089,
	1091, 1092, 1150, 1517, 1398, 515, 1212, 900, 1046, 2002,
	900, 106, 935, 894, 897, 898, 1517, 863, 1787, 900,
	516, 891, 895, 1922, 904, 894, 1065, 1991, 92, 1995,
	900, 1990, 2301, 1988, 905, 904, 894, 1392, 1993, 1393,
	890, 1063, 1394, 1064, 1065, 905, 1500, 1992, 1155, 2097,
	1479, 1833, 906, 1022, 1161, 1147, 2096, 663, 1178, 1699,
	1994, 1996, 1315, 665, 1480, 1481, 1478, 150, 155, 152,
	158, 159, 160, 161, 163, 164, 165, 166, 1064, 1065,
	1202, 1203, 1314, 167, 168, 169, 170, 1010, 176, 1709,
	1304, 1063, 1270, 1064, 1065, 2481, 1414, 1175, 980, 1173,
	2004, 1278, 1704, 968, 2168, 1593, 1594, 712, 150, 155,
	152, 158, 159, 160, 161, 163, 164, 165, 166, 1707,
	530, 910, 1302, 908, 167, 168, 169, 170, 1708, 1063,
	1311, 1064, 1065, 1063, 1313, 1064, 1065, 530, 530, 2440,
	530, 2082, 530, 530, 1704, 530, 530, 530, 530, 530,
	530, 1087, 1088, 1090, 1089, 1091, 1092, 1469, 1471, 1472,
	530, 2390, 1207, 2411, 176, 1349, 2469, 2409, 1197, 1173,
	1706, 2486, 1312, 2429, 81, 2431, 2413, 2414, 1470, 2441,
	176, 1894, 1895, 2166, 1173, 2401, 2357, 1477, 2410, 2402,
	1783, 530, 2391, 176, 2239, 1298, 2323, 1344, 1345, 1063,
	2238, 1064, 1065, 1063, 1403, 1064, 1065, 1063, 176, 1064,
	1065, 1284, 1285, 599, 612, 613, 1291, 2358, 1063, 2113,
	1064, 1065, 1907, 1063, 176, 1064, 1065, 1765, 1766, 1767,
	1063, 176, 1064, 1065, 1310, 1346, 1906, 1674, 901, 2470,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 530,
	530, 530, 1309, 1308, 1308, 1385, 1276, 1288, 1386, 1383,
	1282, 177, 1782, 1289, 177, 703, 1301, 177, 1778, 1352,
	1353, 1173, 531, 1287, 177, 1358, 1359, 1777, 1521, 176,
	1371, 1318, 177, 1319, 1893, 1321, 1323, 1409, 1373, 1327,
	1329, 1331, 1333, 1335, 177, 1417, 1896, 1063, 1362, 1064,
	1065, 1370, 1421, 1369, 1423, 1424, 1425, 1426, 1776, 2174,
	1186, 1430, 1063, 1360, 1064, 1065, 531, 2361, 1384, 531,
	177, 531, 1382, 1354, 1498, 1444, 178, 179, 180, 1351,
	2094, 1350, 1406, 1325, 1347, 900, 2360, 1507, 530, 2359,
	2300, 894, 897, 898, 1063, 863, 1064, 1065, 1475, 891,
	895, 1372, 2298, 530, 530, 1482, 1473, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	113, 1419, 1886, 1483, 880, 1185, 879, 2276, 2236, 178,
	179, 180, 176, 1550, 1518, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1067, 694, 1440, 1441, 1442, 2093, 1571, 1443,
	1916, 178, 179, 180, 1063, 1877, 1064, 1065, 176, 2173,
	1063, 530, 1064, 1065, 1908, 2198, 1182, 1887, 1904, 1476,
	1720, 176, 1719, 1586, 530, 1572, 178, 179, 180, 176,
	1687, 176, 1502, 176, 176, 530, 1552, 1501, 530, 1446,
	1573, 1889, 1574, 1410, 1063, 1884, 1064, 1065, 1063, 530,
	1064, 1065, 1374, 1550, 1361, 1554, 1555, 1357, 543, 1894,
	1895, 708, 89, 1356, 708, 1183, 1885, 1083, 1084, 1085,
	1086, 1087, 1088, 1090, 1089, 1091, 1092, 1551, 89, 1355,
	1184, 1579, 178, 179, 180, 1023, 1685, 688, 95, 2138,
	1173, 86, 2325, 1603, 1826, 2485, 86, 2324, 1891, 94,
	2262, 93, 87, 88, 530, 1934, 1552, 87, 2256, 2465,
	1680, 1681, 1682, 1826, 2451, 1684, 1686, 88, 1645, 1646,
	1647, 1648, 1628, 1919, 1629, 1826, 2435, 1611, 530, 1415,
	1416, 1826, 2425, 678, 530, 1311, 1826, 2394, 1311, 1633,
	1311, 1826, 2375, 1420, 2347, 1173, 1703, 1598, 1661, 1581,
	1427, 1428, 1429, 2200, 1632, 1694, 1173, 2256, 1173, 1503,
	2480, 1173, 1893, 1596, 2071, 1615, 1509, 1510, 1173, 1826,
	2254, 1667, 1616, 1760, 1896, 1173, 530, 1640, 1498, 1641,
	1642, 1643, 1644, 1498, 1498, 1553, 1631, 1630, 1556, 1557,
	1704, 1173, 2203, 1173, 95, 1651, 1652, 1653, 1654, 2105,
	2104, 2101, 2102, 1691, 94, 94, 1705, 93, 712, 2101,
	2100, 712, 1845, 1173, 1774, 1173, 88, 1760, 1951, 176,
	1062, 1578, 1273, 1936, 1930, 1931, 176, 1826, 1825, 1866,
	1866, 176, 176, 1837, 1662, 176, 1672, 176, 1822, 1698,
	1675, 1683, 1701, 176, 1702, 1673, 1837, 1657, 1658, 1844,
	176, 1713, 903, 88, 1062, 1173, 1273, 1272, 2040, 1081,
	1700, 1980, 1308, 1704, 1715, 1697, 1662, 1696, 2198, 1717,
	1718, 1714, 1774, 1888, 1173, 2241, 1218, 1217, 176, 530,
	902, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1090, 1089,
	1091, 1092, 1867, 1867, 2380, 177, 1826, 177, 1845, 2103,
	177, 1869, 1760, 1845, 1845, 2370, 1617, 1774, 1792, 1791,
	1774, 1081, 1723, 1772, 1704, 1688, 1591, 2198, 1751, 1752,
	1177, 1913, 1561, 1754, 1454, 2242, 2243, 2244, 531, 531,
	531, 1400, 1755, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1090, 1089, 1091, 1092, 1340, 1204, 531, 531, 668, 885,
	1475, 884, 2433, 2475, 2397, 81, 1769, 1081, 1771, 1744,
	1077, 2374, 1078, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1090, 1089, 1091, 1092, 1770, 2368, 1079, 1080, 1076, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1090, 1089, 1091, 1092,
	583, 2337, 176, 1180, 1341, 1342, 1343, 2312, 2245, 2233,
	176, 1275, 1660, 2137, 2099, 1081, 1937, 1656, 530, 1758,
	1650, 1649, 1388, 1303, 1299, 1804, 1271, 107, 1912, 1831,
	2437, 1476, 1337, 967, 2140, 81, 1768, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1090, 1089, 1091, 1092, 2210, 2211,
	176, 176, 2338, 1671, 2406, 2246, 2247, 2213, 34, 529,
	1841, 2120, 2119, 2118, 2040, 1923, 1876, 1861, 1745, 1447,
	2216, 2062, 1786, 2215, 2059, 1913, 2063, 2058, 1552, 1338,
	1339, 2449, 177, 1827, 1850, 1853, 1854, 1855, 1851, 2426,
	1852, 1856, 2060, 1585, 2210, 2211, 1181, 2061, 2064, 177,
	1854, 1855, 1577, 710, 1823, 2204, 860, 2124, 867, 2020,
	2019, 2356, 530, 2291, 2293, 1150, 1805, 176, 531, 1551,
	2032, 2034, 177, 2191, 176, 2029, 1860, 531, 1813, 2035,
	530, 2190, 1929, 531, 2194, 1824, 530, 1399, 1901, 1902,
	1311, 1311, 1881, 1834, 1864, 530, 1819, 657, 1066, 1850,
	1853, 1854, 1855, 1851, 682, 1852, 1856, 1948, 1898, 1172,
	1636, 1917, 683, 1868, 1513, 932, 931, 2150, 176, 176,
	176, 176, 176, 86, 1667, 1882, 1113, 1871, 1514, 1912,
	1784, 86, 1975, 1944, 87, 176, 176, 1035, 88, 1943,
	1171, 1167, 87, 1905, 114, 2196, 95, 1593, 1594, 2116,
	88, 176, 1748, 1914, 2377, 1168, 2333, 94, 1915, 93,
	1897, 1920, 1858, 543, 1737, 1795, 1796, 1946, 88, 1498,
	1171, 1167, 1924, 1925, 1926, 1582, 690, 691, 2018, 1291,
	1575, 1576, 1170, 1764, 1169, 1168, 2017, 93, 95, 530,
	2434, 2299, 2297, 2296, 1938, 1939, 1947, 2289, 1945, 94,
	94, 93, 664, 530, 2195, 2193, 2001, 2121, 2080, 1689,
	1164, 1165, 1170, 176, 1169, 2011, 689, 530, 95, 2288,
	1982, 2184, 1837, 1822, 2439, 2438, 530, 1983, 1967, 94,
	1793, 177, 1198, 530, 530, 1190, 176, 176, 176, 176,
	176, 2022, 2439, 1189, 100, 101, 2362, 2092, 176, 680,
	670, 1997, 2011, 176, 176, 1998, 176, 1984, 2052, 176,
	176, 176, 97, 531, 82, 1, 607, 2408, 499, 2043,
	1160, 1562, 2046, 2023, 2043, 1148, 513, 2404, 1375, 2037,
	531, 531, 2095, 531, 2010, 531, 531, 176, 531, 531,
	531, 531, 531, 531, 2070, 2021, 1365, 2265, 2024, 2334,
	1665, 893, 139, 531, 1626, 1627, 2421, 177, 2114, 671,
	104, 856, 103, 896, 176, 672, 2072, 994, 1690, 2073,
	2257, 530, 1899, 177, 2053, 2065, 1637, 2056, 530, 2069,
	2126, 1224, 1222, 176, 531, 1223, 177, 2074, 1221, 89,
	1409, 2089, 2088, 176, 1226, 2081, 2015, 1225, 1220, 1448,
	2085, 177, 2054, 2055, 527, 2057, 1857, 176, 174, 1213,
	176, 1191, 933, 2123, 489, 2106, 1721, 177, 495, 2110,
	2151, 1105, 2109, 2016, 177, 1872, 709, 2051, 702, 2048,
	2188, 2028, 2030, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 531, 531, 531, 1667, 2122, 2125, 2132, 2089,
	2088, 2130, 2111, 2112, 1829, 2033, 2026, 176, 2355, 2146,
	2290, 2376, 1634, 1187, 1785, 1112, 2145, 1515, 1608, 1570,
	1468, 552, 177, 551, 549, 1815, 1838, 1068, 2152, 602,
	1199, 2159, 1849, 1847, 1846, 2153, 2148, 2149, 1746, 1612,
	2212, 2208, 2182, 1606, 1821, 560, 553, 545, 600, 2084,
	2087, 1635, 1954, 2134, 1047, 1973, 1163, 539, 1974, 868,
	1512, 2339, 176, 1763, 2170, 710, 710, 710, 2192, 1162,
	1524, 1525, 2185, 2207, 2318, 1878, 60, 2197, 38, 534,
	2445, 531, 1038, 1037, 1039, 696, 2217, 32, 31, 30,
	29, 2214, 28, 2221, 2222, 23, 531, 531, 22, 2156,
	2157, 21, 2158, 20, 2219, 2160, 176, 2162, 19, 176,
	176, 176, 530, 25, 2252, 18, 17, 16, 109, 47,
	44, 2232, 2220, 2230, 2231, 177, 42, 116, 115, 45,
	41, 530, 530, 530, 530, 1411, 970, 39, 27, 26,
	15, 14, 13, 12, 11, 10, 9, 2235, 2272, 2237,
	5, 177, 4, 2261, 531, 1041, 24, 2, 1142, 2225,
	0, 0, 0, 0, 177, 0, 0, 531, 530, 530,
	530, 176, 177, 0, 177, 0, 177, 177, 531, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2270, 531, 0, 530, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 2271, 2283, 2284, 2286, 0, 2308,
	34, 2285, 2306, 2275, 2295, 2294, 1464, 1465, 1466, 1467,
	0, 0, 2302, 2304, 530, 664, 2322, 0, 2043, 2310,
	0, 0, 2046, 0, 0, 0, 2046, 0, 0, 0,
	2314, 2315, 0, 0, 0, 1194, 0, 531, 0, 0,
	0, 0, 0, 0, 710, 530, 1505, 1506, 0, 0,
	1214, 0, 0, 0, 1511, 0, 0, 0, 2326, 0,
	0, 531, 2329, 2328, 0, 0, 0, 531, 0, 0,
	0, 2336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2354, 0, 0, 2352, 0,
	2351, 0, 0, 530, 0, 2366, 543, 0, 0, 0,
	2363, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 176,
	2382, 0, 664, 0, 0, 0, 2367, 2046, 530, 1589,
	1590, 34, 0, 2379, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2365, 0, 530, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 530, 1623, 2403, 0, 177,
	0, 530, 530, 0, 177, 177, 2392, 0, 177, 0,
	177, 1174, 1176, 2407, 0, 34, 177, 2415, 530, 2412,
	2430, 2420, 2043, 177, 0, 0, 0, 2336, 2422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2436, 0,
	2395, 0, 0, 0, 0, 0, 0, 2442, 0, 0,
	0, 177, 531, 0, 0, 1663, 2448, 0, 2450, 0,
	0, 0, 0, 0, 2453, 2459, 2452, 0, 0, 0,
	860, 0, 2461, 0, 0, 2463, 0, 584, 0, 0,
	2464, 0, 172, 1142, 0, 0, 0, 1317, 1317, 2474,
	1317, 2473, 1317, 1317, 2476, 1326, 1317, 1317, 1317, 1317,
	1317, 530, 2478, 2482, 0, 0, 114, 2487, 1142, 1142,
	860, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 175, 0, 0, 485, 0,
	0, 525, 0, 0, 1545, 0, 0, 0, 485, 0,
	0, 1387, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 677, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 177, 695, 153, 695, 154, 0, 0,
	0, 531, 0, 0, 485, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 710,
	710, 710, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 177, 1537, 1526, 1527, 1528, 1529,
	1539, 1530, 1531, 1532, 1544, 1540, 1533, 1534, 1541, 1542,
	1543, 1535, 1536, 1538, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 177, 1508, 0,
	0, 157, 0, 531, 0, 1142, 0, 0, 0, 531,
	162, 1788, 0, 1522, 1523, 0, 0, 710, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 177, 177, 177, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1194, 1189, 0, 710, 0, 0,
	0, 0, 0, 0, 0, 710, 0, 0, 710, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 860,
	0, 0, 531, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 531, 531, 0, 177,
	177, 177, 177, 177, 867, 0, 1519, 0, 0, 0,
	1520, 177, 0, 0, 0, 0, 177, 177, 0, 177,
	0, 0, 177, 177, 177, 0, 0, 0, 860, 0,
	0, 0, 0, 0, 867, 1174, 1560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 860, 177, 0, 0,
	0, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 531, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 485,
	0, 485, 0, 0, 485, 0, 1999, 2000, 0, 0,
	177, 2003, 0, 177, 0, 2005, 2006, 2007, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1151, 0, 0, 0, 0, 150, 155,
	152, 158, 159, 160, 161, 163, 164, 165, 166, 0,
	0, 0, 0, 0, 167, 168, 169, 170, 0, 0,
	177, 2038, 0, 0, 0, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1143, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 177, 177, 177, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 710,
	0, 0, 0, 0, 531, 531, 531, 531, 0, 0,
	0, 0, 0, 677, 0, 0, 0, 0, 1816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 531, 531, 531, 177, 0, 0, 0, 2172, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 543, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 1775, 0, 0, 0, 1779, 0, 1780,
	1781, 0, 1918, 0, 0, 0, 0, 0, 1789, 0,
	0, 1790, 0, 0, 0, 0, 0, 2229, 531, 0,
	1584, 0, 0, 0, 0, 0, 1935, 0, 0, 0,
	0, 0, 0, 2234, 0, 1940, 1794, 0, 0, 0,
	0, 0, 0, 1799, 1800, 1801, 1802, 1803, 0, 1580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1814, 0, 0, 0, 0, 2260, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 0, 0, 0,
	0, 531, 177, 0, 0, 0, 0, 0, 0, 0,
	2273, 531, 2274, 0, 0, 0, 0, 2277, 2278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 710,
	1143, 0, 0, 2303, 531, 531, 0, 0, 0, 0,
	0, 0, 0, 1317, 2311, 0, 0, 2313, 0, 0,
	0, 531, 0, 0, 0, 1143, 1143, 2025, 0, 0,
	0, 485, 0, 0, 0, 0, 710, 0, 0, 0,
	1142, 0, 0, 2050, 1317, 1142, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1408, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 2353, 543, 0, 971, 0, 976, 485, 0,
	978, 0, 0, 0, 531, 0, 0, 1431, 1432, 485,
	485, 485, 485, 485, 485, 485, 0, 0, 0, 0,
	0, 0, 0, 2373, 0, 0, 0, 0, 0, 0,
	0, 860, 0, 0, 1142, 0, 0, 0, 1584, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 2008, 2009, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	609, 73, 2396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2416, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 695,
	0, 0, 2049, 0, 0, 0, 695, 695, 0, 0,
	0, 0, 1143, 0, 0, 0, 0, 0, 0, 2067,
	2068, 0, 0, 695, 1408, 695, 695, 695, 695, 695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 73, 0, 0, 0, 0, 1363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 695, 667, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 2479,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 1408, 0, 485, 0, 485, 0,
	485, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1584, 0, 0, 72, 36, 37, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2266, 2267, 2268, 2269, 78, 2155, 0, 0, 40,
	66, 67, 0, 64, 68, 0, 0, 2164, 2165, 2167,
	2169, 0, 65, 0, 0, 0, 0, 2175, 0, 0,
	2176, 0, 0, 0, 0, 2180, 0, 0, 2281, 2281,
	2281, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 0, 0, 0, 0, 0, 0, 0, 1142,
	0, 0, 81, 0, 2307, 0, 2309, 2201, 2202, 0,
	0, 2206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2218,
	0, 0, 0, 0, 1584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 710, 0, 0, 0, 0,
	0, 1219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 2255, 0, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 485, 485,
	0, 0, 485, 0, 1749, 0, 0, 0, 0, 0,
	485, 0, 0, 1584, 0, 0, 0, 485, 0, 0,
	0, 43, 46, 49, 48, 51, 0, 63, 0, 0,
	69, 0, 0, 0, 0, 0, 0, 2280, 1584, 0,
	0, 0, 0, 0, 0, 485, 0, 1348, 2388, 0,
	0, 0, 52, 77, 76, 0, 0, 61, 62, 50,
	0, 0, 0, 1142, 0, 2393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1584, 1389, 0, 0, 0,
	0, 710, 710, 0, 0, 0, 0, 0, 0, 2321,
	0, 0, 0, 0, 0, 0, 0, 0, 1584, 54,
	55, 0, 56, 57, 58, 59, 0, 1418, 0, 0,
	695, 0, 0, 0, 1422, 0, 0, 0, 0, 0,
	2332, 0, 0, 0, 0, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 0, 2342, 2343, 2344, 0, 2345, 2346, 2348,
	0, 0, 0, 2349, 2350, 695, 695, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 485,
	0, 0, 1457, 0, 0, 0, 0, 1363, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1584, 0, 0, 0, 1030, 1030, 1030, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2384,
	0, 0, 0, 0, 0, 73, 0, 485, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 1101, 1102, 1103, 80, 1106, 0, 1108,
	1109, 1110, 1111, 0, 1114, 1116, 1116, 0, 1116, 1120,
	1120, 1122, 1123, 1124, 1125, 0, 1127, 1128, 1129, 1130,
	1131, 0, 0, 0, 0, 1120, 1120, 1120, 1120, 0,
	0, 0, 0, 0, 485, 0, 2443, 2444, 0, 0,
	0, 1927, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1595, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 1602, 0, 0, 1457, 0, 0,
	0, 0, 0, 0, 0, 485, 485, 485, 485, 485,
	172, 1152, 0, 0, 667, 0, 0, 0, 667, 0,
	0, 1290, 485, 485, 667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 136, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 695, 0, 0, 146, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 114,
	0, 136, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 156, 153, 0, 154, 0, 0, 0, 0,
	0, 1294, 1295, 145, 144, 171, 0, 1143, 0, 0,
	0, 0, 1143, 485, 485, 485, 485, 485, 0, 0,
	0, 0, 0, 146, 0, 2066, 0, 0, 135, 0,
	485, 1363, 0, 485, 0, 0, 485, 2075, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	154, 0, 0, 0, 0, 0, 123, 124, 145, 144,
	171, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 1457, 0, 0, 0, 0, 0, 0, 1732,
	0, 0, 0, 0, 1742, 1743, 0, 0, 1747, 0,
	0, 485, 0, 0, 0, 0, 1750, 0, 140, 1296,
	147, 1143, 1293, 1753, 141, 142, 0, 0, 0, 157,
	485, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 485, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 121, 147, 128, 120, 0, 141,
	142, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 132, 130,
	125, 126, 127, 131, 0, 0, 0, 0, 122, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1241, 0, 0, 0, 0, 0, 0, 0, 0, 1030,
	1030, 1030, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 485, 0, 0, 485, 485, 485, 0,
	0, 0, 0, 0, 1863, 0, 0, 0, 0, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1363, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	1921, 0, 0, 0, 0, 0, 1143, 137, 0, 0,
	138, 0, 0, 0, 0, 0, 1229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1958, 1959, 1960, 1961, 1962, 150, 155, 152, 158,
	159, 160, 161, 163, 164, 165, 166, 0, 1457, 1968,
	0, 0, 167, 168, 169, 170, 0, 0, 0, 0,
	0, 0, 0, 1609, 1976, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 0, 0, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 1255, 1258,
	1259, 1260, 1261, 1262, 1263, 0, 1264, 1265, 1266, 1267,
	1268, 1243, 1244, 1245, 1246, 1227, 1228, 1256, 0, 1230,
	1143, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239,
	1240, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2098, 81, 0, 0, 0, 0, 0, 603, 610, 611,
	612, 613, 604, 606, 0, 0, 0, 605, 0, 0,
	608, 614, 615, 0, 0, 0, 0, 2117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2129, 0, 0, 0,
	0, 0, 0, 0, 0, 1257, 2133, 0, 0, 0,
	0, 0, 0, 2090, 2091, 0, 0, 0, 0, 0,
	2144, 0, 0, 2147, 0, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 0, 0, 0, 0,
	2181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 0, 0, 0, 0, 0, 0, 0, 2248,
	0, 0, 2249, 2250, 2251, 0, 0, 0, 1812, 81,
	0, 0, 0, 0, 0, 603, 610, 611, 612, 613,
	604, 606, 0, 667, 0, 605, 0, 0, 608, 614,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1842, 1843, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2090, 2091, 594, 0, 0, 0, 595, 596, 0,
	0, 0, 597, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1941, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1609, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 73, 0, 0, 1609, 1609, 1609, 1609,
	1609, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 1609, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2154, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2177, 2178, 2179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2047, 0, 73, 0, 2047, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 838, 824, 409, 0, 772,
	841, 742, 760, 851, 763, 766, 806, 721, 785, 332,
	757, 0, 746, 717, 752, 718, 744, 774, 236, 741,
	826, 789, 840, 288, 233, 723, 747, 346, 762, 187,
	808, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 847, 292, 795, 0, 394,
	317, 0, 0, 0, 776, 830, 783, 820, 771, 807,
	731, 794, 842, 758, 803, 843, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	2423, 0, 2424, 0, 0, 0, 2047, 0, 210, 0,
	217, 754, 800, 837, 755, 802, 231, 276, 238, 230,
	413, 848, 829, 0, 0, 202, 839, 778, 2378, 805,
	0, 854, 716, 797, 73, 719, 722, 850, 833, 750,
	241, 0, 0, 0, 0, 0, 0, 0, 775, 784,
	817, 769, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 793, 0, 0, 0, 727, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 0,
	0, 0, 730, 0, 749, 818, 0, 714, 259, 724,
	318, 0, 822, 832, 770, 445, 836, 768, 767, 812,
	728, 828, 761, 287, 726, 284, 182, 198, 0, 759,
	328, 368, 374, 827, 745, 753, 222, 751, 372, 342,
	430, 206, 249, 365, 347, 370, 792, 810, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 1032, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 740, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 823, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 815, 853,
	341, 373, 212, 432, 393, 735, 739, 733, 734, 787,
	788, 736, 844, 845, 846, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 819, 729, 0, 737, 738, 0,
	825, 834, 835, 791, 181, 195, 290, 849, 362, 252,
	459, 439, 435, 715, 732, 228, 743, 0, 0, 756,
	764, 765, 777, 779, 780, 781, 782, 314, 798, 799,
	801, 809, 811, 814, 816, 821, 831, 852, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 790,
	796, 301, 246, 264, 275, 804, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 786, 813, 297, 410, 411,
	271, 838, 824, 409, 0, 772, 841, 742, 760, 851,
	763, 766, 806, 721, 785, 332, 757, 0, 746, 717,
	752, 718, 744, 774, 236, 741, 826, 789, 840, 288,
	233, 723, 747, 346, 762, 187, 808, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 847, 292, 795, 0, 394, 317, 0, 0, 0,
	776, 830, 783, 820, 771, 807, 731, 794, 842, 758,
	803, 843, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 754, 800, 837,
	755, 802, 231, 276, 238, 230, 413, 848, 829, 0,
	0, 202, 839, 778, 0, 805, 0, 854, 716, 797,
	0, 719, 722, 850, 833, 750, 241, 0, 0, 0,
	0, 0, 0, 0, 775, 784, 817, 769, 0, 0,
	0, 0, 0, 2076, 0, 748, 0, 793, 0, 0,
	0, 727, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 0, 0, 0, 730, 0,
	749, 818, 0, 714, 259, 724, 318, 0, 822, 832,
	770, 445, 836, 768, 767, 812, 728, 828, 761, 287,
	726, 284, 182, 198, 0, 759, 328, 368, 374, 827,
	745, 753, 222, 751, 372, 342, 430, 206, 249, 365,
	347, 370, 792, 810, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 1032, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 740, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 823, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 815, 853, 341, 373, 212, 432,
	393, 735, 739, 733, 734, 787, 788, 736, 844, 845,
	846, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	819, 729, 0, 737, 738, 0, 825, 834, 835, 791,
	181, 195, 290, 849, 362, 252, 459, 439, 435, 715,
	732, 228, 743, 0, 0, 756, 764, 765, 777, 779,
	780, 781, 782, 314, 798, 799, 801, 809, 811, 814,
	816, 821, 831, 852, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 790, 796, 301, 246, 264,
	275, 804, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 786, 813, 297, 410, 411, 271, 838, 824, 409,
	0, 772, 841, 742, 760, 851, 763, 766, 806, 721,
	785, 332, 757, 0, 746, 717, 752, 718, 744, 774,
	236, 741, 826, 789, 840, 288, 233, 723, 747, 346,
	762, 187, 808, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 847, 292, 795,
	0, 394, 317, 0, 0, 0, 776, 830, 783, 820,
	771, 807, 731, 794, 842, 758, 803, 843, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 754, 800, 837, 755, 802, 231, 276,
	238, 230, 413, 848, 829, 0, 0, 202, 839, 778,
	0, 805, 0, 854, 716, 797, 0, 719, 722, 850,
	833, 750, 241, 0, 0, 0, 0, 0, 0, 0,
	775, 784, 817, 769, 0, 0, 0, 0, 0, 2036,
	0, 748, 0, 793, 0, 0, 0, 727, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 0, 0, 0, 730, 0, 749, 818, 0, 714,
	259, 724, 318, 0, 822, 832, 770, 445, 836, 768,
	767, 812, 728, 828, 761, 287, 726, 284, 182, 198,
	0, 759, 328, 368, 374, 827, 745, 753, 222, 751,
	372, 342, 430, 206, 249, 365, 347, 370, 792, 810,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	1032, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	740, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 823, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	815, 853, 341, 373, 212, 432, 393, 735, 739, 733,
	734, 787, 788, 736, 844, 845, 846, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 819, 729, 0, 737,
	738, 0, 825, 834, 835, 791, 181, 195, 290, 849,
	362, 252, 459, 439, 435, 715, 732, 228, 743, 0,
	0, 756, 764, 765, 777, 779, 780, 781, 782, 314,
	798, 799, 801, 809, 811, 814, 816, 821, 831, 852,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 790, 796, 301, 246, 264, 275, 804, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 786, 813, 297,
	410, 411, 271, 838, 824, 409, 0, 772, 841, 742,
	760, 851, 763, 766, 806, 721, 785, 332, 757, 0,
	746, 717, 752, 718, 744, 774, 236, 741, 826, 789,
	840, 288, 233, 723, 747, 346, 762, 187, 808, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 847, 292, 795, 0, 394, 317, 0,
	0, 0, 776, 830, 783, 820, 771, 807, 731, 794,
	842, 758, 803, 843, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 754,
	800, 837, 755, 802, 231, 276, 238, 230, 413, 848,
	829, 0, 0, 202, 839, 778, 0, 805, 0, 854,
	716, 797, 0, 719, 722, 850, 833, 750, 241, 0,
	0, 0, 0, 0, 0, 0, 775, 784, 817, 769,
	0, 0, 0, 0, 0, 1597, 0, 748, 0, 793,
	0, 0, 0, 727, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	730, 0, 749, 818, 0, 714, 259, 724, 318, 0,
	822, 832, 770, 445, 836, 768, 767, 812, 728, 828,
	761, 287, 726, 284, 182, 198, 0, 759, 328, 368,
	374, 827, 745, 753, 222, 751, 372, 342, 430, 206,
	249, 365, 347, 370, 792, 810, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 1032, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 740, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 823,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 815, 853, 341, 373,
	212, 432, 393, 735, 739, 733, 734, 787, 788, 736,
	844, 845, 846, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 819, 729, 0, 737, 738, 0, 825, 834,
	835, 791, 181, 195, 290, 849, 362, 252, 459, 439,
	435, 715, 732, 228, 743, 0, 0, 756, 764, 765,
	777, 779, 780, 781, 782, 314, 798, 799, 801, 809,
	811, 814, 816, 821, 831, 852, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 790, 796, 301,
	246, 264, 275, 804, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 786, 813, 297, 410, 411, 271, 838,
	824, 409, 0, 772, 841, 742, 760, 851, 763, 766,
	806, 721, 785, 332, 757, 0, 746, 717, 752, 718,
	744, 774, 236, 741, 826, 789, 840, 288, 233, 723,
	747, 346, 762, 187, 808, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 847,
	292, 795, 0, 394, 317, 0, 0, 0, 776, 830,
	783, 820, 771, 807, 731, 794, 842, 758, 803, 843,
	278, 219, 186, 329, 395, 251, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 754, 800, 837, 755, 802,
	231, 276, 238, 230, 413, 848, 829, 0, 0, 202,
	839, 778, 0, 805, 0, 854, 716, 797, 0, 719,
	722, 850, 833, 750, 241, 0, 0, 0, 0, 0,
	0, 0, 775, 784, 817, 769, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 793, 0, 0, 0, 727,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 773, 0, 0, 0, 730, 0, 749, 818,
	0, 714, 259, 724, 318, 0, 822, 832, 770, 445,
	836, 768, 767, 812, 728, 828, 761, 287, 726, 284,
	182, 198, 0, 759, 328, 368, 374, 827, 745, 753,
	222, 751, 372, 342, 430, 206, 249, 365, 347, 370,
	792, 810, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 1032, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 740, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 823, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 815, 853, 341, 373, 212, 432, 393, 735,
	739, 733, 734, 787, 788, 736, 844, 845, 846, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 819, 729,
	0, 737, 738, 0, 825, 834, 835, 791, 181, 195,
	290, 849, 362, 252, 459, 439, 435, 715, 732, 228,
	743, 0, 0, 756, 764, 765, 777, 779, 780, 781,
	782, 314, 798, 799, 801, 809, 811, 814, 816, 821,
	831, 852, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 790, 796, 301, 246, 264, 275, 804,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 786,
	813, 297, 410, 411, 271, 838, 824, 409, 0, 772,
	841, 742, 760, 851, 763, 766, 806, 721, 785, 332,
	757, 0, 746, 717, 752, 718, 744, 774, 236, 741,
	826, 789, 840, 288, 233, 723, 747, 346, 762, 187,
	808, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 847, 292, 795, 0, 394,
	317, 0, 0, 0, 776, 830, 783, 820, 771, 807,
	731, 794, 842, 758, 803, 843, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 754, 800, 837, 755, 802, 231, 276, 238, 230,
	413, 848, 829, 0, 0, 202, 839, 778, 0, 805,
	0, 854, 716, 797, 0, 719, 722, 850, 833, 750,
	241, 0, 0, 0, 0, 0, 0, 0, 775, 784,
	817, 769, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 793, 0, 0, 0, 727, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 773, 0,
	0, 0, 730, 0, 749, 818, 0, 714, 259, 724,
	318, 0, 822, 832, 770, 445, 836, 768, 767, 812,
	728, 828, 761, 287, 726, 284, 182, 198, 0, 759,
	328, 368, 374, 827, 745, 753, 222, 751, 372, 342,
	430, 206, 249, 365, 347, 370, 792, 810, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 1032, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 740, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 823, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 815, 853,
	341, 373, 212, 432, 393, 735, 739, 733, 734, 787,
	788, 736, 844, 845, 846, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 819, 729, 0, 737, 738, 0,
	825, 834, 835, 791, 181, 195, 290, 849, 362, 252,
	459, 439, 435, 715, 732, 228, 743, 0, 0, 756,
	764, 765, 777, 779, 780, 781, 782, 314, 798, 799,
	801, 809, 811, 814, 816, 821, 831, 852, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 790,
	796, 301, 246, 264, 275, 804, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 786, 813, 297, 410, 411,
	271, 838, 824, 409, 0, 772, 841, 742, 760, 851,
	763, 766, 806, 721, 785, 332, 757, 0, 746, 717,
	752, 718, 744, 774, 236, 741, 826, 789, 840, 288,
	233, 723, 747, 346, 762, 187, 808, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 847, 292, 795, 0, 394, 317, 0, 0, 0,
	776, 830, 783, 820, 771, 807, 731, 794, 842, 758,
	803, 843, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 754, 800, 837,
	755, 802, 231, 276, 238, 230, 413, 848, 829, 0,
	0, 855, 839, 778, 0, 805, 0, 854, 716, 797,
	0, 719, 722, 850, 833, 750, 241, 0, 0, 0,
	0, 0, 0, 0, 775, 784, 817, 769, 0, 0,
	0, 0, 0, 0, 0, 748, 0, 793, 0, 0,
	0, 727, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 0, 0, 0, 730, 0,
	749, 818, 0, 714, 259, 724, 318, 0, 822, 832,
	770, 445, 836, 768, 767, 812, 728, 828, 761, 287,
	726, 284, 182, 198, 0, 759, 328, 368, 374, 827,
	745, 753, 222, 751, 372, 342, 430, 206, 249, 365,
	347, 370, 792, 810, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 725, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 740, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 823, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 713,
	707, 706, 285, 294, 815, 853, 341, 373, 212, 432,
	393, 735, 739, 733, 734, 787, 788, 736, 844, 845,
	846, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	819, 729, 0, 737, 738, 0, 825, 834, 835, 791,
	181, 195, 290, 849, 362, 252, 459, 439, 435, 715,
	732, 228, 743, 0, 0, 756, 764, 765, 777, 779,
	780, 781, 782, 314, 798, 799, 801, 809, 811, 814,
	816, 821, 831, 852, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 790, 796, 301, 246, 264,
	275, 804, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 786, 813, 297, 410, 411, 271, 838, 824, 409,
	0, 772, 841, 742, 760, 851, 763, 766, 806, 721,
	785, 332, 757, 0, 746, 717, 752, 718, 744, 774,
	236, 741, 826, 789, 840, 288, 233, 723, 747, 346,
	762, 187, 808, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 847, 292, 795,
	0, 394, 317, 0, 0, 0, 776, 830, 783, 820,
	771, 807, 731, 794, 842, 758, 803, 843, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 754, 800, 837, 755, 802, 231, 276,
	238, 230, 413, 848, 829, 0, 0, 855, 839, 778,
	0, 805, 0, 854, 716, 797, 0, 719, 722, 850,
	833, 750, 241, 0, 0, 0, 0, 0, 0, 0,
	775, 784, 817, 769, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 793, 0, 0, 0, 727, 720, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	773, 0, 0, 0, 730, 0, 749, 818, 0, 714,
	259, 724, 318, 0, 822, 832, 770, 445, 836, 768,
	767, 812, 728, 828, 761, 287, 726, 284, 182, 198,
	0, 759, 328, 368, 374, 827, 745, 753, 222, 751,
	372, 342, 430, 206, 249, 365, 347, 370, 792, 810,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 1205, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	725, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	740, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 823, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 713, 707, 706, 285, 294,
	815, 853, 341, 373, 212, 432, 393, 735, 739, 733,
	734, 787, 788, 736, 844, 845, 846, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 819, 729, 0, 737,
	738, 0, 825, 834, 835, 791, 181, 195, 290, 849,
	362, 252, 459, 439, 435, 715, 732, 228, 743, 0,
	0, 756, 764, 765, 777, 779, 780, 781, 782, 314,
	798, 799, 801, 809, 811, 814, 816, 821, 831, 852,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 790, 796, 301, 246, 264, 275, 804, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 786, 813, 297,
	410, 411, 271, 838, 824, 409, 0, 772, 841, 742,
	760, 851, 763, 766, 806, 721, 785, 332, 757, 0,
	746, 717, 752, 718, 744, 774, 236, 741, 826, 789,
	840, 288, 233, 723, 747, 346, 762, 187, 808, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 847, 292, 795, 0, 394, 317, 0,
	0, 0, 776, 830, 783, 820, 771, 807, 731, 794,
	842, 758, 803, 843, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 754,
	800, 837, 755, 802, 231, 276, 238, 230, 413, 848,
	829, 0, 0, 855, 839, 778, 0, 805, 0, 854,
	716, 797, 0, 719, 722, 850, 833, 750, 241, 0,
	0, 0, 0, 0, 0, 0, 775, 784, 817, 769,
	0, 0, 0, 0, 0, 0, 0, 748, 0, 793,
	0, 0, 0, 727, 720, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 773, 0, 0, 0,
	730, 0, 749, 818, 0, 714, 259, 724, 318, 0,
	822, 832, 770, 445, 836, 768, 767, 812, 728, 828,
	761, 287, 726, 284, 182, 198, 0, 759, 328, 368,
	374, 827, 745, 753, 222, 751, 372, 342, 430, 206,
	249, 365, 347, 370, 792, 810, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	704, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 725, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 740, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 823,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 713, 707, 706, 285, 294, 815, 853, 341, 373,
	212, 432, 393, 735, 739, 733, 734, 787, 788, 736,
	844, 845, 846, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 819, 729, 0, 737, 738, 0, 825, 834,
	835, 791, 181, 195, 290, 849, 362, 252, 459, 439,
	435, 715, 732, 228, 743, 0, 0, 756, 764, 765,
	777, 779, 780, 781, 782, 314, 798, 799, 801, 809,
	811, 814, 816, 821, 831, 852, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 790, 796, 301,
	246, 264, 275, 804, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 786, 813, 297, 410, 411, 271, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 1547, 0, 561, 0, 0, 0,
	236, 566, 0, 0, 0, 288, 233, 0, 1548, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 573, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 568, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 0, 178, 179,
	180, 603, 610, 611, 612, 613, 604, 606, 0, 0,
	210, 605, 217, 582, 608, 614, 615, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 544, 558, 0, 572, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 555, 556, 693,
	0, 0, 0, 588, 0, 557, 0, 0, 565, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	567, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 587, 0, 0, 445, 0, 0,
	585, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 594, 586, 577,
	579, 595, 596, 574, 575, 578, 597, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 589, 564, 563, 0,
	570, 571, 0, 580, 581, 562, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 561, 0, 0, 0, 236, 566,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 573, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 568, 569, 0, 0,
	0, 0, 0, 0, 1621, 0, 278, 219, 186, 329,
	395, 251, 0, 81, 0, 0, 178, 179, 180, 603,
	610, 611, 612, 613, 604, 606, 0, 0, 210, 605,
	217, 582, 608, 614, 615, 1622, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 544, 558, 0, 572, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 555, 556, 0, 0, 0,
	0, 588, 0, 557, 0, 0, 565, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 587, 0, 0, 445, 0, 0, 585, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 594, 586, 577, 579, 595,
	596, 574, 575, 578, 597, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 589, 564, 563, 0, 570, 571,
	0, 580, 581, 562, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 72, 409, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 561, 0, 0, 0, 236, 566, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 573, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 81, 0, 0, 178, 179, 180, 603, 610,
	611, 612, 613, 604, 606, 0, 0, 210, 605, 217,
	582, 608, 614, 615, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 544, 558, 0, 572, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 556, 0, 0, 0, 0,
	588, 0, 557, 0, 0, 565, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 587, 0, 0, 445, 0, 0, 585, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 594, 586, 577, 579, 595, 596,
	574, 575, 578, 597, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 589, 564, 563, 0, 570, 571, 0,
	580, 581, 562, 181, 195, 290, 80, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 561, 0, 0, 0, 236, 566, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 573, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	81, 0, 0, 178, 179, 180, 603, 610, 611, 612,
	613, 604, 606, 0, 0, 210, 605, 217, 582, 608,
	614, 615, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 588, 0,
	557, 0, 0, 565, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 587,
	0, 0, 445, 0, 0, 585, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 2417, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 594, 586, 577, 579, 595, 596, 574, 575,
	578, 597, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 589, 564, 563, 0, 570, 571, 0, 580, 581,
	562, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 561,
	0, 0, 0, 236, 566, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	573, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 81, 0,
	1173, 178, 179, 180, 603, 610, 611, 612, 613, 604,
	606, 0, 0, 210, 605, 217, 582, 608, 614, 615,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 544, 558,
	0, 572, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 556, 0, 0, 0, 0, 588, 0, 557, 0,
	0, 565, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 587, 0, 0,
	445, 0, 0, 585, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	594, 586, 577, 579, 595, 596, 574, 575, 578, 597,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 589,
	564, 563, 0, 570, 571, 0, 580, 581, 562, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 561, 0, 0,
	0, 236, 566, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 573, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 0, 178,
	179, 180, 603, 610, 611, 612, 613, 604, 606, 0,
	0, 210, 605, 217, 582, 608, 614, 615, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 544, 558, 0, 572,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 556,
	693, 0, 0, 0, 588, 0, 557, 0, 0, 565,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 587, 0, 0, 445, 0,
	0, 585, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 594, 586,
	577, 579, 595, 596, 574, 575, 578, 597, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 589, 564, 563,
	0, 570, 571, 0, 580, 581, 562, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 561, 0, 0, 0, 236,
	566, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 573, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 81, 0, 0, 178, 179, 180,
	603, 610, 611, 612, 613, 604, 606, 0, 0, 210,
	605, 217, 582, 608, 614, 615, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 544, 558, 0, 572, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 588, 0, 557, 0, 0, 565, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 587, 0, 0, 445, 0, 0, 585,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 594, 586, 577, 579,
	595, 596, 574, 575, 578, 597, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 589, 564, 563, 0, 570,
	571, 0, 580, 581, 562, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 561, 0, 0, 0, 236, 566, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 573, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 568, 569, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 81, 0, 0, 178, 179, 180, 603, 610,
	611, 612, 613, 604, 606, 0, 0, 210, 605, 217,
	582, 608, 614, 615, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 572, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 556, 0, 0, 0, 0,
	588, 0, 557, 0, 0, 565, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 587, 0, 0, 445, 0, 0, 585, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 594, 586, 577, 579, 595, 596,
	574, 575, 578, 597, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 589, 564, 563, 0, 570, 571, 0,
	580, 581, 562, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 900, 445, 0, 0, 0, 0, 0, 897, 898,
	287, 863, 284, 182, 198, 891, 895, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 1193, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1195, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 1063, 0, 1064, 1065, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 1138, 1141, 0, 0, 0, 1137, 1140, 0,
	0, 210, 1136, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 72, 409,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 81, 0, 1173, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 80,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 72, 409, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 81, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 80, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 1569, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 1364,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 1567, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 863, 284, 182, 198, 861, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 1569, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1364, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 1173, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 2282, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 1817, 0, 0, 1818, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 1216, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 1215,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 2389, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 2282, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 1364, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 0, 409, 297, 410,
	411, 271, 1610, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1195, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 1455, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 1336, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 1334, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 1332,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 1330, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 1328, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 1324, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 1322, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 1320,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 1297,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 1200, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 1040, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 675, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 535, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 483,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 0,
	0, 297, 410, 411, 271,
}

var yyPact = [...]int{
	3679, -1000, -391, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1721, 1751, -1000, -1000, -1000, -1000, 1844,
	-1000, 642, 1504, -1000, 1725, 4240, -1000, 32714, 405, -1000,
	32176, 404, 249, 32714, -1000, 115, -1000, 106, 32714, 111,
	31638, -1000, -1000, -291, 13881, 1665, 11, 9, 32714, -1000,
	1823, 1512, -1000, 291, -1000, -1000, -1000, -1000, -1000, -1000,
	31100, -1000, -1000, -1000, 1733, 1713, 1849, 571, 1674, -1000,
	1779, 1512, -1000, 13881, 1809, 1765, 13343, -1000, 13343, 319,
	-1000, -1000, 10108, -1000, -1000, 18187, 32714, 32714, 215, -1000,
	1725, -1000, -1000, 276, -1000, 258, 1437, -1000, 1435, -1000,
	563, 575, 252, 369, 365, 251, 250, 245, 241, 238,
	231, 230, 229, 262, -1000, 618, 618, -177, -178, 2457,
	293, 293, 293, 343, 1693, 1692, -1000, 566, -1000, 618,
	618, 264, 618, 618, 618, 618, 194, 191, 618, 618,
	618, 618, 618, 618, 618, 618, 618, 618, 618, 618,
	618, 618, 618, 281, 1725, 187, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 32714, 136, 32714, -1000, 497, 32714, 729, 729, 23,
	729, 729, 729, 729, 113, 510, 5, -1000, 112, 180,
	108, 185, 716, 126, 121, -1000, -1000, 181, 716, 1165,
	599, 100, -1000, 729, 7924, 7924, 7924, -1000, 1717, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 342, -1000, -1000,
	-1000, -1000, 32714, 30562, 236, 647, -1000, -1000, -1000, 122,
	-1000, -1000, 1306, 692, 13881, 1024, -1000, 1407, 469, -1000,
	-1000, -1000, -1000, -1000, 488, 14419, 14419, 14419, 14419, -1000,
	-1000, 1442, 1442, 1442, 1442, 14419, 1442, 14419, 1442, 1442,
	1442, 1442, 13881, 1442, 1442, 1442, -1000, 1442, 1442, 1442,
	1442, 1442, 1442, 1442, 485, 1442, 1442, 1442, 1442, 1442,
	-1000, -1000, -1000, -1000, 1442, 1442, 1442, 1442, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 16033, -1000, 11729,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 32714, -1000,
	1442, 134, 1779, 1512, -1000, 1823, 1793, 291, -1000, 1759,
	1359, 1246, 1175, 1512, 1406, 32714, -1000, 1480, -1000, -1000,
	-1000, 1597, 1145, 1160, -1000, -1000, -1000, -1000, 1061, 13881,
	-1000, -1000, 1833, -1000, 15495, 476, 841, 1830, 30024, -1000,
	319, 319, 1431, 9562, -39, -1000, -1000, -1000, 645, 20339,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1717, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1362, 32714, -1000, -1000,
	4510, 1063, -1000, 1503, -1000, 1342, -1000, 1488, 1515, 381,
	1063, 362, 361, 359, -1000, -88, -1000, -1000, -1000, -1000,
	-1000, 618, 618, 237, 4240, 4185, -1000, -1000, -1000, 29486,
	1501, 1063, -1000, 1500, -1000, 743, 425, 464, 464, 1063,
	-1000, -1000, 32714, 1063, 735, 715, 32714, 32714, -1000, 28948,
	-1000, 28410, 27872, 1011, 32714, 27334, 26796, 26258, 25720, 25182,
	-1000, 1563, -1000, 1485, -1000, -1000, -1000, 32714, 32714, 32714,
	295, -1000, -1000, 32714, 1063, -1000, -1000, 1009, 1007, 618,
	618, 1001, 1159, 1143, 1137, 618, 618, 991, 1134, 22491,
	182, 981, 979, 958, 1029, 1132, 184, 1000, 996, 936,
	32714, 1499, 32714, -1000, 159, 605, 328, 643, 1725, 1655,
	1417, 339, 370, 1063, 313, 313, -1000, 8470, -1000, -1000,
	1123, 13881, -1000, 725, 716, 716, -1000, -1000, -1000, -1000,
	-1000, -1000, 729, 32714, 725, -1000, -1000, -1000, 716, 729,
	32714, 729, 729, 729, 729, 716, 716, 716, 729, 32714,
	32714, 32714, 32714, 32714, 32714, 32714, 32714, 32714, 7924, 7924,
	7924, 599, 729, -296, -1000, 1119, -1000, 1555, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 110, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -99, 1410, 24644, -1000,
	-301, -305, -307, -308, -1000, -1000, -1000, -310, -311, -1000,
	-1000, -1000, 13881, 13881, 13881, 13881, -1000, 825, 14419, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 861, 695, 14419, 14419,
	14419, 14419, 14419, 14419, 14419, 14419, 14419, 14419, 14419, 14419,
	14419, 14419, 14419, 660, 1117, 1112, 469, 469, 469, 469,
	-1000, 13343, 13881, 13881, 469, -1000, 1063, 24106, 13343, 13343,
	13881, 1702, 646, 692, 32714, -1000, 1175, -1000, -1000, -1000,
	956, -1000, 32714, 32714, 2210, 10652, 8470, 13343, 13343, 13343,
	13343, 13343, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 461, 1253, 1241, 1340, -1000, 1408, -1000,
	-183, 17649, 13881, 1105, -1000, -1000, -1000, 1779, -1000, 1779,
	1253, 1729, 1605, 13343, -1000, -1000, 1729, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1260, -1000, 32714, 1406, 1762,
	32714, 1593, 1103, 295, -1000, 13881, 13881, 1402, -1000, 850,
	32714, -1000, -1000, 23568, -1000, -1000, 7378, -1000, 32714, 225,
	32714, -1000, 21953, 23030, 9016, -39, -1000, 9016, 1392, -1000,
	-14, -47, 11190, 508, -1000, -1000, -1000, 2457, 14957, 1224,
	1682, 52, -1000, -1000, -1000, 1488, -1000, 1488, 1488, 1488,
	1488, 295, 295, 295, 295, -1000, -1000, -1000, -1000, -1000,
	1498, 1497, -1000, 1488, 1488, 1488, 1488, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1494, 1494, 1494, 1489, 1489, 304,
	-1000, 13881, 235, 32714, 1732, 915, 159, 317, 1538, 1063,
	1063, 1063, 317, -1000, 1166, 1110, -1000, 1401, -1000, -1000,
	1802, -1000, -1000, 891, 783, 781, 586, 32714, 141, 222,
	-1000, 303, -1000, 32714, 1063, 712, 464, 1063, -1000, 1063,
	-1000, -1000, -1000, -1000, -1000, 1063, 1400, -1000, 1349, 830,
	779, 788, 749, 1400, -1000, -1000, -127, 1400, -1000, 1400,
	-1000, 1400, -1000, 1400, -1000, 1400, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 552, 32714, 141, 660, -1000, 326,
	-1000, -1000, 660, 660, -1000, -1000, -1000, -1000, 1102, 1100,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -365, 32714, -1000,
	153, 628, 207, 248, 220, 32714, 124, 1753, 165, 190,
	32714, 32714, 313, 1554, 32714, 1738, 32714, -1000, -1000, -1000,
	-1000, 692, 32714, -1000, -1000, 729, 729, -1000, -1000, 32714,
	729, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 729,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 32714, 32714, -1000,
	-1000, -1000, -1000, -1000, 34, -25, 260, -1000, -1000, -1000,
	-1000, -1000, 1773, -1000, 692, 727, 674, -1000, -1000, -1000,
	895, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 861, 14419,
	14419, 14419, 1361, 341, 1455, 1391, 1094, 619, 619, 774,
	774, 553, 553, 553, 553, 553, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1300, -1000, 1055, 963, 1175, -1000, 1300,
	1300, 948, 13343, -1000, -1000, 659, -1000, 13881, 1175, -1000,
	-1000, 1175, 1395, 1394, 1828, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1175, 13343, 13343, 1393,
	1442, 459, -1000, 1300, 1175, 1175, 1300, 1300, 8470, 1175,
	-1000, 32714, -1000, -287, -1000, -31, 465, 1442, -1000, 22491,
	1175, 1306, -1000, -1000, -1000, -1000, -1000, 19801, 1396, 1729,
	-1000, -1000, 1442, 1313, -1000, -1000, 295, 39, 665, 692,
	692, 13881, -1000, -1000, -1000, -1000, -1000, -1000, 451, 1819,
	285, 1442, -1000, 1389, 1645, -1000, -1000, -1000, 1749, 17111,
	32714, 1388, 1387, -1000, 446, -1000, 1392, -39, -19, -1000,
	-1000, -1000, -1000, 692, -1000, 1085, 226, 357, -1000, 283,
	-1000, -1000, -1000, -1000, 1113, 1747, 1679, 38, -1000, -1000,
	-1000, 295, 295, -1000, -1000, -1000, -1000, -1000, -1000, 1098,
	1098, -1000, -1000, -1000, -1000, -1000, 914, -1000, -1000, -1000,
	900, -1000, -1000, 1099, 1557, 235, -1000, -1000, 618, 1080,
	1684, 32714, -1000, -1000, 1208, 153, 32714, 670, 1551, -1000,
	1538, 1538, 1538, 32714, -1000, -1000, -1000, -1000, 316, 32714,
	1310, -1000, 138, -1000, 1190, 32714, -1000, 1308, 1493, 1063,
	1063, -1000, -1000, -1000, 32714, 1442, -1000, -1000, -1000, -1000,
	366, 1720, 1714, 141, 138, 508, 1063, -1000, -1000, -1000,
	-1000, -1000, -361, 1303, 347, 144, 234, 32714, 32714, 32714,
	32714, 32714, 421, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 186, 324, -1000, 32714, 32714, 438, -1000, -1000, -1000,
	716, -1000, -1000, 716, -1000, -1000, -1000, -1000, -1000, 1711,
	32714, -26, -337, -1000, -334, -1000, -1000, -1000, -1000, 1309,
	340, 1455, 14419, 14419, 13343, -102, 498, 498, 660, -1000,
	-1000, -1000, 13881, 13881, 1358, 649, -1000, 13881, 742, -1000,
	-1000, 13881, 13881, 13881, -1000, 1300, 1300, 13343, 8470, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 356,
	355, 353, 32714, -1000, -1000, 1776, -1000, 1615, 1614, 1821,
	1819, -1000, 21953, 1729, -1000, -1000, 32714, -282, -1000, 1641,
	1635, -1000, -1000, -1000, -1000, 6832, 1779, 13881, 1550, 32714,
	1442, -1000, 16572, 32714, 32714, 21953, 21953, 21953, 21953, 21953,
	-1000, 1573, 1570, -1000, 1588, 1567, 1594, 32714, -1000, 1298,
	1175, 1793, 17111, 18725, 1259, 21953, -1000, -1000, 21953, 32714,
	6286, -1000, -1000, -38, -55, -1000, -1000, -1000, -1000, 1801,
	2457, -1000, -1000, -1000, -1000, 809, 4788, 1847, -1000, 1077,
	-1000, 1010, -1000, 709, 702, -1000, 32714, 1491, -1000, -1000,
	-1000, -1000, -1000, 1295, -1000, 1287, 1385, 1285, 114, -1000,
	1413, 1708, 618, 618, -1000, 897, -1000, 1063, -1000, -1000,
	329, -1000, 1735, 32714, 1549, 1548, 1547, -1000, 1800, 1382,
	32714, -1000, -1000, 32714, -1000, 1612, 235, 32714, -1000, -1000,
	-1000, 222, 32714, -1000, 5016, 138, -1000, -1000, -1000, -1000,
	-1000, -1000, 32714, 158, -1000, 1490, 1172, -1000, 1519, -1000,
	-1000, -1000, -1000, 129, 197, -1000, 32714, 424, 1557, 32714,
	-1000, -1000, -1000, 729, 729, -1000, -1000, 1696, -1000, 1063,
	14419, 14419, -1000, 469, -1000, 1442, 1175, 1488, 1488, -1000,
	1488, 1489, -1000, 1488, 99, 1488, 95, 1175, 1175, 869,
	854, -97, -1000, 692, 13881, 1095, 995, 784, -1000, -1000,
	1175, -1000, 1442, 1442, 1442, 1276, 32714, -1000, -1000, -1000,
	-1000, 1819, 1817, 1384, -1000, -1000, 39, 338, -1000, 1638,
	1635, -1000, 1798, 1647, 1797, -1000, -1000, -1000, 692, -1000,
	1727, 1354, -1000, 612, 1239, -1000, -1000, 12805, 1278, 1610,
	443, 1276, 1403, 1645, 1534, 1543, 1580, -1000, -1000, -1000,
	-1000, 1569, -1000, 1566, -1000, -1000, 1480, -1000, -1000, 1241,
	225, 21953, 1390, 1390, -1000, 431, -1000, -1000, -1000, -1000,
	-367, -1000, -1000, 13881, -1000, -1000, -1000, -1000, -1000, -1000,
	892, 892, 289, -1000, -1000, -1000, -1000, -1000, 1486, 13881,
	295, 1058, 295, 878, -1000, 872, -1000, -1000, -220, -1000,
	-1000, 1416, 1539, -1000, -1000, 32714, -1000, -1000, 32714, 32714,
	32714, 32714, -1000, -1000, 219, -1000, 1255, 1243, -1000, -179,
	-1000, 13881, -1000, 1480, -1000, -1000, -1000, 1185, -1000, -132,
	32714, 32714, 32714, 32714, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 469, 14419, -1000, -1000, 403, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13881, -1000, 13881, -1000,
	1779, 1057, 692, 13881, 13881, -1000, -1000, 19263, 21415, 21415,
	18725, -1000, 1817, 1814, 1790, 1622, 1624, 1624, 1638, -1000,
	1786, 1785, -1000, 1032, 1784, 1020, 685, -1000, 32714, 13881,
	1442, -1000, 273, 32714, 1442, 32714, -1000, 1794, -1000, -1000,
	13881, 1484, -1000, 13881, -1000, -1000, -1000, -1000, -1000, 1819,
	1390, -1000, -1000, 559, 51, 286, -1000, -1000, -1000, 784,
	-1000, -1000, -1000, 32714, 881, -1000, -1000, -1000, 1182, 1177,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1480, -1000,
	-1000, -1000, 1382, 214, 279, -1000, 222, -1000, -182, -186,
	784, 1743, -1000, -1000, 8470, -1000, -1000, 1478, 1537, -1000,
	157, -1000, -1000, 784, 784, 1175, -1000, 784, 784, 1230,
	-1000, -1000, -1000, 1230, 1230, 465, 1814, -1000, 13881, 13881,
	1619, 882, -1000, -1000, -1000, -1000, 1019, 1016, -1000, 997,
	-1000, 1846, -1000, 692, -1000, 1442, -1000, 427, 1239, -1000,
	1779, 692, 32714, 692, 1794, -1000, 1462, 1397, -372, 13881,
	1448, -1000, 1227, -1000, -1000, -1000, 1741, 1442, -1000, -1000,
	-1000, -1000, -1000, 291, 1380, -1000, 609, 32714, 32714, 1175,
	240, -135, -1000, -1000, -1000, -1000, -1000, 20877, -1000, -1000,
	-1000, -1000, -1000, 692, 1306, -1000, 857, -1000, -1000, -1000,
	-1000, -1000, 32714, 1239, 32714, -1000, 1222, 1779, 13881, 1441,
	583, -379, 863, 874, 32714, 1540, 835, 291, 12267, -128,
	8470, 5740, 1217, -1000, -1000, 1589, -123, -168, -1000, -1000,
	-1000, -1000, 1101, -1000, -1000, -1000, 858, 32714, 853, 1439,
	1783, -1000, -1000, 1211, 1516, -1000, 1824, -1000, -1000, -1000,
	807, 859, -1000, -1000, -1000, -128, 784, 1175, -1000, -43,
	-1000, -1000, -1000, -1000, -1000, 1519, -1000, 1581, -1000, -372,
	1199, -1000, -1000, 222, -375, -1000, -1000, 1842, 499, 499,
	-1000, -1000, -1000, -1000, -1000, 290, -1000, -1000, -132, -133,
	-379, -372, 1194, 49, -1000, -1000, -1000, 278, 907, -1000,
	172, -1000, -144, 1439, -379, -1000, 1440, 1397, -1000, -1000,
	-1000, -1000, -171, -1000, 1439, 13881, 1247, -1000, -1000, 780,
	32714, -385, 1180, -1000, 849, -385, -1000, -1000,
}

var yyPgo = [...]int{
	0, 9, 2169, 8, 1, 6, 2167, 17, 76, 159,
	19, 154, 82, 2166, 2165, 2162, 2160, 192, 187, 174,
	2156, 2155, 2154, 2153, 2152, 2151, 2150, 2149, 2148, 2147,
	197, 141, 152, 2146, 2140, 2139, 100, 142, 67, 71,
	158, 2138, 2137, 50, 2136, 2130, 2129, 177, 175, 698,
	2128, 171, 94, 2127, 2126, 2125, 2123, 2118, 2113, 2111,
	2108, 2105, 2102, 2100, 2099, 2098, 2097, 155, 2095, 2092,
	11, 2090, 58, 2089, 2088, 2086, 2085, 2084, 4, 2081,
	2080, 2079, 2074, 124, 2073, 2071, 2070, 161, 2069, 2067,
	227, 96, 92, 2066, 2064, 84, 157, 2063, 95, 133,
	2062, 2061, 1163, 2060, 66, 65, 2059, 46, 63, 64,
	42, 2058, 2057, 2056, 73, 57, 2055, 85, 60, 2054,
	88, 115, 2053, 44, 2051, 2050, 93, 2049, 2048, 2044,
	78, 2043, 2042, 2973, 2040, 77, 113, 24, 30, 2039,
	2037, 2036, 2035, 2034, 38, 2033, 2031, 2030, 117, 15,
	2029, 14, 41, 32, 112, 2028, 39, 62, 2027, 116,
	2025, 2024, 34, 21, 31, 2023, 27, 111, 140, 52,
	87, 127, 2022, 2021, 37, 55, 2020, 2018, 2016, 2015,
	2014, 1992, 47, 1991, 35, 1990, 195, 1989, 2, 29,
	36, 43, 143, 45, 23, 1988, 173, 1986, 33, 130,
	119, 136, 1985, 1983, 1981, 149, 223, 1978, 1976, 72,
	147, 126, 128, 1975, 240, 1974, 1972, 79, 983, 1560,
	26, 139, 1971, 1969, 2457, 120, 118, 40, 1968, 314,
	1966, 1964, 1959, 167, 145, 86, 932, 83, 1958, 1957,
	1954, 1948, 1945, 1942, 1941, 121, 165, 56, 90, 151,
	49, 1936, 1932, 1930, 102, 75, 1928, 138, 137, 105,
	125, 1927, 146, 123, 104, 1923, 99, 1922, 1921, 1920,
	1916, 74, 1915, 1914, 1912, 1911, 132, 131, 97, 68,
	1910, 70, 101, 135, 134, 12, 7, 25, 148, 20,
	1909, 3, 0, 1907, 10, 144, 224, 153, 1906, 1888,
	5, 1887, 13, 1886, 1885, 114, 1881, 1878, 1877, 22,
	28, 16, 1876, 1875, 1874, 3530, 1719, 110, 1872, 163,
}

//line sql.y:5994
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 313, 314, 314, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 292, 292, 292, 295, 295,
	28, 62, 30, 30, 29, 29, 32, 32, 31, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 15, 16, 11, 11, 17, 17,
	74, 74, 18, 19, 19, 19, 19, 317, 317, 128,
	128, 126, 126, 127, 127, 191, 191, 20, 21, 21,
	201, 201, 200, 200, 200, 202, 202, 202, 202, 236,
	236, 22, 22, 22, 22, 22, 88, 88, 294, 294,
	293, 291, 291, 290, 290, 289, 34, 35, 44, 44,
	44, 44, 45, 46, 296, 296, 267, 50, 50, 49,
	49, 49, 49, 51, 51, 48, 48, 47, 47, 269,
	269, 256, 256, 268, 268, 268, 268, 268, 268, 268,
	255, 255, 101, 101, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 308, 308, 173, 173, 173,
	173, 173, 173, 106, 106, 114, 114, 114, 114, 104,
	104, 105, 103, 103, 103, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 113, 113,
	110, 110, 111, 111, 111, 309, 309, 309, 309, 238,
	238, 238, 238, 241, 241, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 240, 240, 240, 240, 240, 242,
	242, 242, 242, 242, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 244,
	244, 244, 244, 244, 244, 244, 244, 254, 254, 245,
	245, 249, 249, 250, 250, 250, 251, 251, 251, 252,
	252, 247, 247, 247, 247, 248, 248, 248, 257, 281,
	281, 280, 280, 278, 278, 278, 278, 266, 266, 275,
	275, 275, 275, 275, 265, 265, 261, 261, 261, 262,
	262, 263, 263, 260, 260, 264, 264, 277, 277, 276,
	258, 258, 259, 259, 283, 310, 310, 310, 310, 311,
	311, 284, 301, 302, 300, 300, 300, 300, 300, 72,
	72, 72, 213, 213, 213, 273, 273, 272, 272, 272,
	274, 274, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	208, 208, 208, 299, 299, 299, 299, 299, 299, 298,
	298, 298, 270, 270, 270, 297, 297, 52, 52, 157,
	157, 41, 41, 41, 41, 41, 41, 40, 40, 40,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 42, 42, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 76, 76, 76, 76, 78, 78,
	78, 286, 286, 1, 1, 5, 5, 2, 2, 77,
	77, 3, 3, 4, 4, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 253, 253, 253,
	285, 285, 287, 287, 24, 33, 33, 25, 25, 25,
	25, 26, 26, 53, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 303, 303, 207, 207, 215, 215, 206, 206,
	229, 229, 229, 209, 209, 209, 210, 210, 307, 307,
	307, 55, 55, 57, 57, 58, 59, 59, 231, 231,
	232, 232, 60, 61, 73, 73, 73, 73, 73, 73,
	75, 75, 75, 14, 14, 14, 14, 69, 69, 69,
	13, 13, 56, 56, 63, 304, 304, 305, 306, 306,
	306, 306, 64, 66, 27, 27, 27, 27, 27, 27,
	94, 94, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 89, 89, 89, 84, 84, 318,
	67, 68, 68, 87, 87, 87, 81, 81, 81, 86,
	86, 86, 91, 91, 93, 93, 93, 93, 93, 95,
	95, 95, 95, 95, 95, 95, 90, 90, 92, 92,
	92, 92, 222, 222, 222, 221, 221, 117, 117, 119,
	118, 118, 120, 120, 121, 121, 121, 155, 136, 136,
	189, 189, 188, 188, 190, 190, 190, 190, 192, 192,
	122, 122, 122, 122, 123, 123, 124, 124, 125, 125,
	230, 230, 227, 227, 227, 226, 226, 129, 129, 129,
	131, 130, 130, 130, 130, 132, 132, 134, 134, 133,
	133, 135, 137, 137, 137, 137, 137, 138, 138, 102,
	102, 102, 102, 102, 102, 112, 112, 112, 112, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 204, 204, 139, 139,
	147, 147, 147, 147, 140, 140, 140, 140, 140, 140,
	140, 148, 148, 148, 154, 149, 149, 145, 145, 145,
	145, 143, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 144, 144, 144, 144, 144, 144, 144, 144, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	319, 319, 246, 246, 246, 146, 146, 146, 146, 146,
	85, 85, 85, 85, 85, 235, 235, 235, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 160, 160, 82, 82, 158, 158, 159, 161, 161,
	156, 156, 156, 142, 142, 142, 162, 162, 163, 163,
	164, 164, 166, 165, 165, 167, 168, 168, 168, 169,
	169, 170, 170, 170, 43, 43, 43, 43, 43, 38,
	38, 38, 38, 39, 39, 39, 96, 96, 96, 96,
	98, 98, 97, 97, 70, 70, 71, 71, 71, 99,
	99, 100, 100, 100, 100, 186, 186, 171, 171, 171,
	178, 178, 178, 174, 174, 176, 176, 176, 177, 177,
	177, 175, 183, 183, 185, 185, 184, 184, 180, 180,
	181, 181, 182, 182, 182, 179, 179, 141, 141, 141,
	141, 141, 187, 187, 187, 187, 193, 193, 151, 151,
	153, 153, 152, 116, 194, 194, 198, 195, 195, 199,
	199, 199, 199, 199, 196, 196, 197, 197, 223, 223,
	223, 203, 203, 214, 214, 211, 211, 212, 212, 205,
	205, 216, 216, 216, 65, 150, 150, 282, 282, 279,
	219, 219, 220, 220, 224, 224, 228, 228, 225, 225,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 315, 316, 233, 234, 234, 234,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 3, 3, 2, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 1, 5, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 0, 2, 2, 2, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 7, 5, 6, 6, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 1, 5, 1, 3, 7, 1, 3, 3,
	1, 2, 2, 2, 5, 5, 5, 6, 8, 6,
	5, 5, 2, 2, 2, 2, 3, 3, 3, 4,
	1, 3, 5, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 4, 4, 2, 11, 3,
	6, 8, 6, 6, 6, 13, 8, 6, 10, 5,
	5, 5, 5, 5, 0, 10, 11, 7, 0, 8,
	9, 0, 3, 0, 1, 0, 3, 1, 1, 3,
	4, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 8, 8, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 3, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 4, 2, 4, 5, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 5, 4, 5, 5, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 2, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -313, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -53, -54, -55, -57,
	-58, -59, -60, -61, -13, -56, -27, -28, -62, -63,
	-64, -65, -66, -8, -7, -12, 7, 8, -74, -29,
	30, -34, -44, 202, -45, -35, 203, -46, 205, 204,
	240, 206, 233, 72, 280, 281, 283, 284, 285, 286,
	-75, 238, 239, 208, 34, 43, 31, 32, 35, 211,
	-9, -30, 6, -315, 9, 404, 235, 234, 26, -11,
	417, 83, -314, 551, -186, -171, 20, 31, 27, -170,
	-166, -87, -171, 18, 16, 5, -67, -318, -67, -67,
	10, 11, -67, -267, -269, 83, 139, 83, -67, -50,
	-49, -48, -47, -51, 29, -41, -42, -288, -40, -37,
	207, 204, 248, 106, 107, 240, 241, 242, 206, 224,
	239, 243, 238, 257, -36, 78, 31, 417, 420, -274,
	203, 209, 210, 405, 109, 108, 73, 205, -271, 330,
	521, -51, 523, 98, 100, 522, 42, 214, 524, 525,
	526, 527, 223, 528, 529, 530, 531, 537, 538, 539,
	540, 110, 5, -67, -228, -224, -292, -218, 86, 87,
	88, 414, 226, 448, 449, 273, 78, 39, 330, 521,
	280, 294, 288, 315, 307, 415, 450, 276, 227, 261,
	518, 305, 115, 523, 279, 451, 241, 335, 336, 337,
	98, 283, 372, 536, 278, 452, 534, 100, 522, 77,
	49, 42, 236, 303, 299, 524, 262, 453, 425, 255,
	109, 106, 543, 34, 297, 48, 28, 533, 108, 47,
	525, 130, 454, 526, 339, 320, 512, 46, 340, 242,
	455, 81, 419, 520, 341, 298, 342, 272, 532, 208,
	456, 504, 343, 344, 513, 457, 321, 325, 458, 364,
	345, 550, 50, 459, 460, 514, 107, 461, 76, 527,
	292, 293, 462, 270, 225, 366, 319, 223, 33, 346,
	416, 274, 56, 249, 367, 44, 323, 547, 43, 508,
	463, 511, 318, 314, 51, 464, 465, 466, 467, 528,
	317, 291, 313, 542, 437, 267, 529, 60, 210, 327,
	326, 328, 256, 363, 310, 468, 469, 470, 230, 79,
	471, 300, 19, 472, 473, 347, 263, 474, 54, 475,
	476, 370, 239, 477, 52, 530, 37, 244, 544, 531,
	478, 479, 480, 481, 482, 349, 483, 348, 322, 324,
	251, 350, 418, 484, 296, 243, 535, 485, 231, 519,
	245, 248, 238, 371, 232, 486, 487, 488, 489, 490,
	277, 491, 492, 284, 537, 41, 493, 494, 495, 496,
	271, 266, 365, 374, 59, 80, 332, 497, 517, 290,
	264, 498, 281, 53, 538, 539, 540, 258, 541, 7,
	548, 549, 352, 110, 268, 269, 45, 311, 250, 499,
	500, 301, 302, 316, 289, 312, 282, 505, 252, 353,
	240, 501, 373, 265, 333, 422, 257, 354, 516, 421,
	309, 306, 259, 502, 355, 215, 253, 254, 503, 506,
	356, 357, 275, 358, 359, 360, 361, 362, 260, 420,
	287, 304, 334, 385, 386, 387, 388, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 213, -67, 213, -133, -224, 213, -196, 336, -215,
	338, 351, 346, 356, 344, -207, 347, 349, 251, -307,
	364, 213, 353, 202, 156, 339, 348, 357, 358, 275,
	359, 362, 260, -303, -292, 526, 541, 115, 308, 343,
	341, 365, 508, 361, 360, -224, 282, -231, 287, -219,
	-292, -218, 285, -133, -73, 504, 206, -233, -233, -89,
	508, 510, -149, -102, 123, -112, -115, -107, -108, -143,
	-144, -145, -146, -113, -156, 145, 146, 153, 124, -154,
	-116, 24, 413, 406, 405, 156, 29, 198, 66, 67,
	408, 409, 126, 55, 381, 382, -114, 377, 383, 378,
	411, 412, 101, -219, -224, 218, 376, 212, 151, 404,
	-109, -105, -7, -152, 375, 379, 380, 384, -292, -218,
	-111, -110, -139, 89, 94, 99, 95, -312, 102, -315,
	90, 91, 92, 93, 103, 104, 157, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 42, 352, 352,
	-133, -67, -164, -87, -166, -9, -7, -315, 6, -67,
	-7, -8, -12, -30, -32, 444, -31, -224, -171, -186,
	10, 141, 40, 48, -169, -170, -11, -7, -102, 17,
	21, 22, -92, 147, -102, -224, -68, -92, -205, 217,
	-67, -67, -195, -236, 282, -199, 365, 364, -220, -197,
	-219, -217, -196, 363, 207, 423, 122, 23, 25, 125,
	156, 17, 126, 35, 209, 308, 224, 155, 220, 405,
	202, 70, 424, 377, 378, 375, 381, 407, 408, 376,
	338, 29, 11, 426, 26, 234, 22, 36, 149, 204,
	129, 237, 24, 235, 101, 104, 429, 20, 73, 229,
	12, 222, 38, 14, 430, 431, 15, 218, 217, 141,
	214, 68, 9, 198, 27, 138, 64, 432, 117, 433,
	434, 435, 436, 66, 139, 18, 545, 379, 380, 31,
	509, 413, 246, 151, 71, 57, 510, 123, 438, 439,
	102, 440, 105, 74, 515, 119, 16, 69, 40, 441,
	247, 442, 219, 546, 443, 368, 444, 140, 205, 404,
	67, 445, 212, 351, 6, 410, 30, 233, 221, 112,
	65, 446, 213, 128, 411, 412, 216, 103, 5, 116,
	32, 10, 72, 75, 382, 383, 384, 55, 111, 417,
	127, 13, 447, 369, 121, 115, -268, 139, -255, -259,
	-219, 228, -284, 224, -133, -277, -276, -219, -88, -214,
	214, 222, 221, 116, -296, 119, 268, 376, 212, -47,
	-48, -196, 155, 245, 84, 84, -259, -258, -257, -297,
	247, 228, -283, -275, 220, 229, -265, 221, 222, -260,
	214, 117, -297, -260, 219, 229, 247, 247, 110, 247,
	110, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	244, -266, 131, -266, 421, 421, -271, -297, -297, -297,
	216, 33, 33, -216, -260, 216, 23, -266, -266, -196,
	155, -266, -266, -266, -266, 255, 255, -266, -266, -266,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
	-266, -266, 213, -296, -96, 362, 275, 78, -49, 257,
	-33, -133, -214, 214, 215, -296, -133, 199, -133, -209,
	139, 13, -209, -206, 352, 350, 337, 342, -209, -209,
	-209, -209, 258, 335, -261, 214, 33, 225, 352, 258,
	335, 258, 259, 258, 259, 345, 355, 258, -229, 12,
	141, 376, 340, 344, 251, 213, 252, 215, 354, -292,
	511, 259, -229, 90, -210, 139, 352, 254, -209, -234,
	-315, -220, 308, -234, -234, 30, 216, -219, -69, -219,
	90, -14, -10, -18, -17, -19, 131, -94, 352, -83,
	156, 526, 512, 513, 514, 511, 349, 519, 517, 515,
	258, 516, 84, 119, 121, 122, -102, 138, -140, 131,
	132, 133, 134, 135, 136, 137, 141, 123, 125, 139,
	140, 120, 142, 143, 144, 145, 146, 147, 148, 150,
	149, 151, 152, 155, 200, 201, -108, -108, -108, -108,
	-154, -315, -315, -315, -108, -204, -315, -108, -315, -315,
	-315, -315, -160, -102, -315, -319, -315, -319, -319, -246,
	-315, -246, -315, -315, -315, -315, 199, -315, -315, -315,
	-315, -315, -246, -246, -246, -246, 99, 94, 89, -156,
	95, 90, -219, -224, -7, -8, -149, -233, -304, -305,
	-136, -133, -315, 275, -169, -11, -7, -164, -170, -166,
	-7, -67, -81, -93, 61, 62, -95, 22, 36, 65,
	63, 21, -316, 85, -316, -186, -316, 84, -32, -189,
	83, 59, 41, 90, 90, 84, 19, -165, -167, -102,
	12, -222, -221, 23, -219, 90, 199, 97, 12, -134,
	27, -133, -205, -205, 84, 282, -199, -236, -201, -200,
	366, 368, 131, -223, -219, 90, 29, 85, 84, -133,
	-238, -241, -243, -242, -244, -239, -240, 305, 306, 156,
	309, 311, 312, 313, 314, 315, 316, 317, 318, 319,
	320, 30, 236, 301, 302, 303, 304, 321, 322, 323,
	324, 325, 326, 327, 328, 288, 307, 415, 289, 290,
	291, 292, 293, 294, 296, 297, 298, 299, 300, -295,
	-292, 83, 85, 84, -245, 83, -96, 213, -292, 214,
	214, 214, -67, 404, -266, -266, 244, -40, -37, -288,
	16, -36, -37, 207, 106, 107, 204, 83, -255, 83,
	-264, -295, -292, 83, 117, 219, 116, -263, -260, -263,
	-264, -292, -156, -292, 117, 117, -192, -219, -192, -192,
	21, -192, 21, -192, 21, 92, -219, -192, 21, -192,
	21, -192, 21, -192, 21, -192, 21, 29, 76, 77,
	29, 79, 80, 81, -156, -156, -255, -196, -133, -292,
	92, 92, -266, -266, 92, 90, 90, 90, -266, -266,
	92, 90, -226, -224, 90, -298, 230, 272, 274, 92,
	92, 92, 92, 29, 90, -299, 29, 533, 532, 534,
	535, 536, 92, 29, 92, 29, 92, -219, 83, -133,
	-99, 262, 202, 204, 207, 74, 90, 276, 131, 42,
	84, 216, 213, -292, -211, 218, -211, -225, -224, -217,
	90, -102, -262, 12, 141, -229, -229, -209, -133, -262,
	-229, -209, -133, -209, -209, -209, -209, -229, -229, -229,
	-209, -224, -224, -133, -133, -133, -133, -133, -133, -133,
	-234, -234, -234, -210, -209, 511, 90, 74, -232, 285,
	319, 505, 506, 507, 84, 417, -126, -133, 511, 511,
	511, 511, 511, 511, -102, -102, -102, -102, -147, 102,
	123, 103, 104, -115, -148, -152, -154, 96, 141, 125,
	139, 140, -107, -108, -107, -107, -107, -107, -107, -107,
	-107, -107, -107, -107, -107, -107, -107, -235, -292, 90,
	156, 90, 90, -90, -92, -102, -102, -292, -219, -90,
	-90, -102, -86, 22, 36, -158, -159, 127, -156, -316,
	-316, 92, -219, -219, -80, -79, 386, 387, 388, 389,
	391, 392, 393, 396, 397, 401, 402, 385, 403, 390,
	395, 398, 399, 400, 394, 304, -91, 22, 36, -90,
	-220, -225, -217, -90, -91, -91, -90, -90, 199, -186,
	-316, 84, -306, 368, 369, 509, -227, 247, -226, 23,
	-150, -149, 90, -169, -169, 61, 62, 57, -90, -95,
	-316, -31, 23, -188, -219, 60, 90, -247, -196, -102,
	-102, 84, -168, 25, 26, -133, -221, 147, -225, -133,
	-191, 247, -133, -118, -120, -121, -122, -136, -155, -315,
	12, -126, -127, -135, -224, -199, -201, 84, 367, 369,
	370, 74, 105, -102, -248, 155, -273, -272, -271, -255,
	-257, -258, -259, 85, -172, -101, 38, -251, 333, 332,
	-245, -245, -245, -245, -245, -247, -247, -247, -247, 83,
	83, -245, -245, -245, -245, -249, 83, -249, -249, -250,
	83, -250, -284, -102, -281, -280, -278, -279, 223, 98,
	417, 75, -276, -168, 92, -99, -212, 218, -282, -279,
	-292, -292, -292, -212, -292, 90, -292, 90, 84, 17,
	-256, -255, -52, 272, -287, 247, -283, -277, -264, 117,
	-263, -264, -264, -292, 84, 27, 110, 110, 110, 110,
	417, 204, 30, -255, -52, -235, 216, -235, -235, 90,
	90, -208, 541, -126, -98, 264, 131, 253, 253, 213,
	213, 266, -133, 277, 279, 278, 276, 21, 265, 267,
	269, 255, -133, -133, -211, 74, -128, -133, 24, -224,
	-133, -209, -209, -133, -209, -209, -133, -219, -83, 368,
	84, 417, 20, -84, 20, 102, 103, 104, -148, -107,
	-108, -107, 122, 237, 84, -316, 23, 84, 75, -316,
	-316, -316, 84, 12, -90, -161, -159, 129, -102, -316,
	-316, 84, 84, 12, -316, -90, -90, -315, 199, -316,
	-316, -316, -316, -316, -220, -305, 508, 369, -137, 72,
	217, 73, -315, -226, -316, -142, -219, 92, 95, -171,
	-117, -119, 12, -95, -154, 85, 84, -247, -175, -180,
	-206, -292, 90, 156, -167, 199, -138, 13, -141, 30,
	55, -10, -315, -315, 30, 84, -129, -131, -130, -132,
	64, 68, 70, 65, 66, 67, 71, -230, 23, -118,
	-8, -7, -315, -133, -126, -317, 12, 75, -317, 84,
	199, -200, -202, 371, 368, 374, -292, 90, -76, 247,
	84, -271, -259, -311, 102, 123, 29, 74, 330, 98,
	-309, 155, -310, 219, 116, 117, 231, 23, 39, -252,
	334, -247, -247, -254, 90, -254, 92, 92, 85, -43,
	-38, -39, 31, 78, -278, -266, 90, 37, -219, 85,
	-98, -133, 123, 74, -282, -282, -282, -224, 16, -188,
	84, 85, -157, 273, 85, -219, 85, 83, -264, -264,
	-219, -315, 213, 29, 29, -52, -157, -248, -292, 543,
	542, 85, 215, 271, -100, 381, 90, 86, -133, -133,
	-133, -133, -133, 207, 204, 256, 216, -126, -133, 84,
	-72, 232, 227, -229, -229, 31, -133, 368, 520, 518,
	122, 237, -115, -108, -92, 414, -237, 156, 305, 236,
	303, 299, 319, 310, 332, 301, 333, -237, -235, -102,
	-102, -164, 130, -102, 128, -102, -102, -102, -316, -316,
	-91, -220, 214, 214, 214, -192, -203, 20, 12, 55,
	55, -117, -138, -118, -95, -219, -178, 504, -183, 44,
	-181, -182, 45, -179, 46, 54, 147, -169, -102, -193,
	74, -194, -198, -156, -151, -153, -152, -315, -187, -316,
	-219, -192, -194, -120, -121, -121, -120, -121, 64, 64,
	64, 69, 64, 69, 64, -130, -224, -316, -316, -8,
	-227, 75, -118, -118, -135, -224, 147, 368, 372, 373,
	17, -271, 102, -315, -106, -114, -104, -103, -105, -109,
	145, 146, 10, 90, 90, -292, 117, 117, -133, 83,
	85, 84, 85, 84, 85, 84, -213, 454, 123, -39,
	-38, -266, -266, 92, -292, 215, 24, -133, 74, 74,
	74, 17, -255, -156, 55, -281, -188, -285, -287, -133,
	-104, -315, -157, -133, -97, 262, 270, 83, 87, -294,
	75, 253, 330, 253, -133, -72, -43, -133, -209, -209,
	31, -292, -115, -108, -315, -316, -245, -245, -245, -250,
	-245, 293, -245, 293, -316, -316, 84, -316, 20, -316,
	-82, 410, -102, 84, 84, -316, -316, -315, -315, -315,
	-316, -133, -138, -162, 14, -175, 49, 311, -185, -184,
	53, 45, -182, 17, 47, 17, 28, -193, 84, 131,
	84, -316, -316, 84, 55, 199, -316, -138, -124, -123,
	74, 75, -125, 74, -123, 64, 64, -189, -316, -191,
	-118, -138, -138, 199, -1, -2, 545, 546, 547, -102,
	-110, -110, -144, 83, -102, -247, 90, -247, 92, 92,
	454, 29, 79, 80, 81, 29, 76, 77, -133, -133,
	-133, -133, -188, 249, 85, -316, 84, -253, 417, 420,
	-102, -189, 85, -291, 417, -293, -219, -219, -219, -219,
	-107, -247, -292, -102, -102, -169, 90, -102, -102, -190,
	-316, -219, 219, -190, -190, -227, -162, -163, 15, 17,
	-176, 51, -174, 50, -174, -184, 17, 17, 90, 17,
	90, 117, -198, -102, -153, 55, -10, -219, -151, -219,
	-164, -102, 83, -102, -138, -138, 550, 117, -77, 83,
	337, -316, -188, 85, 85, 85, -189, 250, -310, -287,
	421, 421, -316, 23, -290, -289, -220, 83, 75, -85,
	141, 417, -316, -316, -316, -316, -316, 84, -316, -316,
	-316, -137, -163, -102, -149, -177, 52, 74, 105, 90,
	90, 90, 10, -151, 199, -169, -188, -164, 83, -5,
	78, -3, 544, -102, 83, 85, -173, 23, -315, -10,
	84, 131, -188, -133, -316, 415, 71, 418, -219, 219,
	74, 105, -194, -219, 85, -169, -102, 83, 131, -78,
	548, 92, 85, -188, -301, -302, 74, -311, -308, 102,
	123, 98, -309, 111, 112, -10, -102, 246, -70, 417,
	-289, -270, -220, 90, 92, 85, 60, 416, 419, 85,
	-188, 92, -286, 83, 17, 85, -302, 74, 11, 10,
	102, 90, -70, -316, -316, -71, 261, 508, -294, 60,
	-3, 85, -285, -1, -300, 232, 227, 230, 30, -300,
	224, -291, 417, -78, -3, 85, 550, 117, 226, 29,
	102, 263, 418, -286, -78, 83, -5, 419, -286, -102,
	83, 85, -188, -4, 549, 85, 92, -4,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 699, 699, 699, 0,
	699, 0, 0, 699, -2, -2, 699, 1106, 0, 699,
	0, 0, -2, 632, 633, 0, 635, -2, 0, 0,
	644, 1553, 1553, 694, 0, 0, 0, 0, 0, 699,
	970, 45, 699, 0, 80, 81, 650, 651, 652, 60,
	0, 1551, 1, 3, 66, 70, 0, 0, 0, 53,
	979, 0, 73, 0, 0, 703, 0, 701, 0, 1089,
	699, 699, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 484, 444, 487, 442, 473,
	-2, 435, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 447, 337, 337, 0, 0, -2,
	435, 435, 435, 0, 0, 0, 470, 1091, 390, 337,
	337, 0, 337, 337, 337, 337, 0, 0, 337, 337,
	337, 337, 337, 337, 337, 337, 337, 337, 337, 337,
	337, 337, 337, 996, 143, 1107, 1104, 1105, 35, 36,
	37, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269,
	1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329,
	1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359,
	1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369,
	1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379,
	1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409,
	1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419,
	1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429,
	1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469,
	1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
	1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489,
	1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519,
	1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539,
	1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549,
	1550, 0, 1083, 0, 562, 789, 0, 623, 623, 0,
	623, 623, 623, 623, 0, 0, 0, 574, 0, 0,
	0, 0, 620, 0, 0, 593, 595, 0, 620, 0,
	626, 0, 607, 623, 1554, 1554, 1554, 1074, 0, 617,
	615, 629, 630, 612, 613, 631, 634, 0, 639, 642,
	1100, 1101, 0, 657, 44, 1331, 649, 662, 663, 0,
	695, 696, 40, 875, 0, 804, 808, 819, 832, 833,
	834, 835, 836, 838, 839, 0, 0, 0, 0, 844,
	845, 0, 0, 0, 0, 0, 856, 0, 0, 0,
	0, 0, 951, 0, 920, 920, 892, 920, 922, 922,
	0, 0, 0, 960, 0, 0, 0, 0, 0, 0,
	248, 249, 874, 1063, 922, 922, 922, 922, -2, -2,
	195, 196, 197, 198, 199, 200, 201, 0, 191, 0,
	252, 253, 250, 251, 858, 859, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 234, 235, 236, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 247, 1553, 0, 672,
	0, 0, 979, 0, 971, 970, 58, 0, 699, -2,
	0, 0, 0, 0, 42, 0, 47, 750, 72, 71,
	1015, 0, 0, 0, 54, 980, 62, 64, 981, 0,
	704, 705, 0, 728, 732, 0, 700, 0, 0, 1090,
	1089, 1089, 97, 0, 1496, 1067, -2, -2, 0, 0,
	1102, 1103, 1076, -2, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, -2, 0, 0, 153, 154,
	0, 38, 363, 0, 149, 0, 357, 309, 996, 0,
	0, 0, 0, 0, 699, 0, 1084, 134, 135, 141,
	142, 337, 337, 0, 143, 143, 451, 452, 453, 0,
	0, -2, 361, 0, 436, 0, 0, 351, 351, 355,
	353, 354, 0, 0, 0, 0, 0, 0, 464, 0,
	465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 338, 0, 482, 483, 391, 0, 0, 0,
	0, 462, 463, 0, 0, 1092, 1093, 0, 0, 337,
	337, 0, 0, 0, 0, 337, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 133, 1009, 0, 0, 0, -2, 0,
	554, 0, 0, 0, 1085, 1085, 561, 0, 563, 564,
	0, 0, 565, 0, 620, 620, 618, 619, 567, 568,
	569, 570, 623, 0, 0, 346, 347, 348, 620, 623,
	0, 623, 623, 623, 623, 620, 620, 620, 623, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1554, 1554,
	1554, 626, 623, 0, 603, 0, 604, 605, 608, 609,
	1555, 1556, 1121, 610, 611, 1075, 640, 643, 660, 658,
	659, 661, 653, 654, 655, 656, 0, 674, 675, 680,
	0, 0, 0, 0, 686, 687, 688, 0, 0, 691,
	692, 693, 0, 0, 0, 0, 802, 0, 0, 864,
	865, 866, 867, 868, 869, 870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 840, 841, 842, 843,
	846, 0, 0, 0, 851, 852, 0, 0, 0, 0,
	0, 709, 0, 952, 0, 890, 0, 891, 893, 894,
	0, 895, 0, 0, 0, 712, 0, 0, 712, 712,
	0, 0, 185, 186, 187, 188, 202, 203, 204, 205,
	206, 254, 960, 0, 874, 0, 0, 41, 664, 665,
	0, 772, 1095, 0, 52, 61, 63, 979, 56, 979,
	0, 714, 0, 0, -2, -2, 715, 721, 722, 723,
	724, 725, 49, 1552, 50, 0, 69, 0, 43, 0,
	0, 0, 0, 321, 1018, 0, 0, 972, 973, 976,
	0, 729, 733, 0, 735, 736, 0, 702, 0, 95,
	0, 788, 0, 0, 0, 1496, 1073, 0, 99, 100,
	0, 0, 0, 325, 1078, 1079, 1080, -2, 344, 0,
	-2, 316, 260, 261, 262, 309, 264, 309, 309, 309,
	309, 321, 321, 321, 321, 292, 293, 294, 295, 296,
	0, 0, 279, 309, 309, 309, 309, 299, 300, 301,
	302, 303, 304, 305, 306, 265, 266, 267, 268, 269,
	270, 271, 272, 273, 311, 311, 311, 313, 313, 0,
	39, 0, 329, 0, 976, 0, 1009, 1087, 1097, 0,
	0, 0, 1087, 117, 0, 0, 485, 445, 474, 486,
	0, 448, 449, -2, 0, 0, 435, 0, 437, 0,
	345, 0, -2, 0, 355, 0, 351, 355, 352, 355,
	343, 356, 466, 467, 468, 0, 526, 758, 0, 0,
	0, 0, 0, 532, 533, 534, 0, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 475, 476, 477,
	478, 479, 480, 481, 0, 0, 437, 0, 471, 0,
	392, 393, 0, 0, 396, 397, 398, 399, 0, 0,
	402, 403, 404, 775, 776, 405, 429, 430, 431, 406,
	407, 408, 409, 410, 411, 412, 423, 424, 425, 426,
	427, 428, 413, 414, 415, 416, 417, 420, 0, 127,
	1000, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 0, 0, 790, 1108, 1109,
	624, 625, 0, 349, 350, 623, 623, 571, 594, 0,
	623, 575, 596, 576, 578, 577, 579, 598, 599, 623,
	582, 621, 622, 583, 584, 585, 586, 587, 588, 589,
	590, 591, 592, 600, 601, 602, 627, 0, 0, 641,
	645, 646, 647, 648, 0, 0, 677, 91, 682, 683,
	684, 685, 697, 690, 876, 799, 800, 801, 803, 805,
	0, 860, 862, 807, 809, 871, 872, 873, 0, 0,
	0, 0, 0, 813, 817, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 837, 935, 936,
	937, 854, 855, 0, 726, 0, 0, 0, 853, 0,
	0, 0, 0, 710, 711, 958, 955, 0, 0, 921,
	923, 0, 0, 0, 0, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 0, 0, 0, 713,
	961, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	1062, 0, 667, 668, 670, 0, 792, 0, 773, 0,
	0, 1096, 673, 55, 57, 719, 720, 0, 737, 716,
	51, 46, 0, 0, 752, 1016, 321, 1038, 0, 982,
	983, 0, 975, 977, 978, 74, 734, 730, 0, 797,
	0, 0, 787, 0, 740, 742, 743, 744, 770, 0,
	0, 0, 0, 93, 789, 1068, 98, 0, 0, 103,
	104, 1069, 1070, 1071, 1072, 0, 504, -2, 387, 155,
	157, 158, 159, 150, 369, 0, 0, 319, 317, 318,
	263, 321, 321, 286, 287, 288, 289, 290, 291, 0,
	0, 280, 281, 282, 283, 274, 0, 275, 276, 277,
	0, 278, 362, 0, 984, 330, 331, 333, 337, 0,
	0, 0, 358, 359, 0, 1000, 0, 0, 0, 1098,
	1097, 1097, 1097, 0, 145, 146, 147, 148, 143, 0,
	0, 151, 439, 438, 0, 0, 360, 0, 0, 355,
	355, 340, 341, 469, 0, 0, 528, 529, 530, 531,
	0, 0, 0, 437, 439, 325, 0, 394, 395, 400,
	401, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 500, 501, 502, 503, 997, 998,
	999, 0, 0, 555, 0, 0, 379, 89, 1086, 560,
	620, 581, 597, 620, 573, 580, 606, 637, 681, 0,
	0, 0, 0, 689, 0, 806, 861, 863, 810, 0,
	814, 818, 0, 0, 0, 0, 0, 0, 0, 857,
	881, 882, 0, 0, 970, 0, 956, 0, 0, 889,
	924, 0, 0, 0, 877, 0, 0, 712, 0, 925,
	926, 927, 928, 929, 961, 666, 669, 671, 748, 0,
	0, 0, 0, 774, 1094, 0, 963, 0, 0, 737,
	797, 738, 0, 717, 48, 751, 0, 1020, 1019, 1032,
	1045, 322, 323, 324, 974, 0, 979, 0, 1056, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 0, 780, 0, 0, 0, 0, 771, 0,
	0, 0, 0, -2, 0, 0, 87, 88, 0, 0,
	0, 101, 102, 0, 0, 108, 326, 327, 136, 0,
	143, 389, 156, 160, 165, 0, 0, 0, 170, 0,
	172, 0, 370, 0, 256, 258, 0, 0, 163, 259,
	320, 284, 285, 0, 307, 0, 0, 0, 382, 113,
	988, 987, 337, 337, 332, 0, 335, 0, 1099, 310,
	0, 126, 0, 0, 0, 0, 0, 132, 0, 443,
	0, 454, 455, 0, 525, 0, 329, 0, 339, 342,
	759, 0, 0, 456, 0, 439, 460, 461, 472, 421,
	422, 419, 0, 0, 1010, 1011, 0, 1014, 118, 492,
	494, 493, 497, 0, 0, 490, 0, 379, 984, 0,
	559, 380, 381, 623, 623, 676, 92, 0, 679, 0,
	0, 0, 811, 815, 727, 0, 0, 309, 309, 941,
	309, 313, 944, 309, 946, 309, 949, 0, 0, 0,
	0, 953, 888, 959, 0, 0, 0, 0, 878, 879,
	0, 962, 0, 0, 0, 0, 0, 1081, 1082, 964,
	965, 797, 966, 739, 718, 753, 1038, 0, 1031, 0,
	-2, 1040, 0, 0, 0, 1046, 731, 75, 798, 78,
	0, 1056, 1064, 0, 1047, 1058, 1060, 0, 0, 0,
	1052, 0, 797, 741, 766, 768, 0, 763, 778, 779,
	781, 0, 783, 0, 785, 786, 750, 746, 747, 0,
	95, 0, 797, 797, 94, 0, 791, 105, 106, 107,
	513, 388, 166, 0, 168, 183, 184, 189, 190, 192,
	0, 0, 0, 171, 173, 174, 255, 257, 0, 0,
	321, 0, 321, 0, 314, 0, 371, 383, 0, 985,
	986, 0, 0, 334, 336, 0, 1088, 128, 0, 0,
	0, 0, 152, 440, 0, 328, 0, 0, 550, 547,
	457, 0, 459, 750, 1001, 1002, 1003, 0, 1013, 121,
	0, 0, 0, 0, 556, 557, 558, 90, 566, 572,
	678, 698, 812, 816, 0, 848, 938, 321, 942, 943,
	945, 947, 948, 950, 849, 850, 0, 884, 0, 886,
	979, 0, 957, 0, 0, 898, 880, 0, 0, 0,
	772, 59, 966, 968, 0, 1025, 1023, 1023, 1033, 1034,
	0, 0, 1041, 0, 0, 0, 0, 79, 0, 0,
	0, 1061, 0, 0, 0, 0, 96, 970, 760, 767,
	0, 0, 761, 0, 762, 782, 784, 745, -2, 797,
	797, 85, 86, 0, 0, 0, 514, 517, 518, 0,
	193, 194, 169, 0, 0, 297, 308, 298, 0, 0,
	384, 989, 990, 991, 992, 993, 994, 995, 750, 129,
	130, 131, 446, 0, 0, 527, 0, 535, 0, 0,
	0, 0, 1012, 491, 0, 119, 120, 0, 0, 496,
	930, 939, 940, 0, 0, 0, 954, 0, 0, 0,
	794, 754, 755, 0, 0, 792, 968, 77, 0, 0,
	1028, 0, 1021, 1024, 1022, 1035, 0, 0, 1042, 0,
	1044, 0, 1065, 1066, 1059, 0, 1051, 1054, 1050, 1053,
	979, 764, 0, 769, 970, 84, 0, 515, 521, 0,
	0, 167, 0, 177, 312, 315, 0, 0, 364, 551,
	548, 549, 458, 0, 122, 123, 0, 0, 0, 0,
	0, 0, 883, 885, 887, 896, 897, 0, 793, 795,
	796, 749, 76, 969, 967, 1017, 0, 1026, 1027, 1036,
	1037, 1043, 0, 1049, 0, 82, 0, 979, 0, 0,
	0, 508, 0, 0, 0, 365, 369, 0, 0, 1004,
	0, 0, 0, 498, 847, 0, 0, 0, 756, 757,
	1029, 1030, 1057, 1055, 765, 83, 0, 0, 0, 511,
	0, 522, 519, 0, 366, 367, 0, 161, 178, 179,
	0, 0, 182, 175, 176, 1004, 0, 0, 488, 1006,
	124, 125, 432, 433, 434, 118, 931, 0, 934, 521,
	0, 516, 507, 0, 513, 520, 368, 0, 0, 0,
	180, 181, 114, 552, 553, 0, 1007, 1008, 121, 932,
	508, 521, 0, 0, 372, 374, 375, 0, 0, 373,
	0, 495, 0, 511, 508, 512, 0, 515, 376, 377,
	378, 1005, 0, 505, 511, 0, 0, 933, 506, 0,
	0, 523, 0, 509, 0, 523, 524, 510,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 124, 3, 3, 3, 150, 142, 3,
	83, 85, 147, 145, 84, 146, 199, 148, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 551,
	132, 131, 133, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 152, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 153,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 121, 122, 123, 125, 126,
	127, 128, 129, 130, 134, 135, 136, 137, 138, 139,
	140, 141, 143, 144, 149, 151, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:462
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:467
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:472
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:505
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:515
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:519
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:524
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:534
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:540
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:546
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:550
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:559
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:565
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:569
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:575
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:581
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:585
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:589
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:612
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:618
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:623
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:642
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:649
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:728
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:734
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:746
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:754
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:766
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:778
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:782
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:806
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:811
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:816
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:820
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:826
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:836
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:840
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:849
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:855
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:865
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:871
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:875
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:881
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:885
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:889
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:895
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:899
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:903
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:907
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:913
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:917
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:965
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:969
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:975
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:980
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:985
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:991
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1008
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1015
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1022
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1027
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1032
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1037
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1044
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1051
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1062
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1073
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1079
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1083
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1097
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1101
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1107
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1111
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1117
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1121
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1128
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1132
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1138
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1148
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1153
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1162
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1175
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1181
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1187
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1195
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1199
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1208
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1212
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1218
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1224
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1229
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1234
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1239
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1244
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1249
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1265
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1269
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1278
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1283
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1289
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1295
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1307
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1314
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1318
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1322
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1326
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1358
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1362
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1366
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1370
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1374
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1383
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.str = Armscii8Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = ASCIIStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = Big5Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = UBinaryStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = Cp1250Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = Cp1251Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = Cp1256Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = Cp1257Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = Cp850Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.str = Cp852Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.str = Cp866Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = Cp932Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = Dec8Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = EucjpmsStr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = EuckrStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = Gb18030Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = Gb2312Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = GbkStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = Geostd8Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = GreekStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = HebrewStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = Hp8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Keybcs2Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = Koi8rStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Koi8uStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = Latin1Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = Latin2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Latin5Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Latin7Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = MacceStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = MacromanStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = SjisStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Swe7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Tis620Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Ucs2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = UjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = Utf16Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = Utf16leStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Utf32Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Utf8Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Utf8mb4Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1576
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1587
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1591
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1595
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1601
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1605
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1609
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1613
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1619
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1630
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1715
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1804
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1840
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1844
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1849
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1853
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1861
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1865
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1871
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1879
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1883
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1887
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1896
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1926
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1933
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1938
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1942
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1948
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1952
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1958
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1962
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1967
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1971
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1977
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1987
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1991
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1995
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1999
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2003
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = ""
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = yyDollar[2].str
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = "key"
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = yyDollar[1].str
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2071
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2075
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2081
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2087
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2091
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2097
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2101
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2107
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2113
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2117
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2121
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2125
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2130
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2134
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2140
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2146
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2152
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2158
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2162
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2166
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2170
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2174
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = ""
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2200
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2209
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2215
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2229
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2239
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2243
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2247
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2251
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2255
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2259
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2263
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2267
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2271
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2275
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2279
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2283
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2287
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2291
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2295
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2299
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2303
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2307
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2311
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2315
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2319
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2323
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2327
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2331
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2343
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2379
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2383
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2387
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2398
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2402
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2407
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2411
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2420
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2424
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2428
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2436
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2442
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2456
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2460
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2464
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2468
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2472
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2476
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2480
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2484
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2488
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2492
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2496
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2500
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2504
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2508
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2512
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2516
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2520
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2524
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2528
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2532
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2536
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2540
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2544
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2550
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2560
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2564
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2584
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2588
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2592
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2598
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2604
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2611
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2618
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2624
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2628
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2642
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2654
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2664
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2668
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2672
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2685
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2710
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2745
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2750
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2762
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2775
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2790
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2799
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2810
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2814
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2819
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2823
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2848
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2852
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = ""
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = ""
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2876
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2880
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2884
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2888
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2892
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2896
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2900
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2904
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2908
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2912
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2916
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2920
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2924
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2928
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2932
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2936
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2940
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2944
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2948
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2952
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2956
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2960
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2965
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2969
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2973
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2980
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 552:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2990
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2994
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3000
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3006
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3010
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 557:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3016
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3029
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3043
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3054
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3058
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3062
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3066
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3070
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3074
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3082
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3094
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3098
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3122
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3224
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3228
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3271
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3275
		{
			yyVAL.str = "extended "
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3281
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3285
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3301
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3305
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3319
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3323
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3333
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3339
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3343
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3347
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3363
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3367
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3379
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3388
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3390
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3411
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3415
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3419
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3423
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3427
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3431
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3437
		{
			yyVAL.str = yyDollar[1].str
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.str = yyDollar[1].str
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3468
		{
			yyVAL.str = ""
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3472
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3492
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3496
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3502
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3508
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3518
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3524
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3528
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3532
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3536
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3542
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3548
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3554
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3566
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3570
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3574
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3584
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3590
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3598
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3622
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3634
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3639
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3643
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3647
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3652
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3661
		{
			setAllowComments(yylex, true)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3671
		{
			yyVAL.strs = nil
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3685
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3689
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = SQLCacheStr
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3707
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3711
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3724
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3729
		{
			yyVAL.strs = nil
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3733
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3745
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = SQLCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = DistinctStr
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.str = DistinctStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.str = StraightJoinHint
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3781
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3785
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3791
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3795
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3799
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3803
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3808
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3828
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3832
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3838
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3844
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3848
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3858
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3862
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3866
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3872
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3878
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3882
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3887
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3891
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3897
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3901
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3907
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3911
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3915
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3925
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3929
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3942
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3946
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3950
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3954
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3960
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3962
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3966
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3972
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3974
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.empty = struct{}{}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4003
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4007
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4011
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4017
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4023
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4027
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4031
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4035
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4041
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4045
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4069
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4075
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4084
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4088
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4092
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4096
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4105
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4112
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4116
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4120
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4124
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4128
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4139
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4143
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4147
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4151
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4157
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4161
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4165
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4169
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4173
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4177
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4181
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4185
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4189
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4193
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4197
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4203
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4207
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4211
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4215
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4219
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4223
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4227
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4231
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4235
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4239
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4243
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4247
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4251
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4257
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4261
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4265
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4269
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4273
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4277
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4281
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4285
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4289
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4293
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4297
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4301
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4305
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4309
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4317
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4329
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4333
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4337
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4349
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4366
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4370
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4377
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4381
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4385
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4389
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4395
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4399
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4403
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4407
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4411
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4415
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4419
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4425
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4429
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4433
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4440
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4446
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4450
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 877:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4460
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4464
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4468
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4472
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4482
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4486
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4490
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4494
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4498
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4502
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4506
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4510
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4514
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4518
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4533
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4548
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4552
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4556
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4560
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4568
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4572
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4576
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4580
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4584
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4588
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4592
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4596
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4600
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4604
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4608
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4614
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4618
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4622
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4626
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4630
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4634
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4638
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4642
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4646
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4656
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4660
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4664
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4674
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4696
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4700
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4704
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4708
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4712
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4718
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4732
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4736
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4740
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4744
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4748
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4752
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4758
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4762
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4766
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4770
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4774
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4778
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4782
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4796
		{
			yyVAL.str = string("")
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4800
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4806
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4816
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4831
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4835
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4839
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4845
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4854
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4858
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4868
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4886
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4892
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4898
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4902
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4908
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4913
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4917
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4921
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4926
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4930
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4936
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4940
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4944
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4953
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4957
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4961
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4965
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4972
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4976
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4980
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4984
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4990
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4994
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4998
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5003
		{
			yyVAL.str = ""
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5007
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5011
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5015
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5020
		{
			yyVAL.str = ""
		}
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5024
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5030
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5034
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1004:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5039
		{
			yyVAL.str = ""
		}
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5043
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5048
		{
			yyVAL.str = "cascaded"
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5061
		{
			yyVAL.str = ""
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5065
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5075
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5079
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5089
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5093
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5099
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5103
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5107
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5112
		{
			yyVAL.str = ""
		}
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5116
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5120
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5125
		{
			yyVAL.str = ""
		}
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5129
		{
			yyVAL.str = " header"
		}
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5134
		{
			yyVAL.str = ""
		}
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5138
		{
			yyVAL.str = " manifest on"
		}
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5142
		{
			yyVAL.str = " manifest off"
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5147
		{
			yyVAL.str = ""
		}
	case 1029:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5151
		{
			yyVAL.str = " overwrite on"
		}
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5155
		{
			yyVAL.str = " overwrite off"
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5161
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5166
		{
			yyVAL.str = ""
		}
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5170
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5176
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5186
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1037:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5195
		{
			yyVAL.str = ""
		}
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5199
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5205
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5209
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5215
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1044:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5223
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5228
		{
			yyVAL.str = ""
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = " optionally"
		}
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5245
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5249
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5253
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5257
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5261
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5267
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5271
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5275
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5279
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5288
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5294
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5298
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5304
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5308
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5314
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5329
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5333
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5339
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5345
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5355
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5359
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5363
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5367
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5371
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5379
		{
			yyVAL.str = "charset"
		}
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5389
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5393
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5397
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5406
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5408
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5411
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5413
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5416
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5418
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5423
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5426
		{
			yyVAL.empty = struct{}{}
		}
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5428
		{
			yyVAL.empty = struct{}{}
		}
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.empty = struct{}{}
		}
	case 1094:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5434
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5439
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5443
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5450
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5454
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5460
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5464
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5477
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5481
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5487
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5491
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5498
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5964
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
			decNesting(yylex)
		}
	case 1553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5978
		{
			skipToEnd(yylex)
		}
	case 1554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5983
		{
			skipToEnd(yylex)
		}
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			skipToEnd(yylex)
		}
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5991
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
