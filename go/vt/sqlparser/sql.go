//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18
func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// forceEOF forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling forceEOF will make the lexer
// return EOF early.
func forceEOF(yylex interface{}) {
	yylex.(*Tokenizer).ForceEOF = true
}

//line sql.y:53
type yySymType struct {
	yys               int
	empty             struct{}
	statement         Statement
	selStmt           SelectStatement
	ddl               *DDL
	ins               *Insert
	byt               byte
	bytes             []byte
	bytes2            [][]byte
	str               string
	strs              []string
	selectExprs       SelectExprs
	selectExpr        SelectExpr
	columns           Columns
	partitions        Partitions
	colName           *ColName
	tableExprs        TableExprs
	tableExpr         TableExpr
	joinCondition     JoinCondition
	tableName         TableName
	tableNames        TableNames
	indexHints        *IndexHints
	expr              Expr
	exprs             Exprs
	boolVal           BoolVal
	colTuple          ColTuple
	values            Values
	valTuple          ValTuple
	subquery          *Subquery
	whens             []*When
	when              *When
	orderBy           OrderBy
	order             *Order
	limit             *Limit
	updateExprs       UpdateExprs
	setExprs          SetExprs
	updateExpr        *UpdateExpr
	setExpr           *SetExpr
	colIdent          ColIdent
	tableIdent        TableIdent
	convertType       *ConvertType
	aliasedTableName  *AliasedTableExpr
	TableSpec         *TableSpec
	columnType        ColumnType
	colKeyOpt         ColumnKeyOption
	optVal            *SQLVal
	LengthScaleOption LengthScaleOption
	columnDefinition  *ColumnDefinition
	indexDefinition   *IndexDefinition
	indexInfo         *IndexInfo
	indexColumn       *IndexColumn
	indexColumns      []*IndexColumn
	partDefs          []*PartitionDefinition
	partDef           *PartitionDefinition
	partSpec          *PartitionSpec
	vindexParam       VindexParam
	vindexParams      []VindexParam
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const KEYS = 57374
const VALUES = 57375
const LAST_INSERT_ID = 57376
const NEXT = 57377
const VALUE = 57378
const SHARE = 57379
const MODE = 57380
const SQL_NO_CACHE = 57381
const SQL_CACHE = 57382
const JOIN = 57383
const STRAIGHT_JOIN = 57384
const LEFT = 57385
const RIGHT = 57386
const INNER = 57387
const OUTER = 57388
const CROSS = 57389
const NATURAL = 57390
const USE = 57391
const FORCE = 57392
const ON = 57393
const USING = 57394
const ID = 57395
const HEX = 57396
const STRING = 57397
const INTEGRAL = 57398
const FLOAT = 57399
const HEXNUM = 57400
const VALUE_ARG = 57401
const LIST_ARG = 57402
const COMMENT = 57403
const COMMENT_KEYWORD = 57404
const BIT_LITERAL = 57405
const NULL = 57406
const TRUE = 57407
const FALSE = 57408
const OR = 57409
const AND = 57410
const NOT = 57411
const BETWEEN = 57412
const CASE = 57413
const WHEN = 57414
const THEN = 57415
const ELSE = 57416
const END = 57417
const LE = 57418
const GE = 57419
const NE = 57420
const NULL_SAFE_EQUAL = 57421
const IS = 57422
const LIKE = 57423
const REGEXP = 57424
const IN = 57425
const SHIFT_LEFT = 57426
const SHIFT_RIGHT = 57427
const DIV = 57428
const MOD = 57429
const UNARY = 57430
const COLLATE = 57431
const BINARY = 57432
const UNDERSCORE_BINARY = 57433
const INTERVAL = 57434
const JSON_EXTRACT_OP = 57435
const JSON_UNQUOTE_EXTRACT_OP = 57436
const CREATE = 57437
const ALTER = 57438
const DROP = 57439
const RENAME = 57440
const ANALYZE = 57441
const ADD = 57442
const TABLE = 57443
const INDEX = 57444
const VIEW = 57445
const TO = 57446
const IGNORE = 57447
const IF = 57448
const UNIQUE = 57449
const PRIMARY = 57450
const COLUMN = 57451
const CONSTRAINT = 57452
const SPATIAL = 57453
const FULLTEXT = 57454
const FOREIGN = 57455
const SHOW = 57456
const DESCRIBE = 57457
const EXPLAIN = 57458
const DATE = 57459
const ESCAPE = 57460
const REPAIR = 57461
const OPTIMIZE = 57462
const TRUNCATE = 57463
const MAXVALUE = 57464
const PARTITION = 57465
const REORGANIZE = 57466
const LESS = 57467
const THAN = 57468
const PROCEDURE = 57469
const TRIGGER = 57470
const VINDEX = 57471
const VINDEXES = 57472
const STATUS = 57473
const VARIABLES = 57474
const BEGIN = 57475
const START = 57476
const TRANSACTION = 57477
const COMMIT = 57478
const ROLLBACK = 57479
const BIT = 57480
const TINYINT = 57481
const SMALLINT = 57482
const MEDIUMINT = 57483
const INT = 57484
const INTEGER = 57485
const BIGINT = 57486
const INTNUM = 57487
const REAL = 57488
const DOUBLE = 57489
const FLOAT_TYPE = 57490
const DECIMAL = 57491
const NUMERIC = 57492
const TIME = 57493
const TIMESTAMP = 57494
const DATETIME = 57495
const YEAR = 57496
const CHAR = 57497
const VARCHAR = 57498
const BOOL = 57499
const CHARACTER = 57500
const VARBINARY = 57501
const NCHAR = 57502
const TEXT = 57503
const TINYTEXT = 57504
const MEDIUMTEXT = 57505
const LONGTEXT = 57506
const BLOB = 57507
const TINYBLOB = 57508
const MEDIUMBLOB = 57509
const LONGBLOB = 57510
const JSON = 57511
const ENUM = 57512
const NULLX = 57513
const AUTO_INCREMENT = 57514
const APPROXNUM = 57515
const SIGNED = 57516
const UNSIGNED = 57517
const ZEROFILL = 57518
const DATABASES = 57519
const TABLES = 57520
const VITESS_KEYSPACES = 57521
const VITESS_SHARDS = 57522
const VITESS_TABLETS = 57523
const VSCHEMA_TABLES = 57524
const NAMES = 57525
const CHARSET = 57526
const GLOBAL = 57527
const SESSION = 57528
const CURRENT_TIMESTAMP = 57529
const DATABASE = 57530
const CURRENT_DATE = 57531
const CURRENT_TIME = 57532
const LOCALTIME = 57533
const LOCALTIMESTAMP = 57534
const UTC_DATE = 57535
const UTC_TIME = 57536
const UTC_TIMESTAMP = 57537
const REPLACE = 57538
const CONVERT = 57539
const CAST = 57540
const GROUP_CONCAT = 57541
const SEPARATOR = 57542
const MATCH = 57543
const AGAINST = 57544
const BOOLEAN = 57545
const LANGUAGE = 57546
const WITH = 57547
const QUERY = 57548
const EXPANSION = 57549
const UNUSED = 57550

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"DATABASES",
	"TABLES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA_TABLES",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"GROUP_CONCAT",
	"SEPARATOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 27,
	-2, 4,
	-1, 215,
	109, 532,
	-2, 528,
	-1, 216,
	109, 533,
	-2, 529,
	-1, 282,
	80, 673,
	-2, 46,
	-1, 283,
	80, 646,
	-2, 47,
	-1, 288,
	80, 633,
	-2, 494,
	-1, 290,
	80, 660,
	-2, 496,
	-1, 649,
	109, 535,
	-2, 531,
	-1, 837,
	5, 28,
	-2, 347,
	-1, 857,
	5, 27,
	-2, 470,
	-1, 1050,
	5, 28,
	-2, 471,
	-1, 1089,
	5, 27,
	-2, 473,
	-1, 1137,
	5, 28,
	-2, 474,
}

const yyPrivate = 57344

<<<<<<< HEAD
const yyLast = 8971

var yyAct = [...]int{

	216, 1128, 784, 213, 594, 488, 971, 220, 707, 1056,
	209, 996, 727, 972, 911, 781, 194, 533, 487, 3,
	778, 738, 245, 287, 968, 531, 741, 860, 188, 877,
	708, 74, 950, 914, 674, 164, 742, 681, 164, 829,
	696, 751, 651, 866, 684, 427, 53, 281, 381, 774,
	421, 683, 535, 704, 520, 270, 218, 433, 500, 52,
	269, 1156, 164, 164, 74, 441, 193, 1146, 164, 1154,
	74, 1135, 189, 190, 191, 192, 279, 811, 203, 1152,
	785, 1145, 1134, 963, 1044, 385, 765, 268, 246, 47,
	57, 1105, 402, 1001, 1002, 1003, 894, 758, 1068, 799,
	1082, 1006, 1004, 766, 207, 951, 1039, 1037, 187, 392,
	413, 414, 1153, 798, 1151, 59, 60, 61, 62, 63,
	1129, 934, 705, 393, 222, 753, 388, 728, 730, 154,
	155, 155, 600, 953, 593, 753, 47, 876, 1103, 419,
	803, 931, 875, 874, 199, 383, 389, 933, 167, 797,
	274, 156, 1120, 382, 404, 164, 406, 164, 157, 158,
	159, 164, 1053, 888, 937, 955, 864, 959, 164, 954,
	823, 952, 74, 74, 74, 74, 957, 74, 74, 623,
	403, 405, 477, 478, 74, 956, 273, 1010, 445, 397,
	958, 960, 455, 739, 759, 465, 465, 794, 791, 792,
	729, 790, 620, 439, 438, 440, 424, 428, 1019, 863,
	74, 697, 546, 965, 597, 697, 752, 847, 430, 766,
	440, 750, 749, 446, 801, 804, 752, 479, 480, 481,
	482, 483, 484, 485, 1104, 1102, 842, 1011, 932, 1005,
	930, 401, 438, 892, 429, 456, 457, 458, 459, 460,
	461, 462, 455, 1123, 1133, 465, 435, 489, 440, 796,
	408, 408, 408, 408, 498, 408, 408, 1073, 164, 395,
	50, 153, 408, 795, 755, 164, 164, 164, 1072, 756,
	654, 74, 439, 438, 439, 438, 74, 906, 47, 967,
	905, 431, 458, 459, 460, 461, 462, 455, 800, 440,
	465, 440, 675, 474, 676, 1139, 476, 895, 1085, 802,
	820, 821, 822, 1071, 904, 502, 503, 504, 505, 506,
	507, 508, 463, 464, 456, 457, 458, 459, 460, 461,
	462, 455, 267, 486, 465, 490, 491, 492, 493, 494,
	495, 496, 475, 499, 501, 501, 501, 501, 501, 501,
	501, 501, 509, 510, 511, 512, 998, 545, 889, 841,
	881, 840, 787, 532, 1115, 454, 453, 463, 464, 456,
	457, 458, 459, 460, 461, 462, 455, 439, 438, 465,
	677, 641, 643, 644, 591, 74, 642, 399, 164, 394,
	164, 74, 382, 164, 440, 658, 164, 420, 164, 273,
	74, 74, 74, 74, 74, 74, 74, 74, 409, 656,
	657, 655, 1142, 420, 74, 74, 1093, 1126, 164, 1093,
	420, 607, 453, 463, 464, 456, 457, 458, 459, 460,
	461, 462, 455, 74, 1108, 465, 1107, 164, 1093, 1094,
	1065, 1064, 1007, 74, 991, 420, 628, 1052, 420, 638,
	639, 650, 1016, 1015, 659, 660, 661, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 649,
	21, 652, 284, 408, 861, 605, 1013, 1012, 54, 408,
	835, 420, 517, 420, 686, 420, 74, 862, 408, 408,
	408, 408, 408, 408, 408, 408, 1116, 553, 552, 407,
	74, 489, 408, 408, 691, 692, 940, 516, 645, 688,
	630, 23, 686, 626, 627, 164, 622, 835, 164, 164,
	164, 164, 164, 647, 709, 969, 198, 1048, 861, 517,
	164, 517, 517, 164, 678, 679, 1018, 164, 1088, 542,
	1014, 164, 164, 689, 690, 74, 862, 693, 701, 835,
	23, 688, 621, 74, 694, 882, 835, 737, 50, 439,
	438, 700, 544, 702, 703, 47, 734, 624, 439, 438,
	629, 50, 1077, 653, 713, 714, 440, 716, 712, 490,
	543, 715, 541, 724, 200, 440, 760, 595, 861, 732,
	779, 985, 736, 733, 164, 885, 775, 50, 867, 868,
	782, 164, 746, 770, 164, 74, 274, 274, 274, 274,
	274, 780, 922, 65, 1000, 235, 234, 237, 238, 239,
	240, 532, 969, 731, 236, 241, 907, 685, 687, 274,
	870, 50, 809, 810, 603, 428, 244, 776, 777, 23,
	920, 699, 273, 273, 273, 273, 273, 649, 417, 636,
	721, 719, 767, 768, 769, 722, 720, 273, 873, 872,
	826, 827, 828, 855, 718, 273, 856, 72, 717, 1150,
	812, 726, 410, 411, 412, 1144, 415, 416, 652, 813,
	936, 808, 723, 418, 526, 527, 50, 819, 434, 284,
	204, 205, 1149, 408, 818, 817, 899, 836, 825, 551,
	286, 400, 432, 921, 891, 1125, 386, 1124, 848, 923,
	916, 917, 924, 919, 918, 522, 525, 526, 527, 523,
	1086, 524, 528, 857, 925, 867, 868, 422, 886, 1046,
	927, 1078, 74, 788, 834, 602, 846, 824, 530, 423,
	201, 202, 74, 434, 816, 195, 844, 522, 525, 526,
	527, 523, 815, 524, 528, 761, 762, 763, 764, 871,
	1113, 879, 880, 196, 54, 1112, 1080, 862, 436, 1117,
	771, 772, 773, 1069, 619, 56, 58, 540, 883, 51,
	653, 1, 786, 74, 74, 910, 74, 898, 793, 900,
	901, 902, 887, 858, 859, 1127, 995, 748, 740, 380,
	64, 747, 903, 1101, 1067, 754, 893, 74, 286, 286,
	286, 286, 757, 286, 286, 164, 999, 832, 913, 1122,
	286, 833, 890, 556, 74, 926, 557, 555, 837, 838,
	839, 559, 558, 843, 946, 947, 554, 175, 849, 280,
	850, 851, 852, 853, 529, 547, 443, 437, 896, 897,
	66, 929, 928, 789, 648, 387, 473, 814, 966, 74,
	74, 285, 943, 709, 970, 976, 944, 625, 426, 709,
	1111, 1079, 408, 981, 982, 962, 961, 975, 984, 973,
	949, 986, 845, 74, 592, 74, 74, 497, 649, 978,
	599, 964, 980, 695, 221, 408, 640, 233, 230, 608,
	609, 610, 611, 612, 613, 614, 615, 979, 164, 993,
	232, 231, 631, 616, 617, 854, 74, 286, 1008, 1009,
	447, 994, 548, 219, 211, 272, 992, 513, 74, 164,
	521, 519, 518, 277, 869, 74, 865, 271, 74, 939,
	1043, 164, 1114, 1020, 635, 974, 25, 47, 55, 1030,
	206, 19, 18, 284, 17, 1022, 20, 16, 1025, 15,
	14, 743, 29, 987, 988, 989, 1028, 1027, 13, 12,
	11, 10, 9, 8, 948, 7, 1035, 6, 1045, 5,
	4, 197, 22, 2, 0, 489, 74, 0, 74, 74,
	74, 164, 74, 0, 74, 1047, 1055, 1058, 1059, 1060,
	0, 0, 0, 0, 0, 0, 0, 0, 1061, 1063,
	0, 0, 0, 0, 0, 0, 0, 990, 74, 74,
	74, 286, 0, 0, 0, 0, 0, 286, 0, 274,
	883, 0, 648, 1075, 0, 0, 286, 286, 286, 286,
	286, 286, 286, 286, 0, 0, 1083, 0, 0, 0,
	286, 286, 1042, 74, 74, 0, 1076, 0, 0, 0,
	0, 0, 1087, 0, 0, 273, 74, 0, 0, 632,
	1089, 973, 0, 0, 1098, 0, 0, 1100, 74, 443,
	1099, 0, 286, 1029, 0, 0, 0, 1109, 0, 0,
	1031, 0, 1106, 0, 74, 1118, 0, 0, 0, 1070,
	0, 1040, 1041, 0, 807, 0, 408, 0, 0, 1119,
	922, 973, 0, 0, 1049, 1050, 1051, 0, 1054, 1131,
	1081, 74, 680, 1130, 489, 709, 1136, 0, 0, 0,
	74, 1140, 0, 0, 0, 0, 698, 974, 920, 0,
	1090, 0, 0, 1147, 1148, 0, 1032, 1033, 0, 1034,
	743, 0, 1036, 710, 1038, 425, 0, 0, 0, 1157,
	0, 0, 0, 0, 173, 0, 0, 1110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 974, 0, 47,
	0, 286, 0, 1084, 0, 0, 0, 0, 183, 286,
	162, 0, 1066, 186, 912, 275, 0, 0, 1095, 1096,
	1097, 921, 0, 0, 0, 0, 0, 923, 916, 917,
	924, 919, 918, 0, 0, 210, 0, 162, 162, 0,
	0, 0, 925, 162, 0, 0, 0, 0, 915, 0,
	161, 0, 942, 0, 0, 0, 0, 0, 168, 0,
	0, 286, 1155, 0, 170, 0, 0, 0, 0, 0,
	176, 172, 0, 0, 1132, 0, 0, 0, 278, 1137,
	286, 0, 0, 384, 0, 0, 0, 1141, 0, 0,
	0, 0, 0, 983, 0, 0, 174, 0, 0, 178,
	0, 0, 0, 909, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 743, 0, 0, 0, 1159, 1160, 0,
	0, 0, 0, 0, 0, 0, 935, 169, 0, 0,
	162, 0, 162, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 171, 177, 179, 180,
	181, 182, 0, 0, 185, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 942, 0, 0, 0,
	390, 0, 391, 0, 0, 0, 396, 0, 23, 24,
	48, 26, 27, 398, 0, 0, 0, 0, 878, 0,
	0, 420, 0, 0, 0, 0, 0, 42, 286, 0,
	0, 0, 28, 0, 0, 454, 453, 463, 464, 456,
	457, 458, 459, 460, 461, 462, 455, 0, 0, 465,
	0, 37, 743, 0, 0, 50, 0, 454, 453, 463,
	464, 456, 457, 458, 459, 460, 461, 462, 455, 908,
	286, 465, 286, 162, 945, 0, 0, 912, 743, 830,
	162, 537, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 454, 453, 463, 464, 456, 457,
	458, 459, 460, 461, 462, 455, 0, 0, 465, 0,
	286, 0, 0, 515, 30, 31, 33, 32, 35, 0,
	0, 0, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 36, 43, 44, 0, 0, 45, 46,
	34, 0, 710, 0, 0, 977, 878, 0, 710, 0,
	0, 286, 38, 39, 831, 40, 41, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1074, 0, 286,
	0, 286, 997, 0, 454, 453, 463, 464, 456, 457,
	458, 459, 460, 461, 462, 455, 0, 0, 465, 0,
	0, 0, 0, 162, 0, 162, 0, 0, 162, 0,
	0, 162, 1021, 606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1023, 49, 0, 0, 0, 0,
	0, 1026, 0, 162, 286, 0, 0, 0, 0, 0,
	0, 0, 0, 596, 0, 598, 0, 0, 601, 0,
	0, 604, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 1057, 1057, 1057, 0, 1062, 0,
	286, 0, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 210, 210, 0,
	0, 210, 0, 0, 286, 286, 286, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 210, 210, 210, 0,
	162, 0, 711, 162, 162, 162, 162, 162, 0, 0,
	0, 0, 0, 0, 0, 725, 0, 0, 162, 1091,
	1092, 0, 537, 0, 0, 0, 162, 162, 0, 0,
	0, 0, 997, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 1057, 454, 453, 463, 464, 456,
	457, 458, 459, 460, 461, 462, 455, 0, 0, 465,
	1121, 0, 0, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 710, 0, 162, 1138, 0, 162,
	0, 0, 0, 0, 0, 0, 1143, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 606,
	0, 0, 100, 254, 102, 0, 0, 124, 109, 783,
	0, 210, 0, 247, 248, 0, 805, 0, 0, 806,
	0, 0, 0, 50, 0, 0, 215, 235, 234, 237,
	238, 239, 240, 0, 0, 84, 236, 241, 242, 243,
	0, 0, 0, 228, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	0, 0, 0, 0, 0, 225, 226, 0, 0, 0,
	210, 265, 0, 227, 0, 0, 223, 224, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 263, 0, 116, 0, 0, 127, 95,
	94, 0, 0, 0, 86, 0, 121, 114, 139, 1158,
	115, 120, 103, 131, 117, 138, 166, 145, 129, 144,
	76, 128, 137, 85, 122, 78, 135, 126, 107, 97,
	98, 77, 0, 119, 89, 93, 88, 112, 132, 133,
	87, 151, 81, 143, 80, 82, 142, 111, 130, 136,
	108, 105, 79, 134, 106, 104, 99, 91, 0, 0,
	0, 125, 140, 152, 0, 0, 146, 147, 148, 149,
	110, 83, 96, 123, 255, 264, 261, 262, 259, 260,
	258, 257, 256, 266, 249, 250, 252, 0, 251, 75,
	162, 101, 150, 118, 92, 141, 562, 0, 0, 0,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 0, 0, 0, 0, 0,
	938, 711, 0, 0, 0, 0, 0, 711, 0, 0,
	606, 0, 0, 0, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 586, 587, 588, 589, 590, 575, 576,
	577, 578, 560, 561, 0, 0, 563, 0, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 1017, 0, 0, 0, 0, 0, 449,
	0, 452, 0, 0, 0, 0, 0, 466, 467, 468,
	469, 470, 471, 472, 1024, 450, 451, 448, 454, 453,
	463, 464, 456, 457, 458, 459, 460, 461, 462, 455,
	0, 0, 465, 0, 0, 0, 537, 0, 0, 0,
	0, 369, 359, 0, 332, 371, 310, 324, 379, 325,
=======
const yyLast = 9048

var yyAct = [...]int{

	216, 1128, 784, 488, 594, 213, 220, 1056, 707, 972,
	781, 997, 727, 973, 742, 533, 911, 778, 194, 860,
	741, 53, 759, 674, 877, 708, 738, 531, 969, 951,
	829, 74, 866, 287, 914, 164, 487, 3, 164, 684,
	245, 651, 751, 421, 696, 427, 774, 704, 765, 188,
	281, 535, 381, 520, 441, 203, 681, 270, 279, 500,
	269, 218, 164, 164, 74, 52, 1156, 1146, 164, 1154,
	74, 1135, 1152, 433, 785, 1145, 964, 1134, 1044, 683,
	811, 385, 1105, 799, 193, 409, 894, 758, 1068, 268,
	766, 1039, 1082, 189, 190, 191, 192, 798, 402, 207,
	57, 1037, 187, 392, 1153, 1115, 454, 453, 463, 464,
	456, 457, 458, 459, 460, 461, 462, 455, 413, 414,
	465, 1002, 1003, 1004, 803, 59, 60, 61, 62, 63,
	1005, 1151, 1129, 797, 935, 705, 454, 453, 463, 464,
	456, 457, 458, 459, 460, 461, 462, 455, 393, 284,
	465, 728, 730, 388, 1103, 164, 155, 164, 600, 593,
	404, 164, 406, 154, 389, 155, 876, 875, 164, 157,
	158, 159, 74, 74, 74, 74, 874, 74, 74, 753,
	830, 794, 791, 792, 74, 790, 403, 405, 383, 167,
	932, 156, 477, 478, 753, 1120, 934, 1053, 952, 938,
	864, 23, 24, 48, 26, 27, 823, 888, 801, 804,
	74, 766, 623, 445, 397, 1010, 739, 222, 455, 429,
	42, 465, 382, 465, 729, 28, 954, 620, 209, 479,
	480, 481, 482, 483, 484, 485, 430, 1116, 658, 439,
	438, 440, 1019, 796, 37, 438, 968, 401, 50, 1133,
	1104, 1102, 656, 657, 655, 419, 440, 795, 956, 863,
	960, 440, 955, 395, 953, 1011, 546, 1006, 164, 958,
	752, 966, 697, 597, 922, 164, 164, 164, 957, 273,
	892, 74, 800, 959, 961, 752, 74, 933, 622, 931,
	750, 749, 1123, 802, 841, 435, 840, 626, 627, 246,
	47, 431, 920, 842, 697, 50, 847, 30, 31, 33,
	32, 35, 439, 438, 1073, 654, 502, 503, 504, 505,
	506, 507, 508, 1072, 621, 755, 36, 43, 44, 440,
	756, 45, 46, 34, 153, 906, 439, 438, 905, 545,
	439, 438, 895, 439, 438, 38, 39, 47, 40, 41,
	1139, 439, 438, 440, 675, 199, 676, 440, 1085, 1071,
	440, 274, 641, 643, 644, 921, 284, 642, 440, 904,
	926, 923, 916, 917, 924, 919, 918, 456, 457, 458,
	459, 460, 461, 462, 455, 74, 925, 465, 164, 999,
	164, 74, 928, 164, 889, 267, 164, 881, 164, 787,
	74, 74, 74, 74, 74, 74, 74, 74, 49, 820,
	821, 822, 1142, 420, 74, 74, 1093, 1126, 164, 1093,
	420, 1093, 1094, 420, 424, 428, 1065, 1064, 992, 420,
	1108, 607, 677, 74, 591, 475, 399, 164, 1052, 420,
	21, 446, 394, 74, 1016, 1015, 1013, 1012, 628, 835,
	420, 517, 420, 650, 686, 420, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 408, 408, 408, 408, 489, 408, 408, 605, 649,
	553, 552, 498, 408, 382, 1107, 74, 630, 1007, 652,
	970, 542, 273, 861, 862, 941, 198, 645, 861, 47,
	74, 862, 454, 453, 463, 464, 456, 457, 458, 459,
	460, 461, 462, 455, 474, 164, 465, 476, 164, 164,
	164, 164, 164, 709, 686, 1048, 647, 688, 517, 1018,
	164, 648, 543, 164, 541, 1014, 517, 164, 835, 678,
	679, 164, 164, 861, 486, 74, 490, 491, 492, 493,
	494, 495, 496, 74, 499, 501, 501, 501, 501, 501,
	501, 501, 501, 509, 510, 511, 512, 701, 734, 688,
	694, 689, 690, 54, 532, 693, 713, 714, 712, 716,
	23, 715, 724, 761, 762, 763, 764, 733, 732, 700,
	23, 702, 703, 516, 164, 736, 882, 835, 771, 772,
	773, 164, 50, 420, 164, 74, 746, 1088, 780, 544,
	624, 200, 835, 1077, 767, 768, 769, 517, 458, 459,
	460, 461, 462, 455, 760, 244, 465, 50, 779, 986,
	284, 885, 867, 868, 776, 777, 775, 50, 743, 454,
	453, 463, 464, 456, 457, 458, 459, 460, 461, 462,
	455, 770, 65, 465, 595, 782, 72, 649, 50, 1001,
	970, 907, 826, 827, 828, 870, 653, 638, 639, 603,
	812, 417, 813, 463, 464, 456, 457, 458, 459, 460,
	461, 462, 455, 23, 408, 465, 629, 721, 719, 286,
	408, 636, 722, 720, 873, 386, 652, 825, 872, 408,
	408, 408, 408, 408, 408, 408, 408, 855, 1149, 648,
	856, 718, 717, 408, 408, 819, 808, 204, 205, 489,
	1150, 1144, 691, 692, 235, 234, 237, 238, 239, 240,
	50, 937, 74, 236, 241, 273, 273, 273, 273, 273,
	846, 857, 74, 685, 687, 434, 818, 817, 871, 723,
	273, 526, 527, 879, 880, 899, 883, 699, 273, 432,
	422, 551, 834, 522, 525, 526, 527, 523, 400, 524,
	528, 891, 423, 1125, 844, 737, 47, 1124, 1086, 886,
	1046, 1078, 788, 74, 74, 602, 74, 726, 407, 530,
	490, 434, 898, 887, 900, 901, 902, 286, 286, 286,
	286, 1113, 286, 286, 201, 202, 816, 74, 195, 286,
	896, 897, 196, 54, 815, 164, 1112, 274, 274, 274,
	274, 274, 1080, 862, 74, 436, 927, 743, 1117, 1069,
	619, 56, 532, 58, 731, 443, 947, 948, 540, 913,
	274, 51, 1, 786, 910, 793, 1127, 996, 748, 740,
	809, 810, 380, 428, 64, 747, 903, 945, 1101, 74,
	74, 1067, 709, 754, 971, 962, 965, 893, 709, 757,
	1000, 912, 963, 653, 1122, 950, 890, 556, 557, 555,
	559, 944, 980, 74, 979, 74, 74, 981, 558, 554,
	175, 280, 529, 547, 437, 976, 66, 974, 649, 995,
	930, 993, 929, 994, 408, 789, 286, 387, 164, 943,
	473, 548, 814, 285, 977, 836, 74, 625, 426, 1111,
	1079, 845, 497, 1008, 1009, 695, 848, 221, 640, 74,
	164, 233, 230, 832, 232, 231, 74, 833, 631, 74,
	854, 447, 164, 219, 837, 838, 839, 211, 824, 843,
	984, 272, 1030, 513, 849, 521, 850, 851, 852, 853,
	1027, 410, 411, 412, 1020, 415, 416, 519, 743, 1028,
	743, 518, 418, 277, 1035, 1032, 1033, 1022, 1034, 869,
	1025, 1036, 865, 1038, 271, 940, 1043, 74, 1114, 74,
	74, 74, 164, 74, 635, 74, 1058, 1059, 1060, 1055,
	1047, 25, 55, 206, 858, 859, 19, 1061, 18, 883,
	286, 17, 1063, 20, 16, 15, 286, 14, 74, 74,
	74, 1066, 29, 13, 943, 286, 286, 286, 286, 286,
	286, 286, 286, 12, 1076, 1075, 11, 10, 9, 286,
	286, 8, 7, 6, 5, 4, 197, 22, 1083, 2,
	0, 0, 0, 74, 74, 0, 0, 0, 632, 0,
	0, 1070, 1087, 0, 0, 0, 74, 0, 443, 0,
	0, 286, 0, 0, 1098, 1099, 967, 1100, 74, 0,
	743, 0, 1081, 408, 0, 1109, 0, 0, 1089, 974,
	949, 982, 983, 0, 74, 0, 985, 1106, 1118, 987,
	0, 0, 0, 0, 912, 743, 408, 0, 0, 0,
	0, 680, 522, 525, 526, 527, 523, 1131, 524, 528,
	0, 74, 867, 868, 709, 698, 1136, 1119, 0, 974,
	74, 1140, 0, 991, 0, 0, 0, 0, 0, 0,
	0, 0, 710, 1147, 1148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 922, 0, 975, 0, 47, 273,
	0, 1157, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 0, 592, 988, 989, 990, 0, 286, 599,
	0, 0, 920, 0, 0, 0, 0, 0, 608, 609,
	610, 611, 612, 613, 614, 615, 0, 1045, 0, 0,
	1029, 0, 616, 617, 489, 0, 0, 1031, 0, 0,
	0, 275, 0, 0, 0, 0, 0, 0, 1040, 1041,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 1049, 1050, 1051, 0, 1054, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 921, 161, 0, 0, 286,
	926, 923, 916, 917, 924, 919, 918, 0, 0, 0,
	946, 0, 0, 0, 1042, 0, 925, 425, 0, 0,
	0, 0, 915, 0, 278, 0, 0, 0, 0, 384,
	454, 453, 463, 464, 456, 457, 458, 459, 460, 461,
	462, 455, 0, 0, 465, 0, 0, 0, 0, 1084,
	173, 0, 162, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 1096, 1097, 408, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 210, 0, 162,
	162, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 1130, 489, 0, 0, 0, 0, 0, 975, 0,
	0, 1090, 0, 0, 0, 0, 0, 878, 0, 0,
	0, 0, 0, 0, 0, 0, 390, 286, 391, 0,
	1132, 0, 396, 0, 168, 1137, 831, 0, 1110, 398,
	170, 0, 0, 1141, 0, 0, 176, 172, 975, 0,
	47, 0, 0, 807, 0, 0, 454, 453, 463, 464,
	456, 457, 458, 459, 460, 461, 462, 455, 908, 286,
	465, 286, 174, 1159, 1160, 178, 0, 0, 0, 0,
	0, 0, 162, 0, 162, 0, 0, 0, 162, 0,
	0, 0, 286, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 286,
	0, 0, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 177, 179, 180, 181, 182, 0, 0,
	185, 184, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 710, 0, 0, 978, 878, 0, 710, 539, 0,
	286, 0, 453, 463, 464, 456, 457, 458, 459, 460,
	461, 462, 455, 0, 449, 465, 452, 0, 286, 0,
	286, 998, 466, 467, 468, 469, 470, 471, 472, 0,
	450, 451, 448, 454, 453, 463, 464, 456, 457, 458,
	459, 460, 461, 462, 455, 162, 0, 465, 0, 0,
	0, 1021, 162, 537, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1023, 0, 0, 0, 0, 0,
	0, 1026, 0, 0, 286, 0, 0, 0, 0, 0,
	0, 0, 909, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 936, 0, 0, 0, 596,
	0, 598, 0, 0, 601, 0, 0, 604, 0, 0,
	0, 0, 1057, 0, 1057, 1057, 1057, 0, 1062, 0,
	286, 0, 0, 0, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 286, 286, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 162, 0, 162, 0, 0,
	162, 0, 0, 162, 0, 606, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 1092,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1057, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 0, 1121,
	0, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 710, 0, 0, 1138, 0, 0, 0,
	0, 0, 0, 735, 210, 1143, 0, 0, 0, 210,
	210, 0, 0, 210, 0, 0, 0, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 210, 210,
	210, 0, 162, 0, 711, 162, 162, 162, 162, 162,
	0, 0, 0, 0, 0, 574, 0, 725, 0, 0,
	162, 0, 0, 0, 537, 783, 1074, 0, 162, 162,
	0, 0, 805, 0, 0, 806, 579, 580, 581, 582,
	583, 584, 585, 0, 586, 587, 588, 589, 590, 575,
	576, 577, 578, 560, 561, 0, 0, 563, 0, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 0, 100,
	0, 102, 0, 0, 124, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	210, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 453,
	463, 464, 456, 457, 458, 459, 460, 461, 462, 455,
	0, 0, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 116, 0, 0, 127, 95, 94, 0, 0,
	0, 86, 0, 121, 114, 139, 939, 115, 120, 103,
	131, 117, 138, 166, 145, 129, 144, 76, 128, 137,
	85, 122, 78, 135, 126, 107, 97, 98, 77, 0,
	119, 89, 93, 88, 112, 132, 133, 87, 151, 81,
	143, 80, 82, 142, 111, 130, 136, 108, 105, 79,
	134, 106, 104, 99, 91, 0, 0, 0, 125, 140,
	152, 0, 162, 146, 147, 148, 149, 110, 83, 96,
	123, 0, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 0, 75, 0, 101, 150,
	118, 92, 141, 0, 0, 0, 0, 0, 0, 1017,
	0, 0, 0, 711, 0, 0, 0, 0, 0, 711,
	0, 0, 606, 0, 0, 0, 0, 0, 0, 0,
	0, 1024, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 369, 359,
	0, 332, 371, 310, 324, 379, 325, 326, 353, 298,
	340, 113, 322, 0, 313, 293, 319, 294, 311, 334,
	90, 337, 309, 361, 343, 100, 377, 102, 348, 537,
	124, 109, 0, 0, 336, 363, 338, 358, 331, 354,
	303, 347, 372, 323, 351, 373, 0, 0, 0, 73,
	0, 744, 745, 0, 0, 0, 0, 0, 84, 0,
	350, 368, 321, 352, 292, 349, 0, 296, 299, 378,
	366, 316, 317, 884, 0, 0, 0, 0, 0, 0,
	335, 339, 355, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 346, 0, 0, 0, 300, 297,
	0, 333, 0, 0, 0, 302, 0, 315, 356, 0,
	291, 364, 330, 165, 367, 328, 327, 370, 116, 0,
	0, 127, 95, 94, 362, 312, 320, 86, 318, 121,
	114, 139, 345, 115, 120, 103, 131, 117, 138, 166,
	145, 129, 144, 76, 128, 137, 85, 122, 78, 135,
	126, 107, 97, 98, 77, 711, 119, 89, 93, 88,
	112, 132, 133, 87, 151, 81, 143, 80, 82, 142,
	111, 130, 136, 108, 105, 79, 134, 106, 104, 99,
	91, 0, 295, 0, 125, 140, 152, 308, 365, 146,
	147, 148, 149, 110, 83, 96, 123, 306, 307, 304,
	305, 341, 342, 374, 375, 376, 357, 301, 0, 0,
	360, 344, 75, 0, 101, 150, 118, 92, 141, 369,
	359, 0, 332, 371, 310, 324, 379, 325, 326, 353,
	298, 340, 113, 322, 0, 313, 293, 319, 294, 311,
	334, 90, 337, 309, 361, 343, 100, 377, 102, 348,
	0, 124, 109, 0, 0, 336, 363, 338, 358, 331,
	354, 303, 347, 372, 323, 351, 373, 0, 0, 0,
	73, 0, 744, 745, 0, 0, 0, 0, 0, 84,
	0, 350, 368, 321, 352, 292, 349, 0, 296, 299,
	378, 366, 316, 317, 0, 0, 0, 0, 0, 0,
	0, 335, 339, 355, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 346, 0, 0, 0, 300,
	297, 0, 333, 0, 0, 0, 302, 0, 315, 356,
	0, 291, 364, 330, 165, 367, 328, 327, 370, 116,
	0, 0, 127, 95, 94, 362, 312, 320, 86, 318,
	121, 114, 139, 345, 115, 120, 103, 131, 117, 138,
	166, 145, 129, 144, 76, 128, 137, 85, 122, 78,
	135, 126, 107, 97, 98, 77, 0, 119, 89, 93,
	88, 112, 132, 133, 87, 151, 81, 143, 80, 82,
	142, 111, 130, 136, 108, 105, 79, 134, 106, 104,
	99, 91, 0, 295, 0, 125, 140, 152, 308, 365,
	146, 147, 148, 149, 110, 83, 96, 123, 306, 307,
	304, 305, 341, 342, 374, 375, 376, 357, 301, 0,
	0, 360, 344, 75, 0, 101, 150, 118, 92, 141,
	369, 359, 0, 332, 371, 310, 324, 379, 325, 326,
	353, 298, 340, 113, 322, 0, 313, 293, 319, 294,
	311, 334, 90, 337, 309, 361, 343, 100, 377, 102,
	348, 0, 124, 109, 0, 0, 336, 363, 338, 358,
	331, 354, 303, 347, 372, 323, 351, 373, 50, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 350, 368, 321, 352, 292, 349, 0, 296,
	299, 378, 366, 316, 317, 0, 0, 0, 0, 0,
	0, 0, 335, 339, 355, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 346, 0, 0, 0,
	300, 297, 0, 333, 0, 0, 0, 302, 0, 315,
	356, 0, 291, 364, 330, 165, 367, 328, 327, 370,
	116, 0, 0, 127, 95, 94, 362, 312, 320, 86,
	318, 121, 114, 139, 345, 115, 120, 103, 131, 117,
	138, 166, 145, 129, 144, 76, 128, 137, 85, 122,
	78, 135, 126, 107, 97, 98, 77, 0, 119, 89,
	93, 88, 112, 132, 133, 87, 151, 81, 143, 80,
	82, 142, 111, 130, 136, 108, 105, 79, 134, 106,
	104, 99, 91, 0, 295, 0, 125, 140, 152, 308,
	365, 146, 147, 148, 149, 110, 83, 96, 123, 306,
	307, 304, 305, 341, 342, 374, 375, 376, 357, 301,
	0, 0, 360, 344, 75, 0, 101, 150, 118, 92,
	141, 369, 359, 0, 332, 371, 310, 324, 379, 325,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	326, 353, 298, 340, 113, 322, 0, 313, 293, 319,
	294, 311, 334, 90, 337, 309, 361, 343, 100, 377,
	102, 348, 0, 124, 109, 0, 0, 336, 363, 338,
	358, 331, 354, 303, 347, 372, 323, 351, 373, 0,
<<<<<<< HEAD
	0, 0, 73, 0, 744, 745, 0, 0, 0, 0,
=======
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 84, 0, 350, 368, 321, 352, 292, 349, 0,
	296, 299, 378, 366, 316, 317, 884, 0, 0, 0,
	0, 0, 0, 335, 339, 355, 329, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 314, 0, 346, 0, 0,
=======
	0, 0, 0, 942, 0, 314, 0, 346, 0, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 300, 297, 0, 333, 0, 0, 0, 302, 0,
	315, 356, 0, 291, 364, 330, 165, 367, 328, 327,
	370, 116, 0, 711, 127, 95, 94, 362, 312, 320,
	86, 318, 121, 114, 139, 345, 115, 120, 103, 131,
	117, 138, 166, 145, 129, 144, 76, 128, 137, 85,
	122, 78, 135, 126, 107, 97, 98, 77, 0, 119,
	89, 93, 88, 112, 132, 133, 87, 151, 81, 143,
	80, 82, 142, 111, 130, 136, 108, 105, 79, 134,
	106, 104, 99, 91, 0, 295, 0, 125, 140, 152,
	308, 365, 146, 147, 148, 149, 110, 83, 96, 123,
	306, 307, 304, 305, 341, 342, 374, 375, 376, 357,
	301, 0, 0, 360, 344, 75, 0, 101, 150, 118,
	92, 141, 369, 359, 0, 332, 371, 310, 324, 379,
	325, 326, 353, 298, 340, 113, 322, 0, 313, 293,
	319, 294, 311, 334, 90, 337, 309, 361, 343, 100,
	377, 102, 348, 0, 124, 109, 0, 0, 336, 363,
	338, 358, 331, 354, 303, 347, 372, 323, 351, 373,
<<<<<<< HEAD
	0, 0, 0, 73, 0, 744, 745, 0, 0, 0,
=======
	0, 0, 0, 215, 0, 0, 0, 0, 0, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 0, 84, 0, 350, 368, 321, 352, 292, 349,
	0, 296, 299, 378, 366, 316, 317, 0, 0, 0,
	0, 0, 0, 0, 335, 339, 355, 329, 0, 0,
	0, 0, 0, 0, 646, 0, 314, 0, 346, 0,
	0, 0, 300, 297, 0, 333, 0, 0, 0, 302,
	0, 315, 356, 0, 291, 364, 330, 165, 367, 328,
	327, 370, 116, 0, 0, 127, 95, 94, 362, 312,
	320, 86, 318, 121, 114, 139, 345, 115, 120, 103,
	131, 117, 138, 166, 145, 129, 144, 76, 128, 137,
	85, 122, 78, 135, 126, 107, 97, 98, 77, 0,
	119, 89, 93, 88, 112, 132, 133, 87, 151, 81,
	143, 80, 82, 142, 111, 130, 136, 108, 105, 79,
	134, 106, 104, 99, 91, 0, 295, 0, 125, 140,
	152, 308, 365, 146, 147, 148, 149, 110, 83, 96,
	123, 306, 307, 304, 305, 341, 342, 374, 375, 376,
	357, 301, 0, 0, 360, 344, 75, 0, 101, 150,
	118, 92, 141, 369, 359, 0, 332, 371, 310, 324,
	379, 325, 326, 353, 298, 340, 113, 322, 0, 313,
	293, 319, 294, 311, 334, 90, 337, 309, 361, 343,
	100, 377, 102, 348, 0, 124, 109, 0, 0, 336,
	363, 338, 358, 331, 354, 303, 347, 372, 323, 351,
<<<<<<< HEAD
	373, 50, 0, 0, 73, 0, 0, 0, 0, 0,
=======
	373, 0, 0, 0, 73, 0, 0, 0, 0, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 0, 0, 84, 0, 350, 368, 321, 352, 292,
	349, 0, 296, 299, 378, 366, 316, 317, 0, 0,
	0, 0, 0, 0, 0, 335, 339, 355, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 346,
	0, 0, 0, 300, 297, 0, 333, 0, 0, 0,
	302, 0, 315, 356, 0, 291, 364, 330, 165, 367,
	328, 327, 370, 116, 0, 0, 127, 95, 94, 362,
	312, 320, 86, 318, 121, 114, 139, 345, 115, 120,
	103, 131, 117, 138, 166, 145, 129, 144, 76, 128,
	137, 85, 122, 78, 135, 126, 107, 97, 98, 77,
	0, 119, 89, 93, 88, 112, 132, 133, 87, 151,
	81, 143, 80, 82, 142, 111, 130, 136, 108, 105,
	79, 134, 106, 104, 99, 91, 0, 295, 0, 125,
	140, 152, 308, 365, 146, 147, 148, 149, 110, 83,
	96, 123, 306, 307, 304, 305, 341, 342, 374, 375,
	376, 357, 301, 0, 0, 360, 344, 75, 0, 101,
	150, 118, 92, 141, 369, 359, 0, 332, 371, 310,
	324, 379, 325, 326, 353, 298, 340, 113, 322, 0,
	313, 293, 319, 294, 311, 334, 90, 337, 309, 361,
	343, 100, 377, 102, 348, 0, 124, 109, 0, 0,
	336, 363, 338, 358, 331, 354, 303, 347, 372, 323,
	351, 373, 0, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 84, 0, 350, 368, 321, 352,
	292, 349, 0, 296, 299, 378, 366, 316, 317, 0,
	0, 0, 0, 0, 0, 0, 335, 339, 355, 329,
	0, 0, 0, 0, 0, 0, 941, 0, 314, 0,
	346, 0, 0, 0, 300, 297, 0, 333, 0, 0,
	0, 302, 0, 315, 356, 0, 291, 364, 330, 165,
	367, 328, 327, 370, 116, 0, 0, 127, 95, 94,
	362, 312, 320, 86, 318, 121, 114, 139, 345, 115,
	120, 103, 131, 117, 138, 166, 145, 129, 144, 76,
	128, 137, 85, 122, 78, 135, 126, 107, 97, 98,
	77, 0, 119, 89, 93, 88, 112, 132, 133, 87,
	151, 81, 143, 80, 82, 142, 111, 130, 136, 108,
	105, 79, 134, 106, 104, 99, 91, 0, 295, 0,
	125, 140, 152, 308, 365, 146, 147, 148, 149, 110,
	83, 96, 123, 306, 307, 304, 305, 341, 342, 374,
	375, 376, 357, 301, 0, 0, 360, 344, 75, 0,
	101, 150, 118, 92, 141, 369, 359, 0, 332, 371,
	310, 324, 379, 325, 326, 353, 298, 340, 113, 322,
	0, 313, 293, 319, 294, 311, 334, 90, 337, 309,
	361, 343, 100, 377, 102, 348, 0, 124, 109, 0,
	0, 336, 363, 338, 358, 331, 354, 303, 347, 372,
<<<<<<< HEAD
	323, 351, 373, 0, 0, 0, 215, 0, 0, 0,
=======
	323, 351, 373, 0, 0, 0, 73, 0, 0, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 0, 0, 0, 0, 84, 0, 350, 368, 321,
	352, 292, 349, 0, 296, 299, 378, 366, 316, 317,
	0, 0, 0, 0, 0, 0, 0, 335, 339, 355,
	329, 0, 0, 0, 0, 0, 0, 646, 0, 314,
	0, 346, 0, 0, 0, 300, 297, 0, 333, 0,
	0, 0, 302, 0, 315, 356, 0, 291, 364, 330,
	165, 367, 328, 327, 370, 116, 0, 0, 127, 95,
	94, 362, 312, 320, 86, 318, 121, 114, 139, 345,
	115, 120, 103, 131, 117, 138, 166, 145, 129, 144,
	76, 128, 137, 85, 122, 78, 135, 126, 107, 97,
	98, 77, 0, 119, 89, 93, 88, 112, 132, 133,
	87, 151, 81, 143, 80, 289, 142, 111, 130, 136,
	108, 105, 79, 134, 106, 104, 99, 91, 0, 295,
	0, 125, 140, 152, 308, 365, 146, 147, 148, 149,
	290, 288, 96, 123, 306, 307, 304, 305, 341, 342,
	374, 375, 376, 357, 301, 0, 0, 360, 344, 75,
	0, 101, 150, 118, 92, 141, 369, 359, 0, 332,
	371, 310, 324, 379, 325, 326, 353, 298, 340, 113,
	322, 0, 313, 293, 319, 294, 311, 334, 90, 337,
	309, 361, 343, 100, 377, 102, 348, 0, 124, 109,
	0, 0, 336, 363, 338, 358, 331, 354, 303, 347,
	372, 323, 351, 373, 0, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 350, 368,
	321, 352, 292, 349, 0, 296, 299, 378, 366, 316,
	317, 0, 0, 0, 0, 0, 0, 0, 335, 339,
	355, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 346, 0, 0, 0, 300, 297, 0, 333,
	0, 0, 0, 302, 0, 315, 356, 0, 291, 364,
	330, 165, 367, 328, 327, 370, 116, 0, 0, 127,
	95, 94, 362, 312, 320, 86, 318, 121, 114, 139,
	345, 115, 120, 103, 131, 117, 138, 166, 145, 129,
	144, 76, 128, 137, 85, 122, 78, 135, 126, 107,
	97, 98, 77, 0, 119, 89, 93, 88, 112, 132,
	133, 87, 151, 81, 143, 80, 82, 142, 111, 130,
	136, 108, 105, 79, 134, 106, 104, 99, 91, 0,
	295, 0, 125, 140, 152, 308, 365, 146, 147, 148,
	149, 110, 83, 96, 123, 306, 307, 304, 305, 341,
	342, 374, 375, 376, 357, 301, 0, 0, 360, 344,
	75, 0, 101, 150, 118, 92, 141, 369, 359, 0,
	332, 371, 310, 324, 379, 325, 326, 353, 298, 340,
	113, 322, 0, 313, 293, 319, 294, 311, 334, 90,
	337, 309, 361, 343, 100, 377, 102, 348, 0, 124,
	109, 0, 0, 336, 363, 338, 358, 331, 354, 303,
<<<<<<< HEAD
	347, 372, 323, 351, 373, 0, 0, 0, 215, 0,
=======
	347, 372, 323, 351, 373, 0, 0, 0, 73, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 0, 0, 0, 0, 0, 0, 84, 0, 350,
	368, 321, 352, 292, 349, 0, 296, 299, 378, 366,
	316, 317, 0, 0, 0, 0, 0, 0, 0, 335,
	339, 355, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 346, 0, 0, 0, 300, 297, 0,
	333, 0, 0, 0, 302, 0, 315, 356, 0, 291,
	364, 330, 165, 367, 328, 327, 370, 116, 0, 0,
	127, 95, 94, 362, 312, 320, 86, 318, 121, 114,
	139, 345, 115, 120, 103, 131, 117, 138, 166, 145,
	129, 144, 76, 128, 137, 85, 122, 78, 135, 126,
	107, 97, 98, 77, 0, 119, 89, 93, 88, 112,
<<<<<<< HEAD
	132, 133, 87, 151, 81, 143, 80, 82, 142, 111,
	130, 136, 108, 105, 79, 134, 106, 104, 99, 91,
	0, 295, 0, 125, 140, 152, 308, 365, 146, 147,
	148, 149, 110, 83, 96, 123, 306, 307, 304, 305,
	341, 342, 374, 375, 376, 357, 301, 0, 0, 360,
	344, 75, 0, 101, 150, 118, 92, 141, 369, 359,
	0, 332, 371, 310, 324, 379, 325, 326, 353, 298,
	340, 113, 322, 0, 313, 293, 319, 294, 311, 334,
	90, 337, 309, 361, 343, 100, 377, 102, 348, 0,
	124, 109, 0, 0, 336, 363, 338, 358, 331, 354,
	303, 347, 372, 323, 351, 373, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	350, 368, 321, 352, 292, 349, 0, 296, 299, 378,
	366, 316, 317, 0, 0, 0, 0, 0, 0, 0,
	335, 339, 355, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 346, 0, 0, 0, 300, 297,
	0, 333, 0, 0, 0, 302, 0, 315, 356, 0,
	291, 364, 330, 165, 367, 328, 327, 370, 116, 0,
	0, 127, 95, 94, 362, 312, 320, 86, 318, 121,
	114, 139, 345, 115, 120, 103, 131, 117, 138, 166,
	145, 129, 144, 76, 128, 137, 85, 122, 78, 135,
	126, 107, 97, 98, 77, 0, 119, 89, 93, 88,
	112, 132, 133, 87, 151, 81, 143, 80, 289, 142,
	111, 130, 136, 108, 105, 79, 134, 106, 104, 99,
	91, 0, 295, 0, 125, 140, 152, 308, 365, 146,
	147, 148, 149, 290, 288, 96, 123, 306, 307, 304,
	305, 341, 342, 374, 375, 376, 357, 301, 0, 0,
	360, 344, 75, 0, 101, 150, 118, 92, 141, 369,
	359, 0, 332, 371, 310, 324, 379, 325, 326, 353,
	298, 340, 113, 322, 0, 313, 293, 319, 294, 311,
	334, 90, 337, 309, 361, 343, 100, 377, 102, 348,
	0, 124, 109, 0, 0, 336, 363, 338, 358, 331,
	354, 303, 347, 372, 323, 351, 373, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 350, 368, 321, 352, 292, 349, 0, 296, 299,
	378, 366, 316, 317, 0, 0, 0, 0, 0, 0,
	0, 335, 339, 355, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 346, 0, 0, 0, 300,
	297, 0, 333, 0, 0, 0, 302, 0, 315, 356,
	0, 291, 364, 330, 165, 367, 328, 327, 370, 116,
	0, 0, 127, 95, 94, 362, 312, 320, 86, 318,
	121, 114, 139, 345, 115, 120, 103, 131, 117, 138,
	166, 145, 129, 144, 76, 128, 137, 85, 122, 78,
	135, 126, 107, 97, 98, 77, 0, 119, 89, 93,
	88, 112, 132, 133, 87, 151, 81, 143, 80, 82,
	142, 111, 130, 136, 108, 105, 79, 134, 106, 104,
	99, 91, 0, 295, 0, 125, 140, 152, 308, 365,
	146, 147, 148, 149, 110, 83, 96, 123, 306, 307,
	304, 305, 341, 342, 374, 375, 376, 357, 301, 0,
	0, 360, 344, 75, 0, 101, 150, 118, 92, 141,
	369, 359, 0, 332, 371, 310, 324, 379, 325, 326,
	353, 298, 340, 113, 322, 0, 313, 293, 319, 294,
	311, 334, 90, 337, 309, 361, 343, 100, 377, 102,
	348, 0, 124, 109, 0, 0, 336, 363, 338, 358,
	331, 354, 303, 347, 372, 323, 351, 373, 0, 0,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 350, 368, 321, 352, 292, 349, 0, 296,
	299, 378, 366, 316, 317, 0, 0, 0, 0, 0,
	0, 0, 335, 339, 355, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 346, 0, 0, 0,
	300, 297, 0, 333, 0, 0, 0, 302, 0, 315,
	356, 0, 291, 364, 330, 165, 367, 328, 327, 370,
	116, 0, 0, 127, 95, 94, 362, 312, 320, 86,
	318, 121, 114, 139, 345, 115, 120, 103, 131, 117,
	138, 166, 145, 129, 144, 76, 128, 137, 85, 122,
	78, 135, 126, 107, 97, 98, 77, 0, 119, 89,
	93, 88, 112, 132, 133, 87, 151, 81, 143, 80,
	289, 142, 111, 130, 136, 108, 105, 79, 134, 106,
	104, 99, 91, 0, 295, 0, 125, 140, 152, 308,
	365, 146, 147, 148, 149, 290, 288, 283, 282, 306,
	307, 304, 305, 341, 342, 374, 375, 376, 357, 301,
	0, 0, 360, 344, 75, 0, 101, 150, 118, 92,
	141, 113, 0, 0, 682, 0, 217, 0, 0, 0,
	90, 0, 214, 0, 0, 100, 254, 102, 0, 0,
	124, 109, 0, 0, 0, 0, 247, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 215,
	235, 234, 237, 238, 239, 240, 0, 0, 84, 236,
	241, 242, 243, 0, 0, 212, 228, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 226,
	208, 0, 0, 0, 265, 0, 227, 0, 0, 223,
	224, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 263, 0, 116, 0,
	0, 127, 95, 94, 0, 0, 0, 86, 0, 121,
	114, 139, 0, 115, 120, 103, 131, 117, 138, 166,
	145, 129, 144, 76, 128, 137, 85, 122, 78, 135,
	126, 107, 97, 98, 77, 0, 119, 89, 93, 88,
	112, 132, 133, 87, 151, 81, 143, 80, 82, 142,
	111, 130, 136, 108, 105, 79, 134, 106, 104, 99,
	91, 0, 0, 0, 125, 140, 152, 0, 0, 146,
	147, 148, 149, 110, 83, 96, 123, 255, 264, 261,
	262, 259, 260, 258, 257, 256, 266, 249, 250, 252,
	0, 251, 75, 0, 101, 150, 118, 92, 141, 113,
	0, 0, 0, 0, 217, 0, 0, 0, 90, 0,
	214, 0, 0, 100, 254, 102, 0, 0, 124, 109,
	0, 0, 0, 0, 247, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 50, 0, 420, 215, 235, 234,
	237, 238, 239, 240, 0, 0, 84, 236, 241, 242,
	243, 0, 0, 212, 228, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 226, 0, 0,
	0, 0, 265, 0, 227, 0, 0, 223, 224, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 263, 0, 116, 0, 0, 127,
	95, 94, 0, 0, 0, 86, 0, 121, 114, 139,
	0, 115, 120, 103, 131, 117, 138, 166, 145, 129,
	144, 76, 128, 137, 85, 122, 78, 135, 126, 107,
	97, 98, 77, 0, 119, 89, 93, 88, 112, 132,
	133, 87, 151, 81, 143, 80, 82, 142, 111, 130,
	136, 108, 105, 79, 134, 106, 104, 99, 91, 0,
	0, 0, 125, 140, 152, 0, 0, 146, 147, 148,
	149, 110, 83, 96, 123, 255, 264, 261, 262, 259,
	260, 258, 257, 256, 266, 249, 250, 252, 0, 251,
	75, 0, 101, 150, 118, 92, 141, 113, 0, 0,
	0, 0, 217, 0, 0, 0, 90, 0, 214, 0,
	0, 100, 254, 102, 0, 0, 124, 109, 0, 0,
	0, 0, 247, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 50, 0, 0, 215, 235, 234, 237, 238,
	239, 240, 0, 0, 84, 236, 241, 242, 243, 0,
	0, 212, 228, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 226, 208, 0, 0, 0,
	265, 0, 227, 0, 0, 223, 224, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 263, 0, 116, 0, 0, 127, 95, 94,
	0, 0, 0, 86, 0, 121, 114, 139, 0, 115,
	120, 103, 131, 117, 138, 166, 145, 129, 144, 76,
	128, 137, 85, 122, 78, 135, 126, 107, 97, 98,
	77, 0, 119, 89, 93, 88, 112, 132, 133, 87,
	151, 81, 143, 80, 82, 142, 111, 130, 136, 108,
	105, 79, 134, 106, 104, 99, 91, 0, 0, 0,
	125, 140, 152, 0, 0, 146, 147, 148, 149, 110,
	83, 96, 123, 255, 264, 261, 262, 259, 260, 258,
	257, 256, 266, 249, 250, 252, 23, 251, 75, 0,
	101, 150, 118, 92, 141, 0, 0, 0, 113, 0,
	0, 0, 0, 217, 0, 0, 0, 90, 0, 214,
	0, 0, 100, 254, 102, 0, 0, 124, 109, 0,
	0, 0, 0, 247, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 215, 235, 234, 237,
	238, 239, 240, 0, 0, 84, 236, 241, 242, 243,
	0, 0, 212, 228, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 226, 0, 0, 0,
=======
	132, 133, 87, 151, 81, 143, 80, 289, 142, 111,
	130, 136, 108, 105, 79, 134, 106, 104, 99, 91,
	0, 295, 0, 125, 140, 152, 308, 365, 146, 147,
	148, 149, 290, 288, 283, 282, 306, 307, 304, 305,
	341, 342, 374, 375, 376, 357, 301, 0, 0, 360,
	344, 75, 0, 101, 150, 118, 92, 141, 113, 0,
	0, 682, 0, 217, 0, 0, 0, 90, 0, 214,
	0, 0, 100, 254, 102, 0, 0, 124, 109, 0,
	0, 0, 0, 247, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 50, 0, 0, 215, 235, 234, 237,
	238, 239, 240, 0, 0, 84, 236, 241, 242, 243,
	0, 0, 212, 228, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 226, 208, 0, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 265, 0, 227, 0, 0, 223, 224, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 263, 0, 116, 0, 0, 127, 95,
	94, 0, 0, 0, 86, 0, 121, 114, 139, 0,
	115, 120, 103, 131, 117, 138, 166, 145, 129, 144,
	76, 128, 137, 85, 122, 78, 135, 126, 107, 97,
	98, 77, 0, 119, 89, 93, 88, 112, 132, 133,
	87, 151, 81, 143, 80, 82, 142, 111, 130, 136,
	108, 105, 79, 134, 106, 104, 99, 91, 0, 0,
	0, 125, 140, 152, 0, 0, 146, 147, 148, 149,
	110, 83, 96, 123, 255, 264, 261, 262, 259, 260,
	258, 257, 256, 266, 249, 250, 252, 0, 251, 75,
	0, 101, 150, 118, 92, 141, 113, 0, 0, 0,
	0, 217, 0, 0, 0, 90, 0, 214, 0, 0,
	100, 254, 102, 0, 0, 124, 109, 0, 0, 0,
	0, 247, 248, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 50, 0, 0, 215, 235, 234, 237, 238, 239,
=======
	0, 50, 0, 420, 215, 235, 234, 237, 238, 239,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	240, 0, 0, 84, 236, 241, 242, 243, 0, 0,
	212, 228, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 226, 0, 0, 0, 0, 265,
	0, 227, 0, 0, 223, 224, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 263, 0, 116, 0, 0, 127, 95, 94, 0,
	0, 0, 86, 0, 121, 114, 139, 0, 115, 120,
	103, 131, 117, 138, 166, 145, 129, 144, 76, 128,
	137, 85, 122, 78, 135, 126, 107, 97, 98, 77,
	0, 119, 89, 93, 88, 112, 132, 133, 87, 151,
	81, 143, 80, 82, 142, 111, 130, 136, 108, 105,
	79, 134, 106, 104, 99, 91, 0, 0, 0, 125,
	140, 152, 0, 0, 146, 147, 148, 149, 110, 83,
	96, 123, 255, 264, 261, 262, 259, 260, 258, 257,
<<<<<<< HEAD
	256, 266, 249, 250, 252, 113, 251, 75, 0, 101,
	150, 118, 92, 141, 90, 0, 0, 0, 0, 100,
	254, 102, 0, 0, 124, 109, 0, 0, 0, 0,
	247, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 215, 235, 234, 237, 238, 239, 240,
	0, 0, 84, 236, 241, 242, 243, 0, 0, 0,
=======
	256, 266, 249, 250, 252, 0, 251, 75, 0, 101,
	150, 118, 92, 141, 113, 0, 0, 0, 0, 217,
	0, 0, 0, 90, 0, 214, 0, 0, 100, 254,
	102, 0, 0, 124, 109, 0, 0, 0, 0, 247,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 50,
	0, 0, 215, 235, 234, 237, 238, 239, 240, 0,
	0, 84, 236, 241, 242, 243, 0, 0, 212, 228,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 226, 208, 0, 0, 0, 265, 0, 227,
	0, 0, 223, 224, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 263,
	0, 116, 0, 0, 127, 95, 94, 0, 0, 0,
	86, 0, 121, 114, 139, 0, 115, 120, 103, 131,
	117, 138, 166, 145, 129, 144, 76, 128, 137, 85,
	122, 78, 135, 126, 107, 97, 98, 77, 0, 119,
	89, 93, 88, 112, 132, 133, 87, 151, 81, 143,
	80, 82, 142, 111, 130, 136, 108, 105, 79, 134,
	106, 104, 99, 91, 0, 0, 0, 125, 140, 152,
	0, 0, 146, 147, 148, 149, 110, 83, 96, 123,
	255, 264, 261, 262, 259, 260, 258, 257, 256, 266,
	249, 250, 252, 23, 251, 75, 0, 101, 150, 118,
	92, 141, 0, 0, 0, 113, 0, 0, 0, 0,
	217, 0, 0, 0, 90, 0, 214, 0, 0, 100,
	254, 102, 0, 0, 124, 109, 0, 0, 0, 0,
	247, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 215, 235, 234, 237, 238, 239, 240,
	0, 0, 84, 236, 241, 242, 243, 0, 0, 212,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	228, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 226, 0, 0, 0, 0, 265, 0,
	227, 0, 0, 223, 224, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	263, 0, 116, 0, 0, 127, 95, 94, 0, 0,
	0, 86, 0, 121, 114, 139, 0, 115, 120, 103,
	131, 117, 138, 166, 145, 129, 144, 76, 128, 137,
	85, 122, 78, 135, 126, 107, 97, 98, 77, 0,
	119, 89, 93, 88, 112, 132, 133, 87, 151, 81,
	143, 80, 82, 142, 111, 130, 136, 108, 105, 79,
	134, 106, 104, 99, 91, 0, 0, 0, 125, 140,
	152, 0, 0, 146, 147, 148, 149, 110, 83, 96,
	123, 255, 264, 261, 262, 259, 260, 258, 257, 256,
	266, 249, 250, 252, 113, 251, 75, 0, 101, 150,
	118, 92, 141, 90, 0, 0, 0, 0, 100, 0,
	102, 0, 0, 124, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 454, 453, 463,
	464, 456, 457, 458, 459, 460, 461, 462, 455, 0,
	0, 465, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 116, 0, 0, 127, 95, 94, 0, 0, 0,
	86, 0, 121, 114, 139, 0, 115, 120, 103, 131,
	117, 138, 166, 145, 129, 144, 76, 128, 137, 85,
	122, 78, 135, 126, 107, 97, 98, 77, 0, 119,
	89, 93, 88, 112, 132, 133, 87, 151, 81, 143,
	80, 82, 142, 111, 130, 136, 108, 105, 79, 134,
	106, 104, 99, 91, 0, 0, 0, 125, 140, 152,
	0, 0, 146, 147, 148, 149, 110, 83, 96, 123,
=======
	225, 226, 0, 0, 0, 0, 265, 0, 227, 0,
	0, 223, 224, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 263, 0,
	116, 0, 0, 127, 95, 94, 0, 0, 0, 86,
	0, 121, 114, 139, 0, 115, 120, 103, 131, 117,
	138, 166, 145, 129, 144, 76, 128, 137, 85, 122,
	78, 135, 126, 107, 97, 98, 77, 0, 119, 89,
	93, 88, 112, 132, 133, 87, 151, 81, 143, 80,
	82, 142, 111, 130, 136, 108, 105, 79, 134, 106,
	104, 99, 91, 0, 0, 0, 125, 140, 152, 0,
	0, 146, 147, 148, 149, 110, 83, 96, 123, 255,
	264, 261, 262, 259, 260, 258, 257, 256, 266, 249,
	250, 252, 113, 251, 75, 0, 101, 150, 118, 92,
	141, 90, 0, 0, 0, 0, 100, 254, 102, 0,
	0, 124, 109, 0, 0, 0, 0, 247, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 50, 0, 0,
	215, 235, 234, 237, 238, 239, 240, 0, 0, 84,
	236, 241, 242, 243, 0, 0, 0, 228, 0, 253,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 75, 0, 101, 150, 118,
	92, 141, 113, 0, 0, 0, 442, 0, 0, 0,
	0, 90, 0, 0, 0, 0, 100, 0, 102, 0,
	0, 124, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 444, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 439, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 116,
	0, 0, 127, 95, 94, 0, 0, 0, 86, 0,
	121, 114, 139, 1158, 115, 120, 103, 131, 117, 138,
	166, 145, 129, 144, 76, 128, 137, 85, 122, 78,
	135, 126, 107, 97, 98, 77, 0, 119, 89, 93,
	88, 112, 132, 133, 87, 151, 81, 143, 80, 82,
	142, 111, 130, 136, 108, 105, 79, 134, 106, 104,
<<<<<<< HEAD
	99, 91, 0, 0, 0, 125, 140, 152, 0, 113,
	146, 147, 148, 149, 110, 83, 96, 123, 90, 0,
	0, 0, 0, 100, 0, 102, 0, 0, 124, 109,
	0, 0, 0, 75, 0, 101, 150, 118, 92, 141,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	99, 91, 0, 0, 0, 125, 140, 152, 0, 0,
	146, 147, 148, 149, 110, 83, 96, 123, 255, 264,
	261, 262, 259, 260, 258, 257, 256, 266, 249, 250,
	252, 113, 251, 75, 0, 101, 150, 118, 92, 141,
	90, 0, 0, 0, 0, 100, 254, 102, 0, 0,
	124, 109, 0, 0, 0, 0, 247, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 50, 0, 0, 215,
	235, 234, 237, 238, 239, 240, 0, 0, 84, 236,
	241, 242, 243, 0, 0, 0, 228, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 226,
	0, 0, 0, 0, 265, 0, 227, 0, 0, 223,
	224, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 263, 0, 116, 0,
	0, 127, 95, 94, 0, 0, 0, 86, 0, 121,
	114, 139, 0, 115, 120, 103, 131, 117, 138, 166,
	145, 129, 144, 76, 128, 137, 85, 122, 78, 135,
	126, 107, 97, 98, 77, 0, 119, 89, 93, 88,
	112, 132, 133, 87, 151, 81, 143, 80, 82, 142,
	111, 130, 136, 108, 105, 79, 134, 106, 104, 99,
	91, 0, 0, 0, 125, 140, 152, 0, 0, 146,
	147, 148, 149, 110, 83, 96, 123, 255, 264, 261,
	262, 259, 260, 258, 257, 256, 266, 249, 250, 252,
	0, 251, 75, 0, 101, 150, 118, 92, 141, 113,
	0, 0, 0, 442, 0, 0, 0, 0, 90, 0,
	0, 0, 0, 100, 0, 102, 0, 0, 124, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 444,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 439, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 440, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 70,
	0, 67, 0, 0, 0, 71, 116, 0, 0, 127,
	95, 94, 0, 0, 0, 86, 0, 121, 114, 139,
	0, 115, 120, 103, 131, 117, 138, 69, 145, 129,
	144, 76, 128, 137, 85, 122, 78, 135, 126, 107,
	97, 98, 77, 0, 119, 89, 93, 88, 112, 132,
	133, 87, 151, 81, 143, 80, 82, 142, 111, 130,
	136, 108, 105, 79, 134, 106, 104, 99, 91, 0,
	0, 0, 125, 140, 152, 0, 0, 146, 147, 148,
	149, 110, 83, 96, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 101, 150, 118, 92, 141, 113, 0, 0,
	0, 536, 0, 0, 0, 0, 90, 0, 0, 0,
	0, 100, 0, 102, 0, 0, 124, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 538, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 116, 0, 0, 127, 95, 94,
	0, 0, 0, 86, 0, 121, 114, 139, 0, 115,
	120, 103, 131, 117, 138, 166, 145, 129, 144, 76,
	128, 137, 85, 122, 78, 135, 126, 107, 97, 98,
	77, 0, 119, 89, 93, 88, 112, 132, 133, 87,
	151, 81, 143, 80, 82, 142, 111, 130, 136, 108,
	105, 79, 134, 106, 104, 99, 91, 0, 0, 0,
	125, 140, 152, 0, 0, 146, 147, 148, 149, 110,
	83, 96, 123, 0, 23, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 75, 0,
	101, 150, 118, 92, 141, 90, 0, 0, 0, 0,
	100, 0, 102, 0, 0, 124, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 116, 0, 0, 127, 95, 94, 0,
	0, 0, 86, 0, 121, 114, 139, 0, 115, 120,
	103, 131, 117, 138, 166, 145, 129, 144, 76, 128,
	137, 85, 122, 78, 135, 126, 107, 97, 98, 77,
	0, 119, 89, 93, 88, 112, 132, 133, 87, 151,
	81, 143, 80, 82, 142, 111, 130, 136, 108, 105,
	79, 134, 106, 104, 99, 91, 0, 0, 0, 125,
	140, 152, 0, 0, 146, 147, 148, 149, 110, 83,
	96, 123, 0, 23, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 0, 75, 0, 101,
	150, 118, 92, 141, 90, 0, 0, 0, 0, 100,
	0, 102, 0, 0, 124, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	50, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 116, 0, 0, 127, 95, 94, 0, 0,
	0, 86, 0, 121, 114, 139, 0, 115, 120, 103,
	131, 117, 138, 166, 145, 129, 144, 76, 128, 137,
	85, 122, 78, 135, 126, 107, 97, 98, 77, 0,
	119, 89, 93, 88, 112, 132, 133, 87, 151, 81,
	143, 80, 82, 142, 111, 130, 136, 108, 105, 79,
	134, 106, 104, 99, 91, 0, 0, 0, 125, 140,
	152, 0, 113, 146, 147, 148, 149, 110, 83, 96,
	123, 90, 0, 0, 0, 0, 100, 0, 102, 0,
	0, 124, 109, 0, 0, 0, 75, 0, 101, 150,
	118, 92, 141, 0, 0, 0, 0, 0, 0, 0,
	73, 0, 0, 633, 0, 0, 634, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 116,
	0, 0, 127, 95, 94, 0, 0, 0, 86, 0,
	121, 114, 139, 0, 115, 120, 103, 131, 117, 138,
	166, 145, 129, 144, 76, 128, 137, 85, 122, 78,
	135, 126, 107, 97, 98, 77, 0, 119, 89, 93,
	88, 112, 132, 133, 87, 151, 81, 143, 80, 82,
	142, 111, 130, 136, 108, 105, 79, 134, 106, 104,
	99, 91, 0, 0, 0, 125, 140, 152, 0, 113,
	146, 147, 148, 149, 110, 83, 96, 123, 90, 0,
	550, 0, 0, 100, 0, 102, 0, 0, 124, 109,
	0, 0, 0, 75, 0, 101, 150, 118, 92, 141,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 549,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 116, 0, 0, 127,
	95, 94, 0, 0, 0, 86, 0, 121, 114, 139,
	0, 115, 120, 103, 131, 117, 138, 166, 145, 129,
	144, 76, 128, 137, 85, 122, 78, 135, 126, 107,
	97, 98, 77, 0, 119, 89, 93, 88, 112, 132,
	133, 87, 151, 81, 143, 80, 82, 142, 111, 130,
	136, 108, 105, 79, 134, 106, 104, 99, 91, 0,
	0, 0, 125, 140, 152, 0, 0, 146, 147, 148,
	149, 110, 83, 96, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	75, 0, 101, 150, 118, 92, 141, 113, 0, 0,
	0, 536, 0, 0, 0, 0, 90, 0, 0, 0,
	0, 100, 0, 102, 0, 0, 124, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 163, 0, 538, 0, 0,
	0, 0, 0, 0, 84, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 116, 0, 0, 127, 95, 94,
	0, 0, 0, 86, 0, 121, 114, 139, 0, 534,
	120, 103, 131, 117, 138, 166, 145, 129, 144, 76,
	128, 137, 85, 122, 78, 135, 126, 107, 97, 98,
	77, 0, 119, 89, 93, 88, 112, 132, 133, 87,
	151, 81, 143, 80, 82, 142, 111, 130, 136, 108,
	105, 79, 134, 106, 104, 99, 91, 0, 0, 0,
	125, 140, 152, 0, 113, 146, 147, 148, 149, 110,
	83, 96, 123, 90, 0, 0, 0, 0, 100, 0,
	102, 0, 0, 124, 109, 0, 0, 0, 75, 0,
	101, 150, 118, 92, 141, 0, 0, 0, 0, 50,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 116, 0, 0, 127, 95, 94, 0, 0, 0,
	86, 0, 121, 114, 139, 0, 115, 120, 103, 131,
	117, 138, 166, 145, 129, 144, 76, 128, 137, 85,
	122, 78, 135, 126, 107, 97, 98, 77, 0, 119,
	89, 93, 88, 112, 132, 133, 87, 151, 81, 143,
	80, 82, 142, 111, 130, 136, 108, 105, 79, 134,
	106, 104, 99, 91, 0, 0, 0, 125, 140, 152,
	0, 113, 146, 147, 148, 149, 110, 83, 96, 123,
	90, 0, 0, 0, 0, 100, 0, 102, 0, 0,
	124, 109, 0, 0, 0, 75, 0, 101, 150, 118,
	92, 141, 0, 0, 0, 0, 0, 0, 0, 163,
	0, 538, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 116, 0,
	0, 127, 95, 94, 0, 0, 0, 86, 0, 121,
	114, 139, 0, 115, 120, 103, 131, 117, 138, 166,
	145, 129, 144, 76, 128, 137, 85, 122, 78, 135,
	126, 107, 97, 98, 77, 0, 119, 89, 93, 88,
	112, 132, 133, 87, 151, 81, 143, 80, 82, 142,
	111, 130, 136, 108, 105, 79, 134, 106, 104, 99,
	91, 0, 0, 0, 125, 140, 152, 0, 113, 146,
	147, 148, 149, 110, 83, 96, 123, 90, 0, 0,
	0, 0, 100, 0, 102, 0, 0, 124, 109, 0,
	0, 0, 75, 0, 101, 150, 118, 92, 141, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 444, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 116, 0, 0, 127, 95,
	94, 0, 0, 0, 86, 0, 121, 114, 139, 0,
	115, 120, 103, 131, 117, 138, 166, 145, 129, 144,
	76, 128, 137, 85, 122, 78, 135, 126, 107, 97,
	98, 77, 0, 119, 89, 93, 88, 112, 132, 133,
	87, 151, 81, 143, 80, 82, 142, 111, 130, 136,
	108, 105, 79, 134, 106, 104, 99, 91, 0, 0,
	0, 125, 140, 152, 0, 0, 146, 147, 148, 149,
	110, 83, 96, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 75,
	0, 101, 150, 118, 92, 141, 514, 90, 0, 0,
	0, 0, 100, 0, 102, 0, 0, 124, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 116, 0, 0, 127, 95,
	94, 0, 0, 0, 86, 0, 121, 114, 139, 0,
	115, 120, 103, 131, 117, 138, 166, 145, 129, 144,
	76, 128, 137, 85, 122, 78, 135, 126, 107, 97,
	98, 77, 0, 119, 89, 93, 88, 112, 132, 133,
	87, 151, 81, 143, 80, 82, 142, 111, 130, 136,
	108, 105, 79, 134, 106, 104, 99, 91, 276, 0,
	0, 125, 140, 152, 0, 113, 146, 147, 148, 149,
	110, 83, 96, 123, 90, 0, 0, 0, 0, 100,
	0, 102, 0, 0, 124, 109, 0, 0, 0, 75,
	0, 101, 150, 118, 92, 141, 0, 0, 0, 0,
	0, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 116, 0, 0, 127, 95, 94, 0, 0,
	0, 86, 0, 121, 114, 139, 0, 115, 120, 103,
	131, 117, 138, 166, 145, 129, 144, 76, 128, 137,
	85, 122, 78, 135, 126, 107, 97, 98, 77, 0,
	119, 89, 93, 88, 112, 132, 133, 87, 151, 81,
	143, 80, 82, 142, 111, 130, 136, 108, 105, 79,
	134, 106, 104, 99, 91, 0, 0, 0, 125, 140,
	152, 0, 113, 146, 147, 148, 149, 110, 83, 96,
	123, 90, 0, 0, 0, 0, 100, 0, 102, 0,
	0, 124, 109, 0, 0, 0, 75, 0, 101, 150,
	118, 92, 141, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 165, 0, 0, 0, 0, 116,
	0, 0, 127, 95, 94, 0, 0, 0, 86, 0,
	121, 114, 139, 0, 115, 120, 103, 131, 117, 138,
	166, 145, 129, 144, 76, 128, 137, 85, 122, 78,
	135, 126, 107, 97, 98, 77, 0, 119, 89, 93,
	88, 112, 132, 133, 87, 151, 81, 143, 80, 82,
	142, 111, 130, 136, 108, 105, 79, 134, 106, 104,
	99, 91, 0, 0, 0, 125, 140, 152, 0, 113,
	146, 147, 148, 149, 110, 83, 96, 123, 90, 0,
	0, 0, 0, 100, 0, 102, 0, 0, 124, 109,
	0, 0, 0, 75, 0, 101, 150, 118, 92, 141,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 116, 0, 0, 127,
	95, 94, 0, 0, 0, 86, 0, 121, 114, 139,
	0, 115, 120, 103, 131, 117, 138, 166, 145, 129,
	144, 76, 128, 137, 85, 122, 78, 135, 126, 107,
	97, 98, 77, 0, 119, 89, 93, 88, 112, 132,
	133, 87, 151, 81, 143, 80, 82, 142, 111, 130,
	136, 108, 105, 79, 134, 106, 104, 99, 91, 0,
	0, 0, 125, 140, 152, 0, 113, 146, 147, 148,
	149, 110, 83, 96, 123, 90, 0, 0, 0, 0,
	100, 0, 102, 0, 0, 124, 109, 0, 0, 0,
	75, 0, 101, 150, 118, 92, 141, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 116, 0, 0, 127, 95, 94, 0,
	0, 0, 86, 0, 121, 114, 139, 0, 115, 120,
	103, 131, 117, 138, 166, 145, 129, 144, 76, 128,
	137, 85, 122, 78, 135, 126, 107, 97, 98, 77,
	0, 119, 89, 93, 88, 112, 132, 133, 87, 151,
	81, 143, 80, 82, 142, 111, 130, 136, 108, 105,
	79, 134, 106, 104, 99, 91, 0, 0, 0, 125,
	140, 152, 0, 113, 146, 147, 148, 149, 110, 83,
	96, 123, 90, 0, 0, 0, 0, 100, 0, 102,
	0, 0, 124, 109, 0, 0, 0, 75, 0, 101,
	150, 118, 92, 141, 0, 0, 0, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	116, 0, 0, 127, 95, 94, 0, 0, 0, 86,
	0, 121, 114, 139, 0, 115, 120, 103, 131, 117,
	138, 166, 145, 129, 144, 76, 128, 137, 85, 122,
	78, 135, 126, 107, 97, 98, 77, 0, 119, 89,
	93, 88, 112, 132, 133, 87, 151, 81, 143, 80,
	82, 142, 111, 130, 136, 108, 105, 79, 134, 106,
	104, 99, 91, 0, 0, 0, 125, 140, 152, 0,
	0, 146, 147, 148, 149, 110, 83, 96, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 75, 0, 101, 150, 118, 92,
	141,
}
var yyPact = [...]int{

<<<<<<< HEAD
	1352, -1000, -167, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 749, 770, -1000, -1000, -1000, -1000, -1000, -1000, 560,
	5961, 9, 33, 40, 8214, 30, 1132, 8745, -1000, -44,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 544, -1000, -1000,
	-1000, -1000, -1000, 728, 747, 578, 720, 651, -1000, 4759,
	8, 7306, 8037, 4135, -1000, 336, 26, 8745, -128, 8391,
	3, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
=======
	195, -1000, -161, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 798, 826, -1000, -1000, -1000, -1000, -1000, -1000, 599,
	6038, 43, 73, 51, 8291, 71, 1268, 8822, -1000, -50,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 584, -1000, -1000,
	-1000, -1000, -1000, 791, 796, 605, 784, 678, -1000, 4836,
	34, 7383, 8114, 4212, -1000, 428, 69, 8822, -132, 8468,
	30, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, 28, 8745, -1000, 8745, 0, 333, 0,
	8745, -1000, 80, -1000, -1000, -1000, -1000, 8745, 331, 671,
	36, 2588, 2588, 2588, 2588, -38, 2588, 2588, 597, -1000,
	-1000, -1000, -1000, 2588, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 342, 708, 5178, 5178, 749, -1000, 544,
	-1000, -1000, -1000, 667, -1000, -1000, 192, 757, -1000, 5784,
	79, -1000, 5178, 2037, 518, -1000, -1000, 518, -1000, -1000,
	72, -1000, -1000, 5377, 5377, 5377, 5377, 5377, 5377, 5377,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 518, -1000, 4970, 518, 518, 518,
	518, 518, 518, 5178, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 7860, 477, 706,
	-1000, -1000, -1000, 716, 6567, 7129, 8745, 528, -1000, 508,
	3693, -1000, -1000, -1000, 132, 6921, -1000, -1000, -1000, 669,
=======
	-1000, -1000, -1000, 46, 8822, -1000, 8822, 25, 386, 25,
	8822, -1000, 105, -1000, -1000, -1000, -1000, 8822, 380, 738,
	42, 2665, 2665, 2665, 2665, -30, 2665, 2665, 620, -1000,
	-1000, -1000, -1000, 2665, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 368, 741, 5255, 5255, 798, -1000, 584,
	-1000, -1000, -1000, 724, -1000, -1000, 231, 814, -1000, 5861,
	104, -1000, 5255, 1432, 549, -1000, -1000, 549, -1000, -1000,
	82, -1000, -1000, 5653, 5653, 5653, 5653, 5653, 5653, 5653,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 549, -1000, 5047, 549, 549, 549,
	549, 549, 549, 5255, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 7937, 563, 722,
	-1000, -1000, -1000, 767, 6644, 7206, 8822, 480, -1000, 555,
	3770, -1000, -1000, -1000, 186, 6998, -1000, -1000, -1000, 731,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	443, -1000, 1870, 328, 2588, 14, 535, 8745, 142, 8745,
	2588, 11, 8745, 712, 583, 8745, -1000, 3914, -1000, 2588,
	2588, 2588, 2588, 2588, 2588, 2588, 2588, -1000, -1000, -1000,
	-1000, -1000, -1000, 2588, 2588, -1000, -1000, 8745, -1000, -1000,
	-1000, -1000, 765, 112, 498, 70, 513, -1000, 489, 728,
	342, 651, 6744, 607, -1000, -1000, 8745, -1000, 5178, 5178,
	314, -1000, 7660, -1000, -1000, 3030, 118, 5377, 217, 321,
	5377, 5377, 5377, 5377, 5377, 5377, 5377, 5377, 5377, 5377,
	5377, 5377, 5377, 5377, 5377, 246, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 324, -1000, 544, 558, 558, 91,
	91, 91, 91, 91, 91, 5576, 4343, 342, 430, 133,
	4970, 4759, 4759, 5178, 5178, 4759, 722, 135, 133, 8391,
	-1000, 342, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4759,
	4759, 4759, 4759, -18, 8745, -1000, 8568, 7306, 7306, 7306,
	7306, 7306, -1000, 627, 623, -1000, 610, 609, 641, 8745,
	-1000, 428, 6567, 78, 518, -1000, 7483, -1000, -1000, -18,
	7306, 8745, -1000, -1000, 3693, 508, 5178, 88, -1000, -1000,
	-1000, -1000, 2367, 97, 207, -95, -1000, -1000, 533, -1000,
	533, 533, 533, 533, -72, -72, -72, -72, -1000, -1000,
	-1000, -1000, -1000, 550, -1000, 533, 533, 533, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 543, 543, 543, 537,
	537, 548, -1000, 8745, -142, 306, -1000, 710, 84, -1000,
	8745, -1000, -1000, 8745, 2588, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	644, 5178, 5178, 3472, 5178, -1000, -1000, -1000, 708, -1000,
	722, 733, -1000, 662, 661, 4759, -1000, -1000, 118, 171,
	-1000, -1000, 243, -1000, -1000, -1000, -1000, 61, 518, -1000,
	1624, -1000, -1000, -1000, -1000, 217, 5377, 5377, 5377, 1294,
	1624, 1433, 229, 330, 91, 195, 195, 90, 90, 90,
	90, 90, 150, 150, -1000, -1000, -1000, 342, -1000, -1000,
	-1000, 342, 4759, 502, -1000, -1000, 5178, -1000, 342, 426,
	426, 307, 214, 426, 4759, 139, -1000, 5178, 342, -1000,
	426, 342, 426, 426, 633, 518, -1000, 534, -1000, 129,
	-1000, 57, 706, 547, 579, 674, -1000, -1000, -1000, -1000,
	618, -1000, 617, -1000, -1000, -1000, -1000, -1000, 24, 23,
	18, 8391, -1000, 755, 475, -1000, -1000, 133, -1000, 304,
	501, 2146, -1000, -1000, -1000, -1000, -1000, -1000, 542, 700,
	107, 302, -1000, -1000, 675, -1000, 176, -97, -1000, -1000,
	248, -72, -72, -1000, -1000, 88, 666, 88, 88, 88,
	256, -1000, -1000, -1000, -1000, 231, -1000, -1000, -1000, 228,
	-1000, 575, 8391, 2588, -1000, 3251, -1000, -1000, -1000, -1000,
	1082, 584, 119, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -19, -1000, 2588, -1000, 642, 133,
	133, 55, -1000, -1000, 8745, -1000, -1000, -1000, -1000, 495,
	-1000, -1000, -1000, 2809, 4759, -1000, 1294, 1624, 1353, -1000,
	5377, 5377, -1000, -1000, 426, 4759, 133, -1000, -1000, -1000,
	-1, 246, -1, -136, 463, 134, -1000, 5178, 212, -1000,
	-1000, -1000, -1000, -1000, 571, 8568, 518, -1000, 6368, 8391,
	749, 8568, 5178, 5178, 3472, -1000, -1000, 5178, 538, -1000,
	5178, -1000, -1000, -1000, 518, 518, 518, 390, -1000, 749,
	-1000, -1000, 2367, -1000, 2367, 8391, -1000, 300, -1000, -1000,
	563, 35, -1000, -1000, -1000, 387, 88, 88, -1000, 131,
	-1000, -1000, -1000, 422, -1000, 486, 398, 8745, -1000, -1000,
	482, -1000, 128, -1000, -1000, 8391, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 8391, 8745, -1000,
	-1000, -1000, -1000, -1000, 8391, -1000, -1000, 3251, -1000, 755,
	7306, -1000, -1000, 342, -1000, 5377, 1624, 1624, -1000, -1000,
	342, 533, 533, -1000, 533, 537, -1000, 533, -53, 533,
	-54, 342, 342, 518, -133, -1000, 133, 5178, -1000, 702,
	474, 473, -1000, -1000, 4551, 342, 393, 53, 390, 728,
	-1000, 133, 133, -1000, 133, 8391, 133, 8391, 8391, 8391,
	6169, 8391, 728, 2146, -1000, 386, -1000, 533, -1000, -91,
	764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -72, 255, 219, -1000, 208, 2588, 3251, 2367,
	-1000, 519, -1000, -1000, -1000, -1000, 705, 753, 478, -1000,
	1624, -1000, -1000, 44, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 5377, 342, 250, 133, 692, -1000, 518, -1000,
	-1000, 505, 8391, 8391, -1000, -1000, 384, -1000, 365, 365,
	365, 78, -1000, -1000, 548, 8391, -1000, 110, -1000, -113,
	88, -1000, 381, 379, -1000, -1000, -1000, 8391, 518, 751,
	744, -1000, -1000, 274, -1000, -1000, 760, -1000, 518, -1000,
	544, 43, -1000, 8391, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 188, 679, -1000, 677, -1000, -1000, -1000, -1000, 362,
	-20, -1000, 5178, 5178, 342, 34, -152, 8568, 473, 342,
	8391, -1000, -1000, 247, -1000, -1000, 535, 358, -1000, 8391,
	133, 458, -1000, 637, -140, -157, 420, -1000, -1000, -1000,
	-142, -1000, -20, 659, -1000, 631, -1000, -1000, -1000, -28,
	-143, -31, -154, 518, -163, 1750, -1000, 1316, 342, -1000,
=======
	426, -1000, 1661, 378, 2665, 39, 602, 8822, 201, 8822,
	2665, 37, 8822, 762, 618, 8822, -1000, 3991, -1000, 2665,
	2665, 2665, 2665, 2665, 2665, 2665, 2665, -1000, -1000, -1000,
	-1000, -1000, -1000, 2665, 2665, -1000, -1000, 8822, -1000, -1000,
	-1000, -1000, 821, 137, 270, 103, 556, -1000, 273, 791,
	368, 678, 6821, 649, -1000, -1000, 8822, -1000, 5255, 5255,
	295, -1000, 7737, -1000, -1000, 3107, 154, 5653, 252, 164,
	5653, 5653, 5653, 5653, 5653, 5653, 5653, 5653, 5653, 5653,
	5653, 5653, 5653, 5653, 5653, 298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 376, -1000, 584, 667, 667, 118,
	118, 118, 118, 118, 118, 1887, 4420, 368, 400, 266,
	5047, 4836, 4836, 5255, 5255, 4836, 770, 196, 266, 8468,
	-1000, 368, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4836,
	4836, 4836, 4836, -5, 8822, -1000, 8645, 7383, 7383, 7383,
	7383, 7383, -1000, 671, 670, -1000, 647, 646, 708, 8822,
	-1000, 397, 6644, 102, 549, -1000, 7560, -1000, -1000, -5,
	7383, 8822, -1000, -1000, 3770, 555, 5255, 111, -1000, -1000,
	-1000, -1000, 2444, 166, 258, -105, -1000, -1000, 571, -1000,
	571, 571, 571, 571, -85, -85, -85, -85, -1000, -1000,
	-1000, -1000, -1000, 598, -1000, 571, 571, 571, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 583, 583, 583, 575,
	575, 603, -1000, 8822, -148, 343, -1000, 759, 68, -1000,
	8822, -1000, -1000, 8822, 2665, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	679, 5255, 5255, 3549, 5255, -1000, -1000, -1000, 741, -1000,
	770, 795, -1000, 714, 713, 4836, -1000, -1000, 154, 174,
	-1000, -1000, 342, -1000, -1000, -1000, -1000, 97, 549, -1000,
	411, -1000, -1000, -1000, -1000, 252, 5653, 5653, 5653, 45,
	411, 1305, 580, 1400, 118, 521, 521, 116, 116, 116,
	116, 116, 282, 282, -1000, -1000, -1000, 368, -1000, -1000,
	-1000, 368, 4836, 543, -1000, -1000, 5255, -1000, 368, 395,
	395, 242, 281, 395, 4836, 228, -1000, 5255, 368, -1000,
	395, 368, 395, 395, 677, 549, -1000, 489, -1000, 179,
	-1000, 91, 722, 581, 614, 1071, -1000, -1000, -1000, -1000,
	657, -1000, 653, -1000, -1000, -1000, -1000, -1000, 57, 48,
	47, 8468, -1000, 811, 482, -1000, -1000, 266, -1000, 341,
	542, 2223, -1000, -1000, -1000, -1000, -1000, -1000, 578, 751,
	151, 338, -1000, -1000, 742, -1000, 213, -107, -1000, -1000,
	283, -85, -85, -1000, -1000, 111, 725, 111, 111, 111,
	311, -1000, -1000, -1000, -1000, 279, -1000, -1000, -1000, 276,
	-1000, 610, 8468, 2665, -1000, 3328, -1000, -1000, -1000, -1000,
	1126, 246, 168, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -6, -1000, 2665, -1000, 693, 266,
	266, 90, -1000, -1000, 8822, -1000, -1000, -1000, -1000, 484,
	-1000, -1000, -1000, 2886, 4836, -1000, 45, 411, 1189, -1000,
	5653, 5653, -1000, -1000, 395, 4836, 266, -1000, -1000, -1000,
	92, 298, 92, -143, 558, 192, -1000, 5255, 169, -1000,
	-1000, -1000, -1000, -1000, 609, 8645, 549, -1000, 6445, 8468,
	798, 8645, 5255, 5255, 3549, -1000, -1000, 5255, 576, -1000,
	5255, -1000, -1000, -1000, 549, 549, 549, 374, -1000, 798,
	-1000, -1000, 2444, -1000, 2444, 8468, -1000, 333, -1000, -1000,
	608, 63, -1000, -1000, -1000, 433, 111, 111, -1000, 159,
	-1000, -1000, -1000, 392, -1000, 481, 390, 8822, -1000, -1000,
	475, -1000, 162, -1000, -1000, 8468, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 8468, 8822,
	-1000, -1000, -1000, -1000, -1000, 8468, -1000, -1000, 3328, -1000,
	811, 7383, -1000, -1000, 368, -1000, 5653, 411, 411, -1000,
	-1000, 368, 571, 571, -1000, 571, 575, -1000, 571, -59,
	571, -69, 368, 368, 549, -139, -1000, 266, 5255, -1000,
	753, 439, 471, -1000, -1000, 4628, 368, 384, 88, 374,
	791, -1000, 266, 266, -1000, 266, 8468, 266, 8468, 8468,
	8468, 6246, 8468, 791, 2223, -1000, 372, -1000, 571, -1000,
	-101, 820, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -85, 301, 264, -1000, 255, 2665, 3328, 2444,
	-1000, 560, -1000, -1000, -1000, -1000, 755, 809, 474, -1000,
	411, -1000, -1000, 36, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 5653, 368, 300, 266, 750, -1000, 549, -1000,
	-1000, 574, 8468, 8468, -1000, -1000, 367, -1000, 365, 365,
	365, 102, -1000, -1000, 603, 8468, -1000, 126, -1000, -122,
	111, -1000, 430, 375, -1000, -1000, -1000, 8468, 549, 802,
	785, -1000, -1000, 15, -1000, -1000, 819, -1000, 549, -1000,
	584, 86, -1000, 8468, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 227, 749, -1000, 745, -1000, -1000, -1000, -1000, 362,
	-8, -1000, 5255, 5255, 368, 29, -152, 8645, 471, 368,
	8468, -1000, -1000, 292, -1000, -1000, 602, 358, -1000, 8468,
	266, 470, -1000, 683, -146, -157, 444, -1000, -1000, -1000,
	-148, -1000, -8, 675, -1000, 682, -1000, -1000, -1000, -11,
	-150, -39, -154, 549, -158, 5454, -1000, 548, 368, -1000,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	-1000,
}
var yyPgo = [...]int{

<<<<<<< HEAD
	0, 983, 18, 470, 982, 981, 980, 979, 977, 975,
	973, 972, 971, 970, 969, 968, 962, 960, 959, 957,
	956, 954, 952, 951, 90, 950, 948, 946, 57, 944,
	78, 942, 940, 39, 51, 37, 44, 10, 939, 25,
	60, 55, 937, 43, 936, 934, 933, 932, 54, 931,
	930, 1195, 927, 925, 12, 27, 924, 923, 920, 915,
	56, 3, 912, 911, 910, 898, 897, 896, 42, 5,
	6, 22, 13, 894, 124, 7, 893, 40, 887, 882,
	871, 870, 46, 868, 45, 867, 16, 50, 865, 9,
	53, 29, 24, 8, 76, 861, 30, 47, 857, 271,
	856, 109, 855, 853, 852, 851, 850, 23, 0, 636,
	408, 65, 847, 15, 845, 1155, 77, 52, 17, 844,
	28, 499, 34, 839, 837, 32, 836, 832, 831, 827,
	826, 823, 194, 822, 819, 816, 86, 21, 812, 806,
	49, 20, 805, 804, 803, 802, 48, 801, 41, 800,
	799, 798, 26, 36, 797, 11, 796, 795, 1, 788,
	14, 785, 2, 782, 4, 33, 781, 779, 88, 139,
	777, 776, 58,
=======
	0, 1049, 36, 440, 1047, 1046, 1045, 1044, 1043, 1042,
	1041, 1038, 1037, 1036, 1033, 1023, 1022, 1017, 1015, 1014,
	1013, 1011, 1008, 1006, 100, 1003, 1002, 1001, 73, 994,
	55, 988, 986, 30, 79, 56, 39, 228, 985, 27,
	60, 57, 984, 32, 982, 979, 973, 971, 53, 967,
	955, 1211, 953, 951, 12, 19, 947, 943, 941, 940,
	61, 5, 938, 935, 934, 932, 931, 928, 41, 3,
	9, 40, 13, 927, 217, 6, 925, 44, 922, 921,
	920, 919, 21, 918, 45, 917, 18, 43, 914, 7,
	47, 24, 28, 8, 58, 913, 25, 50, 912, 334,
	910, 103, 907, 905, 902, 900, 896, 33, 0, 625,
	85, 54, 894, 10, 893, 1267, 80, 51, 15, 892,
	49, 788, 23, 891, 890, 29, 889, 888, 880, 879,
	878, 877, 22, 876, 874, 870, 48, 26, 869, 867,
	46, 17, 863, 861, 858, 856, 52, 855, 42, 854,
	852, 849, 20, 14, 848, 11, 847, 846, 1, 845,
	16, 844, 2, 843, 4, 34, 842, 841, 299, 255,
	838, 833, 59,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
}
var yyR1 = [...]int{

	0, 166, 167, 167, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 6, 3, 4, 4, 5,
	5, 7, 7, 27, 27, 8, 9, 9, 170, 170,
	46, 46, 90, 90, 10, 10, 123, 123, 11, 11,
	11, 11, 11, 164, 164, 163, 162, 162, 161, 161,
	160, 16, 149, 150, 150, 150, 146, 126, 126, 126,
	129, 129, 127, 127, 127, 127, 127, 127, 127, 128,
	128, 128, 128, 128, 130, 130, 130, 130, 130, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 145, 145, 132, 132, 140, 140, 141,
	141, 141, 138, 138, 139, 139, 142, 142, 142, 133,
<<<<<<< HEAD
	133, 133, 133, 133, 133, 133, 135, 135, 143, 143,
	136, 136, 136, 137, 137, 144, 144, 144, 144, 144,
	134, 134, 147, 154, 154, 154, 154, 148, 148, 156,
	156, 155, 151, 151, 151, 152, 152, 152, 153, 153,
	153, 12, 12, 12, 12, 12, 12, 12, 12, 12,
=======
	133, 133, 133, 133, 133, 135, 135, 143, 143, 136,
	136, 136, 137, 137, 144, 144, 144, 144, 144, 134,
	134, 147, 154, 154, 154, 154, 148, 148, 156, 156,
	155, 151, 151, 151, 152, 152, 152, 153, 153, 153,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 165,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	165, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	159, 157, 157, 158, 158, 13, 14, 14, 14, 15,
	15, 17, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 124, 124, 124, 19, 19,
	21, 21, 22, 23, 20, 20, 20, 20, 20, 171,
	24, 25, 25, 26, 26, 26, 30, 30, 30, 28,
	28, 29, 29, 35, 35, 34, 34, 36, 36, 36,
	36, 112, 112, 112, 111, 111, 38, 38, 39, 39,
	40, 40, 41, 41, 41, 53, 53, 89, 89, 91,
	91, 42, 42, 42, 42, 43, 43, 44, 44, 45,
	45, 119, 119, 118, 118, 118, 117, 117, 47, 47,
	47, 49, 48, 48, 48, 48, 50, 50, 52, 52,
	51, 51, 54, 54, 54, 54, 55, 55, 37, 37,
	37, 37, 37, 37, 37, 100, 100, 57, 57, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 67,
	67, 67, 67, 67, 67, 58, 58, 58, 58, 58,
	58, 58, 33, 33, 68, 68, 68, 74, 69, 69,
	61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 61, 61, 61, 61, 61, 61,
	61, 65, 65, 65, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 64, 64, 64, 64, 64, 64, 64,
	64, 172, 172, 66, 66, 66, 66, 31, 31, 31,
	31, 31, 122, 122, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 78, 78, 32,
	32, 76, 76, 77, 79, 79, 75, 75, 75, 60,
	60, 60, 60, 60, 60, 60, 60, 62, 62, 62,
	80, 80, 81, 81, 82, 82, 83, 83, 84, 85,
	85, 85, 86, 86, 86, 86, 87, 87, 87, 59,
	59, 59, 59, 59, 59, 88, 88, 88, 88, 92,
	92, 70, 70, 72, 72, 71, 73, 93, 93, 96,
	94, 94, 97, 97, 95, 95, 95, 114, 114, 114,
	98, 98, 101, 101, 102, 102, 99, 99, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 103, 104, 104,
	104, 105, 105, 106, 106, 106, 113, 113, 109, 109,
	110, 110, 115, 115, 116, 116, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 168, 169, 120, 121, 121,
	121,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 6, 7, 5, 10, 1, 3, 1,
	3, 7, 8, 1, 1, 8, 8, 6, 1, 1,
	1, 3, 0, 4, 3, 4, 1, 1, 2, 8,
	4, 6, 5, 0, 2, 1, 0, 2, 1, 3,
	3, 4, 4, 1, 3, 3, 8, 3, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 1, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 0, 1, 2, 0,
<<<<<<< HEAD
	2, 2, 2, 2, 2, 2, 0, 3, 0, 1,
	0, 3, 3, 0, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 2, 3, 2, 2, 1, 1, 1,
	3, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 6, 7, 7, 12, 7, 7, 7, 4, 5,
=======
	2, 2, 2, 2, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 0, 2, 1, 2, 1, 0,
	2, 5, 2, 3, 2, 2, 1, 1, 1, 3,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	6, 7, 7, 12, 7, 7, 7, 4, 5, 1,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 3, 8, 8, 5, 4, 6, 5, 3,
	2, 3, 4, 4, 4, 4, 4, 4, 4, 4,
	3, 3, 3, 3, 4, 3, 3, 4, 2, 4,
	2, 2, 2, 2, 3, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 2, 2, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 0, 1, 0, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 3, 3, 7, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 6, 4, 4, 6, 6, 6, 9,
	7, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 0, 2, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 0, 2, 4, 2,
	1, 3, 5, 4, 6, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 1, 1, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}
var yyChk = [...]int{

	-1000, -166, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -17, -18, -19, -21, -22, -23,
	-20, -3, -4, 6, 7, -27, 9, 10, 30, -16,
	112, 113, 115, 114, 138, 116, 131, 49, 150, 151,
	153, 154, 25, 132, 133, 136, 137, -168, 8, 213,
	53, -167, 226, -82, 15, -26, 5, -24, -171, -24,
	-24, -24, -24, -24, -149, 53, -106, 120, 70, 146,
	118, 124, -109, 56, -108, 219, 150, 161, 155, 182,
	174, 172, 175, 201, 65, 153, 134, 170, 166, 164,
	27, 187, 224, 165, 130, 129, 202, 159, 160, 186,
	32, 221, 34, 142, 185, 181, 184, 158, 180, 38,
	200, 177, 167, 18, 137, 140, 125, 144, 223, 163,
	141, 136, 154, 203, 37, 191, 157, 128, 151, 148,
	178, 143, 168, 169, 183, 156, 179, 152, 145, 138,
	192, 225, 176, 173, 149, 147, 196, 197, 198, 199,
	222, 171, 193, -99, 120, 122, 118, 118, 119, 120,
	118, -51, -115, 56, -108, 120, 146, 118, 106, 175,
	112, 194, 119, 32, 144, -124, 118, 195, 147, 196,
	197, 198, 199, 56, 203, 202, -115, 152, -120, -120,
	-120, -120, -120, -2, -86, 17, 16, -5, -3, -168,
	6, 20, 21, -30, 39, 40, -25, -36, 97, -37,
	-115, -56, 72, -61, 29, 56, -108, 23, -60, -57,
	-75, -73, -74, 106, 107, 95, 96, 103, 73, 108,
	-65, -63, -64, -66, 58, 57, 66, 59, 60, 61,
	62, 67, 68, 69, -109, -71, -168, 43, 44, 214,
	215, 218, 216, 75, 33, 204, 212, 211, 210, 208,
	209, 206, 207, 123, 205, 101, 213, -99, -39, -40,
	-41, -42, -53, -74, -168, -51, 11, -46, -51, -94,
	-123, -97, 203, 202, -110, -95, -109, -107, 201, 175,
	200, 117, 71, 22, 24, 189, 74, 106, 16, 75,
	105, 214, 112, 47, 206, 207, 204, 205, 194, 29,
	10, 25, 132, 21, 99, 114, 78, 79, 135, 23,
	133, 69, 19, 50, 11, 13, 14, 123, 122, 90,
	119, 45, 8, 108, 26, 87, 41, 28, 43, 88,
	17, 208, 209, 31, 218, 139, 101, 48, 35, 72,
	67, 51, 70, 15, 46, 89, 115, 213, 44, 6,
	217, 30, 131, 42, 118, 195, 77, 121, 68, 5,
	124, 9, 49, 52, 210, 211, 212, 33, 76, 12,
	-150, -146, 56, 119, -51, 213, -109, -102, 123, 118,
	-51, -51, -101, 123, 56, -101, -51, 109, -51, 56,
	30, 205, 56, 144, 118, 145, 120, -121, -168, -110,
	-121, -121, -121, 148, 149, -121, -121, 51, -121, -169,
	55, -87, 19, 31, -37, -115, -83, -84, -37, -82,
	-2, -24, 35, -28, 21, 64, 11, -112, 71, 70,
	87, -111, 22, -109, 58, 109, -37, -58, 90, 72,
	88, 89, 74, 92, 91, 102, 95, 96, 97, 98,
	99, 100, 101, 93, 94, 105, 80, 81, 82, 83,
	84, 85, 86, -100, -168, -74, -168, 110, 111, -61,
	-61, -61, -61, -61, -61, -61, -168, -2, -69, -37,
	-168, -168, -168, -168, -168, -168, -168, -78, -37, -168,
	-172, -168, -172, -172, -172, -172, -172, -172, -172, -168,
	-168, -168, -168, -52, 26, -51, 30, 54, -47, -49,
	-48, -50, 41, 45, 47, 42, 43, 44, 48, -119,
	22, -39, -168, -118, 140, -117, 22, -115, 58, -51,
	-170, 54, 11, 52, 54, -94, 80, -114, -109, 58,
	29, 30, 55, 54, -126, -129, -131, -130, -127, -128,
	172, 173, 106, 176, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 134, 168, 169, 170, 171, 155,
	156, 157, 158, 159, 160, 161, 163, 164, 165, 166,
	167, 56, -121, 120, -164, 52, -51, 72, -51, -121,
	121, -51, 23, 51, -51, -116, -115, -107, -121, -121,
	-121, -121, -121, -121, -121, -121, -121, -121, -51, 9,
	90, 54, 18, 109, 54, -85, 24, 25, -86, -169,
	-30, -62, -109, 59, 62, -29, 42, -51, -37, -37,
	-67, 67, 72, 68, 69, -111, 97, -116, -110, -107,
	-61, -68, -71, -74, 63, 90, 88, 89, 74, -61,
	-61, -61, -61, -61, -61, -61, -61, -61, -61, -61,
	-61, -61, -61, -61, -122, 56, 58, 56, -60, -60,
	-109, -35, 21, -34, -36, -169, 54, -169, -2, -34,
	-34, -37, -37, -34, -28, -76, -77, 76, -109, -169,
	-34, -35, -34, -34, -90, 140, -51, -93, -96, -75,
	-109, -115, -40, -41, -41, -40, -41, 41, 41, 41,
	46, 41, 46, 41, -48, -115, -169, -54, 49, 122,
	50, -168, -117, -90, -39, -51, -97, -37, -137, 105,
	-151, -152, -153, -110, 58, 59, -146, -147, -154, 125,
	124, -148, 119, 28, -142, 67, 72, -138, 192, -132,
	53, -132, -132, -132, -132, -136, 175, -136, -136, -136,
	53, -132, -132, -132, -140, 53, -140, -140, -141, 53,
	-141, -113, 52, -51, -162, 222, -163, 56, 23, -103,
	117, 114, 115, -159, 113, 189, 175, 65, 29, 15,
	214, 140, 225, 56, 141, -51, -51, -121, 37, -37,
	-37, -116, -84, -87, -98, 19, 11, 33, 33, -34,
	67, 68, 69, 109, -168, -68, -61, -61, -61, -33,
	135, 71, -169, -169, -34, 54, -37, -169, -169, -169,
	54, 52, 22, -169, -34, -79, -77, 78, -37, -169,
	-169, -169, -169, -169, -59, 30, 33, -2, -168, -168,
	-55, 54, 12, 80, 109, -44, -43, 51, 52, -45,
	51, -43, 41, 41, 119, 119, 119, -91, -109, -55,
	-55, 56, 54, -153, 80, 53, 28, -148, 56, 56,
	-133, 29, 67, -139, 193, 59, -136, -136, -137, 30,
	-137, -137, -137, -145, 58, 59, 59, 51, -109, -121,
	-161, -160, -110, -120, -165, 146, 126, 127, 130, 129,
<<<<<<< HEAD
	56, 119, 28, 125, 128, 140, -165, 146, -104, -105,
	121, 22, 119, 28, 140, -121, 38, 109, -51, -38,
	11, 97, -110, -35, -33, 71, -61, -61, -169, -36,
	-125, 106, 172, 134, 170, 166, 186, 177, 191, 168,
	192, -122, -125, 219, -82, 79, -37, 77, -92, 51,
	-93, -70, -72, -71, -168, -2, -88, -109, -91, -82,
	-96, -37, -37, -110, -37, 53, -37, -168, -168, -168,
	-169, 54, -82, -152, -153, -156, -155, -109, 56, -135,
	51, 58, 59, 60, 67, 204, 66, 55, -137, -137,
=======
	56, 119, 28, 125, 128, 140, 124, -165, 146, -104,
	-105, 121, 22, 119, 28, 140, -121, 38, 109, -51,
	-38, 11, 97, -110, -35, -33, 71, -61, -61, -169,
	-36, -125, 106, 172, 134, 170, 166, 186, 177, 191,
	168, 192, -122, -125, 219, -82, 79, -37, 77, -92,
	51, -93, -70, -72, -71, -168, -2, -88, -109, -91,
	-82, -96, -37, -37, -110, -37, 53, -37, -168, -168,
	-168, -169, 54, -82, -152, -153, -156, -155, -109, 56,
	-135, 51, 58, 59, 60, 67, 204, 55, -137, -137,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	56, 106, 55, 54, 54, 55, 54, -51, 54, 80,
	-120, -109, -120, -109, -51, -120, -109, -55, -39, -169,
	-61, -169, -132, -132, -132, -141, -132, 160, -132, 160,
	-169, -169, -168, -32, 217, -37, 27, -92, 54, -169,
	-169, -169, 54, 109, -169, -86, -89, -109, -89, -89,
	-89, -118, -109, -86, 55, 54, -132, -143, 189, 9,
	-136, 58, 59, 59, -121, -160, -153, 53, 26, -80,
	13, -136, 56, -61, -169, 58, 28, -72, 33, -2,
	-168, -109, -109, 54, 55, -169, -169, -169, -54, -113,
	-155, -144, 125, 28, 124, 204, -137, 55, 55, -89,
	-168, -81, 14, 16, -31, 90, 222, 9, -70, -2,
	109, -109, -134, 65, 28, 28, 55, -157, -158, 140,
	-37, -69, -169, 220, 48, 223, -93, -169, -109, 58,
	-164, -169, 54, -109, 38, 221, 224, -162, -158, 33,
	38, 142, 222, 143, 223, -168, 224, -61, 139, -169,
	-169,
}
var yyDef = [...]int{

	0, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 454, 0, 229, 229, 229, 229, 229, 229, 0,
	523, 506, 0, 0, 0, 0, 215, 219, 220, 0,
	222, 223, 707, 707, 707, 707, 707, 0, 33, 34,
	705, 1, 3, 462, 0, 0, 233, 236, 231, 0,
	506, 0, 0, 0, 48, 0, 0, 695, 0, 696,
	504, 524, 525, 528, 529, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 697, 698, 699, 700, 701,
	702, 703, 704, 0, 0, 507, 0, 502, 0, 502,
	0, 190, 300, 532, 533, 695, 696, 0, 0, 0,
	0, 708, 708, 708, 708, 0, 708, 708, 208, 210,
	211, 212, 213, 708, 216, 217, 218, 221, 224, 225,
	226, 227, 228, 27, 466, 0, 0, 454, 29, 0,
	229, 234, 235, 239, 237, 238, 230, 0, 247, 251,
	0, 308, 0, 313, 315, -2, -2, 0, 350, 351,
	352, 353, 354, 0, 0, 0, 0, 0, 0, 0,
	377, 378, 379, 380, 439, 440, 441, 442, 443, 444,
	445, 446, 317, 318, 436, 486, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 401, 401, 401, 401, 401,
	401, 401, 401, 0, 0, 0, 0, 0, 0, 258,
	260, 261, 262, 281, 0, 283, 0, 0, 40, 44,
	0, 490, -2, -2, 0, 0, 530, 531, -2, 632,
	-2, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	555, 556, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 588, 589, 590, 591, 592, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 603, 604,
	605, 606, 607, 608, 609, 610, 611, 612, 613, 614,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	0, 63, 0, 0, 708, 0, 53, 0, 0, 0,
	708, 0, 0, 0, 0, 0, 189, 0, 191, 708,
	708, 708, 708, 708, 708, 708, 708, 200, 709, 710,
	201, 202, 203, 708, 708, 205, 206, 0, 214, 28,
	706, 22, 0, 0, 463, 0, 455, 456, 459, 462,
	27, 236, 0, 241, 240, 232, 0, 248, 0, 0,
	0, 252, 0, 254, 255, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 340, 341, 314, 0, 328, 0, 0, 0, 370,
	371, 372, 373, 374, 375, 0, 243, 27, 0, 348,
	0, 0, 0, 0, 0, 0, 239, 0, 428, 0,
	393, 0, 394, 395, 396, 397, 398, 399, 400, 0,
	243, 0, 0, 42, 0, 299, 0, 0, 0, 0,
	0, 0, 288, 0, 0, 291, 0, 0, 0, 0,
	282, 0, 0, 302, 665, 284, 0, 286, 287, 42,
<<<<<<< HEAD
	0, 0, 38, 39, 0, 45, 0, 133, 497, 498,
	499, 495, 152, 0, 116, 112, 68, 69, 105, 71,
	105, 105, 105, 105, 130, 130, 130, 130, 97, 98,
	99, 100, 101, 0, 84, 105, 105, 105, 88, 72,
	73, 74, 75, 76, 77, 78, 107, 107, 107, 109,
	109, 526, 50, 0, 56, 0, 61, 0, 0, 168,
=======
	0, 0, 38, 39, 0, 45, 0, 132, 497, 498,
	499, 495, 151, 0, 116, 112, 68, 69, 105, 71,
	105, 105, 105, 105, 129, 129, 129, 129, 97, 98,
	99, 100, 101, 0, 84, 105, 105, 105, 88, 72,
	73, 74, 75, 76, 77, 78, 107, 107, 107, 109,
	109, 526, 50, 0, 56, 0, 61, 0, 0, 167,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	0, 186, 503, 0, 708, 301, 534, 535, 192, 193,
	194, 195, 196, 197, 198, 199, 204, 207, 209, 467,
	0, 0, 0, 0, 0, 458, 460, 461, 466, 30,
	239, 0, 447, 0, 0, 0, 242, 25, 309, 310,
	312, 329, 0, 331, 333, 253, 249, 0, 437, -2,
	319, 320, 344, 345, 346, 0, 0, 0, 0, 342,
	324, 0, 355, 356, 357, 358, 359, 360, 361, 362,
	363, 364, 365, 366, 369, 412, 413, 0, 367, 368,
	376, 0, 0, 244, 245, 347, 0, 485, 27, 0,
	0, 0, 0, 0, 0, 434, 431, 0, 0, 402,
	0, 0, 0, 0, 0, 0, 298, 306, 487, 0,
	436, 0, 259, 277, 279, 0, 274, 289, 290, 292,
	0, 294, 0, 296, 297, 263, 264, 265, 0, 0,
	0, 0, 285, 306, 306, 41, 491, 492, 493, 0,
<<<<<<< HEAD
	62, 153, 155, 158, 159, 160, 64, 65, 0, 0,
	0, 0, 147, 148, 119, 117, 0, 114, 113, 70,
	0, 130, 130, 91, 92, 133, 0, 133, 133, 133,
	0, 85, 86, 87, 79, 0, 80, 81, 82, 0,
	83, 0, 0, 708, 52, 0, 54, 55, 505, 707,
	0, 0, 518, 169, 508, 509, 510, 511, 512, 513,
=======
	62, 152, 154, 157, 158, 159, 64, 65, 0, 0,
	0, 0, 146, 147, 119, 117, 0, 114, 113, 70,
	0, 129, 129, 91, 92, 132, 0, 132, 132, 132,
	0, 85, 86, 87, 79, 0, 80, 81, 82, 0,
	83, 0, 0, 708, 52, 0, 54, 55, 505, 707,
	0, 0, 518, 168, 508, 509, 510, 511, 512, 513,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	514, 515, 516, 517, 0, 185, 708, 188, 0, 464,
	465, 0, 457, 23, 0, 500, 501, 448, 449, 256,
	330, 332, 334, 0, 243, 321, 342, 325, 0, 322,
	0, 0, 316, 381, 0, 0, 349, -2, 384, 385,
	0, 0, 0, 0, 454, 0, 432, 0, 0, 392,
	403, 404, 405, 406, 479, 0, 0, -2, 0, 0,
	454, 0, 0, 0, 0, 271, 278, 0, 0, 272,
	0, 273, 293, 295, 0, 0, 0, 0, 269, 454,
<<<<<<< HEAD
	37, 134, 0, 156, 0, 0, 143, 0, 145, 146,
	126, 0, 118, 67, 115, 0, 133, 133, 93, 0,
	94, 95, 96, 0, 103, 0, 0, 0, 527, 51,
	57, 58, 0, 161, 707, 0, 170, 171, 172, 173,
	174, 175, 176, 177, 178, 179, 707, 0, 0, 707,
	519, 520, 521, 522, 0, 187, 468, 0, 24, 306,
	0, 250, 438, 0, 323, 0, 343, 326, 382, 246,
	0, 105, 105, 417, 105, 109, 420, 105, 422, 105,
	425, 0, 0, 0, 429, 391, 435, 0, 31, 0,
	479, 469, 481, 483, 0, 27, 0, 475, 0, 462,
	488, 307, 489, 437, 275, 0, 280, 0, 0, 0,
	283, 0, 462, 154, 157, 0, 149, 105, 144, 128,
	0, 120, 121, 122, 123, 124, 125, 106, 89, 90,
	131, 132, 130, 0, 0, 110, 0, 708, 0, 0,
	162, 0, 163, 165, 166, 167, 0, 450, 257, 383,
	327, 386, 414, 130, 418, 419, 421, 423, 424, 426,
	388, 387, 0, 0, 0, 433, 0, 32, 0, 484,
	-2, 0, 0, 0, 43, 35, 0, 267, 0, 0,
	0, 302, 270, 36, 526, 0, 151, 135, 129, 0,
	133, 104, 0, 0, 49, 59, 60, 0, 0, 452,
	0, 415, 416, 407, 390, 430, 0, 482, 0, -2,
	0, 477, 476, 0, 276, 303, 304, 305, 266, 142,
	150, 140, 0, 137, 139, 127, 102, 108, 111, 0,
	0, 26, 0, 0, 0, 0, 0, 0, 472, 27,
	0, 268, 66, 0, 136, 138, 53, 0, 181, 0,
	453, 451, 389, 0, 0, 0, 480, -2, 478, 141,
	56, 180, 0, 0, 408, 0, 411, 164, 182, 0,
=======
	37, 133, 0, 155, 0, 0, 142, 0, 144, 145,
	125, 0, 118, 67, 115, 0, 132, 132, 93, 0,
	94, 95, 96, 0, 103, 0, 0, 0, 527, 51,
	57, 58, 0, 160, 707, 0, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 707, 0, 0,
	707, 519, 520, 521, 522, 0, 187, 468, 0, 24,
	306, 0, 250, 438, 0, 323, 0, 343, 326, 382,
	246, 0, 105, 105, 417, 105, 109, 420, 105, 422,
	105, 425, 0, 0, 0, 429, 391, 435, 0, 31,
	0, 479, 469, 481, 483, 0, 27, 0, 475, 0,
	462, 488, 307, 489, 437, 275, 0, 280, 0, 0,
	0, 283, 0, 462, 153, 156, 0, 148, 105, 143,
	127, 0, 120, 121, 122, 123, 124, 106, 89, 90,
	130, 131, 129, 0, 0, 110, 0, 708, 0, 0,
	161, 0, 162, 164, 165, 166, 0, 450, 257, 383,
	327, 386, 414, 129, 418, 419, 421, 423, 424, 426,
	388, 387, 0, 0, 0, 433, 0, 32, 0, 484,
	-2, 0, 0, 0, 43, 35, 0, 267, 0, 0,
	0, 302, 270, 36, 526, 0, 150, 134, 128, 0,
	132, 104, 0, 0, 49, 59, 60, 0, 0, 452,
	0, 415, 416, 407, 390, 430, 0, 482, 0, -2,
	0, 477, 476, 0, 276, 303, 304, 305, 266, 141,
	149, 139, 0, 136, 138, 126, 102, 108, 111, 0,
	0, 26, 0, 0, 0, 0, 0, 0, 472, 27,
	0, 268, 66, 0, 135, 137, 53, 0, 181, 0,
	453, 451, 389, 0, 0, 0, 480, -2, 478, 140,
	56, 180, 0, 0, 408, 0, 411, 163, 182, 0,
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	409, 0, 0, 0, 0, 0, 410, 0, 0, 183,
	184,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 73, 3, 3, 3, 100, 92, 3,
	53, 55, 97, 95, 54, 96, 109, 98, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 226,
	81, 80, 82, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 102, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 91, 3, 103,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 56, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 74, 75,
	76, 77, 78, 79, 83, 84, 85, 86, 87, 88,
	89, 90, 93, 94, 99, 101, 104, 105, 106, 107,
	108, 110, 111, 112, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:292
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:297
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:298
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:302
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 22:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:325
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 23:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:333
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 24:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:337
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 25:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:343
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 26:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line sql.y:350
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:356
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 28:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:360
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:366
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:370
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:377
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 32:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:389
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:401
		{
			yyVAL.str = InsertStr
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:405
		{
			yyVAL.str = ReplaceStr
		}
	case 35:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:411
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), TableExprs: yyDollar[3].tableExprs, Exprs: yyDollar[5].updateExprs, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 36:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:417
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 37:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:421
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:426
		{
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:427
		{
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:431
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:435
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 42:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:440
		{
			yyVAL.partitions = nil
		}
	case 43:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:444
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:450
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:454
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:460
		{
			yyVAL.str = SessionStr
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:464
		{
			yyVAL.str = GlobalStr
		}
	case 48:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:470
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:475
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName, NewName: yyDollar[7].tableName}
		}
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:480
		{
			yyVAL.statement = &DDL{Action: CreateStr, NewName: yyDollar[3].tableName.ToViewName()}
		}
	case 51:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:484
		{
			yyVAL.statement = &DDL{Action: CreateStr, NewName: yyDollar[5].tableName.ToViewName()}
		}
	case 52:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:488
		{
			yyVAL.statement = &DDL{Action: CreateVindexStr, VindexSpec: &VindexSpec{
				Name:   yyDollar[3].colIdent,
				Type:   yyDollar[4].colIdent,
				Params: yyDollar[5].vindexParams,
			}}
		}
	case 53:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:497
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:501
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:507
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 56:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:512
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:517
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:523
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:528
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:534
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:540
		{
			yyVAL.ddl = &DDL{Action: CreateStr, NewName: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 62:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:547
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:554
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:559
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:563
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line sql.y:569
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].optVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:580
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:590
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].optVal
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:595
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:643
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:663
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 89:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 90:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:709
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:743
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:748
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:753
		{
			yyVAL.optVal = nil
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:757
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:762
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 108:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:766
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:774
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 110:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:778
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:784
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:792
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:796
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:801
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:805
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:811
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:815
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:819
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:824
		{
			yyVAL.optVal = nil
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:828
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:832
		{
			yyVAL.optVal = NewIntVal(yyDollar[2].bytes)
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:836
		{
			yyVAL.optVal = NewFloatVal(yyDollar[2].bytes)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:840
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:844
		{
			yyVAL.optVal = NewValArg(yyDollar[2].bytes)
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:848
		{
			yyVAL.optVal = NewBitVal(yyDollar[2].bytes)
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:853
		{
			yyVAL.optVal = nil
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:857
		{
			yyVAL.optVal = NewValArg(yyDollar[3].bytes)
		}
	case 128:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:862
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:866
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 130:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:871
		{
			yyVAL.str = ""
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:875
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:879
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:884
		{
			yyVAL.str = ""
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:888
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:893
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:897
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:901
		{
			yyVAL.colKeyOpt = colKey
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:905
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:909
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:914
		{
			yyVAL.optVal = nil
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:918
		{
			yyVAL.optVal = NewStrVal(yyDollar[2].bytes)
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:924
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Using: yyDollar[5].colIdent}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:930
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:934
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(string(yyDollar[3].bytes)), Unique: true}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:938
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(string(yyDollar[2].bytes)), Unique: true}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:942
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(string(yyDollar[2].bytes)), Unique: false}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:948
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:952
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:958
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:962
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:968
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].optVal}
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:973
		{
			yyVAL.str = ""
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:977
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:981
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:989
		{
			yyVAL.str = yyDollar[1].str
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:993
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:997
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1003
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1007
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1011
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1017
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 162:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1021
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 163:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1025
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 164:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line sql.y:1029
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 165:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1042
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 166:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1052
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, Table: yyDollar[4].tableName, NewName: yyDollar[7].tableName}
		}
	case 167:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:1057
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, NewName: yyDollar[4].tableName}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1062
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName(), NewName: yyDollar[3].tableName.ToViewName()}
		}
	case 169:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1066
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 180:
		yyDollar = yyS[yypt-7 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1084
=======
		//line sql.y:1081
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1090
=======
		//line sql.y:1087
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1094
=======
		//line sql.y:1091
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 183:
		yyDollar = yyS[yypt-8 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1100
=======
		//line sql.y:1097
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 184:
		yyDollar = yyS[yypt-8 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1104
=======
		//line sql.y:1101
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1110
=======
		//line sql.y:1107
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &DDL{Action: RenameStr, Table: yyDollar[3].tableName, NewName: yyDollar[5].tableName}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1116
=======
		//line sql.y:1113
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, Table: yyDollar[4].tableName, IfExists: exists}
		}
	case 187:
		yyDollar = yyS[yypt-6 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1124
=======
		//line sql.y:1121
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName, NewName: yyDollar[5].tableName}
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1129
=======
		//line sql.y:1126
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, Table: yyDollar[4].tableName.ToViewName(), IfExists: exists}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1139
=======
		//line sql.y:1136
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1143
=======
		//line sql.y:1140
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1148
=======
		//line sql.y:1145
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName, NewName: yyDollar[3].tableName}
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1151
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1155
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1162
=======
		//line sql.y:1159
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1164
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1168
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 197:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1172
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1176
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1183
=======
		//line sql.y:1180
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1184
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1188
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1192
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1199
=======
		//line sql.y:1196
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1200
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
<<<<<<< HEAD
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1203
=======
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1204
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1208
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
<<<<<<< HEAD
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1211
=======
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1212
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
<<<<<<< HEAD
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1215
=======
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1216
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
<<<<<<< HEAD
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1219
=======
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1220
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
<<<<<<< HEAD
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1223
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), OnTable: yyDollar[4].tableName}
		}
=======
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1224
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1228
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1232
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1239
=======
		//line sql.y:1236
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1249
=======
		//line sql.y:1246
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1252
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
<<<<<<< HEAD
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1255
=======
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1256
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1260
		{
			yyVAL.str = SessionStr
		}
<<<<<<< HEAD
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1263
=======
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1266
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = GlobalStr
		}
<<<<<<< HEAD
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1269
=======
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1270
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1273
=======
		//line sql.y:1276
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
<<<<<<< HEAD
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1279
		{
			yyVAL.statement = &Begin{}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1283
=======
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1280
		{
			yyVAL.statement = &Begin{}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1286
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Begin{}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1289
=======
		//line sql.y:1292
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &Commit{}
		}
<<<<<<< HEAD
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1295
		{
			yyVAL.statement = &Rollback{}
		}
=======
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1298
		{
			yyVAL.statement = &OtherRead{}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1302
		{
			yyVAL.statement = &OtherRead{}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1306
		{
			yyVAL.statement = &OtherRead{}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1310
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1317
=======
		//line sql.y:1314
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1322
=======
		//line sql.y:1319
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			setAllowComments(yylex, true)
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1326
=======
		//line sql.y:1323
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1332
=======
		//line sql.y:1329
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.bytes2 = nil
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1336
=======
		//line sql.y:1333
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1342
=======
		//line sql.y:1339
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = UnionStr
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1346
=======
		//line sql.y:1343
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = UnionAllStr
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1350
=======
		//line sql.y:1347
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = UnionDistinctStr
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1355
=======
		//line sql.y:1352
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1359
=======
		//line sql.y:1356
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1363
=======
		//line sql.y:1360
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = SQLCacheStr
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1368
=======
		//line sql.y:1365
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1372
=======
		//line sql.y:1369
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = DistinctStr
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1377
=======
		//line sql.y:1374
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1381
=======
		//line sql.y:1378
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = StraightJoinHint
		}
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1386
=======
		//line sql.y:1383
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExprs = nil
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1390
=======
		//line sql.y:1387
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1396
=======
		//line sql.y:1393
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1400
=======
		//line sql.y:1397
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1406
=======
		//line sql.y:1403
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1410
=======
		//line sql.y:1407
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1414
=======
		//line sql.y:1411
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 250:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1418
=======
		//line sql.y:1415
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1423
=======
		//line sql.y:1420
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1427
=======
		//line sql.y:1424
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1431
=======
		//line sql.y:1428
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1438
=======
		//line sql.y:1435
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1443
=======
		//line sql.y:1440
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1447
=======
		//line sql.y:1444
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1453
=======
		//line sql.y:1450
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1457
=======
		//line sql.y:1454
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1467
=======
		//line sql.y:1464
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1471
=======
		//line sql.y:1468
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1475
=======
		//line sql.y:1472
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1481
=======
		//line sql.y:1478
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 266:
		yyDollar = yyS[yypt-7 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1485
=======
		//line sql.y:1482
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1491
=======
		//line sql.y:1488
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1495
=======
		//line sql.y:1492
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1501
=======
		//line sql.y:1498
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1505
=======
		//line sql.y:1502
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 271:
<<<<<<< HEAD
=======
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1515
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 272:
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1519
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1523
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
<<<<<<< HEAD
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1526
=======
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1527
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
<<<<<<< HEAD
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1530
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1536
=======
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1533
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1538
=======
		//line sql.y:1535
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1542
=======
		//line sql.y:1539
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1544
=======
		//line sql.y:1541
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1548
=======
		//line sql.y:1545
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1550
=======
		//line sql.y:1547
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1553
=======
		//line sql.y:1550
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1555
=======
		//line sql.y:1552
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1558
=======
		//line sql.y:1555
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1562
=======
		//line sql.y:1559
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1566
=======
		//line sql.y:1563
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 287:
<<<<<<< HEAD
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1573
=======
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1570
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1576
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
<<<<<<< HEAD
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1579
=======
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1580
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = JoinStr
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1584
		{
			yyVAL.str = JoinStr
		}
<<<<<<< HEAD
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1587
=======
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1590
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = JoinStr
		}
<<<<<<< HEAD
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1593
=======
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1596
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = StraightJoinStr
		}
<<<<<<< HEAD
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1599
		{
			yyVAL.str = LeftJoinStr
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1603
=======
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1600
		{
			yyVAL.str = LeftJoinStr
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1604
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = LeftJoinStr
		}
<<<<<<< HEAD
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1607
		{
			yyVAL.str = RightJoinStr
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1611
=======
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1608
		{
			yyVAL.str = RightJoinStr
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1614
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = RightJoinStr
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1618
		{
			yyVAL.str = NaturalJoinStr
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1621
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1631
=======
		//line sql.y:1628
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1635
=======
		//line sql.y:1632
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1641
=======
		//line sql.y:1638
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1645
=======
		//line sql.y:1642
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1650
=======
		//line sql.y:1647
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.indexHints = nil
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1654
=======
		//line sql.y:1651
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1658
=======
		//line sql.y:1655
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 305:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1662
=======
		//line sql.y:1659
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1667
=======
		//line sql.y:1664
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = nil
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1671
=======
		//line sql.y:1668
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1677
=======
		//line sql.y:1674
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1681
=======
		//line sql.y:1678
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1685
=======
		//line sql.y:1682
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1689
=======
		//line sql.y:1686
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1693
=======
		//line sql.y:1690
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1697
=======
		//line sql.y:1694
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1701
=======
		//line sql.y:1698
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1707
=======
		//line sql.y:1704
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1711
=======
		//line sql.y:1708
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 317:
<<<<<<< HEAD
=======
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1714
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 318:
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1718
		{
			yyVAL.boolVal = BoolVal(true)
		}
<<<<<<< HEAD
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1721
=======
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1724
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1728
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
<<<<<<< HEAD
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1731
=======
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1732
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1736
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
<<<<<<< HEAD
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1739
=======
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1740
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
<<<<<<< HEAD
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1743
=======
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1744
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
<<<<<<< HEAD
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1747
=======
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1748
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
<<<<<<< HEAD
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:1751
=======
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1752
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
<<<<<<< HEAD
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:1755
=======
	case 327:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1756
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
<<<<<<< HEAD
	case 327:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:1759
=======
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1760
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
<<<<<<< HEAD
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1763
=======
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1766
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
<<<<<<< HEAD
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1769
=======
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1770
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = IsNullStr
		}
<<<<<<< HEAD
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1773
=======
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1774
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = IsNotNullStr
		}
<<<<<<< HEAD
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1777
=======
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1778
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = IsTrueStr
		}
<<<<<<< HEAD
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1781
=======
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1782
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = IsNotTrueStr
		}
<<<<<<< HEAD
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1785
=======
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1786
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = IsFalseStr
		}
<<<<<<< HEAD
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1789
=======
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1792
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = IsNotFalseStr
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1796
		{
			yyVAL.str = EqualStr
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1800
		{
			yyVAL.str = LessThanStr
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1804
		{
			yyVAL.str = GreaterThanStr
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1808
		{
			yyVAL.str = LessEqualStr
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1812
		{
			yyVAL.str = GreaterEqualStr
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1816
		{
			yyVAL.str = NotEqualStr
		}
<<<<<<< HEAD
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1819
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1824
=======
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:1821
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = nil
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1828
=======
		//line sql.y:1825
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1834
=======
		//line sql.y:1831
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1838
=======
		//line sql.y:1835
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1842
=======
		//line sql.y:1839
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1848
=======
		//line sql.y:1845
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1854
=======
		//line sql.y:1851
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1858
=======
		//line sql.y:1855
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 350:
<<<<<<< HEAD
=======
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1861
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 351:
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1865
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1869
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1873
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1877
		{
			yyVAL.expr = yyDollar[1].expr
		}
<<<<<<< HEAD
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:1880
=======
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1881
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1885
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1889
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1893
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1897
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1901
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1905
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1909
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1913
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1917
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1921
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1925
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1929
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1933
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1937
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
<<<<<<< HEAD
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:1940
=======
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1941
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1945
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1949
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:1952
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1960
=======
		//line sql.y:1957
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1974
=======
		//line sql.y:1971
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1978
=======
		//line sql.y:1975
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:1982
=======
		//line sql.y:1979
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2000
=======
		//line sql.y:1997
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2004
=======
		//line sql.y:2001
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2008
=======
		//line sql.y:2005
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 384:
<<<<<<< HEAD
=======
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2015
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 385:
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2019
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
<<<<<<< HEAD
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2022
=======
	case 386:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2023
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 387:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2027
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 388:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2031
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
<<<<<<< HEAD
	case 388:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line sql.y:2034
=======
	case 389:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:2035
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
<<<<<<< HEAD
	case 389:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line sql.y:2038
=======
	case 390:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:2039
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
<<<<<<< HEAD
	case 390:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:2042
=======
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2043
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
<<<<<<< HEAD
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2046
=======
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2047
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
<<<<<<< HEAD
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2050
=======
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2057
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colIdent}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2065
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2069
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2072
=======
		//line sql.y:2074
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2077
=======
		//line sql.y:2079
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2082
=======
		//line sql.y:2084
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2087
=======
		//line sql.y:2089
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
<<<<<<< HEAD
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2092
=======
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2103
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
<<<<<<< HEAD
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2118
=======
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2121
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
<<<<<<< HEAD
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2124
=======
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2125
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
<<<<<<< HEAD
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2128
=======
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2129
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = BooleanModeStr
		}
<<<<<<< HEAD
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line sql.y:2132
=======
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:2133
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = NaturalLanguageModeStr
		}
<<<<<<< HEAD
	case 410:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line sql.y:2136
=======
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2137
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
<<<<<<< HEAD
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2140
=======
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2143
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = QueryExpansionStr
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
<<<<<<< HEAD
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2150
=======
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2153
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
<<<<<<< HEAD
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2156
=======
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2157
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2161
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
<<<<<<< HEAD
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2164
=======
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2165
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal, Charset: string(yyDollar[3].bytes)}
		}
<<<<<<< HEAD
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2168
=======
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2169
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2173
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
<<<<<<< HEAD
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2176
=======
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2179
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
<<<<<<< HEAD
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2182
=======
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2183
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
<<<<<<< HEAD
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2186
=======
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2187
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
<<<<<<< HEAD
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2190
=======
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2191
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2195
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
<<<<<<< HEAD
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2198
=======
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2199
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].optVal}
		}
<<<<<<< HEAD
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2202
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2206
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2211
=======
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2203
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2208
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = nil
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2215
=======
		//line sql.y:2212
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2220
=======
		//line sql.y:2217
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = string("")
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2224
=======
		//line sql.y:2221
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2230
=======
		//line sql.y:2227
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2234
=======
		//line sql.y:2231
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2240
=======
		//line sql.y:2237
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2245
=======
		//line sql.y:2242
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = nil
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2249
=======
		//line sql.y:2246
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2255
=======
		//line sql.y:2252
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2256
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
<<<<<<< HEAD
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line sql.y:2259
=======
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2260
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
<<<<<<< HEAD
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line sql.y:2263
=======
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2266
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2270
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2274
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2278
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2282
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2286
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2290
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2294
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2297
		{
			yyVAL.expr = &NullVal{}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2303
=======
		//line sql.y:2300
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2312
=======
		//line sql.y:2309
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2316
=======
		//line sql.y:2313
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2321
=======
		//line sql.y:2318
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.exprs = nil
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2325
=======
		//line sql.y:2322
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2330
=======
		//line sql.y:2327
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = nil
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2334
=======
		//line sql.y:2331
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2339
=======
		//line sql.y:2336
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.orderBy = nil
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2343
=======
		//line sql.y:2340
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2349
=======
		//line sql.y:2346
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2353
=======
		//line sql.y:2350
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2359
=======
		//line sql.y:2356
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2364
=======
		//line sql.y:2361
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = AscScr
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2368
=======
		//line sql.y:2365
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = AscScr
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2372
=======
		//line sql.y:2369
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = DescScr
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2377
=======
		//line sql.y:2374
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.limit = nil
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2381
=======
		//line sql.y:2378
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2385
=======
		//line sql.y:2382
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2389
=======
		//line sql.y:2386
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2394
=======
		//line sql.y:2391
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2398
=======
		//line sql.y:2395
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ForUpdateStr
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2402
=======
		//line sql.y:2399
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ShareModeStr
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2415
=======
		//line sql.y:2412
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2419
=======
		//line sql.y:2416
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2423
=======
		//line sql.y:2420
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2428
=======
		//line sql.y:2425
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2432
=======
		//line sql.y:2429
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2436
=======
		//line sql.y:2433
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2443
=======
		//line sql.y:2440
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2447
=======
		//line sql.y:2444
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2451
=======
		//line sql.y:2448
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2455
=======
		//line sql.y:2452
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2460
=======
		//line sql.y:2457
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.updateExprs = nil
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2464
=======
		//line sql.y:2461
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2470
=======
		//line sql.y:2467
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2474
=======
		//line sql.y:2471
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2480
=======
		//line sql.y:2477
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2484
=======
		//line sql.y:2481
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2490
=======
		//line sql.y:2487
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2496
=======
		//line sql.y:2493
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2506
=======
		//line sql.y:2503
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2510
=======
		//line sql.y:2507
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2516
=======
		//line sql.y:2513
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2522
=======
		//line sql.y:2519
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2526
=======
		//line sql.y:2523
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2532
=======
		//line sql.y:2529
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2536
=======
		//line sql.y:2533
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2543
=======
		//line sql.y:2540
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.bytes = []byte("charset")
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2550
=======
		//line sql.y:2547
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2554
=======
		//line sql.y:2551
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2558
=======
		//line sql.y:2555
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.expr = &Default{}
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2567
=======
		//line sql.y:2564
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.byt = 0
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2569
=======
		//line sql.y:2566
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.byt = 1
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2572
=======
		//line sql.y:2569
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2574
=======
		//line sql.y:2571
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2577
=======
		//line sql.y:2574
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.str = ""
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2576
		{
			yyVAL.str = IgnoreStr
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2583
=======
		//line sql.y:2580
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2585
=======
		//line sql.y:2582
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2587
=======
		//line sql.y:2584
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2589
=======
		//line sql.y:2586
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2591
=======
		//line sql.y:2588
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2593
=======
		//line sql.y:2590
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2595
=======
		//line sql.y:2592
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2597
=======
		//line sql.y:2594
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2599
=======
		//line sql.y:2596
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2601
=======
		//line sql.y:2598
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2604
=======
		//line sql.y:2601
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2606
=======
		//line sql.y:2603
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2605
		{
			yyVAL.empty = struct{}{}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2612
=======
		//line sql.y:2609
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2614
=======
		//line sql.y:2611
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2617
=======
		//line sql.y:2614
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2619
=======
		//line sql.y:2616
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.empty = struct{}{}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
=======
		//line sql.y:2618
		{
			yyVAL.empty = struct{}{}
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		//line sql.y:2621
		{
			yyVAL.empty = struct{}{}
		}
<<<<<<< HEAD
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2624
=======
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2623
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = ColIdent{}
		}
<<<<<<< HEAD
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line sql.y:2626
=======
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2627
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2631
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
<<<<<<< HEAD
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2634
=======
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2638
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2641
=======
		//line sql.y:2644
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2648
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
<<<<<<< HEAD
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2651
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2658
=======
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2655
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2853
=======
		//line sql.y:2850
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
		//line sql.y:2862
=======
		//line sql.y:2859
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			decNesting(yylex)
		}
	case 707:
<<<<<<< HEAD
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2867
		{
			forceEOF(yylex)
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2872
=======
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2864
		{
			forceEOF(yylex)
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line sql.y:2869
		{
			forceEOF(yylex)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2873
>>>>>>> regain support for 'alter table foo add unique key bar (col)'
		{
			forceEOF(yylex)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2877
		{
			forceEOF(yylex)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line sql.y:2880
		{
			forceEOF(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
