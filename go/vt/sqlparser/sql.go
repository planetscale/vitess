// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const REVERT = 57537
const SCHEMA = 57538
const TABLE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const KEY_BLOCK_SIZE = 57549
const CHECK = 57550
const INDEXES = 57551
const ACTION = 57552
const CASCADE = 57553
const CONSTRAINT = 57554
const FOREIGN = 57555
const NO = 57556
const REFERENCES = 57557
const RESTRICT = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const COALESCE = 57567
const EXCHANGE = 57568
const REBUILD = 57569
const PARTITIONING = 57570
const REMOVE = 57571
const PREPARE = 57572
const MAXVALUE = 57573
const PARTITION = 57574
const REORGANIZE = 57575
const LESS = 57576
const THAN = 57577
const PROCEDURE = 57578
const TRIGGER = 57579
const VINDEX = 57580
const VINDEXES = 57581
const DIRECTORY = 57582
const NAME = 57583
const UPGRADE = 57584
const STATUS = 57585
const VARIABLES = 57586
const WARNINGS = 57587
const CASCADED = 57588
const DEFINER = 57589
const OPTION = 57590
const SQL = 57591
const UNDEFINED = 57592
const SEQUENCE = 57593
const MERGE = 57594
const TEMPORARY = 57595
const TEMPTABLE = 57596
const INVOKER = 57597
const SECURITY = 57598
const FIRST = 57599
const AFTER = 57600
const LAST = 57601
const VITESS_MIGRATION = 57602
const CANCEL = 57603
const RETRY = 57604
const COMPLETE = 57605
const CLEANUP = 57606
const BEGIN = 57607
const START = 57608
const TRANSACTION = 57609
const COMMIT = 57610
const ROLLBACK = 57611
const SAVEPOINT = 57612
const RELEASE = 57613
const WORK = 57614
const BIT = 57615
const TINYINT = 57616
const SMALLINT = 57617
const MEDIUMINT = 57618
const INT = 57619
const INTEGER = 57620
const BIGINT = 57621
const INTNUM = 57622
const REAL = 57623
const DOUBLE = 57624
const FLOAT_TYPE = 57625
const DECIMAL_TYPE = 57626
const NUMERIC = 57627
const TIME = 57628
const TIMESTAMP = 57629
const DATETIME = 57630
const YEAR = 57631
const CHAR = 57632
const VARCHAR = 57633
const BOOL = 57634
const CHARACTER = 57635
const VARBINARY = 57636
const NCHAR = 57637
const TEXT = 57638
const TINYTEXT = 57639
const MEDIUMTEXT = 57640
const LONGTEXT = 57641
const BLOB = 57642
const TINYBLOB = 57643
const MEDIUMBLOB = 57644
const LONGBLOB = 57645
const JSON = 57646
const ENUM = 57647
const GEOMETRY = 57648
const POINT = 57649
const LINESTRING = 57650
const POLYGON = 57651
const GEOMETRYCOLLECTION = 57652
const MULTIPOINT = 57653
const MULTILINESTRING = 57654
const MULTIPOLYGON = 57655
const ASCII = 57656
const UNICODE = 57657
const NULLX = 57658
const AUTO_INCREMENT = 57659
const APPROXNUM = 57660
const SIGNED = 57661
const UNSIGNED = 57662
const ZEROFILL = 57663
const CODE = 57664
const COLLATION = 57665
const COLUMNS = 57666
const DATABASES = 57667
const ENGINES = 57668
const EVENT = 57669
const EXTENDED = 57670
const FIELDS = 57671
const FULL = 57672
const FUNCTION = 57673
const GTID_EXECUTED = 57674
const KEYSPACES = 57675
const OPEN = 57676
const PLUGINS = 57677
const PRIVILEGES = 57678
const PROCESSLIST = 57679
const SCHEMAS = 57680
const TABLES = 57681
const TRIGGERS = 57682
const USER = 57683
const VGTID_EXECUTED = 57684
const VITESS_KEYSPACES = 57685
const VITESS_METADATA = 57686
const VITESS_MIGRATIONS = 57687
const VITESS_REPLICATION_STATUS = 57688
const VITESS_SHARDS = 57689
const VITESS_TABLETS = 57690
const VSCHEMA = 57691
const NAMES = 57692
const GLOBAL = 57693
const SESSION = 57694
const ISOLATION = 57695
const LEVEL = 57696
const READ = 57697
const WRITE = 57698
const ONLY = 57699
const REPEATABLE = 57700
const COMMITTED = 57701
const UNCOMMITTED = 57702
const SERIALIZABLE = 57703
const CURRENT_TIMESTAMP = 57704
const DATABASE = 57705
const CURRENT_DATE = 57706
const CURRENT_TIME = 57707
const LOCALTIME = 57708
const LOCALTIMESTAMP = 57709
const CURRENT_USER = 57710
const UTC_DATE = 57711
const UTC_TIME = 57712
const UTC_TIMESTAMP = 57713
const DAY = 57714
const DAY_HOUR = 57715
const DAY_MICROSECOND = 57716
const DAY_MINUTE = 57717
const DAY_SECOND = 57718
const HOUR = 57719
const HOUR_MICROSECOND = 57720
const HOUR_MINUTE = 57721
const HOUR_SECOND = 57722
const MICROSECOND = 57723
const MINUTE = 57724
const MINUTE_MICROSECOND = 57725
const MINUTE_SECOND = 57726
const MONTH = 57727
const QUARTER = 57728
const SECOND = 57729
const SECOND_MICROSECOND = 57730
const YEAR_MONTH = 57731
const WEEK = 57732
const REPLACE = 57733
const CONVERT = 57734
const CAST = 57735
const SUBSTR = 57736
const SUBSTRING = 57737
const GROUP_CONCAT = 57738
const SEPARATOR = 57739
const TIMESTAMPADD = 57740
const TIMESTAMPDIFF = 57741
const WEIGHT_STRING = 57742
const MATCH = 57743
const AGAINST = 57744
const BOOLEAN = 57745
const LANGUAGE = 57746
const WITH = 57747
const QUERY = 57748
const EXPANSION = 57749
const WITHOUT = 57750
const VALIDATION = 57751
const UNUSED = 57752
const ARRAY = 57753
const CUME_DIST = 57754
const DESCRIPTION = 57755
const DENSE_RANK = 57756
const EMPTY = 57757
const EXCEPT = 57758
const FIRST_VALUE = 57759
const GROUPING = 57760
const GROUPS = 57761
const JSON_TABLE = 57762
const LAG = 57763
const LAST_VALUE = 57764
const LATERAL = 57765
const LEAD = 57766
const MEMBER = 57767
const NTH_VALUE = 57768
const NTILE = 57769
const OF = 57770
const OVER = 57771
const PERCENT_RANK = 57772
const RANK = 57773
const RECURSIVE = 57774
const ROW_NUMBER = 57775
const SYSTEM = 57776
const WINDOW = 57777
const ACTIVE = 57778
const ADMIN = 57779
const BUCKETS = 57780
const CLONE = 57781
const COMPONENT = 57782
const DEFINITION = 57783
const ENFORCED = 57784
const EXCLUDE = 57785
const FOLLOWING = 57786
const GEOMCOLLECTION = 57787
const GET_MASTER_PUBLIC_KEY = 57788
const HISTOGRAM = 57789
const HISTORY = 57790
const INACTIVE = 57791
const INVISIBLE = 57792
const LOCKED = 57793
const MASTER_COMPRESSION_ALGORITHMS = 57794
const MASTER_PUBLIC_KEY_PATH = 57795
const MASTER_TLS_CIPHERSUITES = 57796
const MASTER_ZSTD_COMPRESSION_LEVEL = 57797
const NESTED = 57798
const NETWORK_NAMESPACE = 57799
const NOWAIT = 57800
const NULLS = 57801
const OJ = 57802
const OLD = 57803
const OPTIONAL = 57804
const ORDINALITY = 57805
const ORGANIZATION = 57806
const OTHERS = 57807
const PATH = 57808
const PERSIST = 57809
const PERSIST_ONLY = 57810
const PRECEDING = 57811
const PRIVILEGE_CHECKS_USER = 57812
const PROCESS = 57813
const RANDOM = 57814
const REFERENCE = 57815
const REQUIRE_ROW_FORMAT = 57816
const RESOURCE = 57817
const RESPECT = 57818
const RESTART = 57819
const RETAIN = 57820
const REUSE = 57821
const ROLE = 57822
const SECONDARY = 57823
const SECONDARY_ENGINE = 57824
const SECONDARY_LOAD = 57825
const SECONDARY_UNLOAD = 57826
const SKIP = 57827
const SRID = 57828
const THREAD_PRIORITY = 57829
const TIES = 57830
const UNBOUNDED = 57831
const VCPU = 57832
const VISIBLE = 57833
const FORMAT = 57834
const TREE = 57835
const VITESS = 57836
const TRADITIONAL = 57837
const LOCAL = 57838
const LOW_PRIORITY = 57839
const NO_WRITE_TO_BINLOG = 57840
const LOGS = 57841
const ERROR = 57842
const GENERAL = 57843
const HOSTS = 57844
const OPTIMIZER_COSTS = 57845
const USER_RESOURCES = 57846
const SLOW = 57847
const CHANNEL = 57848
const RELAY = 57849
const EXPORT = 57850
const AVG_ROW_LENGTH = 57851
const CONNECTION = 57852
const CHECKSUM = 57853
const DELAY_KEY_WRITE = 57854
const ENCRYPTION = 57855
const ENGINE = 57856
const INSERT_METHOD = 57857
const MAX_ROWS = 57858
const MIN_ROWS = 57859
const PACK_KEYS = 57860
const PASSWORD = 57861
const FIXED = 57862
const DYNAMIC = 57863
const COMPRESSED = 57864
const REDUNDANT = 57865
const COMPACT = 57866
const ROW_FORMAT = 57867
const STATS_AUTO_RECALC = 57868
const STATS_PERSISTENT = 57869
const STATS_SAMPLE_PAGES = 57870
const STORAGE = 57871
const MEMORY = 57872
const DISK = 57873
const PARTITIONS = 57874
const LINEAR = 57875
const RANGE = 57876
const LIST = 57877
const SUBPARTITION = 57878
const SUBPARTITIONS = 57879
const HASH = 57880

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 45,
	11, 45,
	-2, 35,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 138,
	556, 138,
	-2, 144,
	-1, 46,
	116, 144,
	156, 144,
	310, 144,
	-2, 445,
	-1, 53,
	33, 624,
	215, 624,
	226, 624,
	260, 638,
	261, 638,
	-2, 626,
	-1, 58,
	217, 649,
	-2, 647,
	-1, 110,
	214, 1112,
	-2, 117,
	-1, 112,
	1, 139,
	556, 139,
	-2, 144,
	-1, 122,
	117, 348,
	220, 348,
	-2, 439,
	-1, 141,
	116, 144,
	156, 144,
	310, 144,
	-2, 454,
	-1, 604,
	200, 1133,
	-2, 1129,
	-1, 605,
	200, 1134,
	-2, 1130,
	-1, 677,
	57, 717,
	-2, 727,
	-1, 714,
	132, 1493,
	-2, 110,
	-1, 715,
	132, 1370,
	-2, 111,
	-1, 721,
	132, 1424,
	-2, 1106,
	-1, 864,
	132, 1303,
	-2, 1103,
	-1, 902,
	225, 39,
	230, 39,
	-2, 359,
	-1, 979,
	1, 493,
	556, 493,
	-2, 144,
	-1, 1178,
	57, 718,
	-2, 732,
	-1, 1179,
	57, 719,
	-2, 733,
	-1, 1231,
	116, 144,
	156, 144,
	310, 144,
	-2, 389,
	-1, 1308,
	117, 348,
	220, 348,
	-2, 439,
	-1, 1317,
	225, 40,
	230, 40,
	-2, 360,
	-1, 1568,
	200, 1138,
	-2, 1132,
	-1, 1647,
	116, 144,
	156, 144,
	310, 144,
	-2, 390,
	-1, 1654,
	23, 163,
	-2, 165,
	-1, 1892,
	75, 92,
	84, 92,
	-2, 785,
	-1, 2061,
	47, 1074,
	-2, 1068,
	-1, 2265,
	5, 51,
	16, 51,
	18, 51,
	85, 51,
	-2, 760,
}

const yyPrivate = 57344

const yyLast = 35017

var yyAct = [...]int{
	604, 2525, 2519, 2324, 2476, 2490, 2182, 2403, 2112, 2119,
	1601, 3, 92, 2153, 692, 1835, 1159, 2165, 2121, 1707,
	1193, 670, 2072, 555, 2164, 2075, 2076, 2349, 2236, 1042,
	2354, 2417, 2073, 2230, 607, 1620, 581, 2256, 2167, 598,
	35, 2070, 599, 596, 597, 2062, 552, 1857, 2223, 178,
	1677, 1582, 178, 551, 519, 178, 1924, 1953, 1994, 1605,
	535, 1888, 178, 553, 1697, 1682, 1925, 693, 867, 1865,
	178, 1926, 535, 1633, 719, 34, 990, 36, 1625, 559,
	150, 1180, 547, 178, 1288, 672, 932, 1877, 1849, 1837,
	1519, 1716, 1562, 1512, 136, 1696, 1471, 1749, 2010, 1644,
	1624, 1684, 897, 91, 892, 535, 1019, 1223, 535, 178,
	535, 1918, 564, 674, 1894, 678, 1627, 1202, 1162, 87,
	1584, 1531, 1489, 1061, 1315, 1422, 1331, 1419, 871, 1322,
	1694, 874, 1405, 695, 716, 903, 1612, 898, 875, 1565,
	899, 1220, 1222, 900, 1206, 684, 1040, 1035, 1427, 153,
	1673, 679, 113, 680, 706, 94, 1283, 682, 114, 93,
	72, 910, 1307, 1606, 119, 542, 120, 1131, 975, 85,
	2526, 2150, 81, 1127, 1709, 1944, 1575, 1973, 1972, 2448,
	1946, 1709, 1710, 1711, 1747, 2002, 2003, 681, 73, 700,
	8, 705, 7, 6, 1478, 115, 1579, 1580, 180, 181,
	182, 1477, 1062, 1476, 1475, 1474, 686, 1473, 1460, 121,
	868, 86, 1833, 545, 1391, 546, 2504, 492, 1465, 2058,
	883, 1859, 937, 2136, 2289, 934, 878, 2399, 2398, 543,
	936, 935, 671, 98, 673, 2535, 2486, 2317, 948, 949,
	2318, 952, 953, 954, 955, 1689, 713, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 115, 2529, 687, 889, 694, 913, 720, 1687,
	1093, 888, 100, 101, 74, 104, 74, 76, 110, 890,
	1062, 175, 74, 2459, 487, 914, 938, 939, 940, 74,
	2518, 2408, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1102,
	1101, 1103, 1104, 2325, 668, 1072, 1868, 1787, 677, 2477,
	1735, 945, 2485, 2458, 2009, 2215, 1297, 950, 1903, 1981,
	1224, 1902, 1225, 1980, 1904, 2367, 115, 1560, 2109, 2110,
	1834, 1869, 180, 181, 182, 2108, 708, 709, 1581, 1026,
	887, 1028, 984, 985, 978, 1639, 1640, 2001, 1784, 1638,
	1009, 83, 997, 83, 1014, 1015, 1038, 998, 666, 83,
	665, 1947, 522, 1010, 997, 996, 83, 995, 174, 998,
	1915, 1785, 882, 1003, 2233, 884, 1657, 1656, 1025, 1027,
	2036, 2206, 2204, 1072, 2184, 533, 1166, 522, 1464, 537,
	531, 522, 116, 1954, 1686, 1717, 974, 885, 1068, 1976,
	1755, 1060, 1411, 509, 2011, 158, 522, 1466, 1467, 1468,
	1552, 1541, 1542, 1543, 1544, 1554, 1545, 1546, 1547, 1559,
	1555, 1548, 1549, 1556, 1557, 1558, 1550, 1551, 1553, 1750,
	2528, 951, 2177, 1406, 1032, 522, 1761, 1758, 1760, 1759,
	2178, 1018, 1011, 1016, 1763, 1381, 1764, 1908, 1765, 508,
	1012, 1013, 1004, 1017, 1756, 980, 1037, 1989, 1766, 957,
	506, 956, 155, 2185, 156, 1754, 2505, 2186, 887, 1023,
	879, 1752, 2310, 1024, 173, 891, 1068, 881, 880, 887,
	973, 587, 2125, 1029, 2013, 921, 1720, 178, 1382, 178,
	1383, 893, 178, 2161, 894, 919, 83, 1621, 894, 503,
	1105, 930, 929, 928, 1300, 1022, 1753, 886, 517, 927,
	1030, 926, 925, 924, 923, 2530, 918, 931, 2516, 872,
	535, 535, 535, 514, 906, 885, 1785, 872, 872, 1993,
	2037, 1105, 870, 1420, 1321, 1007, 2523, 905, 535, 535,
	1695, 707, 2143, 977, 1990, 2023, 2022, 2021, 2015, 1741,
	2019, 1054, 2014, 912, 2012, 1416, 523, 1048, 2135, 2017,
	941, 1067, 1064, 1065, 1066, 1071, 1073, 1070, 2016, 1069,
	993, 2409, 999, 1000, 1001, 1002, 1063, 912, 159, 35,
	1975, 523, 2005, 2018, 2020, 523, 493, 164, 495, 510,
	1412, 525, 1688, 524, 499, 1039, 497, 501, 511, 502,
	523, 496, 2160, 507, 1838, 1840, 498, 512, 513, 515,
	529, 528, 516, 1798, 505, 526, 2447, 1945, 1978, 1948,
	1033, 1607, 1608, 922, 1108, 1109, 1110, 1111, 1031, 523,
	1295, 1294, 976, 920, 1116, 886, 1119, 1320, 2234, 1067,
	1064, 1065, 1066, 1071, 1073, 1070, 886, 1069, 1293, 1737,
	911, 1965, 1417, 947, 1063, 1157, 905, 908, 909, 112,
	872, 2395, 2457, 1291, 902, 906, 178, 1044, 1045, 491,
	1996, 486, 2438, 1996, 911, 1995, 77, 912, 1995, 1112,
	1988, 912, 2270, 1987, 178, 1168, 672, 1173, 1106, 1107,
	82, 1158, 82, 1152, 2252, 1171, 1899, 151, 82, 1186,
	1864, 1825, 1105, 535, 1574, 82, 912, 178, 986, 1786,
	1210, 1170, 535, 1139, 983, 1174, 994, 1006, 535, 1410,
	988, 674, 1393, 1392, 1394, 1395, 1396, 73, 1008, 1645,
	1057, 2115, 1055, 1056, 2521, 1104, 1020, 2522, 2107, 2520,
	1428, 716, 1172, 180, 181, 182, 91, 1514, 912, 689,
	1839, 1158, 1133, 1036, 1129, 107, 1130, 2453, 600, 527,
	582, 584, 601, 602, 2306, 580, 583, 603, 1145, 1146,
	1147, 1148, 1494, 992, 911, 2246, 2116, 520, 911, 915,
	905, 933, 1163, 915, 905, 1751, 1495, 1496, 1493, 916,
	1413, 1226, 521, 916, 585, 586, 2380, 1075, 94, 1076,
	1077, 2118, 1058, 911, 2029, 2113, 2031, 1532, 917, 905,
	908, 909, 108, 872, 1515, 1937, 2218, 902, 906, 2123,
	2124, 2496, 1076, 1077, 1736, 2494, 2114, 1532, 1077, 1812,
	1160, 2363, 2281, 671, 2498, 2499, 979, 901, 2217, 2123,
	2124, 1192, 673, 2280, 1169, 911, 2495, 946, 1407, 2212,
	1408, 1724, 1075, 1409, 1076, 1077, 1189, 1330, 2120, 1329,
	1613, 1614, 1319, 1216, 1217, 2533, 1021, 178, 1734, 1732,
	1429, 1284, 1808, 921, 1075, 720, 1076, 1077, 919, 1221,
	1292, 1097, 1098, 1099, 1100, 1102, 1101, 1103, 1104, 152,
	157, 154, 160, 161, 162, 163, 165, 166, 167, 168,
	991, 535, 2531, 1317, 2512, 169, 170, 171, 172, 2271,
	1175, 1326, 1211, 2390, 1187, 1328, 1729, 2340, 535, 535,
	1729, 535, 2122, 535, 535, 2514, 535, 535, 535, 535,
	535, 535, 2210, 1187, 2125, 1099, 1100, 1102, 1101, 1103,
	1104, 535, 2122, 1733, 1807, 178, 1364, 1731, 2339, 1075,
	83, 1076, 1077, 2288, 2125, 1075, 2464, 1076, 1077, 2513,
	1075, 178, 1076, 1077, 1492, 1484, 1486, 1487, 1075, 1313,
	1076, 1077, 535, 2444, 178, 2431, 2532, 1298, 1299, 1187,
	1075, 2287, 1076, 1077, 711, 1418, 1485, 2151, 2465, 178,
	2141, 1306, 1922, 1327, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1102, 1101, 1103, 1104, 178, 1400, 2432, 1075, 1361,
	1076, 1077, 178, 702, 1075, 1921, 1076, 1077, 1359, 1360,
	1692, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	535, 535, 535, 1401, 1187, 1325, 2117, 1367, 1368, 1324,
	2388, 1536, 1386, 1373, 1374, 1333, 1290, 1334, 2307, 1336,
	1338, 1385, 1384, 1342, 1344, 1346, 1348, 1350, 1303, 1316,
	1304, 178, 1302, 1424, 1075, 1398, 1076, 1077, 1375, 1399,
	1323, 1323, 1790, 1791, 1792, 1075, 1369, 1076, 1077, 548,
	1432, 1377, 1366, 1075, 1820, 1076, 1077, 1436, 1365, 1438,
	1439, 1440, 1441, 618, 619, 620, 1445, 1801, 1340, 2435,
	2434, 2433, 1430, 1431, 1388, 1362, 1513, 2362, 2360, 696,
	1459, 180, 181, 182, 1421, 2278, 1435, 1296, 2336, 1522,
	535, 2285, 2277, 1442, 1443, 1444, 1200, 1931, 1397, 115,
	1919, 1490, 889, 1745, 1488, 535, 535, 1497, 888, 1499,
	1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509,
	1510, 1511, 1923, 1744, 1434, 1498, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1079, 1803, 178, 1604, 1387, 535, 1566,
	180, 181, 182, 1802, 1906, 1196, 1455, 1456, 1457, 2181,
	1458, 1075, 1587, 1076, 1077, 1588, 1591, 1075, 1592, 1076,
	1077, 1199, 178, 1517, 1075, 535, 1076, 1077, 180, 181,
	182, 1491, 1705, 1516, 1461, 178, 1533, 1425, 535, 1075,
	1389, 1076, 1077, 178, 1568, 178, 1376, 178, 178, 535,
	1372, 1371, 535, 1370, 1197, 91, 1198, 1075, 1034, 1076,
	1077, 1047, 88, 535, 1570, 1571, 97, 180, 181, 182,
	1566, 1703, 91, 89, 1093, 1187, 2004, 96, 716, 95,
	2416, 716, 2415, 1518, 180, 181, 182, 90, 90, 2384,
	1524, 1525, 1597, 1855, 2527, 1567, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1102, 1101, 1103, 1104, 2383, 1623, 97,
	1569, 2323, 88, 1572, 1573, 1568, 1855, 2483, 535, 90,
	96, 1955, 95, 89, 1698, 1699, 1700, 1187, 1934, 1702,
	1704, 1649, 1855, 2470, 1866, 1663, 1664, 1665, 1666, 686,
	1855, 2468, 1648, 535, 1631, 1187, 1187, 1596, 1873, 535,
	1326, 2460, 1187, 1326, 1658, 1326, 1659, 1660, 1661, 1662,
	1653, 1728, 1718, 1679, 1654, 1652, 1618, 1599, 1855, 2449,
	2315, 2446, 1669, 1670, 1671, 1672, 2502, 1187, 1855, 2391,
	2245, 1685, 1616, 2315, 1187, 1855, 2313, 1729, 1187, 1187,
	1635, 535, 1636, 1513, 2250, 1187, 2133, 2132, 1513, 1513,
	1651, 1093, 1874, 1650, 1089, 1874, 1090, 2129, 2130, 1188,
	1190, 1715, 720, 2129, 2128, 720, 1874, 1187, 1799, 1187,
	1091, 1092, 1088, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1102, 1101, 1103, 1104, 178, 1785, 1974, 1287, 1959, 1951,
	1952, 178, 1680, 1895, 1895, 1730, 178, 178, 1855, 1854,
	178, 1851, 178, 1693, 2071, 1691, 1690, 1701, 178, 1738,
	1675, 1676, 1074, 1187, 2245, 178, 90, 1287, 1286, 1232,
	1231, 96, 2247, 605, 1723, 1680, 1866, 1726, 2102, 1727,
	1722, 1725, 1721, 1739, 1074, 913, 1740, 1785, 2452, 1855,
	1874, 1742, 1743, 178, 535, 2131, 1637, 1799, 2290, 1817,
	1816, 1729, 1729, 914, 1712, 1611, 1896, 1896, 1191, 1577,
	1469, 1415, 1355, 1323, 1218, 1898, 1785, 896, 895, 2473,
	83, 2405, 179, 1799, 1194, 179, 2381, 2374, 179, 676,
	1748, 2305, 2302, 536, 2154, 179, 2283, 1776, 1777, 1799,
	2221, 2220, 1779, 179, 1289, 536, 1928, 2245, 2291, 2292,
	2293, 1780, 2263, 1678, 2179, 2156, 179, 2152, 1960, 1674,
	1668, 1667, 1356, 1357, 1358, 1403, 1490, 1318, 1314, 1285,
	109, 1794, 1093, 1796, 1797, 1769, 978, 1927, 536, 2509,
	2294, 536, 179, 536, 1352, 2257, 2258, 2183, 2406, 1795,
	1689, 2491, 2260, 1078, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1102, 1101, 1103, 1104, 2148, 83, 2147, 178, 2146,
	2071, 1879, 1882, 1883, 1884, 1880, 178, 1881, 1885, 1938,
	2507, 1125, 1770, 1783, 1928, 1093, 535, 2295, 2296, 2262,
	1462, 1353, 1354, 2093, 1831, 2091, 1491, 535, 2094, 2095,
	2092, 1883, 1884, 2344, 2090, 2343, 1793, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1102, 1101, 1103, 1104, 2089, 548,
	178, 178, 1870, 1095, 1096, 1097, 1098, 1099, 1100, 1102,
	1101, 1103, 1104, 2484, 1603, 1195, 1905, 1595, 2251, 1568,
	2051, 2050, 1811, 1957, 2430, 1879, 1882, 1883, 1884, 1880,
	35, 1881, 1885, 2342, 1856, 2257, 2258, 1809, 2238, 1890,
	2353, 2063, 2065, 690, 2355, 2241, 2237, 1414, 2060, 1852,
	2066, 691, 664, 2127, 1913, 1932, 943, 1528, 942, 2193,
	535, 1927, 1185, 1181, 1163, 178, 1832, 1185, 1181, 88,
	1567, 1529, 178, 1822, 1823, 1889, 1842, 1182, 1999, 1967,
	89, 1203, 1182, 1853, 535, 1046, 1848, 1966, 116, 1916,
	1917, 535, 2243, 90, 1950, 1326, 1326, 1893, 1909, 1863,
	535, 2144, 1593, 1594, 1184, 1773, 1183, 1178, 1179, 1184,
	2445, 1183, 1971, 1613, 1614, 1900, 2401, 1897, 1685, 2126,
	97, 1907, 1910, 178, 178, 178, 178, 178, 88, 1887,
	1600, 96, 1762, 95, 2224, 90, 2049, 698, 699, 89,
	178, 178, 90, 1930, 2048, 1789, 589, 97, 95, 2422,
	1920, 2421, 2361, 2359, 2358, 1929, 178, 2351, 96, 96,
	95, 1935, 2303, 2242, 1939, 1940, 1941, 1969, 2240, 2157,
	1713, 1301, 97, 697, 1513, 2350, 2231, 1306, 1866, 2511,
	2510, 2511, 1851, 96, 1818, 1212, 1204, 1167, 102, 103,
	2436, 2276, 672, 688, 99, 84, 535, 1, 1534, 613,
	1968, 2028, 1535, 2493, 504, 1578, 534, 1161, 518, 2489,
	1970, 1390, 535, 1380, 2326, 2402, 1956, 1719, 669, 1961,
	1962, 2006, 178, 2301, 1683, 2041, 535, 904, 1188, 1576,
	141, 1646, 2007, 1647, 2479, 535, 1991, 106, 865, 105,
	907, 1005, 535, 535, 1714, 178, 178, 178, 178, 178,
	2068, 718, 1997, 2316, 869, 1998, 876, 178, 1914, 1598,
	2008, 1655, 178, 178, 2041, 178, 2083, 2025, 178, 178,
	178, 2024, 1238, 1236, 1237, 1235, 1240, 1239, 1234, 1819,
	1463, 678, 2077, 2054, 532, 1886, 176, 2040, 1227, 2053,
	1205, 944, 494, 2134, 1746, 500, 2042, 1117, 2047, 1901,
	179, 1174, 179, 2142, 2055, 179, 717, 2052, 710, 178,
	2079, 2235, 2059, 2061, 2101, 1858, 2064, 679, 2074, 680,
	2057, 2429, 535, 2074, 2085, 2086, 2103, 2088, 91, 2104,
	2352, 535, 2471, 536, 536, 536, 178, 2100, 2046, 1911,
	1201, 2163, 2105, 2096, 1424, 2084, 178, 1810, 2087, 1124,
	1530, 536, 536, 1628, 1586, 1483, 557, 556, 554, 2111,
	1844, 178, 1867, 2138, 178, 1080, 608, 2137, 1836, 2082,
	2043, 2044, 2045, 1213, 2194, 1878, 1426, 1876, 1875, 1771,
	1632, 2171, 2170, 2259, 2139, 2140, 2255, 1626, 1850, 565,
	2158, 558, 550, 606, 1685, 2162, 2174, 2273, 2169, 1977,
	2180, 1979, 1912, 2176, 2159, 1059, 1177, 544, 877, 1527,
	2407, 2393, 1788, 2214, 1176, 1539, 1540, 2149, 178, 2189,
	2188, 1706, 61, 39, 539, 2503, 1050, 704, 2195, 32,
	31, 30, 29, 28, 23, 22, 2202, 21, 20, 2196,
	19, 25, 18, 17, 2191, 2192, 16, 111, 48, 45,
	43, 118, 117, 46, 42, 981, 40, 27, 1479, 1480,
	1481, 1482, 26, 2225, 2226, 15, 2199, 2200, 14, 2201,
	13, 12, 2203, 178, 2205, 2232, 2207, 2239, 11, 179,
	10, 9, 5, 4, 2244, 33, 1053, 24, 2264, 2,
	1943, 2279, 2229, 1708, 0, 2261, 178, 179, 1520, 1521,
	0, 0, 0, 0, 0, 0, 1526, 2266, 0, 0,
	0, 0, 0, 0, 178, 0, 536, 178, 178, 178,
	179, 1561, 2274, 2254, 2275, 536, 0, 535, 535, 2171,
	2170, 536, 0, 0, 2267, 0, 0, 2308, 2309, 0,
	0, 0, 0, 2268, 2269, 0, 0, 0, 0, 548,
	0, 0, 0, 0, 535, 535, 535, 535, 2284, 0,
	2286, 0, 0, 0, 0, 0, 2322, 0, 0, 0,
	0, 0, 0, 0, 2311, 0, 0, 2320, 2321, 0,
	0, 0, 0, 1609, 1610, 0, 0, 0, 1800, 0,
	0, 0, 1804, 0, 1805, 1806, 0, 0, 178, 2335,
	0, 0, 0, 1814, 0, 0, 1815, 0, 0, 0,
	1643, 0, 0, 0, 2331, 0, 0, 0, 0, 0,
	0, 535, 0, 535, 0, 0, 0, 0, 0, 0,
	2332, 2368, 1821, 2348, 2357, 2356, 0, 672, 0, 1826,
	1827, 1828, 1829, 1830, 2366, 1598, 2372, 2370, 2364, 2347,
	0, 0, 0, 0, 0, 0, 1843, 0, 0, 35,
	2077, 0, 0, 0, 2077, 0, 718, 718, 718, 1681,
	2379, 0, 0, 0, 0, 0, 535, 0, 0, 0,
	179, 0, 0, 0, 1049, 1051, 2389, 0, 2385, 0,
	0, 0, 0, 2387, 0, 2074, 535, 2386, 0, 0,
	0, 0, 2396, 2397, 0, 0, 2376, 2377, 0, 0,
	0, 0, 535, 0, 536, 0, 535, 535, 0, 0,
	0, 0, 0, 2392, 0, 2404, 0, 0, 0, 0,
	0, 536, 536, 2425, 536, 0, 536, 536, 2428, 536,
	536, 536, 536, 536, 536, 535, 2426, 2423, 2424, 0,
	0, 0, 535, 0, 536, 2440, 0, 2439, 179, 672,
	1155, 0, 2443, 2437, 0, 0, 0, 0, 2441, 0,
	0, 0, 0, 0, 179, 0, 535, 178, 0, 0,
	2077, 0, 0, 2451, 0, 536, 2454, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 0, 0, 0, 535,
	0, 35, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 535, 535, 179, 2469, 2472, 0, 2466,
	2478, 535, 2474, 0, 179, 179, 179, 179, 179, 179,
	179, 179, 179, 536, 536, 536, 0, 2500, 0, 1208,
	2492, 2497, 2404, 2480, 0, 35, 0, 0, 718, 0,
	2506, 0, 0, 0, 1228, 2508, 0, 0, 0, 0,
	0, 0, 0, 535, 179, 0, 0, 0, 0, 0,
	2517, 0, 0, 2515, 2524, 0, 2074, 0, 0, 2035,
	0, 0, 2038, 2039, 0, 0, 0, 0, 0, 2534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 0, 0, 0, 0, 0, 0,
	0, 2080, 0, 0, 0, 174, 0, 0, 536, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 2098, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 536, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 536, 0, 0, 0, 0, 179, 0, 179, 0,
	179, 179, 536, 0, 0, 536, 0, 0, 0, 155,
	0, 156, 0, 0, 0, 0, 536, 869, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 0, 0, 0,
	1155, 0, 0, 0, 1332, 1332, 0, 1332, 0, 1332,
	1332, 0, 1341, 1332, 1332, 1332, 1332, 1332, 0, 0,
	2198, 0, 0, 0, 0, 1155, 1155, 869, 0, 0,
	0, 0, 0, 0, 2208, 2209, 2211, 2213, 0, 0,
	0, 536, 0, 0, 2219, 0, 0, 0, 0, 0,
	2222, 0, 0, 0, 0, 0, 2227, 0, 1402, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2248, 2249,
	0, 0, 2253, 0, 0, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	2265, 0, 0, 0, 536, 0, 718, 718, 718, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2026, 2027, 0, 0, 0, 2030, 0, 0, 0,
	2032, 2033, 2034, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 0, 179,
	179, 0, 0, 179, 2314, 179, 590, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 179, 0,
	2069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1523, 0, 0, 0,
	0, 0, 0, 1155, 151, 0, 179, 536, 0, 0,
	0, 1537, 1538, 0, 0, 177, 718, 0, 490, 0,
	0, 530, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 1590, 0, 0, 0, 0, 685,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2155, 0, 0, 0, 703, 0, 703, 0, 0,
	0, 1602, 0, 0, 0, 490, 0, 74, 37, 38,
	76, 0, 0, 0, 1208, 0, 0, 718, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 80, 718, 0,
	0, 41, 67, 68, 0, 65, 69, 0, 0, 869,
	0, 0, 0, 0, 66, 0, 0, 0, 0, 2400,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 2410, 2411, 2412, 0, 2413, 2414, 536,
	0, 2418, 0, 54, 0, 2216, 0, 0, 0, 0,
	536, 0, 0, 0, 83, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 876, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 179, 0, 0, 0, 2442, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 869,
	0, 0, 548, 0, 0, 876, 152, 157, 154, 160,
	161, 162, 163, 165, 166, 167, 168, 2456, 0, 0,
	0, 0, 169, 170, 171, 172, 0, 2461, 0, 0,
	0, 0, 0, 2462, 2463, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 0, 0, 0, 869, 179, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	2475, 0, 0, 0, 0, 0, 0, 536, 0, 0,
	0, 0, 0, 0, 536, 0, 2304, 0, 0, 0,
	0, 615, 75, 536, 44, 47, 50, 49, 52, 0,
	64, 0, 2319, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 179, 179, 179,
	179, 0, 0, 0, 0, 53, 79, 78, 0, 0,
	62, 63, 51, 179, 179, 0, 0, 0, 71, 0,
	0, 0, 0, 0, 2333, 0, 2334, 0, 0, 179,
	1164, 2337, 2338, 0, 0, 0, 0, 0, 0, 0,
	1782, 0, 0, 0, 0, 675, 0, 75, 0, 0,
	0, 0, 0, 55, 56, 0, 57, 58, 59, 60,
	2365, 0, 0, 0, 0, 675, 0, 0, 0, 536,
	0, 2373, 0, 0, 2375, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 0, 536, 2378, 0, 0, 0,
	0, 0, 538, 0, 0, 179, 0, 2382, 0, 536,
	667, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 536, 536, 0, 179, 179,
	179, 179, 179, 0, 0, 0, 548, 0, 0, 0,
	179, 0, 0, 0, 0, 179, 179, 0, 179, 873,
	0, 179, 179, 179, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 490, 0, 490, 0, 0, 490, 0,
	0, 0, 0, 0, 2427, 548, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 77,
	0, 0, 179, 1860, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 0, 536, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 0, 548, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1933, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 2501, 0, 0,
	1602, 179, 0, 0, 0, 0, 0, 1958, 0, 0,
	0, 0, 0, 0, 0, 0, 1963, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	685, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	179, 179, 179, 0, 0, 0, 0, 0, 0, 0,
	536, 536, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 536, 536,
	536, 0, 2056, 0, 0, 0, 0, 0, 0, 0,
	0, 718, 0, 0, 0, 1155, 0, 0, 2081, 1332,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1041, 1041, 1041, 536, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 0, 982, 0, 987,
	0, 0, 989, 0, 0, 0, 0, 0, 869, 0,
	0, 1155, 0, 490, 0, 0, 0, 1602, 675, 1113,
	1114, 1115, 0, 1118, 0, 1120, 1121, 1122, 1123, 536,
	1126, 1128, 1128, 0, 1128, 1132, 1132, 1134, 1135, 1136,
	1137, 1138, 0, 1140, 1141, 1142, 1143, 1144, 0, 536,
	0, 0, 1132, 1132, 1132, 1132, 0, 0, 0, 0,
	1156, 0, 0, 0, 0, 536, 0, 0, 0, 536,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1156, 1156, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 536, 0,
	0, 0, 0, 0, 0, 536, 0, 1378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1165,
	490, 0, 0, 675, 0, 0, 0, 675, 0, 536,
	179, 0, 0, 675, 0, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 0, 536, 0, 0, 0, 0, 1446, 1447, 490,
	490, 490, 490, 490, 490, 490, 536, 536, 0, 0,
	0, 0, 0, 0, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 1602, 1602, 0, 0, 1215, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2327, 2328, 2329, 2330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 0, 0, 0, 0, 0, 0, 703, 703, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 703, 1423, 703, 703, 703,
	703, 703, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155, 0, 0, 0, 0, 2369, 0, 2371,
	0, 1378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 1423, 1255, 490,
	0, 490, 1602, 490, 1634, 116, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1233, 158, 0,
	0, 0, 718, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2419, 0,
	0, 0, 2419, 2419, 0, 0, 0, 0, 0, 148,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1602, 0, 0, 0, 155, 0, 156, 1602, 0,
	0, 0, 0, 125, 126, 147, 146, 173, 0, 0,
	0, 0, 0, 0, 0, 1363, 0, 0, 0, 0,
	0, 0, 1602, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1041, 1041, 1041, 1404, 1243, 0, 0, 0, 0,
	0, 0, 0, 1155, 0, 2467, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 718,
	718, 0, 0, 0, 0, 1433, 0, 2487, 0, 0,
	0, 0, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	142, 123, 149, 130, 122, 0, 143, 144, 0, 0,
	490, 159, 0, 0, 0, 0, 0, 490, 0, 1602,
	164, 131, 490, 490, 0, 1256, 490, 0, 1774, 0,
	0, 1472, 0, 0, 490, 134, 132, 127, 128, 129,
	133, 490, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 1269, 1272,
	1273, 1274, 1275, 1276, 1277, 0, 1278, 1279, 1280, 1281,
	1282, 1257, 1258, 1259, 1260, 1241, 1242, 1270, 0, 1244,
	0, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1629, 0,
	151, 0, 0, 0, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	703, 703, 0, 0, 0, 1615, 0, 0, 0, 0,
	0, 1423, 0, 1619, 490, 1622, 0, 0, 1472, 0,
	0, 0, 1378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 1942, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 157, 154, 160, 161, 162, 163, 165,
	166, 167, 168, 0, 0, 0, 0, 0, 169, 170,
	171, 172, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 490,
	490, 490, 490, 490, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 138, 1472, 0, 490, 490, 0, 0,
	0, 1757, 0, 0, 158, 0, 1767, 1768, 0, 0,
	1772, 0, 490, 0, 0, 0, 0, 0, 1775, 0,
	0, 0, 0, 0, 0, 1778, 703, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 703, 0, 1781, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 156, 0, 0, 0, 0, 0, 1309,
	1310, 147, 146, 173, 0, 0, 0, 0, 490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1156, 0, 0, 1824, 0,
	1156, 490, 490, 490, 490, 490, 0, 0, 0, 0,
	0, 0, 0, 2097, 0, 1841, 0, 0, 490, 1378,
	0, 490, 0, 0, 490, 2106, 1423, 0, 0, 0,
	0, 0, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1871, 1872, 0, 0, 0, 0, 0, 0,
	0, 1891, 0, 0, 0, 490, 142, 1311, 149, 0,
	1308, 0, 143, 144, 0, 0, 0, 159, 0, 0,
	0, 1156, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 0,
	490, 1892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1936, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1982, 1983, 1984, 1985, 1986, 0, 0,
	0, 0, 490, 0, 0, 0, 0, 0, 0, 0,
	1472, 1992, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 145, 0, 490, 490, 490, 2000, 0, 0, 0,
	0, 0, 0, 1629, 139, 0, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2078, 0, 75, 0, 0, 1629, 1629, 1629, 1629,
	1629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1891, 0, 0, 1629, 0, 0, 1629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 157,
	154, 160, 161, 162, 163, 165, 166, 167, 168, 2168,
	0, 0, 0, 0, 169, 170, 171, 172, 0, 0,
	83, 0, 0, 0, 0, 0, 609, 616, 617, 618,
	619, 620, 610, 612, 0, 0, 0, 611, 0, 2145,
	614, 621, 622, 0, 0, 0, 0, 0, 0, 0,
	0, 2197, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2175, 0, 0, 0,
	0, 0, 0, 2172, 2173, 0, 0, 0, 0, 0,
	0, 2187, 0, 0, 2190, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 0, 0, 0, 0,
	0, 0, 0, 490, 1629, 0, 0, 0, 2228, 0,
	0, 0, 0, 0, 0, 0, 0, 2272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2297, 0, 0, 2298, 2299, 2300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2341, 0, 2345, 2346, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2078,
	83, 75, 0, 2078, 0, 0, 609, 616, 617, 618,
	619, 620, 610, 612, 0, 0, 0, 611, 0, 0,
	614, 621, 622, 0, 0, 0, 600, 0, 0, 0,
	601, 602, 0, 0, 0, 603, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2394, 2172, 2173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 623, 624, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 0, 0, 0, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 847, 833, 412, 0, 780, 850, 750, 768, 860,
	771, 774, 814, 729, 793, 335, 765, 2455, 754, 725,
	760, 726, 752, 782, 239, 749, 835, 797, 849, 291,
	236, 731, 755, 349, 770, 189, 816, 388, 224, 301,
	298, 419, 250, 242, 238, 223, 275, 307, 347, 406,
	341, 856, 295, 803, 0, 397, 320, 0, 0, 0,
	784, 839, 791, 829, 779, 815, 739, 802, 851, 766,
	811, 852, 281, 222, 188, 332, 398, 254, 0, 0,
	0, 0, 180, 181, 182, 0, 2481, 0, 2482, 0,
	0, 0, 0, 0, 0, 213, 0, 220, 762, 808,
	846, 763, 810, 234, 279, 241, 233, 416, 857, 838,
	0, 0, 205, 848, 786, 0, 813, 0, 863, 724,
	805, 0, 727, 730, 859, 842, 758, 244, 0, 0,
	0, 0, 0, 0, 0, 783, 792, 826, 777, 0,
	0, 0, 0, 0, 0, 0, 756, 0, 801, 0,
	0, 0, 735, 728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 781, 0, 0, 0, 738,
	0, 757, 827, 0, 722, 262, 732, 321, 0, 831,
	841, 778, 449, 845, 776, 775, 821, 736, 837, 769,
	290, 734, 287, 184, 201, 0, 767, 331, 371, 377,
	836, 753, 761, 225, 759, 375, 345, 433, 209, 252,
	368, 350, 373, 820, 800, 818, 374, 296, 421, 363,
	431, 450, 451, 232, 325, 440, 410, 446, 462, 202,
	229, 339, 403, 436, 394, 318, 417, 418, 286, 393,
	260, 187, 294, 456, 200, 383, 217, 207, 193, 405,
	429, 214, 386, 0, 0, 464, 195, 427, 402, 314,
	283, 284, 194, 0, 367, 237, 258, 227, 334, 424,
	425, 226, 465, 204, 445, 197, 1043, 444, 327, 420,
	428, 315, 306, 196, 426, 313, 305, 289, 248, 269,
	361, 299, 362, 270, 323, 322, 324, 190, 437, 0,
	191, 0, 399, 438, 466, 210, 211, 212, 748, 247,
	251, 257, 259, 265, 266, 273, 292, 338, 360, 358,
	364, 832, 415, 432, 441, 448, 454, 455, 457, 458,
	459, 460, 461, 326, 272, 395, 288, 297, 824, 862,
	344, 376, 215, 435, 396, 743, 747, 741, 742, 795,
	796, 744, 853, 854, 855, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 828, 737, 0, 745, 746, 0,
	834, 843, 844, 485, 799, 183, 198, 293, 858, 365,
	255, 463, 443, 439, 723, 740, 231, 751, 0, 0,
	764, 772, 773, 785, 787, 788, 789, 790, 317, 806,
	807, 809, 817, 819, 823, 825, 830, 840, 861, 185,
	186, 199, 208, 218, 230, 245, 253, 263, 268, 271,
	276, 277, 280, 285, 303, 308, 309, 310, 311, 328,
	329, 330, 333, 336, 337, 340, 342, 343, 346, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	422, 423, 434, 447, 452, 264, 430, 453, 0, 302,
	798, 804, 304, 249, 267, 278, 812, 442, 401, 203,
	372, 256, 192, 221, 206, 228, 243, 246, 282, 312,
	319, 348, 352, 261, 240, 219, 369, 216, 387, 407,
	408, 409, 411, 316, 235, 351, 794, 822, 300, 413,
	414, 274, 847, 833, 412, 0, 780, 850, 750, 768,
	860, 771, 774, 814, 729, 793, 335, 765, 0, 754,
	725, 760, 726, 752, 782, 239, 749, 835, 797, 849,
	291, 236, 731, 755, 349, 770, 189, 816, 388, 224,
	301, 298, 419, 250, 242, 238, 223, 275, 307, 347,
	406, 341, 856, 295, 803, 0, 397, 320, 0, 0,
	0, 784, 839, 791, 829, 779, 815, 739, 802, 851,
	766, 811, 852, 281, 222, 188, 332, 398, 254, 0,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 220, 762,
	808, 846, 763, 810, 234, 279, 241, 233, 416, 857,
	838, 0, 0, 205, 848, 786, 0, 813, 0, 863,
	724, 805, 0, 727, 730, 859, 842, 758, 244, 0,
	0, 0, 0, 0, 0, 0, 783, 792, 826, 777,
	0, 0, 0, 0, 0, 2107, 0, 756, 0, 801,
	0, 0, 0, 735, 728, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 781, 0, 0, 0,
	738, 0, 757, 827, 0, 722, 262, 732, 321, 0,
	831, 841, 778, 449, 845, 776, 775, 821, 736, 837,
	769, 290, 734, 287, 184, 201, 0, 767, 331, 371,
	377, 836, 753, 761, 225, 759, 375, 345, 433, 209,
	252, 368, 350, 373, 820, 800, 818, 374, 296, 421,
	363, 431, 450, 451, 232, 325, 440, 410, 446, 462,
	202, 229, 339, 403, 436, 394, 318, 417, 418, 286,
	393, 260, 187, 294, 456, 200, 383, 217, 207, 193,
	405, 429, 214, 386, 0, 0, 464, 195, 427, 402,
	314, 283, 284, 194, 0, 367, 237, 258, 227, 334,
	424, 425, 226, 465, 204, 445, 197, 1043, 444, 327,
	420, 428, 315, 306, 196, 426, 313, 305, 289, 248,
	269, 361, 299, 362, 270, 323, 322, 324, 190, 437,
	0, 191, 0, 399, 438, 466, 210, 211, 212, 748,
	247, 251, 257, 259, 265, 266, 273, 292, 338, 360,
	358, 364, 832, 415, 432, 441, 448, 454, 455, 457,
	458, 459, 460, 461, 326, 272, 395, 288, 297, 824,
	862, 344, 376, 215, 435, 396, 743, 747, 741, 742,
	795, 796, 744, 853, 854, 855, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 828, 737, 0, 745, 746,
	0, 834, 843, 844, 485, 799, 183, 198, 293, 858,
	365, 255, 463, 443, 439, 723, 740, 231, 751, 0,
	0, 764, 772, 773, 785, 787, 788, 789, 790, 317,
	806, 807, 809, 817, 819, 823, 825, 830, 840, 861,
	185, 186, 199, 208, 218, 230, 245, 253, 263, 268,
	271, 276, 277, 280, 285, 303, 308, 309, 310, 311,
	328, 329, 330, 333, 336, 337, 340, 342, 343, 346,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 422, 423, 434, 447, 452, 264, 430, 453, 0,
	302, 798, 804, 304, 249, 267, 278, 812, 442, 401,
	203, 372, 256, 192, 221, 206, 228, 243, 246, 282,
	312, 319, 348, 352, 261, 240, 219, 369, 216, 387,
	407, 408, 409, 411, 316, 235, 351, 794, 822, 300,
	413, 414, 274, 847, 833, 412, 0, 780, 850, 750,
	768, 860, 771, 774, 814, 729, 793, 335, 765, 0,
	754, 725, 760, 726, 752, 782, 239, 749, 835, 797,
	849, 291, 236, 731, 755, 349, 770, 189, 816, 388,
	224, 301, 298, 419, 250, 242, 238, 223, 275, 307,
	347, 406, 341, 856, 295, 803, 0, 397, 320, 0,
	0, 0, 784, 839, 791, 829, 779, 815, 739, 802,
	851, 766, 811, 852, 281, 222, 188, 332, 398, 254,
	0, 0, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 220,
	762, 808, 846, 763, 810, 234, 279, 241, 233, 416,
	857, 838, 0, 0, 205, 848, 786, 0, 813, 0,
	863, 724, 805, 0, 727, 730, 859, 842, 758, 244,
	0, 0, 0, 0, 0, 0, 0, 783, 792, 826,
	777, 0, 0, 0, 0, 0, 2067, 0, 756, 0,
	801, 0, 0, 0, 735, 728, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 781, 0, 0,
	0, 738, 0, 757, 827, 0, 722, 262, 732, 321,
	0, 831, 841, 778, 449, 845, 776, 775, 821, 736,
	837, 769, 290, 734, 287, 184, 201, 0, 767, 331,
	371, 377, 836, 753, 761, 225, 759, 375, 345, 433,
	209, 252, 368, 350, 373, 820, 800, 818, 374, 296,
	421, 363, 431, 450, 451, 232, 325, 440, 410, 446,
	462, 202, 229, 339, 403, 436, 394, 318, 417, 418,
	286, 393, 260, 187, 294, 456, 200, 383, 217, 207,
	193, 405, 429, 214, 386, 0, 0, 464, 195, 427,
	402, 314, 283, 284, 194, 0, 367, 237, 258, 227,
	334, 424, 425, 226, 465, 204, 445, 197, 1043, 444,
	327, 420, 428, 315, 306, 196, 426, 313, 305, 289,
	248, 269, 361, 299, 362, 270, 323, 322, 324, 190,
	437, 0, 191, 0, 399, 438, 466, 210, 211, 212,
	748, 247, 251, 257, 259, 265, 266, 273, 292, 338,
	360, 358, 364, 832, 415, 432, 441, 448, 454, 455,
	457, 458, 459, 460, 461, 326, 272, 395, 288, 297,
	824, 862, 344, 376, 215, 435, 396, 743, 747, 741,
	742, 795, 796, 744, 853, 854, 855, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 828, 737, 0, 745,
	746, 0, 834, 843, 844, 485, 799, 183, 198, 293,
	858, 365, 255, 463, 443, 439, 723, 740, 231, 751,
	0, 0, 764, 772, 773, 785, 787, 788, 789, 790,
	317, 806, 807, 809, 817, 819, 823, 825, 830, 840,
	861, 185, 186, 199, 208, 218, 230, 245, 253, 263,
	268, 271, 276, 277, 280, 285, 303, 308, 309, 310,
	311, 328, 329, 330, 333, 336, 337, 340, 342, 343,
	346, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 422, 423, 434, 447, 452, 264, 430, 453,
	0, 302, 798, 804, 304, 249, 267, 278, 812, 442,
	401, 203, 372, 256, 192, 221, 206, 228, 243, 246,
	282, 312, 319, 348, 352, 261, 240, 219, 369, 216,
	387, 407, 408, 409, 411, 316, 235, 351, 794, 822,
	300, 413, 414, 274, 847, 833, 412, 0, 780, 850,
	750, 768, 860, 771, 774, 814, 729, 793, 335, 765,
	0, 754, 725, 760, 726, 752, 782, 239, 749, 835,
	797, 849, 291, 236, 731, 755, 349, 770, 189, 816,
	388, 224, 301, 298, 419, 250, 242, 238, 223, 275,
	307, 347, 406, 341, 856, 295, 803, 0, 397, 320,
	0, 0, 0, 784, 839, 791, 829, 779, 815, 739,
	802, 851, 766, 811, 852, 281, 222, 188, 332, 398,
	254, 0, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	220, 762, 808, 846, 763, 810, 234, 279, 241, 233,
	416, 857, 838, 0, 0, 205, 848, 786, 0, 813,
	0, 863, 724, 805, 0, 727, 730, 859, 842, 758,
	244, 0, 0, 0, 0, 0, 0, 0, 783, 792,
	826, 777, 0, 0, 0, 0, 0, 1617, 0, 756,
	0, 801, 0, 0, 0, 735, 728, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 781, 0,
	0, 0, 738, 0, 757, 827, 0, 722, 262, 732,
	321, 0, 831, 841, 778, 449, 845, 776, 775, 821,
	736, 837, 769, 290, 734, 287, 184, 201, 0, 767,
	331, 371, 377, 836, 753, 761, 225, 759, 375, 345,
	433, 209, 252, 368, 350, 373, 820, 800, 818, 374,
	296, 421, 363, 431, 450, 451, 232, 325, 440, 410,
	446, 462, 202, 229, 339, 403, 436, 394, 318, 417,
	418, 286, 393, 260, 187, 294, 456, 200, 383, 217,
	207, 193, 405, 429, 214, 386, 0, 0, 464, 195,
	427, 402, 314, 283, 284, 194, 0, 367, 237, 258,
	227, 334, 424, 425, 226, 465, 204, 445, 197, 1043,
	444, 327, 420, 428, 315, 306, 196, 426, 313, 305,
	289, 248, 269, 361, 299, 362, 270, 323, 322, 324,
	190, 437, 0, 191, 0, 399, 438, 466, 210, 211,
	212, 748, 247, 251, 257, 259, 265, 266, 273, 292,
	338, 360, 358, 364, 832, 415, 432, 441, 448, 454,
	455, 457, 458, 459, 460, 461, 326, 272, 395, 288,
	297, 824, 862, 344, 376, 215, 435, 396, 743, 747,
	741, 742, 795, 796, 744, 853, 854, 855, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 828, 737, 0,
	745, 746, 0, 834, 843, 844, 485, 799, 183, 198,
	293, 858, 365, 255, 463, 443, 439, 723, 740, 231,
	751, 0, 0, 764, 772, 773, 785, 787, 788, 789,
	790, 317, 806, 807, 809, 817, 819, 823, 825, 830,
	840, 861, 185, 186, 199, 208, 218, 230, 245, 253,
	263, 268, 271, 276, 277, 280, 285, 303, 308, 309,
	310, 311, 328, 329, 330, 333, 336, 337, 340, 342,
	343, 346, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 422, 423, 434, 447, 452, 264, 430,
	453, 0, 302, 798, 804, 304, 249, 267, 278, 812,
	442, 401, 203, 372, 256, 192, 221, 206, 228, 243,
	246, 282, 312, 319, 348, 352, 261, 240, 219, 369,
	216, 387, 407, 408, 409, 411, 316, 235, 351, 794,
	822, 300, 413, 414, 274, 847, 833, 412, 0, 780,
	850, 750, 768, 860, 771, 774, 814, 729, 793, 335,
	765, 0, 754, 725, 760, 726, 752, 782, 239, 749,
	835, 797, 849, 291, 236, 731, 755, 349, 770, 189,
	816, 388, 224, 301, 298, 419, 250, 242, 238, 223,
	275, 307, 347, 406, 341, 856, 295, 803, 0, 397,
	320, 0, 0, 0, 784, 839, 791, 829, 779, 815,
	739, 802, 851, 766, 811, 852, 281, 222, 188, 332,
	398, 254, 0, 83, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 220, 762, 808, 846, 763, 810, 234, 279, 241,
	233, 416, 857, 838, 0, 0, 205, 848, 786, 0,
	813, 0, 863, 724, 805, 0, 727, 730, 859, 842,
	758, 244, 0, 0, 0, 0, 0, 0, 0, 783,
	792, 826, 777, 0, 0, 0, 0, 0, 0, 0,
	756, 0, 801, 0, 0, 0, 735, 728, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 781,
	0, 0, 0, 738, 0, 757, 827, 0, 722, 262,
	732, 321, 0, 831, 841, 778, 449, 845, 776, 775,
	821, 736, 837, 769, 290, 734, 287, 184, 201, 0,
	767, 331, 371, 377, 836, 753, 761, 225, 759, 375,
	345, 433, 209, 252, 368, 350, 373, 820, 800, 818,
	374, 296, 421, 363, 431, 450, 451, 232, 325, 440,
	410, 446, 462, 202, 229, 339, 403, 436, 394, 318,
	417, 418, 286, 393, 260, 187, 294, 456, 200, 383,
	217, 207, 193, 405, 429, 214, 386, 0, 0, 464,
	195, 427, 402, 314, 283, 284, 194, 0, 367, 237,
	258, 227, 334, 424, 425, 226, 465, 204, 445, 197,
	1043, 444, 327, 420, 428, 315, 306, 196, 426, 313,
	305, 289, 248, 269, 361, 299, 362, 270, 323, 322,
	324, 190, 437, 0, 191, 0, 399, 438, 466, 210,
	211, 212, 748, 247, 251, 257, 259, 265, 266, 273,
	292, 338, 360, 358, 364, 832, 415, 432, 441, 448,
	454, 455, 457, 458, 459, 460, 461, 326, 272, 395,
	288, 297, 824, 862, 344, 376, 215, 435, 396, 743,
	747, 741, 742, 795, 796, 744, 853, 854, 855, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 828, 737,
	0, 745, 746, 0, 834, 843, 844, 485, 799, 183,
	198, 293, 858, 365, 255, 463, 443, 439, 723, 740,
	231, 751, 0, 0, 764, 772, 773, 785, 787, 788,
	789, 790, 317, 806, 807, 809, 817, 819, 823, 825,
	830, 840, 861, 185, 186, 199, 208, 218, 230, 245,
	253, 263, 268, 271, 276, 277, 280, 285, 303, 308,
	309, 310, 311, 328, 329, 330, 333, 336, 337, 340,
	342, 343, 346, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 422, 423, 434, 447, 452, 264,
	430, 453, 0, 302, 798, 804, 304, 249, 267, 278,
	812, 442, 401, 203, 372, 256, 192, 221, 206, 228,
	243, 246, 282, 312, 319, 348, 352, 261, 240, 219,
	369, 216, 387, 407, 408, 409, 411, 316, 235, 351,
	794, 822, 300, 413, 414, 274, 847, 833, 412, 0,
	780, 850, 750, 768, 860, 771, 774, 814, 729, 793,
	335, 765, 0, 754, 725, 760, 726, 752, 782, 239,
	749, 835, 797, 849, 291, 236, 731, 755, 349, 770,
	189, 816, 388, 224, 301, 298, 419, 250, 242, 238,
	223, 275, 307, 347, 406, 341, 856, 295, 803, 0,
	397, 320, 0, 0, 0, 784, 839, 791, 829, 779,
	815, 739, 802, 851, 766, 811, 852, 281, 222, 188,
	332, 398, 254, 0, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 220, 762, 808, 846, 763, 810, 234, 279,
	241, 233, 416, 857, 838, 0, 0, 205, 848, 786,
	0, 813, 0, 863, 724, 805, 0, 727, 730, 859,
	842, 758, 244, 0, 0, 0, 0, 0, 0, 0,
	783, 792, 826, 777, 0, 0, 0, 0, 0, 0,
	0, 756, 0, 801, 0, 0, 0, 735, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	781, 0, 0, 0, 738, 0, 757, 827, 0, 722,
	262, 732, 321, 0, 831, 841, 778, 449, 845, 776,
	775, 821, 736, 837, 769, 290, 734, 287, 184, 201,
	0, 767, 331, 371, 377, 836, 753, 761, 225, 759,
	375, 345, 433, 209, 252, 368, 350, 373, 820, 800,
	818, 374, 296, 421, 363, 431, 450, 451, 232, 325,
	440, 410, 446, 462, 202, 229, 339, 403, 436, 394,
	318, 417, 418, 286, 393, 260, 187, 294, 456, 200,
	383, 217, 207, 193, 405, 429, 214, 386, 0, 0,
	464, 195, 427, 402, 314, 283, 284, 194, 0, 367,
	237, 258, 227, 334, 424, 425, 226, 465, 204, 445,
	197, 1043, 444, 327, 420, 428, 315, 306, 196, 426,
	313, 305, 289, 248, 269, 361, 299, 362, 270, 323,
	322, 324, 190, 437, 0, 191, 0, 399, 438, 466,
	210, 211, 212, 748, 247, 251, 257, 259, 265, 266,
	273, 292, 338, 360, 358, 364, 832, 415, 432, 441,
	448, 454, 455, 457, 458, 459, 460, 461, 326, 272,
	395, 288, 297, 824, 862, 344, 376, 215, 435, 396,
	743, 747, 741, 742, 795, 796, 744, 853, 854, 855,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 828,
	737, 0, 745, 746, 0, 834, 843, 844, 485, 799,
	183, 198, 293, 858, 365, 255, 463, 443, 439, 723,
	740, 231, 751, 0, 0, 764, 772, 773, 785, 787,
	788, 789, 790, 317, 806, 807, 809, 817, 819, 823,
	825, 830, 840, 861, 185, 186, 199, 208, 218, 230,
	245, 253, 263, 268, 271, 276, 277, 280, 285, 303,
	308, 309, 310, 311, 328, 329, 330, 333, 336, 337,
	340, 342, 343, 346, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 422, 423, 434, 447, 452,
	264, 430, 453, 0, 302, 798, 804, 304, 249, 267,
	278, 812, 442, 401, 203, 372, 256, 192, 221, 206,
	228, 243, 246, 282, 312, 319, 348, 352, 261, 240,
	219, 369, 216, 387, 407, 408, 409, 411, 316, 235,
	351, 794, 822, 300, 413, 414, 274, 847, 833, 412,
	0, 780, 850, 750, 768, 860, 771, 774, 814, 729,
	793, 335, 765, 0, 754, 725, 760, 726, 752, 782,
	239, 749, 835, 797, 849, 291, 236, 731, 755, 349,
	770, 189, 816, 388, 224, 301, 298, 419, 250, 242,
	238, 223, 275, 307, 347, 406, 341, 856, 295, 803,
	0, 397, 320, 0, 0, 0, 784, 839, 791, 829,
	779, 815, 739, 802, 851, 766, 811, 852, 281, 222,
	188, 332, 398, 254, 0, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 220, 762, 808, 846, 763, 810, 234,
	279, 241, 233, 416, 857, 838, 0, 0, 864, 848,
	786, 0, 813, 0, 863, 724, 805, 0, 727, 730,
	859, 842, 758, 244, 0, 0, 0, 0, 0, 0,
	0, 783, 792, 826, 777, 0, 0, 0, 0, 0,
	0, 0, 756, 0, 801, 0, 0, 0, 735, 728,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 781, 0, 0, 0, 738, 0, 757, 827, 0,
	722, 262, 732, 321, 0, 831, 841, 778, 449, 845,
	776, 775, 821, 736, 837, 769, 290, 734, 287, 184,
	201, 0, 767, 331, 371, 377, 836, 753, 761, 225,
	759, 375, 345, 433, 209, 252, 368, 350, 373, 820,
	800, 818, 374, 296, 421, 363, 431, 450, 451, 232,
	325, 440, 410, 446, 462, 202, 229, 339, 403, 436,
	394, 318, 417, 418, 286, 393, 260, 187, 294, 456,
	200, 383, 217, 207, 193, 405, 429, 214, 386, 0,
	0, 464, 195, 427, 402, 314, 283, 284, 194, 0,
	367, 237, 258, 227, 334, 424, 425, 226, 465, 204,
	445, 197, 733, 444, 327, 420, 428, 315, 306, 196,
	426, 313, 305, 289, 248, 269, 361, 299, 362, 270,
	323, 322, 324, 190, 437, 0, 191, 0, 399, 438,
	466, 210, 211, 212, 748, 247, 251, 257, 259, 265,
	266, 273, 292, 338, 360, 358, 364, 832, 415, 432,
	441, 448, 454, 455, 457, 458, 459, 460, 461, 721,
	715, 714, 288, 297, 824, 862, 344, 376, 215, 435,
	396, 743, 747, 741, 742, 795, 796, 744, 853, 854,
	855, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	828, 737, 0, 745, 746, 0, 834, 843, 844, 485,
	799, 183, 198, 293, 858, 365, 255, 463, 443, 439,
	723, 740, 231, 751, 0, 0, 764, 772, 773, 785,
	787, 788, 789, 790, 317, 806, 807, 809, 817, 819,
	823, 825, 830, 840, 861, 185, 186, 199, 208, 218,
	230, 245, 253, 263, 268, 271, 276, 277, 280, 285,
	303, 308, 309, 310, 311, 328, 329, 330, 333, 336,
	337, 340, 342, 343, 346, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 422, 423, 434, 447,
	452, 264, 430, 453, 0, 302, 798, 804, 304, 249,
	267, 278, 812, 442, 401, 203, 372, 256, 192, 221,
	206, 228, 243, 246, 282, 312, 319, 348, 352, 261,
	240, 219, 369, 216, 387, 407, 408, 409, 411, 316,
	235, 351, 794, 822, 300, 413, 414, 274, 847, 833,
	412, 0, 780, 850, 750, 768, 860, 771, 774, 814,
	729, 793, 335, 765, 0, 754, 725, 760, 726, 752,
	782, 239, 749, 835, 797, 849, 291, 236, 731, 755,
	349, 770, 189, 816, 388, 224, 301, 298, 419, 250,
	242, 238, 223, 275, 307, 347, 406, 341, 856, 295,
	803, 0, 397, 320, 0, 0, 0, 784, 839, 791,
	829, 779, 815, 739, 802, 851, 766, 811, 852, 281,
	222, 188, 332, 398, 254, 0, 0, 0, 0, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 220, 762, 808, 846, 763, 810,
	234, 279, 241, 233, 416, 857, 838, 0, 0, 864,
	848, 786, 0, 813, 0, 863, 724, 805, 0, 727,
	730, 859, 842, 758, 244, 0, 0, 0, 0, 0,
	0, 0, 783, 792, 826, 777, 0, 0, 0, 0,
	0, 0, 0, 756, 0, 801, 0, 0, 0, 735,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 781, 0, 0, 0, 738, 0, 757, 827,
	0, 722, 262, 732, 321, 0, 831, 841, 778, 449,
	845, 776, 775, 821, 736, 837, 769, 290, 734, 287,
	184, 201, 0, 767, 331, 371, 377, 836, 753, 761,
	225, 759, 375, 345, 433, 209, 252, 368, 350, 373,
	820, 800, 818, 374, 296, 421, 363, 431, 450, 451,
	232, 325, 440, 410, 446, 462, 202, 229, 339, 403,
	436, 394, 318, 417, 418, 286, 393, 260, 187, 294,
	456, 200, 383, 217, 207, 193, 405, 1219, 214, 386,
	0, 0, 464, 195, 427, 402, 314, 283, 284, 194,
	0, 367, 237, 258, 227, 334, 424, 425, 226, 465,
	204, 445, 197, 733, 444, 327, 420, 428, 315, 306,
	196, 426, 313, 305, 289, 248, 269, 361, 299, 362,
	270, 323, 322, 324, 190, 437, 0, 191, 0, 399,
	438, 466, 210, 211, 212, 748, 247, 251, 257, 259,
	265, 266, 273, 292, 338, 360, 358, 364, 832, 415,
	432, 441, 448, 454, 455, 457, 458, 459, 460, 461,
	721, 715, 714, 288, 297, 824, 862, 344, 376, 215,
	435, 396, 743, 747, 741, 742, 795, 796, 744, 853,
	854, 855, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 828, 737, 0, 745, 746, 0, 834, 843, 844,
	485, 799, 183, 198, 293, 858, 365, 255, 463, 443,
	439, 723, 740, 231, 751, 0, 0, 764, 772, 773,
	785, 787, 788, 789, 790, 317, 806, 807, 809, 817,
	819, 823, 825, 830, 840, 861, 185, 186, 199, 208,
	218, 230, 245, 253, 263, 268, 271, 276, 277, 280,
	285, 303, 308, 309, 310, 311, 328, 329, 330, 333,
	336, 337, 340, 342, 343, 346, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 422, 423, 434,
	447, 452, 264, 430, 453, 0, 302, 798, 804, 304,
	249, 267, 278, 812, 442, 401, 203, 372, 256, 192,
	221, 206, 228, 243, 246, 282, 312, 319, 348, 352,
	261, 240, 219, 369, 216, 387, 407, 408, 409, 411,
	316, 235, 351, 794, 822, 300, 413, 414, 274, 847,
	833, 412, 0, 780, 850, 750, 768, 860, 771, 774,
	814, 729, 793, 335, 765, 0, 754, 725, 760, 726,
	752, 782, 239, 749, 835, 797, 849, 291, 236, 731,
	755, 349, 770, 189, 816, 388, 224, 301, 298, 419,
	250, 242, 238, 223, 275, 307, 347, 406, 341, 856,
	295, 803, 0, 397, 320, 0, 0, 0, 784, 839,
	791, 829, 779, 815, 739, 802, 851, 766, 811, 852,
	281, 222, 188, 332, 398, 254, 0, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 220, 762, 808, 846, 763,
	810, 234, 279, 241, 233, 416, 857, 838, 0, 0,
	864, 848, 786, 0, 813, 0, 863, 724, 805, 0,
	727, 730, 859, 842, 758, 244, 0, 0, 0, 0,
	0, 0, 0, 783, 792, 826, 777, 0, 0, 0,
	0, 0, 0, 0, 756, 0, 801, 0, 0, 0,
	735, 728, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 781, 0, 0, 0, 738, 0, 757,
	827, 0, 722, 262, 732, 321, 0, 831, 841, 778,
	449, 845, 776, 775, 821, 736, 837, 769, 290, 734,
	287, 184, 201, 0, 767, 331, 371, 377, 836, 753,
	761, 225, 759, 375, 345, 433, 209, 252, 368, 350,
	373, 820, 800, 818, 374, 296, 421, 363, 431, 450,
	451, 232, 325, 440, 410, 446, 462, 202, 229, 339,
	403, 436, 394, 318, 417, 418, 286, 393, 260, 187,
	294, 456, 200, 383, 217, 207, 193, 405, 712, 214,
	386, 0, 0, 464, 195, 427, 402, 314, 283, 284,
	194, 0, 367, 237, 258, 227, 334, 424, 425, 226,
	465, 204, 445, 197, 733, 444, 327, 420, 428, 315,
	306, 196, 426, 313, 305, 289, 248, 269, 361, 299,
	362, 270, 323, 322, 324, 190, 437, 0, 191, 0,
	399, 438, 466, 210, 211, 212, 748, 247, 251, 257,
	259, 265, 266, 273, 292, 338, 360, 358, 364, 832,
	415, 432, 441, 448, 454, 455, 457, 458, 459, 460,
	461, 721, 715, 714, 288, 297, 824, 862, 344, 376,
	215, 435, 396, 743, 747, 741, 742, 795, 796, 744,
	853, 854, 855, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 828, 737, 0, 745, 746, 0, 834, 843,
	844, 485, 799, 183, 198, 293, 858, 365, 255, 463,
	443, 439, 723, 740, 231, 751, 0, 0, 764, 772,
	773, 785, 787, 788, 789, 790, 317, 806, 807, 809,
	817, 819, 823, 825, 830, 840, 861, 185, 186, 199,
	208, 218, 230, 245, 253, 263, 268, 271, 276, 277,
	280, 285, 303, 308, 309, 310, 311, 328, 329, 330,
	333, 336, 337, 340, 342, 343, 346, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 422, 423,
	434, 447, 452, 264, 430, 453, 0, 302, 798, 804,
	304, 249, 267, 278, 812, 442, 401, 203, 372, 256,
	192, 221, 206, 228, 243, 246, 282, 312, 319, 348,
	352, 261, 240, 219, 369, 216, 387, 407, 408, 409,
	411, 316, 235, 351, 794, 822, 300, 413, 414, 274,
	412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 1563, 0, 566, 0, 0,
	0, 239, 571, 0, 0, 0, 291, 236, 0, 1564,
	349, 0, 189, 0, 388, 224, 301, 298, 419, 250,
	242, 238, 223, 275, 307, 347, 406, 341, 578, 295,
	0, 0, 397, 320, 0, 0, 0, 0, 0, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	222, 188, 332, 398, 254, 0, 83, 0, 0, 180,
	181, 182, 609, 616, 617, 618, 619, 620, 610, 612,
	0, 0, 213, 611, 220, 587, 614, 621, 622, 0,
	234, 279, 241, 233, 416, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 549, 563, 0,
	577, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 701, 0, 0, 0, 594, 0, 562, 0, 0,
	570, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 321, 0, 593, 0, 0, 449,
	0, 0, 591, 0, 0, 0, 0, 290, 0, 287,
	184, 201, 0, 0, 331, 371, 377, 0, 0, 0,
	225, 0, 375, 345, 433, 209, 252, 368, 350, 373,
	0, 0, 0, 374, 296, 421, 363, 431, 450, 451,
	232, 325, 440, 410, 446, 462, 202, 229, 339, 403,
	436, 394, 318, 417, 418, 286, 393, 260, 187, 294,
	456, 200, 383, 217, 207, 193, 405, 429, 214, 386,
	0, 0, 464, 195, 427, 402, 314, 283, 284, 194,
	0, 367, 237, 258, 227, 334, 424, 425, 226, 465,
	204, 445, 197, 0, 444, 327, 420, 428, 315, 306,
	196, 426, 313, 305, 289, 248, 269, 361, 299, 362,
	270, 323, 322, 324, 190, 437, 0, 191, 0, 399,
	438, 466, 210, 211, 212, 0, 247, 251, 257, 259,
	265, 266, 273, 292, 338, 360, 358, 364, 0, 415,
	432, 441, 448, 454, 455, 457, 458, 459, 460, 461,
	326, 272, 395, 288, 297, 0, 0, 344, 376, 215,
	435, 396, 600, 592, 582, 584, 601, 602, 579, 580,
	583, 603, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 595, 569, 568, 0, 575, 576, 0, 585, 586,
	588, 567, 183, 198, 293, 0, 365, 255, 463, 443,
	439, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 186, 199, 208,
	218, 230, 245, 253, 263, 268, 271, 276, 277, 280,
	285, 303, 308, 309, 310, 311, 328, 329, 330, 333,
	336, 337, 340, 342, 343, 346, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 422, 423, 434,
	447, 452, 264, 430, 453, 0, 302, 0, 0, 304,
	249, 267, 278, 0, 442, 401, 203, 372, 256, 192,
	221, 206, 228, 243, 246, 282, 312, 319, 348, 352,
	261, 240, 219, 369, 216, 387, 407, 408, 409, 411,
	316, 235, 351, 412, 0, 300, 413, 414, 274, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	566, 0, 0, 0, 239, 571, 0, 0, 0, 291,
	236, 0, 0, 349, 0, 189, 0, 388, 224, 301,
	298, 419, 250, 242, 238, 223, 275, 307, 347, 406,
	341, 578, 295, 0, 0, 397, 320, 0, 0, 0,
	0, 0, 573, 574, 0, 0, 0, 0, 0, 0,
	1641, 0, 281, 222, 188, 332, 398, 254, 0, 83,
	0, 0, 180, 181, 182, 609, 616, 617, 618, 619,
	620, 610, 612, 0, 0, 213, 611, 220, 587, 614,
	621, 622, 1642, 234, 279, 241, 233, 416, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	549, 563, 0, 577, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 0, 0, 0, 0, 594, 0,
	562, 0, 0, 570, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 321, 0, 593,
	0, 0, 449, 0, 0, 591, 0, 0, 0, 0,
	290, 0, 287, 184, 201, 0, 0, 331, 371, 377,
	0, 0, 0, 225, 0, 375, 345, 433, 209, 252,
	368, 350, 373, 0, 0, 0, 374, 296, 421, 363,
	431, 450, 451, 232, 325, 440, 410, 446, 462, 202,
	229, 339, 403, 436, 394, 318, 417, 418, 286, 393,
	260, 187, 294, 456, 200, 383, 217, 207, 193, 405,
	429, 214, 386, 0, 0, 464, 195, 427, 402, 314,
	283, 284, 194, 0, 367, 237, 258, 227, 334, 424,
	425, 226, 465, 204, 445, 197, 0, 444, 327, 420,
	428, 315, 306, 196, 426, 313, 305, 289, 248, 269,
	361, 299, 362, 270, 323, 322, 324, 190, 437, 0,
	191, 0, 399, 438, 466, 210, 211, 212, 0, 247,
	251, 257, 259, 265, 266, 273, 292, 338, 360, 358,
	364, 0, 415, 432, 441, 448, 454, 455, 457, 458,
	459, 460, 461, 326, 272, 395, 288, 297, 0, 0,
	344, 376, 215, 435, 396, 600, 592, 582, 584, 601,
	602, 579, 580, 583, 603, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 595, 569, 568, 0, 575, 576,
	0, 585, 586, 588, 567, 183, 198, 293, 0, 365,
	255, 463, 443, 439, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	186, 199, 208, 218, 230, 245, 253, 263, 268, 271,
	276, 277, 280, 285, 303, 308, 309, 310, 311, 328,
	329, 330, 333, 336, 337, 340, 342, 343, 346, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	422, 423, 434, 447, 452, 264, 430, 453, 0, 302,
	0, 0, 304, 249, 267, 278, 0, 442, 401, 203,
	372, 256, 192, 221, 206, 228, 243, 246, 282, 312,
	319, 348, 352, 261, 240, 219, 369, 216, 387, 407,
	408, 409, 411, 316, 235, 351, 74, 412, 300, 413,
	414, 274, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 566, 0, 0, 0, 239, 571,
	0, 0, 0, 291, 236, 0, 0, 349, 0, 189,
	0, 388, 224, 301, 298, 419, 250, 242, 238, 223,
	275, 307, 347, 406, 341, 578, 295, 0, 0, 397,
	320, 0, 0, 0, 0, 0, 573, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 222, 188, 332,
	398, 254, 0, 83, 0, 0, 180, 181, 182, 609,
	616, 617, 618, 619, 620, 610, 612, 0, 0, 213,
	611, 220, 587, 614, 621, 622, 0, 234, 279, 241,
	233, 416, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 549, 563, 0, 577, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 561, 0, 0,
	0, 0, 594, 0, 562, 0, 0, 570, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 572,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 321, 0, 593, 0, 0, 449, 0, 0, 591,
	0, 0, 0, 0, 290, 0, 287, 184, 201, 0,
	0, 331, 371, 377, 0, 0, 0, 225, 0, 375,
	345, 433, 209, 252, 368, 350, 373, 0, 0, 0,
	374, 296, 421, 363, 431, 450, 451, 232, 325, 440,
	410, 446, 462, 202, 229, 339, 403, 436, 394, 318,
	417, 418, 286, 393, 260, 187, 294, 456, 200, 383,
	217, 207, 193, 405, 429, 214, 386, 0, 0, 464,
	195, 427, 402, 314, 283, 284, 194, 0, 367, 237,
	258, 227, 334, 424, 425, 226, 465, 204, 445, 197,
	0, 444, 327, 420, 428, 315, 306, 196, 426, 313,
	305, 289, 248, 269, 361, 299, 362, 270, 323, 322,
	324, 190, 437, 0, 191, 0, 399, 438, 466, 210,
	211, 212, 0, 247, 251, 257, 259, 265, 266, 273,
	292, 338, 360, 358, 364, 0, 415, 432, 441, 448,
	454, 455, 457, 458, 459, 460, 461, 326, 272, 395,
	288, 297, 0, 0, 344, 376, 215, 435, 396, 600,
	592, 582, 584, 601, 602, 579, 580, 583, 603, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 595, 569,
	568, 0, 575, 576, 0, 585, 586, 588, 567, 183,
	198, 293, 82, 365, 255, 463, 443, 439, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 186, 199, 208, 218, 230, 245,
	253, 263, 268, 271, 276, 277, 280, 285, 303, 308,
	309, 310, 311, 328, 329, 330, 333, 336, 337, 340,
	342, 343, 346, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 422, 423, 434, 447, 452, 264,
	430, 453, 0, 302, 0, 0, 304, 249, 267, 278,
	0, 442, 401, 203, 372, 256, 192, 221, 206, 228,
	243, 246, 282, 312, 319, 348, 352, 261, 240, 219,
	369, 216, 387, 407, 408, 409, 411, 316, 235, 351,
	412, 0, 300, 413, 414, 274, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 566, 0, 0,
	0, 239, 571, 0, 0, 0, 291, 236, 0, 0,
	349, 0, 189, 0, 388, 224, 301, 298, 419, 250,
	242, 238, 223, 275, 307, 347, 406, 341, 578, 295,
	0, 0, 397, 320, 0, 0, 0, 0, 0, 573,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	222, 188, 332, 398, 254, 0, 83, 0, 0, 180,
	181, 182, 609, 616, 617, 618, 619, 620, 610, 612,
	0, 0, 213, 611, 220, 587, 614, 621, 622, 0,
	234, 279, 241, 233, 416, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 549, 563, 0,
	577, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	561, 0, 0, 0, 0, 594, 0, 562, 0, 0,
	570, 623, 624, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 321, 0, 593, 0, 0, 449,
	0, 0, 591, 0, 0, 0, 0, 290, 0, 287,
	184, 201, 0, 0, 331, 371, 377, 0, 0, 0,
	225, 0, 375, 345, 433, 209, 252, 368, 350, 373,
	0, 2450, 0, 374, 296, 421, 363, 431, 450, 451,
	232, 325, 440, 410, 446, 462, 202, 229, 339, 403,
	436, 394, 318, 417, 418, 286, 393, 260, 187, 294,
	456, 200, 383, 217, 207, 193, 405, 429, 214, 386,
	0, 0, 464, 195, 427, 402, 314, 283, 284, 194,
	0, 367, 237, 258, 227, 334, 424, 425, 226, 465,
	204, 445, 197, 0, 444, 327, 420, 428, 315, 306,
	196, 426, 313, 305, 289, 248, 269, 361, 299, 362,
	270, 323, 322, 324, 190, 437, 0, 191, 0, 399,
	438, 466, 210, 211, 212, 0, 247, 251, 257, 259,
	265, 266, 273, 292, 338, 360, 358, 364, 0, 415,
	432, 441, 448, 454, 455, 457, 458, 459, 460, 461,
	326, 272, 395, 288, 297, 0, 0, 344, 376, 215,
	435, 396, 600, 592, 582, 584, 601, 602, 579, 580,
	583, 603, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 595, 569, 568, 0, 575, 576, 0, 585, 586,
	588, 567, 183, 198, 293, 0, 365, 255, 463, 443,
	439, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 186, 199, 208,
	218, 230, 245, 253, 263, 268, 271, 276, 277, 280,
	285, 303, 308, 309, 310, 311, 328, 329, 330, 333,
	336, 337, 340, 342, 343, 346, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 422, 423, 434,
	447, 452, 264, 430, 453, 0, 302, 0, 0, 304,
	249, 267, 278, 0, 442, 401, 203, 372, 256, 192,
	221, 206, 228, 243, 246, 282, 312, 319, 348, 352,
	261, 240, 219, 369, 216, 387, 407, 408, 409, 411,
	316, 235, 351, 412, 0, 300, 413, 414, 274, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	566, 0, 0, 0, 239, 571, 0, 0, 0, 291,
	236, 0, 0, 349, 0, 189, 0, 388, 224, 301,
	298, 419, 250, 242, 238, 223, 275, 307, 347, 406,
	341, 578, 295, 0, 0, 397, 320, 0, 0, 0,
	0, 0, 573, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 222, 188, 332, 398, 254, 0, 83,
	0, 1187, 180, 181, 182, 609, 616, 617, 618, 619,
	620, 610, 612, 0, 0, 213, 611, 220, 587, 614,
	621, 622, 0, 234, 279, 241, 233, 416, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	549, 563, 0, 577, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 561, 0, 0, 0, 0, 594, 0,
	562, 0, 0, 570, 623, 624, 625, 626, 627, 628,
	629, 630, 631, 632, 633, 634, 635, 636, 637, 638,
	639, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 650, 651, 652, 653, 654, 655, 656, 657, 658,
	659, 660, 661, 662, 663, 572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 321, 0, 593,
	0, 0, 449, 0, 0, 591, 0, 0, 0, 0,
	290, 0, 287, 184, 201, 0, 0, 331, 371, 377,
	0, 0, 0, 225, 0, 375, 345, 433, 209, 252,
	368, 350, 373, 0, 0, 0, 374, 296, 421, 363,
	431, 450, 451, 232, 325, 440, 410, 446, 462, 202,
	229, 339, 403, 436, 394, 318, 417, 418, 286, 393,
	260, 187, 294, 456, 200, 383, 217, 207, 193, 405,
	429, 214, 386, 0, 0, 464, 195, 427, 402, 314,
	283, 284, 194, 0, 367, 237, 258, 227, 334, 424,
	425, 226, 465, 204, 445, 197, 0, 444, 327, 420,
	428, 315, 306, 196, 426, 313, 305, 289, 248, 269,
	361, 299, 362, 270, 323, 322, 324, 190, 437, 0,
	191, 0, 399, 438, 466, 210, 211, 212, 0, 247,
	251, 257, 259, 265, 266, 273, 292, 338, 360, 358,
	364, 0, 415, 432, 441, 448, 454, 455, 457, 458,
	459, 460, 461, 326, 272, 395, 288, 297, 0, 0,
	344, 376, 215, 435, 396, 600, 592, 582, 584, 601,
	602, 579, 580, 583, 603, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 595, 569, 568, 0, 575, 576,
	0, 585, 586, 588, 567, 183, 198, 293, 0, 365,
	255, 463, 443, 439, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	186, 199, 208, 218, 230, 245, 253, 263, 268, 271,
	276, 277, 280, 285, 303, 308, 309, 310, 311, 328,
	329, 330, 333, 336, 337, 340, 342, 343, 346, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	422, 423, 434, 447, 452, 264, 430, 453, 0, 302,
	0, 0, 304, 249, 267, 278, 0, 442, 401, 203,
	372, 256, 192, 221, 206, 228, 243, 246, 282, 312,
	319, 348, 352, 261, 240, 219, 369, 216, 387, 407,
	408, 409, 411, 316, 235, 351, 412, 0, 300, 413,
	414, 274, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 566, 0, 0, 0, 239, 571, 0,
	0, 0, 291, 236, 0, 0, 349, 0, 189, 0,
	388, 224, 301, 298, 419, 250, 242, 238, 223, 275,
	307, 347, 406, 341, 578, 295, 0, 0, 397, 320,
	0, 0, 0, 0, 0, 573, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 222, 188, 332, 398,
	254, 0, 83, 0, 0, 180, 181, 182, 609, 616,
	617, 618, 619, 620, 610, 612, 0, 0, 213, 611,
	220, 587, 614, 621, 622, 0, 234, 279, 241, 233,
	416, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 549, 563, 0, 577, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 701, 0, 0,
	0, 594, 0, 562, 0, 0, 570, 623, 624, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	321, 0, 593, 0, 0, 449, 0, 0, 591, 0,
	0, 0, 0, 290, 0, 287, 184, 201, 0, 0,
	331, 371, 377, 0, 0, 0, 225, 0, 375, 345,
	433, 209, 252, 368, 350, 373, 0, 0, 0, 374,
	296, 421, 363, 431, 450, 451, 232, 325, 440, 410,
	446, 462, 202, 229, 339, 403, 436, 394, 318, 417,
	418, 286, 393, 260, 187, 294, 456, 200, 383, 217,
	207, 193, 405, 429, 214, 386, 0, 0, 464, 195,
	427, 402, 314, 283, 284, 194, 0, 367, 237, 258,
	227, 334, 424, 425, 226, 465, 204, 445, 197, 0,
	444, 327, 420, 428, 315, 306, 196, 426, 313, 305,
	289, 248, 269, 361, 299, 362, 270, 323, 322, 324,
	190, 437, 0, 191, 0, 399, 438, 466, 210, 211,
	212, 0, 247, 251, 257, 259, 265, 266, 273, 292,
	338, 360, 358, 364, 0, 415, 432, 441, 448, 454,
	455, 457, 458, 459, 460, 461, 326, 272, 395, 288,
	297, 0, 0, 344, 376, 215, 435, 396, 600, 592,
	582, 584, 601, 602, 579, 580, 583, 603, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 595, 569, 568,
	0, 575, 576, 0, 585, 586, 588, 567, 183, 198,
	293, 0, 365, 255, 463, 443, 439, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 186, 199, 208, 218, 230, 245, 253,
	263, 268, 271, 276, 277, 280, 285, 303, 308, 309,
	310, 311, 328, 329, 330, 333, 336, 337, 340, 342,
	343, 346, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 422, 423, 434, 447, 452, 264, 430,
	453, 0, 302, 0, 0, 304, 249, 267, 278, 0,
	442, 401, 203, 372, 256, 192, 221, 206, 228, 243,
	246, 282, 312, 319, 348, 352, 261, 240, 219, 369,
	216, 387, 407, 408, 409, 411, 316, 235, 351, 412,
	0, 300, 413, 414, 274, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 566, 0, 0, 0,
	239, 571, 0, 0, 0, 291, 236, 0, 0, 349,
	0, 189, 0, 388, 224, 301, 298, 419, 250, 242,
	238, 223, 275, 307, 347, 406, 341, 578, 295, 0,
	0, 397, 320, 0, 0, 0, 0, 0, 573, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 222,
	188, 332, 398, 254, 0, 83, 0, 0, 180, 181,
	182, 609, 616, 617, 618, 619, 620, 610, 612, 0,
	0, 213, 611, 220, 587, 614, 621, 622, 0, 234,
	279, 241, 233, 416, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 549, 563, 0, 577,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 561,
	0, 0, 0, 0, 594, 0, 562, 0, 0, 570,
	623, 624, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 636, 637, 638, 639, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 321, 0, 593, 0, 0, 449, 0,
	0, 591, 0, 0, 0, 0, 290, 0, 287, 184,
	201, 0, 0, 331, 371, 377, 0, 0, 0, 225,
	0, 375, 345, 433, 209, 252, 368, 350, 373, 0,
	0, 0, 374, 296, 421, 363, 431, 450, 451, 232,
	325, 440, 410, 446, 462, 202, 229, 339, 403, 436,
	394, 318, 417, 418, 286, 393, 260, 187, 294, 456,
	200, 383, 217, 207, 193, 405, 429, 214, 386, 0,
	0, 464, 195, 427, 402, 314, 283, 284, 194, 0,
	367, 237, 258, 227, 334, 424, 425, 226, 465, 204,
	445, 197, 0, 444, 327, 420, 428, 315, 306, 196,
	426, 313, 305, 289, 248, 269, 361, 299, 362, 270,
	323, 322, 324, 190, 437, 0, 191, 0, 399, 438,
	466, 210, 211, 212, 0, 247, 251, 257, 259, 265,
	266, 273, 292, 338, 360, 358, 364, 0, 415, 432,
	441, 448, 454, 455, 457, 458, 459, 460, 461, 326,
	272, 395, 288, 297, 0, 0, 344, 376, 215, 435,
	396, 600, 592, 582, 584, 601, 602, 579, 580, 583,
	603, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	595, 569, 568, 0, 575, 576, 0, 585, 586, 588,
	567, 183, 198, 293, 0, 365, 255, 463, 443, 439,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 186, 199, 208, 218,
	230, 245, 253, 263, 268, 271, 276, 277, 280, 285,
	303, 308, 309, 310, 311, 328, 329, 330, 333, 336,
	337, 340, 342, 343, 346, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 422, 423, 434, 447,
	452, 264, 430, 453, 0, 302, 0, 0, 304, 249,
	267, 278, 0, 442, 401, 203, 372, 256, 192, 221,
	206, 228, 243, 246, 282, 312, 319, 348, 352, 261,
	240, 219, 369, 216, 387, 407, 408, 409, 411, 316,
	235, 351, 412, 0, 300, 413, 414, 274, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 566,
	0, 0, 0, 239, 571, 0, 0, 0, 291, 236,
	0, 0, 349, 0, 189, 0, 388, 224, 301, 298,
	419, 250, 242, 238, 223, 275, 307, 347, 406, 341,
	578, 295, 0, 0, 397, 320, 0, 0, 0, 0,
	0, 573, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 222, 188, 332, 398, 254, 0, 83, 0,
	0, 180, 181, 182, 609, 616, 617, 618, 619, 620,
	610, 612, 0, 0, 213, 611, 220, 587, 614, 621,
	622, 0, 234, 279, 241, 233, 416, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 0, 577, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 561, 0, 0, 0, 0, 594, 0, 562,
	0, 0, 570, 623, 624, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 321, 0, 593, 0,
	0, 449, 0, 0, 591, 0, 0, 0, 0, 290,
	0, 287, 184, 201, 0, 0, 331, 371, 377, 0,
	0, 0, 225, 0, 375, 345, 433, 209, 252, 368,
	350, 373, 0, 0, 0, 374, 296, 421, 363, 431,
	450, 451, 232, 325, 440, 410, 446, 462, 202, 229,
	339, 403, 436, 394, 318, 417, 418, 286, 393, 260,
	187, 294, 456, 200, 383, 217, 207, 193, 405, 429,
	214, 386, 0, 0, 464, 195, 427, 402, 314, 283,
	284, 194, 0, 367, 237, 258, 227, 334, 424, 425,
	226, 465, 204, 445, 197, 0, 444, 327, 420, 428,
	315, 306, 196, 426, 313, 305, 289, 248, 269, 361,
	299, 362, 270, 323, 322, 324, 190, 437, 0, 191,
	0, 399, 438, 466, 210, 211, 212, 0, 247, 251,
	257, 259, 265, 266, 273, 292, 338, 360, 358, 364,
	0, 415, 432, 441, 448, 454, 455, 457, 458, 459,
	460, 461, 326, 272, 395, 288, 297, 0, 0, 344,
	376, 215, 435, 396, 600, 592, 582, 584, 601, 602,
	579, 580, 583, 603, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 595, 569, 568, 0, 575, 576, 0,
	585, 586, 588, 567, 183, 198, 293, 0, 365, 255,
	463, 443, 439, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 186,
	199, 208, 218, 230, 245, 253, 263, 268, 271, 276,
	277, 280, 285, 303, 308, 309, 310, 311, 328, 329,
	330, 333, 336, 337, 340, 342, 343, 346, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 422,
	423, 434, 447, 452, 264, 430, 453, 0, 302, 0,
	0, 304, 249, 267, 278, 0, 442, 401, 203, 372,
	256, 192, 221, 206, 228, 243, 246, 282, 312, 319,
	348, 352, 261, 240, 219, 369, 216, 387, 407, 408,
	409, 411, 316, 235, 351, 412, 0, 300, 413, 414,
	274, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 291, 236, 0, 0, 349, 0, 189, 0, 388,
	224, 301, 298, 419, 250, 242, 238, 223, 275, 307,
	347, 406, 341, 0, 295, 0, 0, 397, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 222, 188, 332, 398, 254,
	0, 0, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 220,
	0, 0, 0, 0, 0, 234, 279, 241, 233, 416,
	0, 0, 0, 0, 205, 0, 912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 321,
	0, 0, 0, 911, 449, 0, 0, 0, 0, 0,
	908, 909, 290, 872, 287, 184, 201, 902, 906, 331,
	371, 377, 0, 0, 0, 225, 0, 375, 345, 433,
	209, 252, 368, 350, 373, 0, 0, 0, 374, 296,
	421, 363, 431, 450, 451, 232, 325, 440, 410, 446,
	462, 202, 229, 339, 403, 436, 394, 318, 417, 418,
	286, 393, 260, 187, 294, 456, 200, 383, 217, 207,
	193, 405, 429, 214, 386, 0, 0, 464, 195, 427,
	402, 314, 283, 284, 194, 0, 367, 237, 258, 227,
	334, 424, 425, 226, 465, 204, 445, 197, 0, 444,
	327, 420, 428, 315, 306, 196, 426, 313, 305, 289,
	248, 269, 361, 299, 362, 270, 323, 322, 324, 190,
	437, 0, 191, 0, 399, 438, 466, 210, 211, 212,
	0, 247, 251, 257, 259, 265, 266, 273, 292, 338,
	360, 358, 364, 0, 415, 432, 441, 448, 454, 455,
	457, 458, 459, 460, 461, 326, 272, 395, 288, 297,
	0, 0, 344, 376, 215, 435, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 183, 198, 293,
	0, 365, 255, 463, 443, 439, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 186, 199, 208, 218, 230, 245, 253, 263,
	268, 271, 276, 277, 280, 285, 303, 308, 309, 310,
	311, 328, 329, 330, 333, 336, 337, 340, 342, 343,
	346, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 422, 423, 434, 447, 452, 264, 430, 453,
	0, 302, 0, 0, 304, 249, 267, 278, 0, 442,
	401, 203, 372, 256, 192, 221, 206, 228, 243, 246,
	282, 312, 319, 348, 352, 261, 240, 219, 369, 216,
	387, 407, 408, 409, 411, 316, 235, 351, 412, 0,
	300, 413, 414, 274, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 1207, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 291, 236, 0, 0, 349, 0,
	189, 0, 388, 224, 301, 298, 419, 250, 242, 238,
	223, 275, 307, 347, 406, 341, 0, 295, 0, 0,
	397, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 222, 188,
	332, 398, 254, 0, 0, 0, 0, 180, 181, 182,
	0, 1209, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 220, 0, 0, 0, 0, 0, 234, 279,
	241, 233, 416, 0, 0, 0, 0, 205, 0, 0,
	0, 1075, 0, 1076, 1077, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 321, 0, 0, 0, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 184, 201,
	0, 0, 331, 371, 377, 0, 0, 0, 225, 0,
	375, 345, 433, 209, 252, 368, 350, 373, 0, 0,
	0, 374, 296, 421, 363, 431, 450, 451, 232, 325,
	440, 410, 446, 462, 202, 229, 339, 403, 436, 394,
	318, 417, 418, 286, 393, 260, 187, 294, 456, 200,
	383, 217, 207, 193, 405, 429, 214, 386, 0, 0,
	464, 195, 427, 402, 314, 283, 284, 194, 0, 367,
	237, 258, 227, 334, 424, 425, 226, 465, 204, 445,
	197, 0, 444, 327, 420, 428, 315, 306, 196, 426,
	313, 305, 289, 248, 269, 361, 299, 362, 270, 323,
	322, 324, 190, 437, 0, 191, 0, 399, 438, 466,
	210, 211, 212, 0, 247, 251, 257, 259, 265, 266,
	273, 292, 338, 360, 358, 364, 0, 415, 432, 441,
	448, 454, 455, 457, 458, 459, 460, 461, 326, 272,
	395, 288, 297, 0, 0, 344, 376, 215, 435, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	183, 198, 293, 0, 365, 255, 463, 443, 439, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 186, 199, 208, 218, 230,
	245, 253, 263, 268, 271, 276, 277, 280, 285, 303,
	308, 309, 310, 311, 328, 329, 330, 333, 336, 337,
	340, 342, 343, 346, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 422, 423, 434, 447, 452,
	264, 430, 453, 0, 302, 0, 0, 304, 249, 267,
	278, 0, 442, 401, 203, 372, 256, 192, 221, 206,
	228, 243, 246, 282, 312, 319, 348, 352, 261, 240,
	219, 369, 216, 387, 407, 408, 409, 411, 316, 235,
	351, 412, 0, 300, 413, 414, 274, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 291, 236, 0,
	0, 349, 0, 189, 0, 388, 224, 301, 298, 419,
	250, 242, 238, 223, 275, 307, 347, 406, 341, 0,
	295, 0, 0, 397, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 222, 188, 332, 398, 254, 0, 0, 0, 0,
	180, 181, 182, 1151, 1154, 0, 0, 0, 0, 1150,
	1153, 0, 0, 213, 1149, 220, 0, 0, 0, 0,
	0, 234, 279, 241, 233, 416, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 321, 0, 0, 0, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 184, 201, 0, 0, 331, 371, 377, 0, 0,
	0, 225, 0, 375, 345, 433, 209, 252, 368, 350,
	373, 0, 0, 0, 374, 296, 421, 363, 431, 450,
	451, 232, 325, 440, 410, 446, 462, 202, 229, 339,
	403, 436, 394, 318, 417, 418, 286, 393, 260, 187,
	294, 456, 200, 383, 217, 207, 193, 405, 429, 214,
	386, 0, 0, 464, 195, 427, 402, 314, 283, 284,
	194, 0, 367, 237, 258, 227, 334, 424, 425, 226,
	465, 204, 445, 197, 0, 444, 327, 420, 428, 315,
	306, 196, 426, 313, 305, 289, 248, 269, 361, 299,
	362, 270, 323, 322, 324, 190, 437, 0, 191, 0,
	399, 438, 466, 210, 211, 212, 0, 247, 251, 257,
	259, 265, 266, 273, 292, 338, 360, 358, 364, 0,
	415, 432, 441, 448, 454, 455, 457, 458, 459, 460,
	461, 326, 272, 395, 288, 297, 0, 0, 344, 376,
	215, 435, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 183, 198, 293, 0, 365, 255, 463,
	443, 439, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 186, 199,
	208, 218, 230, 245, 253, 263, 268, 271, 276, 277,
	280, 285, 303, 308, 309, 310, 311, 328, 329, 330,
	333, 336, 337, 340, 342, 343, 346, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 422, 423,
	434, 447, 452, 264, 430, 453, 0, 302, 0, 0,
	304, 249, 267, 278, 0, 442, 401, 203, 372, 256,
	192, 221, 206, 228, 243, 246, 282, 312, 319, 348,
	352, 261, 240, 219, 369, 216, 387, 407, 408, 409,
	411, 316, 235, 351, 74, 412, 300, 413, 414, 274,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 291, 236, 0, 0, 349, 0, 189, 0, 388,
	224, 301, 298, 419, 250, 242, 238, 223, 275, 307,
	347, 406, 341, 0, 295, 0, 0, 397, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 222, 188, 332, 398, 254,
	0, 83, 0, 1187, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 220,
	0, 0, 0, 0, 0, 234, 279, 241, 233, 416,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 321,
	0, 0, 0, 0, 449, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 184, 201, 0, 0, 331,
	371, 377, 0, 0, 0, 225, 0, 375, 345, 433,
	209, 252, 368, 350, 373, 0, 0, 0, 374, 296,
	421, 363, 431, 450, 451, 232, 325, 440, 410, 446,
	462, 202, 229, 339, 403, 436, 394, 318, 417, 418,
	286, 393, 260, 187, 294, 456, 200, 383, 217, 207,
	193, 405, 429, 214, 386, 0, 0, 464, 195, 427,
	402, 314, 283, 284, 194, 0, 367, 237, 258, 227,
	334, 424, 425, 226, 465, 204, 445, 197, 0, 444,
	327, 420, 428, 315, 306, 196, 426, 313, 305, 289,
	248, 269, 361, 299, 362, 270, 323, 322, 324, 190,
	437, 0, 191, 0, 399, 438, 466, 210, 211, 212,
	0, 247, 251, 257, 259, 265, 266, 273, 292, 338,
	360, 358, 364, 0, 415, 432, 441, 448, 454, 455,
	457, 458, 459, 460, 461, 326, 272, 395, 288, 297,
	0, 0, 344, 376, 215, 435, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 183, 198, 293,
	82, 365, 255, 463, 443, 439, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 186, 199, 208, 218, 230, 245, 253, 263,
	268, 271, 276, 277, 280, 285, 303, 308, 309, 310,
	311, 328, 329, 330, 333, 336, 337, 340, 342, 343,
	346, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 422, 423, 434, 447, 452, 264, 430, 453,
	0, 302, 0, 0, 304, 249, 267, 278, 0, 442,
	401, 203, 372, 256, 192, 221, 206, 228, 243, 246,
	282, 312, 319, 348, 352, 261, 240, 219, 369, 216,
	387, 407, 408, 409, 411, 316, 235, 351, 74, 412,
	300, 413, 414, 274, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 291, 236, 0, 0, 349,
	0, 189, 0, 388, 224, 301, 298, 419, 250, 242,
	238, 223, 275, 307, 347, 406, 341, 0, 295, 0,
	0, 397, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 222,
	188, 332, 398, 254, 0, 83, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 220, 0, 0, 0, 0, 0, 234,
	279, 241, 233, 416, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 321, 0, 0, 0, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 184,
	201, 0, 0, 331, 371, 377, 0, 0, 0, 225,
	0, 375, 345, 433, 209, 252, 368, 350, 373, 0,
	0, 0, 374, 296, 421, 363, 431, 450, 451, 232,
	325, 440, 410, 446, 462, 202, 229, 339, 403, 436,
	394, 318, 417, 418, 286, 393, 260, 187, 294, 456,
	200, 383, 217, 207, 193, 405, 429, 214, 386, 0,
	0, 464, 195, 427, 402, 314, 283, 284, 194, 0,
	367, 237, 258, 227, 334, 424, 425, 226, 465, 204,
	445, 197, 0, 444, 327, 420, 428, 315, 306, 196,
	426, 313, 305, 289, 248, 269, 361, 299, 362, 270,
	323, 322, 324, 190, 437, 0, 191, 0, 399, 438,
	466, 210, 211, 212, 0, 247, 251, 257, 259, 265,
	266, 273, 292, 338, 360, 358, 364, 0, 415, 432,
	441, 448, 454, 455, 457, 458, 459, 460, 461, 326,
	272, 395, 288, 297, 0, 0, 344, 376, 215, 435,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 183, 198, 293, 82, 365, 255, 463, 443, 439,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 186, 199, 208, 218,
	230, 245, 253, 263, 268, 271, 276, 277, 280, 285,
	303, 308, 309, 310, 311, 328, 329, 330, 333, 336,
	337, 340, 342, 343, 346, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 422, 423, 434, 447,
	452, 264, 430, 453, 0, 302, 0, 0, 304, 249,
	267, 278, 0, 442, 401, 203, 372, 256, 192, 221,
	206, 228, 243, 246, 282, 312, 319, 348, 352, 261,
	240, 219, 369, 216, 387, 407, 408, 409, 411, 316,
	235, 351, 412, 0, 300, 413, 414, 274, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 1585, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 291, 236,
	0, 0, 349, 0, 189, 0, 388, 224, 301, 298,
	419, 250, 242, 238, 223, 275, 307, 347, 406, 341,
	0, 295, 0, 0, 397, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 222, 188, 332, 398, 254, 0, 0, 0,
	0, 180, 181, 182, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 220, 0, 0, 0,
	0, 0, 234, 279, 241, 233, 416, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 321, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 184, 201, 0, 0, 331, 371, 377, 0,
	0, 0, 225, 0, 375, 345, 433, 209, 252, 368,
	350, 373, 0, 0, 1583, 374, 296, 421, 363, 431,
	450, 451, 232, 325, 440, 410, 446, 462, 202, 229,
	339, 403, 436, 394, 318, 417, 418, 286, 393, 260,
	187, 294, 456, 200, 383, 217, 207, 193, 405, 429,
	214, 386, 0, 0, 464, 195, 427, 402, 314, 283,
	284, 194, 0, 367, 237, 258, 227, 334, 424, 425,
	226, 465, 204, 445, 197, 0, 444, 327, 420, 428,
	315, 306, 196, 426, 313, 305, 289, 248, 269, 361,
	299, 362, 270, 323, 322, 324, 190, 437, 0, 191,
	0, 399, 438, 466, 210, 211, 212, 0, 247, 251,
	257, 259, 265, 266, 273, 292, 338, 360, 358, 364,
	0, 415, 432, 441, 448, 454, 455, 457, 458, 459,
	460, 461, 326, 272, 395, 288, 297, 0, 0, 344,
	376, 215, 435, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 183, 198, 293, 0, 365, 255,
	463, 443, 439, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 186,
	199, 208, 218, 230, 245, 253, 263, 268, 271, 276,
	277, 280, 285, 303, 308, 309, 310, 311, 328, 329,
	330, 333, 336, 337, 340, 342, 343, 346, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 422,
	423, 434, 447, 452, 264, 430, 453, 0, 302, 0,
	0, 304, 249, 267, 278, 0, 442, 401, 203, 372,
	256, 192, 221, 206, 228, 243, 246, 282, 312, 319,
	348, 352, 261, 240, 219, 369, 216, 387, 407, 408,
	409, 411, 316, 235, 351, 412, 0, 300, 413, 414,
	274, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 291, 236, 0, 0, 349, 0, 189, 0, 388,
	224, 301, 298, 419, 250, 242, 238, 223, 275, 307,
	347, 406, 341, 0, 295, 0, 0, 397, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 222, 188, 332, 398, 254,
	0, 0, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 220,
	0, 0, 0, 0, 0, 234, 279, 241, 233, 416,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 321,
	0, 0, 0, 0, 449, 0, 0, 0, 0, 0,
	0, 0, 290, 872, 287, 184, 201, 870, 0, 331,
	371, 377, 0, 0, 0, 225, 0, 375, 345, 433,
	209, 252, 368, 350, 373, 0, 0, 0, 374, 296,
	421, 363, 431, 450, 451, 232, 325, 440, 410, 446,
	462, 202, 229, 339, 403, 436, 394, 318, 417, 418,
	286, 393, 260, 187, 294, 456, 200, 383, 217, 207,
	193, 405, 429, 214, 386, 0, 0, 464, 195, 427,
	402, 314, 283, 284, 194, 0, 367, 237, 258, 227,
	334, 424, 425, 226, 465, 204, 445, 197, 0, 444,
	327, 420, 428, 315, 306, 196, 426, 313, 305, 289,
	248, 269, 361, 299, 362, 270, 323, 322, 324, 190,
	437, 0, 191, 0, 399, 438, 466, 210, 211, 212,
	0, 247, 251, 257, 259, 265, 266, 273, 292, 338,
	360, 358, 364, 0, 415, 432, 441, 448, 454, 455,
	457, 458, 459, 460, 461, 326, 272, 395, 288, 297,
	0, 0, 344, 376, 215, 435, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 183, 198, 293,
	0, 365, 255, 463, 443, 439, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 186, 199, 208, 218, 230, 245, 253, 263,
	268, 271, 276, 277, 280, 285, 303, 308, 309, 310,
	311, 328, 329, 330, 333, 336, 337, 340, 342, 343,
	346, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 422, 423, 434, 447, 452, 264, 430, 453,
	0, 302, 0, 0, 304, 249, 267, 278, 0, 442,
	401, 203, 372, 256, 192, 221, 206, 228, 243, 246,
	282, 312, 319, 348, 352, 261, 240, 219, 369, 216,
	387, 407, 408, 409, 411, 316, 235, 351, 412, 0,
	300, 413, 414, 274, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 291, 236, 0, 0, 349, 0,
	189, 0, 388, 224, 301, 298, 419, 250, 242, 238,
	223, 275, 307, 347, 406, 341, 0, 295, 0, 0,
	397, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 222, 188,
	332, 398, 254, 0, 0, 0, 1187, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 220, 0, 0, 0, 0, 0, 234, 279,
	241, 233, 416, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 321, 0, 0, 0, 0, 449, 0, 0,
	0, 2420, 0, 0, 0, 290, 0, 287, 184, 201,
	0, 0, 331, 371, 377, 0, 0, 0, 225, 0,
	375, 345, 433, 209, 252, 368, 350, 373, 0, 0,
	0, 374, 296, 421, 363, 431, 450, 451, 232, 325,
	440, 410, 446, 462, 202, 229, 339, 403, 436, 394,
	318, 417, 418, 286, 393, 260, 187, 294, 456, 200,
	383, 217, 207, 193, 405, 429, 214, 386, 0, 0,
	464, 195, 427, 402, 314, 283, 284, 194, 0, 367,
	237, 258, 227, 334, 424, 425, 226, 465, 204, 445,
	197, 0, 444, 327, 420, 428, 315, 306, 196, 426,
	313, 305, 289, 248, 269, 361, 299, 362, 270, 323,
	322, 324, 190, 437, 0, 191, 0, 399, 438, 466,
	210, 211, 212, 0, 247, 251, 257, 259, 265, 266,
	273, 292, 338, 360, 358, 364, 0, 415, 432, 441,
	448, 454, 455, 457, 458, 459, 460, 461, 326, 272,
	395, 288, 297, 0, 0, 344, 376, 215, 435, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	183, 198, 293, 0, 365, 255, 463, 443, 439, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 186, 199, 208, 218, 230,
	245, 253, 263, 268, 271, 276, 277, 280, 285, 303,
	308, 309, 310, 311, 328, 329, 330, 333, 336, 337,
	340, 342, 343, 346, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 422, 423, 434, 447, 452,
	264, 430, 453, 0, 302, 0, 0, 304, 249, 267,
	278, 0, 442, 401, 203, 372, 256, 192, 221, 206,
	228, 243, 246, 282, 312, 319, 348, 352, 261, 240,
	219, 369, 216, 387, 407, 408, 409, 411, 316, 235,
	351, 412, 0, 300, 413, 414, 274, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 1585, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 291, 236, 0,
	0, 349, 0, 189, 0, 388, 224, 301, 298, 419,
	250, 242, 238, 223, 275, 307, 347, 406, 341, 0,
	295, 0, 0, 397, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 222, 188, 332, 398, 254, 0, 0, 0, 0,
	180, 181, 182, 0, 1379, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 220, 0, 0, 0, 0,
	0, 234, 279, 241, 233, 416, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 321, 0, 0, 0, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 184, 201, 0, 0, 331, 371, 377, 0, 0,
	0, 225, 0, 375, 345, 433, 209, 252, 368, 350,
	373, 0, 0, 0, 374, 296, 421, 363, 431, 450,
	451, 232, 325, 440, 410, 446, 462, 202, 229, 339,
	403, 436, 394, 318, 417, 418, 286, 393, 260, 187,
	294, 456, 200, 383, 217, 207, 193, 405, 429, 214,
	386, 0, 0, 464, 195, 427, 402, 314, 283, 284,
	194, 0, 367, 237, 258, 227, 334, 424, 425, 226,
	465, 204, 445, 197, 0, 444, 327, 420, 428, 315,
	306, 196, 426, 313, 305, 289, 248, 269, 361, 299,
	362, 270, 323, 322, 324, 190, 437, 0, 191, 0,
	399, 438, 466, 210, 211, 212, 0, 247, 251, 257,
	259, 265, 266, 273, 292, 338, 360, 358, 364, 0,
	415, 432, 441, 448, 454, 455, 457, 458, 459, 460,
	461, 326, 272, 395, 288, 297, 0, 0, 344, 376,
	215, 435, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 183, 198, 293, 0, 365, 255, 463,
	443, 439, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 186, 199,
	208, 218, 230, 245, 253, 263, 268, 271, 276, 277,
	280, 285, 303, 308, 309, 310, 311, 328, 329, 330,
	333, 336, 337, 340, 342, 343, 346, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 422, 423,
	434, 447, 452, 264, 430, 453, 0, 302, 0, 0,
	304, 249, 267, 278, 0, 442, 401, 203, 372, 256,
	192, 221, 206, 228, 243, 246, 282, 312, 319, 348,
	352, 261, 240, 219, 369, 216, 387, 407, 408, 409,
	411, 316, 235, 351, 412, 0, 300, 413, 414, 274,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	291, 236, 0, 0, 349, 0, 189, 0, 388, 224,
	301, 298, 419, 250, 242, 238, 223, 275, 307, 347,
	406, 341, 0, 295, 0, 0, 397, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 222, 188, 332, 398, 254, 0,
	0, 0, 0, 180, 181, 182, 0, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 220, 0,
	0, 0, 0, 0, 234, 279, 241, 233, 416, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 321, 0,
	0, 0, 0, 449, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 184, 201, 0, 0, 331, 371,
	377, 0, 0, 0, 225, 0, 375, 345, 433, 209,
	252, 368, 350, 373, 0, 0, 0, 374, 296, 421,
	363, 431, 450, 451, 232, 325, 440, 410, 446, 462,
	202, 229, 339, 403, 436, 394, 318, 417, 418, 286,
	393, 260, 187, 294, 456, 200, 383, 217, 207, 193,
	405, 429, 214, 386, 0, 0, 464, 195, 427, 402,
	314, 283, 284, 194, 0, 367, 237, 258, 227, 334,
	424, 425, 226, 465, 204, 445, 197, 0, 444, 327,
	420, 428, 315, 306, 196, 426, 313, 305, 289, 248,
	269, 361, 299, 362, 270, 323, 322, 324, 190, 437,
	0, 191, 0, 399, 438, 466, 210, 211, 212, 0,
	247, 251, 257, 259, 265, 266, 273, 292, 338, 360,
	358, 364, 0, 415, 432, 441, 448, 454, 455, 457,
	458, 459, 460, 461, 326, 272, 395, 288, 297, 0,
	0, 344, 376, 215, 435, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 183, 198, 293, 0,
	365, 255, 463, 443, 439, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 186, 199, 208, 218, 230, 245, 253, 263, 268,
	271, 276, 277, 280, 285, 303, 308, 309, 310, 311,
	328, 329, 330, 333, 336, 337, 340, 342, 343, 346,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 422, 423, 434, 447, 452, 264, 430, 453, 0,
	302, 0, 0, 304, 249, 267, 278, 0, 442, 401,
	203, 372, 256, 192, 221, 206, 228, 243, 246, 282,
	312, 319, 348, 352, 261, 240, 219, 369, 216, 387,
	407, 408, 409, 411, 316, 235, 351, 412, 0, 300,
	413, 414, 274, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 291, 236, 0, 0, 349, 0, 189,
	0, 388, 224, 301, 298, 419, 250, 242, 238, 223,
	275, 307, 347, 406, 341, 0, 295, 0, 0, 397,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 222, 188, 332,
	398, 254, 0, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 1846, 0, 0, 0, 1847, 0, 0, 213,
	0, 220, 0, 0, 0, 0, 0, 234, 279, 241,
	233, 416, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 321, 0, 0, 0, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 184, 201, 0,
	0, 331, 371, 377, 0, 0, 0, 225, 0, 375,
	345, 433, 209, 252, 368, 350, 373, 0, 0, 0,
	374, 296, 421, 363, 431, 450, 451, 232, 325, 440,
	410, 446, 462, 202, 229, 339, 403, 436, 394, 318,
	417, 418, 286, 393, 260, 187, 294, 456, 200, 383,
	217, 207, 193, 405, 429, 214, 386, 0, 0, 464,
	195, 427, 402, 314, 283, 284, 194, 0, 367, 237,
	258, 227, 334, 424, 425, 226, 465, 204, 445, 197,
	0, 444, 327, 420, 428, 315, 306, 196, 426, 313,
	305, 289, 248, 269, 361, 299, 362, 270, 323, 322,
	324, 190, 437, 0, 191, 0, 399, 438, 466, 210,
	211, 212, 0, 247, 251, 257, 259, 265, 266, 273,
	292, 338, 360, 358, 364, 0, 415, 432, 441, 448,
	454, 455, 457, 458, 459, 460, 461, 326, 272, 395,
	288, 297, 0, 0, 344, 376, 215, 435, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 183,
	198, 293, 0, 365, 255, 463, 443, 439, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 186, 199, 208, 218, 230, 245,
	253, 263, 268, 271, 276, 277, 280, 285, 303, 308,
	309, 310, 311, 328, 329, 330, 333, 336, 337, 340,
	342, 343, 346, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 422, 423, 434, 447, 452, 264,
	430, 453, 0, 302, 0, 0, 304, 249, 267, 278,
	0, 442, 401, 203, 372, 256, 192, 221, 206, 228,
	243, 246, 282, 312, 319, 348, 352, 261, 240, 219,
	369, 216, 387, 407, 408, 409, 411, 316, 235, 351,
	412, 0, 300, 413, 414, 274, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 1230, 0, 0, 0, 291, 236, 0, 0,
	349, 0, 189, 0, 388, 224, 301, 298, 419, 250,
	242, 238, 223, 275, 307, 347, 406, 341, 0, 295,
	0, 0, 397, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	222, 188, 332, 398, 254, 0, 0, 0, 0, 180,
	181, 182, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 220, 0, 0, 0, 0, 0,
	234, 279, 241, 233, 416, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 321, 0, 0, 0, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 287,
	184, 201, 0, 0, 331, 371, 377, 0, 0, 0,
	225, 0, 375, 345, 433, 209, 252, 368, 350, 373,
	0, 0, 0, 374, 296, 421, 363, 431, 450, 451,
	232, 325, 440, 410, 446, 462, 202, 229, 339, 403,
	436, 394, 318, 417, 418, 286, 393, 260, 187, 294,
	456, 200, 383, 217, 207, 193, 405, 429, 214, 386,
	0, 0, 464, 195, 427, 402, 314, 283, 284, 194,
	0, 367, 237, 258, 227, 334, 424, 425, 226, 465,
	204, 445, 197, 0, 444, 327, 420, 428, 315, 306,
	196, 426, 313, 305, 289, 248, 269, 361, 299, 362,
	270, 323, 322, 324, 190, 437, 0, 191, 0, 399,
	438, 466, 210, 211, 212, 0, 247, 251, 257, 259,
	265, 266, 273, 292, 338, 360, 358, 364, 0, 415,
	432, 441, 448, 454, 455, 457, 458, 459, 460, 461,
	326, 272, 395, 288, 297, 0, 0, 344, 376, 215,
	435, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 183, 198, 293, 0, 365, 255, 463, 443,
	439, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 186, 199, 208,
	218, 230, 245, 253, 263, 268, 271, 276, 277, 280,
	285, 303, 308, 309, 310, 311, 328, 329, 330, 333,
	336, 337, 340, 342, 343, 346, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 422, 423, 434,
	447, 452, 264, 430, 453, 0, 302, 0, 0, 304,
	249, 267, 278, 0, 442, 401, 203, 372, 256, 192,
	221, 206, 228, 243, 246, 282, 312, 319, 348, 352,
	261, 240, 219, 369, 216, 387, 407, 408, 409, 411,
	316, 235, 351, 412, 0, 300, 413, 414, 274, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 291,
	236, 0, 0, 349, 0, 189, 0, 388, 224, 301,
	298, 419, 250, 242, 238, 223, 275, 307, 347, 406,
	341, 0, 295, 0, 0, 397, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 222, 188, 332, 398, 254, 0, 0,
	0, 0, 180, 181, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 220, 0, 0,
	0, 0, 0, 234, 279, 241, 233, 416, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 321, 0, 0,
	0, 0, 449, 0, 0, 0, 2488, 0, 0, 0,
	290, 0, 287, 184, 201, 0, 0, 331, 371, 377,
	0, 0, 0, 225, 0, 375, 345, 433, 209, 252,
	368, 350, 373, 0, 0, 0, 374, 296, 421, 363,
	431, 450, 451, 232, 325, 440, 410, 446, 462, 202,
	229, 339, 403, 436, 394, 318, 417, 418, 286, 393,
	260, 187, 294, 456, 200, 383, 217, 207, 193, 405,
	429, 214, 386, 0, 0, 464, 195, 427, 402, 314,
	283, 284, 194, 0, 367, 237, 258, 227, 334, 424,
	425, 226, 465, 204, 445, 197, 0, 444, 327, 420,
	428, 315, 306, 196, 426, 313, 305, 289, 248, 269,
	361, 299, 362, 270, 323, 322, 324, 190, 437, 0,
	191, 0, 399, 438, 466, 210, 211, 212, 0, 247,
	251, 257, 259, 265, 266, 273, 292, 338, 360, 358,
	364, 0, 415, 432, 441, 448, 454, 455, 457, 458,
	459, 460, 461, 326, 272, 395, 288, 297, 0, 0,
	344, 376, 215, 435, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 485, 0, 183, 198, 293, 0, 365,
	255, 463, 443, 439, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	186, 199, 208, 218, 230, 245, 253, 263, 268, 271,
	276, 277, 280, 285, 303, 308, 309, 310, 311, 328,
	329, 330, 333, 336, 337, 340, 342, 343, 346, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	422, 423, 434, 447, 452, 264, 430, 453, 0, 302,
	0, 0, 304, 249, 267, 278, 0, 442, 401, 203,
	372, 256, 192, 221, 206, 228, 243, 246, 282, 312,
	319, 348, 352, 261, 240, 219, 369, 216, 387, 407,
	408, 409, 411, 316, 235, 351, 412, 0, 300, 413,
	414, 274, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 291, 236, 0, 0, 349, 0, 189, 0,
	388, 224, 301, 298, 419, 250, 242, 238, 223, 275,
	307, 347, 406, 341, 0, 295, 0, 0, 397, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 222, 188, 332, 398,
	254, 0, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	220, 0, 0, 0, 0, 0, 234, 279, 241, 233,
	416, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	321, 0, 0, 0, 0, 449, 0, 0, 0, 2420,
	0, 0, 0, 290, 0, 287, 184, 201, 0, 0,
	331, 371, 377, 0, 0, 0, 225, 0, 375, 345,
	433, 209, 252, 368, 350, 373, 0, 0, 0, 374,
	296, 421, 363, 431, 450, 451, 232, 325, 440, 410,
	446, 462, 202, 229, 339, 403, 436, 394, 318, 417,
	418, 286, 393, 260, 187, 294, 456, 200, 383, 217,
	207, 193, 405, 429, 214, 386, 0, 0, 464, 195,
	427, 402, 314, 283, 284, 194, 0, 367, 237, 258,
	227, 334, 424, 425, 226, 465, 204, 445, 197, 0,
	444, 327, 420, 428, 315, 306, 196, 426, 313, 305,
	289, 248, 269, 361, 299, 362, 270, 323, 322, 324,
	190, 437, 0, 191, 0, 399, 438, 466, 210, 211,
	212, 0, 247, 251, 257, 259, 265, 266, 273, 292,
	338, 360, 358, 364, 0, 415, 432, 441, 448, 454,
	455, 457, 458, 459, 460, 461, 326, 272, 395, 288,
	297, 0, 0, 344, 376, 215, 435, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 183, 198,
	293, 0, 365, 255, 463, 443, 439, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 186, 199, 208, 218, 230, 245, 253,
	263, 268, 271, 276, 277, 280, 285, 303, 308, 309,
	310, 311, 328, 329, 330, 333, 336, 337, 340, 342,
	343, 346, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 422, 423, 434, 447, 452, 264, 430,
	453, 0, 302, 0, 0, 304, 249, 267, 278, 0,
	442, 401, 203, 372, 256, 192, 221, 206, 228, 243,
	246, 282, 312, 319, 348, 352, 261, 240, 219, 369,
	216, 387, 407, 408, 409, 411, 316, 235, 351, 412,
	0, 300, 413, 414, 274, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 291, 236, 0, 0, 349,
	0, 189, 0, 388, 224, 301, 298, 419, 250, 242,
	238, 223, 275, 307, 347, 406, 341, 0, 295, 0,
	0, 397, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 222,
	188, 332, 398, 254, 0, 83, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 220, 0, 0, 0, 0, 0, 234,
	279, 241, 233, 416, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 321, 0, 0, 0, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 184,
	201, 0, 0, 331, 371, 377, 0, 0, 0, 225,
	0, 375, 345, 433, 209, 252, 368, 350, 373, 0,
	0, 0, 374, 296, 421, 363, 431, 450, 451, 232,
	325, 440, 410, 446, 462, 202, 229, 339, 403, 436,
	394, 318, 417, 418, 286, 393, 260, 187, 294, 456,
	200, 383, 217, 207, 193, 405, 429, 214, 386, 0,
	0, 464, 195, 427, 402, 314, 283, 284, 194, 0,
	367, 237, 258, 227, 334, 424, 425, 226, 465, 204,
	445, 197, 0, 444, 327, 420, 428, 315, 306, 196,
	426, 313, 305, 289, 248, 269, 361, 299, 362, 270,
	323, 322, 324, 190, 437, 0, 191, 0, 399, 438,
	466, 210, 211, 212, 0, 247, 251, 257, 259, 265,
	266, 273, 292, 338, 360, 358, 364, 0, 415, 432,
	441, 448, 454, 455, 457, 458, 459, 460, 461, 326,
	272, 395, 288, 297, 0, 0, 344, 376, 215, 435,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 183, 198, 293, 0, 365, 255, 463, 443, 439,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 186, 199, 208, 218,
	230, 245, 253, 263, 268, 271, 276, 277, 280, 285,
	303, 308, 309, 310, 311, 328, 329, 330, 333, 336,
	337, 340, 342, 343, 346, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 422, 423, 434, 447,
	452, 264, 430, 453, 0, 302, 0, 0, 304, 249,
	267, 278, 0, 442, 401, 203, 372, 256, 192, 221,
	206, 228, 243, 246, 282, 312, 319, 348, 352, 261,
	240, 219, 369, 216, 387, 407, 408, 409, 411, 316,
	235, 351, 412, 0, 300, 413, 414, 274, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 291, 236,
	0, 0, 349, 0, 189, 0, 388, 224, 301, 298,
	419, 250, 242, 238, 223, 275, 307, 347, 406, 341,
	0, 295, 0, 0, 397, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 222, 188, 332, 398, 254, 0, 0, 0,
	0, 180, 181, 182, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 220, 0, 0, 0,
	0, 0, 234, 279, 241, 233, 416, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 321, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 184, 201, 0, 0, 331, 371, 377, 0,
	0, 0, 225, 0, 375, 345, 433, 209, 252, 368,
	350, 373, 0, 0, 0, 374, 296, 421, 363, 431,
	450, 451, 232, 325, 440, 410, 446, 462, 202, 229,
	339, 403, 436, 394, 318, 417, 418, 286, 393, 260,
	187, 294, 456, 200, 383, 217, 207, 193, 405, 429,
	214, 386, 0, 0, 464, 195, 427, 402, 314, 283,
	284, 194, 0, 367, 237, 258, 227, 334, 424, 425,
	226, 465, 204, 445, 197, 0, 444, 327, 420, 428,
	315, 306, 196, 426, 313, 305, 289, 248, 269, 361,
	299, 362, 270, 323, 322, 324, 190, 437, 0, 191,
	0, 399, 438, 466, 210, 211, 212, 0, 247, 251,
	257, 259, 265, 266, 273, 292, 338, 360, 358, 364,
	0, 415, 432, 441, 448, 454, 455, 457, 458, 459,
	460, 461, 326, 272, 395, 288, 297, 0, 0, 344,
	376, 215, 435, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 183, 198, 293, 0, 365, 255,
	463, 443, 439, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 186,
	199, 208, 218, 230, 245, 253, 263, 268, 271, 276,
	277, 280, 285, 303, 308, 309, 310, 311, 328, 329,
	330, 333, 336, 337, 340, 342, 343, 346, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 422,
	423, 434, 447, 452, 264, 430, 453, 0, 302, 0,
	0, 304, 249, 267, 278, 0, 442, 401, 203, 372,
	256, 192, 221, 206, 228, 243, 246, 282, 312, 319,
	348, 352, 261, 240, 219, 369, 216, 387, 407, 408,
	409, 411, 316, 235, 351, 0, 412, 300, 413, 414,
	274, 1630, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 291, 236, 0, 0, 349, 0, 189, 0,
	388, 224, 301, 298, 419, 250, 242, 238, 223, 275,
	307, 347, 406, 341, 0, 295, 0, 0, 397, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 222, 188, 332, 398,
	254, 0, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	220, 0, 0, 0, 0, 0, 234, 279, 241, 233,
	416, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	321, 0, 0, 0, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 287, 184, 201, 0, 0,
	331, 371, 377, 0, 0, 0, 225, 0, 375, 345,
	433, 209, 252, 368, 350, 373, 0, 0, 0, 374,
	296, 421, 363, 431, 450, 451, 232, 325, 440, 410,
	446, 462, 202, 229, 339, 403, 436, 394, 318, 417,
	418, 286, 393, 260, 187, 294, 456, 200, 383, 217,
	207, 193, 405, 429, 214, 386, 0, 0, 464, 195,
	427, 402, 314, 283, 284, 194, 0, 367, 237, 258,
	227, 334, 424, 425, 226, 465, 204, 445, 197, 0,
	444, 327, 420, 428, 315, 306, 196, 426, 313, 305,
	289, 248, 269, 361, 299, 362, 270, 323, 322, 324,
	190, 437, 0, 191, 0, 399, 438, 466, 210, 211,
	212, 0, 247, 251, 257, 259, 265, 266, 273, 292,
	338, 360, 358, 364, 0, 415, 432, 441, 448, 454,
	455, 457, 458, 459, 460, 461, 326, 272, 395, 288,
	297, 0, 0, 344, 376, 215, 435, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 183, 198,
	293, 0, 365, 255, 463, 443, 439, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 186, 199, 208, 218, 230, 245, 253,
	263, 268, 271, 276, 277, 280, 285, 303, 308, 309,
	310, 311, 328, 329, 330, 333, 336, 337, 340, 342,
	343, 346, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 422, 423, 434, 447, 452, 264, 430,
	453, 0, 302, 0, 0, 304, 249, 267, 278, 0,
	442, 401, 203, 372, 256, 192, 221, 206, 228, 243,
	246, 282, 312, 319, 348, 352, 261, 240, 219, 369,
	216, 387, 407, 408, 409, 411, 316, 235, 351, 412,
	0, 300, 413, 414, 274, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 291, 236, 0, 0, 349,
	0, 189, 0, 388, 224, 301, 298, 419, 250, 242,
	238, 223, 275, 307, 347, 406, 341, 0, 295, 0,
	0, 397, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 222,
	188, 332, 398, 254, 0, 0, 0, 0, 180, 181,
	182, 0, 1209, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 220, 0, 0, 0, 0, 0, 234,
	279, 241, 233, 416, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 321, 0, 0, 0, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 184,
	201, 0, 0, 331, 371, 377, 0, 0, 0, 225,
	0, 375, 345, 433, 209, 252, 368, 350, 373, 0,
	0, 0, 374, 296, 421, 363, 431, 450, 451, 232,
	325, 440, 410, 446, 462, 202, 229, 339, 403, 436,
	394, 318, 417, 418, 286, 393, 260, 187, 294, 456,
	200, 383, 217, 207, 193, 405, 429, 214, 386, 0,
	0, 464, 195, 427, 402, 314, 283, 284, 194, 0,
	367, 237, 258, 227, 334, 424, 425, 226, 465, 204,
	445, 197, 0, 444, 327, 420, 428, 315, 306, 196,
	426, 313, 305, 289, 248, 269, 361, 299, 362, 270,
	323, 322, 324, 190, 437, 0, 191, 0, 399, 438,
	466, 210, 211, 212, 0, 247, 251, 257, 259, 265,
	266, 273, 292, 338, 360, 358, 364, 0, 415, 432,
	441, 448, 454, 455, 457, 458, 459, 460, 461, 326,
	272, 395, 288, 297, 0, 0, 344, 376, 215, 435,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 183, 198, 293, 0, 365, 255, 463, 443, 439,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 186, 199, 208, 218,
	230, 245, 253, 263, 268, 271, 276, 277, 280, 285,
	303, 308, 309, 310, 311, 328, 329, 330, 333, 336,
	337, 340, 342, 343, 346, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 422, 423, 434, 447,
	452, 264, 430, 453, 0, 302, 0, 0, 304, 249,
	267, 278, 0, 442, 401, 203, 372, 256, 192, 221,
	206, 228, 243, 246, 282, 312, 319, 348, 352, 261,
	240, 219, 369, 216, 387, 407, 408, 409, 411, 316,
	235, 351, 412, 0, 300, 413, 414, 274, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 291, 236,
	0, 0, 349, 0, 189, 0, 388, 224, 301, 298,
	419, 250, 242, 238, 223, 275, 307, 347, 406, 341,
	0, 295, 0, 0, 397, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 222, 188, 332, 398, 254, 0, 0, 0,
	0, 180, 181, 182, 0, 1589, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 220, 0, 0, 0,
	0, 0, 234, 279, 241, 233, 416, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 321, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 184, 201, 0, 0, 331, 371, 377, 0,
	0, 0, 225, 0, 375, 345, 433, 209, 252, 368,
	350, 373, 0, 0, 0, 374, 296, 421, 363, 431,
	450, 451, 232, 325, 440, 410, 446, 462, 202, 229,
	339, 403, 436, 394, 318, 417, 418, 286, 393, 260,
	187, 294, 456, 200, 383, 217, 207, 193, 405, 429,
	214, 386, 0, 0, 464, 195, 427, 402, 314, 283,
	284, 194, 0, 367, 237, 258, 227, 334, 424, 425,
	226, 465, 204, 445, 197, 0, 444, 327, 420, 428,
	315, 306, 196, 426, 313, 305, 289, 248, 269, 361,
	299, 362, 270, 323, 322, 324, 190, 437, 0, 191,
	0, 399, 438, 466, 210, 211, 212, 0, 247, 251,
	257, 259, 265, 266, 273, 292, 338, 360, 358, 364,
	0, 415, 432, 441, 448, 454, 455, 457, 458, 459,
	460, 461, 326, 272, 395, 288, 297, 0, 0, 344,
	376, 215, 435, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 183, 198, 293, 0, 365, 255,
	463, 443, 439, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 186,
	199, 208, 218, 230, 245, 253, 263, 268, 271, 276,
	277, 280, 285, 303, 308, 309, 310, 311, 328, 329,
	330, 333, 336, 337, 340, 342, 343, 346, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 422,
	423, 434, 447, 452, 264, 430, 453, 0, 302, 0,
	0, 304, 249, 267, 278, 0, 442, 401, 203, 372,
	256, 192, 221, 206, 228, 243, 246, 282, 312, 319,
	348, 352, 261, 240, 219, 369, 216, 387, 407, 408,
	409, 411, 316, 235, 351, 412, 0, 300, 413, 414,
	274, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 291, 236, 0, 0, 349, 0, 189, 0, 388,
	224, 301, 298, 419, 250, 242, 238, 223, 275, 307,
	347, 406, 341, 0, 295, 0, 0, 397, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 222, 188, 332, 398, 254,
	0, 0, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 220,
	0, 0, 0, 0, 0, 234, 279, 241, 233, 416,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 321,
	0, 0, 0, 0, 449, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 184, 201, 0, 0, 331,
	371, 377, 0, 0, 0, 225, 0, 375, 345, 433,
	209, 252, 368, 350, 373, 0, 0, 0, 374, 296,
	421, 363, 431, 450, 451, 232, 325, 440, 410, 446,
	462, 202, 229, 339, 403, 436, 394, 318, 417, 418,
	286, 393, 260, 187, 294, 456, 200, 383, 217, 207,
	193, 405, 429, 214, 386, 0, 0, 464, 195, 427,
	402, 314, 283, 284, 194, 0, 367, 237, 258, 227,
	334, 424, 425, 226, 465, 204, 445, 197, 0, 444,
	327, 420, 428, 315, 306, 196, 426, 313, 305, 289,
	248, 269, 361, 299, 362, 270, 323, 322, 324, 190,
	437, 0, 191, 0, 399, 438, 466, 210, 211, 212,
	0, 247, 251, 257, 259, 265, 266, 273, 292, 338,
	360, 358, 364, 0, 415, 432, 441, 448, 454, 455,
	457, 458, 459, 460, 461, 326, 272, 395, 288, 297,
	0, 0, 344, 376, 215, 435, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 183, 198, 293,
	0, 365, 255, 463, 443, 439, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 186, 199, 208, 218, 230, 245, 253, 263,
	268, 271, 276, 277, 280, 285, 303, 308, 309, 310,
	311, 328, 329, 330, 333, 336, 337, 340, 342, 343,
	346, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 422, 423, 434, 447, 452, 264, 430, 453,
	0, 302, 0, 0, 304, 249, 267, 278, 0, 442,
	401, 203, 372, 256, 192, 221, 206, 228, 243, 246,
	282, 312, 319, 348, 352, 261, 240, 219, 369, 216,
	387, 407, 408, 409, 411, 316, 235, 351, 412, 0,
	300, 413, 414, 274, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 291, 236, 0, 0, 349, 0,
	189, 0, 388, 224, 301, 298, 419, 250, 242, 238,
	223, 275, 307, 347, 406, 341, 0, 295, 0, 0,
	397, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 222, 188,
	332, 398, 254, 0, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 220, 0, 0, 0, 0, 0, 234, 279,
	241, 233, 416, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 321, 0, 0, 0, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 184, 201,
	0, 0, 331, 371, 377, 0, 0, 0, 225, 0,
	375, 345, 433, 209, 252, 368, 350, 373, 0, 0,
	0, 374, 296, 421, 363, 431, 450, 451, 232, 325,
	440, 410, 446, 462, 202, 229, 339, 403, 436, 394,
	318, 417, 418, 286, 393, 260, 187, 294, 456, 200,
	383, 217, 207, 193, 405, 429, 214, 386, 0, 0,
	464, 195, 427, 402, 314, 283, 284, 194, 0, 367,
	237, 258, 227, 334, 424, 425, 226, 465, 204, 445,
	197, 0, 444, 327, 420, 428, 315, 306, 196, 426,
	313, 305, 289, 248, 269, 361, 299, 362, 270, 323,
	322, 324, 190, 437, 0, 191, 0, 399, 438, 466,
	210, 211, 212, 0, 247, 251, 257, 259, 265, 266,
	273, 292, 338, 360, 358, 364, 0, 415, 432, 441,
	448, 454, 455, 457, 458, 459, 460, 461, 326, 272,
	395, 288, 297, 0, 0, 344, 376, 215, 435, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	183, 198, 293, 1470, 365, 255, 463, 443, 439, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 186, 199, 208, 218, 230,
	245, 253, 263, 268, 271, 276, 277, 280, 285, 303,
	308, 309, 310, 311, 328, 329, 330, 333, 336, 337,
	340, 342, 343, 346, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 422, 423, 434, 447, 452,
	264, 430, 453, 0, 302, 0, 0, 304, 249, 267,
	278, 0, 442, 401, 203, 372, 256, 192, 221, 206,
	228, 243, 246, 282, 312, 319, 348, 352, 261, 240,
	219, 369, 216, 387, 407, 408, 409, 411, 316, 235,
	351, 412, 0, 300, 413, 414, 274, 0, 0, 0,
	0, 0, 0, 335, 0, 1351, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 291, 236, 0,
	0, 349, 0, 189, 0, 388, 224, 301, 298, 419,
	250, 242, 238, 223, 275, 307, 347, 406, 341, 0,
	295, 0, 0, 397, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 222, 188, 332, 398, 254, 0, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 220, 0, 0, 0, 0,
	0, 234, 279, 241, 233, 416, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 321, 0, 0, 0, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 184, 201, 0, 0, 331, 371, 377, 0, 0,
	0, 225, 0, 375, 345, 433, 209, 252, 368, 350,
	373, 0, 0, 0, 374, 296, 421, 363, 431, 450,
	451, 232, 325, 440, 410, 446, 462, 202, 229, 339,
	403, 436, 394, 318, 417, 418, 286, 393, 260, 187,
	294, 456, 200, 383, 217, 207, 193, 405, 429, 214,
	386, 0, 0, 464, 195, 427, 402, 314, 283, 284,
	194, 0, 367, 237, 258, 227, 334, 424, 425, 226,
	465, 204, 445, 197, 0, 444, 327, 420, 428, 315,
	306, 196, 426, 313, 305, 289, 248, 269, 361, 299,
	362, 270, 323, 322, 324, 190, 437, 0, 191, 0,
	399, 438, 466, 210, 211, 212, 0, 247, 251, 257,
	259, 265, 266, 273, 292, 338, 360, 358, 364, 0,
	415, 432, 441, 448, 454, 455, 457, 458, 459, 460,
	461, 326, 272, 395, 288, 297, 0, 0, 344, 376,
	215, 435, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 183, 198, 293, 0, 365, 255, 463,
	443, 439, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 186, 199,
	208, 218, 230, 245, 253, 263, 268, 271, 276, 277,
	280, 285, 303, 308, 309, 310, 311, 328, 329, 330,
	333, 336, 337, 340, 342, 343, 346, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 422, 423,
	434, 447, 452, 264, 430, 453, 0, 302, 0, 0,
	304, 249, 267, 278, 0, 442, 401, 203, 372, 256,
	192, 221, 206, 228, 243, 246, 282, 312, 319, 348,
	352, 261, 240, 219, 369, 216, 387, 407, 408, 409,
	411, 316, 235, 351, 412, 0, 300, 413, 414, 274,
	0, 0, 0, 0, 0, 0, 335, 0, 1349, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	291, 236, 0, 0, 349, 0, 189, 0, 388, 224,
	301, 298, 419, 250, 242, 238, 223, 275, 307, 347,
	406, 341, 0, 295, 0, 0, 397, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 222, 188, 332, 398, 254, 0,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 220, 0,
	0, 0, 0, 0, 234, 279, 241, 233, 416, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 321, 0,
	0, 0, 0, 449, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 184, 201, 0, 0, 331, 371,
	377, 0, 0, 0, 225, 0, 375, 345, 433, 209,
	252, 368, 350, 373, 0, 0, 0, 374, 296, 421,
	363, 431, 450, 451, 232, 325, 440, 410, 446, 462,
	202, 229, 339, 403, 436, 394, 318, 417, 418, 286,
	393, 260, 187, 294, 456, 200, 383, 217, 207, 193,
	405, 429, 214, 386, 0, 0, 464, 195, 427, 402,
	314, 283, 284, 194, 0, 367, 237, 258, 227, 334,
	424, 425, 226, 465, 204, 445, 197, 0, 444, 327,
	420, 428, 315, 306, 196, 426, 313, 305, 289, 248,
	269, 361, 299, 362, 270, 323, 322, 324, 190, 437,
	0, 191, 0, 399, 438, 466, 210, 211, 212, 0,
	247, 251, 257, 259, 265, 266, 273, 292, 338, 360,
	358, 364, 0, 415, 432, 441, 448, 454, 455, 457,
	458, 459, 460, 461, 326, 272, 395, 288, 297, 0,
	0, 344, 376, 215, 435, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 183, 198, 293, 0,
	365, 255, 463, 443, 439, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 186, 199, 208, 218, 230, 245, 253, 263, 268,
	271, 276, 277, 280, 285, 303, 308, 309, 310, 311,
	328, 329, 330, 333, 336, 337, 340, 342, 343, 346,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 422, 423, 434, 447, 452, 264, 430, 453, 0,
	302, 0, 0, 304, 249, 267, 278, 0, 442, 401,
	203, 372, 256, 192, 221, 206, 228, 243, 246, 282,
	312, 319, 348, 352, 261, 240, 219, 369, 216, 387,
	407, 408, 409, 411, 316, 235, 351, 412, 0, 300,
	413, 414, 274, 0, 0, 0, 0, 0, 0, 335,
	0, 1347, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 291, 236, 0, 0, 349, 0, 189,
	0, 388, 224, 301, 298, 419, 250, 242, 238, 223,
	275, 307, 347, 406, 341, 0, 295, 0, 0, 397,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 222, 188, 332,
	398, 254, 0, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 220, 0, 0, 0, 0, 0, 234, 279, 241,
	233, 416, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 321, 0, 0, 0, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 184, 201, 0,
	0, 331, 371, 377, 0, 0, 0, 225, 0, 375,
	345, 433, 209, 252, 368, 350, 373, 0, 0, 0,
	374, 296, 421, 363, 431, 450, 451, 232, 325, 440,
	410, 446, 462, 202, 229, 339, 403, 436, 394, 318,
	417, 418, 286, 393, 260, 187, 294, 456, 200, 383,
	217, 207, 193, 405, 429, 214, 386, 0, 0, 464,
	195, 427, 402, 314, 283, 284, 194, 0, 367, 237,
	258, 227, 334, 424, 425, 226, 465, 204, 445, 197,
	0, 444, 327, 420, 428, 315, 306, 196, 426, 313,
	305, 289, 248, 269, 361, 299, 362, 270, 323, 322,
	324, 190, 437, 0, 191, 0, 399, 438, 466, 210,
	211, 212, 0, 247, 251, 257, 259, 265, 266, 273,
	292, 338, 360, 358, 364, 0, 415, 432, 441, 448,
	454, 455, 457, 458, 459, 460, 461, 326, 272, 395,
	288, 297, 0, 0, 344, 376, 215, 435, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 183,
	198, 293, 0, 365, 255, 463, 443, 439, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 186, 199, 208, 218, 230, 245,
	253, 263, 268, 271, 276, 277, 280, 285, 303, 308,
	309, 310, 311, 328, 329, 330, 333, 336, 337, 340,
	342, 343, 346, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 422, 423, 434, 447, 452, 264,
	430, 453, 0, 302, 0, 0, 304, 249, 267, 278,
	0, 442, 401, 203, 372, 256, 192, 221, 206, 228,
	243, 246, 282, 312, 319, 348, 352, 261, 240, 219,
	369, 216, 387, 407, 408, 409, 411, 316, 235, 351,
	412, 0, 300, 413, 414, 274, 0, 0, 0, 0,
	0, 0, 335, 0, 1345, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 291, 236, 0, 0,
	349, 0, 189, 0, 388, 224, 301, 298, 419, 250,
	242, 238, 223, 275, 307, 347, 406, 341, 0, 295,
	0, 0, 397, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	222, 188, 332, 398, 254, 0, 0, 0, 0, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 220, 0, 0, 0, 0, 0,
	234, 279, 241, 233, 416, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 321, 0, 0, 0, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 287,
	184, 201, 0, 0, 331, 371, 377, 0, 0, 0,
	225, 0, 375, 345, 433, 209, 252, 368, 350, 373,
	0, 0, 0, 374, 296, 421, 363, 431, 450, 451,
	232, 325, 440, 410, 446, 462, 202, 229, 339, 403,
	436, 394, 318, 417, 418, 286, 393, 260, 187, 294,
	456, 200, 383, 217, 207, 193, 405, 429, 214, 386,
	0, 0, 464, 195, 427, 402, 314, 283, 284, 194,
	0, 367, 237, 258, 227, 334, 424, 425, 226, 465,
	204, 445, 197, 0, 444, 327, 420, 428, 315, 306,
	196, 426, 313, 305, 289, 248, 269, 361, 299, 362,
	270, 323, 322, 324, 190, 437, 0, 191, 0, 399,
	438, 466, 210, 211, 212, 0, 247, 251, 257, 259,
	265, 266, 273, 292, 338, 360, 358, 364, 0, 415,
	432, 441, 448, 454, 455, 457, 458, 459, 460, 461,
	326, 272, 395, 288, 297, 0, 0, 344, 376, 215,
	435, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 183, 198, 293, 0, 365, 255, 463, 443,
	439, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 186, 199, 208,
	218, 230, 245, 253, 263, 268, 271, 276, 277, 280,
	285, 303, 308, 309, 310, 311, 328, 329, 330, 333,
	336, 337, 340, 342, 343, 346, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 422, 423, 434,
	447, 452, 264, 430, 453, 0, 302, 0, 0, 304,
	249, 267, 278, 0, 442, 401, 203, 372, 256, 192,
	221, 206, 228, 243, 246, 282, 312, 319, 348, 352,
	261, 240, 219, 369, 216, 387, 407, 408, 409, 411,
	316, 235, 351, 412, 0, 300, 413, 414, 274, 0,
	0, 0, 0, 0, 0, 335, 0, 1343, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 291,
	236, 0, 0, 349, 0, 189, 0, 388, 224, 301,
	298, 419, 250, 242, 238, 223, 275, 307, 347, 406,
	341, 0, 295, 0, 0, 397, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 222, 188, 332, 398, 254, 0, 0,
	0, 0, 180, 181, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 220, 0, 0,
	0, 0, 0, 234, 279, 241, 233, 416, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 321, 0, 0,
	0, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 184, 201, 0, 0, 331, 371, 377,
	0, 0, 0, 225, 0, 375, 345, 433, 209, 252,
	368, 350, 373, 0, 0, 0, 374, 296, 421, 363,
	431, 450, 451, 232, 325, 440, 410, 446, 462, 202,
	229, 339, 403, 436, 394, 318, 417, 418, 286, 393,
	260, 187, 294, 456, 200, 383, 217, 207, 193, 405,
	429, 214, 386, 0, 0, 464, 195, 427, 402, 314,
	283, 284, 194, 0, 367, 237, 258, 227, 334, 424,
	425, 226, 465, 204, 445, 197, 0, 444, 327, 420,
	428, 315, 306, 196, 426, 313, 305, 289, 248, 269,
	361, 299, 362, 270, 323, 322, 324, 190, 437, 0,
	191, 0, 399, 438, 466, 210, 211, 212, 0, 247,
	251, 257, 259, 265, 266, 273, 292, 338, 360, 358,
	364, 0, 415, 432, 441, 448, 454, 455, 457, 458,
	459, 460, 461, 326, 272, 395, 288, 297, 0, 0,
	344, 376, 215, 435, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 485, 0, 183, 198, 293, 0, 365,
	255, 463, 443, 439, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	186, 199, 208, 218, 230, 245, 253, 263, 268, 271,
	276, 277, 280, 285, 303, 308, 309, 310, 311, 328,
	329, 330, 333, 336, 337, 340, 342, 343, 346, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	422, 423, 434, 447, 452, 264, 430, 453, 0, 302,
	0, 0, 304, 249, 267, 278, 0, 442, 401, 203,
	372, 256, 192, 221, 206, 228, 243, 246, 282, 312,
	319, 348, 352, 261, 240, 219, 369, 216, 387, 407,
	408, 409, 411, 316, 235, 351, 412, 0, 300, 413,
	414, 274, 0, 0, 0, 0, 0, 0, 335, 0,
	1339, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 291, 236, 0, 0, 349, 0, 189, 0,
	388, 224, 301, 298, 419, 250, 242, 238, 223, 275,
	307, 347, 406, 341, 0, 295, 0, 0, 397, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 222, 188, 332, 398,
	254, 0, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	220, 0, 0, 0, 0, 0, 234, 279, 241, 233,
	416, 0, 0, 0, 0, 205, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	321, 0, 0, 0, 0, 449, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 287, 184, 201, 0, 0,
	331, 371, 377, 0, 0, 0, 225, 0, 375, 345,
	433, 209, 252, 368, 350, 373, 0, 0, 0, 374,
	296, 421, 363, 431, 450, 451, 232, 325, 440, 410,
	446, 462, 202, 229, 339, 403, 436, 394, 318, 417,
	418, 286, 393, 260, 187, 294, 456, 200, 383, 217,
	207, 193, 405, 429, 214, 386, 0, 0, 464, 195,
	427, 402, 314, 283, 284, 194, 0, 367, 237, 258,
	227, 334, 424, 425, 226, 465, 204, 445, 197, 0,
	444, 327, 420, 428, 315, 306, 196, 426, 313, 305,
	289, 248, 269, 361, 299, 362, 270, 323, 322, 324,
	190, 437, 0, 191, 0, 399, 438, 466, 210, 211,
	212, 0, 247, 251, 257, 259, 265, 266, 273, 292,
	338, 360, 358, 364, 0, 415, 432, 441, 448, 454,
	455, 457, 458, 459, 460, 461, 326, 272, 395, 288,
	297, 0, 0, 344, 376, 215, 435, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 183, 198,
	293, 0, 365, 255, 463, 443, 439, 0, 0, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 185, 186, 199, 208, 218, 230, 245, 253,
	263, 268, 271, 276, 277, 280, 285, 303, 308, 309,
	310, 311, 328, 329, 330, 333, 336, 337, 340, 342,
	343, 346, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 422, 423, 434, 447, 452, 264, 430,
	453, 0, 302, 0, 0, 304, 249, 267, 278, 0,
	442, 401, 203, 372, 256, 192, 221, 206, 228, 243,
	246, 282, 312, 319, 348, 352, 261, 240, 219, 369,
	216, 387, 407, 408, 409, 411, 316, 235, 351, 412,
	0, 300, 413, 414, 274, 0, 0, 0, 0, 0,
	0, 335, 0, 1337, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 291, 236, 0, 0, 349,
	0, 189, 0, 388, 224, 301, 298, 419, 250, 242,
	238, 223, 275, 307, 347, 406, 341, 0, 295, 0,
	0, 397, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 222,
	188, 332, 398, 254, 0, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 220, 0, 0, 0, 0, 0, 234,
	279, 241, 233, 416, 0, 0, 0, 0, 205, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 321, 0, 0, 0, 0, 449, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 184,
	201, 0, 0, 331, 371, 377, 0, 0, 0, 225,
	0, 375, 345, 433, 209, 252, 368, 350, 373, 0,
	0, 0, 374, 296, 421, 363, 431, 450, 451, 232,
	325, 440, 410, 446, 462, 202, 229, 339, 403, 436,
	394, 318, 417, 418, 286, 393, 260, 187, 294, 456,
	200, 383, 217, 207, 193, 405, 429, 214, 386, 0,
	0, 464, 195, 427, 402, 314, 283, 284, 194, 0,
	367, 237, 258, 227, 334, 424, 425, 226, 465, 204,
	445, 197, 0, 444, 327, 420, 428, 315, 306, 196,
	426, 313, 305, 289, 248, 269, 361, 299, 362, 270,
	323, 322, 324, 190, 437, 0, 191, 0, 399, 438,
	466, 210, 211, 212, 0, 247, 251, 257, 259, 265,
	266, 273, 292, 338, 360, 358, 364, 0, 415, 432,
	441, 448, 454, 455, 457, 458, 459, 460, 461, 326,
	272, 395, 288, 297, 0, 0, 344, 376, 215, 435,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 183, 198, 293, 0, 365, 255, 463, 443, 439,
	0, 0, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 186, 199, 208, 218,
	230, 245, 253, 263, 268, 271, 276, 277, 280, 285,
	303, 308, 309, 310, 311, 328, 329, 330, 333, 336,
	337, 340, 342, 343, 346, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 422, 423, 434, 447,
	452, 264, 430, 453, 0, 302, 0, 0, 304, 249,
	267, 278, 0, 442, 401, 203, 372, 256, 192, 221,
	206, 228, 243, 246, 282, 312, 319, 348, 352, 261,
	240, 219, 369, 216, 387, 407, 408, 409, 411, 316,
	235, 351, 412, 0, 300, 413, 414, 274, 0, 0,
	0, 0, 0, 0, 335, 0, 1335, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 291, 236,
	0, 0, 349, 0, 189, 0, 388, 224, 301, 298,
	419, 250, 242, 238, 223, 275, 307, 347, 406, 341,
	0, 295, 0, 0, 397, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 222, 188, 332, 398, 254, 0, 0, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 220, 0, 0, 0,
	0, 0, 234, 279, 241, 233, 416, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 321, 0, 0, 0,
	0, 449, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 184, 201, 0, 0, 331, 371, 377, 0,
	0, 0, 225, 0, 375, 345, 433, 209, 252, 368,
	350, 373, 0, 0, 0, 374, 296, 421, 363, 431,
	450, 451, 232, 325, 440, 410, 446, 462, 202, 229,
	339, 403, 436, 394, 318, 417, 418, 286, 393, 260,
	187, 294, 456, 200, 383, 217, 207, 193, 405, 429,
	214, 386, 0, 0, 464, 195, 427, 402, 314, 283,
	284, 194, 0, 367, 237, 258, 227, 334, 424, 425,
	226, 465, 204, 445, 197, 0, 444, 327, 420, 428,
	315, 306, 196, 426, 313, 305, 289, 248, 269, 361,
	299, 362, 270, 323, 322, 324, 190, 437, 0, 191,
	0, 399, 438, 466, 210, 211, 212, 0, 247, 251,
	257, 259, 265, 266, 273, 292, 338, 360, 358, 364,
	0, 415, 432, 441, 448, 454, 455, 457, 458, 459,
	460, 461, 326, 272, 395, 288, 297, 0, 0, 344,
	376, 215, 435, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 183, 198, 293, 0, 365, 255,
	463, 443, 439, 0, 0, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 185, 186,
	199, 208, 218, 230, 245, 253, 263, 268, 271, 276,
	277, 280, 285, 303, 308, 309, 310, 311, 328, 329,
	330, 333, 336, 337, 340, 342, 343, 346, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 422,
	423, 434, 447, 452, 264, 430, 453, 0, 302, 0,
	0, 304, 249, 267, 278, 0, 442, 401, 203, 372,
	256, 192, 221, 206, 228, 243, 246, 282, 312, 319,
	348, 352, 261, 240, 219, 369, 216, 387, 407, 408,
	409, 411, 316, 235, 351, 412, 0, 300, 413, 414,
	274, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 291, 236, 0, 0, 349, 0, 189, 0, 388,
	224, 301, 298, 419, 250, 242, 238, 223, 275, 307,
	347, 406, 341, 0, 295, 0, 0, 397, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 222, 188, 332, 398, 254,
	0, 1312, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 220,
	0, 0, 0, 0, 0, 234, 279, 241, 233, 416,
	0, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 321,
	0, 0, 0, 0, 449, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 184, 201, 0, 0, 331,
	371, 377, 0, 0, 0, 225, 0, 375, 345, 433,
	209, 252, 368, 350, 373, 0, 0, 0, 374, 296,
	421, 363, 431, 450, 451, 232, 325, 440, 410, 446,
	462, 202, 229, 339, 403, 436, 394, 318, 417, 418,
	286, 393, 260, 187, 294, 456, 200, 383, 217, 207,
	193, 405, 429, 214, 386, 0, 0, 464, 195, 427,
	402, 314, 283, 284, 194, 0, 367, 237, 258, 227,
	334, 424, 425, 226, 465, 204, 445, 197, 0, 444,
	327, 420, 428, 315, 306, 196, 426, 313, 305, 289,
	248, 269, 361, 299, 362, 270, 323, 322, 324, 190,
	437, 0, 191, 0, 399, 438, 466, 210, 211, 212,
	0, 247, 251, 257, 259, 265, 266, 273, 292, 338,
	360, 358, 364, 0, 415, 432, 441, 448, 454, 455,
	457, 458, 459, 460, 461, 326, 272, 395, 288, 297,
	0, 0, 344, 376, 215, 435, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 183, 198, 293,
	0, 365, 255, 463, 443, 439, 0, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 186, 199, 208, 218, 230, 245, 253, 263,
	268, 271, 276, 277, 280, 285, 303, 308, 309, 310,
	311, 328, 329, 330, 333, 336, 337, 340, 342, 343,
	346, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 422, 423, 434, 447, 452, 264, 430, 453,
	0, 302, 0, 0, 304, 249, 267, 278, 0, 442,
	401, 203, 372, 256, 192, 221, 206, 228, 243, 246,
	282, 312, 319, 348, 352, 261, 240, 219, 369, 216,
	387, 407, 408, 409, 411, 316, 235, 351, 412, 0,
	300, 413, 414, 274, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 1214, 239,
	0, 0, 0, 0, 291, 236, 0, 0, 349, 0,
	189, 0, 388, 224, 301, 298, 419, 250, 242, 238,
	223, 275, 307, 347, 406, 341, 0, 295, 0, 0,
	397, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 222, 188,
	332, 398, 254, 0, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 220, 0, 0, 0, 0, 0, 234, 279,
	241, 233, 416, 0, 0, 0, 0, 205, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 321, 0, 0, 0, 0, 449, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 184, 201,
	0, 0, 331, 371, 377, 0, 0, 0, 225, 0,
	375, 345, 433, 209, 252, 368, 350, 373, 0, 0,
	0, 374, 296, 421, 363, 431, 450, 451, 232, 325,
	440, 410, 446, 462, 202, 229, 339, 403, 436, 394,
	318, 417, 418, 286, 393, 260, 187, 294, 456, 200,
	383, 217, 207, 193, 405, 429, 214, 386, 0, 0,
	464, 195, 427, 402, 314, 283, 284, 194, 0, 367,
	237, 258, 227, 334, 424, 425, 226, 465, 204, 445,
	197, 0, 444, 327, 420, 428, 315, 306, 196, 426,
	313, 305, 289, 248, 269, 361, 299, 362, 270, 323,
	322, 324, 190, 437, 0, 191, 0, 399, 438, 466,
	210, 211, 212, 0, 247, 251, 257, 259, 265, 266,
	273, 292, 338, 360, 358, 364, 0, 415, 432, 441,
	448, 454, 455, 457, 458, 459, 460, 461, 326, 272,
	395, 288, 297, 0, 0, 344, 376, 215, 435, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	183, 198, 293, 0, 365, 255, 463, 443, 439, 0,
	0, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 185, 186, 199, 208, 218, 230,
	245, 253, 263, 268, 271, 276, 277, 280, 285, 303,
	308, 309, 310, 311, 328, 329, 330, 333, 336, 337,
	340, 342, 343, 346, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 422, 423, 434, 447, 452,
	264, 430, 453, 0, 302, 0, 0, 304, 249, 267,
	278, 0, 442, 401, 203, 372, 256, 192, 221, 206,
	228, 243, 246, 282, 312, 319, 348, 352, 261, 240,
	219, 369, 216, 387, 407, 408, 409, 411, 316, 235,
	351, 412, 0, 300, 413, 414, 274, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 291, 236, 0,
	0, 349, 0, 189, 0, 388, 224, 301, 298, 419,
	250, 242, 238, 223, 275, 307, 347, 406, 341, 0,
	295, 0, 0, 397, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 222, 188, 332, 398, 254, 0, 0, 0, 0,
	180, 181, 182, 0, 1052, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 220, 0, 0, 0, 0,
	0, 234, 279, 241, 233, 416, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 321, 0, 0, 0, 0,
	449, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 184, 201, 0, 0, 331, 371, 377, 0, 0,
	0, 225, 0, 375, 345, 433, 209, 252, 368, 350,
	373, 0, 0, 0, 374, 296, 421, 363, 431, 450,
	451, 232, 325, 440, 410, 446, 462, 202, 229, 339,
	403, 436, 394, 318, 417, 418, 286, 393, 260, 187,
	294, 456, 200, 383, 217, 207, 193, 405, 429, 214,
	386, 0, 0, 464, 195, 427, 402, 314, 283, 284,
	194, 0, 367, 237, 258, 227, 334, 424, 425, 226,
	465, 204, 445, 197, 0, 444, 327, 420, 428, 315,
	306, 196, 426, 313, 305, 289, 248, 269, 361, 299,
	362, 270, 323, 322, 324, 190, 437, 0, 191, 0,
	399, 438, 466, 210, 211, 212, 0, 247, 251, 257,
	259, 265, 266, 273, 292, 338, 360, 358, 364, 0,
	415, 432, 441, 448, 454, 455, 457, 458, 459, 460,
	461, 326, 272, 395, 288, 297, 0, 0, 344, 376,
	215, 435, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 183, 198, 293, 0, 365, 255, 463,
	443, 439, 0, 0, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 185, 186, 199,
	208, 218, 230, 245, 253, 263, 268, 271, 276, 277,
	280, 285, 303, 308, 309, 310, 311, 328, 329, 330,
	333, 336, 337, 340, 342, 343, 346, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 422, 423,
	434, 447, 452, 264, 430, 453, 0, 302, 0, 0,
	304, 249, 267, 278, 0, 442, 401, 203, 372, 256,
	192, 221, 206, 228, 243, 246, 282, 312, 319, 348,
	352, 261, 240, 219, 369, 216, 387, 407, 408, 409,
	411, 316, 235, 351, 412, 0, 300, 413, 414, 274,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	291, 236, 0, 0, 349, 0, 189, 0, 388, 224,
	301, 298, 419, 250, 242, 238, 223, 275, 307, 347,
	406, 341, 0, 295, 0, 0, 397, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 222, 188, 332, 398, 254, 0,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 220, 0,
	0, 0, 0, 0, 234, 279, 241, 233, 416, 0,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 321, 0,
	0, 0, 0, 449, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 184, 201, 0, 0, 331, 371,
	377, 0, 0, 0, 225, 0, 375, 345, 433, 209,
	252, 368, 350, 373, 0, 0, 0, 374, 296, 421,
	363, 431, 450, 451, 232, 325, 440, 410, 446, 462,
	202, 229, 339, 403, 436, 394, 318, 417, 418, 286,
	393, 260, 187, 294, 456, 200, 383, 217, 207, 193,
	405, 429, 214, 386, 0, 0, 464, 195, 427, 402,
	314, 283, 284, 194, 0, 367, 237, 258, 227, 334,
	424, 425, 226, 465, 204, 445, 197, 0, 444, 327,
	420, 428, 315, 306, 196, 426, 313, 305, 289, 248,
	269, 361, 299, 362, 270, 323, 322, 324, 190, 437,
	0, 191, 0, 399, 438, 466, 210, 211, 212, 0,
	247, 251, 257, 259, 265, 266, 273, 292, 338, 360,
	358, 364, 0, 415, 432, 441, 448, 454, 455, 457,
	458, 459, 460, 461, 326, 272, 395, 288, 297, 0,
	0, 344, 376, 215, 435, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 183, 198, 293, 0,
	365, 255, 463, 443, 439, 0, 0, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 317,
	0, 0, 0, 0, 0, 0, 683, 0, 0, 0,
	185, 186, 199, 208, 218, 230, 245, 253, 263, 268,
	271, 276, 277, 280, 285, 303, 308, 309, 310, 311,
	328, 329, 330, 333, 336, 337, 340, 342, 343, 346,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 422, 423, 434, 447, 452, 264, 430, 453, 0,
	302, 0, 0, 304, 249, 267, 278, 0, 442, 401,
	203, 372, 256, 192, 221, 206, 228, 243, 246, 282,
	312, 319, 348, 352, 261, 240, 219, 369, 216, 387,
	407, 408, 409, 411, 316, 235, 351, 412, 0, 300,
	413, 414, 274, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 291, 236, 0, 0, 349, 0, 189,
	0, 388, 224, 301, 298, 419, 250, 242, 238, 223,
	275, 307, 347, 406, 341, 0, 295, 0, 0, 397,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 222, 188, 332,
	398, 254, 0, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 220, 0, 0, 0, 0, 0, 234, 279, 241,
	233, 416, 0, 0, 0, 0, 205, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 541, 0, 262,
	0, 321, 0, 0, 0, 0, 449, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 184, 201, 0,
	0, 331, 371, 377, 0, 0, 0, 225, 0, 375,
	345, 433, 209, 252, 368, 350, 373, 0, 0, 0,
	374, 296, 421, 363, 431, 450, 451, 232, 325, 440,
	410, 446, 462, 202, 229, 339, 403, 436, 394, 318,
	417, 418, 286, 393, 260, 187, 294, 456, 200, 383,
	217, 207, 193, 405, 429, 214, 386, 0, 0, 464,
	195, 427, 402, 314, 283, 284, 194, 0, 367, 237,
	258, 227, 334, 424, 425, 226, 465, 204, 445, 197,
	0, 444, 327, 420, 428, 315, 306, 196, 426, 313,
	305, 289, 248, 269, 361, 299, 362, 270, 323, 322,
	324, 190, 437, 0, 191, 0, 399, 438, 466, 210,
	211, 212, 0, 247, 251, 257, 259, 265, 266, 273,
	292, 338, 360, 358, 364, 0, 415, 432, 441, 448,
	454, 455, 457, 458, 459, 460, 461, 326, 272, 395,
	288, 297, 0, 0, 344, 376, 215, 435, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 183,
	198, 293, 0, 365, 255, 463, 443, 439, 0, 0,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 185, 186, 199, 208, 218, 230, 245,
	253, 263, 268, 271, 276, 277, 280, 285, 303, 308,
	309, 310, 311, 328, 329, 330, 333, 336, 337, 340,
	342, 343, 346, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 422, 423, 434, 447, 452, 540,
	430, 453, 0, 302, 0, 0, 304, 249, 267, 278,
	0, 442, 401, 203, 372, 256, 192, 221, 206, 228,
	243, 246, 282, 312, 319, 348, 352, 261, 240, 219,
	369, 216, 387, 407, 408, 409, 411, 316, 235, 351,
	412, 0, 300, 413, 414, 274, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 291, 236, 0, 0,
	349, 0, 189, 0, 388, 224, 301, 298, 419, 250,
	242, 238, 223, 275, 307, 347, 406, 341, 0, 295,
	0, 0, 397, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	222, 188, 332, 398, 254, 0, 0, 0, 0, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 220, 0, 0, 0, 0, 0,
	234, 279, 241, 233, 416, 0, 0, 0, 0, 205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 321, 0, 0, 488, 0, 449,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 287,
	184, 201, 0, 0, 331, 371, 377, 0, 0, 0,
	225, 0, 375, 345, 433, 209, 252, 368, 350, 373,
	0, 0, 0, 374, 296, 421, 363, 431, 450, 451,
	232, 325, 440, 410, 446, 462, 202, 229, 339, 403,
	436, 394, 318, 417, 418, 286, 393, 260, 187, 294,
	456, 200, 383, 217, 207, 193, 405, 429, 214, 386,
	0, 0, 464, 195, 427, 402, 314, 283, 284, 194,
	0, 367, 237, 258, 227, 334, 424, 425, 226, 465,
	204, 445, 197, 0, 444, 327, 420, 428, 315, 306,
	196, 426, 313, 305, 289, 248, 269, 361, 299, 362,
	270, 323, 322, 324, 190, 437, 0, 191, 0, 399,
	438, 466, 210, 211, 212, 0, 247, 251, 257, 259,
	265, 266, 273, 292, 338, 360, 358, 364, 0, 415,
	432, 441, 448, 454, 455, 457, 458, 459, 460, 461,
	326, 272, 395, 288, 297, 0, 0, 344, 376, 215,
	435, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	485, 0, 183, 198, 293, 0, 365, 255, 463, 443,
	439, 0, 0, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 185, 186, 199, 208,
	218, 230, 245, 253, 263, 268, 271, 276, 277, 280,
	285, 303, 308, 309, 310, 311, 328, 329, 330, 333,
	336, 337, 340, 342, 343, 346, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 422, 423, 434,
	447, 452, 264, 430, 453, 0, 302, 0, 0, 304,
	249, 267, 278, 0, 442, 401, 203, 372, 256, 192,
	221, 206, 228, 243, 246, 282, 312, 319, 348, 352,
	261, 240, 219, 369, 216, 387, 407, 408, 409, 411,
	316, 235, 351, 412, 0, 300, 413, 414, 274, 0,
	0, 0, 0, 0, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 291,
	236, 0, 0, 349, 0, 189, 0, 388, 224, 301,
	298, 419, 250, 242, 238, 223, 275, 307, 347, 406,
	341, 0, 295, 0, 0, 397, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 222, 188, 332, 398, 254, 0, 0,
	0, 0, 180, 181, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 220, 0, 0,
	0, 0, 0, 234, 279, 241, 233, 416, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 321, 0, 0,
	0, 0, 449, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 184, 201, 0, 0, 331, 371, 377,
	0, 0, 0, 225, 0, 375, 345, 433, 209, 252,
	368, 350, 373, 0, 0, 0, 374, 296, 421, 363,
	431, 450, 451, 232, 325, 440, 410, 446, 462, 202,
	229, 339, 403, 436, 394, 318, 417, 418, 286, 393,
	260, 187, 294, 456, 200, 383, 217, 207, 193, 405,
	429, 214, 386, 0, 0, 464, 195, 427, 402, 314,
	283, 284, 194, 0, 367, 237, 258, 227, 334, 424,
	425, 226, 465, 204, 445, 197, 0, 444, 327, 420,
	428, 315, 306, 196, 426, 313, 305, 289, 248, 269,
	361, 299, 362, 270, 323, 322, 324, 190, 437, 0,
	191, 0, 399, 438, 466, 210, 211, 212, 0, 247,
	251, 257, 259, 265, 266, 273, 292, 338, 360, 358,
	364, 0, 415, 432, 441, 448, 454, 455, 457, 458,
	459, 460, 461, 326, 272, 395, 288, 297, 0, 0,
	344, 376, 215, 435, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 485, 0, 183, 198, 293, 0, 365,
	255, 463, 443, 439, 0, 0, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 185,
	186, 199, 208, 218, 230, 245, 253, 263, 268, 271,
	276, 277, 280, 285, 303, 308, 309, 310, 311, 328,
	329, 330, 333, 336, 337, 340, 342, 343, 346, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	422, 423, 434, 447, 452, 264, 430, 453, 0, 302,
	0, 0, 304, 249, 267, 278, 0, 442, 401, 203,
	372, 256, 192, 221, 206, 228, 243, 246, 282, 312,
	319, 348, 352, 261, 240, 219, 369, 216, 387, 407,
	408, 409, 411, 316, 235, 351, 174, 0, 300, 413,
	414, 274, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 0, 0, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 156, 0, 0, 0, 0, 0, 1309, 1310,
	147, 146, 173, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 1311, 149, 0, 1308,
	0, 143, 144, 0, 0, 0, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 157, 154,
	160, 161, 162, 163, 165, 166, 167, 168, 0, 0,
	0, 0, 0, 169, 170, 171, 172,
}

var yyPact = [...]int{
	2971, -1000, -387, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1738, 1745, -1000, -1000, -1000, -1000,
	1808, -1000, 672, 1457, -1000, 1689, 4056, -1000, 33926, 457,
	-1000, 33383, 455, 246, 33926, -1000, 106, -1000, 96, 33926,
	102, 32840, -1000, -1000, -300, 13832, 1640, 4, 2, 33926,
	-1000, 33926, 1797, 1493, -1000, 283, -1000, -1000, -1000, -1000,
	-1000, -1000, 32297, -1000, -1000, -1000, 1696, 1679, 1813, 607,
	1633, -1000, 1760, 1493, -1000, 13832, 1786, 1746, 13289, -1000,
	13289, 323, -1000, -1000, 10024, -1000, -1000, 18178, 33926, 33926,
	255, -1000, 1689, -1000, -1000, 319, -1000, 245, 1404, -1000,
	1403, -1000, 588, 559, 267, 384, 374, 265, 264, 263,
	262, 260, 254, 253, 252, 272, -1000, 649, 649, -195,
	-196, 2570, 316, 316, 316, 343, 1655, 1653, -1000, 630,
	-1000, 649, 649, 275, 649, 649, 649, 649, 204, 202,
	649, 649, 649, 649, 649, 649, 649, 649, 649, 649,
	649, 649, 649, 649, 649, 266, 1689, 196, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 33926, 127, 33926, -1000,
	520, 33926, 760, 760, 11, 760, 760, 760, 760, 113,
	502, -6, -1000, 103, 190, 94, 181, 724, 125, 112,
	-1000, -1000, 173, 724, 1138, 613, 100, -1000, 760, 7820,
	7820, 7820, -1000, 1685, -1000, -1000, -1000, -1000, -1000, -1000,
	1144, -1000, 340, -1000, -1000, -1000, -1000, 33926, 31754, 268,
	670, -1000, -1000, -1000, 45, -1000, -1000, 1370, 944, 13832,
	1024, -1000, 1250, 546, -1000, -1000, -1000, -1000, -1000, 487,
	14375, 14375, 14375, 14375, -1000, -1000, 1407, 1407, 1407, 1407,
	14375, 1407, 14375, 1407, 1407, 1407, 1407, 13832, 1407, 1407,
	1407, -1000, 1407, 1407, 1407, 1407, 1407, 1407, 1407, 1407,
	513, 1407, 1407, 1407, 1407, 1407, -1000, -1000, -1000, -1000,
	1407, 1407, 1407, 1407, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16004, -1000, 11660, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 33926, -1000, 1407, 109, 1805,
	1760, 1493, -1000, 1797, 1772, 283, -1000, 1676, 1231, 1262,
	1160, 1493, 1394, 33926, -1000, 1411, -1000, -1000, -1000, 1586,
	1134, 1136, -1000, -1000, -1000, -1000, 1107, 13832, -1000, -1000,
	1804, -1000, 15461, 510, 814, 1803, 31211, -1000, 323, 323,
	1400, 9473, -50, -1000, -1000, -1000, 659, 20893, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1685, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1355, 33926, -1000, -1000, 4048,
	1168, -1000, 1456, -1000, 1353, -1000, 1431, 1468, 449, 1168,
	433, 416, 415, -1000, -92, -1000, -1000, -1000, -1000, -1000,
	649, 649, -1000, 259, 1784, 4056, 34471, -1000, -1000, -1000,
	30668, 1455, 1168, -1000, 1454, -1000, 744, 417, 459, 459,
	1168, -1000, -1000, 33926, 1168, 741, 739, 33926, 33926, -1000,
	30125, -1000, 29582, 29039, 1006, 33926, 28496, 27953, 27410, 26867,
	26324, -1000, 1525, -1000, 1453, -1000, -1000, -1000, 33926, 33926,
	33926, 271, -1000, -1000, 33926, 1168, -1000, -1000, 996, 990,
	649, 649, 984, 1133, 1131, 1130, 649, 649, 976, 1126,
	23065, 214, 960, 959, 950, 1075, 1120, 185, 1036, 977,
	941, 33926, 1452, 33926, -1000, 169, 645, 312, 658, 1689,
	1635, 1397, 338, 438, 1168, 314, 314, -1000, 8371, -1000,
	-1000, 1117, 13832, -1000, 728, 724, 724, -1000, -1000, -1000,
	-1000, -1000, -1000, 760, 33926, 728, -1000, -1000, -1000, 724,
	760, 33926, 760, 760, 760, 760, 724, 724, 724, 760,
	33926, 33926, 33926, 33926, 33926, 33926, 33926, 33926, 33926, 7820,
	7820, 7820, 613, 760, -308, -1000, 1114, -1000, 1526, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 101, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -103, 1396,
	25781, -1000, -309, -311, -312, -313, -1000, -1000, -1000, -315,
	-322, -1000, -1000, -1000, 13832, 13832, 13832, 13832, -1000, 862,
	14375, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 867, 646,
	14375, 14375, 14375, 14375, 14375, 14375, 14375, 14375, 14375, 14375,
	14375, 14375, 14375, 14375, 14375, 657, 1113, 1103, 546, 546,
	546, 546, -1000, 13289, 13832, 13832, 546, -1000, 1168, 25238,
	13289, 13289, 13832, 1665, 679, 944, 33926, -1000, 1160, -1000,
	-1000, -1000, 949, -1000, 33926, 33926, 21, 13832, 10573, 8371,
	13289, 13289, 13289, 13289, 13289, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 504, 1274, 1212, 1348,
	-1000, 1395, -1000, -176, 17635, 13832, 1095, 24695, -1000, -1000,
	-1000, 1760, -1000, 1760, 1274, 1671, 1590, 13289, -1000, -1000,
	1671, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1230,
	-1000, 33926, 1394, 1737, 33926, 1584, 1076, 290, -1000, 13832,
	13832, 1391, -1000, 835, 33926, -1000, -1000, 24152, -1000, -1000,
	7269, -1000, 33926, 248, 33926, -1000, 22522, 23609, 8922, -50,
	-1000, 8922, 1382, -1000, -22, -28, 11116, 573, -1000, -1000,
	-1000, 2570, 14918, 1245, 573, 40, -1000, -1000, -1000, 1431,
	-1000, 1431, 1431, 1431, 1431, 290, 290, 290, 290, -1000,
	-1000, -1000, -1000, -1000, 1448, 1447, -1000, 1431, 1431, 1431,
	1431, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1446, 1446,
	1446, 1440, 1440, 302, -1000, 13832, 170, 33926, 1718, 928,
	169, 321, 1485, 1168, 1168, 1168, 321, -1000, 1151, 1112,
	-1000, -369, 1390, -1000, -1000, 1783, -1000, -1000, 435, 767,
	762, 563, 33926, 121, 237, -1000, 294, -1000, 33926, 1168,
	733, 459, 1168, -1000, 1168, -1000, -1000, -1000, -1000, -1000,
	1168, 1387, -1000, 1388, 836, 758, 832, 757, 1387, -1000,
	-1000, -112, 1387, -1000, 1387, -1000, 1387, -1000, 1387, -1000,
	1387, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 619,
	33926, 121, 657, -1000, 332, -1000, -1000, 657, 657, -1000,
	-1000, -1000, -1000, 1063, 1043, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -362, 33926, -1000, 163, 653, 216, 251, 186,
	33926, 158, 1741, 177, 201, 33926, 33926, 314, 1518, 33926,
	1711, 33926, -1000, -1000, -1000, -1000, 944, 33926, -1000, -1000,
	760, 760, -1000, -1000, 33926, 760, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 760, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 33926, 33926, -1000, -1000, -1000, -1000, -1000, 123,
	-24, 287, -1000, -1000, -1000, -1000, -1000, 1755, -1000, 944,
	700, 705, -1000, -1000, -1000, 969, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 867, 14375, 14375, 14375, 1421, 375, 1474,
	851, 1489, 735, 735, 787, 787, 582, 582, 582, 582,
	582, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1304, -1000,
	1074, 1089, 1160, -1000, 1304, 1304, 860, 13289, -1000, -1000,
	699, -1000, 13832, 1160, -1000, -1000, 1160, 1386, 1385, 1802,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1061, 1160, 13289, 13289, 1383, 1407, 501, -1000, 1304,
	1160, 1160, 1304, 1304, 8371, 1160, -1000, 33926, -1000, -301,
	-1000, -43, 532, 1407, -1000, 23065, 1160, 1370, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 20350, 1409, 1671, -1000, -1000,
	1407, 1334, -1000, -1000, 290, 23, 19807, -1000, -1000, 944,
	944, 13832, -1000, -1000, -1000, -1000, -1000, -1000, 500, 1795,
	276, 1407, -1000, 1288, 1517, -1000, -1000, -1000, 1736, 17092,
	33926, 1402, 1401, -1000, 496, -1000, 1382, -50, -54, -1000,
	-1000, -1000, -1000, 944, -1000, 1084, 249, 363, -1000, 303,
	-1000, -1000, -1000, -1000, 1646, 32, -1000, -1000, -1000, 290,
	290, -1000, -1000, -1000, -1000, -1000, -1000, 1040, 1040, -1000,
	-1000, -1000, -1000, -1000, 923, -1000, -1000, -1000, 900, -1000,
	-1000, 1067, 1516, 170, -1000, -1000, 649, 1037, 1648, 33926,
	-1000, -1000, 1213, 163, 33926, 691, 1515, -1000, 1485, 1485,
	1485, 33926, -1000, -1000, -1000, -1000, -374, 62, 278, -1000,
	-1000, -1000, 4602, 33926, 1325, -1000, 118, -1000, 1206, 1598,
	33926, -1000, 1323, 1445, 1168, 1168, -1000, -1000, -1000, 33926,
	1407, -1000, -1000, -1000, -1000, 437, 1688, 1680, 121, 118,
	573, 1168, -1000, -1000, -1000, -1000, -1000, -370, 1321, 364,
	126, 233, 33926, 33926, 33926, 33926, 33926, 475, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 199, 327, -1000, 33926,
	33926, 445, -1000, -1000, -1000, 724, -1000, -1000, 724, -1000,
	-1000, -1000, -1000, -1000, 1677, 33926, -25, -340, -1000, -337,
	-1000, -1000, -1000, -1000, 1123, 344, 1474, 14375, 14375, 13289,
	-105, 247, 247, 657, -1000, -1000, -1000, 13832, 13832, 1425,
	673, -1000, 13832, 677, -1000, -1000, 13832, 13832, 13832, 1160,
	223, -1000, 1304, 1304, 13289, 8371, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 532, -1000, 459, 459,
	459, 33926, -1000, -1000, 1754, -1000, 1596, 1595, 1800, 1795,
	-1000, 22522, 1671, -1000, -1000, 33926, -290, -1000, 1634, 1626,
	-1000, -1000, -1000, -1000, 6718, 1760, 13832, 1506, 33926, 1407,
	-1000, 16548, 33926, 33926, 22522, 22522, 22522, 22522, 22522, -1000,
	1564, 1550, -1000, 1541, 1539, 1545, 33926, -1000, 1302, 1160,
	1772, 17092, 19264, 1373, 22522, -1000, -1000, 22522, 33926, 6167,
	-1000, -1000, -37, -48, -1000, -1000, -1000, -1000, 2570, -1000,
	-1000, 702, 1726, 1644, -1000, -1000, -1000, -1000, 1299, -1000,
	1293, 1381, 1282, 99, -1000, 1438, 1660, 649, 649, -1000,
	898, -1000, 1168, -1000, -1000, 326, -1000, 1707, 33926, 1505,
	1503, 1501, -1000, -382, 895, 1444, 1426, 13832, 1442, 1782,
	1375, 33926, -1000, -1000, 33926, -1000, -1000, 351, -1000, 170,
	33926, -1000, -1000, -1000, 237, 33926, -1000, 5337, 118, -1000,
	-1000, -1000, -1000, -1000, -1000, 33926, 168, -1000, 1441, 1092,
	-1000, -1000, 1482, -1000, -1000, -1000, -1000, 129, 212, -1000,
	33926, 442, 1516, 33926, -1000, -1000, -1000, 760, 760, -1000,
	-1000, 1658, -1000, 1168, 14375, 14375, -1000, 546, -1000, 1407,
	1160, 1431, 1431, -1000, 1431, 1440, -1000, 1431, 87, 1431,
	86, 1431, -1000, -1000, 1160, 1160, 848, 829, -99, -1000,
	944, 13832, 754, 732, 894, -1000, 1428, 1427, -1000, -1000,
	1160, -1000, -1000, 1744, 1744, 1744, 1273, 33926, -1000, -1000,
	-1000, -1000, 1795, 1792, 1376, -1000, -1000, 23, 325, -1000,
	1623, 1626, -1000, 1781, 1628, 1776, -1000, -1000, -1000, 944,
	-1000, 1694, 1350, -1000, 643, 1358, -1000, -1000, 12746, 1280,
	1593, 494, 1273, 1433, 1517, 1481, 1488, 1591, -1000, -1000,
	-1000, -1000, 1535, -1000, 1458, -1000, -1000, 1411, -1000, -1000,
	1212, 248, 22522, 1291, 1291, -1000, 482, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 806, 5067, 1811, -1000, 1032, -1000,
	1025, -1000, 725, 714, -1000, 33926, 1423, -1000, 290, 1031,
	290, 889, -1000, 861, -1000, -1000, -235, -1000, -1000, 1439,
	1521, -1000, -1000, 33926, -1000, -1000, 33926, 33926, 33926, 1419,
	1775, -1000, 13832, 1418, 632, 963, 33926, 33926, -1000, -1000,
	220, 1407, -1000, 1271, 1269, -1000, -185, -1000, 13832, -1000,
	-1000, -1000, 1001, 1001, -1000, 1411, -1000, -1000, -1000, 1196,
	-1000, -1000, -119, 33926, 33926, 33926, 33926, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 546, 14375, -1000, -1000,
	290, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13832, -1000, 13832, -1000, 1760, 1028, 944, 13832, 13832, -1000,
	856, 825, -1000, 1407, 1599, 1407, 1407, 19264, -1000, 1792,
	1790, 1770, 1619, 1624, 1624, 1623, -1000, 1767, 1766, -1000,
	1018, 1765, 1017, 713, -1000, 33926, 13832, 1407, -1000, 270,
	33926, 1407, 33926, -1000, 1773, -1000, -1000, 13832, 1414, -1000,
	13832, -1000, -1000, -1000, -1000, -1000, 1795, 1291, -1000, -1000,
	590, -1000, 13832, -1000, -1000, -1000, 379, -1000, -1000, -1000,
	-1000, -1000, 1413, 13832, -1000, -1000, -1000, 1192, 1174, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1411, -1000, -1000,
	-1000, -1000, 237, -376, 955, 33926, 821, -1000, 1264, 1375,
	413, -1000, 13832, 250, -1000, 237, -1000, -198, -199, 894,
	-1000, -1000, 1723, -1000, -1000, 8371, -1000, -1000, 1408, 1483,
	-1000, 149, -1000, 894, 894, 1160, -1000, 894, 894, 1167,
	1165, 18721, -1000, 1764, 1762, 21979, 21979, 532, 1790, -1000,
	13832, 13832, 1602, 901, -1000, -1000, -1000, -1000, 1011, 1010,
	-1000, 1009, -1000, 1810, -1000, 944, -1000, 1407, -1000, 472,
	1358, -1000, 1760, 944, 33926, 944, 1773, -1000, 894, -1000,
	1407, 33926, 888, -1000, -1000, 1717, 1256, 61, -1000, 1254,
	-1000, -1000, -1000, -1000, 12203, -1000, -1000, -1000, -1000, -1000,
	-1000, 283, 1374, -1000, 625, 33926, 33926, 1160, 242, -140,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1237, -1000, -1000,
	-1000, -1000, -1000, 1237, 1237, -1000, -1000, 944, 1370, -1000,
	882, -1000, -1000, -1000, -1000, -1000, 33926, 1358, 33926, -1000,
	1226, 1760, -1000, 1218, -1000, 283, -1000, 1406, 1426, -1000,
	1160, -113, 8371, 5616, 1202, -1000, -1000, 1583, -109, -188,
	21436, -1000, -1000, -1000, -1000, -1000, 1266, -1000, -1000, -1000,
	1487, 722, -113, 13832, 1263, -1000, -1000, -47, -1000, -1000,
	-1000, -1000, -1000, 1482, -1000, 1530, -1000, -1000, -1000, 1475,
	-1000, 1799, -1000, -1000, -1000, 801, 869, -1000, -1000, -1000,
	-1000, 840, 33926, 293, -1000, -1000, -119, -132, -1000, 1801,
	506, 506, -1000, -1000, -384, 1179, 165, -1000, -160, -1000,
	-1000, -1000, 288, 873, -1000, -1000, 773, -384, -1000, -189,
	-1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2123, 2120, 13, 1, 2119, 39, 75, 160, 11,
	172, 77, 2117, 2116, 2115, 2113, 2112, 193, 192, 190,
	2111, 2110, 2108, 2101, 2100, 2098, 2095, 2092, 2087, 2086,
	187, 145, 157, 2085, 2084, 2083, 94, 162, 66, 71,
	166, 2082, 2081, 56, 2080, 2079, 2078, 158, 152, 659,
	2077, 149, 91, 19, 2076, 2073, 2072, 2071, 2070, 2068,
	2067, 2065, 2064, 2063, 2062, 2061, 2060, 2059, 233, 2057,
	2056, 4, 2055, 58, 2054, 2053, 2052, 104, 2051, 2047,
	2046, 2045, 2044, 2043, 123, 2042, 2041, 2040, 2039, 159,
	2038, 2037, 139, 92, 90, 2036, 2035, 81, 168, 2033,
	97, 2032, 2031, 2030, 132, 2029, 1013, 2028, 38, 44,
	2027, 46, 63, 43, 34, 2023, 2022, 2021, 36, 53,
	2019, 88, 61, 2018, 100, 78, 2017, 37, 2016, 2013,
	96, 2010, 2009, 2008, 87, 2007, 2005, 3230, 2003, 73,
	116, 89, 48, 1998, 15, 69, 1996, 1995, 1992, 1990,
	1988, 23, 1987, 1986, 1985, 122, 16, 1984, 25, 42,
	26, 112, 1983, 79, 57, 1980, 121, 1979, 1977, 33,
	27, 21, 1970, 12, 117, 136, 14, 67, 119, 1969,
	1962, 30, 47, 1960, 1951, 1950, 1946, 1945, 1943, 45,
	1942, 28, 1941, 176, 1940, 10, 20, 31, 35, 126,
	41, 22, 1938, 163, 1936, 32, 141, 107, 142, 1929,
	1928, 1927, 154, 221, 1925, 1924, 76, 147, 127, 130,
	1923, 226, 1922, 1921, 74, 1443, 1776, 29, 144, 1920,
	1918, 2866, 125, 120, 51, 1916, 106, 1915, 1914, 1910,
	165, 146, 93, 879, 98, 1909, 1908, 1907, 1906, 1905,
	1904, 1903, 1902, 84, 167, 59, 99, 150, 50, 1891,
	1888, 1883, 111, 68, 1874, 140, 137, 102, 161, 1871,
	148, 129, 124, 1870, 86, 1869, 1868, 1867, 1864, 80,
	1863, 1861, 1860, 1857, 138, 131, 101, 64, 1854, 65,
	95, 135, 128, 24, 1853, 17, 1847, 1846, 164, 7,
	1845, 3, 0, 1844, 6, 156, 220, 143, 1843, 1841,
	2, 1839, 5, 1838, 1837, 118, 1835, 1834, 1833, 9,
	18, 8, 1829, 1827, 1825, 3171, 699, 114, 1824, 173,
}

//line sql.y:6168
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 323, 324, 324, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 302, 302, 302, 305,
	305, 28, 63, 30, 30, 29, 29, 32, 32, 31,
	6, 6, 6, 7, 7, 7, 7, 7, 7, 7,
	7, 8, 8, 8, 8, 8, 9, 9, 9, 9,
	11, 11, 11, 11, 11, 15, 16, 10, 10, 17,
	17, 75, 75, 18, 19, 19, 19, 19, 327, 327,
	132, 132, 130, 130, 131, 131, 198, 198, 20, 21,
	21, 208, 208, 207, 207, 207, 209, 209, 209, 209,
	243, 243, 22, 22, 22, 22, 22, 90, 90, 304,
	304, 303, 301, 301, 300, 300, 299, 34, 35, 44,
	44, 44, 44, 45, 46, 306, 306, 275, 50, 50,
	49, 49, 49, 49, 51, 51, 48, 48, 47, 47,
	277, 277, 264, 264, 276, 276, 276, 276, 276, 276,
	276, 263, 263, 101, 101, 179, 179, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 318, 318, 180, 180,
	180, 180, 180, 180, 110, 110, 118, 118, 118, 118,
	108, 108, 109, 107, 107, 107, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 322, 322, 322, 322, 322, 117,
	117, 114, 114, 114, 115, 115, 115, 319, 319, 319,
	319, 246, 246, 246, 246, 249, 249, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 248, 248, 248, 248,
	248, 250, 250, 250, 250, 250, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 252, 252, 252, 252, 252, 252, 252, 252, 262,
	262, 253, 253, 257, 257, 258, 258, 258, 259, 259,
	259, 260, 260, 255, 255, 255, 255, 255, 255, 256,
	256, 256, 265, 289, 289, 288, 288, 286, 286, 286,
	286, 274, 274, 283, 283, 283, 283, 283, 273, 273,
	269, 269, 269, 270, 270, 271, 271, 268, 268, 272,
	272, 285, 285, 284, 266, 266, 267, 267, 291, 320,
	320, 320, 320, 321, 321, 292, 311, 312, 310, 310,
	310, 310, 310, 73, 73, 73, 220, 220, 220, 281,
	281, 280, 280, 280, 282, 282, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 215, 215, 215, 309, 309, 309,
	309, 309, 309, 308, 308, 308, 278, 278, 278, 307,
	307, 52, 52, 164, 164, 41, 41, 41, 41, 41,
	41, 40, 40, 40, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 42, 42, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 77, 77,
	78, 78, 78, 78, 79, 79, 79, 294, 294, 53,
	53, 3, 3, 1, 1, 2, 2, 4, 4, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 261, 261, 261, 293, 293, 295, 297, 297, 297,
	297, 296, 86, 86, 24, 33, 33, 25, 25, 25,
	25, 26, 26, 54, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 55, 55, 55, 55, 55, 55, 55, 55,
	55, 55, 313, 313, 214, 214, 222, 222, 213, 213,
	236, 236, 236, 216, 216, 216, 217, 217, 317, 317,
	317, 56, 56, 56, 58, 58, 59, 60, 60, 238,
	238, 239, 239, 61, 62, 74, 74, 74, 74, 74,
	74, 76, 76, 76, 13, 13, 13, 13, 70, 70,
	70, 12, 12, 57, 57, 64, 314, 314, 315, 316,
	316, 316, 316, 65, 67, 27, 27, 27, 27, 27,
	27, 96, 96, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 91, 91, 91, 85, 85,
	328, 68, 69, 69, 89, 89, 89, 82, 82, 82,
	88, 88, 88, 14, 14, 93, 93, 95, 95, 95,
	95, 95, 97, 97, 97, 97, 97, 97, 97, 92,
	92, 94, 94, 94, 94, 229, 229, 229, 228, 228,
	121, 121, 123, 122, 122, 124, 124, 125, 125, 125,
	162, 140, 140, 196, 196, 195, 195, 197, 197, 197,
	197, 199, 199, 126, 126, 126, 126, 127, 127, 128,
	128, 129, 129, 237, 237, 234, 234, 234, 233, 233,
	133, 133, 133, 135, 134, 134, 134, 134, 136, 136,
	138, 138, 137, 137, 139, 144, 144, 143, 143, 141,
	141, 141, 141, 142, 142, 142, 142, 145, 145, 106,
	106, 106, 106, 106, 106, 116, 116, 116, 116, 119,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 211, 211, 146, 146,
	154, 154, 154, 154, 147, 147, 147, 147, 147, 147,
	147, 155, 155, 155, 161, 156, 156, 152, 152, 152,
	152, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 329, 329, 254, 254, 254, 153, 153, 153, 153,
	153, 87, 87, 87, 87, 87, 242, 242, 242, 245,
	245, 245, 244, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 244, 244, 244, 244, 244, 167, 167, 83,
	83, 165, 165, 166, 168, 168, 163, 163, 163, 149,
	149, 149, 169, 169, 170, 170, 171, 171, 173, 172,
	172, 174, 175, 175, 175, 176, 176, 177, 177, 177,
	43, 43, 43, 43, 43, 38, 38, 38, 38, 39,
	39, 39, 98, 98, 98, 98, 100, 100, 99, 99,
	71, 71, 72, 72, 72, 104, 104, 105, 105, 105,
	102, 102, 103, 103, 193, 193, 178, 178, 178, 185,
	185, 185, 181, 181, 183, 183, 183, 184, 184, 184,
	182, 190, 190, 192, 192, 191, 191, 187, 187, 188,
	188, 189, 189, 189, 186, 186, 148, 148, 148, 148,
	148, 194, 194, 194, 194, 200, 200, 158, 158, 160,
	160, 159, 120, 201, 201, 205, 202, 202, 206, 206,
	206, 206, 206, 203, 203, 204, 204, 230, 230, 230,
	210, 210, 221, 221, 218, 218, 219, 219, 212, 212,
	223, 223, 223, 66, 157, 157, 290, 290, 287, 226,
	226, 227, 227, 231, 231, 235, 235, 232, 232, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 225, 225, 225, 225, 225, 225,
	225, 225, 225, 225, 325, 326, 240, 241, 241, 241,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 2, 3, 2, 3, 0, 1, 3, 1, 4,
	3, 3, 4, 3, 2, 3, 4, 3, 4, 2,
	7, 1, 3, 3, 3, 3, 1, 2, 1, 1,
	3, 2, 3, 3, 2, 5, 7, 9, 8, 7,
	8, 1, 1, 10, 11, 9, 8, 8, 1, 1,
	1, 3, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 12, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 6, 4, 7,
	8, 8, 8, 6, 3, 1, 1, 5, 0, 1,
	1, 1, 2, 2, 0, 1, 4, 4, 4, 4,
	2, 4, 1, 3, 1, 1, 3, 4, 3, 3,
	3, 5, 10, 0, 2, 0, 2, 3, 5, 3,
	4, 2, 3, 2, 3, 3, 1, 1, 0, 2,
	2, 3, 3, 2, 1, 1, 2, 2, 2, 2,
	1, 1, 1, 1, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 1, 2,
	1, 3, 1, 1, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 2, 2, 2, 2, 3, 3, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 5,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 0, 3, 0, 5, 0, 3, 5, 0, 1,
	1, 0, 1, 0, 2, 2, 2, 1, 1, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 8, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 5, 0, 6,
	5, 6, 4, 5, 0, 8, 9, 0, 3, 0,
	1, 0, 3, 1, 1, 0, 2, 0, 2, 5,
	3, 7, 4, 4, 4, 4, 3, 3, 3, 7,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 0, 2, 2, 1, 3, 2, 0, 4, 4,
	3, 2, 1, 3, 3, 3, 5, 7, 7, 6,
	5, 3, 2, 3, 3, 3, 7, 3, 3, 3,
	3, 4, 7, 5, 2, 4, 4, 4, 4, 4,
	5, 5, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 4, 2, 4, 5, 4, 4,
	4, 4, 4, 3, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 1, 1, 2, 6,
	5, 6, 6, 0, 2, 3, 3, 0, 2, 3,
	3, 3, 2, 3, 1, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 0, 3, 1, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 5, 5,
	6, 4, 4, 8, 6, 8, 6, 8, 5, 4,
	2, 2, 1, 2, 2, 2, 8, 8, 6, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 0,
	5, 5, 2, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 2, 1, 1, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	2, 2, 0, 3, 0, 2, 0, 1, 3, 1,
	3, 2, 0, 1, 1, 0, 1, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -323, -5, -9, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -54, -55, -56, -58,
	-59, -60, -61, -62, -12, -57, -27, -28, -63, -64,
	-65, -66, -67, -14, -7, -6, -11, 7, 8, -75,
	-29, 30, -34, -44, 203, -45, -35, 204, -46, 206,
	205, 241, 207, 234, 72, 282, 283, 285, 286, 287,
	288, -76, 239, 240, 209, 34, 43, 31, 32, 35,
	212, 247, -8, -30, 6, -325, 9, 408, 236, 235,
	26, -10, 422, 83, -324, 556, -193, -178, 20, 31,
	27, -177, -173, -89, -178, 18, 16, 5, -68, -328,
	-68, -68, 10, 11, -68, -275, -277, 83, 140, 83,
	-68, -50, -49, -48, -47, -51, 29, -41, -42, -298,
	-40, -37, 208, 205, 250, 107, 108, 241, 242, 243,
	207, 225, 240, 244, 239, 259, -36, 78, 31, 422,
	425, -282, 204, 210, 211, 409, 110, 109, 73, 206,
	-279, 334, 526, -51, 528, 99, 101, 527, 42, 215,
	529, 530, 531, 532, 224, 533, 534, 535, 536, 542,
	543, 544, 545, 111, 5, -68, -235, -231, -302, -225,
	86, 87, 88, 419, 227, 453, 454, 275, 78, 39,
	331, 334, 526, 282, 296, 290, 317, 309, 420, 455,
	278, 228, 263, 523, 307, 116, 528, 281, 456, 242,
	339, 340, 341, 99, 285, 376, 541, 280, 457, 539,
	101, 527, 77, 49, 42, 237, 305, 301, 529, 264,
	458, 430, 257, 110, 107, 548, 34, 299, 48, 28,
	538, 109, 47, 530, 131, 459, 531, 343, 322, 517,
	46, 344, 243, 460, 81, 424, 525, 345, 300, 346,
	274, 537, 209, 461, 509, 347, 348, 518, 462, 323,
	327, 463, 368, 349, 555, 50, 464, 465, 519, 108,
	466, 76, 532, 294, 295, 467, 272, 226, 370, 321,
	224, 33, 350, 421, 276, 56, 251, 371, 44, 325,
	552, 43, 513, 468, 516, 320, 316, 51, 469, 470,
	471, 472, 533, 319, 293, 315, 547, 442, 269, 534,
	60, 211, 329, 328, 330, 258, 367, 312, 473, 474,
	475, 231, 79, 476, 302, 19, 477, 478, 351, 265,
	479, 54, 480, 481, 374, 240, 482, 52, 535, 37,
	245, 549, 536, 483, 484, 485, 486, 487, 353, 488,
	352, 324, 326, 253, 354, 423, 489, 298, 244, 540,
	490, 232, 524, 246, 250, 239, 375, 233, 491, 492,
	493, 494, 495, 279, 496, 497, 286, 542, 41, 498,
	499, 500, 501, 273, 268, 369, 378, 59, 80, 336,
	502, 522, 292, 266, 503, 283, 53, 543, 544, 545,
	260, 546, 7, 553, 554, 356, 111, 270, 271, 45,
	313, 252, 504, 505, 303, 304, 318, 291, 314, 284,
	510, 254, 357, 241, 506, 377, 267, 332, 337, 427,
	259, 358, 521, 426, 311, 308, 261, 507, 359, 216,
	255, 256, 508, 511, 360, 361, 277, 362, 363, 364,
	365, 366, 262, 425, 289, 306, 338, 389, 390, 391,
	392, 393, 394, 395, 396, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 417, 214, -68, 214, -137,
	-231, 214, -203, 340, -222, 342, 355, 350, 360, 348,
	-214, 351, 353, 253, -317, 368, 214, 357, 203, 157,
	343, 352, 361, 362, 277, 363, 366, 262, -313, -302,
	531, 546, 116, 310, 347, 345, 369, 513, 365, 364,
	-231, 284, -238, 289, -226, -302, -225, 287, -137, -74,
	509, 207, -240, -240, -91, 513, 515, -156, -106, 124,
	-116, -119, -111, -112, -150, -151, -152, -153, -117, -163,
	146, 147, 154, 125, -161, -120, 24, 418, 410, 409,
	157, 29, 199, 66, 67, 412, 413, 127, 55, 385,
	386, -118, 381, 387, 382, 415, 416, 102, 417, -226,
	-231, 219, 380, 213, 152, 408, -113, -109, -6, -159,
	379, 383, 384, 388, -302, -225, -115, -114, -146, 89,
	95, 100, 96, -322, 103, -325, 90, 91, 92, 93,
	94, 104, 105, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 42, 356, 356, -137, -68, -226,
	-171, -89, -173, -8, -6, -325, 6, -68, -6, -7,
	-11, -30, -32, 449, -31, -231, -178, -193, 10, 142,
	40, 48, -176, -177, -10, -6, -106, 17, 21, 22,
	-94, 148, -106, -231, -69, -94, -212, 218, -68, -68,
	-202, -243, 284, -206, 369, 368, -227, -204, -226, -224,
	-203, 367, 208, 428, 123, 23, 25, 126, 157, 17,
	127, 35, 210, 310, 225, 156, 221, 409, 203, 70,
	429, 381, 382, 379, 385, 411, 412, 380, 342, 29,
	11, 431, 26, 235, 22, 36, 150, 205, 130, 238,
	24, 236, 102, 105, 434, 20, 73, 230, 12, 223,
	38, 14, 435, 436, 15, 219, 218, 142, 215, 68,
	9, 199, 27, 139, 64, 437, 118, 438, 439, 440,
	441, 66, 140, 18, 550, 383, 384, 31, 514, 418,
	248, 152, 71, 57, 515, 124, 443, 444, 103, 445,
	106, 74, 520, 120, 16, 69, 40, 446, 249, 447,
	247, 220, 551, 448, 372, 449, 141, 206, 408, 67,
	450, 213, 355, 6, 414, 30, 234, 222, 113, 65,
	451, 214, 129, 415, 416, 217, 104, 5, 117, 32,
	10, 72, 75, 386, 387, 388, 55, 112, 422, 128,
	13, 452, 373, 122, 116, -276, 140, -263, -267, -226,
	229, -292, 225, -137, -285, -284, -226, -90, -221, 215,
	223, 222, 117, -306, 120, 270, 380, 213, -47, -48,
	-203, 156, -77, 246, 249, 84, 84, -267, -266, -265,
	-307, 249, 229, -291, -283, 221, 230, -273, 222, 223,
	-268, 215, 118, -307, -268, 220, 230, 249, 249, 111,
	249, 111, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 245, -274, 132, -274, 426, 426, -279, -307, -307,
	-307, 217, 33, 33, -223, -268, 217, 23, -274, -274,
	-203, 156, -274, -274, -274, -274, 257, 257, -274, -274,
	-274, -274, -274, -274, -274, -274, -274, -274, -274, -274,
	-274, -274, -274, 214, -306, -98, 366, 277, 78, -49,
	259, -33, -137, -221, 215, 216, -306, -137, 200, -137,
	-216, 140, 13, -216, -213, 356, 354, 341, 346, -216,
	-216, -216, -216, 260, 339, -269, 215, 33, 226, 356,
	260, 339, 260, 261, 260, 261, 349, 359, 260, -236,
	12, 142, 380, 344, 348, 253, 214, 254, 216, 358,
	-302, 516, 261, -236, 90, -217, 140, 356, 256, -216,
	-241, -325, -227, 310, -241, -241, 30, 87, 217, -226,
	-70, -226, 90, -13, -9, -18, -17, -19, 132, -96,
	356, -84, 157, 531, 517, 518, 519, 516, 353, 524,
	522, 520, 260, 521, 84, 120, 122, 123, -106, 139,
	-147, 132, 133, 134, 135, 136, 137, 138, 142, 124,
	126, 140, 141, 121, 143, 144, 145, 146, 147, 148,
	149, 151, 150, 152, 153, 156, 201, 202, -112, -112,
	-112, -112, -161, -325, -325, -325, -112, -211, -325, -112,
	-325, -325, -325, -325, -167, -106, -325, -329, -325, -329,
	-329, -254, -325, -254, -325, -325, -325, -325, -325, 200,
	-325, -325, -325, -325, -325, -254, -254, -254, -254, 100,
	95, 89, -163, 96, 90, -226, -231, -6, -7, -156,
	-240, -314, -315, -140, -137, -325, 277, 12, -176, -10,
	-6, -171, -177, -173, -6, -68, -82, -95, 61, 62,
	-97, 22, 36, 65, 63, 21, -326, 85, -326, -193,
	-326, 84, -32, -196, 83, 59, 41, 90, 90, 84,
	19, -172, -174, -106, 12, -229, -228, 23, -226, 90,
	200, 98, 12, -138, 27, -137, -212, -212, 84, 284,
	-206, -243, -208, -207, 370, 372, 132, -230, -226, 90,
	29, 85, 84, -137, -246, -249, -251, -250, -252, -247,
	-248, 307, 308, 157, 311, 313, 314, 315, 316, 317,
	318, 319, 320, 321, 322, 30, 237, 303, 304, 305,
	306, 323, 324, 325, 326, 327, 328, 329, 330, 290,
	309, 420, 291, 292, 293, 294, 295, 296, 298, 299,
	300, 301, 302, -305, -302, 83, 85, 84, -253, 83,
	-98, 214, -302, 215, 215, 215, -68, 408, -274, -274,
	245, 17, -40, -37, -298, 16, -36, -37, 208, 107,
	108, 205, 83, -263, 83, -272, -305, -302, 83, 118,
	220, 117, -271, -268, -271, -272, -302, -163, -302, 118,
	118, -199, -226, -199, -199, 21, -199, 21, -199, 21,
	92, -226, -199, 21, -199, 21, -199, 21, -199, 21,
	-199, 21, 29, 76, 77, 29, 79, 80, 81, -163,
	-163, -263, -203, -137, -302, 92, 92, -274, -274, 92,
	90, 90, 90, -274, -274, 92, 90, -233, -231, 90,
	-308, 231, 274, 276, 92, 92, 92, 92, 29, 90,
	-309, 29, 538, 537, 539, 540, 541, 92, 29, 92,
	29, 92, -226, 83, -137, -104, 264, 203, 205, 208,
	74, 90, 278, 132, 42, 84, 217, 214, -302, -218,
	219, -218, -232, -231, -224, 90, -106, -270, 12, 142,
	-236, -236, -216, -137, -270, -236, -216, -137, -216, -216,
	-216, -216, -236, -236, -236, -216, -231, -231, -137, -137,
	-137, -137, -137, -137, -137, -241, -241, -241, -217, -216,
	516, 90, 74, -239, 287, 321, 510, 511, 512, 84,
	422, -130, -137, 516, 516, 516, 516, 516, 516, -106,
	-106, -106, -106, -154, 103, 124, 104, 105, -119, -155,
	-159, -161, 97, 142, 126, 140, 141, -111, -112, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -242, -302, 90, 157, 90, 90, -92, -94,
	-106, -106, -302, -226, -92, -92, -106, -88, 22, 36,
	-165, -166, 128, -163, -326, -326, 92, -226, -226, -81,
	-80, 390, 391, 392, 393, 395, 396, 397, 400, 401,
	405, 406, 389, 407, 394, 399, 402, 403, 404, 398,
	306, -106, -93, 22, 36, -92, -227, -232, -224, -92,
	-93, -93, -92, -92, 200, -193, -326, 84, -316, 372,
	373, 514, -234, 249, -233, 23, -157, -156, 90, 90,
	-226, -176, -176, 61, 62, 57, -92, -97, -326, -31,
	23, -195, -226, 60, 90, -255, -203, 331, 332, -106,
	-106, 84, -175, 25, 26, -137, -228, 148, -232, -137,
	-198, 249, -137, -122, -124, -125, -126, -140, -162, -325,
	12, -130, -131, -139, -231, -206, -208, 84, 371, 373,
	374, 74, 106, -106, -256, 156, -281, -280, -279, -263,
	-265, -266, -267, 85, -256, -259, 337, 336, -253, -253,
	-253, -253, -253, -255, -255, -255, -255, 83, 83, -253,
	-253, -253, -253, -257, 83, -257, -257, -258, 83, -258,
	-292, -106, -289, -288, -286, -287, 224, 99, 422, 75,
	-284, -175, 92, -104, -219, 219, -290, -287, -302, -302,
	-302, -219, -302, 90, -302, 90, -78, -53, -1, 550,
	551, 552, 84, 17, -264, -263, -52, 274, -295, -296,
	249, -291, -285, -272, 118, -271, -272, -272, -302, 84,
	27, 111, 111, 111, 111, 422, 205, 30, -263, -52,
	-242, 217, -242, -242, 90, 90, -215, 546, -130, -100,
	266, 132, 255, 255, 214, 214, 268, -137, 279, 281,
	280, 278, 21, 267, 269, 271, 257, -137, -137, -218,
	74, -132, -137, 24, -231, -137, -216, -216, -137, -216,
	-216, -137, -226, -84, 372, 84, 422, 20, -85, 20,
	103, 104, 105, -155, -111, -112, -111, 123, 238, 84,
	-326, 23, 84, 75, -326, -326, -326, 84, 12, -92,
	-168, -166, 130, -106, -326, -326, 84, 84, 12, -245,
	23, -326, -92, -92, -325, 200, -326, -326, -326, -326,
	-326, -227, -315, 513, 373, -144, -143, -141, 72, 218,
	73, -325, -233, -326, -149, -226, 92, 96, -178, -121,
	-123, 12, -97, -161, 85, 84, -255, -182, -187, -213,
	-226, 90, 157, -174, 200, -145, 13, -148, 30, 55,
	-9, -325, -325, 30, 84, -133, -135, -134, -136, 64,
	68, 70, 65, 66, 67, 71, -237, 23, -122, -7,
	-6, -325, -137, -130, -327, 12, 75, -327, 84, 200,
	-207, -209, 375, 372, 378, -302, 90, -77, 84, -279,
	-267, -179, -101, 38, -260, 338, -255, -255, -262, 90,
	-262, 92, 92, 85, -43, -38, -39, 31, 78, -286,
	-274, 90, 37, -226, 85, -100, -137, 124, 74, -290,
	-290, -290, -231, -2, 549, 555, 118, 83, 341, 16,
	-195, 84, 85, -164, 275, 85, -297, 55, -226, 85,
	83, -272, -272, -226, -325, 214, 29, 29, -52, -164,
	-256, -302, 548, 547, 85, 216, 273, -105, 385, -102,
	90, 86, -137, -137, -137, -137, -137, 208, 205, 258,
	217, -130, -137, 84, -73, 233, 228, -236, -236, 31,
	-137, 372, 525, 523, 123, 238, -119, -112, -94, 419,
	-244, 157, 307, 237, 305, 301, 321, 312, 336, 303,
	337, 300, 299, 298, -244, -242, -106, -106, -171, 131,
	-106, 129, -106, -106, -106, -326, 157, 307, -326, -326,
	-93, -227, -141, -268, -268, -268, -199, -210, 20, 12,
	55, 55, -121, -145, -122, -97, -226, -185, 509, -190,
	44, -188, -189, 45, -186, 46, 54, 148, -176, -106,
	-200, 74, -201, -205, -163, -158, -160, -159, -325, -194,
	-326, -226, -199, -201, -124, -125, -125, -124, -125, 64,
	64, 64, 69, 64, 69, 64, -134, -231, -326, -326,
	-7, -234, 75, -122, -122, -139, -231, 148, 372, 376,
	377, -279, -321, 103, 124, 29, 74, 334, 99, -319,
	156, -320, 220, 117, 118, 232, 23, 39, 85, 84,
	85, 84, 85, 84, -220, 459, 124, -39, -38, -274,
	-274, 92, -302, 216, 24, -137, 74, 74, 74, -79,
	553, 92, 83, -3, 78, -106, 83, 17, -263, -163,
	251, 142, -289, -195, -293, -295, -137, -108, -325, -107,
	-109, -113, 146, 147, -164, -137, -99, 264, 272, 83,
	-103, 87, -304, 75, 255, 334, 255, -137, -73, -43,
	-137, -216, -216, 31, -302, -119, -112, -325, -326, -253,
	-253, -253, -258, -253, 295, -253, 295, -253, -326, -326,
	84, -326, 20, -326, -83, 414, -106, 84, 84, -326,
	83, 83, -326, -142, 20, -142, -142, -326, -137, -145,
	-169, 14, -182, 49, 313, -192, -191, 53, 45, -189,
	17, 47, 17, 28, -200, 84, 132, 84, -326, -326,
	84, 55, 200, -326, -145, -128, -127, 74, 75, -129,
	74, -127, 64, 64, -196, -326, -198, -122, -145, -145,
	200, 103, -325, -110, -118, -108, 10, 90, 90, -302,
	118, 118, -137, 83, -255, 90, -255, 92, 92, 459,
	29, 79, 80, 81, 29, 76, 77, -137, -137, -137,
	-137, -294, 83, 17, -106, 83, 132, 85, -195, -195,
	252, -159, -325, 85, -326, 84, -261, 422, 425, -106,
	-114, -114, -196, 85, -301, 422, -303, -226, -226, -226,
	-226, -111, -255, -106, -106, -176, 90, -106, -106, 92,
	92, -325, 64, 16, 14, -325, -325, -234, -169, -170,
	15, 17, -183, 51, -181, 50, -181, -191, 17, 17,
	90, 17, 90, 118, -205, -106, -160, 55, -9, -226,
	-158, -226, -171, -106, 83, -106, -145, -145, -106, -151,
	417, 83, -106, 85, 85, -196, -293, -53, 85, -195,
	92, 85, -159, -86, -325, 248, -320, -295, 426, 426,
	-326, 23, -300, -299, -227, 83, 75, -87, 142, 422,
	-326, -326, -326, -326, -326, 85, 85, -197, -326, -226,
	220, 17, 17, -197, -197, -144, -170, -106, -156, -184,
	52, 74, 106, 90, 90, 90, 10, -158, 200, -176,
	-195, -171, -326, -195, 85, 23, 85, 555, 118, 85,
	248, -9, 84, 132, -195, -137, -326, 420, 71, 423,
	84, -326, -326, -326, 74, 106, -201, -226, 85, -176,
	85, -180, -9, 83, -3, -326, -71, 422, -299, -278,
	-227, 90, 92, 85, 60, 421, 424, -226, 220, -311,
	-312, 74, -321, -318, 103, 124, 99, -319, 112, 113,
	-71, -106, 83, -72, 263, 513, -304, 60, -312, 74,
	11, 10, 103, 90, 85, -195, 225, -301, 422, -310,
	233, 228, 231, 30, -310, -4, 554, 85, 265, 423,
	227, 29, 103, 92, -4, 424,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 66, 68, 69, 710, 710, 710,
	0, 710, 0, 0, 710, -2, -2, 710, 1135, 0,
	710, 0, 0, -2, 642, 644, 0, 646, -2, 0,
	0, 655, 1586, 1586, 705, 0, 0, 0, 0, 0,
	710, 0, 996, 46, 710, 0, 81, 82, 661, 662,
	663, 61, 0, 1584, 1, 3, 67, 71, 0, 0,
	0, 54, 1005, 0, 74, 0, 0, 714, 0, 712,
	0, 1118, 710, 710, 0, 112, 113, 0, 0, 0,
	-2, 116, -2, 140, 141, 0, 145, 508, 448, 491,
	446, 477, -2, 439, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 451, 341, 341, 0,
	0, -2, 439, 439, 439, 0, 0, 0, 474, 1120,
	394, 341, 341, 0, 341, 341, 341, 341, 0, 0,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 1022, 144, 1136, 1133, 1134,
	36, 37, 38, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447,
	1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467,
	1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487,
	1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497,
	1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507,
	1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517,
	1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527,
	1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537,
	1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547,
	1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 0, 1112, 0, 572,
	802, 0, 633, 633, 0, 633, 633, 633, 633, 0,
	0, 0, 584, 0, 0, 0, 0, 630, 0, 0,
	603, 605, 0, 630, 0, 636, 0, 617, 633, 1587,
	1587, 1587, 1103, 0, 627, 625, 639, 640, 622, 623,
	641, 645, 0, 650, 653, 1129, 1130, 0, 668, 45,
	1362, 660, 673, 674, 0, 706, 707, 41, 895, 0,
	824, 828, 839, 852, 853, 854, 855, 856, 858, 859,
	0, 0, 0, 0, 864, 865, 0, 0, 0, 0,
	0, 876, 0, 0, 0, 0, 0, 977, 0, 941,
	941, 912, 941, 943, 943, 0, 0, 0, 1583, 986,
	0, 0, 0, 0, 0, 0, 249, 250, 894, 1092,
	943, 943, 943, 943, -2, -2, 196, 197, 198, 199,
	200, 201, 202, 0, 192, 0, 254, 255, 251, 252,
	253, 878, 879, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 1586, 0, 683, 0, 0, 0,
	1005, 0, 997, 996, 59, 0, 710, -2, 0, 0,
	0, 0, 43, 0, 48, 763, 73, 72, 1044, 0,
	0, 0, 55, 1006, 63, 65, 1007, 0, 715, 716,
	0, 741, 745, 0, 711, 0, 0, 1119, 1118, 1118,
	98, 0, 1527, 1096, -2, -2, 0, 0, 1131, 1132,
	1105, -2, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226,
	1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
	1277, 1278, 1279, 1280, -2, 0, 0, 154, 155, 0,
	39, 367, 0, 150, 0, 361, 311, 1022, 0, 0,
	0, 0, 0, 710, 0, 1113, 135, 136, 142, 143,
	341, 341, 488, 0, 0, 144, 144, 455, 456, 457,
	0, 0, -2, 365, 0, 440, 0, 0, 355, 355,
	359, 357, 358, 0, 0, 0, 0, 0, 0, 468,
	0, 469, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 550, 0, 342, 0, 486, 487, 395, 0, 0,
	0, 0, 466, 467, 0, 0, 1121, 1122, 0, 0,
	341, 341, 0, 0, 0, 0, 341, 341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 1035, 0, 0, 0, -2,
	0, 564, 0, 0, 0, 1114, 1114, 571, 0, 573,
	574, 0, 0, 575, 0, 630, 630, 628, 629, 577,
	578, 579, 580, 633, 0, 0, 350, 351, 352, 630,
	633, 0, 633, 633, 633, 633, 630, 630, 630, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1587,
	1587, 1587, 636, 633, 0, 613, 0, 614, 615, 618,
	619, 1588, 1589, 1150, 620, 621, 1104, 643, 651, 654,
	671, 669, 670, 672, 664, 665, 666, 667, 0, 685,
	686, 691, 0, 0, 0, 0, 697, 698, 699, 0,
	0, 702, 703, 704, 0, 0, 0, 0, 822, 0,
	0, 884, 885, 886, 887, 888, 889, 890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 860, 861,
	862, 863, 866, 0, 0, 0, 871, 872, 0, 0,
	0, 0, 0, 720, 0, 978, 0, 910, 0, 911,
	913, 914, 0, 915, 0, 0, 0, 0, 725, 0,
	0, 725, 725, 0, 0, 186, 187, 188, 189, 203,
	204, 205, 206, 207, 256, 986, 0, 894, 0, 0,
	42, 675, 676, 0, 785, 1124, 0, 0, 53, 62,
	64, 1005, 57, 1005, 0, 727, 0, 0, -2, -2,
	728, 734, 735, 736, 737, 738, 50, 1585, 51, 0,
	70, 0, 44, 0, 0, 0, 0, 323, 1047, 0,
	0, 998, 999, 1002, 0, 742, 746, 0, 748, 749,
	0, 713, 0, 96, 0, 801, 0, 0, 0, 1527,
	1102, 0, 100, 101, 0, 0, 0, 329, 1107, 1108,
	1109, -2, 348, 0, 329, 318, 262, 263, 264, 311,
	266, 311, 311, 311, 311, 323, 323, 323, 323, 294,
	295, 296, 297, 298, 0, 0, 281, 311, 311, 311,
	311, 301, 302, 303, 304, 305, 306, 307, 308, 267,
	268, 269, 270, 271, 272, 273, 274, 275, 313, 313,
	313, 315, 315, 0, 40, 0, 333, 0, 1002, 0,
	1035, 1116, 1126, 0, 0, 0, 1116, 118, 0, 0,
	489, 519, 449, 478, 490, 0, 452, 453, -2, 0,
	0, 439, 0, 441, 0, 349, 0, -2, 0, 359,
	0, 355, 359, 356, 359, 347, 360, 470, 471, 472,
	0, 530, 771, 0, 0, 0, 0, 0, 536, 537,
	538, 0, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 479, 480, 481, 482, 483, 484, 485, 0,
	0, 441, 0, 475, 0, 396, 397, 0, 0, 400,
	401, 402, 403, 0, 0, 406, 407, 408, 788, 789,
	409, 433, 434, 435, 410, 411, 412, 413, 414, 415,
	416, 427, 428, 429, 430, 431, 432, 417, 418, 419,
	420, 421, 424, 0, 128, 1026, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1114, 0, 0,
	0, 0, 803, 1137, 1138, 634, 635, 0, 353, 354,
	633, 633, 581, 604, 0, 633, 585, 606, 586, 588,
	587, 589, 608, 609, 633, 592, 631, 632, 593, 594,
	595, 596, 597, 598, 599, 600, 601, 602, 610, 611,
	612, 637, 0, 0, 652, 656, 657, 658, 659, 0,
	0, 688, 92, 693, 694, 695, 696, 708, 701, 896,
	819, 820, 821, 823, 825, 0, 880, 882, 827, 829,
	891, 892, 893, 0, 0, 0, 0, 0, 833, 837,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 857, 956, 957, 958, 874, 875, 0, 739,
	0, 0, 0, 873, 0, 0, 0, 0, 721, 722,
	984, 981, 0, 0, 942, 944, 0, 0, 0, 0,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 959, 0, 0, 0, 726, 987, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 1091, 0, 678, 679,
	681, 0, 805, 0, 786, 0, 0, 1125, 684, 723,
	724, 56, 58, 732, 733, 0, 750, 729, 52, 47,
	0, 0, 765, 1045, 323, 1067, 0, 327, 328, 1008,
	1009, 0, 1001, 1003, 1004, 75, 747, 743, 0, 817,
	0, 0, 800, 0, 753, 755, 756, 757, 783, 0,
	0, 0, 0, 94, 802, 1097, 99, 0, 0, 104,
	105, 1098, 1099, 1100, 1101, 0, 508, -2, 391, 156,
	158, 159, 160, 151, -2, 321, 319, 320, 265, 323,
	323, 288, 289, 290, 291, 292, 293, 0, 0, 282,
	283, 284, 285, 276, 0, 277, 278, 279, 0, 280,
	366, 0, 1010, 334, 335, 337, 341, 0, 0, 0,
	362, 363, 0, 1026, 0, 0, 0, 1127, 1126, 1126,
	1126, 0, 146, 147, 148, 149, 525, 0, 0, 520,
	523, 524, 144, 0, 0, 152, 443, 442, 0, 557,
	0, 364, 0, 0, 359, 359, 344, 345, 473, 0,
	0, 532, 533, 534, 535, 0, 0, 0, 441, 443,
	329, 0, 398, 399, 404, 405, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 504,
	505, 506, 507, 1023, 1024, 1025, 0, 0, 565, 0,
	0, 383, 90, 1115, 570, 630, 591, 607, 630, 583,
	590, 616, 648, 692, 0, 0, 0, 0, 700, 0,
	826, 881, 883, 830, 0, 834, 838, 0, 0, 0,
	0, 0, 0, 0, 877, 901, 902, 0, 0, 996,
	0, 982, 0, 0, 909, 945, 0, 0, 0, 0,
	0, 897, 0, 0, 725, 0, 946, 947, 948, 949,
	950, 987, 677, 680, 682, 761, 806, 807, 0, 0,
	0, 0, 787, 1123, 0, 989, 0, 0, 750, 817,
	751, 0, 730, 49, 764, 0, 1049, 1048, 1061, 1074,
	324, 325, 326, 1000, 0, 1005, 0, 1085, 0, 0,
	1077, 0, 0, 0, 0, 0, 0, 0, 0, 790,
	0, 0, 793, 0, 0, 0, 0, 784, 0, 0,
	0, 0, -2, 0, 0, 88, 89, 0, 0, 0,
	102, 103, 0, 0, 109, 330, 331, 137, 144, 393,
	157, 373, 0, 0, 261, 322, 286, 287, 0, 309,
	0, 0, 0, 386, 114, 1014, 1013, 341, 341, 336,
	0, 339, 0, 1128, 312, 0, 127, 0, 0, 0,
	0, 0, 133, 514, 0, 0, 521, 0, 0, 0,
	447, 0, 458, 459, 0, 529, 556, 0, 561, 333,
	0, 343, 346, 772, 0, 0, 460, 0, 443, 464,
	465, 476, 425, 426, 423, 0, 0, 1036, 1037, 1042,
	1040, 1041, 119, 496, 498, 497, 501, 0, 0, 494,
	0, 383, 1010, 0, 569, 384, 385, 633, 633, 687,
	93, 0, 690, 0, 0, 0, 831, 835, 740, 0,
	0, 311, 311, 964, 311, 315, 967, 311, 969, 311,
	972, 311, 975, 976, 0, 0, 0, 0, 979, 908,
	985, 0, 0, 0, 0, 919, 0, 0, 898, 899,
	0, 988, 808, 813, 813, 813, 0, 0, 1110, 1111,
	990, 991, 817, 992, 752, 731, 766, 1067, 0, 1060,
	0, -2, 1069, 0, 0, 0, 1075, 744, 76, 818,
	79, 0, 1085, 1093, 0, 1076, 1087, 1089, 0, 0,
	0, 1081, 0, 817, 754, 779, 781, 0, 776, 791,
	792, 794, 0, 796, 0, 798, 799, 763, 759, 760,
	0, 96, 0, 817, 817, 95, 0, 804, 106, 107,
	108, 392, 161, 166, 0, 0, 0, 171, 0, 173,
	0, 374, 0, 258, 260, 0, 0, 164, 323, 0,
	323, 0, 316, 0, 375, 387, 0, 1011, 1012, 0,
	0, 338, 340, 0, 1117, 129, 0, 0, 0, 517,
	0, 526, 0, 0, 0, 0, 0, 0, 153, 444,
	0, 0, 332, 0, 0, 554, 551, 461, 0, 190,
	191, 193, 0, 0, 463, 763, 1027, 1028, 1029, 0,
	1039, 1043, 122, 0, 0, 0, 0, 566, 567, 568,
	91, 576, 582, 689, 709, 832, 836, 0, 868, 962,
	323, 965, 966, 968, 970, 971, 973, 974, 869, 870,
	0, 904, 0, 906, 1005, 0, 983, 0, 0, 918,
	0, 0, 900, 0, 0, 0, 0, 785, 60, 992,
	994, 0, 1054, 1052, 1052, 1062, 1063, 0, 0, 1070,
	0, 0, 0, 0, 80, 0, 0, 0, 1090, 0,
	0, 0, 0, 97, 996, 773, 780, 0, 0, 774,
	0, 775, 795, 797, 758, -2, 817, 817, 86, 87,
	0, 167, 0, 169, 184, 185, 0, 172, 174, 175,
	257, 259, 0, 0, 299, 310, 300, 0, 0, 388,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 763, 130, 131,
	132, 509, 0, 519, 0, 0, 0, 512, 0, 450,
	0, 560, 0, 0, 531, 0, 539, 0, 0, 0,
	194, 195, 0, 1038, 495, 0, 120, 121, 0, 0,
	500, 951, 963, 0, 0, 0, 980, 0, 0, 0,
	0, 0, 814, 0, 0, 0, 0, 805, 994, 78,
	0, 0, 1057, 0, 1050, 1053, 1051, 1064, 0, 0,
	1071, 0, 1073, 0, 1094, 1095, 1088, 0, 1080, 1083,
	1079, 1082, 1005, 777, 0, 782, 996, 85, 0, 170,
	0, 0, 0, 314, 317, 0, 0, 0, 510, 0,
	522, 513, 558, 559, 0, 562, 368, 555, 552, 553,
	462, 0, 123, 124, 0, 0, 0, 0, 0, 0,
	903, 905, 907, 916, 917, 960, 961, 0, 810, 767,
	768, 815, 816, 0, 0, 762, 77, 995, 993, 1046,
	0, 1055, 1056, 1065, 1066, 1072, 0, 1078, 0, 83,
	0, 1005, 168, 0, 178, 0, 518, 0, 521, 511,
	0, 1030, 0, 0, 0, 502, 867, 0, 0, 0,
	0, 809, 811, 812, 1058, 1059, 1086, 1084, 778, 84,
	369, 373, 1030, 0, 0, 563, 492, 1032, 125, 126,
	436, 437, 438, 119, 952, 0, 955, 769, 770, 370,
	371, 0, 162, 179, 180, 0, 0, 183, 176, 177,
	115, 0, 0, 0, 1033, 1034, 122, 953, 372, 0,
	0, 0, 181, 182, 527, 0, 0, 499, 0, 376,
	378, 379, 0, 0, 377, 515, 0, 527, 1031, 0,
	380, 381, 382, 528, 516, 954,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 556,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:474
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:479
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:484
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 35:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:518
		{
			setParseTree(yylex, nil)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:524
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:532
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:537
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:547
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:553
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:559
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:563
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:572
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:578
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:582
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:588
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:594
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:598
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:625
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:631
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:642
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:694
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:741
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:747
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:759
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:767
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:779
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:791
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:795
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:801
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:807
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:811
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:815
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:819
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:824
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:829
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:839
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:849
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:853
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:858
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:862
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:874
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:878
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:884
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:894
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:898
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:902
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:908
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:912
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:916
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:920
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:926
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:930
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:942
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:949
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:958
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:969
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:973
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:978
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:982
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 122:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:993
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:998
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1004
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1015
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1021
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1028
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1035
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1040
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1045
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1050
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1057
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1064
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1075
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1086
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1092
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1096
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1110
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1114
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1120
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1124
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1130
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1134
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1141
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1145
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1151
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1161
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1166
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1175
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1188
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1199
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1208
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1217
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1221
		{
			yyVAL.str = ""
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1230
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1234
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1240
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1246
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1251
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1256
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1261
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1266
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1271
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1276
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1280
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1287
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1291
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1296
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1300
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1305
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1311
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1322
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1329
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1336
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1340
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1359
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1366
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1370
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1376
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1405
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1409
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1413
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.str = Armscii8Str
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.str = ASCIIStr
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.str = Big5Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = UBinaryStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = Cp1250Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = Cp1251Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = Cp1256Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = Cp1257Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = Cp850Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = Cp852Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = Cp866Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = Cp932Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.str = Dec8Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = EucjpmsStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = EuckrStr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = Gb18030Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = Gb2312Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = GbkStr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = Geostd8Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = GreekStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = HebrewStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Hp8Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Keybcs2Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Koi8rStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Koi8uStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Latin1Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = Latin2Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = Latin5Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Latin7Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = MacceStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = MacromanStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = SjisStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = Swe7Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = Tis620Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Ucs2Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = UjisStr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Utf16Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Utf16leStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Utf32Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Utf8Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Utf8mb4Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1598
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1627
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1631
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1635
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1639
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1645
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1711
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1787
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1816
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1838
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1870
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1875
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1879
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1887
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1905
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1909
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1913
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1918
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1922
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = ""
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1948
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1969
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1978
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1984
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1988
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1994
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1998
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2003
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2007
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2023
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2027
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2031
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2035
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2039
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = yyDollar[2].str
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = "key"
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = yyDollar[1].str
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2107
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2117
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2123
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2127
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2133
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2137
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2143
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2149
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2153
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2157
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2161
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2166
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2170
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2176
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2182
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2188
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2194
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2198
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2202
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2206
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2210
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2228
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2232
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2236
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2245
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2251
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2265
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2275
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2279
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2283
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2287
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2291
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2295
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2299
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2303
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2307
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2311
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2315
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2319
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2323
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2327
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2331
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2335
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2339
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2343
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2347
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2351
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2355
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2359
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2363
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2367
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2371
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2375
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2379
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2383
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2388
		{
			yyVAL.str = ""
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2423
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = ""
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2447
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2452
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2456
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2460
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2464
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2468
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2472
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2478
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2482
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2492
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2496
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2500
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2504
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2508
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2512
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2516
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2520
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2524
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2528
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2532
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2536
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2540
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2544
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2548
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2552
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2556
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2560
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2564
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2568
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2572
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2576
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2580
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2586
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2596
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2600
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2604
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2608
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2612
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2616
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2620
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2624
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2628
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2634
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2641
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2648
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2661
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2665
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2672
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2679
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2691
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2701
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2705
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2709
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2732
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2754
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2775
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2782
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2786
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2795
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2803
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2812
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2819
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2827
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2831
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2840
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2851
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2855
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2860
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2864
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2869
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2873
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2879
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2883
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2888
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2892
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2897
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2901
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2907
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2911
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2915
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2919
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2923
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2927
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2931
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2935
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2939
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2943
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2947
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2951
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2955
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2959
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2963
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2967
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2971
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2975
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2979
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2983
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2987
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2991
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3000
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3004
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3011
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3021
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3030
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3037
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3044
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3053
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.str = ""
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3075
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3079
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3098
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3102
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3112
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3117
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3123
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3207
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3219
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3223
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3235
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3239
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3243
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3255
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3267
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3302
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3324
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3340
		{
			yyVAL.str = ""
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.str = "extended "
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3370
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3378
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3388
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3392
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3398
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3402
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3412
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3416
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3426
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3430
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3436
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3446
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3452
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3461
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3463
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3466
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3468
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3473
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3484
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3488
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3492
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3496
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3500
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3504
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.str = yyDollar[1].str
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = yyDollar[1].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3524
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3528
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3532
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3536
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3541
		{
			yyVAL.str = ""
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3545
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3555
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3569
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3581
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3591
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3597
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3601
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3605
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3609
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3621
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3663
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3671
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3734
		{
			setAllowComments(yylex, true)
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3738
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3744
		{
			yyVAL.strs = nil
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3748
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3754
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3758
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3762
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3767
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.str = SQLCacheStr
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3780
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3784
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3788
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[2].colIdent, Statement: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[2].colIdent, StatementIdentifier: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3807
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3812
		{
			yyVAL.strs = nil
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3820
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3824
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = SQLCacheStr
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = DistinctStr
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = DistinctStr
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = StraightJoinHint
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3864
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3868
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3874
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3878
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3882
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3886
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3891
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3895
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3911
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3915
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3921
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3927
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3931
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3941
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3945
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3949
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3955
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3961
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3965
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3970
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3974
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3980
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3984
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3990
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3994
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3998
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4008
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4025
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4029
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4033
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4037
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4043
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4045
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4049
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4055
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4057
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4060
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4065
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4073
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4080
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4086
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4090
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4094
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4100
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4106
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4110
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4114
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4118
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4124
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4128
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4152
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4158
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4167
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4173
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4177
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4183
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4187
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4191
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4195
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4200
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4204
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4208
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4212
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4218
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4222
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4229
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4233
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4237
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4241
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4245
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4249
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4256
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4260
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4264
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4268
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4310
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4324
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4328
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4332
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4336
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4340
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4344
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4360
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4368
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4378
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4382
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4386
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4390
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4394
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4398
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4402
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4406
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4410
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4434
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4446
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4487
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4491
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4498
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4502
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4506
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4510
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4516
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4520
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4524
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4528
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4532
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4536
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4540
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4546
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4550
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4554
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4561
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4567
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4581
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4585
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4603
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4615
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4619
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4650
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4654
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4660
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4664
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4677
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4691
		{
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4693
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4697
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4701
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4705
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4709
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4713
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4717
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4721
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4725
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4729
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4733
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4739
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4743
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4747
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4751
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4755
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4759
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4763
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4767
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4771
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4781
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4789
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4799
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4811
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4815
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4821
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4825
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4829
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4833
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4837
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4847
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4857
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4861
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4865
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4871
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4875
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4879
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4883
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4887
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4893
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4897
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4901
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4905
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4909
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4913
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4917
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4921
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4925
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4929
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4939
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4944
		{
			yyVAL.str = string("")
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4948
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4954
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4958
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4964
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4979
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4983
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4987
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5002
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5006
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5016
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5025
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5034
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5040
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5046
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5050
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5056
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5061
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5065
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5069
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5074
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5078
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5084
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5088
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5092
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5101
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5105
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5109
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5113
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5120
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5124
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5128
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5132
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5138
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5142
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5146
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5151
		{
			yyVAL.str = ""
		}
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5155
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5159
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5168
		{
			yyVAL.str = ""
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5172
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5178
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5182
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5187
		{
			yyVAL.str = ""
		}
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5191
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5196
		{
			yyVAL.str = "cascaded"
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5200
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5204
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5213
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5219
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5225
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5231
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5240
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5244
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5249
		{
			yyVAL.str = ""
		}
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5253
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5259
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5263
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5269
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5273
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5277
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5282
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5286
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5295
		{
			yyVAL.str = ""
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5299
		{
			yyVAL.str = " header"
		}
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5304
		{
			yyVAL.str = ""
		}
	case 1055:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5308
		{
			yyVAL.str = " manifest on"
		}
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5312
		{
			yyVAL.str = " manifest off"
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5317
		{
			yyVAL.str = ""
		}
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5321
		{
			yyVAL.str = " overwrite on"
		}
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = " overwrite off"
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5331
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5336
		{
			yyVAL.str = ""
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5350
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1065:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5356
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1066:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5360
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5365
		{
			yyVAL.str = ""
		}
	case 1068:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5369
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5375
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5379
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5385
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1072:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5389
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5398
		{
			yyVAL.str = ""
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5402
		{
			yyVAL.str = " optionally"
		}
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5415
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5419
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5423
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5427
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5431
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5437
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5441
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5445
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1084:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5449
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1085:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5458
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5464
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5474
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5478
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5484
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5489
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5499
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5503
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5509
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5515
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5519
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5525
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5529
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5533
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5537
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5541
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5549
		{
			yyVAL.str = "charset"
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5559
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5563
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5567
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5576
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5578
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5581
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5583
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5586
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5588
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5591
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5593
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5596
		{
			yyVAL.empty = struct{}{}
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5598
		{
			yyVAL.empty = struct{}{}
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5600
		{
			yyVAL.empty = struct{}{}
		}
	case 1123:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5604
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5613
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5620
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5624
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5630
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5634
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5641
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5647
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5651
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5657
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5661
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5668
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6138
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6147
		{
			decNesting(yylex)
		}
	case 1586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6152
		{
			skipToEnd(yylex)
		}
	case 1587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6157
		{
			skipToEnd(yylex)
		}
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6161
		{
			skipToEnd(yylex)
		}
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6165
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
