// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
<<<<<<< HEAD
const VITESS_TARGET = 57718
const VSCHEMA = 57719
const VITESS_THROTTLED_APPS = 57720
const NAMES = 57721
const GLOBAL = 57722
const SESSION = 57723
const ISOLATION = 57724
const LEVEL = 57725
const READ = 57726
const WRITE = 57727
const ONLY = 57728
const REPEATABLE = 57729
const COMMITTED = 57730
const UNCOMMITTED = 57731
const SERIALIZABLE = 57732
const CURRENT_TIMESTAMP = 57733
const DATABASE = 57734
const CURRENT_DATE = 57735
const NOW = 57736
const CURRENT_TIME = 57737
const LOCALTIME = 57738
const LOCALTIMESTAMP = 57739
const CURRENT_USER = 57740
const UTC_DATE = 57741
const UTC_TIME = 57742
const UTC_TIMESTAMP = 57743
const DAY = 57744
const DAY_HOUR = 57745
const DAY_MICROSECOND = 57746
const DAY_MINUTE = 57747
const DAY_SECOND = 57748
const HOUR = 57749
const HOUR_MICROSECOND = 57750
const HOUR_MINUTE = 57751
const HOUR_SECOND = 57752
const MICROSECOND = 57753
const MINUTE = 57754
const MINUTE_MICROSECOND = 57755
const MINUTE_SECOND = 57756
const MONTH = 57757
const QUARTER = 57758
const SECOND = 57759
const SECOND_MICROSECOND = 57760
const YEAR_MONTH = 57761
const WEEK = 57762
const REPLACE = 57763
const CONVERT = 57764
const CAST = 57765
const SUBSTR = 57766
const SUBSTRING = 57767
const GROUP_CONCAT = 57768
const SEPARATOR = 57769
const TIMESTAMPADD = 57770
const TIMESTAMPDIFF = 57771
const WEIGHT_STRING = 57772
const LTRIM = 57773
const RTRIM = 57774
const TRIM = 57775
const JSON_ARRAY = 57776
const JSON_OBJECT = 57777
const JSON_QUOTE = 57778
const JSON_DEPTH = 57779
const JSON_TYPE = 57780
const JSON_LENGTH = 57781
const JSON_VALID = 57782
const JSON_ARRAY_APPEND = 57783
const JSON_ARRAY_INSERT = 57784
const JSON_INSERT = 57785
const JSON_MERGE = 57786
const JSON_MERGE_PATCH = 57787
const JSON_MERGE_PRESERVE = 57788
const JSON_REMOVE = 57789
const JSON_REPLACE = 57790
const JSON_SET = 57791
const JSON_UNQUOTE = 57792
const REGEXP_INSTR = 57793
const REGEXP_LIKE = 57794
const REGEXP_REPLACE = 57795
const REGEXP_SUBSTR = 57796
const ExtractValue = 57797
const UpdateXML = 57798
const GET_LOCK = 57799
const RELEASE_LOCK = 57800
const RELEASE_ALL_LOCKS = 57801
const IS_FREE_LOCK = 57802
const IS_USED_LOCK = 57803
const MATCH = 57804
const AGAINST = 57805
const BOOLEAN = 57806
const LANGUAGE = 57807
const WITH = 57808
const QUERY = 57809
const EXPANSION = 57810
const WITHOUT = 57811
const VALIDATION = 57812
const UNUSED = 57813
const ARRAY = 57814
const BYTE = 57815
const CUME_DIST = 57816
const DESCRIPTION = 57817
const DENSE_RANK = 57818
const EMPTY = 57819
const EXCEPT = 57820
const FIRST_VALUE = 57821
const GROUPING = 57822
const GROUPS = 57823
const JSON_TABLE = 57824
const LAG = 57825
const LAST_VALUE = 57826
const LATERAL = 57827
const LEAD = 57828
const NTH_VALUE = 57829
const NTILE = 57830
const OF = 57831
const OVER = 57832
const PERCENT_RANK = 57833
const RANK = 57834
const RECURSIVE = 57835
const ROW_NUMBER = 57836
const SYSTEM = 57837
const WINDOW = 57838
const ACTIVE = 57839
const ADMIN = 57840
const AUTOEXTEND_SIZE = 57841
const BUCKETS = 57842
const CLONE = 57843
const COLUMN_FORMAT = 57844
const COMPONENT = 57845
const DEFINITION = 57846
const ENFORCED = 57847
const ENGINE_ATTRIBUTE = 57848
const EXCLUDE = 57849
const FOLLOWING = 57850
const GEOMCOLLECTION = 57851
const GET_MASTER_PUBLIC_KEY = 57852
const HISTOGRAM = 57853
const HISTORY = 57854
const INACTIVE = 57855
const INVISIBLE = 57856
const LOCKED = 57857
const MASTER_COMPRESSION_ALGORITHMS = 57858
const MASTER_PUBLIC_KEY_PATH = 57859
const MASTER_TLS_CIPHERSUITES = 57860
const MASTER_ZSTD_COMPRESSION_LEVEL = 57861
const NESTED = 57862
const NETWORK_NAMESPACE = 57863
const NOWAIT = 57864
const NULLS = 57865
const OJ = 57866
const OLD = 57867
const OPTIONAL = 57868
const ORDINALITY = 57869
const ORGANIZATION = 57870
const OTHERS = 57871
const PARTIAL = 57872
const PATH = 57873
const PERSIST = 57874
const PERSIST_ONLY = 57875
const PRECEDING = 57876
const PRIVILEGE_CHECKS_USER = 57877
const PROCESS = 57878
const RANDOM = 57879
const REFERENCE = 57880
const REQUIRE_ROW_FORMAT = 57881
const RESOURCE = 57882
const RESPECT = 57883
const RESTART = 57884
const RETAIN = 57885
const REUSE = 57886
const ROLE = 57887
const SECONDARY = 57888
const SECONDARY_ENGINE = 57889
const SECONDARY_ENGINE_ATTRIBUTE = 57890
const SECONDARY_LOAD = 57891
const SECONDARY_UNLOAD = 57892
const SIMPLE = 57893
const SKIP = 57894
const SRID = 57895
const THREAD_PRIORITY = 57896
const TIES = 57897
const UNBOUNDED = 57898
const VCPU = 57899
const VISIBLE = 57900
const RETURNING = 57901
const FORMAT = 57902
const TREE = 57903
const VITESS = 57904
const TRADITIONAL = 57905
const LOCAL = 57906
const LOW_PRIORITY = 57907
const NO_WRITE_TO_BINLOG = 57908
const LOGS = 57909
const ERROR = 57910
const GENERAL = 57911
const HOSTS = 57912
const OPTIMIZER_COSTS = 57913
const USER_RESOURCES = 57914
const SLOW = 57915
const CHANNEL = 57916
const RELAY = 57917
const EXPORT = 57918
const CURRENT = 57919
const ROW = 57920
const ROWS = 57921
const AVG_ROW_LENGTH = 57922
const CONNECTION = 57923
const CHECKSUM = 57924
const DELAY_KEY_WRITE = 57925
const ENCRYPTION = 57926
const ENGINE = 57927
const INSERT_METHOD = 57928
const MAX_ROWS = 57929
const MIN_ROWS = 57930
const PACK_KEYS = 57931
const PASSWORD = 57932
const FIXED = 57933
const DYNAMIC = 57934
const COMPRESSED = 57935
const REDUNDANT = 57936
const COMPACT = 57937
const ROW_FORMAT = 57938
const STATS_AUTO_RECALC = 57939
const STATS_PERSISTENT = 57940
const STATS_SAMPLE_PAGES = 57941
const STORAGE = 57942
const MEMORY = 57943
const DISK = 57944
const PARTITIONS = 57945
const LINEAR = 57946
const RANGE = 57947
const LIST = 57948
const SUBPARTITION = 57949
const SUBPARTITIONS = 57950
const HASH = 57951
=======
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const REGEXP_INSTR = 57792
const REGEXP_LIKE = 57793
const REGEXP_REPLACE = 57794
const REGEXP_SUBSTR = 57795
const ExtractValue = 57796
const UpdateXML = 57797
const LOCATE = 57798
const POSITION = 57799
const MATCH = 57800
const AGAINST = 57801
const BOOLEAN = 57802
const LANGUAGE = 57803
const WITH = 57804
const QUERY = 57805
const EXPANSION = 57806
const WITHOUT = 57807
const VALIDATION = 57808
const UNUSED = 57809
const ARRAY = 57810
const BYTE = 57811
const CUME_DIST = 57812
const DESCRIPTION = 57813
const DENSE_RANK = 57814
const EMPTY = 57815
const EXCEPT = 57816
const FIRST_VALUE = 57817
const GROUPING = 57818
const GROUPS = 57819
const JSON_TABLE = 57820
const LAG = 57821
const LAST_VALUE = 57822
const LATERAL = 57823
const LEAD = 57824
const NTH_VALUE = 57825
const NTILE = 57826
const OF = 57827
const OVER = 57828
const PERCENT_RANK = 57829
const RANK = 57830
const RECURSIVE = 57831
const ROW_NUMBER = 57832
const SYSTEM = 57833
const WINDOW = 57834
const ACTIVE = 57835
const ADMIN = 57836
const AUTOEXTEND_SIZE = 57837
const BUCKETS = 57838
const CLONE = 57839
const COLUMN_FORMAT = 57840
const COMPONENT = 57841
const DEFINITION = 57842
const ENFORCED = 57843
const ENGINE_ATTRIBUTE = 57844
const EXCLUDE = 57845
const FOLLOWING = 57846
const GEOMCOLLECTION = 57847
const GET_MASTER_PUBLIC_KEY = 57848
const HISTOGRAM = 57849
const HISTORY = 57850
const INACTIVE = 57851
const INVISIBLE = 57852
const LOCKED = 57853
const MASTER_COMPRESSION_ALGORITHMS = 57854
const MASTER_PUBLIC_KEY_PATH = 57855
const MASTER_TLS_CIPHERSUITES = 57856
const MASTER_ZSTD_COMPRESSION_LEVEL = 57857
const NESTED = 57858
const NETWORK_NAMESPACE = 57859
const NOWAIT = 57860
const NULLS = 57861
const OJ = 57862
const OLD = 57863
const OPTIONAL = 57864
const ORDINALITY = 57865
const ORGANIZATION = 57866
const OTHERS = 57867
const PARTIAL = 57868
const PATH = 57869
const PERSIST = 57870
const PERSIST_ONLY = 57871
const PRECEDING = 57872
const PRIVILEGE_CHECKS_USER = 57873
const PROCESS = 57874
const RANDOM = 57875
const REFERENCE = 57876
const REQUIRE_ROW_FORMAT = 57877
const RESOURCE = 57878
const RESPECT = 57879
const RESTART = 57880
const RETAIN = 57881
const REUSE = 57882
const ROLE = 57883
const SECONDARY = 57884
const SECONDARY_ENGINE = 57885
const SECONDARY_ENGINE_ATTRIBUTE = 57886
const SECONDARY_LOAD = 57887
const SECONDARY_UNLOAD = 57888
const SIMPLE = 57889
const SKIP = 57890
const SRID = 57891
const THREAD_PRIORITY = 57892
const TIES = 57893
const UNBOUNDED = 57894
const VCPU = 57895
const VISIBLE = 57896
const RETURNING = 57897
const FORMAT = 57898
const TREE = 57899
const VITESS = 57900
const TRADITIONAL = 57901
const LOCAL = 57902
const LOW_PRIORITY = 57903
const NO_WRITE_TO_BINLOG = 57904
const LOGS = 57905
const ERROR = 57906
const GENERAL = 57907
const HOSTS = 57908
const OPTIMIZER_COSTS = 57909
const USER_RESOURCES = 57910
const SLOW = 57911
const CHANNEL = 57912
const RELAY = 57913
const EXPORT = 57914
const CURRENT = 57915
const ROW = 57916
const ROWS = 57917
const AVG_ROW_LENGTH = 57918
const CONNECTION = 57919
const CHECKSUM = 57920
const DELAY_KEY_WRITE = 57921
const ENCRYPTION = 57922
const ENGINE = 57923
const INSERT_METHOD = 57924
const MAX_ROWS = 57925
const MIN_ROWS = 57926
const PACK_KEYS = 57927
const PASSWORD = 57928
const FIXED = 57929
const DYNAMIC = 57930
const COMPRESSED = 57931
const REDUNDANT = 57932
const COMPACT = 57933
const ROW_FORMAT = 57934
const STATS_AUTO_RECALC = 57935
const STATS_PERSISTENT = 57936
const STATS_SAMPLE_PAGES = 57937
const STORAGE = 57938
const MEMORY = 57939
const DISK = 57940
const PARTITIONS = 57941
const LINEAR = 57942
const RANGE = 57943
const LIST = 57944
const SUBPARTITION = 57945
const SUBPARTITIONS = 57946
const HASH = 57947
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
<<<<<<< HEAD
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
=======
	"LOCATE",
	"POSITION",
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
<<<<<<< HEAD
	627, 145,
=======
	623, 145,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 740,
	235, 740,
	246, 740,
	281, 754,
	282, 754,
	-2, 742,
	-1, 60,
	237, 767,
	-2, 765,
	-1, 114,
<<<<<<< HEAD
	234, 1383,
	-2, 119,
	-1, 116,
	1, 146,
	627, 146,
=======
	234, 1380,
	-2, 119,
	-1, 116,
	1, 146,
	623, 146,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
<<<<<<< HEAD
	-1, 737,
	218, 1404,
	-2, 1400,
	-1, 738,
	218, 1405,
	-2, 1401,
	-1, 814,
	59, 835,
	-2, 850,
	-1, 851,
	148, 1826,
	-2, 112,
	-1, 852,
	148, 1659,
	-2, 113,
	-1, 858,
	148, 1745,
	-2, 1377,
	-1, 1008,
	148, 1584,
	-2, 1374,
	-1, 1049,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1134,
	1, 555,
	627, 555,
	-2, 153,
	-1, 1392,
	59, 836,
	-2, 855,
	-1, 1393,
	59, 837,
	-2, 856,
	-1, 1446,
=======
	-1, 731,
	218, 1401,
	-2, 1397,
	-1, 732,
	218, 1402,
	-2, 1398,
	-1, 808,
	59, 833,
	-2, 848,
	-1, 845,
	148, 1820,
	-2, 112,
	-1, 846,
	148, 1655,
	-2, 113,
	-1, 852,
	148, 1740,
	-2, 1374,
	-1, 1002,
	148, 1581,
	-2, 1371,
	-1, 1043,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1128,
	1, 555,
	623, 555,
	-2, 153,
	-1, 1383,
	59, 834,
	-2, 853,
	-1, 1384,
	59, 835,
	-2, 854,
	-1, 1437,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
<<<<<<< HEAD
	-1, 1525,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1534,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1860,
	218, 1409,
	-2, 1403,
	-1, 1951,
=======
	-1, 1516,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1525,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1847,
	218, 1406,
	-2, 1400,
	-1, 1937,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
<<<<<<< HEAD
	-1, 1958,
	25, 174,
	-2, 176,
	-1, 2228,
	87, 39,
	-2, 892,
	-1, 2285,
	77, 94,
	87, 94,
	-2, 912,
	-1, 2353,
	602, 667,
	-2, 641,
	-1, 2513,
	49, 1344,
	-2, 1338,
	-1, 2758,
	87, 39,
	-2, 893,
	-1, 2796,
=======
	-1, 1944,
	25, 174,
	-2, 176,
	-1, 2214,
	87, 39,
	-2, 889,
	-1, 2270,
	77, 94,
	87, 94,
	-2, 909,
	-1, 2338,
	598, 667,
	-2, 641,
	-1, 2500,
	49, 1341,
	-2, 1335,
	-1, 2747,
	87, 39,
	-2, 890,
	-1, 2785,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	7, 53,
	18, 53,
	20, 53,
	88, 53,
<<<<<<< HEAD
	-2, 884,
	-1, 3122,
	602, 667,
	-2, 655,
	-1, 3215,
	22, 1747,
	32, 1747,
	174, 1747,
	257, 1747,
	315, 1747,
	316, 1747,
	317, 1747,
	318, 1747,
	319, 1747,
	320, 1747,
	321, 1747,
	323, 1747,
	324, 1747,
	325, 1747,
	326, 1747,
	327, 1747,
	328, 1747,
	329, 1747,
	330, 1747,
	331, 1747,
	332, 1747,
	333, 1747,
	334, 1747,
	336, 1747,
	338, 1747,
	339, 1747,
	340, 1747,
	341, 1747,
	342, 1747,
	343, 1747,
	344, 1747,
	345, 1747,
	346, 1747,
	349, 1747,
	350, 1747,
	351, 1747,
	352, 1747,
	353, 1747,
	354, 1747,
	355, 1747,
	356, 1747,
	357, 1747,
	481, 1747,
=======
	-2, 882,
	-1, 3110,
	598, 667,
	-2, 655,
	-1, 3203,
	22, 1742,
	32, 1742,
	174, 1742,
	257, 1742,
	315, 1742,
	316, 1742,
	317, 1742,
	318, 1742,
	319, 1742,
	320, 1742,
	321, 1742,
	323, 1742,
	324, 1742,
	325, 1742,
	326, 1742,
	327, 1742,
	328, 1742,
	329, 1742,
	330, 1742,
	331, 1742,
	332, 1742,
	333, 1742,
	334, 1742,
	336, 1742,
	338, 1742,
	339, 1742,
	340, 1742,
	341, 1742,
	342, 1742,
	343, 1742,
	344, 1742,
	345, 1742,
	346, 1742,
	349, 1742,
	350, 1742,
	351, 1742,
	352, 1742,
	353, 1742,
	354, 1742,
	355, 1742,
	356, 1742,
	357, 1742,
	477, 1742,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-2, 599,
}

const yyPrivate = 57344

<<<<<<< HEAD
const yyLast = 46092

var yyAct = [...]int{
	737, 2455, 3299, 2901, 2902, 3287, 746, 2900, 3256, 3192,
	739, 643, 3103, 3257, 2733, 3213, 2873, 740, 1449, 1948,
	624, 3156, 1901, 3179, 3087, 2662, 2568, 2575, 1197, 2168,
	3037, 3, 1881, 2625, 2630, 2616, 2627, 715, 37, 2626,
	2526, 2188, 3085, 2624, 2629, 2628, 2529, 2929, 2860, 2474,
	2645, 186, 3075, 807, 186, 829, 591, 186, 1883, 2216,
	626, 2583, 606, 2256, 186, 2018, 2530, 2644, 2767, 2414,
	2527, 2934, 186, 2761, 1370, 1407, 2454, 2453, 714, 654,
	713, 2279, 716, 2647, 2787, 2514, 1921, 186, 1905, 2524,
	2243, 1981, 622, 2753, 2318, 2667, 2350, 2397, 1503, 2006,
	1986, 2319, 2049, 2320, 1937, 830, 856, 155, 2268, 606,
	1926, 1011, 606, 186, 606, 811, 2235, 815, 36, 1550,
	1925, 38, 2218, 2389, 1146, 1394, 2249, 1820, 1754, 809,
	1847, 1821, 2027, 1702, 2005, 832, 1532, 853, 2312, 1744,
	1988, 1438, 618, 95, 141, 1913, 1854, 2066, 1044, 1039,
	1416, 2287, 1928, 635, 1374, 1651, 1285, 1767, 91, 1218,
	1721, 630, 1539, 1647, 1015, 1631, 1018, 96, 1047, 1050,
	2003, 1057, 1019, 1977, 1045, 1175, 1046, 1857, 1906, 1437,
	1421, 821, 1435, 1817, 1195, 1656, 1189, 1250, 159, 119,
	117, 118, 1498, 1524, 124, 125, 98, 1130, 816, 843,
	819, 817, 1873, 102, 85, 76, 613, 97, 1293, 3112,
	2343, 89, 3288, 2861, 1289, 2020, 2021, 2022, 2020, 2613,
	3141, 2373, 2372, 2635, 2341, 2064, 818, 77, 623, 595,
	1616, 837, 8, 842, 562, 2816, 120, 7, 2853, 90,
	6, 3240, 126, 87, 104, 105, 3142, 108, 1081, 823,
	114, 87, 87, 183, 1086, 2405, 557, 1219, 2406, 3137,
	1012, 3136, 2635, 1709, 2905, 2905, 1724, 1708, 1219, 1707,
	1037, 1706, 614, 1878, 1879, 2632, 803, 804, 805, 806,
	1705, 2633, 814, 810, 808, 1704, 1687, 857, 616, 1696,
	617, 850, 3234, 2214, 824, 2510, 2722, 1060, 3260, 1036,
	1061, 2053, 831, 2639, 87, 120, 1035, 1034, 1033, 2245,
	845, 846, 2478, 1023, 2363, 1028, 1087, 1090, 1091, 3310,
	2633, 1401, 1094, 3255, 3278, 752, 753, 754, 3244, 3242,
	2738, 188, 189, 190, 2737, 2051, 2366, 3088, 1103, 752,
	753, 754, 2639, 2189, 1714, 2052, 2684, 3223, 3033, 2904,
	2904, 595, 3137, 3032, 3243, 3241, 2866, 78, 1085, 2867,
	80, 3221, 1084, 3307, 1229, 3189, 78, 3291, 3131, 3269,
	3227, 3228, 3193, 120, 2874, 1229, 3180, 2046, 2585, 2586,
	3188, 3130, 2413, 3218, 78, 3222, 2108, 78, 1997, 2702,
	1513, 2215, 1083, 1909, 2381, 2565, 2566, 1182, 2380, 1184,
	1943, 1944, 1439, 2564, 1440, 1100, 1101, 1102, 2259, 1105,
	1106, 1107, 1108, 1991, 2636, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 596, 2260, 3117, 87, 2947, 1181, 1183, 2404,
	2105, 188, 189, 190, 87, 1942, 1192, 3199, 1165, 1133,
	801, 2106, 2296, 2636, 1880, 2295, 800, 1032, 2297, 1139,
	1140, 3199, 87, 1225, 3104, 87, 1217, 1153, 1170, 1171,
	1153, 3261, 1154, 2344, 1225, 1154, 2308, 1961, 1960, 1166,
	1152, 1251, 1151, 1159, 595, 2584, 2664, 2252, 2253, 2442,
	2692, 1142, 3262, 2764, 595, 2571, 2690, 2587, 604, 1129,
	1695, 608, 595, 3042, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1260, 1259, 1261, 1262, 1030, 602, 2668, 2390, 1378,
	2028, 1697, 1698, 1699, 2072, 2351, 592, 2078, 2075, 2077,
	2076, 2079, 2080, 2376, 1179, 1104, 2657, 1606, 1180, 2067,
	2572, 3064, 3290, 3065, 2658, 595, 1632, 2084, 1185, 2085,
	1186, 2086, 1191, 1637, 596, 1990, 1174, 186, 1135, 186,
	1168, 1169, 186, 1172, 1167, 2855, 2574, 2392, 1160, 2854,
	2087, 2665, 1178, 1173, 578, 1110, 1109, 1907, 1908, 2073,
	2569, 1607, 2071, 1608, 2031, 2666, 576, 1909, 2069, 3235,
	3017, 1070, 606, 1199, 606, 606, 1040, 2585, 2586, 2851,
	1041, 1032, 1128, 2909, 2570, 1068, 1922, 1041, 1079, 606,
	606, 1078, 1077, 1076, 1265, 1075, 1074, 1073, 1517, 1080,
	1072, 1067, 1381, 1265, 2070, 2587, 573, 2106, 1163, 2396,
	1016, 1016, 2477, 1031, 1014, 587, 1053, 2576, 3311, 1089,
	3267, 1016, 1211, 1052, 1648, 1052, 1538, 2443, 37, 1088,
	583, 2004, 1268, 1269, 1270, 1271, 844, 2393, 2057, 2056,
	1644, 1205, 1276, 3303, 1097, 1280, 1132, 1224, 1221, 1222,
	1223, 1228, 1230, 1227, 2606, 1226, 3100, 2361, 1224, 1221,
	1222, 1223, 1228, 1230, 1227, 1220, 1226, 596, 1149, 2375,
	1155, 1156, 1157, 1158, 1511, 1645, 1220, 596, 1038, 2409,
	1510, 3111, 2342, 1059, 2584, 596, 1096, 1509, 2120, 2310,
	1507, 561, 2850, 1193, 1194, 2048, 2587, 2050, 556, 563,
	2378, 565, 579, 2803, 598, 2388, 597, 569, 2387, 567,
	571, 580, 572, 2783, 566, 2292, 577, 1071, 2255, 568,
	581, 582, 585, 588, 589, 590, 586, 584, 596, 575,
	599, 1069, 749, 1537, 2199, 2345, 2219, 2221, 1187, 1638,
	749, 749, 1131, 1639, 1640, 1266, 1267, 1872, 1425, 1343,
	1144, 1907, 1908, 2250, 116, 1949, 3226, 1031, 1201, 1202,
	2765, 1265, 1262, 2637, 2638, 2563, 1368, 81, 2399, 3129,
	2399, 1272, 1176, 2398, 1994, 2398, 2641, 1657, 826, 1798,
	1190, 186, 1148, 3195, 1058, 606, 606, 1618, 1617, 1619,
	1620, 1621, 2814, 2815, 2365, 1059, 3125, 3195, 2903, 2903,
	3225, 186, 2637, 2638, 3194, 2573, 1200, 3043, 1162, 1768,
	2334, 2434, 86, 1059, 1995, 2641, 111, 77, 3194, 1164,
	606, 86, 1993, 1214, 186, 1059, 1384, 2107, 1212, 606,
	1388, 1213, 1636, 1082, 2846, 606, 811, 1059, 2364, 86,
	2777, 2068, 86, 1382, 1385, 1641, 1295, 1369, 1291, 1441,
	1292, 1138, 1215, 1141, 1150, 1027, 1996, 853, 1029, 3301,
	3270, 1059, 3302, 1768, 3300, 2135, 1992, 1790, 1779, 1780,
	1781, 1782, 1792, 1783, 1784, 1785, 1797, 1793, 1786, 1787,
	1794, 1795, 1796, 1788, 1789, 1791, 112, 2047, 1363, 1257,
	1258, 1260, 1259, 1261, 1262, 2943, 1058, 1386, 1095, 1235,
	2220, 95, 1092, 1233, 1234, 1234, 1349, 1350, 1351, 1352,
	1353, 1369, 2821, 600, 1058, 2820, 2035, 1177, 1547, 1062,
	1052, 1387, 1658, 1147, 1064, 96, 1058, 2415, 1065, 1063,
	1546, 1062, 1052, 1375, 593, 1536, 1064, 2040, 1058, 1134,
	1065, 1063, 2045, 2043, 1052, 1055, 1056, 2040, 1016, 594,
	1070, 1068, 1049, 1053, 98, 1032, 3312, 1024, 1716, 1718,
	1719, 1066, 1058, 2577, 1026, 1025, 1235, 2581, 1052, 1055,
	1056, 1235, 1016, 1048, 2044, 2580, 1049, 1053, 1633, 1235,
	1634, 2131, 1717, 1635, 2042, 3263, 1372, 1235, 2804, 3158,
	1426, 186, 1235, 1383, 3093, 1499, 3305, 1389, 808, 1403,
	2145, 1406, 3025, 1235, 810, 1508, 1726, 857, 1235, 2582,
	2417, 3024, 1235, 1030, 2578, 1914, 1915, 3015, 1626, 2579,
	1727, 1263, 1264, 1725, 1624, 1431, 1432, 1436, 606, 1613,
	1534, 1232, 3159, 1233, 1234, 2893, 2892, 3094, 1543, 2125,
	2436, 3313, 1545, 2828, 2827, 1548, 1549, 606, 606, 2124,
	606, 2817, 606, 606, 2130, 606, 606, 606, 606, 606,
	606, 1255, 1256, 1257, 1258, 1260, 1259, 1261, 1262, 1580,
	1581, 1235, 606, 1401, 186, 1586, 2427, 2426, 2425, 2419,
	1773, 2423, 1625, 2418, 1774, 2416, 3274, 1401, 1623, 2614,
	2421, 3272, 1401, 1612, 186, 3205, 1401, 2602, 1232, 2420,
	1233, 1234, 2880, 1232, 2881, 1233, 1234, 606, 2316, 186,
	2315, 1232, 2000, 1233, 1234, 1627, 2422, 2424, 1611, 1232,
	1646, 1233, 1234, 606, 1232, 186, 1233, 1234, 1235, 1610,
	1609, 1031, 2112, 2113, 2114, 1232, 848, 1233, 1234, 1530,
	1232, 186, 1233, 1234, 1232, 1414, 1233, 1234, 186, 1235,
	1599, 1593, 1601, 1590, 3203, 1401, 1589, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 606, 1552, 1523, 1553,
	1588, 1555, 1557, 1559, 1542, 1561, 1563, 1565, 1567, 1569,
	606, 606, 3264, 1583, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1260, 1259, 1261, 1262, 752, 753, 754, 186, 1541,
	1506, 1410, 1544, 1232, 3120, 1233, 1234, 1540, 1540, 3119,
	1235, 1413, 1512, 3097, 1235, 3096, 1520, 1521, 1519, 188,
	189, 190, 1533, 2811, 2153, 3095, 1235, 3020, 3005, 1579,
	3004, 1653, 1582, 1401, 1584, 1253, 1254, 1255, 1256, 1257,
	1258, 1260, 1259, 1261, 1262, 2942, 606, 1235, 1748, 1752,
	1730, 1411, 2940, 1751, 1751, 2888, 1587, 1749, 1749, 1757,
	1232, 606, 1233, 1234, 1661, 1514, 1515, 1516, 2825, 2810,
	2669, 1665, 1235, 1667, 1668, 1669, 1670, 606, 606, 2605,
	1674, 1232, 2604, 1233, 1234, 1649, 2325, 188, 189, 190,
	1235, 2299, 1686, 3201, 1401, 2313, 1365, 1368, 1401, 1401,
	2062, 1235, 2061, 120, 1035, 1034, 1033, 1659, 1660, 1722,
	3265, 1720, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1237,
	1850, 1664, 188, 189, 190, 1904, 2016, 1663, 1671, 1672,
	1673, 3108, 1591, 1592, 188, 189, 190, 1886, 1597, 1598,
	1688, 1654, 1232, 1622, 1233, 1234, 1232, 1614, 1233, 1234,
	1684, 1604, 1858, 1685, 1235, 3073, 1401, 186, 1232, 1600,
	1233, 1234, 606, 1596, 1692, 1693, 1595, 1594, 1818, 1235,
	1412, 1188, 2661, 3071, 1401, 1204, 3051, 101, 1369, 1232,
	1723, 1233, 1234, 3050, 3068, 1401, 186, 3009, 100, 606,
	99, 3008, 1235, 188, 189, 190, 2872, 2014, 1848, 186,
	2241, 3289, 2352, 606, 1232, 2330, 1233, 1234, 186, 2525,
	186, 100, 186, 186, 606, 1728, 92, 606, 3251, 1401,
	2776, 1891, 1232, 1892, 1233, 1234, 1875, 93, 606, 1769,
	1860, 1753, 1818, 1232, 1858, 1233, 1234, 3054, 1401, 1760,
	1761, 1957, 853, 2241, 3186, 853, 188, 189, 190, 1958,
	2012, 2257, 2750, 1401, 95, 2241, 3166, 1729, 1401, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1862, 1863, 95, 2747, 1401, 1235, 96, 1859,
	2121, 1235, 1401, 606, 2241, 3162, 1232, 2257, 1233, 1234,
	2007, 2008, 2009, 1924, 2776, 2011, 2013, 2015, 96, 1235,
	1897, 1232, 1861, 1233, 1234, 1864, 1865, 1235, 3149, 1401,
	606, 2558, 1860, 2241, 3113, 3252, 606, 1543, 2864, 3110,
	1543, 2106, 1543, 2265, 1232, 1470, 1233, 1234, 2039, 1967,
	1968, 1969, 1970, 1962, 1952, 1963, 1964, 1965, 1966, 1953,
	1231, 1885, 823, 2718, 1401, 2778, 1935, 3028, 1401, 1896,
	3154, 1973, 1974, 1975, 1976, 2241, 3016, 2864, 1401, 2776,
	2169, 1919, 2029, 606, 2745, 1401, 1235, 1899, 606, 1983,
	1235, 3124, 606, 606, 2241, 2862, 1956, 2040, 1401, 2781,
	1401, 1989, 3047, 1917, 2699, 1231, 1401, 2162, 1401, 2041,
	2798, 1400, 857, 2237, 1940, 857, 1939, 2595, 2594, 2591,
	2592, 2241, 1955, 94, 1954, 1235, 2591, 2590, 94, 1232,
	186, 1233, 1234, 1232, 1235, 1233, 1234, 186, 2265, 1401,
	2265, 2026, 738, 2742, 186, 186, 2121, 1401, 186, 1999,
	186, 1232, 2264, 1233, 1234, 2106, 2374, 186, 2718, 1232,
	2288, 1233, 1234, 1984, 186, 1235, 101, 2040, 1979, 1980,
	1401, 1235, 2002, 2034, 3013, 1998, 2037, 100, 2038, 99,
	1502, 2355, 1401, 2010, 2348, 2349, 2121, 1458, 94, 2593,
	186, 2498, 2123, 187, 2054, 606, 187, 1060, 1984, 187,
	1061, 2036, 2033, 2032, 607, 1941, 187, 2265, 2697, 1401,
	1540, 1251, 2121, 2408, 187, 2162, 2055, 2752, 1232, 2142,
	1233, 1234, 1232, 2289, 1233, 1234, 2141, 2058, 2040, 187,
	2023, 2059, 2060, 2291, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1260, 1259, 1261, 1262, 2241, 2240, 1401, 2117, 2847,
	1251, 607, 2119, 1912, 607, 187, 607, 1232, 1405, 1233,
	1234, 1502, 1501, 2065, 1876, 1235, 1232, 1700, 1233, 1234,
	1471, 1447, 1446, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1260, 1259, 1261, 1262, 2097, 2098, 1643, 1433, 1235, 2100,
	1043, 1251, 1042, 1235, 1247, 87, 1248, 1232, 2101, 1233,
	1234, 3231, 813, 1232, 1235, 1233, 1234, 3169, 1722, 2090,
	1249, 1263, 1264, 1246, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1260, 1259, 1261, 1262, 3039, 1408, 3006, 1484, 1487,
	1488, 1489, 1490, 1491, 1492, 1235, 1493, 1494, 1495, 1496,
	1497, 1472, 1473, 1474, 1475, 1456, 1457, 1485, 2748, 1459,
	2954, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	2104, 2845, 1469, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 2194, 1401, 1235, 2842, 3284, 2720, 186, 1235, 1723,
	87, 2288, 1235, 2823, 2709, 186, 2115, 2177, 1401, 2225,
	606, 2708, 1235, 1504, 1751, 1982, 606, 1232, 1749, 1233,
	1234, 2211, 2659, 188, 189, 190, 2619, 606, 2615, 1849,
	2356, 1978, 2229, 1851, 1972, 1971, 1235, 2617, 2716, 1629,
	1232, 1535, 1233, 1234, 2134, 1232, 92, 1233, 1234, 1531,
	747, 186, 1235, 94, 1500, 186, 1232, 93, 1233, 1234,
	113, 2132, 2322, 2223, 2289, 1133, 3282, 1235, 2321, 2663,
	2298, 2788, 2789, 2261, 2106, 2116, 2706, 2118, 1251, 37,
	3040, 2705, 2151, 1235, 1997, 2704, 1889, 1232, 2281, 1233,
	1234, 2833, 3258, 3135, 1235, 3059, 2317, 1690, 1235, 1860,
	2794, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1260, 1259,
	1261, 1262, 1401, 2242, 1486, 1571, 2322, 1235, 606, 2210,
	2791, 1235, 2611, 2610, 186, 1232, 2609, 1233, 1234, 2525,
	1232, 186, 1233, 1234, 1232, 2209, 1233, 1234, 2834, 2835,
	2836, 1235, 2335, 2238, 1232, 606, 1233, 1234, 1859, 1375,
	2208, 2213, 606, 2196, 2197, 2251, 1543, 1543, 2091, 1691,
	3237, 606, 1572, 1573, 1574, 2793, 2207, 2347, 1232, 2280,
	1233, 1234, 2309, 2311, 2239, 2234, 2544, 2206, 2370, 2302,
	2543, 2205, 3187, 2254, 1232, 2829, 1233, 1234, 2286, 1575,
	186, 186, 186, 186, 186, 1235, 1903, 1409, 2371, 1232,
	2192, 1233, 1234, 2293, 2186, 2547, 1895, 1989, 2290, 2545,
	2548, 186, 186, 2782, 2546, 1232, 2503, 1233, 1234, 2502,
	2300, 2924, 2303, 2923, 2185, 3092, 1232, 186, 1233, 1234,
	1232, 2314, 1233, 1234, 2515, 2517, 2830, 2831, 2832, 2769,
	1576, 1577, 1578, 2518, 2772, 2935, 606, 2768, 2323, 1232,
	2933, 1233, 1234, 1232, 2512, 1233, 1234, 827, 1642, 2589,
	799, 2411, 2336, 2337, 2338, 828, 2549, 2331, 2274, 2275,
	2332, 2922, 2368, 1232, 2306, 1233, 1234, 2326, 2184, 1099,
	1098, 1764, 2677, 1235, 2321, 2402, 1203, 2362, 1523, 121,
	92, 92, 2357, 2358, 1751, 1765, 1751, 94, 1749, 1751,
	1749, 93, 93, 1749, 1751, 2774, 2433, 2367, 1749, 94,
	606, 3297, 101, 1850, 2428, 1850, 1914, 1915, 1235, 187,
	606, 187, 2430, 100, 187, 99, 2391, 1232, 2607, 1233,
	1234, 3210, 2410, 2094, 94, 3109, 3035, 2588, 2369, 2501,
	1235, 2278, 1900, 606, 2394, 835, 836, 2500, 2486, 2083,
	2082, 1235, 2081, 2479, 607, 2754, 607, 607, 186, 2324,
	2110, 99, 606, 2481, 2327, 2328, 2183, 2458, 3080, 2461,
	2412, 607, 607, 3079, 2462, 3062, 606, 2941, 2468, 2469,
	2470, 2471, 2939, 606, 606, 2429, 186, 186, 186, 186,
	186, 1848, 2400, 1848, 101, 2401, 2938, 2931, 186, 2843,
	2773, 2182, 2771, 186, 2486, 100, 186, 99, 186, 2620,
	2024, 186, 186, 186, 2449, 1232, 1518, 1233, 1234, 2505,
	815, 834, 101, 2181, 100, 2537, 2463, 2464, 2465, 2466,
	2467, 2930, 2522, 100, 2180, 2762, 2257, 1235, 2557, 2506,
	1388, 2281, 2913, 2480, 2237, 2482, 2444, 2603, 2143, 2456,
	1232, 2456, 1233, 1234, 2456, 1235, 186, 3286, 3285, 2456,
	2493, 1887, 2497, 2531, 1235, 2485, 1427, 1418, 3285, 606,
	3286, 2504, 1232, 3098, 1233, 1234, 2809, 606, 106, 107,
	825, 103, 186, 1232, 2507, 1233, 1234, 88, 1, 2559,
	1235, 2813, 2560, 2519, 2520, 1235, 186, 2539, 2540, 2643,
	2542, 816, 3220, 2536, 817, 2550, 2538, 95, 574, 2541,
	1877, 2494, 2495, 2496, 186, 1373, 2561, 186, 3259, 1653,
	2179, 2554, 2555, 3216, 3217, 1235, 1615, 2678, 1605, 2567,
	1235, 96, 2875, 1819, 3036, 1235, 2623, 2030, 2178, 2841,
	2597, 2528, 2599, 2598, 1987, 1051, 2528, 2172, 1402, 1404,
	2681, 2270, 2273, 2274, 2275, 2271, 146, 2272, 2276, 1950,
	1951, 3182, 2650, 187, 2651, 110, 1235, 607, 607, 1232,
	1235, 1233, 1234, 2171, 1009, 1989, 2642, 109, 2170, 1054,
	2621, 1161, 2025, 187, 2654, 2865, 2307, 1232, 1959, 1233,
	1234, 1235, 1453, 606, 1451, 1452, 1232, 1450, 1233, 1234,
	1455, 2715, 607, 1235, 1454, 2683, 187, 2670, 2167, 2144,
	2673, 607, 2672, 2166, 2721, 1694, 1235, 607, 2165, 606,
	186, 2680, 1232, 1235, 1233, 1234, 603, 1232, 2277, 1233,
	1234, 2688, 184, 2622, 2685, 2686, 2736, 2687, 1442, 1419,
	2689, 2734, 2691, 2740, 2693, 2675, 2676, 1093, 564, 2163,
	2596, 2063, 570, 2159, 1277, 1689, 2499, 1232, 2294, 1233,
	1234, 854, 1232, 847, 1233, 1234, 1888, 1232, 2227, 1233,
	1234, 2533, 1399, 1395, 2158, 2766, 2511, 2513, 2244, 186,
	2516, 2509, 3091, 2932, 3167, 2304, 2154, 1396, 2760, 1415,
	2600, 2601, 2741, 2133, 1766, 1929, 2908, 2812, 1232, 2138,
	1233, 1234, 1232, 1715, 1233, 1234, 2127, 628, 186, 2755,
	2756, 627, 1893, 1894, 1398, 625, 1397, 2230, 2258, 2770,
	2763, 2785, 1238, 1232, 741, 1233, 1234, 186, 2217, 1428,
	186, 186, 186, 2269, 2267, 1232, 2775, 1233, 1234, 2266,
	606, 606, 2092, 2801, 2802, 1936, 2792, 2795, 1232, 2790,
	1233, 1234, 1399, 1395, 2786, 1232, 3212, 1233, 1234, 1931,
	2800, 1927, 2848, 2849, 2799, 2236, 636, 1396, 629, 621,
	2650, 2807, 2651, 187, 705, 2808, 704, 2806, 2649, 3196,
	2377, 2660, 2379, 2305, 606, 606, 606, 606, 2656, 1216,
	2869, 2870, 1392, 1393, 1398, 1391, 1397, 615, 1022, 2824,
	1763, 2826, 2270, 2273, 2274, 2275, 2271, 3041, 2272, 2276,
	607, 3115, 2788, 2789, 2109, 2701, 1390, 1777, 1778, 3122,
	2631, 2859, 2612, 2353, 2017, 63, 41, 3086, 3155, 607,
	607, 703, 607, 700, 607, 607, 2910, 607, 607, 607,
	607, 607, 607, 1751, 2911, 1751, 2912, 1749, 2475, 1749,
	2476, 2871, 3138, 3139, 607, 699, 187, 3140, 1805, 610,
	3233, 1207, 841, 32, 31, 30, 29, 28, 23, 22,
	21, 20, 19, 25, 18, 17, 187, 2887, 186, 16,
	2634, 3254, 3296, 115, 50, 47, 45, 123, 122, 607,
	48, 187, 44, 1136, 42, 2884, 27, 26, 15, 14,
	13, 12, 606, 11, 606, 607, 10, 187, 9, 5,
	2927, 4, 2906, 35, 2896, 2897, 34, 33, 1210, 24,
	2956, 2, 2340, 187, 2019, 1751, 0, 0, 0, 1749,
	187, 0, 2948, 0, 0, 0, 0, 0, 37, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 607, 2950,
	2818, 2819, 0, 0, 2928, 2937, 0, 2936, 0, 2952,
	0, 0, 607, 607, 0, 2946, 606, 2944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	187, 2531, 606, 2957, 2958, 2531, 0, 0, 3014, 0,
	2960, 0, 0, 0, 0, 606, 0, 0, 2456, 0,
	2456, 0, 2852, 0, 0, 0, 2856, 2857, 2858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 3038, 3056, 3057, 1772, 3060, 607, 3012,
	3011, 2882, 1751, 3010, 0, 3031, 1749, 3026, 0, 0,
	0, 1813, 606, 607, 3030, 0, 606, 606, 0, 0,
	0, 0, 0, 0, 3018, 0, 0, 0, 2528, 607,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	3063, 0, 3061, 0, 3066, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3084, 3102, 3081, 3082,
	0, 1402, 1874, 0, 0, 0, 0, 3083, 0, 182,
	0, 0, 0, 0, 3099, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3090, 606, 3101, 0,
	0, 3105, 0, 121, 0, 1898, 0, 0, 0, 187,
	0, 0, 186, 0, 607, 0, 164, 0, 0, 3107,
	2531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	606, 186, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 3126, 0, 0, 607, 0, 3123, 0, 2301,
	187, 0, 187, 37, 187, 187, 607, 3121, 0, 607,
	3118, 0, 0, 0, 161, 0, 162, 0, 0, 606,
	607, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3114, 606, 3021, 3022, 3023, 3144, 181, 0, 3145, 0,
	0, 0, 0, 0, 0, 0, 0, 2001, 0, 0,
	0, 0, 0, 0, 0, 606, 606, 3153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3143, 0, 3160,
	0, 3168, 0, 0, 0, 607, 182, 37, 3170, 0,
	606, 0, 3198, 3038, 3183, 3181, 3173, 3178, 3197, 3175,
	0, 3165, 3174, 3191, 186, 606, 3172, 3177, 3176, 0,
	121, 0, 607, 0, 0, 0, 0, 0, 607, 3208,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 3229, 0, 3219, 3224, 3211, 0, 0, 0,
	0, 0, 0, 3239, 0, 3198, 0, 0, 0, 0,
	606, 3197, 3236, 0, 0, 0, 0, 165, 0, 0,
	1280, 0, 0, 0, 0, 607, 171, 0, 0, 0,
	607, 3248, 606, 3253, 607, 607, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 0, 0, 0, 0, 0,
	606, 0, 606, 3268, 3266, 0, 3280, 0, 0, 0,
	2528, 1751, 0, 181, 3276, 1749, 3283, 3277, 0, 0,
	3281, 0, 187, 3279, 0, 0, 0, 0, 0, 187,
	3292, 0, 3198, 0, 0, 0, 187, 187, 3197, 3304,
	187, 0, 187, 3298, 0, 3306, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 3314, 0, 0, 0, 0, 1751, 3316, 3317,
	3057, 1749, 3315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 607, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2122, 0, 0, 0, 2126,
	0, 0, 2128, 2129, 165, 0, 0, 0, 0, 0,
	0, 2137, 0, 171, 0, 2139, 2140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2146, 2147, 2148, 2149, 2150, 0, 2152, 0,
	0, 0, 0, 2155, 2156, 0, 2157, 0, 0, 2160,
	0, 2161, 0, 0, 0, 2164, 0, 0, 0, 0,
	0, 0, 0, 2173, 2174, 2175, 2176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2187, 0, 2190, 2191,
	0, 0, 0, 0, 0, 2193, 2195, 0, 0, 0,
	0, 0, 0, 2200, 2201, 2202, 2203, 2204, 0, 0,
	0, 0, 0, 0, 0, 1898, 0, 2212, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2224, 157, 0,
	156, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 607, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 187, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	607, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 1470, 0, 0, 0, 607, 0, 0,
	0, 559, 0, 0, 607, 619, 0, 0, 0, 0,
	0, 609, 0, 607, 0, 0, 0, 0, 0, 802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 833, 0, 0,
	0, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1017, 0, 0, 187, 187, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 187,
	0, 0, 176, 178, 179, 180, 2441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1458, 0, 0, 2483, 2484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 2534, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 607, 0, 0, 0, 1471, 0,
	0, 2552, 2553, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 607, 607, 0, 187, 187,
	187, 187, 187, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 187, 0, 0, 187, 0,
	187, 0, 0, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1484, 1487, 1488, 1489,
	1490, 1491, 1492, 0, 1493, 1494, 1495, 1496, 1497, 1472,
	1473, 1474, 1475, 1456, 1457, 1485, 0, 1459, 0, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 187, 0,
	1469, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 0,
	0, 607, 0, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 2679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 187,
	2694, 2695, 2696, 2698, 2700, 0, 0, 0, 0, 0,
	0, 0, 2707, 0, 0, 0, 0, 2711, 2712, 2713,
	2714, 0, 0, 0, 0, 2717, 0, 0, 0, 0,
	0, 2719, 0, 0, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 0, 0, 0, 0, 0, 0,
	0, 0, 2739, 0, 0, 0, 0, 2743, 0, 2744,
	2746, 0, 2749, 2751, 0, 0, 0, 0, 0, 2757,
	0, 0, 1486, 0, 0, 607, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 607, 187, 0, 2779, 2780, 0, 0, 2784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2796, 2797, 0, 0,
	78, 39, 40, 80, 1137, 0, 1143, 0, 0, 1145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	84, 0, 0, 0, 43, 69, 70, 0, 67, 71,
	0, 187, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1236, 0,
	187, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 187,
	0, 0, 187, 187, 187, 0, 2863, 1286, 0, 0,
	0, 0, 607, 607, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2883, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 607, 607, 607, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2894, 0, 0, 0, 0, 2895, 0, 0,
	0, 0, 0, 2899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2907, 0, 0, 0, 0,
	0, 0, 0, 2914, 0, 0, 619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 46, 49, 52, 51, 54, 0,
	66, 0, 0, 75, 72, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 83, 82, 0,
	0, 64, 65, 53, 607, 0, 607, 0, 0, 73,
	74, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1417, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1430, 0, 0, 748, 79, 0, 0, 0, 57,
	58, 3027, 59, 60, 61, 62, 0, 0, 0, 0,
	3034, 0, 0, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 3044, 3045, 3046,
	0, 187, 3048, 3049, 607, 0, 0, 0, 3052, 0,
	3053, 0, 3055, 3058, 0, 0, 0, 607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3067, 3069,
	3070, 3072, 3074, 3076, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 607, 0, 0, 0, 607, 607,
	0, 3106, 0, 0, 0, 0, 0, 0, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 607, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1448, 1505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 607,
	0, 0, 0, 3128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 3134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 187, 0, 0, 0, 3150, 0, 0,
	0, 0, 0, 3151, 3152, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1585, 0, 0, 0, 3163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 607, 3190, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1655, 0, 3200, 3202,
	3204, 0, 0, 0, 0, 0, 0, 607, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 0, 3232, 0, 1666, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 1677, 1678, 1679, 1680,
	1681, 1682, 1683, 3238, 0, 0, 187, 607, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 0, 0, 0, 1710,
	1711, 1712, 1713, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 0, 3271, 3273, 3275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 607, 0, 0, 0, 0, 0,
	0, 0, 1755, 1756, 0, 0, 0, 1758, 3295, 0,
	0, 1762, 607, 0, 607, 0, 1770, 0, 0, 0,
	0, 0, 0, 0, 0, 3308, 3309, 1799, 1800, 1801,
	1802, 1803, 1804, 1806, 1810, 1811, 1812, 0, 1814, 1815,
	1816, 619, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839,
	1840, 1841, 1842, 1843, 1844, 0, 1846, 0, 1852, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 1867, 1868, 1869, 1870, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 619,
	0, 0, 0, 0, 0, 619, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1910, 1911, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1916, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 0, 1923, 0, 1947,
	1703, 0, 0, 0, 0, 0, 1196, 0, 1196, 1196,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 1273, 1274, 1275, 0, 1278, 1985, 1279,
	1281, 1282, 1283, 1284, 0, 1287, 1288, 1290, 1290, 0,
	1290, 1294, 1294, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 0,
	0, 1342, 0, 1344, 1345, 1346, 1347, 1348, 0, 0,
	0, 0, 1294, 1294, 1294, 1294, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1354, 1355, 1356, 1357,
	1358, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 0, 0,
	0, 0, 0, 0, 2074, 0, 0, 0, 0, 0,
	0, 2088, 2089, 0, 0, 2093, 0, 1377, 0, 0,
	0, 0, 0, 812, 2096, 0, 0, 812, 0, 0,
	0, 2099, 0, 812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 706, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2136, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	182, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 2346, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1286, 121, 161, 143, 162, 0, 0,
	0, 0, 0, 0, 605, 0, 0, 164, 0, 0,
	0, 0, 0, 130, 131, 153, 152, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 855, 0, 0, 1013, 0, 1020, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1526, 1527, 153, 152, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 128, 150, 135,
	127, 0, 148, 149, 0, 0, 0, 0, 165, 0,
	0, 0, 2285, 0, 0, 0, 0, 171, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 137, 132, 133, 134, 138, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 1528, 150, 0,
	1525, 0, 148, 149, 0, 0, 0, 0, 165, 0,
	0, 2333, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1196, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1196, 1196, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2382, 2383, 2384,
	2385, 2386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1703, 2395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2407,
	0, 0, 0, 0, 2403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 619, 0, 0, 2431, 2432,
	0, 0, 0, 2435, 156, 0, 2437, 0, 0, 2438,
	2439, 2440, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 2445, 2446, 0, 0, 0, 2447, 2448, 0, 0,
	1822, 2450, 0, 2451, 2452, 0, 0, 0, 2459, 2460,
	0, 0, 0, 0, 0, 0, 1822, 1822, 1822, 1822,
	1822, 619, 619, 619, 619, 0, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2487, 2488, 2489, 2490, 2491, 2492, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2523, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2556, 0, 0, 0, 1930, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 0, 0, 176, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 2618, 2608, 855, 0, 855, 855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1021, 0, 0,
	0, 1206, 1208, 0, 0, 0, 0, 0, 0, 2646,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 2655, 0, 0, 176, 178, 179, 180,
	1021, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2671, 0, 0, 2674, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	121, 0, 143, 0, 2703, 0, 0, 0, 0, 0,
	0, 0, 2710, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 154, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 161, 0, 162, 0, 0, 0, 2759, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1526,
	1527, 153, 152, 181, 0, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 1380, 0,
	0, 0, 2226, 0, 0, 750, 751, 0, 0, 2111,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1423, 0, 0, 2822, 0, 0, 0, 0,
	0, 855, 0, 0, 0, 0, 0, 1443, 0, 0,
	0, 0, 0, 2844, 2837, 0, 0, 2838, 2839, 2840,
	0, 0, 147, 1528, 150, 0, 1525, 0, 148, 149,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 2868, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 0,
	0, 0, 0, 0, 0, 2885, 0, 2886, 0, 0,
	0, 0, 2889, 2890, 2891, 0, 0, 0, 0, 0,
	0, 0, 0, 2198, 0, 0, 0, 0, 2898, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2222, 0, 0,
	2915, 0, 0, 2916, 0, 2917, 2918, 0, 2919, 0,
	2920, 0, 0, 0, 0, 812, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2945, 2262, 2263, 0, 0,
	0, 0, 0, 0, 0, 2282, 2953, 2283, 2284, 2955,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1013, 0, 0, 2959, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1366, 0, 0, 0, 0, 0, 1551,
	1551, 3007, 1551, 0, 1551, 1551, 0, 1560, 1551, 1551,
	1551, 1551, 1551, 0, 0, 0, 0, 0, 151, 0,
	1366, 0, 0, 1366, 1013, 1366, 0, 0, 0, 0,
	0, 0, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1628,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1650, 2360, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 560, 0, 0, 601,
	0, 0, 0, 0, 0, 157, 560, 0, 0, 0,
	0, 0, 169, 0, 560, 0, 0, 0, 3089, 619,
	0, 0, 0, 0, 0, 0, 0, 0, 855, 822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 855, 855, 0, 840, 0, 840, 0, 0,
	0, 0, 0, 0, 177, 560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 0, 619, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1759, 0, 0, 0, 0, 0, 0,
	1366, 0, 0, 0, 2472, 3132, 0, 0, 3127, 1775,
	1776, 0, 3133, 0, 0, 0, 0, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 3146, 0, 0, 3147,
	0, 3148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1930, 0, 0, 0, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 619, 2532, 0, 79, 0, 0,
	1930, 1930, 1930, 1930, 1930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1890, 0, 0, 2282, 812, 0,
	0, 0, 1930, 0, 0, 1930, 2962, 2964, 2963, 2978,
	2979, 2980, 2981, 2982, 2983, 2984, 660, 0, 0, 0,
	0, 1902, 0, 0, 0, 0, 0, 3230, 0, 0,
	0, 0, 0, 0, 0, 1423, 0, 0, 855, 0,
	0, 0, 0, 0, 0, 0, 855, 0, 0, 855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3245,
	1013, 3246, 0, 3247, 0, 0, 0, 0, 2640, 750,
	751, 0, 0, 0, 0, 1750, 0, 0, 2648, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2682, 0,
	3293, 0, 3294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1013, 0, 0, 0, 0, 0, 1020, 0,
	0, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 0, 0, 1013, 0, 0, 0, 0,
	1745, 0, 0, 0, 1745, 1745, 0, 0, 0, 0,
=======
const yyLast = 46071

var yyAct = [...]int{
	731, 2890, 2891, 3287, 740, 2889, 3091, 734, 3275, 3180,
	733, 3245, 639, 3244, 3201, 2442, 2861, 2722, 1440, 1934,
	2648, 3144, 1888, 3167, 620, 2554, 2561, 1868, 3075, 3024,
	3, 2602, 2611, 2513, 2154, 2616, 2613, 709, 37, 3073,
	1361, 1192, 2174, 626, 2918, 2848, 2612, 2610, 2615, 2614,
	2516, 186, 2202, 1870, 186, 3063, 586, 186, 710, 2631,
	2461, 801, 602, 2569, 186, 2004, 622, 2517, 823, 1398,
	2630, 2514, 186, 2756, 2750, 2441, 2923, 2399, 2242, 2440,
	708, 707, 650, 2633, 2776, 2511, 2265, 186, 1908, 2501,
	2229, 2303, 2742, 2653, 1494, 1892, 2382, 1967, 618, 2335,
	2304, 1992, 1972, 2305, 2035, 850, 619, 1923, 614, 602,
	824, 2254, 602, 186, 602, 805, 1005, 809, 36, 1913,
	803, 1541, 2221, 1140, 155, 1385, 1808, 38, 2204, 1743,
	1841, 2374, 2235, 1075, 1912, 826, 1169, 1834, 1991, 1733,
	1691, 2013, 2297, 1974, 1033, 1429, 141, 1051, 95, 1900,
	847, 2052, 1038, 2272, 1407, 631, 91, 1807, 96, 1278,
	1915, 1523, 1365, 1756, 1211, 1710, 1638, 1530, 1012, 1989,
	1642, 1009, 1622, 1044, 1013, 1039, 1963, 1040, 1428, 1412,
	1426, 815, 1647, 1804, 1190, 1243, 1185, 1515, 1041, 1489,
	124, 125, 1124, 837, 98, 813, 1860, 97, 810, 609,
	89, 76, 1282, 159, 119, 117, 118, 811, 3100, 2328,
	3276, 2006, 2007, 2008, 3129, 2849, 2599, 2006, 2326, 1286,
	2050, 85, 1893, 2358, 2357, 812, 77, 589, 1607, 8,
	7, 2841, 831, 90, 836, 2804, 126, 87, 6, 3228,
	3130, 87, 188, 189, 190, 2390, 2391, 817, 2894, 3124,
	3125, 120, 746, 747, 748, 87, 1865, 1866, 1698, 1844,
	1212, 746, 747, 748, 1006, 610, 2621, 1697, 1031, 1713,
	1696, 1080, 1695, 1694, 802, 1693, 1055, 1077, 558, 804,
	188, 189, 190, 1680, 612, 589, 613, 1685, 818, 844,
	1094, 1095, 1096, 1212, 1099, 1100, 1101, 1102, 1088, 3181,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1054, 102, 825,
	120, 1029, 1028, 1027, 2619, 2200, 2497, 575, 2894, 3222,
	2711, 851, 2348, 2893, 2039, 2231, 1081, 1084, 1085, 3248,
	3125, 2465, 3298, 1030, 1017, 3243, 2625, 3232, 2621, 3266,
	3230, 2727, 1022, 2726, 2037, 2351, 3076, 2175, 2670, 104,
	105, 2618, 108, 1703, 3020, 114, 589, 1222, 183, 3019,
	1079, 553, 1078, 3231, 3187, 574, 3229, 2854, 2038, 3279,
	2855, 3295, 1097, 3187, 3177, 1392, 3119, 572, 120, 78,
	87, 797, 798, 799, 800, 3257, 182, 808, 2094, 2862,
	1222, 3168, 2032, 3176, 2398, 78, 2619, 2331, 1896, 78,
	3118, 3206, 2688, 2893, 1504, 1983, 2551, 2552, 2201, 2366,
	121, 3211, 143, 2365, 3105, 839, 840, 569, 2625, 2245,
	590, 1127, 2550, 164, 1867, 3209, 584, 1430, 2936, 1431,
	1977, 1929, 1930, 2389, 3215, 3216, 2091, 1928, 1188, 1244,
	1159, 580, 2571, 2572, 2246, 2281, 795, 2622, 2280, 3210,
	1176, 2282, 1178, 2092, 154, 1021, 1218, 87, 1023, 1210,
	142, 3029, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253,
	1252, 1254, 1255, 87, 794, 2329, 78, 87, 590, 80,
	1147, 161, 1147, 162, 3092, 1148, 1160, 1148, 2293, 1218,
	1175, 1177, 2427, 1146, 1026, 1145, 1133, 1134, 3249, 1517,
	1518, 153, 152, 181, 1153, 1686, 1687, 1688, 2650, 2753,
	559, 2678, 561, 576, 589, 592, 589, 591, 565, 3250,
	563, 567, 577, 568, 600, 562, 1123, 573, 1136, 2622,
	564, 578, 579, 582, 596, 595, 583, 581, 2676, 571,
	593, 1164, 1165, 186, 1187, 186, 1947, 1946, 186, 2570,
	2238, 2239, 1024, 1684, 87, 1026, 589, 1018, 1896, 590,
	604, 2573, 598, 2654, 1020, 1019, 1180, 1628, 2375, 1369,
	2336, 1161, 1976, 1026, 1122, 2014, 2361, 602, 602, 602,
	2058, 3278, 1894, 1895, 1597, 2053, 2643, 1173, 3052, 1154,
	3053, 1174, 1623, 2651, 2644, 602, 602, 1098, 1162, 1163,
	1168, 1179, 147, 1519, 150, 1182, 1516, 2843, 148, 149,
	1129, 2377, 3223, 1024, 165, 2064, 2061, 2063, 2062, 2065,
	2066, 2842, 2073, 171, 1172, 1104, 1103, 1204, 1598, 2070,
	1599, 2071, 2652, 2072, 37, 2059, 1166, 2057, 1126, 2055,
	3004, 2839, 1261, 1262, 1263, 1264, 1167, 2464, 2017, 1034,
	2428, 1064, 1269, 1035, 1062, 1273, 1217, 1214, 1215, 1216,
	1221, 1223, 1220, 2898, 1219, 1909, 1035, 1073, 1072, 1025,
	1071, 1070, 1069, 1143, 1213, 1149, 1150, 1151, 1152, 2056,
	1068, 1067, 1032, 1066, 1061, 1372, 3099, 2327, 1508, 1217,
	1214, 1215, 1216, 1221, 1223, 1220, 1074, 1219, 1258, 1189,
	2573, 1258, 3299, 1529, 1010, 3255, 1183, 1213, 1010, 1047,
	2295, 3291, 2092, 1046, 1010, 1639, 3183, 590, 1008, 590,
	594, 1083, 2036, 1990, 2381, 3183, 1157, 1046, 2205, 2207,
	1025, 1082, 743, 1125, 2363, 838, 743, 3182, 2378, 2043,
	156, 587, 1894, 1895, 2042, 1635, 3182, 1198, 1025, 1091,
	743, 2592, 1053, 2360, 2838, 1502, 588, 2330, 1501, 590,
	2346, 1181, 1194, 1195, 1500, 1636, 1498, 557, 1053, 552,
	1359, 2034, 2373, 1629, 1354, 2372, 3088, 1630, 1631, 1265,
	2791, 3030, 2772, 2394, 2277, 186, 2106, 2241, 2892, 602,
	602, 1609, 1608, 1610, 1611, 1612, 2754, 1065, 2802, 2803,
	1063, 2185, 1053, 1090, 3117, 186, 2236, 1980, 1259, 1260,
	1528, 1859, 2623, 2624, 1416, 1334, 1627, 151, 2350, 1138,
	116, 1935, 77, 1258, 602, 2627, 1207, 1205, 186, 1255,
	1375, 2549, 820, 602, 1379, 1206, 3214, 1186, 3113, 602,
	805, 1170, 1284, 1053, 1285, 2093, 1142, 1981, 1648, 111,
	86, 1360, 1076, 1052, 1053, 1979, 1376, 2419, 144, 2834,
	1373, 145, 2349, 1288, 2766, 2054, 86, 1632, 2892, 1052,
	86, 1432, 1208, 2384, 847, 1046, 1049, 1050, 2383, 1010,
	3213, 1757, 2319, 1043, 1047, 2384, 1144, 3258, 1132, 1982,
	2383, 157, 2206, 1227, 2623, 2624, 1135, 2031, 169, 1978,
	1757, 2932, 2121, 1052, 1042, 81, 1377, 2627, 1056, 1046,
	95, 2809, 1053, 1058, 2808, 1360, 1378, 1059, 1057, 112,
	96, 1340, 1341, 1342, 1343, 1344, 1156, 3289, 1226, 1227,
	3290, 2021, 3288, 2400, 1538, 1537, 1527, 1158, 1060, 2029,
	177, 1064, 1062, 1417, 1052, 1366, 3300, 86, 2026, 3251,
	1046, 1049, 1050, 3146, 1010, 1052, 98, 2026, 1043, 1047,
	1056, 1046, 1624, 2033, 1625, 1058, 2792, 1626, 1228, 1059,
	1057, 1427, 158, 163, 160, 166, 167, 168, 170, 172,
	173, 174, 175, 1363, 1617, 2030, 1171, 1141, 176, 178,
	179, 180, 802, 1649, 2028, 186, 3147, 1394, 3081, 1490,
	1397, 2098, 2099, 2100, 804, 1128, 746, 747, 748, 1499,
	3252, 1392, 1228, 1052, 1374, 1089, 2402, 1615, 1762, 1086,
	3293, 1715, 1763, 1422, 1423, 1250, 1251, 1253, 1252, 1254,
	1255, 3301, 602, 3012, 1525, 1716, 1256, 1257, 1714, 3011,
	1604, 3082, 1534, 2868, 3002, 2869, 1536, 2881, 1616, 1539,
	1540, 602, 602, 2880, 602, 851, 602, 602, 2816, 602,
	602, 602, 602, 602, 602, 1248, 1249, 1250, 1251, 1253,
	1252, 1254, 1255, 1571, 1572, 1228, 602, 2815, 186, 1577,
	842, 1614, 2412, 2411, 2410, 2404, 2805, 2408, 1535, 2403,
	2600, 2401, 2588, 1705, 1707, 1708, 2406, 1228, 186, 2301,
	1225, 2300, 1226, 1227, 1603, 2405, 1986, 1244, 1618, 2393,
	1602, 602, 1601, 186, 1405, 1570, 1380, 1706, 1573, 1600,
	1575, 1590, 2407, 2409, 1637, 1584, 1581, 602, 1580, 186,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1252, 1254,
	1255, 1579, 1550, 3108, 1225, 186, 1226, 1227, 1521, 3107,
	1228, 1592, 186, 2421, 1505, 1506, 1507, 3085, 3262, 1392,
	2117, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	602, 602, 602, 1543, 1514, 1544, 3084, 1546, 1548, 3083,
	1404, 1552, 1554, 1556, 1558, 1560, 2647, 1531, 1531, 188,
	189, 190, 1574, 2799, 188, 189, 190, 1401, 2284, 1497,
	3007, 186, 1228, 1533, 2992, 2991, 2931, 1225, 1532, 1226,
	1227, 2929, 2876, 1244, 1511, 2813, 2798, 1512, 1510, 2655,
	2591, 1582, 1583, 1524, 2590, 1901, 1902, 1588, 1589, 1225,
	1228, 1226, 1227, 2116, 1644, 2143, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1253, 1252, 1254, 1255, 1402, 2310, 602,
	188, 189, 190, 2298, 1740, 1740, 1356, 1719, 2048, 2047,
	1738, 1738, 1746, 1891, 602, 1737, 1741, 1652, 1873, 1681,
	1645, 1613, 1650, 1651, 1656, 1605, 1658, 1659, 1660, 1661,
	602, 602, 1225, 1665, 1226, 1227, 1655, 1595, 1711, 1591,
	1587, 1197, 1640, 1662, 1663, 1664, 1586, 1679, 1585, 1228,
	1359, 1403, 1184, 2111, 1578, 1232, 1233, 1234, 1235, 1236,
	1237, 1238, 1230, 2110, 1758, 1392, 2141, 2227, 3277, 1228,
	1709, 1837, 120, 1029, 1028, 1027, 1224, 1392, 1654, 1228,
	1799, 1503, 3038, 1228, 1225, 1805, 1226, 1227, 1718, 3037,
	1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
	1730, 1731, 1732, 2996, 1675, 1676, 1677, 2995, 186, 1678,
	3239, 1392, 1225, 602, 1226, 1227, 1845, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1253, 1252, 1254, 1255, 188, 189,
	190, 1360, 3260, 1392, 1836, 1712, 92, 186, 1838, 2860,
	602, 2227, 3174, 1862, 2227, 3154, 94, 93, 1801, 1805,
	186, 1835, 3193, 1392, 602, 741, 188, 189, 190, 186,
	2002, 186, 2155, 186, 186, 602, 1717, 1392, 602, 1246,
	1247, 1248, 1249, 1250, 1251, 1253, 1252, 1254, 1255, 602,
	1847, 1225, 2337, 1226, 1227, 1878, 2544, 1879, 188, 189,
	190, 2243, 2000, 188, 189, 190, 2092, 1998, 1845, 2315,
	1944, 1225, 1392, 1226, 1227, 1392, 847, 1849, 1850, 847,
	95, 1225, 100, 1226, 1227, 1225, 101, 1226, 1227, 1943,
	96, 2765, 101, 1228, 2227, 3150, 1224, 100, 1228, 99,
	95, 2250, 1228, 100, 602, 99, 2767, 1228, 94, 2512,
	96, 1993, 1994, 1995, 3142, 1846, 1997, 1999, 2001, 1911,
	2765, 1884, 3137, 1392, 2227, 3101, 3112, 1228, 2852, 3098,
	2243, 602, 1847, 2251, 1228, 2227, 1742, 602, 1534, 2707,
	1392, 1534, 2027, 1534, 1749, 1750, 3015, 1392, 2251, 2025,
	1948, 2107, 1949, 1950, 1951, 1952, 2251, 1953, 1954, 1955,
	1956, 817, 1872, 2227, 3003, 1939, 87, 1392, 1959, 1960,
	1961, 1962, 1938, 1392, 1921, 2731, 3191, 1392, 2852, 1392,
	1228, 3189, 1392, 2707, 602, 3061, 1392, 1228, 1886, 602,
	3059, 1392, 2015, 602, 602, 1228, 1969, 1906, 2227, 2850,
	2026, 1942, 2765, 1904, 1975, 1848, 1228, 2579, 1851, 1852,
	3056, 1392, 1228, 2685, 1926, 1925, 2485, 3042, 1392, 2026,
	1392, 2770, 1392, 1927, 1941, 1225, 1940, 1226, 1227, 2107,
	1225, 186, 1226, 1227, 1225, 2148, 1226, 1227, 186, 1225,
	1228, 1226, 1227, 1224, 1392, 186, 186, 2012, 2128, 186,
	2127, 186, 1883, 2026, 1985, 2148, 1392, 851, 186, 1225,
	851, 1226, 1227, 2739, 1392, 186, 1225, 2009, 1226, 1227,
	3034, 1970, 1965, 1966, 2581, 2580, 1899, 1055, 1984, 1392,
	1988, 2577, 2578, 1996, 2603, 2577, 2576, 1531, 1396, 2736,
	1392, 2251, 1392, 186, 602, 2734, 1392, 2107, 1392, 2020,
	2040, 1863, 2023, 1689, 2024, 2019, 1970, 2022, 2018, 2092,
	2359, 1634, 1225, 1424, 1226, 1227, 1493, 2340, 1054, 1225,
	1037, 1226, 1227, 2700, 1392, 1036, 2041, 1225, 2044, 1226,
	1227, 3219, 2045, 2046, 1244, 2333, 2334, 1240, 1225, 1241,
	1226, 1227, 3157, 1228, 1225, 3026, 1226, 1227, 1787, 1228,
	1399, 2103, 807, 1242, 1256, 1257, 1239, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1253, 1252, 1254, 1255, 2227, 2226,
	2993, 2051, 1225, 1228, 1226, 1227, 1244, 2943, 2105, 1493,
	1492, 1438, 1437, 1711, 2083, 2084, 2833, 2830, 1228, 2086,
	2811, 1244, 2695, 2694, 1495, 2273, 2273, 1968, 2087, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1253, 1252, 1254, 1255,
	2645, 2605, 2601, 2076, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1253, 1252, 1254, 1255, 2649, 2683, 1392, 1228, 2341,
	87, 2307, 2102, 3253, 2104, 1779, 1768, 1769, 1770, 1771,
	1781, 1772, 1773, 1774, 1786, 1782, 1775, 1776, 1783, 1784,
	1785, 1777, 1778, 1780, 1964, 1228, 2180, 1392, 2274, 2274,
	1958, 1228, 2817, 1957, 2090, 2139, 1391, 1228, 2276, 2092,
	732, 2163, 1392, 1620, 186, 1225, 1228, 1226, 1227, 2223,
	1712, 1225, 186, 1226, 1227, 1566, 1526, 602, 1522, 1740,
	2101, 1228, 92, 602, 94, 1738, 1491, 113, 1127, 94,
	2211, 3272, 2306, 93, 602, 1225, 2821, 1226, 1227, 2215,
	3027, 2197, 3096, 2818, 2819, 2820, 2777, 2778, 1983, 1876,
	1225, 187, 1226, 1227, 187, 1228, 3270, 187, 186, 2120,
	3225, 186, 603, 3175, 187, 2209, 1567, 1568, 1569, 1392,
	3246, 1890, 187, 3123, 182, 3000, 2283, 1228, 2783, 2247,
	2307, 2835, 2107, 2822, 2823, 2824, 37, 187, 1392, 2786,
	1225, 3047, 1226, 1227, 2137, 2267, 1228, 2780, 121, 1562,
	2597, 2596, 2595, 2512, 2741, 1847, 2320, 2077, 1682, 603,
	2534, 164, 603, 187, 603, 2535, 2532, 1225, 2782, 1226,
	1227, 2533, 2531, 1225, 602, 1226, 1227, 2228, 1228, 1225,
	186, 1226, 1227, 1400, 1882, 2530, 2771, 186, 1225, 2302,
	1226, 1227, 2490, 2913, 1228, 2912, 1563, 1564, 1565, 2131,
	2224, 602, 2118, 1225, 2286, 1226, 1227, 1228, 602, 2489,
	2737, 3080, 1534, 1534, 1366, 2922, 2199, 602, 2237, 161,
	1846, 162, 2536, 2332, 2260, 2261, 2266, 2924, 1228, 2709,
	2220, 2761, 2499, 2225, 2355, 2294, 2296, 1225, 1633, 1226,
	1227, 181, 2575, 2911, 2240, 2758, 186, 186, 186, 186,
	186, 2271, 2287, 2757, 2356, 2502, 2504, 793, 2291, 1225,
	2311, 1226, 1227, 2278, 2505, 1975, 2275, 186, 186, 1093,
	1092, 2285, 1753, 2663, 1390, 1386, 2354, 2705, 1225, 1196,
	1226, 1227, 2288, 186, 2347, 2306, 1754, 1228, 821, 1387,
	2692, 2299, 2182, 2183, 1390, 1386, 822, 2387, 121, 1228,
	2309, 94, 602, 1228, 2763, 2312, 2313, 2308, 2109, 1387,
	1225, 2691, 1226, 1227, 1880, 1881, 1389, 3285, 1388, 1901,
	1902, 2396, 2321, 2322, 2323, 3198, 1225, 2316, 1226, 1227,
	2317, 2353, 602, 2593, 1383, 1384, 1389, 2080, 1388, 1225,
	92, 1226, 1227, 2743, 2415, 3097, 1514, 94, 1740, 3022,
	1740, 93, 165, 1740, 1738, 2574, 1738, 92, 1740, 1738,
	1225, 171, 1226, 1227, 1738, 2264, 602, 1887, 93, 1837,
	2418, 1837, 2352, 2342, 2343, 1228, 602, 2488, 2413, 829,
	830, 2069, 2690, 2068, 2067, 2487, 2196, 2443, 2096, 2443,
	2376, 3068, 2443, 99, 2395, 101, 3067, 2443, 3050, 602,
	2455, 2456, 2457, 2458, 1228, 2930, 100, 2379, 99, 2385,
	2466, 2928, 2386, 2927, 186, 2920, 2831, 2473, 602, 1225,
	2762, 1226, 1227, 2760, 2448, 2445, 2606, 2397, 2010, 2449,
	2468, 1225, 602, 1226, 1227, 1225, 1509, 1226, 1227, 602,
	602, 2414, 186, 186, 186, 186, 186, 828, 100, 1835,
	2919, 1835, 1228, 2751, 186, 2243, 3274, 3273, 2195, 186,
	2902, 186, 3273, 186, 101, 2436, 186, 186, 186, 101,
	2223, 2431, 2429, 2473, 2524, 100, 809, 99, 156, 2515,
	100, 2129, 1874, 1418, 2515, 1409, 94, 2194, 2543, 3274,
	2492, 3086, 1228, 106, 107, 2518, 1379, 2797, 819, 103,
	2493, 2509, 2589, 88, 1, 2472, 2467, 1225, 2469, 1226,
	1227, 186, 2450, 2451, 2452, 2453, 2454, 1228, 2801, 3208,
	2484, 570, 2480, 1864, 602, 1364, 585, 3247, 3204, 3205,
	1606, 1596, 602, 2491, 2863, 2193, 1225, 186, 1226, 1227,
	2494, 1806, 3023, 2481, 2482, 2483, 2609, 2016, 2829, 2545,
	1973, 186, 2546, 1045, 2629, 2506, 2507, 810, 146, 1936,
	1937, 2523, 2526, 2527, 2537, 2529, 811, 3170, 95, 186,
	2608, 1228, 186, 1644, 2547, 2192, 2525, 2541, 96, 2528,
	110, 1003, 2664, 109, 1225, 1048, 1226, 1227, 1155, 1228,
	2011, 2853, 2292, 1945, 1444, 1442, 2585, 2583, 2584, 1443,
	2191, 2553, 1441, 187, 1228, 187, 1446, 1445, 187, 2667,
	2669, 2130, 2710, 1228, 1683, 599, 2263, 184, 1433, 2636,
	2637, 1410, 2723, 1087, 1225, 560, 1226, 1227, 2582, 157,
	2586, 2587, 1975, 2628, 2049, 566, 169, 603, 603, 603,
	2607, 1270, 2640, 2486, 2279, 848, 841, 1228, 1875, 1225,
	602, 1226, 1227, 2213, 2178, 603, 603, 2520, 2755, 2498,
	2656, 2500, 2659, 2704, 2230, 2503, 2658, 1228, 2496, 3079,
	2921, 3155, 2172, 1228, 2289, 1406, 602, 186, 177, 2730,
	2119, 1755, 2666, 1916, 2897, 2671, 2672, 2171, 2673, 1704,
	624, 2675, 2674, 2677, 2725, 2679, 2170, 623, 621, 2661,
	2662, 2729, 2216, 1225, 2244, 1226, 1227, 1231, 735, 2203,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 1225, 1419, 1226, 1227, 2255, 176, 178, 179, 180,
	2169, 2253, 2252, 2078, 1228, 186, 1225, 1922, 1226, 1227,
	2779, 1228, 2775, 3200, 1918, 1225, 1914, 1226, 1227, 2222,
	2168, 1228, 632, 2800, 625, 1228, 2167, 617, 699, 698,
	2749, 2794, 2635, 3184, 186, 2744, 2745, 2256, 2259, 2260,
	2261, 2257, 2362, 2258, 2262, 2646, 2364, 2752, 2290, 1225,
	2759, 1226, 1227, 186, 1228, 2642, 186, 186, 186, 2764,
	1209, 1228, 1382, 2774, 611, 1016, 602, 602, 2784, 1225,
	1752, 1226, 1227, 2781, 3028, 1225, 3103, 1226, 1227, 2095,
	2687, 1381, 1766, 1767, 2789, 2790, 3110, 2166, 2836, 2837,
	1228, 2788, 2787, 2617, 2165, 2847, 2598, 2557, 2636, 2637,
	2795, 2796, 2338, 2003, 2164, 63, 2857, 2858, 2158, 41,
	602, 602, 602, 602, 3074, 187, 3143, 697, 1228, 603,
	603, 694, 2899, 2900, 2901, 2462, 2463, 1393, 1395, 1228,
	3126, 3127, 2812, 693, 2814, 187, 1225, 2157, 1226, 1227,
	1228, 3128, 2558, 1225, 2156, 1226, 1227, 1794, 606, 3221,
	1200, 835, 32, 1225, 603, 1226, 1227, 1225, 187, 1226,
	1227, 2806, 2807, 603, 31, 30, 29, 28, 2560, 603,
	1740, 2859, 1740, 2153, 23, 22, 1738, 21, 1738, 20,
	19, 25, 2555, 18, 17, 1228, 1225, 16, 1226, 1227,
	2620, 3242, 3284, 1225, 115, 1226, 1227, 1228, 50, 2571,
	2572, 2152, 1228, 47, 45, 123, 2556, 186, 122, 2443,
	1228, 2443, 2151, 2840, 48, 1228, 2875, 2844, 2845, 2846,
	44, 1130, 1225, 2149, 1226, 1227, 42, 27, 2872, 26,
	15, 602, 14, 602, 2916, 2870, 13, 12, 11, 2562,
	10, 9, 5, 2886, 4, 2885, 35, 34, 33, 2895,
	1225, 1740, 1226, 1227, 1203, 24, 2, 1738, 2325, 2005,
	2937, 1225, 2945, 1226, 1227, 0, 0, 37, 2145, 2515,
	0, 0, 1225, 0, 1226, 1227, 0, 0, 0, 0,
	2144, 0, 2939, 0, 2917, 2142, 2518, 0, 0, 2926,
	2518, 2925, 0, 2124, 602, 2935, 2941, 2933, 2113, 0,
	0, 0, 0, 0, 0, 0, 2570, 186, 0, 0,
	602, 0, 0, 0, 0, 0, 3001, 1225, 2573, 1226,
	1227, 0, 0, 602, 2949, 187, 2946, 2947, 0, 1225,
	0, 1226, 1227, 0, 1225, 0, 1226, 1227, 0, 0,
	0, 0, 1225, 0, 1226, 1227, 0, 1225, 0, 1226,
	1227, 3044, 3045, 0, 0, 2997, 0, 2999, 3005, 1740,
	3013, 2998, 603, 0, 3025, 1738, 0, 0, 0, 0,
	3048, 602, 3018, 0, 3017, 602, 602, 0, 0, 0,
	0, 603, 603, 0, 603, 0, 603, 603, 0, 603,
	603, 603, 603, 603, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 0, 603, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3049,
	3051, 3078, 3072, 0, 3054, 0, 3090, 2559, 187, 3071,
	3069, 3070, 0, 0, 0, 3008, 3009, 3010, 0, 0,
	0, 603, 0, 187, 0, 0, 0, 3087, 0, 0,
	0, 0, 0, 0, 602, 2518, 0, 603, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 3093, 186,
	3089, 0, 0, 0, 0, 187, 3095, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 602, 186, 0,
	0, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	603, 603, 603, 0, 2256, 2259, 2260, 2261, 2257, 3114,
	2258, 2262, 0, 3111, 2777, 2778, 0, 0, 0, 0,
	37, 3109, 3106, 3102, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 602, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 602,
	0, 3131, 0, 0, 3132, 0, 0, 3133, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3141, 602, 602, 0, 0, 0, 0, 603,
	3148, 2563, 0, 0, 0, 2567, 0, 0, 3156, 0,
	2515, 0, 3158, 2566, 603, 37, 3185, 0, 602, 0,
	1760, 3186, 3169, 3161, 1761, 0, 3166, 3163, 0, 0,
	603, 603, 186, 602, 3025, 3171, 3179, 3162, 3160, 3165,
	3164, 0, 3153, 0, 0, 0, 0, 2568, 0, 0,
	0, 3196, 2564, 0, 0, 0, 0, 2565, 0, 3199,
	3217, 3207, 3212, 0, 0, 1832, 0, 0, 0, 3185,
	0, 3227, 0, 0, 3186, 3224, 0, 0, 602, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 1393, 1861, 3236,
	602, 3241, 0, 121, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 603, 0, 0, 164, 0, 602, 0,
	602, 3256, 3254, 0, 0, 0, 0, 1740, 0, 0,
	0, 1885, 0, 1738, 3265, 3264, 3269, 187, 3268, 3271,
	603, 3267, 0, 0, 0, 0, 3185, 0, 3280, 0,
	187, 3186, 0, 0, 603, 3286, 0, 0, 3292, 187,
	0, 187, 0, 187, 187, 603, 3294, 0, 603, 0,
	0, 0, 0, 0, 161, 0, 162, 0, 0, 603,
	0, 0, 0, 1740, 3304, 3305, 3045, 0, 3303, 1738,
	0, 0, 0, 0, 3302, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 603, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 154, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 603, 161, 171, 162, 0, 603,
	0, 0, 0, 603, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 153, 152, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 187, 0, 0, 187,
	0, 187, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 147, 128, 150, 135,
	127, 0, 148, 149, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 137, 132, 133, 134, 138, 0, 2108,
	0, 0, 0, 2112, 129, 0, 2114, 2115, 78, 39,
	40, 80, 0, 140, 0, 2123, 0, 0, 0, 2125,
	2126, 0, 0, 0, 0, 0, 0, 0, 84, 0,
	0, 0, 43, 69, 70, 0, 67, 71, 0, 0,
	0, 0, 0, 0, 0, 68, 2132, 2133, 2134, 2135,
	2136, 0, 2138, 0, 0, 0, 2140, 0, 0, 0,
	0, 2146, 0, 2147, 0, 0, 0, 2150, 0, 0,
	0, 0, 0, 0, 56, 2159, 2160, 2161, 2162, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 2173, 0,
	2176, 2177, 0, 0, 156, 0, 0, 2179, 2181, 0,
	0, 0, 0, 0, 157, 2186, 2187, 2188, 2189, 2190,
	0, 169, 0, 0, 0, 0, 0, 1885, 0, 2198,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 2210,
	0, 0, 187, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 187, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 0, 0, 0, 0,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 144, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 157, 0, 833, 0, 0,
	187, 0, 169, 0, 55, 83, 82, 187, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 0,
	0, 603, 0, 0, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 57, 58, 0,
	59, 60, 61, 62, 0, 615, 187, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 187, 187, 0,
	0, 0, 176, 178, 179, 180, 0, 827, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 0, 0, 0,
	0, 2444, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 603, 81, 0, 2470,
	2471, 0, 0, 0, 0, 0, 603, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 736, 744, 745, 746,
	747, 748, 737, 739, 0, 0, 0, 738, 0, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	741, 749, 750, 0, 187, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 2521, 0, 0, 0, 603,
	603, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 2539, 2540, 187, 0, 0, 2638, 2639, 187,
	0, 187, 0, 187, 0, 0, 187, 187, 187, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 603, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 2665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2680, 2681, 2682, 2684, 2686, 0, 0, 0, 0, 0,
	0, 0, 2693, 0, 0, 0, 0, 2697, 2698, 2699,
	2701, 2702, 2703, 0, 0, 0, 0, 2706, 0, 0,
	0, 0, 0, 2708, 0, 0, 2712, 2713, 2714, 2715,
	2716, 2717, 2718, 2719, 2720, 2721, 0, 0, 0, 0,
	603, 0, 0, 0, 2728, 0, 0, 0, 0, 2732,
	0, 2733, 2735, 0, 2738, 2740, 0, 0, 0, 0,
	0, 2746, 0, 0, 0, 0, 603, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2768, 2769, 0, 0,
	2773, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2785, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1513, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 187, 187, 187, 121,
	0, 143, 0, 0, 1229, 0, 603, 603, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2851, 0, 0,
	0, 0, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 0, 0, 142,
	603, 603, 603, 603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2871, 0, 0, 0,
	161, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1517, 1518,
	153, 152, 181, 2882, 0, 0, 0, 0, 0, 0,
	0, 2884, 0, 0, 0, 0, 0, 2888, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2896,
	0, 0, 0, 0, 0, 0, 0, 2903, 0, 0,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 603, 0, 603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 147, 1519, 150, 0, 1516, 0, 148, 149, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3014, 0, 0, 187, 0, 0,
	603, 0, 0, 3021, 0, 0, 0, 0, 0, 0,
	742, 79, 0, 603, 0, 0, 0, 0, 0, 0,
	3031, 3032, 3033, 0, 0, 3035, 3036, 0, 0, 0,
	3039, 0, 3040, 0, 3041, 0, 3043, 3046, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3055, 3057, 3058, 3060, 3062, 3064, 0, 0,
	0, 603, 0, 0, 0, 603, 603, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	79, 0, 0, 0, 603, 3094, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 603, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 151, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3116, 0, 603, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3122, 0, 0, 0, 0, 0, 144, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3138, 0, 0, 0, 0, 0, 3139, 3140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 603, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 169, 3151, 603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3240, 0, 0, 0, 0,
	0, 0, 0, 603, 603, 1461, 0, 3178, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	1646, 3188, 3190, 3192, 0, 0, 0, 0, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 603, 0, 0, 3220, 0, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 3226, 176, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3238, 603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1699, 1700, 1701, 1702, 0, 0, 0, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3259, 3261, 3263, 0, 0, 0, 0, 0, 603, 0,
	603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1744, 1745, 1449, 0, 0,
	1747, 3283, 0, 0, 1751, 0, 0, 0, 0, 1759,
	0, 0, 0, 0, 0, 0, 0, 0, 3296, 3297,
	1788, 1789, 1790, 1791, 1792, 1793, 1795, 615, 1800, 0,
	1802, 1803, 615, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 0, 1833, 0, 1839,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 1854, 1855, 1856, 1857, 1858, 0,
	1462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	615, 0, 0, 0, 0, 0, 615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2951, 2953, 2952, 2965, 2966, 2967, 2968, 2969, 2970, 2971,
	656, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1897, 1898, 0, 0, 0, 0, 1475, 1478,
	1479, 1480, 1481, 1482, 1483, 0, 1484, 1485, 1486, 1487,
	1488, 1463, 1464, 1465, 1466, 1447, 1448, 1476, 0, 1450,
	1933, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	0, 0, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 0, 0, 0, 0, 0, 0, 1191, 1191, 1191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 79, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 806, 1266, 1267, 1268, 0, 1271,
	0, 1272, 1274, 1275, 1276, 1277, 0, 1280, 1281, 1283,
	1283, 0, 1283, 1287, 1287, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 0,
	1477, 1333, 0, 1335, 1336, 1337, 1338, 1339, 0, 0,
	0, 0, 1287, 1287, 1287, 1287, 1287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1345, 1346, 1347, 1348,
	1349, 1350, 0, 0, 0, 0, 0, 2957, 0, 0,
	0, 0, 0, 0, 1362, 1461, 0, 0, 0, 0,
	0, 0, 2960, 2961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1368, 0, 0,
	0, 0, 0, 806, 0, 0, 0, 806, 0, 0,
	0, 0, 711, 806, 651, 715, 653, 712, 713, 0,
	649, 652, 714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 654,
	655, 2950, 2954, 2955, 2956, 2962, 2963, 2964, 2972, 2974,
	682, 2973, 2975, 2976, 2977, 2980, 2981, 2982, 2983, 2978,
	2979, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2958, 2959,
	0, 0, 0, 0, 0, 2122, 0, 1449, 0, 0,
	700, 0, 716, 0, 717, 0, 0, 721, 0, 0,
	0, 723, 722, 0, 724, 696, 695, 0, 0, 718,
	719, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1462, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 849,
	0, 0, 1007, 0, 1014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 1475, 1478,
	1479, 1480, 1481, 1482, 1483, 0, 1484, 1485, 1486, 1487,
	1488, 1463, 1464, 1465, 1466, 1447, 1448, 1476, 0, 1450,
	0, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459,
	0, 0, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1367, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 796, 0, 0,
	1191, 1191, 1191, 0, 0, 0, 0, 0, 0, 0,
	1477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1011, 0,
	0, 0, 0, 0, 0, 2392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 615, 0, 0, 2416, 2417, 0, 744, 745, 2420,
	0, 0, 2422, 1739, 0, 2423, 2424, 2425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2430, 0, 0,
	2432, 2433, 2434, 2435, 0, 0, 1809, 2437, 0, 2438,
	2439, 0, 0, 0, 2446, 2447, 0, 0, 0, 0,
	0, 0, 1809, 1809, 1809, 1809, 1809, 615, 615, 615,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2474,
	2475, 2476, 2477, 2478, 2479, 0, 0, 0, 0, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 2510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2542, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1917, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 849, 849, 849,
	736, 744, 745, 746, 747, 748, 737, 739, 0, 0,
	0, 738, 0, 0, 1015, 1199, 1201, 0, 0, 0,
	0, 0, 0, 0, 741, 749, 750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2689,
	0, 2638, 2639, 0, 0, 0, 0, 2696, 0, 0,
	0, 0, 0, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1357, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1131, 0,
	1137, 0, 0, 1139, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1370,
	1371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2097, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 0, 0, 2832,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 1434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2856, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 2973, 2974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 560, 0, 1930, 560, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2805, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 711, 0, 0, 715, 0,
	712, 713, 0, 0, 0, 714, 0, 0, 0, 0,
	0, 2873, 0, 2874, 0, 0, 0, 0, 2877, 2878,
	2879, 0, 0, 0, 0, 0, 0, 0, 2883, 0,
	0, 0, 0, 0, 0, 0, 0, 2887, 0, 0,
	0, 0, 0, 0, 0, 0, 2184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2904,
	0, 0, 2905, 0, 2906, 2907, 0, 2908, 0, 2909,
	2208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 806, 0,
	0, 0, 0, 0, 2934, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2942, 0, 0, 2944, 2248,
	2249, 0, 0, 0, 0, 0, 0, 0, 2268, 0,
	2269, 2948, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 2994,
	0, 0, 0, 1421, 0, 1357, 0, 0, 0, 0,
	0, 1542, 1542, 0, 1542, 0, 1542, 1542, 0, 1551,
	1542, 1542, 1542, 1542, 1542, 0, 0, 0, 0, 0,
	0, 0, 1357, 0, 0, 1357, 1007, 1357, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2103, 0, 717,
	0, 655, 721, 657, 718, 719, 0, 653, 656, 720,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
=======
	0, 1619, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1641, 2345, 0,
	0, 0, 0, 0, 701, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3077, 615, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 659, 2961, 2965,
	2966, 2967, 2975, 2976, 2977, 2985, 2987, 688, 2986, 2988,
	2989, 2990, 2993, 2994, 2995, 2996, 2991, 2992, 2997, 2998,
	2999, 3000, 3001, 3002, 3003, 2968, 2972, 2971, 2969, 2970,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 722, 0, 723, 0, 0, 727, 0, 0,
	0, 729, 728, 0, 730, 702, 701, 0, 0, 724,
	725, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 0, 2921, 0,
	2925, 2926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 2532, 0, 79, 0, 2532, 0, 0,
	0, 0, 1902, 0, 0, 0, 0, 0, 2231, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 0, 2246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 822, 0, 0, 0, 0, 0, 0,
=======
	849, 849, 849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 185, 0, 0, 556, 0,
	0, 597, 0, 0, 0, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 556, 0, 0, 0,
	1439, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 615, 0, 0, 834, 0, 834,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3120, 0, 1748, 0, 0, 0, 0, 0,
	3121, 1357, 0, 0, 0, 0, 2459, 0, 615, 0,
	1764, 1765, 0, 0, 3134, 0, 0, 3135, 0, 3136,
	0, 0, 0, 1576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1917, 849, 0, 0, 1621, 0,
	0, 0, 615, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2519, 0, 79,
	0, 0, 1917, 1917, 1917, 1917, 1917, 0, 0, 0,
	1653, 0, 0, 1877, 0, 0, 0, 1657, 0, 2268,
	0, 0, 0, 1917, 0, 0, 1917, 0, 1668, 1669,
	1670, 1671, 1672, 1673, 1674, 3218, 0, 0, 0, 0,
	1889, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 0, 849, 1692, 3233, 849, 3234,
	0, 3235, 0, 0, 0, 0, 0, 0, 0, 1007,
	0, 0, 0, 2212, 0, 0, 744, 745, 0, 2626,
	0, 0, 1739, 0, 0, 0, 0, 0, 0, 2634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3019, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1014, 0, 0, 0, 3281, 0,
	3282, 0, 0, 0, 0, 0, 0, 0, 0, 2668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
=======
	0, 1007, 0, 0, 0, 0, 0, 1014, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	0, 0, 0, 0, 1007, 0, 0, 0, 0, 1734,
	0, 0, 0, 1734, 1734, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2329, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 1902, 0, 0,
	0, 0, 0, 0, 2354, 0, 0, 0, 0, 0,
	0, 0, 0, 2359, 0, 0, 0, 0, 0, 0,
	0, 0, 2532, 0, 0, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 0, 0, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1354, 1355, 1356, 1357, 1358, 1359, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 0, 0,
	0, 0, 3116, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1367, 0, 0, 0, 0, 0, 0,
	1366, 0, 1366, 0, 0, 1366, 0, 0, 0, 0,
	1366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 2473, 1367, 0, 1367, 560, 0, 0, 0,
	0, 0, 855, 0, 0, 0, 0, 0, 0, 3164,
	0, 0, 0, 0, 79, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 1551, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2508, 0, 0, 1652, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 855, 0,
	0, 0, 1366, 560, 0, 2535, 1551, 1366, 0, 0,
	560, 0, 0, 0, 0, 0, 0, 0, 0, 1675,
	1676, 560, 560, 560, 560, 560, 560, 560, 0, 0,
=======
	0, 0, 0, 0, 0, 1903, 0, 0, 0, 0,
	0, 0, 0, 0, 1907, 0, 1910, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 556,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3249, 0, 0, 0, 0,
	560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1013, 0, 0, 1366, 0, 0, 0, 0, 1902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 840, 0, 0, 0,
	0, 0, 0, 0, 840, 840, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 840, 1652, 840, 840, 840,
	840, 840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 2735, 0, 0, 0, 1602,
	742, 750, 751, 752, 753, 754, 743, 745, 0, 0,
	0, 744, 0, 0, 840, 0, 0, 0, 0, 0,
	0, 2508, 0, 0, 747, 755, 756, 0, 822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 1652, 0,
	560, 0, 560, 0, 560, 1938, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 2652, 2653, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 1692, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	2074, 2075, 0, 2910, 2079, 2914, 2915, 0, 0, 0,
	849, 0, 0, 2082, 0, 0, 0, 0, 0, 0,
	2085, 0, 0, 0, 0, 0, 0, 1889, 2519, 0,
	79, 0, 2519, 2217, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 2232, 0, 0, 0, 2088, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1902, 1902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2876, 2877, 2878, 2879,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3006, 0, 0, 0, 0, 0, 0, 0, 0, 816,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 0, 2314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 1366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 0, 0, 0, 0, 560, 560, 0, 0,
	560, 0, 2095, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 2949, 0, 2951, 0, 0, 0,
	0, 0, 560, 0, 0, 0, 717, 0, 0, 721,
	0, 718, 719, 0, 0, 0, 720, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 1889, 0, 0, 0, 0, 0, 0, 2339, 0,
	0, 0, 0, 0, 0, 0, 0, 2344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1357, 0, 0, 0, 2519, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1345, 1346, 1347, 1348,
	1349, 1350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1734, 0, 0, 3104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3029, 0, 840, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 855, 0, 0,
=======
	0, 0, 0, 79, 0, 0, 2270, 0, 0, 0,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 0, 1357, 0, 1357, 0, 0, 1357,
	0, 0, 0, 0, 1357, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2460, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 0, 3152, 0, 2318, 0, 0, 79, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1358, 0, 2495, 1358,
	0, 1358, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 849, 0, 0, 0, 1357, 0, 0, 2522,
	1542, 1357, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	0, 2367, 2368, 2369, 2370, 2371, 0, 0, 0, 0,
	0, 0, 0, 1643, 0, 0, 0, 0, 0, 0,
	0, 0, 1692, 2380, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 556, 0, 2388, 3237,
	0, 0, 0, 0, 0, 1666, 1667, 556, 556, 556,
	556, 556, 556, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1007, 0, 0, 1357, 0, 0,
	0, 0, 1889, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 3077, 0, 0, 0, 3077, 3077,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 0, 0, 1902, 840, 840,
	742, 750, 751, 752, 753, 754, 743, 745, 0, 0,
	0, 744, 0, 0, 0, 1652, 0, 0, 0, 560,
	0, 0, 0, 0, 747, 755, 756, 1602, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 834, 0, 0, 0, 0, 0, 0, 0, 834,
	834, 0, 0, 0, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2724, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 834, 1643,
	834, 834, 834, 834, 834, 0, 2495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 2652, 2653, 560, 0, 0, 0, 560, 0, 0,
	0, 0, 1902, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 0, 0, 0, 0, 0,
	0, 3157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1366, 0, 3161, 0, 0, 560, 0, 0, 0,
	0, 0, 0, 2339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 855, 855, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	0, 0, 0, 0, 0, 0, 2594, 0, 0, 0,
	0, 816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 0, 0, 0, 0, 0,
	0, 1643, 2632, 556, 0, 556, 0, 556, 1924, 0,
	0, 0, 0, 0, 0, 0, 2641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 3206, 0, 0, 0, 0, 0, 0, 1367,
	0, 0, 0, 0, 0, 0, 0, 3214, 0, 0,
	0, 0, 560, 560, 560, 560, 560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 560, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 3157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2735, 0, 3214, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 2657, 0, 0, 2660, 0, 0,
	0, 0, 0, 0, 0, 0, 1889, 1889, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 1367, 0, 0, 1367, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1367, 0, 0, 0, 0, 1367, 560, 560,
	560, 560, 560, 0, 0, 0, 0, 0, 0, 0,
	2551, 0, 0, 0, 0, 560, 0, 0, 1602, 0,
	560, 0, 0, 560, 2562, 1652, 0, 0, 0, 0,
=======
	2864, 2865, 2866, 2867, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2748, 0, 0, 0, 1357, 0, 1357, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 560, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 560, 0, 0, 560,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 1357, 0, 0, 0,
	0, 2938, 556, 2940, 0, 0, 0, 0, 0, 556,
	556, 0, 0, 556, 0, 2081, 0, 0, 0, 2810,
	0, 0, 556, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 2825, 0,
	0, 2826, 2827, 2828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	0, 0, 0, 0, 1889, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3065, 0, 0, 0, 3065, 3065, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
=======
	0, 0, 0, 0, 0, 0, 0, 834, 834, 0,
	0, 0, 0, 0, 1889, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1643, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1889, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 556, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1357, 0, 3149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 560, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 560,
	0, 0, 560, 560, 560, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 849, 849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 0, 0, 0, 3194, 0,
	0, 2324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1358, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3145, 0,
	556, 556, 556, 556, 556, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1889, 556, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 2724, 0,
	3202, 0, 0, 3115, 0, 0, 0, 0, 0, 0,
	0, 0, 834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1358, 0,
	1358, 0, 0, 1358, 0, 0, 0, 0, 1358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
	0, 1367, 0, 0, 0, 0, 0, 0, 0, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 1358, 556, 556, 556, 556,
	556, 0, 0, 0, 0, 0, 0, 0, 2538, 0,
	0, 0, 0, 556, 0, 1593, 0, 556, 0, 0,
	556, 2548, 1643, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	1602, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1367,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 556, 0, 0, 556, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 1602, 0, 0, 0, 0, 0, 0, 0, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 556, 0, 0,
	556, 556, 556, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 1602, 0, 0, 0, 0, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 1367, 0, 0, 0, 368, 0, 0, 991, 976,
	476, 0, 919, 994, 888, 907, 1004, 910, 913, 955,
	867, 933, 386, 904, 860, 892, 862, 899, 863, 890,
	921, 253, 887, 978, 937, 993, 341, 250, 869, 893,
	400, 909, 197, 957, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 1000, 345,
	943, 0, 460, 371, 0, 0, 1602, 923, 982, 931,
	969, 918, 956, 877, 942, 995, 905, 952, 996, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 3184, 0, 3185, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 901, 949, 990, 902,
	951, 248, 298, 255, 247, 480, 1001, 981, 866, 930,
	989, 0, 0, 216, 992, 925, 0, 954, 0, 1007,
	861, 945, 0, 864, 868, 1003, 985, 896, 258, 0,
	0, 0, 0, 0, 0, 0, 922, 932, 966, 970,
	916, 0, 0, 0, 0, 0, 0, 0, 894, 0,
	941, 0, 0, 0, 873, 865, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 920, 0,
	0, 0, 0, 876, 0, 895, 967, 0, 859, 280,
	870, 372, 240, 0, 974, 984, 917, 517, 988, 915,
	914, 961, 874, 980, 908, 340, 872, 307, 192, 212,
	0, 906, 382, 425, 437, 979, 891, 900, 238, 898,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	940, 959, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 1198, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	886, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 975, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 964, 1006, 395, 436, 227, 501, 459, 881,
	885, 879, 946, 880, 935, 936, 882, 997, 998, 999,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 968,
	875, 0, 883, 884, 0, 977, 986, 987, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	939, 191, 208, 343, 1002, 418, 271, 533, 511, 506,
	198, 210, 878, 245, 889, 897, 0, 903, 911, 912,
	924, 926, 927, 928, 929, 947, 948, 950, 958, 960,
	963, 965, 972, 983, 1005, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 938, 944, 354, 264, 285, 297, 953,
	510, 465, 214, 430, 273, 236, 971, 973, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 934, 962, 350, 477, 478, 293, 368, 0,
	0, 991, 976, 476, 0, 919, 994, 888, 907, 1004,
	910, 913, 955, 867, 933, 386, 904, 860, 892, 862,
	899, 863, 890, 921, 253, 887, 978, 937, 993, 341,
	250, 869, 893, 400, 909, 197, 957, 450, 237, 351,
	348, 483, 265, 256, 252, 235, 294, 358, 398, 470,
	392, 1000, 345, 943, 0, 460, 371, 0, 0, 0,
	923, 982, 931, 969, 918, 956, 877, 942, 995, 905,
	952, 996, 300, 234, 302, 196, 383, 461, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 326,
	335, 334, 315, 316, 318, 320, 325, 332, 338, 901,
	949, 990, 902, 951, 248, 298, 255, 247, 480, 1001,
	981, 866, 930, 989, 0, 0, 216, 992, 925, 0,
	954, 0, 1007, 861, 945, 0, 864, 868, 1003, 985,
	896, 258, 0, 0, 0, 0, 0, 0, 0, 922,
	932, 966, 970, 916, 0, 0, 0, 0, 0, 2563,
	0, 894, 0, 941, 0, 0, 0, 873, 865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 920, 0, 0, 0, 0, 876, 0, 895, 967,
	0, 859, 280, 870, 372, 240, 0, 974, 984, 917,
	517, 988, 915, 914, 961, 874, 980, 908, 340, 872,
	307, 192, 212, 0, 906, 382, 425, 437, 979, 891,
	900, 238, 898, 435, 396, 499, 220, 267, 422, 402,
	433, 409, 270, 940, 959, 434, 346, 485, 416, 496,
	518, 519, 246, 376, 508, 474, 514, 532, 213, 243,
	390, 467, 502, 457, 369, 481, 482, 306, 456, 278,
	195, 344, 524, 211, 443, 229, 218, 487, 505, 272,
	420, 203, 469, 494, 226, 447, 0, 0, 534, 205,
	492, 466, 365, 303, 304, 204, 0, 421, 251, 276,
	241, 385, 489, 490, 239, 535, 215, 513, 207, 1198,
	512, 378, 484, 493, 366, 356, 206, 491, 364, 355,
	311, 330, 331, 263, 287, 414, 349, 415, 288, 374,
	373, 375, 199, 503, 0, 200, 0, 462, 504, 536,
	221, 222, 224, 886, 262, 266, 274, 277, 283, 284,
	292, 342, 389, 413, 411, 417, 975, 479, 497, 509,
	516, 522, 523, 525, 526, 527, 528, 529, 531, 530,
	377, 291, 458, 310, 347, 964, 1006, 395, 436, 227,
	501, 459, 881, 885, 879, 946, 880, 935, 936, 882,
	997, 998, 999, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 0, 968, 875, 0, 883, 884, 0, 977, 986,
	987, 555, 357, 449, 498, 312, 324, 327, 317, 336,
	0, 337, 313, 314, 319, 321, 322, 323, 328, 329,
	333, 339, 426, 427, 428, 429, 275, 507, 289, 432,
	431, 308, 309, 939, 191, 208, 343, 1002, 418, 271,
	533, 511, 506, 198, 210, 878, 245, 889, 897, 0,
	903, 911, 912, 924, 926, 927, 928, 929, 947, 948,
	950, 958, 960, 963, 965, 972, 983, 1005, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 290, 295, 296, 299, 305, 353, 359, 360, 361,
	362, 379, 380, 381, 384, 387, 388, 391, 393, 394,
	397, 401, 405, 406, 407, 408, 410, 412, 419, 424,
	438, 439, 440, 441, 442, 445, 446, 451, 452, 453,
	454, 455, 463, 464, 468, 486, 488, 500, 515, 520,
	444, 282, 495, 521, 0, 352, 938, 944, 354, 264,
	285, 297, 953, 510, 465, 214, 430, 273, 236, 971,
	973, 202, 233, 217, 242, 257, 260, 301, 363, 370,
	399, 404, 279, 254, 231, 423, 228, 448, 471, 472,
	473, 475, 367, 249, 403, 934, 962, 350, 477, 478,
	293, 368, 0, 0, 991, 976, 476, 0, 919, 994,
	888, 907, 1004, 910, 913, 955, 867, 933, 386, 904,
	860, 892, 862, 899, 863, 890, 921, 253, 887, 978,
	937, 993, 341, 250, 869, 893, 400, 909, 197, 957,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 1000, 345, 943, 0, 460, 371,
	0, 0, 0, 923, 982, 931, 969, 918, 956, 877,
	942, 995, 905, 952, 996, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 901, 949, 990, 902, 951, 248, 298, 255,
	247, 480, 1001, 981, 866, 930, 989, 0, 0, 216,
	992, 925, 0, 954, 0, 1007, 861, 945, 0, 864,
	868, 1003, 985, 896, 258, 0, 0, 0, 0, 0,
	0, 0, 922, 932, 966, 970, 916, 0, 0, 0,
	0, 0, 2521, 0, 894, 0, 941, 0, 0, 0,
	873, 865, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 920, 0, 0, 0, 0, 876,
	0, 895, 967, 0, 859, 280, 870, 372, 240, 0,
	974, 984, 917, 517, 988, 915, 914, 961, 874, 980,
	908, 340, 872, 307, 192, 212, 0, 906, 382, 425,
	437, 979, 891, 900, 238, 898, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 940, 959, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 1198, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 886, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 975,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 964, 1006,
	395, 436, 227, 501, 459, 881, 885, 879, 946, 880,
	935, 936, 882, 997, 998, 999, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 968, 875, 0, 883, 884,
	0, 977, 986, 987, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 939, 191, 208, 343,
	1002, 418, 271, 533, 511, 506, 198, 210, 878, 245,
	889, 897, 0, 903, 911, 912, 924, 926, 927, 928,
	929, 947, 948, 950, 958, 960, 963, 965, 972, 983,
	1005, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 938,
	944, 354, 264, 285, 297, 953, 510, 465, 214, 430,
	273, 236, 971, 973, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 934, 962,
	350, 477, 478, 293, 368, 0, 0, 991, 976, 476,
	0, 919, 994, 888, 907, 1004, 910, 913, 955, 867,
	933, 386, 904, 860, 892, 862, 899, 863, 890, 921,
	253, 887, 978, 937, 993, 341, 250, 869, 893, 400,
	909, 197, 957, 450, 237, 351, 348, 483, 265, 256,
	252, 235, 294, 358, 398, 470, 392, 1000, 345, 943,
	0, 460, 371, 0, 0, 0, 923, 982, 931, 969,
	918, 956, 877, 942, 995, 905, 952, 996, 300, 234,
	302, 196, 383, 461, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 326, 335, 334, 315, 316,
	318, 320, 325, 332, 338, 901, 949, 990, 902, 951,
	248, 298, 255, 247, 480, 1001, 981, 866, 930, 989,
	0, 0, 216, 992, 925, 0, 954, 0, 1007, 861,
	945, 0, 864, 868, 1003, 985, 896, 258, 0, 0,
	0, 0, 0, 0, 0, 922, 932, 966, 970, 916,
	0, 0, 0, 0, 0, 1918, 0, 894, 0, 941,
	0, 0, 0, 873, 865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 920, 0, 0,
	0, 0, 876, 0, 895, 967, 0, 859, 280, 870,
	372, 240, 0, 974, 984, 917, 517, 988, 915, 914,
	961, 874, 980, 908, 340, 872, 307, 192, 212, 0,
	906, 382, 425, 437, 979, 891, 900, 238, 898, 435,
	396, 499, 220, 267, 422, 402, 433, 409, 270, 940,
	959, 434, 346, 485, 416, 496, 518, 519, 246, 376,
	508, 474, 514, 532, 213, 243, 390, 467, 502, 457,
	369, 481, 482, 306, 456, 278, 195, 344, 524, 211,
	443, 229, 218, 487, 505, 272, 420, 203, 469, 494,
	226, 447, 0, 0, 534, 205, 492, 466, 365, 303,
	304, 204, 0, 421, 251, 276, 241, 385, 489, 490,
	239, 535, 215, 513, 207, 1198, 512, 378, 484, 493,
	366, 356, 206, 491, 364, 355, 311, 330, 331, 263,
	287, 414, 349, 415, 288, 374, 373, 375, 199, 503,
	0, 200, 0, 462, 504, 536, 221, 222, 224, 886,
	262, 266, 274, 277, 283, 284, 292, 342, 389, 413,
	411, 417, 975, 479, 497, 509, 516, 522, 523, 525,
	526, 527, 528, 529, 531, 530, 377, 291, 458, 310,
	347, 964, 1006, 395, 436, 227, 501, 459, 881, 885,
	879, 946, 880, 935, 936, 882, 997, 998, 999, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 551, 552, 553, 554, 0, 968, 875,
	0, 883, 884, 0, 977, 986, 987, 555, 357, 449,
	498, 312, 324, 327, 317, 336, 0, 337, 313, 314,
	319, 321, 322, 323, 328, 329, 333, 339, 426, 427,
	428, 429, 275, 507, 289, 432, 431, 308, 309, 939,
	191, 208, 343, 1002, 418, 271, 533, 511, 506, 198,
	210, 878, 245, 889, 897, 0, 903, 911, 912, 924,
	926, 927, 928, 929, 947, 948, 950, 958, 960, 963,
	965, 972, 983, 1005, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 290, 295, 296,
	299, 305, 353, 359, 360, 361, 362, 379, 380, 381,
	384, 387, 388, 391, 393, 394, 397, 401, 405, 406,
	407, 408, 410, 412, 419, 424, 438, 439, 440, 441,
	442, 445, 446, 451, 452, 453, 454, 455, 463, 464,
	468, 486, 488, 500, 515, 520, 444, 282, 495, 521,
	0, 352, 938, 944, 354, 264, 285, 297, 953, 510,
	465, 214, 430, 273, 236, 971, 973, 202, 233, 217,
	242, 257, 260, 301, 363, 370, 399, 404, 279, 254,
	231, 423, 228, 448, 471, 472, 473, 475, 367, 249,
	403, 934, 962, 350, 477, 478, 293, 368, 0, 0,
	991, 976, 476, 0, 919, 994, 888, 907, 1004, 910,
	913, 955, 867, 933, 386, 904, 860, 892, 862, 899,
	863, 890, 921, 253, 887, 978, 937, 993, 341, 250,
	869, 893, 400, 909, 197, 957, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	1000, 345, 943, 0, 460, 371, 0, 0, 0, 923,
	982, 931, 969, 918, 956, 877, 942, 995, 905, 952,
	996, 300, 234, 302, 196, 383, 461, 269, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 901, 949,
	990, 902, 951, 248, 298, 255, 247, 480, 1001, 981,
	866, 930, 989, 0, 0, 216, 992, 925, 0, 954,
	0, 1007, 861, 945, 0, 864, 868, 1003, 985, 896,
	258, 0, 0, 0, 0, 0, 0, 0, 922, 932,
	966, 970, 916, 0, 0, 0, 0, 0, 0, 0,
	894, 0, 941, 0, 0, 0, 873, 865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	920, 0, 0, 0, 0, 876, 0, 895, 967, 0,
	859, 280, 870, 372, 240, 0, 974, 984, 917, 517,
	988, 915, 914, 961, 874, 980, 908, 340, 872, 307,
	192, 212, 0, 906, 382, 425, 437, 979, 891, 900,
	238, 898, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 940, 959, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 1198, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 886, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 975, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 964, 1006, 395, 436, 227, 501,
	459, 881, 885, 879, 946, 880, 935, 936, 882, 997,
	998, 999, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 968, 875, 0, 883, 884, 0, 977, 986, 987,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 939, 191, 208, 343, 1002, 418, 271, 533,
	511, 506, 198, 210, 878, 245, 889, 897, 0, 903,
	911, 912, 924, 926, 927, 928, 929, 947, 948, 950,
	958, 960, 963, 965, 972, 983, 1005, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 938, 944, 354, 264, 285,
	297, 953, 510, 465, 214, 430, 273, 236, 971, 973,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 934, 962, 350, 477, 478, 293,
	368, 0, 0, 991, 976, 476, 0, 919, 994, 888,
	907, 1004, 910, 913, 955, 867, 933, 386, 904, 860,
	892, 862, 899, 863, 890, 921, 253, 887, 978, 937,
	993, 341, 250, 869, 893, 400, 909, 197, 957, 450,
	237, 351, 348, 483, 265, 256, 252, 235, 294, 358,
	398, 470, 392, 1000, 345, 943, 0, 460, 371, 0,
	0, 0, 923, 982, 931, 969, 918, 956, 877, 942,
	995, 905, 952, 996, 300, 234, 302, 196, 383, 461,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 326, 335, 334, 315, 316, 318, 320, 325, 332,
	338, 901, 949, 990, 902, 951, 248, 298, 255, 247,
	480, 1001, 981, 866, 930, 989, 0, 0, 216, 992,
	925, 0, 954, 0, 1007, 861, 945, 0, 864, 868,
	1003, 985, 896, 258, 0, 0, 0, 0, 0, 0,
	0, 922, 932, 966, 970, 916, 0, 0, 0, 0,
	0, 0, 0, 894, 0, 941, 0, 0, 0, 873,
	865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 920, 0, 0, 0, 0, 876, 0,
	895, 967, 0, 859, 280, 870, 372, 240, 0, 974,
	984, 917, 517, 988, 915, 914, 961, 874, 980, 908,
	340, 872, 307, 192, 212, 0, 906, 382, 425, 437,
	979, 891, 900, 238, 898, 435, 396, 499, 220, 267,
	422, 402, 433, 409, 270, 940, 959, 434, 346, 485,
	416, 496, 518, 519, 246, 376, 508, 474, 514, 532,
	213, 243, 390, 467, 502, 457, 369, 481, 482, 306,
	456, 278, 195, 344, 524, 211, 443, 229, 218, 487,
	505, 272, 420, 203, 469, 494, 226, 447, 0, 0,
	534, 205, 492, 466, 365, 303, 304, 204, 0, 421,
	251, 276, 241, 385, 489, 490, 239, 535, 215, 513,
	207, 1198, 512, 378, 484, 493, 366, 356, 206, 491,
	364, 355, 311, 330, 331, 263, 287, 414, 349, 415,
	288, 374, 373, 375, 199, 503, 0, 200, 0, 462,
	504, 536, 221, 222, 224, 886, 262, 266, 274, 277,
	283, 284, 292, 342, 389, 413, 411, 417, 975, 479,
	497, 509, 516, 522, 523, 525, 526, 527, 528, 529,
	531, 530, 377, 291, 458, 310, 347, 964, 1006, 395,
	436, 227, 501, 459, 881, 885, 879, 946, 880, 935,
	936, 882, 997, 998, 999, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 0, 968, 875, 0, 883, 884, 0,
	977, 986, 987, 555, 357, 449, 498, 312, 324, 327,
	317, 336, 0, 337, 313, 314, 319, 321, 322, 323,
	328, 329, 333, 339, 426, 427, 428, 429, 275, 507,
	289, 432, 431, 308, 309, 939, 191, 208, 343, 1002,
	418, 271, 533, 511, 506, 198, 210, 878, 245, 889,
	897, 0, 903, 911, 912, 924, 926, 927, 928, 929,
	947, 948, 950, 958, 960, 963, 965, 972, 983, 1005,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 290, 295, 296, 299, 305, 353, 359,
	360, 361, 362, 379, 380, 381, 384, 387, 388, 391,
	393, 394, 397, 401, 405, 406, 407, 408, 410, 412,
	419, 424, 438, 439, 440, 441, 442, 445, 446, 451,
	452, 453, 454, 455, 463, 464, 468, 486, 488, 500,
	515, 520, 444, 282, 495, 521, 0, 352, 938, 944,
	354, 264, 285, 297, 953, 510, 465, 214, 430, 273,
	236, 971, 973, 202, 233, 217, 242, 257, 260, 301,
	363, 370, 399, 404, 279, 254, 231, 423, 228, 448,
	471, 472, 473, 475, 367, 249, 403, 934, 962, 350,
	477, 478, 293, 368, 0, 0, 991, 976, 476, 0,
	919, 994, 888, 907, 1004, 910, 913, 955, 867, 933,
	386, 904, 860, 892, 862, 899, 863, 890, 921, 253,
	887, 978, 937, 993, 341, 250, 869, 893, 400, 909,
	197, 957, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 1000, 345, 943, 0,
	460, 371, 0, 0, 0, 923, 982, 931, 969, 918,
	956, 877, 942, 995, 905, 952, 996, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 901, 949, 990, 902, 951, 248,
	298, 255, 247, 480, 1001, 981, 866, 930, 989, 0,
	0, 1008, 992, 925, 0, 954, 0, 1007, 861, 945,
	0, 864, 868, 1003, 985, 896, 258, 0, 0, 0,
	0, 0, 0, 0, 922, 932, 966, 970, 916, 0,
	0, 0, 0, 0, 0, 0, 894, 0, 941, 0,
	0, 0, 873, 865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 920, 0, 0, 0,
	0, 876, 0, 895, 967, 0, 859, 280, 870, 372,
	240, 0, 974, 984, 917, 517, 988, 915, 914, 961,
	874, 980, 908, 340, 872, 307, 192, 212, 0, 906,
	382, 425, 437, 979, 891, 900, 238, 898, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 940, 959,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 871, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 886, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 975, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 858, 852, 851, 310, 347,
	964, 1006, 395, 436, 227, 501, 459, 881, 885, 879,
	946, 880, 935, 936, 882, 997, 998, 999, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 968, 875, 0,
	883, 884, 0, 977, 986, 987, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 939, 191,
	208, 343, 1002, 418, 271, 533, 511, 506, 198, 210,
	878, 245, 889, 897, 0, 903, 911, 912, 924, 926,
	927, 928, 929, 947, 948, 950, 958, 960, 963, 965,
	972, 983, 1005, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 938, 944, 354, 264, 285, 297, 953, 510, 465,
	214, 430, 273, 236, 971, 973, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	934, 962, 350, 477, 478, 293, 368, 0, 0, 991,
	976, 476, 0, 919, 994, 888, 907, 1004, 910, 913,
	955, 867, 933, 386, 904, 860, 892, 862, 899, 863,
	890, 921, 253, 887, 978, 937, 993, 341, 250, 869,
	893, 400, 909, 197, 957, 450, 237, 351, 348, 483,
	265, 256, 252, 235, 294, 358, 398, 470, 392, 1000,
	345, 943, 0, 460, 371, 0, 0, 0, 923, 982,
	931, 969, 918, 956, 877, 942, 995, 905, 952, 996,
	300, 234, 302, 196, 383, 461, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 326, 335, 334,
	315, 316, 318, 320, 325, 332, 338, 901, 949, 990,
	902, 951, 248, 298, 255, 247, 480, 1001, 981, 866,
	930, 989, 0, 0, 1008, 992, 925, 0, 954, 0,
	1007, 861, 945, 0, 864, 868, 1003, 985, 896, 258,
	0, 0, 0, 0, 0, 0, 0, 922, 932, 966,
	970, 916, 0, 0, 0, 0, 0, 0, 0, 894,
	0, 941, 0, 0, 0, 873, 865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 920,
	0, 0, 0, 0, 876, 0, 895, 967, 0, 859,
	280, 870, 372, 240, 0, 974, 984, 917, 517, 988,
	915, 914, 961, 874, 980, 908, 340, 872, 307, 192,
	212, 0, 906, 382, 425, 437, 979, 891, 900, 238,
	898, 435, 396, 499, 220, 267, 422, 402, 433, 409,
	270, 940, 959, 434, 346, 485, 416, 496, 518, 519,
	246, 376, 508, 474, 514, 532, 213, 243, 390, 467,
	502, 457, 369, 481, 482, 306, 456, 278, 195, 344,
	524, 211, 443, 229, 218, 487, 505, 272, 420, 203,
	469, 1434, 226, 447, 0, 0, 534, 205, 492, 466,
	365, 303, 304, 204, 0, 421, 251, 276, 241, 385,
	489, 490, 239, 535, 215, 513, 207, 871, 512, 378,
	484, 493, 366, 356, 206, 491, 364, 355, 311, 330,
	331, 263, 287, 414, 349, 415, 288, 374, 373, 375,
	199, 503, 0, 200, 0, 462, 504, 536, 221, 222,
	224, 886, 262, 266, 274, 277, 283, 284, 292, 342,
	389, 413, 411, 417, 975, 479, 497, 509, 516, 522,
	523, 525, 526, 527, 528, 529, 531, 530, 858, 852,
	851, 310, 347, 964, 1006, 395, 436, 227, 501, 459,
	881, 885, 879, 946, 880, 935, 936, 882, 997, 998,
	999, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 0,
	968, 875, 0, 883, 884, 0, 977, 986, 987, 555,
	357, 449, 498, 312, 324, 327, 317, 336, 0, 337,
	313, 314, 319, 321, 322, 323, 328, 329, 333, 339,
	426, 427, 428, 429, 275, 507, 289, 432, 431, 308,
	309, 939, 191, 208, 343, 1002, 418, 271, 533, 511,
	506, 198, 210, 878, 245, 889, 897, 0, 903, 911,
	912, 924, 926, 927, 928, 929, 947, 948, 950, 958,
	960, 963, 965, 972, 983, 1005, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 290,
	295, 296, 299, 305, 353, 359, 360, 361, 362, 379,
	380, 381, 384, 387, 388, 391, 393, 394, 397, 401,
	405, 406, 407, 408, 410, 412, 419, 424, 438, 439,
	440, 441, 442, 445, 446, 451, 452, 453, 454, 455,
	463, 464, 468, 486, 488, 500, 515, 520, 444, 282,
	495, 521, 0, 352, 938, 944, 354, 264, 285, 297,
	953, 510, 465, 214, 430, 273, 236, 971, 973, 202,
	233, 217, 242, 257, 260, 301, 363, 370, 399, 404,
	279, 254, 231, 423, 228, 448, 471, 472, 473, 475,
	367, 249, 403, 934, 962, 350, 477, 478, 293, 368,
	0, 0, 991, 976, 476, 0, 919, 994, 888, 907,
	1004, 910, 913, 955, 867, 933, 386, 904, 860, 892,
	862, 899, 863, 890, 921, 253, 887, 978, 937, 993,
	341, 250, 869, 893, 400, 909, 197, 957, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 1000, 345, 943, 0, 460, 371, 0, 0,
	0, 923, 982, 931, 969, 918, 956, 877, 942, 995,
	905, 952, 996, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	901, 949, 990, 902, 951, 248, 298, 255, 247, 480,
	1001, 981, 866, 930, 989, 0, 0, 1008, 992, 925,
	0, 954, 0, 1007, 861, 945, 0, 864, 868, 1003,
	985, 896, 258, 0, 0, 0, 0, 0, 0, 0,
	922, 932, 966, 970, 916, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 941, 0, 0, 0, 873, 865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 920, 0, 0, 0, 0, 876, 0, 895,
	967, 0, 859, 280, 870, 372, 240, 0, 974, 984,
	917, 517, 988, 915, 914, 961, 874, 980, 908, 340,
	872, 307, 192, 212, 0, 906, 382, 425, 437, 979,
	891, 900, 238, 898, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 940, 959, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 849, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	871, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 886, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 975, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 858, 852, 851, 310, 347, 964, 1006, 395, 436,
	227, 501, 459, 881, 885, 879, 946, 880, 935, 936,
	882, 997, 998, 999, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 968, 875, 0, 883, 884, 0, 977,
	986, 987, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 939, 191, 208, 343, 1002, 418,
	271, 533, 511, 506, 198, 210, 878, 245, 889, 897,
	0, 903, 911, 912, 924, 926, 927, 928, 929, 947,
	948, 950, 958, 960, 963, 965, 972, 983, 1005, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 938, 944, 354,
	264, 285, 297, 953, 510, 465, 214, 430, 273, 236,
	971, 973, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 934, 962, 350, 477,
	478, 293, 368, 0, 0, 0, 0, 476, 0, 651,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 386,
	0, 0, 1855, 0, 637, 0, 0, 0, 253, 642,
	0, 0, 0, 341, 250, 0, 1856, 400, 0, 197,
	0, 450, 237, 351, 348, 483, 265, 256, 252, 235,
	294, 358, 398, 470, 392, 650, 345, 0, 0, 460,
	371, 0, 0, 0, 0, 0, 645, 646, 0, 0,
	0, 0, 0, 0, 0, 0, 300, 234, 302, 196,
	383, 461, 269, 0, 87, 0, 0, 188, 189, 190,
	742, 750, 751, 752, 753, 754, 743, 745, 0, 0,
	225, 744, 232, 662, 664, 663, 678, 679, 680, 681,
	682, 683, 684, 660, 747, 755, 756, 0, 248, 298,
	255, 247, 480, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 620, 634,
	0, 649, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 631, 632, 838, 0, 0, 0, 711, 0, 633,
	0, 0, 641, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 372, 240,
	0, 710, 0, 0, 517, 0, 0, 708, 0, 0,
	0, 0, 340, 0, 307, 192, 212, 0, 0, 382,
	425, 437, 0, 0, 0, 238, 0, 435, 396, 499,
	220, 267, 422, 402, 433, 409, 270, 0, 0, 434,
	346, 485, 416, 496, 518, 519, 246, 376, 508, 474,
	514, 532, 213, 243, 390, 467, 502, 457, 369, 481,
	482, 306, 456, 278, 195, 344, 524, 211, 443, 229,
	218, 487, 505, 272, 420, 203, 469, 494, 226, 447,
	0, 0, 534, 205, 492, 466, 365, 303, 304, 204,
	0, 421, 251, 276, 241, 385, 489, 490, 239, 535,
	215, 513, 207, 0, 512, 378, 484, 493, 366, 356,
	206, 491, 364, 355, 311, 673, 674, 263, 287, 414,
	349, 415, 288, 374, 373, 375, 199, 503, 0, 200,
	0, 462, 504, 536, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 292, 342, 389, 413, 411, 417,
	0, 479, 497, 509, 516, 522, 523, 525, 526, 527,
	528, 529, 531, 530, 377, 291, 458, 310, 347, 0,
	0, 395, 436, 227, 501, 459, 717, 709, 655, 721,
	657, 718, 719, 652, 653, 656, 720, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 0, 712, 640, 639, 0,
	647, 648, 0, 658, 659, 661, 665, 666, 667, 675,
	676, 677, 685, 687, 688, 686, 689, 690, 691, 694,
	695, 696, 697, 692, 693, 698, 731, 732, 733, 734,
	735, 736, 668, 672, 671, 669, 670, 638, 191, 208,
	343, 0, 418, 271, 533, 511, 506, 198, 210, 722,
	245, 723, 0, 0, 727, 0, 0, 0, 729, 728,
	0, 730, 702, 701, 0, 0, 724, 725, 0, 726,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 290, 295, 296, 299, 305,
	353, 359, 360, 361, 362, 379, 380, 381, 384, 387,
	388, 391, 393, 394, 397, 401, 405, 406, 407, 408,
	410, 412, 419, 424, 438, 439, 440, 441, 442, 445,
	446, 451, 452, 453, 454, 455, 463, 464, 468, 486,
	488, 500, 515, 520, 444, 282, 495, 521, 0, 352,
	0, 0, 354, 264, 285, 297, 0, 510, 465, 214,
	430, 273, 236, 749, 0, 202, 233, 217, 242, 257,
	260, 301, 363, 370, 399, 404, 279, 254, 231, 423,
	228, 448, 471, 472, 473, 475, 367, 249, 403, 0,
	368, 350, 477, 478, 293, 476, 0, 651, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 637, 0, 0, 0, 253, 642, 0, 0,
	0, 341, 250, 0, 0, 400, 0, 197, 0, 450,
	237, 351, 348, 483, 265, 256, 252, 235, 294, 358,
	398, 470, 392, 650, 345, 0, 0, 460, 371, 0,
	0, 0, 0, 0, 645, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 234, 302, 196, 383, 461,
	269, 0, 87, 0, 0, 188, 189, 190, 742, 750,
	751, 752, 753, 754, 743, 745, 0, 0, 225, 744,
	232, 662, 664, 663, 678, 679, 680, 681, 682, 683,
	684, 660, 747, 755, 756, 0, 248, 298, 255, 247,
	480, 0, 0, 1807, 1808, 1809, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 620, 634, 0, 649,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 631,
	632, 0, 0, 0, 0, 711, 0, 633, 0, 0,
	641, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 372, 240, 0, 710,
	0, 0, 517, 0, 0, 708, 0, 0, 0, 0,
	340, 0, 307, 192, 212, 0, 0, 382, 425, 437,
	0, 0, 0, 238, 0, 435, 396, 499, 220, 267,
	422, 402, 433, 409, 270, 0, 0, 434, 346, 485,
	416, 496, 518, 519, 246, 376, 508, 474, 514, 532,
	213, 243, 390, 467, 502, 457, 369, 481, 482, 306,
	456, 278, 195, 344, 524, 211, 443, 229, 218, 487,
	505, 272, 420, 203, 469, 494, 226, 447, 0, 0,
	534, 205, 492, 466, 365, 303, 304, 204, 0, 421,
	251, 276, 241, 385, 489, 490, 239, 535, 215, 513,
	207, 0, 512, 378, 484, 493, 366, 356, 206, 491,
	364, 355, 311, 673, 674, 263, 287, 414, 349, 415,
	288, 374, 373, 375, 199, 503, 0, 200, 0, 462,
	504, 536, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 292, 342, 389, 413, 411, 417, 0, 479,
	497, 509, 516, 522, 523, 525, 526, 527, 528, 529,
	531, 530, 377, 291, 458, 310, 347, 0, 0, 395,
	436, 227, 501, 459, 717, 709, 655, 721, 657, 718,
	719, 652, 653, 656, 720, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 0, 712, 640, 639, 0, 647, 648,
	0, 658, 659, 661, 665, 666, 667, 675, 676, 677,
	685, 687, 688, 686, 689, 690, 691, 694, 695, 696,
	697, 692, 693, 698, 731, 732, 733, 734, 735, 736,
	668, 672, 671, 669, 670, 638, 191, 208, 343, 0,
	418, 271, 533, 511, 506, 198, 210, 722, 245, 723,
	0, 0, 727, 0, 0, 0, 729, 728, 0, 730,
	702, 701, 0, 0, 724, 725, 0, 726, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 290, 295, 296, 299, 305, 353, 359,
	360, 361, 362, 379, 380, 381, 384, 387, 388, 391,
	393, 394, 397, 401, 405, 406, 407, 408, 410, 412,
	419, 424, 438, 439, 440, 441, 442, 445, 446, 451,
	452, 453, 454, 455, 463, 464, 468, 486, 488, 500,
	515, 520, 444, 282, 495, 521, 0, 352, 0, 0,
	354, 264, 285, 297, 0, 510, 465, 214, 430, 273,
	236, 749, 0, 202, 233, 217, 242, 257, 260, 301,
	363, 370, 399, 404, 279, 254, 231, 423, 228, 448,
	471, 472, 473, 475, 367, 249, 403, 0, 368, 350,
	477, 478, 293, 476, 0, 651, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 0,
	637, 0, 0, 0, 253, 642, 0, 0, 0, 341,
	250, 0, 0, 400, 0, 197, 0, 450, 237, 351,
	348, 483, 265, 256, 252, 235, 294, 358, 398, 470,
	392, 650, 345, 0, 0, 460, 371, 0, 0, 0,
	0, 0, 645, 646, 0, 0, 0, 0, 0, 0,
	1945, 0, 300, 234, 302, 196, 383, 461, 269, 0,
	87, 0, 0, 188, 189, 190, 742, 750, 751, 752,
	753, 754, 743, 745, 0, 0, 225, 744, 232, 662,
	664, 663, 678, 679, 680, 681, 682, 683, 684, 660,
	747, 755, 756, 1946, 248, 298, 255, 247, 480, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 620, 634, 0, 649, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 632, 0,
	0, 0, 0, 711, 0, 633, 0, 0, 641, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	798, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 372, 240, 0, 710, 0, 0,
	517, 0, 0, 708, 0, 0, 0, 0, 340, 0,
	307, 192, 212, 0, 0, 382, 425, 437, 0, 0,
	0, 238, 0, 435, 396, 499, 220, 267, 422, 402,
	433, 409, 270, 0, 0, 434, 346, 485, 416, 496,
	518, 519, 246, 376, 508, 474, 514, 532, 213, 243,
	390, 467, 502, 457, 369, 481, 482, 306, 456, 278,
	195, 344, 524, 211, 443, 229, 218, 487, 505, 272,
	420, 203, 469, 494, 226, 447, 0, 0, 534, 205,
	492, 466, 365, 303, 304, 204, 0, 421, 251, 276,
	241, 385, 489, 490, 239, 535, 215, 513, 207, 0,
	512, 378, 484, 493, 366, 356, 206, 491, 364, 355,
	311, 673, 674, 263, 287, 414, 349, 415, 288, 374,
	373, 375, 199, 503, 0, 200, 0, 462, 504, 536,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	292, 342, 389, 413, 411, 417, 0, 479, 497, 509,
	516, 522, 523, 525, 526, 527, 528, 529, 531, 530,
	377, 291, 458, 310, 347, 0, 0, 395, 436, 227,
	501, 459, 717, 709, 655, 721, 657, 718, 719, 652,
	653, 656, 720, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 0, 712, 640, 639, 0, 647, 648, 0, 658,
	659, 661, 665, 666, 667, 675, 676, 677, 685, 687,
	688, 686, 689, 690, 691, 694, 695, 696, 697, 692,
	693, 698, 731, 732, 733, 734, 735, 736, 668, 672,
	671, 669, 670, 638, 191, 208, 343, 0, 418, 271,
	533, 511, 506, 198, 210, 722, 245, 723, 0, 0,
	727, 0, 0, 0, 729, 728, 0, 730, 702, 701,
	0, 0, 724, 725, 0, 726, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 290, 295, 296, 299, 305, 353, 359, 360, 361,
	362, 379, 380, 381, 384, 387, 388, 391, 393, 394,
	397, 401, 405, 406, 407, 408, 410, 412, 419, 424,
	438, 439, 440, 441, 442, 445, 446, 451, 452, 453,
	454, 455, 463, 464, 468, 486, 488, 500, 515, 520,
	444, 282, 495, 521, 0, 352, 0, 0, 354, 264,
	285, 297, 0, 510, 465, 214, 430, 273, 236, 749,
	0, 202, 233, 217, 242, 257, 260, 301, 363, 370,
	399, 404, 279, 254, 231, 423, 228, 448, 471, 472,
	473, 475, 367, 249, 403, 0, 0, 350, 477, 478,
	293, 368, 0, 0, 0, 78, 476, 0, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 637, 0, 0, 0, 253, 642, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 650, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 87, 0, 0, 188, 189, 190, 742,
	750, 751, 752, 753, 754, 743, 745, 0, 0, 225,
	744, 232, 662, 664, 663, 678, 679, 680, 681, 682,
	683, 684, 660, 747, 755, 756, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 620, 634, 0,
	649, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	631, 632, 0, 0, 0, 0, 711, 0, 633, 0,
	0, 641, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	710, 0, 0, 517, 0, 0, 708, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 673, 674, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 717, 709, 655, 721, 657,
	718, 719, 652, 653, 656, 720, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 712, 640, 639, 0, 647,
	648, 0, 658, 659, 661, 665, 666, 667, 675, 676,
	677, 685, 687, 688, 686, 689, 690, 691, 694, 695,
	696, 697, 692, 693, 698, 731, 732, 733, 734, 735,
	736, 668, 672, 671, 669, 670, 638, 191, 208, 343,
	86, 418, 271, 533, 511, 506, 198, 210, 722, 245,
	723, 0, 0, 727, 0, 0, 0, 729, 728, 0,
	730, 702, 701, 0, 0, 724, 725, 0, 726, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 749, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 651, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 637, 0, 0, 0, 253, 642, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 650, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 645, 646, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 87, 0, 0, 188, 189, 190, 742, 750, 751,
	752, 753, 754, 743, 745, 0, 0, 225, 744, 232,
	662, 664, 663, 678, 679, 680, 681, 682, 683, 684,
	660, 747, 755, 756, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 620, 634, 0, 649, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 631, 632,
	0, 0, 0, 0, 711, 0, 633, 0, 0, 641,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 710, 0,
	0, 517, 0, 0, 708, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 3171, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 673, 674, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 717, 709, 655, 721, 657, 718, 719,
	652, 653, 656, 720, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 712, 640, 639, 0, 647, 648, 0,
	658, 659, 661, 665, 666, 667, 675, 676, 677, 685,
	687, 688, 686, 689, 690, 691, 694, 695, 696, 697,
	692, 693, 698, 731, 732, 733, 734, 735, 736, 668,
	672, 671, 669, 670, 638, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 722, 245, 723, 0,
	0, 727, 0, 0, 0, 729, 728, 0, 730, 702,
	701, 0, 0, 724, 725, 0, 726, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	749, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 637,
	0, 0, 0, 253, 642, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	650, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 645, 646, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 87,
	0, 1401, 188, 189, 190, 742, 750, 751, 752, 753,
	754, 743, 745, 0, 0, 225, 744, 232, 662, 664,
	663, 678, 679, 680, 681, 682, 683, 684, 660, 747,
	755, 756, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 620, 634, 0, 649, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 632, 0, 0,
	0, 0, 711, 0, 633, 0, 0, 641, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 710, 0, 0, 517,
	0, 0, 708, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	673, 674, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 717, 709, 655, 721, 657, 718, 719, 652, 653,
	656, 720, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 712, 640, 639, 0, 647, 648, 0, 658, 659,
	661, 665, 666, 667, 675, 676, 677, 685, 687, 688,
	686, 689, 690, 691, 694, 695, 696, 697, 692, 693,
	698, 731, 732, 733, 734, 735, 736, 668, 672, 671,
	669, 670, 638, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 722, 245, 723, 0, 0, 727,
	0, 0, 0, 729, 728, 0, 730, 702, 701, 0,
	0, 724, 725, 0, 726, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 749, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 651, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 637, 0, 0,
	0, 253, 642, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 650, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 645,
	646, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 87, 0, 0,
	188, 189, 190, 742, 750, 751, 752, 753, 754, 743,
	745, 0, 0, 225, 744, 232, 662, 664, 663, 678,
	679, 680, 681, 682, 683, 684, 660, 747, 755, 756,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 620, 634, 0, 649, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 631, 632, 838, 0, 0, 0,
	711, 0, 633, 0, 0, 641, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 710, 0, 0, 517, 0, 0,
	708, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 673, 674,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 717,
	709, 655, 721, 657, 718, 719, 652, 653, 656, 720,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 712,
	640, 639, 0, 647, 648, 0, 658, 659, 661, 665,
	666, 667, 675, 676, 677, 685, 687, 688, 686, 689,
	690, 691, 694, 695, 696, 697, 692, 693, 698, 731,
	732, 733, 734, 735, 736, 668, 672, 671, 669, 670,
	638, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 722, 245, 723, 0, 0, 727, 0, 0,
	0, 729, 728, 0, 730, 702, 701, 0, 0, 724,
	725, 0, 726, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 749, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 637, 0, 0, 0, 253,
	642, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 650, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 645, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 87, 0, 0, 188, 189,
	190, 742, 750, 751, 752, 753, 754, 743, 745, 0,
	0, 225, 744, 232, 662, 664, 663, 678, 679, 680,
	681, 682, 683, 684, 660, 747, 755, 756, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 620,
	634, 0, 649, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 631, 632, 0, 0, 0, 0, 711, 0,
	633, 0, 0, 641, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 798, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 710, 0, 0, 517, 0, 0, 708, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 673, 674, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 717, 709, 655,
	721, 657, 718, 719, 652, 653, 656, 720, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 712, 640, 639,
	0, 647, 648, 0, 658, 659, 661, 665, 666, 667,
	675, 676, 677, 685, 687, 688, 686, 689, 690, 691,
	694, 695, 696, 697, 692, 693, 698, 731, 732, 733,
	734, 735, 736, 668, 672, 671, 669, 670, 638, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	722, 245, 723, 0, 0, 727, 0, 0, 0, 729,
	728, 0, 730, 702, 701, 0, 0, 724, 725, 0,
	726, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 749, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 637, 0, 0, 0, 253, 642, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 650, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 645, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 87, 0, 0, 188, 189, 190, 742,
	750, 751, 752, 753, 754, 743, 745, 0, 0, 225,
	744, 232, 662, 664, 663, 678, 679, 680, 681, 682,
	683, 684, 660, 747, 755, 756, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 634, 0,
	649, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	631, 632, 0, 0, 0, 0, 711, 0, 633, 0,
	0, 641, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	710, 0, 0, 517, 0, 0, 708, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 673, 674, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 717, 709, 655, 721, 657,
	718, 719, 652, 653, 656, 720, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 712, 640, 639, 0, 647,
	648, 0, 658, 659, 661, 665, 666, 667, 675, 676,
	677, 685, 687, 688, 686, 689, 690, 691, 694, 695,
	696, 697, 692, 693, 698, 731, 732, 733, 734, 735,
	736, 668, 672, 671, 669, 670, 638, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 722, 245,
	723, 0, 0, 727, 0, 0, 0, 729, 728, 0,
	730, 702, 701, 0, 0, 724, 725, 0, 726, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 749, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 750, 751,
	0, 0, 0, 0, 1750, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	787, 788, 789, 790, 791, 792, 793, 794, 795, 796,
	797, 798, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 1358, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1358, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	366, 0, 556, 985, 970, 473, 0, 913, 988, 882,
	901, 998, 904, 907, 949, 861, 927, 384, 898, 854,
	886, 856, 893, 857, 884, 915, 253, 881, 972, 931,
	987, 338, 250, 863, 887, 398, 903, 197, 951, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 994, 342, 937, 0, 457, 369, 0,
	0, 1358, 917, 976, 925, 963, 912, 950, 871, 936,
	989, 899, 946, 990, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 3172,
	0, 3173, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 895, 943, 984, 896, 945, 248, 297, 255, 247,
	477, 995, 975, 860, 924, 983, 1593, 0, 216, 986,
	919, 0, 948, 0, 1001, 855, 939, 0, 858, 862,
	997, 979, 890, 258, 0, 0, 0, 0, 0, 0,
	0, 916, 926, 960, 964, 910, 0, 0, 0, 0,
	0, 0, 0, 888, 0, 935, 0, 0, 0, 867,
	859, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 914, 0, 0, 0, 0, 870, 0,
	889, 961, 0, 853, 280, 864, 370, 240, 0, 968,
	978, 911, 514, 982, 909, 908, 955, 868, 974, 902,
	337, 866, 306, 192, 212, 0, 900, 380, 424, 434,
	973, 885, 894, 238, 892, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 934, 953, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 1193, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 880, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 969, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 958, 1000, 393, 433,
	227, 498, 456, 875, 879, 873, 940, 874, 929, 930,
	876, 991, 992, 993, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 962, 869, 0, 877, 878, 0, 971,
	980, 981, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 933, 191, 208, 340, 996, 417, 271, 529, 508,
	503, 198, 210, 872, 245, 883, 891, 0, 897, 905,
	906, 918, 920, 921, 922, 923, 941, 942, 944, 952,
	954, 957, 959, 966, 977, 999, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 932, 938, 352, 264, 285, 296,
	947, 507, 462, 214, 429, 273, 236, 965, 967, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 928, 956, 347, 474, 475, 292, 366,
	0, 0, 985, 970, 473, 0, 913, 988, 882, 901,
	998, 904, 907, 949, 861, 927, 384, 898, 854, 886,
	856, 893, 857, 884, 915, 253, 881, 972, 931, 987,
	338, 250, 863, 887, 398, 903, 197, 951, 447, 237,
	348, 345, 480, 265, 256, 252, 235, 293, 356, 396,
	467, 390, 994, 342, 937, 0, 457, 369, 0, 0,
	0, 917, 976, 925, 963, 912, 950, 871, 936, 989,
	899, 946, 990, 299, 234, 301, 196, 381, 458, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	895, 943, 984, 896, 945, 248, 297, 255, 247, 477,
	995, 975, 860, 924, 983, 0, 0, 216, 986, 919,
	0, 948, 0, 1001, 855, 939, 0, 858, 862, 997,
	979, 890, 258, 0, 0, 0, 0, 0, 0, 0,
	916, 926, 960, 964, 910, 0, 0, 0, 0, 0,
	2549, 0, 888, 0, 935, 0, 0, 0, 867, 859,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 914, 0, 0, 0, 0, 870, 0, 889,
	961, 0, 853, 280, 864, 370, 240, 0, 968, 978,
	911, 514, 982, 909, 908, 955, 868, 974, 902, 337,
	866, 306, 192, 212, 0, 900, 380, 424, 434, 973,
	885, 894, 238, 892, 432, 394, 496, 220, 267, 421,
	400, 430, 407, 270, 934, 953, 431, 343, 482, 415,
	493, 515, 516, 246, 374, 505, 471, 511, 528, 213,
	243, 388, 464, 499, 454, 367, 478, 479, 305, 453,
	278, 195, 341, 521, 211, 440, 229, 218, 484, 502,
	272, 419, 203, 466, 491, 226, 444, 0, 0, 530,
	205, 489, 463, 363, 302, 303, 204, 0, 420, 251,
	276, 241, 383, 486, 487, 239, 531, 215, 510, 207,
	1193, 509, 376, 481, 490, 364, 354, 206, 488, 362,
	353, 308, 327, 328, 263, 287, 412, 346, 413, 288,
	372, 371, 373, 199, 500, 0, 200, 0, 459, 501,
	532, 221, 222, 224, 880, 262, 266, 274, 277, 283,
	284, 291, 339, 387, 411, 409, 416, 969, 476, 494,
	506, 513, 519, 520, 522, 523, 524, 525, 527, 526,
	375, 290, 455, 307, 344, 958, 1000, 393, 433, 227,
	498, 456, 875, 879, 873, 940, 874, 929, 930, 876,
	991, 992, 993, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 0, 962, 869, 0, 877, 878, 0, 971, 980,
	981, 551, 355, 446, 495, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 425, 426, 427, 428, 275, 504, 350, 414,
	933, 191, 208, 340, 996, 417, 271, 529, 508, 503,
	198, 210, 872, 245, 883, 891, 0, 897, 905, 906,
	918, 920, 921, 922, 923, 941, 942, 944, 952, 954,
	957, 959, 966, 977, 999, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 351, 357, 358, 359, 360, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 418, 423, 435, 436, 437,
	438, 439, 442, 443, 448, 449, 450, 451, 452, 460,
	461, 465, 483, 485, 497, 512, 517, 441, 282, 492,
	518, 0, 349, 932, 938, 352, 264, 285, 296, 947,
	507, 462, 214, 429, 273, 236, 965, 967, 202, 233,
	217, 242, 257, 260, 300, 361, 368, 397, 402, 279,
	254, 231, 422, 228, 445, 468, 469, 470, 472, 365,
	249, 401, 928, 956, 347, 474, 475, 292, 366, 0,
	0, 985, 970, 473, 0, 913, 988, 882, 901, 998,
	904, 907, 949, 861, 927, 384, 898, 854, 886, 856,
	893, 857, 884, 915, 253, 881, 972, 931, 987, 338,
	250, 863, 887, 398, 903, 197, 951, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 994, 342, 937, 0, 457, 369, 0, 0, 0,
	917, 976, 925, 963, 912, 950, 871, 936, 989, 899,
	946, 990, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 895,
	943, 984, 896, 945, 248, 297, 255, 247, 477, 995,
	975, 860, 924, 983, 0, 0, 216, 986, 919, 0,
	948, 0, 1001, 855, 939, 0, 858, 862, 997, 979,
	890, 258, 0, 0, 0, 0, 0, 0, 0, 916,
	926, 960, 964, 910, 0, 0, 0, 0, 0, 2508,
	0, 888, 0, 935, 0, 0, 0, 867, 859, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 914, 0, 0, 0, 0, 870, 0, 889, 961,
	0, 853, 280, 864, 370, 240, 0, 968, 978, 911,
	514, 982, 909, 908, 955, 868, 974, 902, 337, 866,
	306, 192, 212, 0, 900, 380, 424, 434, 973, 885,
	894, 238, 892, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 934, 953, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 1193,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 880, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 969, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 958, 1000, 393, 433, 227, 498,
	456, 875, 879, 873, 940, 874, 929, 930, 876, 991,
	992, 993, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 962, 869, 0, 877, 878, 0, 971, 980, 981,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 933,
	191, 208, 340, 996, 417, 271, 529, 508, 503, 198,
	210, 872, 245, 883, 891, 0, 897, 905, 906, 918,
	920, 921, 922, 923, 941, 942, 944, 952, 954, 957,
	959, 966, 977, 999, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 932, 938, 352, 264, 285, 296, 947, 507,
	462, 214, 429, 273, 236, 965, 967, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 928, 956, 347, 474, 475, 292, 366, 0, 0,
	985, 970, 473, 0, 913, 988, 882, 901, 998, 904,
	907, 949, 861, 927, 384, 898, 854, 886, 856, 893,
	857, 884, 915, 253, 881, 972, 931, 987, 338, 250,
	863, 887, 398, 903, 197, 951, 447, 237, 348, 345,
	480, 265, 256, 252, 235, 293, 356, 396, 467, 390,
	994, 342, 937, 0, 457, 369, 0, 0, 0, 917,
	976, 925, 963, 912, 950, 871, 936, 989, 899, 946,
	990, 299, 234, 301, 196, 381, 458, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 895, 943,
	984, 896, 945, 248, 297, 255, 247, 477, 995, 975,
	860, 924, 983, 0, 0, 216, 986, 919, 0, 948,
	0, 1001, 855, 939, 0, 858, 862, 997, 979, 890,
	258, 0, 0, 0, 0, 0, 0, 0, 916, 926,
	960, 964, 910, 0, 0, 0, 0, 0, 1905, 0,
	888, 0, 935, 0, 0, 0, 867, 859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	914, 0, 0, 0, 0, 870, 0, 889, 961, 0,
	853, 280, 864, 370, 240, 0, 968, 978, 911, 514,
	982, 909, 908, 955, 868, 974, 902, 337, 866, 306,
	192, 212, 0, 900, 380, 424, 434, 973, 885, 894,
	238, 892, 432, 394, 496, 220, 267, 421, 400, 430,
	407, 270, 934, 953, 431, 343, 482, 415, 493, 515,
	516, 246, 374, 505, 471, 511, 528, 213, 243, 388,
	464, 499, 454, 367, 478, 479, 305, 453, 278, 195,
	341, 521, 211, 440, 229, 218, 484, 502, 272, 419,
	203, 466, 491, 226, 444, 0, 0, 530, 205, 489,
	463, 363, 302, 303, 204, 0, 420, 251, 276, 241,
	383, 486, 487, 239, 531, 215, 510, 207, 1193, 509,
	376, 481, 490, 364, 354, 206, 488, 362, 353, 308,
	327, 328, 263, 287, 412, 346, 413, 288, 372, 371,
	373, 199, 500, 0, 200, 0, 459, 501, 532, 221,
	222, 224, 880, 262, 266, 274, 277, 283, 284, 291,
	339, 387, 411, 409, 416, 969, 476, 494, 506, 513,
	519, 520, 522, 523, 524, 525, 527, 526, 375, 290,
	455, 307, 344, 958, 1000, 393, 433, 227, 498, 456,
	875, 879, 873, 940, 874, 929, 930, 876, 991, 992,
	993, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 0,
	962, 869, 0, 877, 878, 0, 971, 980, 981, 551,
	355, 446, 495, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	425, 426, 427, 428, 275, 504, 350, 414, 933, 191,
	208, 340, 996, 417, 271, 529, 508, 503, 198, 210,
	872, 245, 883, 891, 0, 897, 905, 906, 918, 920,
	921, 922, 923, 941, 942, 944, 952, 954, 957, 959,
	966, 977, 999, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 351, 357, 358, 359, 360, 377, 378, 379, 382,
	385, 386, 389, 391, 392, 395, 399, 403, 404, 405,
	406, 408, 410, 418, 423, 435, 436, 437, 438, 439,
	442, 443, 448, 449, 450, 451, 452, 460, 461, 465,
	483, 485, 497, 512, 517, 441, 282, 492, 518, 0,
	349, 932, 938, 352, 264, 285, 296, 947, 507, 462,
	214, 429, 273, 236, 965, 967, 202, 233, 217, 242,
	257, 260, 300, 361, 368, 397, 402, 279, 254, 231,
	422, 228, 445, 468, 469, 470, 472, 365, 249, 401,
	928, 956, 347, 474, 475, 292, 366, 0, 0, 985,
	970, 473, 0, 913, 988, 882, 901, 998, 904, 907,
	949, 861, 927, 384, 898, 854, 886, 856, 893, 857,
	884, 915, 253, 881, 972, 931, 987, 338, 250, 863,
	887, 398, 903, 197, 951, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 994,
	342, 937, 0, 457, 369, 0, 0, 0, 917, 976,
	925, 963, 912, 950, 871, 936, 989, 899, 946, 990,
	299, 234, 301, 196, 381, 458, 269, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 895, 943, 984,
	896, 945, 248, 297, 255, 247, 477, 995, 975, 860,
	924, 983, 0, 0, 216, 986, 919, 0, 948, 0,
	1001, 855, 939, 0, 858, 862, 997, 979, 890, 258,
	0, 0, 0, 0, 0, 0, 0, 916, 926, 960,
	964, 910, 0, 0, 0, 0, 0, 0, 0, 888,
	0, 935, 0, 0, 0, 867, 859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 914,
	0, 0, 0, 0, 870, 0, 889, 961, 0, 853,
	280, 864, 370, 240, 0, 968, 978, 911, 514, 982,
	909, 908, 955, 868, 974, 902, 337, 866, 306, 192,
	212, 0, 900, 380, 424, 434, 973, 885, 894, 238,
	892, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 934, 953, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 1193, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 880, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 969, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 958, 1000, 393, 433, 227, 498, 456, 875,
	879, 873, 940, 874, 929, 930, 876, 991, 992, 993,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 962,
	869, 0, 877, 878, 0, 971, 980, 981, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 933, 191, 208,
	340, 996, 417, 271, 529, 508, 503, 198, 210, 872,
	245, 883, 891, 0, 897, 905, 906, 918, 920, 921,
	922, 923, 941, 942, 944, 952, 954, 957, 959, 966,
	977, 999, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	932, 938, 352, 264, 285, 296, 947, 507, 462, 214,
	429, 273, 236, 965, 967, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 928,
	956, 347, 474, 475, 292, 366, 0, 0, 985, 970,
	473, 0, 913, 988, 882, 901, 998, 904, 907, 949,
	861, 927, 384, 898, 854, 886, 856, 893, 857, 884,
	915, 253, 881, 972, 931, 987, 338, 250, 863, 887,
	398, 903, 197, 951, 447, 237, 348, 345, 480, 265,
	256, 252, 235, 293, 356, 396, 467, 390, 994, 342,
	937, 0, 457, 369, 0, 0, 0, 917, 976, 925,
	963, 912, 950, 871, 936, 989, 899, 946, 990, 299,
	234, 301, 196, 381, 458, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 895, 943, 984, 896,
	945, 248, 297, 255, 247, 477, 995, 975, 860, 924,
	983, 0, 0, 216, 986, 919, 0, 948, 0, 1001,
	855, 939, 0, 858, 862, 997, 979, 890, 258, 0,
	0, 0, 0, 0, 0, 0, 916, 926, 960, 964,
	910, 0, 0, 0, 0, 0, 0, 0, 888, 0,
	935, 0, 0, 0, 867, 859, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 914, 0,
	0, 0, 0, 870, 0, 889, 961, 0, 853, 280,
	864, 370, 240, 0, 968, 978, 911, 514, 982, 909,
	908, 955, 868, 974, 902, 337, 866, 306, 192, 212,
	0, 900, 380, 424, 434, 973, 885, 894, 238, 892,
	432, 394, 496, 220, 267, 421, 400, 430, 407, 270,
	934, 953, 431, 343, 482, 415, 493, 515, 516, 246,
	374, 505, 471, 511, 528, 213, 243, 388, 464, 499,
	454, 367, 478, 479, 305, 453, 278, 195, 341, 521,
	211, 440, 229, 218, 484, 502, 272, 419, 203, 466,
	491, 226, 444, 0, 0, 530, 205, 489, 463, 363,
	302, 303, 204, 0, 420, 251, 276, 241, 383, 486,
	487, 239, 531, 215, 510, 207, 1193, 509, 376, 481,
	490, 364, 354, 206, 488, 362, 353, 308, 327, 328,
	263, 287, 412, 346, 413, 288, 372, 371, 373, 199,
	500, 0, 200, 0, 459, 501, 532, 221, 222, 224,
	880, 262, 266, 274, 277, 283, 284, 291, 339, 387,
	411, 409, 416, 969, 476, 494, 506, 513, 519, 520,
	522, 523, 524, 525, 527, 526, 375, 290, 455, 307,
	344, 958, 1000, 393, 433, 227, 498, 456, 875, 879,
	873, 940, 874, 929, 930, 876, 991, 992, 993, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 0, 962, 869,
	0, 877, 878, 0, 971, 980, 981, 551, 355, 446,
	495, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 425, 426,
	427, 428, 275, 504, 350, 414, 933, 191, 208, 340,
	996, 417, 271, 529, 508, 503, 198, 210, 872, 245,
	883, 891, 0, 897, 905, 906, 918, 920, 921, 922,
	923, 941, 942, 944, 952, 954, 957, 959, 966, 977,
	999, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 351,
	357, 358, 359, 360, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 418, 423, 435, 436, 437, 438, 439, 442, 443,
	448, 449, 450, 451, 452, 460, 461, 465, 483, 485,
	497, 512, 517, 441, 282, 492, 518, 0, 349, 932,
	938, 352, 264, 285, 296, 947, 507, 462, 214, 429,
	273, 236, 965, 967, 202, 233, 217, 242, 257, 260,
	300, 361, 368, 397, 402, 279, 254, 231, 422, 228,
	445, 468, 469, 470, 472, 365, 249, 401, 928, 956,
	347, 474, 475, 292, 366, 0, 0, 985, 970, 473,
	0, 913, 988, 882, 901, 998, 904, 907, 949, 861,
	927, 384, 898, 854, 886, 856, 893, 857, 884, 915,
	253, 881, 972, 931, 987, 338, 250, 863, 887, 398,
	903, 197, 951, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 994, 342, 937,
	0, 457, 369, 0, 0, 0, 917, 976, 925, 963,
	912, 950, 871, 936, 989, 899, 946, 990, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 895, 943, 984, 896, 945,
	248, 297, 255, 247, 477, 995, 975, 860, 924, 983,
	0, 0, 1002, 986, 919, 0, 948, 0, 1001, 855,
	939, 0, 858, 862, 997, 979, 890, 258, 0, 0,
	0, 0, 0, 0, 0, 916, 926, 960, 964, 910,
	0, 0, 0, 0, 0, 0, 0, 888, 0, 935,
	0, 0, 0, 867, 859, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 914, 0, 0,
	0, 0, 870, 0, 889, 961, 0, 853, 280, 864,
	370, 240, 0, 968, 978, 911, 514, 982, 909, 908,
	955, 868, 974, 902, 337, 866, 306, 192, 212, 0,
	900, 380, 424, 434, 973, 885, 894, 238, 892, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 934,
	953, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 865, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 880,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 969, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 852, 846, 845, 307, 344,
	958, 1000, 393, 433, 227, 498, 456, 875, 879, 873,
	940, 874, 929, 930, 876, 991, 992, 993, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 962, 869, 0,
	877, 878, 0, 971, 980, 981, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 933, 191, 208, 340, 996,
	417, 271, 529, 508, 503, 198, 210, 872, 245, 883,
	891, 0, 897, 905, 906, 918, 920, 921, 922, 923,
	941, 942, 944, 952, 954, 957, 959, 966, 977, 999,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 932, 938,
	352, 264, 285, 296, 947, 507, 462, 214, 429, 273,
	236, 965, 967, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 928, 956, 347,
	474, 475, 292, 366, 0, 0, 985, 970, 473, 0,
	913, 988, 882, 901, 998, 904, 907, 949, 861, 927,
	384, 898, 854, 886, 856, 893, 857, 884, 915, 253,
	881, 972, 931, 987, 338, 250, 863, 887, 398, 903,
	197, 951, 447, 237, 348, 345, 480, 265, 256, 252,
	235, 293, 356, 396, 467, 390, 994, 342, 937, 0,
	457, 369, 0, 0, 0, 917, 976, 925, 963, 912,
	950, 871, 936, 989, 899, 946, 990, 299, 234, 301,
	196, 381, 458, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 895, 943, 984, 896, 945, 248,
	297, 255, 247, 477, 995, 975, 860, 924, 983, 0,
	0, 1002, 986, 919, 0, 948, 0, 1001, 855, 939,
	0, 858, 862, 997, 979, 890, 258, 0, 0, 0,
	0, 0, 0, 0, 916, 926, 960, 964, 910, 0,
	0, 0, 0, 0, 0, 0, 888, 0, 935, 0,
	0, 0, 867, 859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 914, 0, 0, 0,
	0, 870, 0, 889, 961, 0, 853, 280, 864, 370,
	240, 0, 968, 978, 911, 514, 982, 909, 908, 955,
	868, 974, 902, 337, 866, 306, 192, 212, 0, 900,
	380, 424, 434, 973, 885, 894, 238, 892, 432, 394,
	496, 220, 267, 421, 400, 430, 407, 270, 934, 953,
	431, 343, 482, 415, 493, 515, 516, 246, 374, 505,
	471, 511, 528, 213, 243, 388, 464, 499, 454, 367,
	478, 479, 305, 453, 278, 195, 341, 521, 211, 440,
	229, 218, 484, 502, 272, 419, 203, 466, 1425, 226,
	444, 0, 0, 530, 205, 489, 463, 363, 302, 303,
	204, 0, 420, 251, 276, 241, 383, 486, 487, 239,
	531, 215, 510, 207, 865, 509, 376, 481, 490, 364,
	354, 206, 488, 362, 353, 308, 327, 328, 263, 287,
	412, 346, 413, 288, 372, 371, 373, 199, 500, 0,
	200, 0, 459, 501, 532, 221, 222, 224, 880, 262,
	266, 274, 277, 283, 284, 291, 339, 387, 411, 409,
	416, 969, 476, 494, 506, 513, 519, 520, 522, 523,
	524, 525, 527, 526, 852, 846, 845, 307, 344, 958,
	1000, 393, 433, 227, 498, 456, 875, 879, 873, 940,
	874, 929, 930, 876, 991, 992, 993, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 0, 962, 869, 0, 877,
	878, 0, 971, 980, 981, 551, 355, 446, 495, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 425, 426, 427, 428,
	275, 504, 350, 414, 933, 191, 208, 340, 996, 417,
	271, 529, 508, 503, 198, 210, 872, 245, 883, 891,
	0, 897, 905, 906, 918, 920, 921, 922, 923, 941,
	942, 944, 952, 954, 957, 959, 966, 977, 999, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 351, 357, 358,
	359, 360, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 418,
	423, 435, 436, 437, 438, 439, 442, 443, 448, 449,
	450, 451, 452, 460, 461, 465, 483, 485, 497, 512,
	517, 441, 282, 492, 518, 0, 349, 932, 938, 352,
	264, 285, 296, 947, 507, 462, 214, 429, 273, 236,
	965, 967, 202, 233, 217, 242, 257, 260, 300, 361,
	368, 397, 402, 279, 254, 231, 422, 228, 445, 468,
	469, 470, 472, 365, 249, 401, 928, 956, 347, 474,
	475, 292, 366, 0, 0, 985, 970, 473, 0, 913,
	988, 882, 901, 998, 904, 907, 949, 861, 927, 384,
	898, 854, 886, 856, 893, 857, 884, 915, 253, 881,
	972, 931, 987, 338, 250, 863, 887, 398, 903, 197,
	951, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 994, 342, 937, 0, 457,
	369, 0, 0, 0, 917, 976, 925, 963, 912, 950,
	871, 936, 989, 899, 946, 990, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 895, 943, 984, 896, 945, 248, 297,
	255, 247, 477, 995, 975, 860, 924, 983, 0, 0,
	1002, 986, 919, 0, 948, 0, 1001, 855, 939, 0,
	858, 862, 997, 979, 890, 258, 0, 0, 0, 0,
	0, 0, 0, 916, 926, 960, 964, 910, 0, 0,
	0, 0, 0, 0, 0, 888, 0, 935, 0, 0,
	0, 867, 859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 914, 0, 0, 0, 0,
	870, 0, 889, 961, 0, 853, 280, 864, 370, 240,
	0, 968, 978, 911, 514, 982, 909, 908, 955, 868,
	974, 902, 337, 866, 306, 192, 212, 0, 900, 380,
	424, 434, 973, 885, 894, 238, 892, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 934, 953, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 843, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 865, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 880, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	969, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 852, 846, 845, 307, 344, 958, 1000,
	393, 433, 227, 498, 456, 875, 879, 873, 940, 874,
	929, 930, 876, 991, 992, 993, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 962, 869, 0, 877, 878,
	0, 971, 980, 981, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 933, 191, 208, 340, 996, 417, 271,
	529, 508, 503, 198, 210, 872, 245, 883, 891, 0,
	897, 905, 906, 918, 920, 921, 922, 923, 941, 942,
	944, 952, 954, 957, 959, 966, 977, 999, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 932, 938, 352, 264,
	285, 296, 947, 507, 462, 214, 429, 273, 236, 965,
	967, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 928, 956, 347, 474, 475,
	292, 366, 0, 0, 0, 0, 473, 0, 647, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 384, 0,
	0, 1842, 0, 633, 0, 0, 0, 253, 638, 0,
	0, 0, 338, 250, 0, 1843, 398, 0, 197, 0,
	447, 237, 348, 345, 480, 265, 256, 252, 235, 293,
	356, 396, 467, 390, 646, 342, 0, 0, 457, 369,
	0, 0, 0, 0, 0, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 381,
	458, 269, 0, 87, 0, 0, 188, 189, 190, 736,
	744, 745, 746, 747, 748, 737, 739, 0, 0, 225,
	738, 232, 658, 660, 659, 672, 673, 674, 675, 676,
	677, 678, 656, 741, 749, 750, 0, 248, 297, 255,
	247, 477, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 616, 630, 0,
	645, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 628, 832, 0, 0, 0, 705, 0, 629, 0,
	0, 637, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 640, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 370, 240, 0,
	704, 0, 0, 514, 0, 0, 702, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 380, 424,
	434, 0, 0, 0, 238, 0, 432, 394, 496, 220,
	267, 421, 400, 430, 407, 270, 0, 0, 431, 343,
	482, 415, 493, 515, 516, 246, 374, 505, 471, 511,
	528, 213, 243, 388, 464, 499, 454, 367, 478, 479,
	305, 453, 278, 195, 341, 521, 211, 440, 229, 218,
	484, 502, 272, 419, 203, 466, 491, 226, 444, 0,
	0, 530, 205, 489, 463, 363, 302, 303, 204, 0,
	420, 251, 276, 241, 383, 486, 487, 239, 531, 664,
	510, 207, 0, 509, 376, 481, 490, 364, 354, 206,
	488, 362, 353, 308, 667, 668, 263, 287, 412, 346,
	413, 288, 372, 371, 373, 199, 500, 0, 200, 0,
	459, 501, 532, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 387, 411, 409, 416, 0,
	476, 494, 506, 513, 519, 520, 522, 523, 524, 525,
	527, 526, 375, 290, 455, 307, 344, 0, 0, 393,
	433, 227, 498, 456, 711, 703, 651, 715, 653, 712,
	713, 648, 649, 652, 714, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 549, 550, 0, 706, 636, 635, 0, 643, 644,
	0, 654, 655, 657, 661, 662, 663, 669, 670, 671,
	679, 681, 682, 680, 683, 684, 685, 688, 689, 690,
	691, 686, 687, 692, 725, 726, 727, 728, 729, 730,
	665, 666, 634, 191, 208, 340, 0, 417, 271, 529,
	508, 503, 198, 210, 716, 245, 717, 0, 0, 721,
	0, 0, 0, 723, 722, 0, 724, 696, 695, 0,
	0, 718, 719, 0, 720, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 351, 357, 358, 359, 360,
	377, 378, 379, 382, 385, 386, 389, 391, 392, 395,
	399, 403, 404, 405, 406, 408, 410, 418, 423, 435,
	436, 437, 438, 439, 442, 443, 448, 449, 450, 451,
	452, 460, 461, 465, 483, 485, 497, 512, 517, 441,
	282, 492, 518, 0, 349, 0, 0, 352, 264, 285,
	296, 0, 507, 462, 214, 429, 273, 236, 743, 0,
	202, 233, 217, 242, 257, 260, 300, 361, 368, 397,
	402, 279, 254, 231, 422, 228, 445, 468, 469, 470,
	472, 365, 249, 401, 0, 366, 347, 474, 475, 292,
	473, 0, 647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 384, 0, 0, 0, 0, 633, 0, 0,
	0, 253, 638, 0, 0, 0, 338, 250, 0, 0,
	398, 0, 197, 0, 447, 237, 348, 345, 480, 265,
	256, 252, 235, 293, 356, 396, 467, 390, 646, 342,
	0, 0, 457, 369, 0, 0, 0, 0, 0, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 381, 458, 269, 0, 87, 0, 0,
	188, 189, 190, 736, 744, 745, 746, 747, 748, 737,
	739, 0, 0, 225, 738, 232, 658, 660, 659, 672,
	673, 674, 675, 676, 677, 678, 656, 741, 749, 750,
	0, 248, 297, 255, 247, 477, 0, 0, 1796, 1797,
	1798, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 616, 630, 0, 645, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 628, 0, 0, 0, 0,
	705, 0, 629, 0, 0, 637, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 640, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 370, 240, 0, 704, 0, 0, 514, 0, 0,
	702, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 380, 424, 434, 0, 0, 0, 238, 0,
	432, 394, 496, 220, 267, 421, 400, 430, 407, 270,
	0, 0, 431, 343, 482, 415, 493, 515, 516, 246,
	374, 505, 471, 511, 528, 213, 243, 388, 464, 499,
	454, 367, 478, 479, 305, 453, 278, 195, 341, 521,
	211, 440, 229, 218, 484, 502, 272, 419, 203, 466,
	491, 226, 444, 0, 0, 530, 205, 489, 463, 363,
	302, 303, 204, 0, 420, 251, 276, 241, 383, 486,
	487, 239, 531, 664, 510, 207, 0, 509, 376, 481,
	490, 364, 354, 206, 488, 362, 353, 308, 667, 668,
	263, 287, 412, 346, 413, 288, 372, 371, 373, 199,
	500, 0, 200, 0, 459, 501, 532, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 387,
	411, 409, 416, 0, 476, 494, 506, 513, 519, 520,
	522, 523, 524, 525, 527, 526, 375, 290, 455, 307,
	344, 0, 0, 393, 433, 227, 498, 456, 711, 703,
	651, 715, 653, 712, 713, 648, 649, 652, 714, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 0, 706, 636,
	635, 0, 643, 644, 0, 654, 655, 657, 661, 662,
	663, 669, 670, 671, 679, 681, 682, 680, 683, 684,
	685, 688, 689, 690, 691, 686, 687, 692, 725, 726,
	727, 728, 729, 730, 665, 666, 634, 191, 208, 340,
	0, 417, 271, 529, 508, 503, 198, 210, 716, 245,
	717, 0, 0, 721, 0, 0, 0, 723, 722, 0,
	724, 696, 695, 0, 0, 718, 719, 0, 720, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 351,
	357, 358, 359, 360, 377, 378, 379, 382, 385, 386,
	389, 391, 392, 395, 399, 403, 404, 405, 406, 408,
	410, 418, 423, 435, 436, 437, 438, 439, 442, 443,
	448, 449, 450, 451, 452, 460, 461, 465, 483, 485,
	497, 512, 517, 441, 282, 492, 518, 0, 349, 0,
	0, 352, 264, 285, 296, 0, 507, 462, 214, 429,
	273, 236, 743, 0, 202, 233, 217, 242, 257, 260,
	300, 361, 368, 397, 402, 279, 254, 231, 422, 228,
	445, 468, 469, 470, 472, 365, 249, 401, 0, 366,
	347, 474, 475, 292, 473, 0, 647, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 0, 0,
	0, 633, 0, 0, 0, 253, 638, 0, 0, 0,
	338, 250, 0, 0, 398, 0, 197, 0, 447, 237,
	348, 345, 480, 265, 256, 252, 235, 293, 356, 396,
	467, 390, 646, 342, 0, 0, 457, 369, 0, 0,
	0, 0, 0, 641, 642, 0, 0, 0, 0, 0,
	0, 1931, 0, 299, 234, 301, 196, 381, 458, 269,
	0, 87, 0, 0, 188, 189, 190, 736, 744, 745,
	746, 747, 748, 737, 739, 0, 0, 225, 738, 232,
	658, 660, 659, 672, 673, 674, 675, 676, 677, 678,
	656, 741, 749, 750, 1932, 248, 297, 255, 247, 477,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 616, 630, 0, 645, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 627, 628,
	0, 0, 0, 0, 705, 0, 629, 0, 0, 637,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 370, 240, 0, 704, 0,
	0, 514, 0, 0, 702, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 380, 424, 434, 0,
	0, 0, 238, 0, 432, 394, 496, 220, 267, 421,
	400, 430, 407, 270, 0, 0, 431, 343, 482, 415,
	493, 515, 516, 246, 374, 505, 471, 511, 528, 213,
	243, 388, 464, 499, 454, 367, 478, 479, 305, 453,
	278, 195, 341, 521, 211, 440, 229, 218, 484, 502,
	272, 419, 203, 466, 491, 226, 444, 0, 0, 530,
	205, 489, 463, 363, 302, 303, 204, 0, 420, 251,
	276, 241, 383, 486, 487, 239, 531, 664, 510, 207,
	0, 509, 376, 481, 490, 364, 354, 206, 488, 362,
	353, 308, 667, 668, 263, 287, 412, 346, 413, 288,
	372, 371, 373, 199, 500, 0, 200, 0, 459, 501,
	532, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 387, 411, 409, 416, 0, 476, 494,
	506, 513, 519, 520, 522, 523, 524, 525, 527, 526,
	375, 290, 455, 307, 344, 0, 0, 393, 433, 227,
	498, 456, 711, 703, 651, 715, 653, 712, 713, 648,
	649, 652, 714, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 0, 706, 636, 635, 0, 643, 644, 0, 654,
	655, 657, 661, 662, 663, 669, 670, 671, 679, 681,
	682, 680, 683, 684, 685, 688, 689, 690, 691, 686,
	687, 692, 725, 726, 727, 728, 729, 730, 665, 666,
	634, 191, 208, 340, 0, 417, 271, 529, 508, 503,
	198, 210, 716, 245, 717, 0, 0, 721, 0, 0,
	0, 723, 722, 0, 724, 696, 695, 0, 0, 718,
	719, 0, 720, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 351, 357, 358, 359, 360, 377, 378,
	379, 382, 385, 386, 389, 391, 392, 395, 399, 403,
	404, 405, 406, 408, 410, 418, 423, 435, 436, 437,
	438, 439, 442, 443, 448, 449, 450, 451, 452, 460,
	461, 465, 483, 485, 497, 512, 517, 441, 282, 492,
	518, 0, 349, 0, 0, 352, 264, 285, 296, 0,
	507, 462, 214, 429, 273, 236, 743, 0, 202, 233,
	217, 242, 257, 260, 300, 361, 368, 397, 402, 279,
	254, 231, 422, 228, 445, 468, 469, 470, 472, 365,
	249, 401, 0, 0, 347, 474, 475, 292, 366, 0,
	0, 0, 78, 473, 0, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	633, 0, 0, 0, 253, 638, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 646, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	87, 0, 0, 188, 189, 190, 736, 744, 745, 746,
	747, 748, 737, 739, 0, 0, 225, 738, 232, 658,
	660, 659, 672, 673, 674, 675, 676, 677, 678, 656,
	741, 749, 750, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 616, 630, 0, 645, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 627, 628, 0,
	0, 0, 0, 705, 0, 629, 0, 0, 637, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 704, 0, 0,
	514, 0, 0, 702, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 664, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 667, 668, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 711, 703, 651, 715, 653, 712, 713, 648, 649,
	652, 714, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 706, 636, 635, 0, 643, 644, 0, 654, 655,
	657, 661, 662, 663, 669, 670, 671, 679, 681, 682,
	680, 683, 684, 685, 688, 689, 690, 691, 686, 687,
	692, 725, 726, 727, 728, 729, 730, 665, 666, 634,
	191, 208, 340, 86, 417, 271, 529, 508, 503, 198,
	210, 716, 245, 717, 0, 0, 721, 0, 0, 0,
	723, 722, 0, 724, 696, 695, 0, 0, 718, 719,
	0, 720, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 743, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 647,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 633, 0, 0, 0, 253, 638,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 646, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 87, 0, 0, 188, 189, 190,
	736, 744, 745, 746, 747, 748, 737, 739, 0, 0,
	225, 738, 232, 658, 660, 659, 672, 673, 674, 675,
	676, 677, 678, 656, 741, 749, 750, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 616, 630,
	0, 645, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 627, 628, 0, 0, 0, 0, 705, 0, 629,
	0, 0, 637, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 640, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 704, 0, 0, 514, 0, 0, 702, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 3159, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	664, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 667, 668, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 711, 703, 651, 715, 653,
	712, 713, 648, 649, 652, 714, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 706, 636, 635, 0, 643,
	644, 0, 654, 655, 657, 661, 662, 663, 669, 670,
	671, 679, 681, 682, 680, 683, 684, 685, 688, 689,
	690, 691, 686, 687, 692, 725, 726, 727, 728, 729,
	730, 665, 666, 634, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 716, 245, 717, 0, 0,
	721, 0, 0, 0, 723, 722, 0, 724, 696, 695,
	0, 0, 718, 719, 0, 720, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 743,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 633, 0,
	0, 0, 253, 638, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 646,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 87, 0,
	1392, 188, 189, 190, 736, 744, 745, 746, 747, 748,
	737, 739, 0, 0, 225, 738, 232, 658, 660, 659,
	672, 673, 674, 675, 676, 677, 678, 656, 741, 749,
	750, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 616, 630, 0, 645, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 627, 628, 0, 0, 0,
	0, 705, 0, 629, 0, 0, 637, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 640,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 704, 0, 0, 514, 0,
	0, 702, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 664, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 667,
	668, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 711,
	703, 651, 715, 653, 712, 713, 648, 649, 652, 714,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 706,
	636, 635, 0, 643, 644, 0, 654, 655, 657, 661,
	662, 663, 669, 670, 671, 679, 681, 682, 680, 683,
	684, 685, 688, 689, 690, 691, 686, 687, 692, 725,
	726, 727, 728, 729, 730, 665, 666, 634, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 716,
	245, 717, 0, 0, 721, 0, 0, 0, 723, 722,
	0, 724, 696, 695, 0, 0, 718, 719, 0, 720,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 743, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 633, 0, 0, 0, 253, 638, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 646, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 87, 0, 0, 188, 189, 190, 736, 744,
	745, 746, 747, 748, 737, 739, 0, 0, 225, 738,
	232, 658, 660, 659, 672, 673, 674, 675, 676, 677,
	678, 656, 741, 749, 750, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 616, 630, 0, 645,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 627,
	628, 832, 0, 0, 0, 705, 0, 629, 0, 0,
	637, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 640, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 704,
	0, 0, 514, 0, 0, 702, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 664, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 667, 668, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 711, 703, 651, 715, 653, 712, 713,
	648, 649, 652, 714, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 706, 636, 635, 0, 643, 644, 0,
	654, 655, 657, 661, 662, 663, 669, 670, 671, 679,
	681, 682, 680, 683, 684, 685, 688, 689, 690, 691,
	686, 687, 692, 725, 726, 727, 728, 729, 730, 665,
	666, 634, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 716, 245, 717, 0, 0, 721, 0,
	0, 0, 723, 722, 0, 724, 696, 695, 0, 0,
	718, 719, 0, 720, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 743, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 633, 0, 0, 0,
	253, 638, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 646, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 87, 0, 0, 188,
	189, 190, 736, 744, 745, 746, 747, 748, 737, 739,
	0, 0, 225, 738, 232, 658, 660, 659, 672, 673,
	674, 675, 676, 677, 678, 656, 741, 749, 750, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	616, 630, 0, 645, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 627, 628, 0, 0, 0, 0, 705,
	0, 629, 0, 0, 637, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 640, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 704, 0, 0, 514, 0, 0, 702,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 664, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 667, 668, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 711, 703, 651,
	715, 653, 712, 713, 648, 649, 652, 714, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 706, 636, 635,
	0, 643, 644, 0, 654, 655, 657, 661, 662, 663,
	669, 670, 671, 679, 681, 682, 680, 683, 684, 685,
	688, 689, 690, 691, 686, 687, 692, 725, 726, 727,
	728, 729, 730, 665, 666, 634, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 716, 245, 717,
	0, 0, 721, 0, 0, 0, 723, 722, 0, 724,
	696, 695, 0, 0, 718, 719, 0, 720, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 743, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	633, 0, 0, 0, 253, 638, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 646, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	87, 0, 0, 188, 189, 190, 736, 744, 745, 746,
	747, 748, 737, 739, 0, 0, 225, 738, 232, 658,
	660, 659, 672, 673, 674, 675, 676, 677, 678, 656,
	741, 749, 750, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 630, 0, 645, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 627, 628, 0,
	0, 0, 0, 705, 0, 629, 0, 0, 637, 751,
	752, 753, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 640, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 704, 0, 0,
	514, 0, 0, 702, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 664, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 667, 668, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 711, 703, 651, 715, 653, 712, 713, 648, 649,
	652, 714, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 706, 636, 635, 0, 643, 644, 0, 654, 655,
	657, 661, 662, 663, 669, 670, 671, 679, 681, 682,
	680, 683, 684, 685, 688, 689, 690, 691, 686, 687,
	692, 725, 726, 727, 728, 729, 730, 665, 666, 634,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 716, 245, 717, 0, 0, 721, 0, 0, 0,
	723, 722, 0, 724, 696, 695, 0, 0, 718, 719,
	0, 720, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 743, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 744, 745, 0, 0, 0, 0, 1739, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 280, 0, 372, 240, 0, 0, 0, 1058, 517,
	0, 0, 0, 0, 0, 1055, 1056, 340, 1016, 307,
	192, 212, 1049, 1053, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 0, 350, 477, 478, 293,
	368, 0, 0, 0, 78, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 341, 250, 0, 0, 400, 0, 197, 0, 450,
	237, 351, 348, 483, 265, 256, 252, 235, 294, 358,
	398, 470, 392, 0, 345, 0, 0, 460, 371, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 300, 234, 302, 196, 383, 461,
	269, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 326, 335, 334, 315, 316, 318, 320, 325, 332,
	338, 0, 0, 0, 0, 0, 248, 298, 255, 247,
	480, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 372, 240, 0, 0,
	0, 0, 517, 0, 0, 0, 0, 0, 0, 0,
	340, 0, 307, 192, 212, 0, 0, 382, 425, 437,
	0, 0, 0, 238, 0, 435, 396, 499, 220, 267,
	422, 402, 433, 409, 270, 0, 0, 434, 346, 485,
	416, 496, 518, 519, 246, 376, 508, 474, 514, 532,
	213, 243, 390, 467, 502, 457, 369, 481, 482, 306,
	456, 278, 195, 344, 524, 211, 443, 229, 218, 487,
	505, 272, 420, 203, 469, 494, 226, 447, 0, 0,
	534, 205, 492, 466, 365, 303, 304, 204, 0, 421,
	251, 276, 241, 385, 489, 490, 239, 535, 215, 513,
	207, 0, 512, 378, 484, 493, 366, 356, 206, 491,
	364, 355, 311, 330, 331, 263, 287, 414, 349, 415,
	288, 374, 373, 375, 199, 503, 0, 200, 0, 462,
	504, 536, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 292, 342, 389, 413, 411, 417, 0, 479,
	497, 509, 516, 522, 523, 525, 526, 527, 528, 529,
	531, 530, 377, 291, 458, 310, 347, 0, 0, 395,
	436, 227, 501, 459, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 555, 357, 449, 498, 312, 324, 327,
	317, 336, 0, 337, 313, 314, 319, 321, 322, 323,
	328, 329, 333, 339, 426, 427, 428, 429, 275, 507,
	289, 432, 431, 308, 309, 0, 191, 208, 343, 86,
	418, 271, 533, 511, 506, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 1933, 0, 0, 1932, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 290, 295, 296, 299, 305, 353, 359,
	360, 361, 362, 379, 380, 381, 384, 387, 388, 391,
	393, 394, 397, 401, 405, 406, 407, 408, 410, 412,
	419, 424, 438, 439, 440, 441, 442, 445, 446, 451,
	452, 453, 454, 455, 463, 464, 468, 486, 488, 500,
	515, 520, 444, 282, 495, 521, 0, 352, 0, 0,
	354, 264, 285, 297, 0, 510, 465, 214, 430, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 301,
	363, 370, 399, 404, 279, 254, 231, 423, 228, 448,
	471, 472, 473, 475, 367, 249, 403, 0, 1420, 350,
	477, 478, 293, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 0, 0, 0, 1422,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 341,
	250, 0, 0, 400, 0, 197, 0, 450, 237, 351,
	348, 483, 265, 256, 252, 235, 294, 358, 398, 470,
	392, 0, 345, 0, 0, 460, 371, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 300, 234, 302, 196, 383, 461, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 1424, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 326,
	335, 334, 315, 316, 318, 320, 325, 332, 338, 0,
	0, 0, 0, 0, 248, 298, 255, 247, 480, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	1232, 0, 1233, 1234, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 0, 0, 1052, 514, 0,
	0, 0, 0, 0, 1049, 1050, 337, 1010, 306, 192,
	212, 1043, 1047, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	1411, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 1413, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 1225, 0, 1226, 1227, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 280, 0, 372, 240, 0, 0, 0, 0,
	517, 0, 0, 0, 0, 0, 0, 0, 340, 0,
	307, 192, 212, 0, 0, 382, 425, 437, 0, 0,
	0, 238, 0, 435, 396, 499, 220, 267, 422, 402,
	433, 409, 270, 0, 0, 434, 346, 485, 416, 496,
	518, 519, 246, 376, 508, 474, 514, 532, 213, 243,
	390, 467, 502, 457, 369, 481, 482, 306, 456, 278,
	195, 344, 524, 211, 443, 229, 218, 487, 505, 272,
	420, 203, 469, 494, 226, 447, 0, 0, 534, 205,
	492, 466, 365, 303, 304, 204, 0, 421, 251, 276,
	241, 385, 489, 490, 239, 535, 215, 513, 207, 0,
	512, 378, 484, 493, 366, 356, 206, 491, 364, 355,
	311, 330, 331, 263, 287, 414, 349, 415, 288, 374,
	373, 375, 199, 503, 0, 200, 0, 462, 504, 536,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	292, 342, 389, 413, 411, 417, 0, 479, 497, 509,
	516, 522, 523, 525, 526, 527, 528, 529, 531, 530,
	377, 291, 458, 310, 347, 0, 0, 395, 436, 227,
	501, 459, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 551, 552, 553,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 357, 449, 498, 312, 324, 327, 317, 336,
	0, 337, 313, 314, 319, 321, 322, 323, 328, 329,
	333, 339, 426, 427, 428, 429, 275, 507, 289, 432,
	431, 308, 309, 0, 191, 208, 343, 0, 418, 271,
	533, 511, 506, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 290, 295, 296, 299, 305, 353, 359, 360, 361,
	362, 379, 380, 381, 384, 387, 388, 391, 393, 394,
	397, 401, 405, 406, 407, 408, 410, 412, 419, 424,
	438, 439, 440, 441, 442, 445, 446, 451, 452, 453,
	454, 455, 463, 464, 468, 486, 488, 500, 515, 520,
	444, 282, 495, 521, 0, 352, 0, 0, 354, 264,
	285, 297, 0, 510, 465, 214, 430, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 301, 363, 370,
	399, 404, 279, 254, 231, 423, 228, 448, 471, 472,
	473, 475, 367, 249, 403, 0, 368, 350, 477, 478,
	293, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 341, 250, 0,
	0, 400, 0, 197, 0, 450, 237, 351, 348, 483,
	265, 256, 252, 235, 294, 358, 398, 470, 392, 0,
	345, 0, 0, 460, 371, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	300, 234, 302, 196, 383, 461, 269, 0, 0, 0,
	0, 188, 189, 190, 1362, 1365, 0, 0, 0, 0,
	1361, 1364, 0, 0, 225, 1360, 232, 326, 335, 334,
	315, 316, 318, 320, 325, 332, 338, 0, 0, 0,
	0, 0, 248, 298, 255, 247, 480, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 372, 240, 0, 0, 0, 0, 517, 0,
	0, 0, 0, 0, 0, 0, 340, 0, 307, 192,
	212, 0, 0, 382, 425, 437, 0, 0, 0, 238,
	0, 435, 396, 499, 220, 267, 422, 402, 433, 409,
	270, 0, 0, 434, 346, 485, 416, 496, 518, 519,
	246, 376, 508, 474, 514, 532, 213, 243, 390, 467,
	502, 457, 369, 481, 482, 306, 456, 278, 195, 344,
	524, 211, 443, 229, 218, 487, 505, 272, 420, 203,
	469, 494, 226, 447, 0, 0, 534, 205, 492, 466,
	365, 303, 304, 204, 0, 421, 251, 276, 241, 385,
	489, 490, 239, 535, 215, 513, 207, 0, 512, 378,
	484, 493, 366, 356, 206, 491, 364, 355, 311, 330,
	331, 263, 287, 414, 349, 415, 288, 374, 373, 375,
	199, 503, 0, 200, 0, 462, 504, 536, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 292, 342,
	389, 413, 411, 417, 0, 479, 497, 509, 516, 522,
	523, 525, 526, 527, 528, 529, 531, 530, 377, 291,
	458, 310, 347, 0, 0, 395, 436, 227, 501, 459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 551, 552, 553, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	357, 449, 498, 312, 324, 327, 317, 336, 0, 337,
	313, 314, 319, 321, 322, 323, 328, 329, 333, 339,
	426, 427, 428, 429, 275, 507, 289, 432, 431, 308,
	309, 0, 191, 208, 343, 0, 418, 271, 533, 511,
	506, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 290,
	295, 296, 299, 305, 353, 359, 360, 361, 362, 379,
	380, 381, 384, 387, 388, 391, 393, 394, 397, 401,
	405, 406, 407, 408, 410, 412, 419, 424, 438, 439,
	440, 441, 442, 445, 446, 451, 452, 453, 454, 455,
	463, 464, 468, 486, 488, 500, 515, 520, 444, 282,
	495, 521, 0, 352, 0, 0, 354, 264, 285, 297,
	0, 510, 465, 214, 430, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 301, 363, 370, 399, 404,
	279, 254, 231, 423, 228, 448, 471, 472, 473, 475,
	367, 249, 403, 0, 0, 350, 477, 478, 293, 368,
	0, 0, 0, 78, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 87, 0, 1401, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 86, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 1353, 1356, 0, 0, 0, 0, 1352, 1355,
	0, 0, 225, 1351, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 1932, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 1884, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1603, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 0, 347,
	474, 475, 292, 366, 0, 0, 0, 78, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 398, 0,
	197, 0, 447, 237, 348, 345, 480, 265, 256, 252,
	235, 293, 356, 396, 467, 390, 0, 342, 0, 0,
	457, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 381, 458, 269, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 477, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 1882, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 1016, 307, 192, 212, 1014, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 1884, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1603, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 370,
	240, 0, 0, 0, 0, 514, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	380, 424, 434, 0, 0, 0, 238, 0, 432, 394,
	496, 220, 267, 421, 400, 430, 407, 270, 0, 0,
	431, 343, 482, 415, 493, 515, 516, 246, 374, 505,
	471, 511, 528, 213, 243, 388, 464, 499, 454, 367,
	478, 479, 305, 453, 278, 195, 341, 521, 211, 440,
	229, 218, 484, 502, 272, 419, 203, 466, 491, 226,
	444, 0, 0, 530, 205, 489, 463, 363, 302, 303,
	204, 0, 420, 251, 276, 241, 383, 486, 487, 239,
	531, 215, 510, 207, 0, 509, 376, 481, 490, 364,
	354, 206, 488, 362, 353, 308, 327, 328, 263, 287,
	412, 346, 413, 288, 372, 371, 373, 199, 500, 0,
	200, 0, 459, 501, 532, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 387, 411, 409,
	416, 0, 476, 494, 506, 513, 519, 520, 522, 523,
	524, 525, 527, 526, 375, 290, 455, 307, 344, 0,
	0, 393, 433, 227, 498, 456, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 549, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 355, 446, 495, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 425, 426, 427, 428,
	275, 504, 350, 414, 0, 191, 208, 340, 86, 417,
	271, 529, 508, 503, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 1919, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 351, 357, 358,
	359, 360, 377, 378, 379, 382, 385, 386, 389, 391,
	392, 395, 399, 403, 404, 405, 406, 408, 410, 418,
	423, 435, 436, 437, 438, 439, 442, 443, 448, 449,
	450, 451, 452, 460, 461, 465, 483, 485, 497, 512,
	517, 441, 282, 492, 518, 0, 349, 0, 0, 352,
	264, 285, 296, 0, 507, 462, 214, 429, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 361,
	368, 397, 402, 279, 254, 231, 422, 228, 445, 468,
	469, 470, 472, 365, 249, 401, 0, 0, 347, 474,
	475, 292, 366, 0, 0, 0, 78, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 87, 0, 1392, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 1401, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 86, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 1871, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 1869, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 3078, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 2247, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
=======
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 1004, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 1010, 306, 192, 212, 1008, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 1871, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 1594, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2232, 0, 0, 0, 2233, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 1445, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1444, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 0, 342, 0, 0, 457, 369, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 1392, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 0, 0, 0,
	514, 0, 0, 0, 3066, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 0,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
=======
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 87, 0, 0, 188, 189, 190,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 3207, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1603, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 1919, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1735, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1736, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 3078, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 2233,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 1934, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 2218, 0, 0, 0, 2219,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1424, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 1436, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 0, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 0,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 1701, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 1570, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 3195, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 1594, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	1568, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 1566, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 3066, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 87, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 1564, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 1562, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 1920, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 0, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 1558, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 0,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	1556, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
=======
	280, 0, 370, 240, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 1554, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 1690, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 1561, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 1529,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 1559, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 0, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 372, 240, 0, 0, 0, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	1429, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 0,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 1557, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 379, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1209, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 1555, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 1553,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 1549, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 1547, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 0, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 0,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 1545, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 1520, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 0, 0, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 1420, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 377,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 1202, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 0, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 370, 240, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 0,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 189, 190,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 820, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 607, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 366, 347, 474, 475,
	292, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 253, 0, 0, 0, 0, 338, 250, 0,
	0, 398, 0, 197, 0, 447, 237, 348, 345, 480,
	265, 256, 252, 235, 293, 356, 396, 467, 390, 0,
	342, 0, 0, 457, 369, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 381, 458, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 0, 0, 0,
	0, 0, 248, 297, 255, 247, 477, 0, 0, 0,
	0, 0, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 612, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 611, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 368, 350, 477,
	478, 293, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 341, 250,
	0, 0, 400, 0, 197, 0, 450, 237, 351, 348,
	483, 265, 256, 252, 235, 294, 358, 398, 470, 392,
	0, 345, 0, 0, 460, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 234, 302, 196, 383, 461, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 326, 335,
	334, 315, 316, 318, 320, 325, 332, 338, 0, 0,
	0, 0, 0, 248, 298, 255, 247, 480, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 370, 240, 0, 0, 554, 0, 514, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 380, 424, 434, 0, 0, 0, 238,
	0, 432, 394, 496, 220, 267, 421, 400, 430, 407,
	270, 0, 0, 431, 343, 482, 415, 493, 515, 516,
	246, 374, 505, 471, 511, 528, 213, 243, 388, 464,
	499, 454, 367, 478, 479, 305, 453, 278, 195, 341,
	521, 211, 440, 229, 218, 484, 502, 272, 419, 203,
	466, 491, 226, 444, 0, 0, 530, 205, 489, 463,
	363, 302, 303, 204, 0, 420, 251, 276, 241, 383,
	486, 487, 239, 531, 215, 510, 207, 0, 509, 376,
	481, 490, 364, 354, 206, 488, 362, 353, 308, 327,
	328, 263, 287, 412, 346, 413, 288, 372, 371, 373,
	199, 500, 0, 200, 0, 459, 501, 532, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	387, 411, 409, 416, 0, 476, 494, 506, 513, 519,
	520, 522, 523, 524, 525, 527, 526, 375, 290, 455,
	307, 344, 0, 0, 393, 433, 227, 498, 456, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 355,
	446, 495, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 425,
	426, 427, 428, 275, 504, 350, 414, 0, 191, 208,
	340, 0, 417, 271, 529, 508, 503, 198, 210, 0,
	245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	351, 357, 358, 359, 360, 377, 378, 379, 382, 385,
	386, 389, 391, 392, 395, 399, 403, 404, 405, 406,
	408, 410, 418, 423, 435, 436, 437, 438, 439, 442,
	443, 448, 449, 450, 451, 452, 460, 461, 465, 483,
	485, 497, 512, 517, 441, 282, 492, 518, 0, 349,
	0, 0, 352, 264, 285, 296, 0, 507, 462, 214,
	429, 273, 236, 0, 0, 202, 233, 217, 242, 257,
	260, 300, 361, 368, 397, 402, 279, 254, 231, 422,
	228, 445, 468, 469, 470, 472, 365, 249, 401, 0,
	366, 347, 474, 475, 292, 473, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 398, 0, 197, 0, 447,
	237, 348, 345, 480, 265, 256, 252, 235, 293, 356,
	396, 467, 390, 0, 342, 0, 0, 457, 369, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 381, 458,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	477, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 280, 0, 372, 240, 0, 0, 558, 0, 517,
	0, 0, 0, 0, 0, 0, 0, 340, 0, 307,
	192, 212, 0, 0, 382, 425, 437, 0, 0, 0,
	238, 0, 435, 396, 499, 220, 267, 422, 402, 433,
	409, 270, 0, 0, 434, 346, 485, 416, 496, 518,
	519, 246, 376, 508, 474, 514, 532, 213, 243, 390,
	467, 502, 457, 369, 481, 482, 306, 456, 278, 195,
	344, 524, 211, 443, 229, 218, 487, 505, 272, 420,
	203, 469, 494, 226, 447, 0, 0, 534, 205, 492,
	466, 365, 303, 304, 204, 0, 421, 251, 276, 241,
	385, 489, 490, 239, 535, 215, 513, 207, 0, 512,
	378, 484, 493, 366, 356, 206, 491, 364, 355, 311,
	330, 331, 263, 287, 414, 349, 415, 288, 374, 373,
	375, 199, 503, 0, 200, 0, 462, 504, 536, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 292,
	342, 389, 413, 411, 417, 0, 479, 497, 509, 516,
	522, 523, 525, 526, 527, 528, 529, 531, 530, 377,
	291, 458, 310, 347, 0, 0, 395, 436, 227, 501,
	459, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 357, 449, 498, 312, 324, 327, 317, 336, 0,
	337, 313, 314, 319, 321, 322, 323, 328, 329, 333,
	339, 426, 427, 428, 429, 275, 507, 289, 432, 431,
	308, 309, 0, 191, 208, 343, 0, 418, 271, 533,
	511, 506, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	290, 295, 296, 299, 305, 353, 359, 360, 361, 362,
	379, 380, 381, 384, 387, 388, 391, 393, 394, 397,
	401, 405, 406, 407, 408, 410, 412, 419, 424, 438,
	439, 440, 441, 442, 445, 446, 451, 452, 453, 454,
	455, 463, 464, 468, 486, 488, 500, 515, 520, 444,
	282, 495, 521, 0, 352, 0, 0, 354, 264, 285,
	297, 0, 510, 465, 214, 430, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 301, 363, 370, 399,
	404, 279, 254, 231, 423, 228, 448, 471, 472, 473,
	475, 367, 249, 403, 0, 368, 350, 477, 478, 293,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 341, 250, 0, 0,
	400, 0, 197, 0, 450, 237, 351, 348, 483, 265,
	256, 252, 235, 294, 358, 398, 470, 392, 0, 345,
	0, 0, 460, 371, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 300,
	234, 302, 196, 383, 461, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 326, 335, 334, 315,
	316, 318, 320, 325, 332, 338, 0, 0, 0, 0,
	0, 248, 298, 255, 247, 480, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 372, 240, 0, 0, 0, 0, 517, 0, 0,
	0, 0, 0, 0, 0, 340, 0, 307, 192, 212,
	0, 0, 382, 425, 437, 0, 0, 0, 238, 0,
	435, 396, 499, 220, 267, 422, 402, 433, 409, 270,
	0, 0, 434, 346, 485, 416, 496, 518, 519, 246,
	376, 508, 474, 514, 532, 213, 243, 390, 467, 502,
	457, 369, 481, 482, 306, 456, 278, 195, 344, 524,
	211, 443, 229, 218, 487, 505, 272, 420, 203, 469,
	494, 226, 447, 0, 0, 534, 205, 492, 466, 365,
	303, 304, 204, 0, 421, 251, 276, 241, 385, 489,
	490, 239, 535, 215, 513, 207, 0, 512, 378, 484,
	493, 366, 356, 206, 491, 364, 355, 311, 330, 331,
	263, 287, 414, 349, 415, 288, 374, 373, 375, 199,
	503, 0, 200, 0, 462, 504, 536, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 292, 342, 389,
	413, 411, 417, 0, 479, 497, 509, 516, 522, 523,
	525, 526, 527, 528, 529, 531, 530, 377, 291, 458,
	310, 347, 0, 0, 395, 436, 227, 501, 459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 357,
	449, 498, 312, 324, 327, 317, 336, 0, 337, 313,
	314, 319, 321, 322, 323, 328, 329, 333, 339, 426,
	427, 428, 429, 275, 507, 289, 432, 431, 308, 309,
	0, 191, 208, 343, 0, 418, 271, 533, 511, 506,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 290, 295,
	296, 299, 305, 353, 359, 360, 361, 362, 3215, 380,
	381, 384, 387, 388, 391, 393, 394, 397, 401, 405,
	406, 407, 408, 410, 412, 419, 424, 438, 439, 440,
	441, 442, 445, 446, 451, 452, 453, 454, 455, 463,
	464, 468, 486, 488, 500, 515, 520, 444, 282, 495,
	521, 0, 352, 0, 0, 354, 264, 285, 297, 0,
	510, 465, 214, 430, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 301, 363, 370, 399, 404, 279,
	254, 231, 423, 228, 448, 471, 472, 473, 475, 367,
	249, 403, 0, 368, 350, 477, 478, 293, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 341, 250, 0, 0, 400, 0,
	197, 0, 450, 237, 351, 348, 483, 265, 256, 252,
	235, 294, 358, 398, 470, 392, 0, 345, 0, 0,
	460, 371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 300, 234, 302,
	196, 383, 461, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 326, 335, 334, 315, 316, 318,
	320, 325, 332, 338, 0, 0, 0, 0, 0, 248,
	298, 255, 247, 480, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 370, 240, 0, 0,
	0, 0, 514, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 380, 424, 434,
	0, 0, 0, 238, 0, 432, 394, 496, 220, 267,
	421, 400, 430, 407, 270, 0, 0, 431, 343, 482,
	415, 493, 515, 516, 246, 374, 505, 471, 511, 528,
	213, 243, 388, 464, 499, 454, 367, 478, 479, 305,
	453, 278, 195, 341, 521, 211, 440, 229, 218, 484,
	502, 272, 419, 203, 466, 491, 226, 444, 0, 0,
	530, 205, 489, 463, 363, 302, 303, 204, 0, 420,
	251, 276, 241, 383, 486, 487, 239, 531, 215, 510,
	207, 0, 509, 376, 481, 490, 364, 354, 206, 488,
	362, 353, 308, 327, 328, 263, 287, 412, 346, 413,
	288, 372, 371, 373, 199, 500, 0, 200, 0, 459,
	501, 532, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 387, 411, 409, 416, 0, 476,
	494, 506, 513, 519, 520, 522, 523, 524, 525, 527,
	526, 375, 290, 455, 307, 344, 0, 0, 393, 433,
	227, 498, 456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 551, 355, 446, 495, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 425, 426, 427, 428, 275, 504, 350,
	414, 0, 191, 208, 340, 0, 417, 271, 529, 508,
	503, 198, 210, 0, 245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 351, 357, 358, 359, 360, 3203,
	378, 379, 382, 385, 386, 389, 391, 392, 395, 399,
	403, 404, 405, 406, 408, 410, 418, 423, 435, 436,
	437, 438, 439, 442, 443, 448, 449, 450, 451, 452,
	460, 461, 465, 483, 485, 497, 512, 517, 441, 282,
	492, 518, 0, 349, 0, 0, 352, 264, 285, 296,
	0, 507, 462, 214, 429, 273, 236, 0, 0, 202,
	233, 217, 242, 257, 260, 300, 361, 368, 397, 402,
	279, 254, 231, 422, 228, 445, 468, 469, 470, 472,
	365, 249, 401, 0, 366, 347, 474, 475, 292, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	253, 0, 0, 0, 0, 338, 250, 0, 0, 398,
	0, 197, 0, 447, 237, 348, 345, 480, 265, 256,
	252, 235, 293, 356, 396, 467, 390, 0, 342, 0,
	0, 457, 369, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 381, 458, 269, 0, 0, 0, 0, 188,
	189, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 232, 323, 332, 331, 312, 313,
	315, 317, 322, 329, 335, 0, 0, 0, 0, 0,
	248, 297, 255, 247, 477, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	370, 240, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 380, 424, 434, 0, 0, 0, 238, 0, 432,
	394, 496, 220, 267, 421, 400, 430, 407, 270, 0,
	0, 431, 343, 482, 415, 493, 515, 516, 246, 374,
	505, 471, 511, 528, 213, 243, 388, 464, 499, 454,
	367, 478, 479, 305, 453, 278, 195, 341, 521, 211,
	440, 229, 218, 484, 502, 272, 419, 203, 466, 491,
	226, 444, 0, 0, 530, 205, 489, 463, 363, 302,
	303, 204, 0, 420, 251, 276, 241, 383, 486, 487,
	239, 531, 215, 510, 207, 0, 509, 376, 481, 490,
	364, 354, 206, 488, 362, 353, 308, 327, 328, 263,
	287, 412, 346, 413, 288, 372, 371, 373, 199, 500,
	0, 200, 0, 459, 501, 532, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 387, 411,
	409, 416, 0, 476, 494, 506, 513, 519, 520, 522,
	523, 524, 525, 527, 526, 375, 290, 455, 307, 344,
	0, 0, 393, 433, 227, 498, 456, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 355, 446, 495,
	309, 321, 324, 314, 333, 0, 334, 310, 311, 316,
	318, 319, 320, 325, 326, 330, 336, 425, 426, 427,
	428, 275, 504, 350, 414, 0, 191, 208, 340, 0,
	417, 271, 529, 508, 503, 198, 210, 0, 245, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 0, 0, 0, 0, 280, 0, 372,
	240, 0, 0, 0, 0, 517, 0, 0, 0, 0,
	0, 0, 0, 340, 0, 307, 192, 212, 0, 0,
	382, 425, 437, 0, 0, 0, 238, 0, 435, 396,
	499, 220, 267, 422, 402, 433, 409, 270, 0, 0,
	434, 346, 485, 416, 496, 518, 519, 246, 376, 508,
	474, 514, 532, 213, 243, 390, 467, 502, 457, 369,
	481, 482, 306, 456, 278, 195, 344, 524, 211, 443,
	229, 218, 487, 505, 272, 420, 203, 469, 494, 226,
	447, 0, 0, 534, 205, 492, 466, 365, 303, 304,
	204, 0, 421, 251, 276, 241, 385, 489, 490, 239,
	535, 215, 513, 207, 0, 512, 378, 484, 493, 366,
	356, 206, 491, 364, 355, 311, 330, 331, 263, 287,
	414, 349, 415, 288, 374, 373, 375, 199, 503, 0,
	200, 0, 462, 504, 536, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 292, 342, 389, 413, 411,
	417, 0, 479, 497, 509, 516, 522, 523, 525, 526,
	527, 528, 529, 531, 530, 377, 291, 458, 310, 347,
	0, 0, 395, 436, 227, 501, 459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	549, 550, 551, 552, 553, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 357, 449, 498,
	312, 324, 327, 317, 336, 0, 337, 313, 314, 319,
	321, 322, 323, 328, 329, 333, 339, 426, 427, 428,
	429, 275, 507, 289, 432, 431, 308, 309, 0, 191,
	208, 343, 0, 418, 271, 533, 511, 506, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 290, 295, 296, 299,
	305, 353, 359, 360, 361, 362, 379, 380, 381, 384,
	387, 388, 391, 393, 394, 397, 401, 405, 406, 407,
	408, 410, 412, 419, 424, 438, 439, 440, 441, 442,
	445, 446, 451, 452, 453, 454, 455, 463, 464, 468,
	486, 488, 500, 515, 520, 444, 282, 495, 521, 0,
	352, 0, 0, 354, 264, 285, 297, 0, 510, 465,
	214, 430, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 301, 363, 370, 399, 404, 279, 254, 231,
	423, 228, 448, 471, 472, 473, 475, 367, 249, 403,
	0, 368, 350, 477, 478, 293, 476, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 341, 250, 0, 0, 400, 0, 197, 0,
	450, 237, 351, 348, 483, 265, 256, 252, 235, 294,
	358, 398, 470, 392, 0, 345, 0, 0, 460, 371,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 300, 234, 302, 196, 383,
	461, 269, 0, 0, 0, 0, 188, 2758, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 326, 335, 334, 315, 316, 318, 320, 325,
	332, 338, 0, 0, 0, 0, 0, 248, 298, 255,
	247, 480, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 372, 240, 0,
	0, 0, 0, 517, 0, 0, 0, 0, 0, 0,
	0, 340, 0, 307, 192, 212, 0, 0, 382, 425,
	437, 0, 0, 0, 238, 0, 435, 396, 499, 220,
	267, 422, 402, 433, 409, 270, 0, 0, 434, 346,
	485, 416, 496, 518, 519, 246, 376, 508, 474, 514,
	532, 213, 243, 390, 467, 502, 457, 369, 481, 482,
	306, 456, 278, 195, 344, 524, 211, 443, 229, 218,
	487, 505, 272, 420, 203, 469, 494, 226, 447, 0,
	0, 534, 205, 492, 466, 365, 303, 304, 204, 0,
	421, 251, 276, 241, 385, 489, 490, 239, 535, 215,
	513, 207, 0, 512, 378, 484, 493, 366, 356, 206,
	491, 364, 355, 311, 330, 331, 263, 287, 414, 349,
	415, 288, 374, 373, 375, 199, 503, 0, 200, 0,
	462, 504, 536, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 292, 342, 389, 413, 411, 417, 0,
	479, 497, 509, 516, 522, 523, 525, 526, 527, 528,
	529, 531, 530, 377, 291, 458, 310, 347, 0, 0,
	395, 436, 227, 501, 459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	551, 552, 553, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 555, 357, 449, 498, 312, 324,
	327, 317, 336, 0, 337, 313, 314, 319, 321, 322,
	323, 328, 329, 333, 339, 426, 427, 428, 429, 275,
	507, 289, 432, 431, 308, 309, 0, 191, 208, 343,
	0, 418, 271, 533, 511, 506, 198, 210, 0, 245,
=======
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 351, 357,
	358, 359, 360, 377, 378, 379, 382, 385, 386, 389,
	391, 392, 395, 399, 403, 404, 405, 406, 408, 410,
	418, 423, 435, 436, 437, 438, 439, 442, 443, 448,
	449, 450, 451, 452, 460, 461, 465, 483, 485, 497,
	512, 517, 441, 282, 492, 518, 0, 349, 0, 0,
	352, 264, 285, 296, 0, 507, 462, 214, 429, 273,
	236, 0, 0, 202, 233, 217, 242, 257, 260, 300,
	361, 368, 397, 402, 279, 254, 231, 422, 228, 445,
	468, 469, 470, 472, 365, 249, 401, 0, 366, 347,
	474, 475, 292, 473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 253, 0, 0, 0, 0, 338,
	250, 0, 0, 398, 0, 197, 0, 447, 237, 348,
	345, 480, 265, 256, 252, 235, 293, 356, 396, 467,
	390, 0, 342, 0, 0, 457, 369, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 299, 234, 301, 196, 381, 458, 269, 0,
	0, 0, 0, 188, 2747, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 0,
	0, 0, 0, 0, 248, 297, 255, 247, 477, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 290, 295, 296, 299, 305, 353,
	359, 360, 361, 362, 379, 380, 381, 384, 387, 388,
	391, 393, 394, 397, 401, 405, 406, 407, 408, 410,
	412, 419, 424, 438, 439, 440, 441, 442, 445, 446,
	451, 452, 453, 454, 455, 463, 464, 468, 486, 488,
	500, 515, 520, 444, 282, 495, 521, 0, 352, 0,
	0, 354, 264, 285, 297, 0, 510, 465, 214, 430,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	301, 363, 370, 399, 404, 279, 254, 231, 423, 228,
	448, 471, 472, 473, 475, 367, 249, 403, 0, 368,
	350, 477, 478, 293, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 386, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	341, 250, 0, 0, 400, 0, 197, 0, 450, 237,
	351, 348, 483, 265, 256, 252, 235, 294, 358, 398,
	470, 392, 0, 345, 0, 0, 460, 371, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 300, 234, 302, 196, 383, 461, 269,
	0, 0, 0, 0, 188, 2228, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	326, 335, 334, 315, 316, 318, 320, 325, 332, 338,
	0, 0, 0, 0, 0, 248, 298, 255, 247, 480,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
=======
	0, 0, 280, 0, 370, 240, 0, 0, 0, 0,
	514, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 380, 424, 434, 0, 0,
	0, 238, 0, 432, 394, 496, 220, 267, 421, 400,
	430, 407, 270, 0, 0, 431, 343, 482, 415, 493,
	515, 516, 246, 374, 505, 471, 511, 528, 213, 243,
	388, 464, 499, 454, 367, 478, 479, 305, 453, 278,
	195, 341, 521, 211, 440, 229, 218, 484, 502, 272,
	419, 203, 466, 491, 226, 444, 0, 0, 530, 205,
	489, 463, 363, 302, 303, 204, 0, 420, 251, 276,
	241, 383, 486, 487, 239, 531, 215, 510, 207, 0,
	509, 376, 481, 490, 364, 354, 206, 488, 362, 353,
	308, 327, 328, 263, 287, 412, 346, 413, 288, 372,
	371, 373, 199, 500, 0, 200, 0, 459, 501, 532,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 387, 411, 409, 416, 0, 476, 494, 506,
	513, 519, 520, 522, 523, 524, 525, 527, 526, 375,
	290, 455, 307, 344, 0, 0, 393, 433, 227, 498,
	456, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	551, 355, 446, 495, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 425, 426, 427, 428, 275, 504, 350, 414, 0,
	191, 208, 340, 0, 417, 271, 529, 508, 503, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 351, 357, 358, 359, 360, 377, 378, 379,
	382, 385, 386, 389, 391, 392, 395, 399, 403, 404,
	405, 406, 408, 410, 418, 423, 435, 436, 437, 438,
	439, 442, 443, 448, 449, 450, 451, 452, 460, 461,
	465, 483, 485, 497, 512, 517, 441, 282, 492, 518,
	0, 349, 0, 0, 352, 264, 285, 296, 0, 507,
	462, 214, 429, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 361, 368, 397, 402, 279, 254,
	231, 422, 228, 445, 468, 469, 470, 472, 365, 249,
	401, 0, 366, 347, 474, 475, 292, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 253, 0,
	0, 0, 0, 338, 250, 0, 0, 398, 0, 197,
	0, 447, 237, 348, 345, 480, 265, 256, 252, 235,
	293, 356, 396, 467, 390, 0, 342, 0, 0, 457,
	369, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 299, 234, 301, 196,
	381, 458, 269, 0, 0, 0, 0, 188, 2214, 190,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 0, 0, 0, 0, 0, 248, 297,
	255, 247, 477, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
<<<<<<< HEAD
	0, 0, 0, 280, 0, 372, 240, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 0, 0, 340,
	0, 307, 192, 212, 0, 0, 382, 425, 437, 0,
	0, 0, 238, 0, 435, 396, 499, 220, 267, 422,
	402, 433, 409, 270, 0, 0, 434, 346, 485, 416,
	496, 518, 519, 246, 376, 508, 474, 514, 532, 213,
	243, 390, 467, 502, 457, 369, 481, 482, 306, 456,
	278, 195, 344, 524, 211, 443, 229, 218, 487, 505,
	272, 420, 203, 469, 494, 226, 447, 0, 0, 534,
	205, 492, 466, 365, 303, 304, 204, 0, 421, 251,
	276, 241, 385, 489, 490, 239, 535, 215, 513, 207,
	0, 512, 378, 484, 493, 366, 356, 206, 491, 364,
	355, 311, 330, 331, 263, 287, 414, 349, 415, 288,
	374, 373, 375, 199, 503, 0, 200, 0, 462, 504,
	536, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 292, 342, 389, 413, 411, 417, 0, 479, 497,
	509, 516, 522, 523, 525, 526, 527, 528, 529, 531,
	530, 377, 291, 458, 310, 347, 0, 0, 395, 436,
	227, 501, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 357, 449, 498, 312, 324, 327, 317,
	336, 0, 337, 313, 314, 319, 321, 322, 323, 328,
	329, 333, 339, 426, 427, 428, 429, 275, 507, 289,
	432, 431, 308, 309, 0, 191, 208, 343, 0, 418,
	271, 533, 511, 506, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 290, 295, 296, 299, 305, 353, 359, 360,
	361, 362, 379, 380, 381, 384, 387, 388, 391, 393,
	394, 397, 401, 405, 406, 407, 408, 410, 412, 419,
	424, 438, 439, 440, 441, 442, 445, 446, 451, 452,
	453, 454, 455, 463, 464, 468, 486, 488, 500, 515,
	520, 444, 282, 495, 521, 0, 352, 0, 0, 354,
	264, 285, 297, 0, 510, 465, 214, 430, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 301, 363,
	370, 399, 404, 279, 254, 231, 423, 228, 448, 471,
	472, 473, 475, 367, 249, 403, 0, 0, 350, 477,
	478, 293,
}

var yyPact = [...]int{
	4162, -1000, -416, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2148, 2185, -1000, -1000,
	-1000, -1000, 2346, -1000, 750, 1854, -1000, 2138, 5313, -1000,
	44229, 484, -1000, 42993, 477, 352, 44229, -1000, 207, -1000,
	184, 44229, 189, 42375, -1000, -1000, -293, 19499, 2096, 73,
	67, 44229, -1000, -1000, -1000, -1000, 2295, 1794, -1000, 358,
	-1000, -1000, -1000, -1000, -1000, -1000, 41757, -1000, -1000, -1000,
	2160, 2149, 2348, 639, 2095, -1000, 2221, 1794, -1000, 19499,
	2282, 2202, 18881, -1000, 18881, 418, -1000, -1000, 14545, -1000,
	-1000, 25689, 44229, 31869, 742, -1000, 2138, -1000, -1000, -1000,
	97, -1000, 330, 1705, -1000, 1703, -1000, 723, 711, 351,
	481, 467, 350, 347, 346, 345, 343, 342, 341, 338,
	354, -1000, 705, 705, -125, -129, 3139, 404, 402, 402,
	681, 427, 2125, 2124, -1000, -1000, 705, 705, 705, 362,
	705, 705, 705, 705, 298, 297, 705, 705, 705, 705,
	705, 705, 705, 705, 705, 705, 705, 705, 705, 705,
	705, 705, 705, 368, 2138, 278, -1000, -1000, -1000, -1000,
=======
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 0, 370, 240,
	0, 0, 0, 0, 514, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 306, 192, 212, 0, 0, 380,
	424, 434, 0, 0, 0, 238, 0, 432, 394, 496,
	220, 267, 421, 400, 430, 407, 270, 0, 0, 431,
	343, 482, 415, 493, 515, 516, 246, 374, 505, 471,
	511, 528, 213, 243, 388, 464, 499, 454, 367, 478,
	479, 305, 453, 278, 195, 341, 521, 211, 440, 229,
	218, 484, 502, 272, 419, 203, 466, 491, 226, 444,
	0, 0, 530, 205, 489, 463, 363, 302, 303, 204,
	0, 420, 251, 276, 241, 383, 486, 487, 239, 531,
	215, 510, 207, 0, 509, 376, 481, 490, 364, 354,
	206, 488, 362, 353, 308, 327, 328, 263, 287, 412,
	346, 413, 288, 372, 371, 373, 199, 500, 0, 200,
	0, 459, 501, 532, 221, 222, 224, 0, 262, 266,
	274, 277, 283, 284, 291, 339, 387, 411, 409, 416,
	0, 476, 494, 506, 513, 519, 520, 522, 523, 524,
	525, 527, 526, 375, 290, 455, 307, 344, 0, 0,
	393, 433, 227, 498, 456, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 551, 355, 446, 495, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 425, 426, 427, 428, 275,
	504, 350, 414, 0, 191, 208, 340, 0, 417, 271,
	529, 508, 503, 198, 210, 0, 245, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 351, 357, 358, 359,
	360, 377, 378, 379, 382, 385, 386, 389, 391, 392,
	395, 399, 403, 404, 405, 406, 408, 410, 418, 423,
	435, 436, 437, 438, 439, 442, 443, 448, 449, 450,
	451, 452, 460, 461, 465, 483, 485, 497, 512, 517,
	441, 282, 492, 518, 0, 349, 0, 0, 352, 264,
	285, 296, 0, 507, 462, 214, 429, 273, 236, 0,
	0, 202, 233, 217, 242, 257, 260, 300, 361, 368,
	397, 402, 279, 254, 231, 422, 228, 445, 468, 469,
	470, 472, 365, 249, 401, 0, 0, 347, 474, 475,
	292,
}

var yyPact = [...]int{
	3600, -1000, -423, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2128, 2267, -1000, -1000,
	-1000, -1000, 2291, -1000, 773, 1801, -1000, 2077, 3333, -1000,
	44220, 545, -1000, 42992, 543, 153, 44220, -1000, 263, -1000,
	220, 44220, 258, 42378, -1000, -1000, -293, 19650, 2023, 101,
	73, 44220, -1000, -1000, -1000, -1000, 2272, 1734, -1000, 401,
	-1000, -1000, -1000, -1000, -1000, -1000, 41764, -1000, -1000, -1000,
	2082, 2145, 2296, 683, 2056, -1000, 2183, 1734, -1000, 19650,
	2238, 2166, 19036, -1000, 19036, 507, -1000, -1000, 14728, -1000,
	-1000, 25186, 44220, 31940, 332, -1000, 2077, -1000, -1000, -1000,
	95, -1000, 393, 1628, -1000, 1623, -1000, 644, 678, 424,
	540, 537, 423, 421, 420, 412, 411, 410, 408, 407,
	441, -1000, 714, 714, -111, -113, 3192, 496, 482, 482,
	788, 522, 2045, 2044, -1000, -1000, 714, 714, 714, 434,
	714, 714, 714, 714, 358, 357, 714, 714, 714, 714,
	714, 714, 714, 714, 714, 714, 714, 714, 714, 714,
	714, 714, 714, 350, 2077, 340, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, -1000, -1000, 44229, 224, 44229, -1000,
	552, 44229, 787, 787, 99, 787, 787, 787, 787, 202,
	593, 65, -1000, 198, 279, 187, 275, 778, 163, -1000,
	-1000, 268, 778, 1298, -1000, 644, 169, -1000, 787, 787,
	-1000, 12053, 242, 12053, 12053, -1000, 2134, -1000, -1000, -1000,
	-1000, 1305, -1000, 424, -1000, -1000, -1000, -1000, 44229, 41139,
	349, 724, -1000, -1000, -1000, 83, -1000, -1000, 1473, 1003,
	19499, 1184, -1000, 1654, 608, -1000, -1000, -1000, -1000, -1000,
	545, 20117, 20117, 20117, 20117, -1000, -1000, 1709, 1709, 1709,
	1709, 20117, 1709, -1000, 20117, 1709, 1709, 1709, 1709, 19499,
	1709, 1709, 1709, 1709, -1000, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, -1000, -1000, 1709, 551, 1709, 1709,
	1709, 1709, 1709, -1000, -1000, -1000, -1000, 1709, 1709, 1709,
	1709, 1709, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1709, 1709, 1709, 1709, 1709, 1709, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 23212, -1000, 17027, 1709,
=======
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 44220, 271, 44220, -1000, 611, 44220, 841, 841,
	122, 841, 841, 841, 841, 233, 701, 67, -1000, 215,
	327, 270, 329, 837, 226, 191, -1000, -1000, 333, 837,
	1219, -1000, 691, 171, -1000, 841, 12252, 12252, 12252, -1000,
	2057, -1000, -1000, -1000, -1000, -1000, -1000, 1211, -1000, 520,
	-1000, -1000, -1000, -1000, 44220, 41150, 478, 734, -1000, -1000,
	-1000, 86, -1000, -1000, 1399, 974, 19650, 1167, -1000, 1587,
	660, -1000, -1000, -1000, -1000, -1000, 598, 20264, 20264, 20264,
	20264, -1000, -1000, 1470, 1470, 1470, 1470, 20264, 1470, -1000,
	20264, 1470, 1470, 1470, 1470, 19650, 1470, 1470, 1470, 1470,
	-1000, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, -1000, -1000,
	1470, 607, 1470, 1470, 1470, 1470, 1470, -1000, -1000, -1000,
	-1000, 1470, 1470, 1470, 1470, 1470, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1470, 1470, 1470, 1470, 1470,
	1470, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	22720, -1000, 17194, 1470, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	44229, -1000, 1709, 221, 44229, 44229, 355, 2221, 1794, -1000,
	2295, 2267, 358, -1000, 2609, 1659, 1904, 1231, 1794, 1671,
	44229, -1000, 1740, -1000, -1000, -1000, 2016, 1178, 1297, -1000,
	-1000, -1000, -1000, 1144, 19499, -1000, -1000, 2333, -1000, 22594,
	550, 909, 2332, 40521, -1000, 418, 418, 1700, 13922, 3,
	-1000, -1000, -1000, 721, 29397, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2134, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
=======
	-1000, -1000, -1000, -1000, 44220, -1000, 1470, 281, 44220, 44220,
	428, 2183, 1734, -1000, 2272, 2198, 401, -1000, 2081, 1469,
	1860, 1237, 1734, 1591, 44220, -1000, 1654, -1000, -1000, -1000,
	1932, 1164, 1218, -1000, -1000, -1000, -1000, 1103, 19650, -1000,
	-1000, 2281, -1000, 22106, 606, 852, 2279, 40536, -1000, 507,
	507, 1616, 14109, 39, -1000, -1000, -1000, 733, 29484, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2057, -1000, -1000, -1000, -1000,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
<<<<<<< HEAD
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1684,
	44229, -1000, -1000, 3631, 1265, -1000, 1848, -1000, 1674, -1000,
	1807, 19499, 1864, 476, 1265, 472, 465, 459, -1000, -48,
	-1000, -1000, -1000, -1000, -1000, -1000, 705, 705, 705, -1000,
	353, 2277, 5313, 6009, -1000, -1000, -1000, 39903, 1843, 1265,
	-1000, 1835, -1000, 821, 513, 569, 569, 1265, -1000, -1000,
	44229, 1265, 816, 804, 1265, 1265, 44229, 44229, -1000, 39285,
	-1000, 38667, 38049, 1098, 44229, 37431, 36813, 36195, 35577, 34959,
	-1000, 1964, -1000, 2038, -1000, -1000, -1000, 44229, 1265, 1265,
	44229, 44229, 44229, 44229, 1265, -1000, -1000, 370, -1000, -1000,
	1095, 1081, 1078, 705, 705, 1076, 1294, 1293, 1290, 705,
	705, 1075, 1286, 30633, 1278, 286, 1055, 1054, 1043, 1018,
	1274, 199, 1270, 1013, 1007, 1040, 44229, 1833, 44229, -1000,
	261, 776, 460, 717, 2138, 2094, 1699, 423, 461, 1265,
	405, 405, 44229, -1000, 12676, -1000, -1000, 1268, 19499, -1000,
	783, 778, 778, -1000, -1000, -1000, -1000, -1000, -1000, 787,
	44229, 783, -1000, -1000, -1000, 778, 787, 44229, 787, 787,
	787, 787, 778, 778, 778, 787, 44229, 44229, 44229, 44229,
	44229, 44229, 44229, 44229, 44229, 12053, 644, 787, -298, -1000,
	1267, -1000, 1963, -1000, -1000, -1000, -1000, -1000, -1000, 12053,
	12053, -1000, -1000, -1000, -1000, 188, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -57, 1680, 34341, -1000, -299,
	-304, -313, -315, -1000, -1000, -1000, -317, -321, -1000, -1000,
	-1000, 19499, 19499, 19499, 19499, -162, -1000, 862, 20117, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 166, 884, 20117, 20117,
	20117, 20117, 20117, 20117, 20117, 20117, 20117, 20117, 20117, 20117,
	20117, 20117, 20117, -1000, -1000, 27543, 6726, 6726, 608, 608,
	608, 608, -1000, 18881, 19499, 19499, 608, -1000, 1265, 17027,
	33723, 18881, 18881, 19499, 2137, 685, 1003, 44229, 19499, -1000,
	1231, -1000, -1000, -1000, 1005, -1000, 44229, 44229, 468, 19499,
	19499, 19499, 19499, 19499, 19499, 15786, 19499, 19499, 19499, 1231,
	19499, 19499, 19499, 19499, 19499, 19499, 19499, 19499, 19499, 19499,
	19499, 19499, 19499, 19499, 19499, 19499, 19499, 19499, 19499, 19499,
	19499, 19499, 19499, 19499, 19499, 19499, 19499, 1231, 19499, 1814,
	19499, 19499, 15168, 12676, 18881, 18881, 18881, 18881, 18881, -1000,
	-1000, -1000, -1000, -1000, 19499, 19499, 19499, 19499, 19499, 19499,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 549, 1390, 1414,
	1518, 19499, -1000, 1677, -1000, -128, 25071, 19499, 1264, 2327,
	1889, 44229, -1000, -1000, -1000, 2221, -1000, 2221, 1390, 2529,
	2027, 18881, -1000, -1000, 2529, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1594, -1000, 44229, 1671, 2197, 44229, 2014,
	1252, 413, -1000, 19499, 19499, 1666, -1000, 1008, 44229, -1000,
	-162, -1000, 33105, -1000, -1000, 11430, -1000, 44229, 336, 44229,
	-1000, 24453, 32487, 13299, 3, -1000, 13299, 1618, -1000, 45,
	-2, 16404, 602, -1000, -1000, -1000, 3139, 21353, 1373, 602,
	114, -1000, -1000, -1000, 1807, -1000, 1807, 1807, 1807, 1807,
	413, 413, 413, 413, -1000, -1000, -1000, -1000, -1000, 1829,
	1828, -1000, 1807, 1807, 1807, 1807, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1825, 1825, 1825, 1809, 1809, 396, -1000,
	19499, 311, 31869, 2169, 1037, 1165, 261, 412, 1887, 1265,
	1265, 1265, 412, -1000, 1377, 1324, 1253, -1000, -406, 1643,
	-1000, -1000, 2271, -1000, -1000, 747, 847, 846, 699, 44229,
	225, 314, -1000, 386, -1000, 31869, 1265, 802, 569, 1265,
	-1000, 1265, -1000, -1000, -1000, -1000, -1000, 1265, -1000, -1000,
	1641, -1000, 1580, 880, 839, 870, 838, 1641, -1000, -1000,
	-106, 1641, -1000, 1641, -1000, 1641, -1000, 1641, -1000, 1641,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 683,
	195, -230, 44229, 225, 422, -1000, 421, 27543, -1000, -1000,
	-1000, 27543, 27543, -1000, -1000, -1000, -1000, 1229, 1227, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -392, 44229,
	-1000, 252, 713, 312, 348, 290, 44229, 228, 2209, 2207,
	2206, 259, 292, 44229, 44229, 405, 1962, 44229, 2187, 44229,
	-1000, -1000, -1000, -1000, -1000, 1003, 44229, -1000, -1000, 787,
	787, -1000, -1000, 44229, 787, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 787, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 44229,
	-1000, -1000, -1000, -1000, 44229, -1000, -1000, -1000, -1000, -1000,
	94, 39, 364, -1000, -1000, -1000, -1000, -1000, 2218, -1000,
	1003, 785, 786, -1000, 1709, -1000, -1000, 1036, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 166, 20117, 20117, 20117, 1613,
	450, 1821, 1044, 1094, 918, 918, 744, 744, 612, 612,
	612, 612, 612, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1223, -1000, 1559, -1000, 1667, 982, 1231, 2499, -1000,
	1559, 1559, 987, 18881, -1000, -1000, 739, -1000, 19499, 1231,
	2492, -1000, -1000, 1231, 1231, 1639, 1632, 2314, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 995,
	1165, 1165, 1165, 1165, 1165, 19499, 1230, -1000, -1000, -1000,
	2479, 1165, 1165, -1000, 1165, 2467, 2446, 1231, 1473, 1231,
	1628, -1000, 2442, 1165, 2411, 2406, 2401, 1493, 2371, 2366,
	2340, 1165, 1165, 1165, 1800, 2331, 2313, 2227, 2216, 2194,
	2159, 2071, 2017, 1997, 1165, -164, 1165, 1231, -1000, -1000,
	-1000, -1000, 1993, 1784, 1231, 18881, 18881, 1625, 1709, 536,
	-1000, 1559, 1231, 1231, 1559, 1559, 1974, 1970, 1959, 1943,
	1928, 1912, 12676, 1231, -1000, 1518, 44229, -1000, -288, -1000,
	-11, 682, 1709, -1000, 30633, 1231, -1000, 6082, -1000, 45465,
	-1000, -1000, -1000, -1000, -1000, 28779, 1599, 2529, -1000, -1000,
	1709, 1658, -1000, -1000, 413, 102, 28161, 599, 599, 129,
	1003, 1003, 19499, -1000, -1000, -1000, -1000, -1000, -1000, 520,
	2301, 376, 1709, -1000, 1620, 2365, -1000, -1000, -1000, 2196,
	21976, -1000, 1709, 1709, 44229, 1867, 1646, -1000, 517, -1000,
	1618, 3, 51, -1000, -1000, -1000, -1000, 1003, -1000, 1218,
	337, 2982, -1000, 385, -1000, -1000, -1000, -1000, 2114, 111,
	-1000, -1000, -1000, 219, 413, -1000, -1000, -1000, -1000, -1000,
	-1000, 1222, 1222, -1000, -1000, -1000, -1000, -1000, 1035, -1000,
	-1000, -1000, 1033, -1000, -1000, 1888, 1915, 311, -1000, -1000,
	705, 1213, -1000, -1000, 2118, 705, 705, 44229, -1000, -1000,
	1337, 2169, 252, 44229, 690, 1946, -1000, 1887, 1887, 1887,
	44229, -1000, -1000, -1000, -1000, -1000, -1000, -396, 76, 387,
	-1000, -1000, -1000, 5383, 44229, 1597, -1000, 229, -1000, 1334,
	-1000, 44229, -1000, 1593, 1824, 1265, 1265, -1000, -1000, -1000,
	44229, 1709, -1000, -1000, -1000, -1000, 443, 2136, 283, -1000,
	-1000, -186, -1000, -1000, 225, 229, 44229, 1265, 602, -1000,
	-1000, -1000, -1000, -1000, -397, 1568, 453, 239, 305, 44229,
	44229, 44229, 44229, 44229, 501, -1000, -1000, -1000, -1000, 213,
	-1000, -1000, 213, -1000, -1000, -1000, -1000, 288, 420, -1000,
	44229, 44229, 542, -1000, -1000, -1000, 778, -1000, -1000, 778,
	-1000, -1000, -1000, -1000, -1000, 2132, 44229, 38, -338, -1000,
	-333, 19499, -1000, -1000, -1000, -1000, 1574, 441, 1821, 20117,
	20117, 18881, -98, 773, 773, 27543, -1000, 19499, -1000, -1000,
	19499, 19499, 1413, 684, -1000, 19499, 915, -1000, 19499, -1000,
	-1000, 19499, 19499, 19499, 1231, 315, -1000, -1000, -1000, -1000,
	-1000, 2312, -1000, 19499, 19499, -1000, -1000, -1000, 19499, 19499,
	-1000, -1000, 19499, 19499, -1000, 19499, 19499, 20735, 1231, 20735,
	19499, 19499, 20735, -1000, -1000, -1000, -1000, 20735, 19499, 19499,
	19499, 19499, 19499, 19499, 19499, 19499, 19499, -1000, -1000, 31869,
	74, -164, 1814, 74, 1814, -1000, 1559, 1559, 18881, 12676,
	-1000, -1000, -1000, -1000, -1000, 19499, 19499, 19499, 19499, 19499,
	19499, -1000, -1000, -1000, -1000, -1000, -1000, 682, -1000, 569,
	569, 569, 44229, -1000, -1000, -1000, -1000, -1000, -1000, 1604,
	2205, -1000, 2042, 2039, 2310, 2301, -1000, 24453, 2529, -1000,
	-1000, 44229, -282, -1000, 2088, 2067, 599, 599, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 10807, 2221, 19499, 1933, 44229,
	157, -1000, 23835, 44229, 44229, 24453, 24453, 24453, 24453, 24453,
	-1000, 1994, 1990, -1000, 2023, 2019, 2080, 44229, -1000, 1551,
	1231, 2267, 21976, 358, 19499, 26307, 1454, 24453, -1000, -1000,
	24453, 44229, 10184, -1000, -1000, 2, -10, -1000, -1000, -1000,
	-1000, 3139, -1000, -1000, 464, 2192, 2098, -1000, -1000, -1000,
	-1000, -1000, 1539, -1000, 1532, 1602, 1530, 195, -1000, 1861,
	2131, 705, 705, -1000, 1022, -1000, 1265, 1209, 1206, -1000,
	-1000, -1000, 438, -1000, 2182, 44229, 1930, 1927, 1926, -1000,
	-405, 1014, 1822, 1836, 19499, 1820, 2270, 1534, 44229, -1000,
	-1000, 44229, -1000, 218, -1000, 311, 44229, -1000, -1000, -1000,
	314, 44229, -1000, 8228, -1000, -1000, -1000, 229, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 44229, 251, -1000, 1816, 1302,
	-1000, -1000, 1872, -1000, -1000, -1000, -1000, 210, 309, 211,
	1197, 211, -1000, 44229, 540, 1915, 44229, -1000, -1000, -1000,
	787, 787, -1000, -1000, 2129, -1000, 1265, 1165, 20117, 20117,
	-1000, 608, -1000, 1709, -143, 1807, 1807, -1000, 1807, 1809,
	-1000, 1807, 176, 1807, 170, 1807, -1000, -1000, 1231, 1231,
	1518, 1621, 1582, -55, -1000, 1003, 19499, 1878, 1874, 1869,
	1165, -1000, 1805, 1798, 19499, 1165, 1165, 1165, 1165, -1000,
	1003, 1493, 1831, 1476, -1000, -1000, -1000, -1000, 1571, 1165,
	1789, -280, 1231, 1520, 1520, 1520, 1520, 1520, 1518, 1518,
	1518, 1518, 44229, -1000, -164, -1000, -1000, -206, -210, -1000,
	1231, -164, 1556, -1000, -1000, 1231, -1000, 1497, 1408, 1761,
	1385, 1165, 1630, -1000, 2213, 2213, 2213, 1510, 44847, 44229,
	-1000, -1000, -1000, -1000, 2301, 2299, 1553, -1000, -1000, 102,
	442, -1000, 2072, 2067, -1000, 2263, 2075, 2261, -1000, -1000,
	-1000, -1000, -1000, 1003, -1000, 2155, 1353, -1000, 712, 1478,
	-1000, -1000, 18263, 1512, 2036, 515, 1510, 1492, 2365, 1875,
	1924, 2616, -1000, -1000, -1000, -1000, 1979, -1000, 1914, -1000,
	-1000, 1740, -1000, -1000, 1414, 1231, 1523, 336, 24453, 1456,
	1456, -1000, 505, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	892, 7748, 2344, -1000, 1196, -1000, 1150, 204, 976, -1000,
	-1000, 705, 705, -1000, 801, 798, -1000, 44229, 1797, -1000,
	413, 1195, 413, 969, -1000, 968, -1000, -1000, -1000, -1000,
	2034, 1940, -1000, -1000, -1000, -1000, 44229, -1000, -1000, 44229,
	44229, 44229, 1788, 2260, -1000, 19499, 1775, 706, 1661, 44229,
	44229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 440, 705, -364, 291, 287, 705, 705, 705,
	-411, -1000, -1000, 1507, 1490, -1000, -127, -1000, 19499, -1000,
	-1000, -1000, 1120, 1120, -1000, 1740, -1000, -1000, -1000, 1328,
	-1000, -1000, -109, 44229, 44229, 44229, 44229, -1000, 1027, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 608, 20117, 1231, -1000, -1000, 413, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19499, -1000, 19499,
	-1000, 2221, 1182, 1003, 19499, 19499, 19499, -1000, 961, 960,
	1165, -1000, -1000, -1000, -1000, 1231, 20735, -1000, 20735, -1000,
	19499, 233, 773, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1231, 333, -1000, -1000, -1000, -1000, 2308,
	-1000, 1231, 19499, -1000, -1000, 19499, -1000, 19499, 19499, -1000,
	19499, -1000, 19499, 1709, 2085, 1709, 1709, 26307, -1000, -1000,
	2299, 2294, 2258, 2077, 2073, 2073, 2072, -1000, 2257, 2243,
	-1000, 1179, 2238, 1172, 781, -1000, 44229, 19499, 157, -1000,
	379, 44229, 157, 44229, -1000, 2286, -1000, -1000, 19499, 1764,
	-1000, 19499, -1000, -1000, -1000, -1000, -1000, -1000, 6726, 2301,
	1456, -1000, -1000, 620, -1000, 19499, -1000, -1000, -1000, 6651,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1157, 1155,
	-1000, -1000, 1741, 19499, -1000, -1000, -1000, 1323, 1319, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1740, -1000, -1000,
	-1000, -1000, 314, -403, 1586, 44229, 942, -1000, 1488, 1534,
	317, 157, 1154, 705, 705, 705, 936, 927, 30633, 1480,
	-1000, 44229, 373, -1000, 314, -1000, -134, -139, 1165, -1000,
	-1000, 2191, -1000, -1000, 12676, -1000, -1000, 1739, 1883, -1000,
	-1000, -1000, 344, -1000, -1000, 1165, 1165, 1231, -1000, 1515,
	1165, 1165, 1315, 1308, -1000, -1000, 1476, -1000, 1370, -1000,
	233, 1231, 1899, -1000, -1000, 6726, -1000, -1000, 2286, 2236,
	74, -1000, -1000, 246, 74, 1003, 1317, 1165, 1306, 1288,
	1165, 26925, -1000, 2234, 2229, 31251, 31251, 682, 2294, -176,
	19499, 19499, 2051, 938, -1000, -1000, -1000, -1000, 1152, 1142,
	-1000, 1140, -1000, 2341, -1000, 1003, -1000, 157, -1000, 458,
	1478, -1000, 2221, 1003, 44229, 1003, 96, 2286, -1000, 1165,
	-1000, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709, 1709,
	1709, 1709, 1709, 1709, -1000, -1000, 44229, 1263, -1000, -1000,
	2190, 1451, 75, -1000, 1446, -1000, -1000, 165, -1000, 19499,
	-1000, 30633, 1136, 1131, -1000, -1000, -1000, -1000, -411, -1000,
	-1000, -1000, -1000, -1000, -1000, 358, 1504, -1000, 668, 44229,
	44229, 1231, 308, -116, -1000, -1000, -1000, 19499, -1000, -1000,
	-1000, -1000, -1000, -1000, 19499, -1000, 1231, 1897, -1000, -233,
	-1000, -376, 19499, -164, -1000, -1000, -164, -1000, 19499, -1000,
	-1000, 19499, -1000, 19499, -1000, 1441, -1000, -1000, -1000, -1000,
	-1000, 1441, 1441, -1000, -176, -1000, 1483, -1000, 44229, 1003,
	1473, -1000, 933, -1000, -1000, -1000, -1000, -1000, 44229, 1478,
	44229, -1000, 1417, 1231, 1709, 2221, -1000, 1388, -1000, 358,
	-1000, 1721, 1836, -1000, -1000, -1000, 17645, -1000, -1000, -1000,
	-1000, -1000, 179, -107, 12676, 9561, 1376, -1000, -1000, 2000,
	-102, -120, 1165, 1493, -1000, -326, -1000, -1000, -1000, -1000,
	230, -1000, -1000, 1473, -1000, -1000, 1226, 1087, 1028, 30015,
	-1000, -1000, -1000, -1000, -176, -1000, -1000, 2186, -1000, -1000,
	1427, -1000, -1000, 26307, 43611, -1000, -96, 245, -107, 19499,
	1715, 1231, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	8, -1000, -1000, -1000, -1000, -1000, 1872, -1000, 1978, -1000,
	-1000, 1231, -1000, 244, -354, -196, -197, -1000, -1000, 20117,
	-1000, 19499, -1000, 19499, -1000, 19499, -1000, -1000, -1000, 44229,
	1709, -1000, 1351, -1000, 1513, -225, 1896, -1000, -76, -1000,
	-1000, -1000, 889, 1109, -1000, -1000, -1000, -1000, -1000, -1000,
	1242, 44229, -1000, 395, -1000, -1000, -109, -114, -1000, 741,
	-1000, -1000, -1000, -1000, -1000, 1024, 1019, 1165, -1000, 44229,
	-1000, 43611, -220, 602, 6726, -1000, 1870, 1799, 2325, -1000,
	-1000, -1000, -1000, -1000, -1000, -413, 1333, 256, -1000, -117,
	244, -1000, 19499, -1000, 19499, -1000, 1231, -1000, -1000, 2165,
	96, -1000, 2338, -1000, 2335, 631, 631, -1000, 921, -413,
	-1000, -122, -1000, 1165, 1165, -1000, -229, -1000, -1000, -1000,
	-1000, -1000, 391, 945, -1000, -1000, -1000, -1000, -1000, -1000,
	6726, -1000, -1000, -1000, 234, 234, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2804, 2802, 35, 5, 45, 44, 2801, 37, 118,
	205, 31, 204, 121, 2799, 2798, 2797, 2796, 2793, 2791,
	2789, 240, 237, 232, 2788, 2786, 2783, 2781, 2780, 2779,
	2778, 2777, 2776, 2774, 226, 181, 200, 2773, 2772, 2770,
	144, 193, 101, 103, 195, 2768, 2767, 94, 2766, 2765,
	2764, 191, 190, 189, 774, 2763, 188, 132, 65, 2762,
	2761, 2760, 2759, 2755, 2754, 2753, 2752, 2751, 2750, 2749,
	2748, 2747, 2746, 2745, 2744, 2743, 203, 2742, 2741, 23,
	2740, 97, 2739, 2738, 2737, 2735, 9, 2733, 2732, 14,
	41, 2730, 2728, 49, 2726, 2724, 2716, 2713, 2711, 21,
	2708, 24, 2707, 42, 2706, 2705, 149, 2704, 2703, 2702,
	48, 2701, 2700, 2699, 2698, 2697, 2696, 2695, 159, 2694,
	2691, 2687, 2680, 207, 2678, 2677, 177, 146, 128, 2675,
	2669, 125, 197, 2668, 147, 2663, 2662, 2661, 165, 2660,
	3607, 2659, 2658, 83, 78, 2657, 228, 2656, 2654, 11,
	20, 80, 17, 10, 1, 2649, 2648, 79, 92, 2646,
	130, 116, 81, 2645, 120, 110, 2641, 2639, 15, 12,
	2636, 3, 7, 4, 84, 2634, 2629, 133, 2625, 2622,
	2619, 108, 2614, 2613, 3617, 2609, 104, 152, 122, 93,
	2608, 59, 63, 2604, 2602, 2598, 2597, 2595, 60, 2591,
	2587, 2583, 160, 74, 183, 2576, 46, 82, 66, 153,
	2575, 161, 96, 2574, 157, 156, 2573, 2572, 73, 47,
	53, 2569, 129, 150, 145, 55, 105, 158, 2565, 2564,
	71, 90, 2563, 2562, 2561, 2560, 187, 2558, 2557, 85,
	2556, 68, 2555, 202, 2551, 22, 2548, 75, 52, 2546,
	86, 119, 89, 40, 2543, 178, 2541, 70, 182, 141,
	179, 2538, 2536, 2535, 2534, 199, 309, 2532, 2531, 124,
	186, 163, 170, 102, 2530, 313, 2528, 2527, 106, 1642,
	5362, 2521, 28, 180, 2519, 2518, 6462, 155, 58, 32,
	2512, 175, 2508, 2506, 2495, 206, 184, 139, 1047, 69,
	2494, 2489, 2485, 18, 2484, 2480, 2477, 2475, 2474, 2472,
	98, 43, 39, 36, 208, 88, 19, 126, 173, 91,
	2468, 2466, 2465, 138, 111, 2462, 176, 174, 148, 171,
	2461, 185, 162, 136, 2459, 248, 34, 2457, 2454, 2445,
	2441, 107, 2440, 2439, 2436, 2425, 172, 166, 140, 99,
	2424, 100, 134, 169, 164, 67, 2419, 50, 2417, 2416,
	33, 194, 30, 2414, 16, 76, 77, 29, 131, 127,
	2413, 0, 2412, 25, 192, 315, 168, 2408, 2406, 2,
	8, 13, 2404, 2403, 2398, 2395, 154, 2390, 2388, 2382,
	2371, 27, 61, 26, 6, 123, 95, 2368, 2367, 4464,
	1611, 151, 2361, 214,
}

//line sql.y:7593
=======
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1684, 44220, -1000, -1000, 5433, 1171, -1000,
	1800, -1000, 1682, -1000, 1698, 19650, 1807, 542, 1171, 539,
	533, 530, -1000, -23, -1000, -1000, -1000, -1000, -1000, -1000,
	714, 714, 714, -1000, 433, 2227, 3333, 4428, -1000, -1000,
	-1000, 39922, 1792, 1171, -1000, 1790, -1000, 812, 580, 628,
	628, 1171, -1000, -1000, 44220, 1171, 811, 810, 1171, 1171,
	44220, 44220, -1000, 39308, -1000, 38694, 38080, 1057, 44220, 37466,
	36852, 36238, 35624, 35010, -1000, 1928, -1000, 1844, -1000, -1000,
	-1000, 44220, 1171, 1171, 44220, 44220, 44220, 44220, 1171, -1000,
	-1000, 392, -1000, -1000, 1056, 1043, 1041, 714, 714, 1040,
	1215, 1213, 1207, 714, 714, 1036, 1206, 30712, 1204, 343,
	1034, 1027, 1025, 1019, 1192, 197, 1188, 996, 963, 1023,
	44220, 1777, 44220, -1000, 317, 750, 484, 729, 2077, 2004,
	1614, 518, 541, 1171, 486, 486, 44220, -1000, 12871, -1000,
	-1000, 1187, 19650, -1000, 844, 837, 837, -1000, -1000, -1000,
	-1000, -1000, -1000, 841, 44220, 844, -1000, -1000, -1000, 837,
	841, 44220, 841, 841, 841, 841, 837, 837, 837, 841,
	44220, 44220, 44220, 44220, 44220, 44220, 44220, 44220, 44220, 12252,
	12252, 12252, 691, 841, -297, -1000, 1186, -1000, 1892, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 251, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -59, 1606,
	34396, -1000, -305, -307, -308, -310, -1000, -1000, -1000, -313,
	-322, -1000, -1000, -1000, 19650, 19650, 19650, 19650, -139, -1000,
	987, 20264, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 169,
	889, 20264, 20264, 20264, 20264, 20264, 20264, 20264, 20264, 20264,
	20264, 20264, 20264, 20264, 20264, 20264, -1000, -1000, 27642, 5874,
	5874, 660, 660, 660, 660, -1000, 19036, 19650, 19650, 660,
	-1000, 1171, 17194, 33782, 19036, 19036, 19650, 2058, 747, 974,
	44220, 19650, -1000, 1237, -1000, -1000, -1000, 933, -1000, 44220,
	44220, 1407, 19650, 19650, 19650, 19650, 19650, 19650, 15961, 19650,
	19650, 20264, 19650, 19650, 19650, 19650, 19650, 19650, 19650, 19650,
	19650, 19650, 19650, 19650, 19650, 19650, 19650, 19650, 19650, 19650,
	19650, 19650, 19650, 19650, 19650, 19650, 19650, 19650, 1237, 19650,
	1299, 19650, 19650, 15347, 12871, 19036, 19036, 19036, 19036, 19036,
	-1000, -1000, -1000, -1000, -1000, 19650, 19650, 19650, 19650, 19650,
	19650, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 603, 1475,
	1374, 1546, 19650, -1000, 1604, -1000, -144, 24572, 19650, 1185,
	2278, 1832, 44220, -1000, -1000, -1000, 2183, -1000, 2183, 1475,
	2061, 1935, 19036, -1000, -1000, 2061, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1377, -1000, 44220, 1591, 2152, 44220,
	1869, 1180, 394, -1000, 19650, 19650, 1579, -1000, 1208, 44220,
	-1000, -139, -1000, 33168, -1000, -1000, 11633, -1000, 44220, 405,
	44220, -1000, 27028, 32554, 13490, 39, -1000, 13490, 1526, -1000,
	48, 40, 16575, 658, -1000, -1000, -1000, 3192, 21492, 1391,
	658, 193, -1000, -1000, -1000, 1698, -1000, 1698, 1698, 1698,
	1698, 394, 394, 394, 394, -1000, -1000, -1000, -1000, -1000,
	1767, 1764, -1000, 1698, 1698, 1698, 1698, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1758, 1758, 1758, 1701, 1701, 473,
	-1000, 19650, 338, 31940, 2102, 1021, 1339, 317, 494, 1831,
	1171, 1171, 1171, 494, -1000, 1364, 1359, 1327, -1000, -406,
	1570, -1000, -1000, 2219, -1000, -1000, 719, 828, 827, 730,
	44220, 290, 388, -1000, 469, -1000, 31940, 1171, 807, 628,
	1171, -1000, 1171, -1000, -1000, -1000, -1000, -1000, 1171, -1000,
	-1000, 1556, -1000, 1503, 880, 825, 871, 783, 1556, -1000,
	-1000, -77, 1556, -1000, 1556, -1000, 1556, -1000, 1556, -1000,
	1556, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	749, 214, -193, 44220, 290, 517, -1000, 512, 27642, -1000,
	-1000, -1000, 27642, 27642, -1000, -1000, -1000, -1000, 1176, 1175,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -393,
	44220, -1000, 308, 727, 373, 413, 356, 44220, 326, 2171,
	2170, 2168, 351, 354, 44220, 44220, 486, 1891, 44220, 2121,
	44220, -1000, -1000, -1000, -1000, -1000, 974, 44220, -1000, -1000,
	841, 841, -1000, -1000, 44220, 841, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 841, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 44220, 44220, -1000, -1000, -1000, -1000, -1000, 119,
	46, 376, -1000, -1000, -1000, -1000, -1000, 2176, -1000, 974,
	800, 764, -1000, 1470, -1000, -1000, 895, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 169, 20264, 20264, 20264, 1629, 538,
	1644, 1217, 1268, 912, 912, 870, 870, 669, 669, 669,
	669, 669, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1173, -1000, 1600, -1000, 2093, 1236, 1237, 2751, -1000, 1600,
	1600, 1156, 19036, -1000, -1000, 766, -1000, 19650, 1237, 2746,
	-1000, -1000, 1237, 1237, 1553, 1551, 2277, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1984, 1339,
	1339, 1339, 1339, 1339, 19650, 1841, -1000, -1000, -1000, 1249,
	2738, 1086, 2733, 2721, 1237, 1399, 1237, 1538, -1000, 2676,
	1339, 2665, 2654, 2626, 1335, 2597, 2590, 2561, 1339, 1339,
	1339, 1774, 2557, 2547, 2540, 2479, 2473, 2453, 2419, 2410,
	2395, 1339, -146, 1339, 1237, -1000, -1000, -1000, -1000, 2377,
	1759, 1237, 19036, 19036, 1532, 1470, 593, -1000, 1600, 1237,
	1237, 1600, 1600, 2323, 2298, 2258, 2210, 2181, 2109, 12871,
	1237, -1000, 1546, 44220, -1000, -252, -1000, 17, 664, 1470,
	-1000, 30712, 1237, -1000, 6963, -1000, 45448, -1000, -1000, -1000,
	-1000, -1000, 28870, 1855, 2061, -1000, -1000, 1470, 1671, -1000,
	-1000, 394, 124, 28256, 642, 642, 202, 974, 974, 19650,
	-1000, -1000, -1000, -1000, -1000, -1000, 579, 2250, 397, 1470,
	-1000, 1459, 2511, -1000, -1000, -1000, 2150, 23339, -1000, 1470,
	44220, 1772, 1771, -1000, 576, -1000, 1526, 39, 55, -1000,
	-1000, -1000, -1000, 974, -1000, 1115, 406, 1927, -1000, 479,
	-1000, -1000, -1000, -1000, 2028, 133, -1000, -1000, -1000, 234,
	394, -1000, -1000, -1000, -1000, -1000, -1000, 1170, 1170, -1000,
	-1000, -1000, -1000, -1000, 1016, -1000, -1000, -1000, 1014, -1000,
	-1000, 1911, 1859, 338, -1000, -1000, 714, 1165, -1000, -1000,
	2031, 714, 714, 44220, -1000, -1000, 1371, 2102, 308, 44220,
	752, 1890, -1000, 1831, 1831, 1831, 44220, -1000, -1000, -1000,
	-1000, -1000, -1000, -398, 75, 399, -1000, -1000, -1000, 389,
	44220, 1638, -1000, 284, -1000, 1354, -1000, 44220, -1000, 1619,
	1733, 1171, 1171, -1000, -1000, -1000, 44220, 1470, -1000, -1000,
	-1000, -1000, 536, 2063, 301, -1000, -1000, -163, -1000, -1000,
	290, 284, 44220, 1171, 658, -1000, -1000, -1000, -1000, -1000,
	-391, 1612, 527, 292, 330, 44220, 44220, 44220, 44220, 44220,
	558, -1000, -1000, -1000, -1000, 273, -1000, -1000, 273, -1000,
	-1000, -1000, -1000, 342, 511, -1000, 44220, 44220, 647, -1000,
	-1000, -1000, 837, -1000, -1000, 837, -1000, -1000, -1000, -1000,
	-1000, 2074, 44220, 43, -344, -1000, -341, 19650, -1000, -1000,
	-1000, -1000, 980, 535, 1644, 20264, 20264, 19036, -72, 769,
	769, 27642, -1000, 19650, -1000, -1000, 19650, 19650, 1454, 720,
	-1000, 19650, 1018, -1000, 19650, -1000, -1000, 19650, 19650, 19650,
	1237, 328, -1000, -1000, -1000, -1000, -1000, 2268, -1000, 19650,
	-1000, 27642, 19650, 19650, 19650, 19650, -1000, -1000, 19650, 19650,
	-1000, 19650, 19650, 20878, 1237, 20878, 19650, 19650, 20878, -1000,
	-1000, -1000, -1000, 20878, 19650, 19650, 19650, 19650, 19650, 19650,
	19650, 19650, 19650, -1000, -1000, 31940, 103, -146, 1299, 103,
	1299, -1000, 1600, 1600, 19036, 12871, -1000, -1000, -1000, -1000,
	-1000, 19650, 19650, 19650, 19650, 19650, 19650, -1000, -1000, -1000,
	-1000, -1000, -1000, 664, -1000, 628, 628, 628, 44220, -1000,
	-1000, -1000, -1000, -1000, -1000, 1519, 2173, -1000, 1962, 1945,
	2266, 2250, -1000, 27028, 2061, -1000, -1000, 44220, -247, -1000,
	1996, 2018, 642, 642, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11014, 2183, 19650, 1887, 44220, 151, -1000, 23958, 44220,
	44220, 27028, 27028, 27028, 27028, 27028, -1000, 1929, 1916, -1000,
	1910, 1904, 1966, 44220, -1000, 1594, 1237, 2198, 23339, 19650,
	25800, 1369, 27028, -1000, -1000, 27028, 44220, 10395, -1000, -1000,
	32, 12, -1000, -1000, -1000, -1000, 3192, -1000, -1000, 2606,
	2140, 2011, -1000, -1000, -1000, -1000, -1000, 1588, -1000, 1584,
	1510, 1577, 214, -1000, 1740, 2062, 714, 714, -1000, 1007,
	-1000, 1171, 1141, 1137, -1000, -1000, -1000, 525, -1000, 2117,
	44220, 1886, 1885, 1884, -1000, -404, 1005, 1716, 1593, 19650,
	1715, 2217, 1438, 44220, -1000, -1000, 44220, -1000, 304, -1000,
	338, 44220, -1000, -1000, -1000, 388, 44220, -1000, 3964, -1000,
	-1000, -1000, 284, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	44220, 311, -1000, 1714, 1106, -1000, -1000, 1738, -1000, -1000,
	-1000, -1000, 242, 366, 267, 1136, 267, -1000, 44220, 635,
	1859, 44220, -1000, -1000, -1000, 841, 841, -1000, -1000, 2050,
	-1000, 1171, 1339, 20264, 20264, -1000, 660, -1000, 1470, -127,
	1698, 1698, -1000, 1698, 1701, -1000, 1698, 228, 1698, 201,
	1698, -1000, -1000, 1237, 1237, 1546, 1729, 1581, -31, -1000,
	974, 19650, 2105, 2034, 2013, 1339, -1000, 1697, 1696, 19650,
	1339, 1237, 1626, 1339, 1339, 1339, -1000, 974, 1335, 2000,
	1442, -1000, -1000, -1000, -1000, 1486, 1339, 1952, -242, 1237,
	1558, 1558, 1558, 1558, 1558, 1546, 1546, 1546, 1546, 44220,
	-1000, -146, -1000, -1000, -183, -185, -1000, 1237, -146, 1478,
	-1000, -1000, 1237, -1000, 1598, 1592, 1933, 1566, 1339, 1877,
	-1000, 2131, 2131, 2131, 1522, 44834, 44220, -1000, -1000, -1000,
	-1000, 2250, 2247, 1451, -1000, -1000, 124, 468, -1000, 2008,
	2018, -1000, 2214, 1992, 2211, -1000, -1000, -1000, -1000, -1000,
	974, -1000, 2084, 1423, -1000, 726, 1409, -1000, -1000, 18422,
	1524, 1939, 574, 1522, 1505, 2511, 1830, 1881, 2978, -1000,
	-1000, -1000, -1000, 1912, -1000, 1872, -1000, -1000, 1654, -1000,
	-1000, 1374, 1862, 405, 27028, 1436, 1436, -1000, 572, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 860, 6108, 2295, -1000,
	1133, -1000, 1110, 204, 1001, -1000, -1000, 714, 714, -1000,
	790, 787, -1000, 44220, 1694, -1000, 394, 1132, 394, 992,
	-1000, 973, -1000, -1000, -1000, -1000, 1821, 1865, -1000, -1000,
	-1000, -1000, 44220, -1000, -1000, 44220, 44220, 44220, 1691, 2207,
	-1000, 19650, 1690, 721, 1853, 44220, 44220, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 492, 714,
	-367, 353, 339, 714, 714, 714, -405, -1000, -1000, 1501,
	1481, -1000, -102, -1000, 19650, -1000, -1000, -1000, 921, 921,
	-1000, 1654, -1000, -1000, -1000, 1311, -1000, -1000, -80, 44220,
	44220, 44220, 44220, -1000, 958, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 660, 20264, 1237,
	-1000, -1000, 394, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19650, -1000, 19650, -1000, 2183, 1129, 974,
	19650, 19650, 19650, -1000, 968, 962, 1339, -1000, -1000, -1000,
	19650, -1000, -1000, -1000, 1237, 20878, -1000, 20878, -1000, 19650,
	297, 769, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1237, 403, -1000, -1000, -1000, -1000, 2256, -1000,
	1237, 19650, -1000, -1000, 19650, -1000, 19650, 19650, -1000, 19650,
	-1000, 19650, 1470, 1987, 1470, 1470, 25800, -1000, -1000, 2247,
	2243, 2206, 1972, 1985, 1985, 2008, -1000, 2204, 2202, -1000,
	1128, 2196, 1123, 777, -1000, 44220, 19650, 151, -1000, 381,
	44220, 151, 44220, -1000, 2240, -1000, -1000, 19650, 1681, -1000,
	19650, -1000, -1000, -1000, -1000, -1000, 5874, 2250, 1436, -1000,
	-1000, 676, -1000, 19650, -1000, -1000, -1000, 5125, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1122, 1121, -1000, -1000,
	1674, 19650, -1000, -1000, -1000, 1279, 1275, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1654, -1000, -1000, -1000, -1000,
	388, -400, 1847, 44220, 959, -1000, 1466, 1438, 377, 151,
	1117, 714, 714, 714, 954, 948, 30712, 1449, -1000, 44220,
	458, -1000, 388, -1000, -114, -119, 1339, -1000, -1000, 2134,
	-1000, -1000, 12871, -1000, -1000, 1649, 1823, -1000, -1000, -1000,
	312, -1000, -1000, 1339, 1339, 1237, -1000, 1573, 1339, 1339,
	1261, 1254, -1000, 1339, -1000, 1442, -1000, 1520, -1000, 297,
	1237, 1875, -1000, -1000, 5874, -1000, -1000, 2240, 2189, 103,
	-1000, -1000, 303, 103, 974, 1513, 1339, 1493, 1488, 1339,
	26414, -1000, 2187, 2182, 31326, 31326, 664, 2243, -153, 19650,
	19650, 1967, 932, -1000, -1000, -1000, -1000, 1096, 1093, -1000,
	1074, -1000, 2289, -1000, 974, -1000, 151, -1000, 568, 1409,
	-1000, 2183, 974, 44220, 974, 126, 2240, -1000, 1339, -1000,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470, 1470,
	1470, -1000, -1000, 44220, 1814, -1000, -1000, 2130, 1431, 74,
	-1000, 1427, -1000, -1000, 155, -1000, 19650, -1000, 30712, 1066,
	1060, -1000, -1000, -1000, -1000, -405, -1000, -1000, -1000, -1000,
	-1000, -1000, 401, 1429, -1000, 700, 44220, 44220, 1237, 337,
	-94, -1000, -1000, -1000, 19650, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19650, -1000, 1237, 1857, -1000, -241, -1000, -378,
	19650, -146, -1000, -1000, -146, -1000, 19650, -1000, -1000, 19650,
	-1000, 19650, -1000, 1425, -1000, -1000, -1000, -1000, -1000, 1425,
	1425, -1000, -153, -1000, 1417, -1000, 44220, 974, 1399, -1000,
	887, -1000, -1000, -1000, -1000, -1000, 44220, 1409, 44220, -1000,
	1397, 1237, 1470, 2183, -1000, 1317, -1000, 401, -1000, 1646,
	1593, -1000, -1000, -1000, 17808, -1000, -1000, -1000, -1000, -1000,
	222, -78, 12871, 9776, 1314, -1000, -1000, 1861, -75, -97,
	1339, 1335, -1000, -331, -1000, -1000, -1000, -1000, 157, -1000,
	-1000, 1399, -1000, -1000, 1484, 1479, 1325, 30098, -1000, -1000,
	-1000, -1000, -153, -1000, -1000, 2110, -1000, -1000, 1394, -1000,
	-1000, 25800, 43606, -1000, -64, 319, -78, 19650, 1635, 1237,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 45, -1000,
	-1000, -1000, -1000, -1000, 1738, -1000, 1858, -1000, -1000, 1237,
	-1000, 166, -352, -171, -174, -1000, -1000, 20264, -1000, 19650,
	-1000, 19650, -1000, 19650, -1000, -1000, -1000, 44220, 1470, -1000,
	1283, -1000, 4943, -199, 1854, -1000, -35, -1000, -1000, -1000,
	843, 927, -1000, -1000, -1000, -1000, -1000, -1000, 1735, 44220,
	-1000, 470, -1000, -1000, -80, -84, -1000, 758, -1000, -1000,
	-1000, -1000, -1000, 1305, 1081, 1339, -1000, 44220, -1000, 43606,
	-191, 658, 5874, -1000, 1840, 1815, 2254, -1000, -1000, -1000,
	-1000, -1000, -1000, -411, 1240, 305, -1000, -101, 166, -1000,
	19650, -1000, 19650, -1000, 1237, -1000, -1000, 2101, 126, -1000,
	2287, -1000, 2259, 689, 689, -1000, 935, -411, -1000, -100,
	-1000, 1339, 1339, -1000, -202, -1000, -1000, -1000, -1000, -1000,
	465, 925, -1000, -1000, -1000, -1000, -1000, -1000, 5874, -1000,
	-1000, -1000, 217, 217, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2799, 2798, 31, 8, 49, 48, 2796, 37, 118,
	201, 30, 221, 127, 2795, 2794, 2788, 2787, 2786, 2784,
	2782, 238, 230, 229, 2781, 2780, 2778, 2777, 2776, 2772,
	2770, 2769, 2767, 2766, 225, 181, 195, 2761, 2760, 2754,
	146, 187, 100, 103, 191, 2748, 2745, 91, 2744, 2743,
	2738, 206, 205, 204, 830, 2734, 203, 141, 65, 2732,
	2731, 2730, 2727, 2724, 2723, 2721, 2720, 2719, 2717, 2715,
	2714, 2707, 2706, 2705, 2704, 2692, 318, 2691, 2690, 23,
	2689, 96, 2688, 2687, 2681, 2673, 9, 2671, 2670, 17,
	42, 2666, 2665, 60, 2664, 2663, 2662, 2661, 2657, 21,
	2656, 28, 2654, 39, 2649, 2645, 144, 2643, 2642, 2636,
	45, 2635, 2633, 2626, 2623, 2622, 2621, 2620, 164, 2619,
	2616, 2614, 2610, 197, 2605, 2604, 259, 130, 129, 2602,
	2600, 125, 192, 2595, 151, 2588, 2586, 2585, 172, 2582,
	3847, 2573, 2572, 83, 80, 2571, 106, 2569, 2568, 12,
	24, 81, 7, 10, 15, 2567, 2564, 82, 98, 2562,
	137, 122, 86, 2559, 134, 119, 2556, 2554, 14, 6,
	2553, 1, 5, 2, 84, 2552, 2550, 140, 2547, 2543,
	2542, 111, 2541, 2535, 5825, 2532, 107, 160, 128, 92,
	2519, 52, 78, 2518, 2517, 2514, 2512, 2508, 66, 2507,
	2500, 2499, 165, 40, 183, 2494, 50, 58, 67, 155,
	2493, 43, 99, 2491, 163, 159, 2490, 2489, 74, 44,
	61, 2485, 120, 154, 149, 68, 110, 156, 2484, 2481,
	76, 90, 2480, 2479, 2478, 2475, 185, 2474, 2471, 89,
	2469, 73, 2468, 196, 2467, 22, 2463, 69, 55, 2458,
	88, 121, 85, 33, 2456, 222, 2455, 71, 180, 145,
	178, 2454, 2453, 2451, 193, 335, 2445, 2444, 123, 186,
	166, 169, 104, 2438, 344, 2435, 2433, 105, 1860, 5610,
	2432, 41, 179, 2431, 2428, 6754, 170, 53, 27, 2427,
	136, 2426, 2425, 2424, 199, 184, 139, 981, 77, 2422,
	2421, 2420, 18, 2417, 2416, 2412, 2409, 2405, 2404, 94,
	47, 46, 36, 219, 95, 19, 132, 176, 97, 2403,
	2402, 2401, 142, 116, 2400, 177, 175, 152, 147, 2398,
	182, 167, 161, 2395, 133, 35, 2393, 2391, 2390, 2377,
	124, 2370, 2369, 2368, 2363, 174, 168, 143, 101, 2360,
	102, 138, 173, 171, 70, 2358, 59, 2357, 2356, 32,
	190, 29, 2352, 16, 75, 79, 34, 126, 157, 2351,
	0, 2344, 20, 189, 352, 188, 2341, 2340, 3, 13,
	11, 2339, 2338, 2337, 2336, 2335, 162, 2333, 2331, 2329,
	2328, 26, 63, 25, 4, 131, 93, 2314, 2313, 4720,
	1856, 153, 2309, 202,
}

//line sql.y:7588
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 397, 398, 398, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 371, 371,
	371, 374, 374, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	401, 401, 179, 179, 177, 177, 178, 178, 250, 250,
	24, 25, 25, 260, 260, 259, 259, 259, 261, 261,
	261, 261, 298, 298, 26, 26, 26, 26, 26, 124,
	124, 373, 373, 372, 364, 364, 363, 363, 362, 370,
	370, 369, 369, 368, 38, 39, 48, 48, 48, 48,
	49, 50, 375, 375, 337, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 339, 339, 325, 325, 338, 338, 338, 338, 338,
	338, 338, 324, 324, 135, 135, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 390, 390, 390, 389, 389, 229, 229,
	229, 229, 229, 229, 229, 229, 145, 145, 157, 157,
	157, 157, 157, 143, 143, 144, 142, 142, 142, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 391, 391, 391, 391, 303, 303, 303,
	303, 306, 306, 304, 304, 304, 304, 304, 304, 304,
	304, 304, 305, 305, 305, 305, 305, 307, 307, 307,
	307, 307, 308, 308, 308, 308, 308, 308, 308, 308,
	308, 308, 308, 308, 308, 308, 308, 308, 309, 309,
	309, 309, 309, 309, 309, 309, 323, 323, 310, 310,
	318, 318, 319, 319, 319, 320, 320, 320, 321, 321,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 317,
	317, 316, 316, 316, 326, 351, 351, 350, 350, 348,
	348, 348, 348, 348, 348, 348, 348, 335, 335, 345,
	345, 345, 345, 345, 334, 334, 330, 330, 330, 331,
	331, 332, 332, 329, 329, 333, 333, 347, 347, 346,
	346, 327, 327, 328, 328, 353, 392, 392, 392, 392,
	392, 393, 393, 354, 382, 384, 384, 384, 383, 383,
	380, 381, 379, 379, 379, 379, 379, 81, 81, 81,
	273, 273, 274, 274, 343, 343, 342, 342, 342, 344,
	344, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 341, 341, 341, 341, 341, 341, 341, 341,
	341, 341, 268, 268, 268, 378, 378, 378, 378, 378,
	378, 377, 377, 377, 340, 340, 340, 376, 376, 57,
	57, 212, 212, 395, 395, 396, 396, 396, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 106, 106, 107, 107, 107, 107,
	109, 109, 109, 356, 356, 58, 58, 3, 3, 167,
	169, 170, 170, 168, 168, 168, 168, 168, 168, 60,
	60, 59, 59, 172, 171, 173, 173, 173, 1, 1,
	2, 2, 4, 4, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 361, 361, 361, 361,
	361, 361, 361, 361, 361, 361, 322, 322, 322, 355,
	355, 357, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 112, 111, 111, 110, 113, 113, 113, 113,
	113, 113, 113, 113, 359, 359, 359, 61, 61, 360,
	311, 312, 313, 5, 6, 336, 358, 120, 120, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	267, 267, 276, 276, 266, 266, 291, 291, 291, 269,
	269, 269, 270, 270, 388, 388, 388, 263, 263, 64,
	64, 64, 66, 66, 67, 68, 68, 293, 293, 294,
	294, 69, 70, 82, 82, 82, 82, 82, 82, 105,
	105, 105, 15, 15, 15, 15, 78, 78, 78, 14,
	14, 65, 65, 72, 385, 385, 386, 387, 387, 387,
	387, 73, 75, 31, 31, 31, 31, 31, 31, 130,
	130, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 125, 125, 125, 119, 119, 402, 76,
	77, 77, 123, 123, 123, 116, 116, 116, 122, 122,
	122, 16, 16, 17, 249, 249, 18, 18, 127, 127,
	129, 129, 129, 129, 129, 131, 131, 131, 131, 131,
	131, 131, 126, 126, 128, 128, 128, 128, 284, 284,
	284, 283, 283, 161, 161, 163, 162, 162, 164, 164,
	165, 165, 165, 165, 210, 210, 187, 187, 247, 247,
	245, 245, 246, 246, 248, 248, 248, 248, 251, 251,
	166, 166, 166, 166, 174, 174, 175, 175, 176, 176,
	292, 292, 289, 289, 289, 288, 288, 180, 180, 180,
	182, 181, 181, 181, 181, 183, 183, 185, 185, 184,
	184, 186, 191, 191, 190, 190, 188, 188, 188, 188,
	189, 189, 189, 189, 192, 192, 140, 140, 140, 140,
	140, 140, 140, 155, 155, 155, 155, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 236, 236,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 149, 83, 83,
	83, 84, 84, 85, 85, 85, 85, 85, 86, 86,
	86, 86, 86, 141, 141, 88, 88, 87, 87, 205,
	205, 281, 281, 89, 90, 90, 93, 93, 92, 91,
	91, 97, 97, 94, 94, 96, 96, 95, 98, 98,
	99, 100, 100, 264, 264, 193, 193, 201, 201, 201,
	201, 194, 194, 194, 194, 194, 194, 194, 202, 202,
	202, 209, 203, 203, 199, 199, 199, 199, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
<<<<<<< HEAD
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	160, 160, 160, 160, 217, 217, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 148, 148, 300, 300, 367, 367, 366, 366, 365,
	365, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 403, 403, 314, 314, 314, 314, 200, 200,
	200, 200, 200, 121, 121, 121, 121, 121, 297, 297,
	297, 301, 301, 301, 299, 299, 299, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 302,
	302, 215, 215, 117, 117, 213, 213, 214, 216, 216,
	211, 211, 211, 196, 196, 196, 218, 218, 219, 219,
	101, 102, 102, 103, 103, 220, 220, 222, 221, 221,
	223, 224, 224, 224, 225, 225, 226, 226, 226, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 43, 132, 132, 132, 132, 134, 134, 133, 133,
	79, 79, 80, 80, 80, 138, 138, 139, 139, 139,
	136, 136, 137, 137, 243, 243, 227, 227, 227, 234,
	234, 234, 230, 230, 232, 232, 232, 233, 233, 233,
	231, 240, 240, 242, 242, 241, 241, 237, 237, 238,
	238, 239, 239, 239, 235, 235, 195, 195, 195, 195,
	195, 244, 244, 244, 244, 252, 252, 206, 206, 208,
	208, 207, 207, 159, 253, 253, 257, 254, 254, 258,
	258, 258, 258, 258, 255, 255, 256, 256, 285, 285,
	285, 262, 262, 275, 275, 271, 271, 272, 272, 265,
	265, 277, 277, 277, 74, 204, 204, 352, 352, 349,
	280, 280, 282, 282, 286, 286, 290, 290, 287, 287,
=======
	198, 198, 198, 198, 198, 198, 198, 160, 160, 160,
	160, 217, 217, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 148, 148,
	299, 299, 366, 366, 365, 365, 364, 364, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 403,
	403, 313, 313, 313, 313, 200, 200, 200, 200, 200,
	121, 121, 121, 121, 121, 296, 296, 296, 300, 300,
	300, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 301, 301, 215, 215,
	117, 117, 213, 213, 214, 216, 216, 211, 211, 211,
	196, 196, 196, 218, 218, 219, 219, 101, 102, 102,
	103, 103, 220, 220, 222, 221, 221, 223, 224, 224,
	224, 225, 225, 226, 226, 226, 47, 47, 47, 47,
	47, 42, 42, 42, 42, 43, 43, 43, 43, 132,
	132, 132, 132, 134, 134, 133, 133, 79, 79, 80,
	80, 80, 138, 138, 139, 139, 139, 136, 136, 137,
	137, 243, 243, 227, 227, 227, 234, 234, 234, 230,
	230, 232, 232, 232, 233, 233, 233, 231, 240, 240,
	242, 242, 241, 241, 237, 237, 238, 238, 239, 239,
	239, 235, 235, 195, 195, 195, 195, 195, 244, 244,
	244, 244, 252, 252, 206, 206, 208, 208, 207, 207,
	159, 253, 253, 257, 254, 254, 258, 258, 258, 258,
	258, 255, 255, 256, 256, 284, 284, 284, 262, 262,
	274, 274, 270, 270, 271, 271, 264, 264, 276, 276,
	276, 74, 204, 204, 351, 351, 348, 279, 279, 281,
	281, 285, 285, 289, 289, 286, 286, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
<<<<<<< HEAD
	278, 278, 278, 278, 278, 278, 278, 278, 278, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 399, 400, 295, 296, 296, 296,
=======
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 399, 400, 294,
	295, 295, 295,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 3, 3, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 2, 4, 4, 4,
	4, 4, 2, 3, 3, 3, 5, 2, 3, 3,
	2, 3, 4, 4, 4, 3, 4, 4, 5, 3,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 7, 6,
	6, 2, 2, 1, 6, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 0, 1, 2, 5, 0,
	3, 0, 1, 4, 4, 2, 0, 1, 1, 2,
	2, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	5, 1, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 5, 5, 6, 4, 4,
	8, 6, 8, 6, 8, 5, 4, 10, 2, 2,
	1, 2, 2, 2, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 6, 6, 4, 4, 3,
	4, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 6, 5, 9, 6, 9, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
<<<<<<< HEAD
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
=======
	3, 4, 5, 5, 6, 4, 4, 8, 6, 8,
	6, 8, 5, 4, 10, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 5, 4, 4, 4, 4, 4,
	7, 4, 4, 6, 6, 6, 8, 6, 6, 6,
	4, 4, 4, 7, 8, 6, 5, 6, 8, 11,
	7, 8, 8, 9, 4, 4, 4, 4, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 4, 4,
	6, 5, 9, 6, 9, 1, 1, 1, 1, 1,
	1, 0, 2, 6, 8, 10, 12, 14, 6, 8,
	8, 10, 12, 14, 6, 8, 10, 12, 6, 8,
	0, 2, 0, 2, 1, 3, 1, 1, 1, 1,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 2, 1, 3,
	0, 1, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 4,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
<<<<<<< HEAD
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
=======
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
}

var yyChk = [...]int{
	-1000, -397, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -399,
<<<<<<< HEAD
	11, 438, 256, 255, 28, -12, 483, 86, -398, 627,
=======
	11, 437, 256, 255, 28, -12, 479, 86, -398, 623,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-243, -227, 22, 33, 29, -226, -222, -123, -227, 20,
	18, 7, -76, -402, -76, -76, 12, 13, -76, -337,
	-339, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -361, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
<<<<<<< HEAD
	280, -40, 81, 33, 483, 486, -344, 223, 229, 230,
	225, 439, 123, 122, 75, -341, 361, 516, 597, -56,
	599, 102, 104, 598, 44, 235, 600, 601, 602, 523,
	603, 244, 604, 605, 606, 607, 613, 565, 614, 615,
	616, 124, 7, -76, -290, -286, -371, -279, 89, 90,
	91, 480, 247, 514, 515, 296, 81, 41, 489, 358,
	361, 516, 597, 307, 321, 315, 342, 334, 481, 517,
	490, 299, 248, 284, 591, 332, 132, 599, 302, 518,
	262, 366, 367, 519, 368, 102, 310, 405, 612, 301,
	520, 610, 104, 598, 79, 51, 594, 44, 257, 330,
	231, 326, 600, 285, 521, 492, 278, 123, 120, 619,
	36, 324, 50, 30, 609, 122, 49, 601, 147, 522,
	602, 523, 370, 349, 585, 48, 371, 263, 524, 84,
	268, 485, 305, 593, 372, 472, 325, 373, 295, 608,
	228, 525, 577, 374, 375, 586, 526, 350, 354, 474,
	527, 397, 376, 626, 52, 528, 529, 587, 121, 530,
	78, 603, 80, 319, 320, 531, 293, 246, 477, 478,
	399, 346, 451, 458, 459, 108, 109, 454, 110, 460,
	111, 461, 462, 463, 452, 112, 105, 453, 464, 465,
	347, 348, 113, 466, 107, 106, 455, 457, 114, 467,
	244, 35, 377, 482, 297, 58, 272, 400, 46, 352,
	623, 45, 581, 532, 584, 345, 341, 448, 53, 533,
	534, 535, 536, 604, 344, 318, 340, 618, 4, 290,
	605, 62, 230, 356, 355, 357, 279, 396, 337, 537,
	538, 539, 251, 82, 540, 327, 21, 541, 542, 378,
	286, 543, 56, 544, 545, 403, 260, 546, 54, 606,
	39, 547, 265, 620, 607, 548, 549, 550, 551, 267,
	552, 380, 553, 379, 351, 353, 274, 381, 484, 554,
	306, 323, 264, 611, 555, 252, 468, 469, 470, 471,
	592, 476, 475, 266, 271, 259, 404, 253, 556, 557,
	558, 559, 560, 300, 576, 561, 562, 311, 613, 449,
	43, 563, 564, 565, 566, 567, 294, 289, 398, 407,
	61, 83, 363, 568, 569, 590, 317, 287, 570, 308,
	55, 614, 615, 616, 281, 617, 9, 624, 625, 383,
	124, 291, 292, 47, 338, 273, 571, 303, 572, 328,
	329, 343, 316, 339, 309, 578, 275, 384, 450, 261,
	573, 406, 288, 359, 364, 304, 488, 473, 280, 385,
	589, 487, 336, 333, 282, 574, 386, 236, 276, 277,
	575, 579, 387, 388, 298, 389, 390, 391, 392, 393,
	395, 394, 283, 486, 314, 331, 365, 419, 420, 421,
	422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
	432, 433, 434, 435, 436, 447, 234, -76, 234, -184,
	-286, 234, -255, 367, -276, 369, 382, 377, 387, 375,
	-267, 378, 380, 274, -388, 397, 234, 384, 222, 370,
	379, 388, 389, 298, 395, 390, 394, 283, 391, 392,
	393, -371, 174, 602, 617, 132, 335, 374, 372, 398,
	581, -286, 309, -293, 314, -280, -371, -279, 312, -184,
	-82, 577, 226, -295, -295, -125, 581, 583, -203, -140,
	140, -155, -158, -146, -150, -197, -198, -199, -200, -156,
	-211, 163, 164, 171, 141, -209, -159, 26, 479, 440,
	439, 174, 31, -149, 217, 68, 69, 442, 443, 143,
	57, 11, 415, 416, -157, 410, 417, 412, 445, 446,
	115, 447, 105, 107, 106, 448, 449, 450, 474, 477,
	478, 476, 475, 347, 348, 451, 452, 453, 108, 109,
	110, 111, 112, 113, 114, 454, 457, 455, 456, 458,
	459, 460, 465, 466, 461, 462, 463, 464, 467, -85,
	-97, 505, 504, -98, -147, -148, -280, -286, 239, 409,
	233, 169, 438, -151, -144, -8, -207, 408, 413, 414,
	418, 411, 491, 493, 508, 509, 511, 496, 501, 500,
	503, 468, 469, 470, 471, 472, 473, -371, -279, -153,
	-152, -193, 92, 98, 103, 99, -394, 116, -399, 595,
	93, 94, 95, 96, 97, 117, 118, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 44,
	383, 383, -184, -76, -76, -76, -76, -220, -123, -222,
	-10, -8, -399, 8, -76, -8, -9, -13, -34, -36,
	510, -35, -286, -227, -243, 12, 159, 42, 50, -225,
	-226, -12, -8, -140, 19, 23, 24, -128, 165, -140,
	-286, -77, -128, -265, 238, -76, -76, -254, -298, 309,
	-258, 398, 397, -282, -256, -280, -278, -255, 396, 227,
	23, 139, 25, 27, 142, 174, 127, 19, 143, 37,
	229, 335, 245, 173, 241, 439, 222, 72, 491, 410,
	412, 408, 415, 441, 442, 409, 369, 31, 13, 493,
	28, 255, 24, 38, 167, 224, 146, 494, 258, 26,
	256, 115, 118, 496, 22, 75, 250, 14, 243, 40,
	16, 497, 498, 17, 239, 238, 159, 235, 70, 11,
	217, 29, 155, 66, 499, 134, 500, 501, 502, 503,
	128, 68, 156, 20, 621, 413, 414, 33, 582, 479,
	269, 169, 73, 59, 583, 140, 411, 504, 505, 116,
	506, 119, 76, 588, 136, 18, 71, 42, 507, 270,
	508, 240, 622, 509, 401, 510, 157, 225, 438, 69,
	158, 595, 511, 596, 233, 382, 8, 444, 32, 254,
	242, 126, 67, 512, 234, 145, 445, 446, 237, 129,
	117, 7, 133, 34, 12, 74, 77, 416, 417, 418,
	57, 125, 483, 144, 15, 513, 402, 138, 132, -338,
	156, -324, -328, -280, 249, -354, 245, -184, -347, -346,
	-280, -399, -124, -275, 235, 243, 242, 133, -375, 136,
	291, 409, 233, -51, -52, -53, -255, 173, 601, -106,
	266, 270, 87, 87, -328, -327, -326, -376, 270, 249,
	-353, -345, 241, 250, -334, 242, 243, -329, 235, 134,
	-376, -329, 240, 250, 245, 249, 270, 270, 124, 270,
	124, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	265, -335, 148, -335, 487, 487, -341, -376, 245, 235,
	-376, -376, 241, -277, -329, 237, 25, 237, 35, 35,
	-335, -335, -335, -255, 173, -335, -335, -335, -335, 278,
	278, -335, -335, -335, -335, -335, -335, -335, -335, -335,
	-335, -335, -335, -335, -335, -335, -335, -335, 234, -375,
	-132, 394, 298, 81, -54, 280, -37, -184, -275, 235,
	236, -375, 267, -184, 218, -184, -269, 156, 15, -269,
	-266, 383, 381, 368, 373, -269, -269, -269, -269, 281,
	366, -330, 235, 35, 246, 383, 281, 366, 281, 282,
	281, 282, 376, 386, 281, -291, 14, 159, 409, 371,
	375, 274, 234, 275, 236, 385, 282, -291, 93, -270,
	156, 383, 277, -269, -269, -296, -399, -282, 335, -371,
	584, -296, -296, 32, 90, 237, -280, -78, -280, 93,
	-15, -11, -22, -21, -23, 148, -130, 383, -118, 174,
	602, 585, 586, 587, 584, 380, 592, 590, 588, 281,
	589, 87, 136, 138, 139, 4, -140, 155, -194, 148,
	149, 150, 151, 152, 153, 154, 159, 140, 142, 156,
	-236, 137, 160, 161, 162, 163, 164, 165, 166, 168,
	167, 169, 170, 157, 158, 173, 220, 221, -150, -150,
	-150, -150, -209, -399, -399, -399, -150, -264, -399, -399,
	-150, -399, -399, -399, -399, -215, -140, -399, -399, -403,
	-399, -403, -403, -314, -399, -314, -399, -399, -399, -399,
=======
	280, -40, 81, 33, 479, 482, -343, 223, 229, 230,
	225, 438, 123, 122, 75, -340, 361, 512, 593, -56,
	595, 102, 104, 594, 44, 235, 596, 597, 598, 519,
	599, 244, 600, 601, 602, 603, 609, 561, 610, 611,
	612, 124, 7, -76, -289, -285, -370, -278, 89, 90,
	91, 476, 247, 510, 511, 296, 81, 41, 485, 358,
	361, 512, 593, 307, 321, 315, 342, 334, 477, 513,
	486, 299, 248, 284, 587, 332, 132, 595, 302, 514,
	262, 366, 367, 515, 368, 102, 310, 404, 608, 301,
	516, 606, 104, 594, 79, 51, 590, 44, 257, 330,
	231, 326, 596, 285, 517, 488, 278, 123, 120, 615,
	36, 324, 50, 30, 605, 122, 49, 597, 147, 518,
	598, 519, 370, 349, 581, 48, 371, 263, 520, 84,
	268, 481, 305, 589, 372, 471, 325, 373, 295, 604,
	228, 521, 573, 374, 375, 582, 522, 350, 354, 523,
	396, 376, 622, 52, 524, 525, 583, 121, 526, 78,
	599, 80, 319, 320, 527, 293, 246, 398, 346, 450,
	457, 458, 108, 109, 453, 110, 459, 111, 460, 461,
	462, 451, 112, 105, 452, 463, 464, 347, 348, 113,
	465, 107, 106, 454, 456, 114, 466, 244, 35, 377,
	478, 297, 58, 272, 399, 46, 352, 619, 45, 577,
	473, 528, 580, 345, 341, 447, 53, 529, 530, 531,
	532, 600, 344, 318, 340, 614, 4, 290, 601, 62,
	230, 356, 355, 357, 279, 395, 337, 533, 534, 535,
	251, 82, 536, 327, 21, 537, 538, 378, 286, 539,
	56, 540, 541, 402, 260, 542, 54, 602, 39, 543,
	265, 616, 603, 544, 545, 546, 547, 267, 548, 380,
	549, 379, 351, 353, 474, 274, 381, 480, 550, 306,
	323, 264, 607, 551, 252, 467, 468, 469, 470, 588,
	266, 271, 259, 403, 253, 552, 553, 554, 555, 556,
	300, 572, 557, 558, 311, 609, 448, 43, 559, 560,
	561, 562, 563, 294, 289, 397, 406, 61, 83, 363,
	564, 565, 586, 317, 287, 566, 308, 55, 610, 611,
	612, 281, 613, 9, 620, 621, 383, 124, 291, 292,
	47, 338, 273, 567, 303, 568, 328, 329, 343, 316,
	339, 309, 574, 275, 384, 449, 261, 569, 405, 288,
	359, 364, 304, 484, 472, 280, 385, 585, 483, 336,
	333, 282, 570, 386, 236, 276, 277, 571, 575, 387,
	388, 298, 389, 390, 391, 392, 394, 393, 283, 482,
	314, 331, 365, 418, 419, 420, 421, 422, 423, 424,
	425, 426, 427, 428, 429, 430, 431, 432, 433, 434,
	435, 446, 234, -76, 234, -184, -285, 234, -255, 367,
	-275, 369, 382, 377, 387, 375, -266, 378, 380, 274,
	-388, 396, 234, 384, 222, 174, 370, 379, 388, 389,
	298, 394, 390, 393, 283, -384, -370, 598, 613, 132,
	335, 374, 372, 397, 577, 392, 391, -285, 309, -292,
	314, -279, -370, -278, 312, -184, -82, 573, 226, -294,
	-294, -125, 577, 579, -203, -140, 140, -155, -158, -146,
	-150, -197, -198, -199, -200, -156, -211, 163, 164, 171,
	141, -209, -159, 26, 475, 439, 438, 174, 31, -149,
	217, 68, 69, 441, 442, 143, 57, 11, 414, 415,
	-157, 409, 416, 411, 444, 445, 115, 446, 105, 107,
	106, 447, 448, 449, 332, 473, 474, 347, 348, 450,
	451, 452, 108, 109, 110, 111, 112, 113, 114, 453,
	456, 454, 455, 457, 458, 459, 464, 465, 460, 461,
	462, 463, 466, -85, -97, 501, 500, -98, -147, -148,
	-279, -285, 239, 408, 233, 169, 437, -151, -144, -8,
	-207, 407, 412, 413, 417, 410, 487, 489, 504, 505,
	507, 492, 497, 496, 499, 467, 468, 469, 470, 471,
	472, -370, -278, -153, -152, -193, 92, 98, 103, 99,
	-394, 116, -399, 591, 93, 94, 95, 96, 97, 117,
	118, 175, 176, 177, 178, 179, 180, 181, 182, 183,
	184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 44, 383, 383, -184, -76, -76, -76,
	-76, -220, -123, -222, -10, -8, -399, 8, -76, -8,
	-9, -13, -34, -36, 506, -35, -285, -227, -243, 12,
	159, 42, 50, -225, -226, -12, -8, -140, 19, 23,
	24, -128, 165, -140, -285, -77, -128, -264, 238, -76,
	-76, -254, -297, 309, -258, 397, 396, -281, -256, -279,
	-277, -255, 395, 227, 23, 139, 25, 27, 142, 174,
	127, 19, 143, 37, 229, 335, 245, 173, 241, 438,
	222, 72, 487, 409, 411, 407, 414, 440, 441, 408,
	369, 31, 13, 489, 28, 255, 24, 38, 167, 224,
	146, 490, 258, 26, 256, 115, 118, 492, 22, 75,
	250, 14, 243, 40, 16, 493, 494, 17, 239, 238,
	159, 235, 70, 11, 217, 29, 155, 66, 495, 134,
	496, 497, 498, 499, 128, 68, 156, 20, 617, 412,
	413, 33, 578, 475, 269, 169, 73, 59, 579, 140,
	410, 500, 501, 116, 502, 119, 76, 584, 136, 18,
	71, 42, 503, 270, 504, 240, 618, 505, 400, 506,
	157, 225, 437, 69, 158, 591, 507, 592, 233, 382,
	8, 443, 32, 254, 242, 126, 67, 508, 234, 145,
	444, 445, 237, 129, 117, 7, 133, 34, 12, 74,
	77, 415, 416, 417, 57, 125, 479, 144, 15, 509,
	401, 138, 132, -337, 156, -323, -327, -279, 249, -353,
	245, -184, -346, -345, -279, -399, -124, -274, 235, 243,
	242, 133, -374, 136, 291, 408, 233, -51, -52, -53,
	-255, 173, 597, -106, 266, 270, 87, 87, -327, -326,
	-325, -375, 270, 249, -352, -344, 241, 250, -333, 242,
	243, -328, 235, 134, -375, -328, 240, 250, 245, 249,
	270, 270, 124, 270, 124, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 265, -334, 148, -334, 483, 483,
	-340, -375, 245, 235, -375, -375, 241, -276, -328, 237,
	25, 237, 35, 35, -334, -334, -334, -255, 173, -334,
	-334, -334, -334, 278, 278, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, 234, -374, -132, 393, 298, 81, -54, 280,
	-37, -184, -274, 235, 236, -374, 267, -184, 218, -184,
	-268, 156, 15, -268, -265, 383, 381, 368, 373, -268,
	-268, -268, -268, 281, 366, -329, 235, 35, 246, 383,
	281, 366, 281, 282, 281, 282, 376, 386, 281, -290,
	14, 159, 408, 371, 375, 274, 234, 275, 236, 385,
	-370, 580, 282, -290, 93, -269, 156, 383, 277, -268,
	-295, -399, -281, 335, -295, -295, 32, 90, 237, -279,
	-78, -279, 93, -15, -11, -22, -21, -23, 148, -130,
	383, -118, 174, 598, 581, 582, 583, 580, 380, 588,
	586, 584, 281, 585, 87, 136, 138, 139, 4, -140,
	155, -194, 148, 149, 150, 151, 152, 153, 154, 159,
	140, 142, 156, -236, 137, 160, 161, 162, 163, 164,
	165, 166, 168, 167, 169, 170, 157, 158, 173, 220,
	221, -150, -150, -150, -150, -209, -399, -399, -399, -150,
	-263, -399, -399, -150, -399, -399, -399, -399, -215, -140,
	-399, -399, -403, -399, -403, -403, -313, -399, -313, -399,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
<<<<<<< HEAD
	-399, -399, -399, 218, -399, -399, -399, -399, -399, -314,
	-314, -314, -314, -314, -399, -399, -399, -399, -399, -399,
	103, 98, 92, -211, 99, 93, -280, -286, -8, -9,
	-203, -399, -295, -385, -386, -187, -184, -399, 298, -280,
	-280, 267, -225, -12, -8, -220, -226, -222, -8, -76,
	-116, -129, 63, 64, -131, 24, 38, 67, 65, 23,
	-400, 88, -400, -243, -400, 87, -36, -247, 86, 61,
	43, 93, 93, 87, 21, -221, -223, -140, 14, -284,
	4, -283, 25, -280, 93, 218, 101, 14, -185, 29,
	-184, -265, -265, 87, 309, -258, -298, -260, -259, 399,
	401, 148, -285, -280, 93, 31, 88, 87, -184, -303,
	-306, -308, -307, -309, -304, -305, 332, 333, 174, 336,
	338, 339, 340, 341, 342, 343, 344, 345, 346, 349,
	32, 257, 328, 329, 330, 331, 350, 351, 352, 353,
	354, 355, 356, 357, 315, 334, 481, 316, 317, 318,
	319, 320, 321, 323, 324, 325, 326, 327, -374, -371,
	86, 88, 87, -310, 86, -140, -132, 234, -371, 235,
	235, 235, -76, 438, -335, -335, -335, 265, 19, -44,
	-41, -361, 18, -40, -41, 227, 120, 121, 224, 86,
	-324, 86, -333, -374, -371, 86, 134, 240, 133, -332,
	-329, -332, -333, -371, -211, -371, 134, 134, -371, -371,
	-251, -280, -251, -251, 23, -251, 23, -251, 23, 95,
	-280, -251, 23, -251, 23, -251, 23, -251, 23, -251,
	23, 31, 78, 79, 80, 31, 82, 83, 84, -211,
	-371, -371, -211, -324, -211, -184, -371, -255, 95, 95,
	95, -335, -335, 95, 93, 93, 93, -335, -335, 95,
	93, -288, -286, 93, 93, -377, 251, 295, 297, 95,
	95, 95, 95, 31, 93, -378, 31, 609, 608, 610,
	611, 612, 93, 95, 31, 95, 31, 95, -280, 86,
	-184, -138, 285, 222, 224, 227, 76, 93, 299, 303,
	304, 148, 44, 87, 237, 234, -371, -271, 239, -271,
	-280, -287, -286, -278, 93, -140, -331, 14, 159, -291,
	-291, -269, -184, -331, -291, -269, -184, -269, -269, -269,
	-269, -291, -291, -291, -269, -286, -286, -184, -184, -184,
	-184, -184, -184, -184, -296, -270, -269, 584, 93, -263,
	14, 76, -296, -296, -294, 312, 346, 578, 579, 580,
	87, 483, -177, -184, 584, 584, 584, 584, 584, 584,
	-140, -140, -140, -140, 506, -201, 116, 140, 117, 118,
	-158, -202, -207, -209, 100, 159, 142, 156, -236, -146,
	-150, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -297, -280, 93, 174, -154, -153,
	99, -394, -154, -126, -128, -140, -140, -371, -140, -280,
	-126, -126, -140, -122, 24, 38, -213, -214, 144, -211,
	-140, -400, -400, 95, 99, -280, -280, -115, -114, 420,
	421, 422, 423, 425, 426, 427, 430, 431, 435, 436,
	419, 437, 424, 429, 432, 433, 434, 428, 331, -140,
	-140, -140, -140, -140, -140, -83, -140, 127, 128, 129,
	-140, -140, -140, -400, -140, -140, -140, -204, -203, -370,
	-369, -368, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -400, -140, -160, -144, 95,
	-371, 99, -140, -140, -127, 24, 38, -126, -282, -287,
	-278, -126, -127, -127, -126, -126, -140, -140, -140, -140,
	-140, -140, 218, -243, -400, -203, 87, -387, 401, 402,
	582, -289, 270, -288, 25, -204, 93, 14, -249, 77,
	-280, -225, -225, 63, 64, 59, -126, -131, -400, -35,
	25, -245, -280, 62, 93, -315, -255, 358, 359, 174,
	-140, -140, 87, -224, 27, 28, -184, -283, 165, -287,
	-184, -250, 270, -184, -162, -164, -165, -166, -187, -210,
	-399, -167, 502, 499, 14, -177, -178, -186, -286, -258,
	-260, 87, 400, 402, 403, 76, 119, -140, -316, 173,
	-343, -342, -341, -324, -326, -327, -328, 88, -316, -320,
	364, 363, -310, -310, -310, -310, -310, -315, -315, -315,
	-315, 86, 86, -310, -310, -310, -310, -318, 86, -318,
	-318, -319, 86, -319, -354, -140, -351, -350, -348, -349,
	244, 102, 575, 531, 483, 523, 565, 77, -346, -224,
	95, -400, -138, -272, 239, -352, -349, -371, -371, -371,
	-272, -371, 93, -371, 93, -371, 93, -107, -58, -1,
	621, 622, 623, 87, 19, -325, -324, -57, 295, -357,
	-358, 270, -353, -347, -333, 134, -332, -333, -333, -371,
	87, 29, 124, 124, 124, 124, 483, 224, 32, -273,
	522, 140, 575, 531, -324, -57, 237, 237, -297, -297,
	-297, 93, 93, -268, 617, -177, -134, 287, 148, 276,
	276, 234, 234, 289, -184, 300, 302, 301, 299, 303,
	304, 23, 23, 23, 288, 290, 292, 278, -184, -184,
	-271, 76, -179, -184, 26, -286, -184, -269, -269, -184,
	-269, -269, -184, -280, -118, 401, 87, 483, 22, -119,
	22, -399, 116, 117, 118, -202, -146, -150, -146, 139,
	258, 87, -400, 25, 87, 77, -400, 87, -400, -400,
	87, 14, -126, -216, -214, 146, -140, -400, 87, -400,
	-400, 87, 87, 14, -301, 25, -400, -400, -400, -400,
	-400, -215, -400, 14, 87, -400, -400, -400, 87, 87,
	-400, -400, 87, 87, -400, 87, 87, 87, -367, 87,
	87, 87, 87, -400, -400, -400, -400, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, -400, -90, 507,
	-400, -400, 87, -400, 87, -400, -126, -126, -399, 218,
	-400, -400, -400, -400, -400, 87, 87, 87, 87, 87,
	87, -282, -400, -386, 581, 402, -191, -190, -188, 74,
	238, 75, -399, -288, -400, -154, 90, -246, 90, -245,
	-196, -280, 95, 99, -227, -161, -163, 14, -131, -209,
	88, 87, -315, -231, -237, -266, -280, 93, 174, -317,
	174, -317, 358, 359, -223, 218, -192, 15, -195, 32,
	57, -11, -399, -399, 32, 87, -180, -182, -181, -183,
	66, 70, 72, 67, 68, 69, 73, -292, 25, -162,
	-9, -8, -399, -399, -399, -184, -177, -401, 14, 77,
	-401, 87, 218, -259, -261, 404, 401, 407, -371, 93,
	-106, 87, -341, -328, -228, -135, 40, -321, 365, -315,
	490, -315, -323, 93, -323, 95, 95, 88, -47, -42,
	-43, 33, 81, -348, -335, 93, 39, -335, -335, -280,
	88, -224, -134, -184, 140, 76, -352, -352, -352, -286,
	-2, 620, 626, 134, 86, 368, 18, -245, 87, 88,
	-212, 296, 88, -108, -280, 88, 86, -333, -333, -280,
	-399, 234, 31, 31, 575, 531, 522, -57, -212, -211,
	-371, -316, 619, 618, 88, 236, 294, -139, 415, -136,
	93, 89, -184, -184, -184, -184, -184, 227, 224, -395,
	305, -395, 279, 237, -177, -184, 87, -81, 253, 248,
	-291, -291, 33, -184, 401, 593, 591, -140, 139, 258,
	-158, -150, -128, 480, -299, 174, 332, 257, 330, 326,
	346, 337, 363, 328, 364, 325, 324, 323, -299, -297,
	-203, -140, -140, -220, 147, -140, 145, -140, -140, -140,
	-140, -400, 174, 332, 14, -140, -140, -140, -140, -368,
	-140, -140, -140, -366, -365, -154, -211, -400, -366, -140,
	-140, -365, -365, -369, -369, -369, -369, -369, -203, -203,
	-203, -203, -399, -280, -93, -92, -91, 558, 238, -90,
	-160, -93, -160, -400, -400, -127, -282, -140, -140, -140,
	-140, -140, -140, -188, -329, -329, -329, -251, 87, -262,
	22, 14, 57, 57, -161, -192, -162, -131, -280, -234,
	577, -240, 46, -238, -239, 47, -235, 48, 56, -317,
	-317, 165, -225, -140, -252, 76, -253, -257, -211, -206,
	-208, -207, -399, -244, -400, -280, -251, -253, -164, -165,
	-165, -164, -165, 66, 66, 66, 71, 66, 71, 66,
	-181, -286, -400, -400, -9, -9, -140, -289, 77, -162,
	-162, -186, -286, 165, 401, 405, 406, -341, -393, 116,
	140, 31, 76, 361, 102, -391, 173, 519, 570, 575,
	531, 523, 565, -392, 240, 133, 134, 252, 25, 41,
	88, 87, 88, 87, 88, 87, -274, -273, -43, -42,
	-335, -335, 95, -371, 93, 93, 236, 26, -184, 76,
	76, 76, -109, 624, 95, 86, -3, 81, -140, 86,
	19, -324, -211, -359, -311, -360, -312, -313, -5, -6,
	-336, -112, 57, 102, -61, 44, 235, 604, 605, 124,
	-399, 617, -351, -245, -355, -357, -184, -143, -399, -142,
	-144, -151, 163, 164, -212, -184, -133, 285, 293, 86,
	-137, 90, -373, 77, 276, 361, 276, -396, 306, 93,
	-396, -184, -81, -47, -184, -269, -269, 33, -371, -400,
	-158, -150, -399, -302, 489, -310, -310, -310, -319, -310,
	320, -310, 320, -310, -400, -400, -400, 87, -400, 22,
	-400, -117, 444, -140, 87, 87, 87, -400, 86, 86,
	-140, -400, -400, -400, -400, -367, 87, -400, 87, -400,
	87, -300, 576, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -400, -89, -281, -280, -90, 540, 540, -400,
	-90, -217, 87, -400, -400, 87, -400, 87, 87, -400,
	87, -400, 87, -189, 22, -189, -189, -400, 90, -184,
	-192, -218, 16, -231, 51, 338, -242, -241, 55, 47,
	-239, 19, 49, 19, 30, -252, 87, 148, 87, -400,
	-400, 87, 57, 218, -400, -192, -175, -174, 76, 77,
	-176, 76, -174, 66, 66, -247, -400, -400, 87, -250,
	-162, -192, -192, 218, 116, -399, -145, -157, -143, 12,
	93, 93, -371, -390, 608, 609, 31, 95, -335, -335,
	134, 134, -184, 86, -315, 93, -315, 95, 95, 31,
	82, 83, 84, 31, 78, 79, 80, -184, -184, -184,
	-184, -356, 86, 19, -140, 86, 148, 88, -245, -245,
	272, 159, -335, 602, 278, 278, -335, -335, -335, -111,
	-110, 624, 88, -400, 87, -322, 483, 486, -140, -152,
	-152, -247, 88, -364, 483, -372, -280, -280, -280, -280,
	95, 97, -146, -400, -315, -140, -140, -225, 93, -140,
	-140, -140, 95, 95, -400, -400, -366, -365, -140, -400,
	-172, -171, -173, 585, 116, 31, -299, -400, -205, 270,
	-96, -95, -94, 14, -400, -140, -140, -140, -140, -140,
	-140, -399, 66, 18, 16, -399, -399, -289, -218, -219,
	17, 19, -232, 53, -230, 52, -230, -241, 19, 19,
	93, 19, 93, 134, -257, -140, -208, 57, -11, -280,
	-206, -280, -220, -140, 86, -140, -154, -192, -192, -140,
	-198, 447, 105, 107, 106, 448, 449, 450, 474, 477,
	478, 476, 475, 347, 348, 451, 452, 453, 108, 109,
	110, 111, 112, 113, 114, 454, 457, 455, 458, 459,
	460, 465, 466, 461, 462, 463, 464, 467, 468, 469,
	470, 471, 472, 473, 93, 93, 86, -140, 88, 88,
	-247, -355, -58, 88, -245, 95, 88, 273, -207, -399,
	93, -335, -335, -335, 95, 95, -288, -400, 87, -280,
	-392, -357, 487, 487, -400, 25, -363, -362, -282, 86,
	77, -121, 159, 483, -400, -400, -400, 87, -400, -400,
	88, 88, -400, -400, 87, -400, -171, -173, -400, 76,
	-154, -220, 19, -93, 295, 297, -93, -400, 87, -400,
	-400, 87, -400, 87, -400, -248, -400, -280, 240, 19,
	19, -248, -248, -191, -219, -103, -102, -101, 513, -140,
	-203, -233, 54, 76, 119, 93, 93, 93, 12, -206,
	218, -225, -245, -169, 368, -220, -400, -245, 88, 25,
	88, 626, 134, 88, -207, -120, -399, 269, -288, 93,
	93, -110, -113, -11, 87, 148, -245, -184, -400, 481,
	73, 484, -140, -140, -400, 76, 494, 585, -88, -87,
	-84, 596, 622, -203, -90, -90, -140, -140, -140, 87,
	-400, -400, -400, -103, 87, -100, -99, -280, 76, 119,
	-253, -280, 88, -400, -399, -225, 88, -229, -11, 86,
	-3, 269, -311, -360, -312, -313, -5, -6, -336, -79,
	483, -362, -340, -282, 93, 95, 88, 62, 482, 485,
	-400, -367, -86, 142, 594, 573, -141, -152, -149, 217,
	-400, 87, -400, 87, -400, 87, -280, 240, -101, 87,
	25, -289, -170, -168, -280, 537, -383, -382, 479, -393,
	-389, 116, 140, 102, -391, 575, 531, 125, 126, -79,
	-140, 86, -400, -80, 284, 581, -373, 62, -400, -86,
	595, 551, 525, 551, 525, -140, -140, -140, -99, -399,
	-400, 87, 22, -303, -60, 548, -380, -381, 76, -384,
	374, 547, 568, 116, 93, 88, -245, 245, -364, 483,
	139, -400, 87, -400, 87, -400, -89, -168, 544, -316,
	-154, -381, 76, -380, 76, 13, 12, -4, 625, 88,
	286, 484, -86, -140, -140, -400, -59, 26, -169, -379,
	253, 248, 251, 32, -379, 95, -4, 485, -400, -400,
	548, 247, 31, 116, -154, -172, -171, -171,
=======
	-399, -399, -399, -399, 218, -399, -399, -399, -399, -399,
	-313, -313, -313, -313, -313, -399, -399, -399, -399, -399,
	-399, 103, 98, 92, -211, 99, 93, -279, -285, -8,
	-9, -203, -399, -294, -385, -386, -187, -184, -399, 298,
	-279, -279, 267, -225, -12, -8, -220, -226, -222, -8,
	-76, -116, -129, 63, 64, -131, 24, 38, 67, 65,
	23, -400, 88, -400, -243, -400, 87, -36, -247, 86,
	61, 43, 93, 93, 87, 21, -221, -223, -140, 14,
	-283, 4, -282, 25, -279, 93, 218, 101, 14, -185,
	29, -184, -264, -264, 87, 309, -258, -297, -260, -259,
	398, 400, 148, -284, -279, 93, 31, 88, 87, -184,
	-302, -305, -307, -306, -308, -303, -304, 332, 333, 174,
	336, 338, 339, 340, 341, 342, 343, 344, 345, 346,
	349, 32, 257, 328, 329, 330, 331, 350, 351, 352,
	353, 354, 355, 356, 357, 315, 334, 477, 316, 317,
	318, 319, 320, 321, 323, 324, 325, 326, 327, -373,
	-370, 86, 88, 87, -309, 86, -140, -132, 234, -370,
	235, 235, 235, -76, 437, -334, -334, -334, 265, 19,
	-44, -41, -360, 18, -40, -41, 227, 120, 121, 224,
	86, -323, 86, -332, -373, -370, 86, 134, 240, 133,
	-331, -328, -331, -332, -370, -211, -370, 134, 134, -370,
	-370, -251, -279, -251, -251, 23, -251, 23, -251, 23,
	95, -279, -251, 23, -251, 23, -251, 23, -251, 23,
	-251, 23, 31, 78, 79, 80, 31, 82, 83, 84,
	-211, -370, -370, -211, -323, -211, -184, -370, -255, 95,
	95, 95, -334, -334, 95, 93, 93, 93, -334, -334,
	95, 93, -287, -285, 93, 93, -376, 251, 295, 297,
	95, 95, 95, 95, 31, 93, -377, 31, 605, 604,
	606, 607, 608, 93, 95, 31, 95, 31, 95, -279,
	86, -184, -138, 285, 222, 224, 227, 76, 93, 299,
	303, 304, 148, 44, 87, 237, 234, -370, -270, 239,
	-270, -279, -286, -285, -277, 93, -140, -330, 14, 159,
	-290, -290, -268, -184, -330, -290, -268, -184, -268, -268,
	-268, -268, -290, -290, -290, -268, -285, -285, -184, -184,
	-184, -184, -184, -184, -184, -295, -295, -295, -269, -268,
	580, 93, 76, -293, 312, 346, 574, 575, 576, 87,
	479, -177, -184, 580, 580, 580, 580, 580, 580, -140,
	-140, -140, -140, 502, -201, 116, 140, 117, 118, -158,
	-202, -207, -209, 100, 159, 142, 156, -236, -146, -150,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -296, -279, 93, 174, -154, -153, 99,
	-394, -154, -126, -128, -140, -140, -370, -140, -279, -126,
	-126, -140, -122, 24, 38, -213, -214, 144, -211, -140,
	-400, -400, 95, 99, -279, -279, -115, -114, 419, 420,
	421, 422, 424, 425, 426, 429, 430, 434, 435, 418,
	436, 423, 428, 431, 432, 433, 427, 331, -140, -140,
	-140, -140, -140, -140, -83, -140, 127, 128, 129, -203,
	-140, -146, -140, -140, -204, -203, -369, -368, -367, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -400, -140, -160, -144, 95, -370, 99, -140,
	-140, -127, 24, 38, -126, -281, -286, -277, -126, -127,
	-127, -126, -126, -140, -140, -140, -140, -140, -140, 218,
	-243, -400, -203, 87, -387, 400, 401, 578, -288, 270,
	-287, 25, -204, 93, 14, -249, 77, -279, -225, -225,
	63, 64, 59, -126, -131, -400, -35, 25, -245, -279,
	62, 93, -314, -255, 358, 359, 174, -140, -140, 87,
	-224, 27, 28, -184, -282, 165, -286, -184, -250, 270,
	-184, -162, -164, -165, -166, -187, -210, -399, -167, 495,
	14, -177, -178, -186, -285, -258, -260, 87, 399, 401,
	402, 76, 119, -140, -315, 173, -342, -341, -340, -323,
	-325, -326, -327, 88, -315, -319, 364, 363, -309, -309,
	-309, -309, -309, -314, -314, -314, -314, 86, 86, -309,
	-309, -309, -309, -317, 86, -317, -317, -318, 86, -318,
	-353, -140, -350, -349, -347, -348, 244, 102, 571, 527,
	479, 519, 561, 77, -345, -224, 95, -400, -138, -271,
	239, -351, -348, -370, -370, -370, -271, -370, 93, -370,
	93, -370, 93, -107, -58, -1, 617, 618, 619, 87,
	19, -324, -323, -57, 295, -356, -357, 270, -352, -346,
	-332, 134, -331, -332, -332, -370, 87, 29, 124, 124,
	124, 124, 479, 224, 32, -272, 518, 140, 571, 527,
	-323, -57, 237, 237, -296, -296, -296, 93, 93, -267,
	613, -177, -134, 287, 148, 276, 276, 234, 234, 289,
	-184, 300, 302, 301, 299, 303, 304, 23, 23, 23,
	288, 290, 292, 278, -184, -184, -270, 76, -179, -184,
	26, -285, -184, -268, -268, -184, -268, -268, -184, -279,
	-118, 400, 87, 479, 22, -119, 22, -399, 116, 117,
	118, -202, -146, -150, -146, 139, 258, 87, -400, 25,
	87, 77, -400, 87, -400, -400, 87, 14, -126, -216,
	-214, 146, -140, -400, 87, -400, -400, 87, 87, 14,
	-300, 25, -400, -400, -400, -400, -400, -215, -400, 14,
	-400, 77, 87, 159, 87, 87, -400, -400, 87, 87,
	-400, 87, 87, 87, -366, 87, 87, 87, 87, -400,
	-400, -400, -400, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, -400, -90, 503, -400, -400, 87, -400,
	87, -400, -126, -126, -399, 218, -400, -400, -400, -400,
	-400, 87, 87, 87, 87, 87, 87, -281, -400, -386,
	577, 401, -191, -190, -188, 74, 238, 75, -399, -287,
	-400, -154, 90, -246, 90, -245, -196, -279, 95, 99,
	-227, -161, -163, 14, -131, -209, 88, 87, -314, -231,
	-237, -265, -279, 93, 174, -316, 174, -316, 358, 359,
	-223, 218, -192, 15, -195, 32, 57, -11, -399, -399,
	32, 87, -180, -182, -181, -183, 66, 70, 72, 67,
	68, 69, 73, -291, 25, -162, -9, -8, -399, -399,
	-184, -177, -401, 14, 77, -401, 87, 218, -259, -261,
	403, 400, 406, -370, 93, -106, 87, -340, -327, -228,
	-135, 40, -320, 365, -314, 486, -314, -322, 93, -322,
	95, 95, 88, -47, -42, -43, 33, 81, -347, -334,
	93, 39, -334, -334, -279, 88, -224, -134, -184, 140,
	76, -351, -351, -351, -285, -2, 616, 622, 134, 86,
	368, 18, -245, 87, 88, -212, 296, 88, -108, -279,
	88, 86, -332, -332, -279, -399, 234, 31, 31, 571,
	527, 518, -57, -212, -211, -370, -315, 615, 614, 88,
	236, 294, -139, 414, -136, 93, 89, -184, -184, -184,
	-184, -184, 227, 224, -395, 305, -395, 279, 237, -177,
	-184, 87, -81, 253, 248, -290, -290, 33, -184, 400,
	589, 587, -140, 139, 258, -158, -150, -128, 476, -298,
	174, 332, 257, 330, 326, 346, 337, 363, 328, 364,
	325, 324, 323, -298, -296, -203, -140, -140, -220, 147,
	-140, 145, -140, -140, -140, -140, -400, 174, 332, 14,
	-140, -296, -140, -140, -140, -140, -367, -140, -140, -140,
	-365, -364, -154, -211, -400, -365, -140, -140, -364, -364,
	-368, -368, -368, -368, -368, -203, -203, -203, -203, -399,
	-279, -93, -92, -91, 554, 238, -90, -160, -93, -160,
	-400, -400, -127, -281, -140, -140, -140, -140, -140, -140,
	-188, -328, -328, -328, -251, 87, -262, 22, 14, 57,
	57, -161, -192, -162, -131, -279, -234, 573, -240, 46,
	-238, -239, 47, -235, 48, 56, -316, -316, 165, -225,
	-140, -252, 76, -253, -257, -211, -206, -208, -207, -399,
	-244, -400, -279, -251, -253, -164, -165, -165, -164, -165,
	66, 66, 66, 71, 66, 71, 66, -181, -285, -400,
	-400, -9, -140, -288, 77, -162, -162, -186, -285, 165,
	400, 404, 405, -340, -393, 116, 140, 31, 76, 361,
	102, -391, 173, 515, 566, 571, 527, 519, 561, -392,
	240, 133, 134, 252, 25, 41, 88, 87, 88, 87,
	88, 87, -273, -272, -43, -42, -334, -334, 95, -370,
	93, 93, 236, 26, -184, 76, 76, 76, -109, 620,
	95, 86, -3, 81, -140, 86, 19, -323, -211, -358,
	-310, -359, -311, -312, -5, -6, -335, -112, 57, 102,
	-61, 44, 235, 600, 601, 124, -399, 613, -350, -245,
	-354, -356, -184, -143, -399, -142, -144, -151, 163, 164,
	-212, -184, -133, 285, 293, 86, -137, 90, -372, 77,
	276, 361, 276, -396, 306, 93, -396, -184, -81, -47,
	-184, -268, -268, 33, -370, -400, -158, -150, -399, -301,
	485, -309, -309, -309, -318, -309, 320, -309, 320, -309,
	-400, -400, -400, 87, -400, 22, -400, -117, 443, -140,
	87, 87, 87, -400, 86, 86, -140, -400, -400, -400,
	87, -400, -400, -400, -366, 87, -400, 87, -400, 87,
	-299, 572, -400, -400, -400, -400, -400, -400, -400, -400,
	-400, -400, -89, -280, -279, -90, 536, 536, -400, -90,
	-217, 87, -400, -400, 87, -400, 87, 87, -400, 87,
	-400, 87, -189, 22, -189, -189, -400, 90, -184, -192,
	-218, 16, -231, 51, 338, -242, -241, 55, 47, -239,
	19, 49, 19, 30, -252, 87, 148, 87, -400, -400,
	87, 57, 218, -400, -192, -175, -174, 76, 77, -176,
	76, -174, 66, 66, -247, -400, 87, -250, -162, -192,
	-192, 218, 116, -399, -145, -157, -143, 12, 93, 93,
	-370, -390, 604, 605, 31, 95, -334, -334, 134, 134,
	-184, 86, -314, 93, -314, 95, 95, 31, 82, 83,
	84, 31, 78, 79, 80, -184, -184, -184, -184, -355,
	86, 19, -140, 86, 148, 88, -245, -245, 272, 159,
	-334, 598, 278, 278, -334, -334, -334, -111, -110, 620,
	88, -400, 87, -321, 479, 482, -140, -152, -152, -247,
	88, -363, 479, -371, -279, -279, -279, -279, 95, 97,
	-146, -400, -314, -140, -140, -225, 93, -140, -140, -140,
	95, 95, -400, -140, -400, -365, -364, -140, -400, -172,
	-171, -173, 581, 116, 31, -298, -400, -205, 270, -96,
	-95, -94, 14, -400, -140, -140, -140, -140, -140, -140,
	-399, 66, 18, 16, -399, -399, -288, -218, -219, 17,
	19, -232, 53, -230, 52, -230, -241, 19, 19, 93,
	19, 93, 134, -257, -140, -208, 57, -11, -279, -206,
	-279, -220, -140, 86, -140, -154, -192, -192, -140, -198,
	446, 105, 107, 106, 447, 448, 449, 332, 473, 474,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 457, 458, 459, 464, 465,
	460, 461, 462, 463, 466, 467, 468, 469, 470, 471,
	472, 93, 93, 86, -140, 88, 88, -247, -354, -58,
	88, -245, 95, 88, 273, -207, -399, 93, -334, -334,
	-334, 95, 95, -287, -400, 87, -279, -392, -356, 483,
	483, -400, 25, -362, -361, -281, 86, 77, -121, 159,
	479, -400, -400, -400, 87, -400, -400, 88, 88, -400,
	-400, -400, 87, -400, -171, -173, -400, 76, -154, -220,
	19, -93, 295, 297, -93, -400, 87, -400, -400, 87,
	-400, 87, -400, -248, -400, -279, 240, 19, 19, -248,
	-248, -191, -219, -103, -102, -101, 509, -140, -203, -233,
	54, 76, 119, 93, 93, 93, 12, -206, 218, -225,
	-245, -169, 368, -220, -400, -245, 88, 25, 88, 622,
	134, 88, -207, -120, -399, 269, -287, 93, 93, -110,
	-113, -11, 87, 148, -245, -184, -400, 477, 73, 480,
	-140, -140, -400, 76, 490, 581, -88, -87, -84, 592,
	618, -203, -90, -90, -140, -140, -140, 87, -400, -400,
	-400, -103, 87, -100, -99, -279, 76, 119, -253, -279,
	88, -400, -399, -225, 88, -229, -11, 86, -3, 269,
	-310, -359, -311, -312, -5, -6, -335, -79, 479, -361,
	-339, -281, 93, 95, 88, 62, 478, 481, -400, -366,
	-86, 142, 590, 569, -141, -152, -149, 217, -400, 87,
	-400, 87, -400, 87, -279, 240, -101, 87, 25, -288,
	-170, -168, -279, 533, -382, -381, 475, -393, -389, 116,
	140, 102, -391, 571, 527, 125, 126, -79, -140, 86,
	-400, -80, 284, 577, -372, 62, -400, -86, 591, 547,
	521, 547, 521, -140, -140, -140, -99, -399, -400, 87,
	22, -302, -60, 544, -379, -380, 76, -383, 374, 543,
	564, 116, 93, 88, -245, 245, -363, 479, 139, -400,
	87, -400, 87, -400, -89, -168, 540, -315, -154, -380,
	76, -379, 76, 13, 12, -4, 621, 88, 286, 480,
	-86, -140, -140, -400, -59, 26, -169, -378, 253, 248,
	251, 32, -378, 95, -4, 481, -400, -400, 544, 247,
	31, 116, -154, -172, -171, -171,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
<<<<<<< HEAD
	31, 32, 33, 34, 35, 36, 68, 70, 71, 828,
	828, 828, 0, 828, 0, 0, 828, -2, -2, 828,
	1406, 0, 828, 0, 0, -2, 760, 762, 0, 764,
	-2, 0, 0, 773, 1926, 1926, 823, 0, 0, 0,
	0, 0, 828, 828, 828, 828, 1265, 48, 828, 0,
	83, 84, 779, 780, 781, 63, 0, 1924, 1, 3,
	69, 73, 0, 0, 0, 56, 1274, 0, 76, 0,
	0, 832, 0, 830, 0, 1389, 828, 828, 0, 114,
=======
	31, 32, 33, 34, 35, 36, 68, 70, 71, 826,
	826, 826, 0, 826, 0, 0, 826, -2, -2, 826,
	1403, 0, 826, 0, 0, -2, 758, 760, 0, 762,
	-2, 0, 0, 771, 1919, 1919, 821, 0, 0, 0,
	0, 0, 826, 826, 826, 826, 1262, 48, 826, 0,
	83, 84, 777, 778, 779, 63, 0, 1917, 1, 3,
	69, 73, 0, 0, 0, 56, 1271, 0, 76, 0,
	0, 830, 0, 828, 0, 1386, 826, 826, 0, 114,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 574, 501, 553, 499, 538, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
<<<<<<< HEAD
	1391, 0, 0, 0, 535, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1292, 153, 1407, 1404, 1405, 38, 39,
	40, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917,
	1918, 1919, 1920, 1921, 1922, 1923, 0, 1383, 0, 687,
	929, 0, 749, 749, 0, 749, 749, 749, 749, 0,
	0, 0, 699, 0, 0, 0, 0, 746, 0, 715,
	716, 0, 746, 0, 722, 752, 0, 727, 749, 749,
	730, 1927, 0, 1927, 1927, 1374, 0, 743, 741, 755,
	756, 759, 763, 0, 768, 771, 1400, 1401, 0, 786,
	47, 1650, 778, 791, 792, 0, 824, 825, 43, 1072,
	0, 951, 956, 967, 982, 983, 984, 985, 986, 988,
	989, 0, 0, 0, 0, 994, 995, 0, 0, 0,
	0, 0, 1053, 1003, 0, 0, 0, 0, 0, 1241,
	0, 0, 1202, 1202, 1090, 1202, 1204, 1204, 0, 0,
	0, 1923, 1694, 1702, 1703, 1725, 1817, 1866, 1657, 1676,
	1677, 1799, 1800, 1698, 1699, 1680, 1692, 1695, 1683, 1684,
	1686, 1688, 1693, 1700, 1706, 1685, 1705, 1704, 0, 1681,
	1682, 1687, 1697, 1701, 1689, 1690, 1691, 1696, 1707, 0,
	0, 0, 0, 0, 1148, 1149, 1250, 0, 0, 0,
	0, 0, 0, 273, 274, 1071, 1363, 1204, 1204, 1204,
	1204, 1204, 1013, 1014, 1015, 1016, 1017, 1041, 1042, 1048,
	1049, 1794, 1795, 1796, 1797, 1643, 1875, -2, -2, 219,
	220, 221, 222, 223, 224, 225, 0, 215, 0, 0,
	278, 279, 275, 276, 277, 1055, 1056, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 250, 251, 252, 253,
	254, 255, 256, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 1926,
	0, 801, 0, 0, 0, 0, 0, 1274, 0, 1266,
	1265, 61, 0, 828, -2, 0, 0, 0, 0, 45,
	0, 50, 888, 75, 74, 1314, 0, 0, 0, 57,
	1275, 65, 67, 1276, 0, 833, 834, 0, 864, 868,
	0, 829, 0, 0, 1390, 1389, 1389, 100, 0, 1862,
	1367, -2, -2, 0, 0, 1402, 1403, 1376, -2, 1410,
	1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420,
	1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430,
	1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440,
	1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450,
	1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460,
	1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, -2, 0,
	0, 165, 166, 0, 41, 404, 0, 161, 0, 397,
	338, 0, 1292, 0, 0, 0, 0, 0, 828, 0,
	1384, 142, 143, 150, 151, 152, 377, 377, 377, 550,
	0, 0, 153, 153, 508, 509, 510, 0, 0, -2,
	402, 0, 488, 0, 0, 391, 391, 395, 393, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	635, 0, 378, 0, 548, 549, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 525, 526,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 377,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	1305, 0, 0, 0, -2, 0, 679, 0, 0, 0,
	1385, 1385, 0, 686, 0, 688, 689, 0, 0, 690,
	0, 746, 746, 744, 745, 692, 693, 694, 695, 749,
	0, 0, 386, 387, 388, 746, 749, 0, 749, 749,
	749, 749, 746, 746, 746, 749, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1927, 752, 749, 0, 723,
	0, 724, 725, 728, 729, 731, 1928, 1929, 1422, 1927,
	1927, 735, 739, 1375, 761, 769, 772, 789, 787, 788,
	790, 782, 783, 784, 785, 0, 803, 804, 809, 0,
	0, 0, 0, 815, 816, 817, 0, 0, 820, 821,
	822, 0, 0, 0, 0, 0, 949, 0, 0, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 968, 969, 0, 0, 0, 990, 991,
	992, 993, 996, 0, 0, 0, 1001, 1002, 0, 0,
	0, 0, 0, 0, 838, 0, 1242, 0, 0, 1088,
	0, 1089, 1091, 1092, 0, 1093, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1395, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 848, 0, 0, 848, 848, 0, 0, 208,
	209, 210, 211, 212, 0, 0, 0, 0, 0, 0,
	226, 227, 228, 229, 230, 280, 1250, 0, 1071, 0,
	0, 0, 44, 793, 794, 0, 912, 1395, 0, 0,
	844, 0, 55, 64, 66, 1274, 59, 1274, 0, 850,
	0, 0, -2, -2, 851, 857, 858, 859, 860, 861,
	52, 1925, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 350, 1317, 0, 0, 1267, 1268, 1271, 0, 865,
	1736, 869, 0, 871, 872, 0, 831, 0, 98, 0,
	928, 0, 0, 0, 1862, 1373, 0, 102, 103, 0,
	0, 0, 361, 1378, 1379, 1380, -2, 384, 0, 361,
	345, 288, 289, 290, 338, 292, 338, 338, 338, 338,
	350, 350, 350, 350, 321, 322, 323, 324, 325, 0,
	0, 307, 338, 338, 338, 338, 328, 329, 330, 331,
	332, 333, 334, 335, 293, 294, 295, 296, 297, 298,
	299, 300, 301, 340, 340, 340, 342, 342, 0, 42,
	0, 365, 0, 1271, 0, 0, 1305, 1387, 1397, 0,
	0, 0, 1387, 120, 0, 0, 0, 551, 585, 502,
	539, 552, 0, 505, 506, -2, 0, 0, 487, 0,
	489, 0, 385, 0, -2, 0, 395, 0, 391, 395,
	392, 395, 383, 396, 529, 530, 531, 0, 533, 534,
	615, 898, 0, 0, 0, 0, 0, 621, 622, 623,
	0, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	0, 0, 0, 489, 0, 536, 0, 0, 441, 442,
	443, 0, 0, 446, 447, 448, 449, 0, 0, 452,
	453, 454, 915, 916, 455, 456, 481, 482, 483, 457,
	458, 459, 460, 461, 462, 463, 475, 476, 477, 478,
	479, 480, 464, 465, 466, 467, 468, 469, 472, 0,
	135, 1296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1385, 0, 0, 0, 0,
	847, 930, 1408, 1409, 750, 751, 0, 389, 390, 749,
	749, 696, 736, 0, 749, 700, 737, 701, 703, 702,
	704, 717, 718, 749, 707, 747, 748, 708, 709, 710,
	711, 712, 713, 714, 732, 719, 720, 721, 753, 0,
	757, 758, 733, 734, 0, 770, 774, 775, 776, 777,
	0, 0, 806, 94, 811, 812, 813, 814, 826, 819,
	1073, 946, 947, 948, 0, 950, 953, 0, 1057, 1059,
	955, 957, 1068, 1069, 1070, 0, 0, 0, 0, 0,
	961, 965, 970, 971, 972, 973, 974, 975, 976, 977,
	978, 979, 980, 981, 987, 1218, 1219, 1220, 1005, 281,
	282, 0, 1006, 0, 862, 0, 0, 0, 1072, 1007,
	0, 0, 0, 0, 839, 840, 1248, 1245, 0, 0,
	0, 1203, 1205, 0, 0, 0, 0, 0, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1221,
	0, 0, 0, 0, 0, 1241, 0, 1008, 1009, 1010,
	0, 0, 0, 1109, 0, 0, 0, 0, 1396, 0,
	130, 131, 0, 0, 0, 0, 0, 1175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1150, 1151,
	1152, 1153, 0, 0, 0, 0, 0, 849, 1251, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 0, 0, 796, 797, 799,
	0, 932, 0, 913, 0, 0, 802, 0, 843, 0,
	846, 58, 60, 855, 856, 0, 873, 852, 54, 49,
	0, 0, 890, 1315, 350, 1337, 0, 359, 359, 356,
	1277, 1278, 0, 1270, 1272, 1273, 77, 870, 866, 0,
	944, 0, 0, 927, 0, 876, 878, 879, 880, 910,
	0, 883, 0, 0, 0, 0, 0, 96, 929, 1368,
	101, 0, 0, 106, 107, 1369, 1370, 1371, 1372, 0,
	574, -2, 436, 167, 169, 170, 171, 162, -2, 348,
	346, 347, 291, 350, 350, 315, 316, 317, 318, 319,
	320, 0, 0, 308, 309, 310, 311, 302, 0, 303,
	304, 305, 0, 306, 403, 0, 1279, 366, 367, 369,
	377, 0, 372, 373, 0, 377, 377, 0, 398, 399,
	0, 1271, 1296, 0, 0, 0, 1398, 1397, 1397, 1397,
	0, 155, 156, 157, 158, 159, 160, 610, 0, 0,
	586, 608, 609, 153, 0, 0, 163, 491, 490, 0,
	642, 0, 401, 0, 0, 395, 395, 380, 381, 532,
	0, 0, 617, 618, 619, 620, 0, 0, 0, 518,
	430, 0, 519, 520, 489, 491, 0, 0, 361, 444,
	445, 450, 451, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 493,
	572, 569, 493, 573, 1293, 1294, 1295, 0, 0, 680,
	0, 0, 427, 92, 1386, 685, 746, 706, 738, 746,
	698, 705, 726, 766, 810, 0, 0, 0, 0, 818,
	0, 0, 954, 1058, 1060, 958, 0, 962, 966, 0,
	0, 0, 0, 0, 0, 0, 1054, 0, 1078, 1079,
	0, 0, 1265, 0, 1246, 0, 0, 1086, 0, 1206,
	1207, 0, 0, 0, 0, 0, 1098, 1099, 1100, 1101,
	1102, 0, 1104, 0, 0, 1107, 1108, 1110, 0, 0,
	1113, 1114, 0, 0, 1115, 0, 0, 0, 0, 0,
	0, 0, 0, 1127, 1128, 1129, 1130, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1141, 1142, 0,
	1036, 0, 0, 1036, 0, 1074, 0, 0, 848, 0,
	1208, 1209, 1210, 1211, 1212, 0, 0, 0, 0, 0,
	0, 1251, 1362, 795, 798, 800, 886, 933, 934, 0,
	0, 0, 0, 914, 1394, 841, 842, 845, -2, 0,
	0, 1253, 0, 0, 873, 944, 874, 0, 853, 51,
	889, 0, 1319, 1318, 1331, 1344, 359, 359, 353, 354,
	360, 355, 357, 358, 1269, 0, 1274, 0, 1355, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	917, 0, 0, 920, 0, 0, 0, 0, 911, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 90, 91,
	0, 0, 0, 104, 105, 0, 0, 111, 362, 363,
	144, 153, 438, 168, 411, 0, 0, 287, 349, 312,
	313, 314, 0, 336, 0, 0, 0, 432, 116, 1283,
	1282, 377, 377, 368, 0, 371, 0, 0, 0, 1399,
	339, 400, 0, 134, 0, 0, 0, 0, 0, 140,
	580, 0, 0, 587, 0, 0, 0, 500, 0, 511,
	512, 0, 614, -2, 676, 365, 0, 379, 382, 899,
	0, 0, 513, 0, 516, 517, 431, 491, 522, 523,
	537, 524, 473, 474, 471, 0, 0, 1306, 1307, 1312,
	1310, 1311, 121, 558, 560, 559, 563, 0, 0, 495,
	0, 495, 556, 0, 427, 1279, 0, 684, 428, 429,
	749, 749, 805, 95, 0, 808, 0, 0, 0, 0,
	959, 963, 863, 0, 1239, 338, 338, 1226, 338, 342,
	1229, 338, 1231, 338, 1234, 338, 1237, 1238, 0, 0,
	0, 0, 0, 1243, 1085, 1249, 0, 0, 0, 0,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 132,
	133, 1175, 0, 0, 1177, 1179, 1180, 1119, 1176, 0,
	0, 1173, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1031, 1035, 0, 1037, 1038, 0, 0, 1144,
	0, 0, 1154, 1075, 1076, 0, 1252, 0, 0, 0,
	0, 0, 0, 935, 940, 940, 940, 0, 0, 0,
	1381, 1382, 1254, 1255, 944, 1256, 875, 854, 891, 1337,
	0, 1330, 0, -2, 1339, 0, 0, 0, 1345, 351,
	352, 867, 78, 945, 81, 0, 1355, 1364, 0, 1346,
	1357, 1359, 0, 0, 0, 1351, 0, 944, 877, 906,
	908, 0, 903, 918, 919, 921, 0, 923, 0, 925,
	926, 888, 882, 884, 0, 0, 0, 98, 0, 944,
	944, 97, 0, 931, 108, 109, 110, 437, 172, 177,
	0, 0, 0, 182, 0, 184, 0, 0, 0, 189,
	190, 377, 377, 412, 0, 284, 286, 0, 0, 175,
	350, 0, 350, 0, 343, 0, 413, 433, 1280, 1281,
	0, 0, 370, 374, 375, 376, 0, 1388, 136, 0,
	0, 0, 583, 0, 611, 0, 0, 0, 0, 0,
	0, 164, 492, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 0, 377, 0, 0, 0, 377, 377, 377,
	0, 668, 364, 0, 0, 639, 636, 514, 0, 213,
	214, 216, 0, 0, 521, 888, 1297, 1298, 1299, 0,
	1309, 1313, 124, 0, 0, 0, 0, 570, 0, 494,
	571, 681, 682, 683, 93, 691, 697, 807, 827, 952,
	960, 964, 0, 0, 1240, 1224, 350, 1227, 1228, 1230,
	1232, 1233, 1235, 1236, 999, 1000, 1004, 0, 1081, 0,
	1083, 1274, 0, 1247, 0, 0, 0, 1096, 0, 0,
	0, 1105, 1106, 1111, 1112, 0, 0, 1118, 0, 1120,
	0, 0, 0, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 0, 1029, 1032, 1143, 1039, 1040, 1045,
	1146, 0, 0, 1077, 1156, 0, 1161, 0, 0, 1167,
	0, 1171, 0, 0, 0, 0, 0, 912, -2, 62,
	1256, 1258, 0, 1324, 1322, 1322, 1332, 1333, 0, 0,
	1340, 0, 0, 0, 0, 82, 0, 0, 0, 1360,
	0, 0, 0, 0, 99, 1265, 900, 907, 0, 0,
	901, 0, 902, 922, 924, 881, -2, 885, 0, 944,
	944, 88, 89, 0, 178, 0, 180, 206, 207, 0,
	183, 185, 186, 187, 193, 194, 195, 188, 0, 0,
	283, 285, 0, 0, 326, 337, 327, 0, 0, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 888, 137, 138,
	139, 575, 0, 585, 0, 0, 0, 578, 0, 503,
	0, 0, 0, 377, 377, 377, 0, 0, 0, 0,
	653, 0, 0, 616, 0, 624, 0, 0, 0, 217,
	218, 0, 1308, 557, 0, 122, 123, 0, 0, 562,
	496, 497, 1213, 998, 1225, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 1103, 1116, 0, 1178, 0, 1123,
	0, 0, 0, 605, 606, 0, 1174, 1034, 1265, 0,
	1036, 1046, 1047, 0, 1036, 1155, 0, 0, 0, 0,
	0, 0, 941, 0, 0, 0, 0, 932, 1258, 1263,
	0, 0, 1327, 0, 1320, 1323, 1321, 1334, 0, 0,
	1341, 0, 1343, 0, 1365, 1366, 1358, 0, 1350, 1353,
	1349, 1352, 1274, 904, 0, 909, 0, 1265, 87, 0,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 0, 0, 341, 344,
	0, 0, 0, 576, 0, 588, 579, 0, 666, 0,
	670, 0, 0, 0, 673, 674, 675, 652, 0, 656,
	405, 640, 637, 638, 515, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1080, 1082, 1084, 0, 1094, 1095,
	1222, 1223, 1117, 1121, 0, 1124, 0, 0, 1125, 0,
	607, 1025, 0, 0, 1043, 1044, 0, 1157, 0, 1162,
	1163, 0, 1168, 0, 1172, 0, 937, 894, 895, 942,
	943, 0, 0, 887, 1263, 80, 1264, 1261, 0, 1259,
	1257, 1316, 0, 1325, 1326, 1335, 1336, 1342, 0, 1348,
	0, 85, 0, 0, 0, 1274, 179, 0, 198, 0,
	584, 0, 587, 577, 664, 665, 0, 677, 669, 671,
	672, 654, -2, 1300, 0, 0, 0, 564, 997, 0,
	0, 0, 0, 1175, 1126, 0, 603, 604, 1033, 1026,
	0, 1011, 1012, 1030, 1145, 1147, 0, 0, 0, 0,
	936, 938, 939, 79, 0, 1260, 1051, 0, 1328, 1329,
	1356, 1354, 905, 912, 0, 86, 418, 411, 1300, 0,
	0, 0, 657, 658, 659, 660, 661, 662, 663, 554,
	1302, 127, 128, 484, 485, 486, 121, 1214, 0, 1217,
	1087, 0, 1027, 0, 0, 0, 0, 1023, 1024, 0,
	1158, 0, 1164, 0, 1169, 0, 896, 897, 1262, 0,
	0, 589, 0, 591, 0, -2, 406, 419, 0, 173,
	199, 200, 0, 0, 203, 204, 205, 196, 197, 117,
	0, 0, 678, 0, 1303, 1304, 124, 1215, 1122, 0,
	1018, 1019, 1020, 1021, 1022, 0, 0, 0, 1052, 1031,
	590, 0, 0, 361, 0, 600, 407, 408, 0, 414,
	415, 416, 417, 201, 202, 612, 0, 0, 561, 0,
	0, 1159, 0, 1165, 0, 1170, 0, 592, 593, 601,
	0, 409, 0, 410, 0, 0, 0, 581, 0, 612,
	1301, 0, 1028, 0, 0, 1050, 0, 602, 598, 420,
	422, 423, 0, 0, 421, 613, 582, 1216, 1160, 1166,
	0, 424, 425, 426, 594, 595, 596, 597,
=======
	1388, 0, 0, 0, 535, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1289, 153, 1404, 1401, 1402, 38, 39,
	40, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564,
	1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574,
	1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
	1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594,
	1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604,
	1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614,
	1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624,
	1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634,
	1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644,
	1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654,
	1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664,
	1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674,
	1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684,
	1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694,
	1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704,
	1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714,
	1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724,
	1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734,
	1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744,
	1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754,
	1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764,
	1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814,
	1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824,
	1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834,
	1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844,
	1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854,
	1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864,
	1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874,
	1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884,
	1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904,
	1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 0, 1380, 0, 687, 926, 0, 749, 749,
	0, 749, 749, 749, 749, 0, 0, 0, 699, 0,
	0, 0, 0, 746, 0, 0, 718, 720, 0, 746,
	0, 728, 752, 0, 733, 749, 1920, 1920, 1920, 1371,
	0, 743, 741, 755, 756, 738, 739, 757, 761, 0,
	766, 769, 1397, 1398, 0, 784, 47, 1647, 776, 789,
	790, 0, 822, 823, 43, 1069, 0, 948, 953, 964,
	979, 980, 981, 982, 983, 985, 986, 0, 0, 0,
	0, 991, 992, 0, 0, 0, 0, 0, 1050, 1000,
	0, 0, 0, 0, 0, 1238, 0, 0, 1199, 1199,
	1087, 1199, 1201, 1201, 0, 0, 0, 1916, 1688, 1696,
	1697, 1720, 1811, 1860, 1580, 1715, 1779, 1692, 1693, 1674,
	1686, 1689, 1677, 1678, 1680, 1682, 1687, 1694, 1700, 1679,
	1699, 1698, 0, 1675, 1676, 1681, 1691, 1695, 1683, 1684,
	1685, 1690, 1701, 0, 0, 0, 0, 0, 1145, 1146,
	1247, 0, 0, 0, 0, 0, 0, 273, 274, 1068,
	1360, 1201, 1201, 1201, 1201, 1201, 1010, 1011, 1012, 1013,
	1014, 1038, 1039, 1045, 1046, 1790, 1791, 1792, 1793, 1640,
	1869, -2, -2, 219, 220, 221, 222, 223, 224, 225,
	0, 215, 0, 0, 278, 279, 275, 276, 277, 1052,
	1053, 231, 232, 233, 234, 235, 236, 237, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 251, 252, 253, 254, 255, 256, 257, 258, 259,
	260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 272, 1919, 0, 799, 0, 0, 0, 0,
	0, 1271, 0, 1263, 1262, 61, 0, 826, -2, 0,
	0, 0, 0, 45, 0, 50, 885, 75, 74, 1311,
	0, 0, 0, 57, 1272, 65, 67, 1273, 0, 831,
	832, 0, 862, 866, 0, 827, 0, 0, 1387, 1386,
	1386, 100, 0, 1856, 1364, -2, -2, 0, 0, 1399,
	1400, 1373, -2, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, -2, 0, 0, 165, 166, 0, 41, 404,
	0, 161, 0, 397, 338, 0, 1289, 0, 0, 0,
	0, 0, 826, 0, 1381, 142, 143, 150, 151, 152,
	377, 377, 377, 550, 0, 0, 153, 153, 508, 509,
	510, 0, 0, -2, 402, 0, 488, 0, 0, 391,
	391, 395, 393, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 0, 528, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 635, 0, 378, 0, 548, 549,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	1390, 0, 525, 526, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 377, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1302, 0, 0, 0, -2, 0,
	679, 0, 0, 0, 1382, 1382, 0, 686, 0, 688,
	689, 0, 0, 690, 0, 746, 746, 744, 745, 692,
	693, 694, 695, 749, 0, 0, 386, 387, 388, 746,
	749, 0, 749, 749, 749, 749, 746, 746, 746, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1920,
	1920, 1920, 752, 749, 0, 729, 0, 730, 731, 734,
	735, 1921, 1922, 1419, 736, 737, 1372, 759, 767, 770,
	787, 785, 786, 788, 780, 781, 782, 783, 0, 801,
	802, 807, 0, 0, 0, 0, 813, 814, 815, 0,
	0, 818, 819, 820, 0, 0, 0, 0, 0, 946,
	0, 0, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 965, 966, 0, 0,
	0, 987, 988, 989, 990, 993, 0, 0, 0, 998,
	999, 0, 0, 0, 0, 0, 0, 836, 0, 1239,
	0, 0, 1085, 0, 1086, 1088, 1089, 0, 1090, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1392, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 846, 0, 0, 846, 846, 0, 0,
	208, 209, 210, 211, 212, 0, 0, 0, 0, 0,
	0, 226, 227, 228, 229, 230, 280, 1247, 0, 1068,
	0, 0, 0, 44, 791, 792, 0, 909, 1392, 0,
	0, 842, 0, 55, 64, 66, 1271, 59, 1271, 0,
	848, 0, 0, -2, -2, 849, 855, 856, 857, 858,
	859, 52, 1918, 53, 0, 72, 0, 46, 0, 0,
	0, 0, 350, 1314, 0, 0, 1264, 1265, 1268, 0,
	863, 1731, 867, 0, 869, 870, 0, 829, 0, 98,
	0, 925, 0, 0, 0, 1856, 1370, 0, 102, 103,
	0, 0, 0, 361, 1375, 1376, 1377, -2, 384, 0,
	361, 345, 288, 289, 290, 338, 292, 338, 338, 338,
	338, 350, 350, 350, 350, 321, 322, 323, 324, 325,
	0, 0, 307, 338, 338, 338, 338, 328, 329, 330,
	331, 332, 333, 334, 335, 293, 294, 295, 296, 297,
	298, 299, 300, 301, 340, 340, 340, 342, 342, 0,
	42, 0, 365, 0, 1268, 0, 0, 1302, 1384, 1394,
	0, 0, 0, 1384, 120, 0, 0, 0, 551, 585,
	502, 539, 552, 0, 505, 506, -2, 0, 0, 487,
	0, 489, 0, 385, 0, -2, 0, 395, 0, 391,
	395, 392, 395, 383, 396, 529, 530, 531, 0, 533,
	534, 615, 895, 0, 0, 0, 0, 0, 621, 622,
	623, 0, 625, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 540, 541, 542, 543, 544, 545, 546, 547,
	0, 0, 0, 0, 489, 0, 536, 0, 0, 441,
	442, 443, 0, 0, 446, 447, 448, 449, 0, 0,
	452, 453, 454, 912, 913, 455, 456, 481, 482, 483,
	457, 458, 459, 460, 461, 462, 463, 475, 476, 477,
	478, 479, 480, 464, 465, 466, 467, 468, 469, 472,
	0, 135, 1293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1382, 0, 0, 0,
	0, 845, 927, 1405, 1406, 750, 751, 0, 389, 390,
	749, 749, 696, 719, 0, 749, 700, 721, 701, 703,
	702, 704, 723, 724, 749, 707, 747, 748, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 725, 726,
	727, 753, 0, 0, 768, 772, 773, 774, 775, 0,
	0, 804, 94, 809, 810, 811, 812, 824, 817, 1070,
	943, 944, 945, 0, 947, 950, 0, 1054, 1056, 952,
	954, 1065, 1066, 1067, 0, 0, 0, 0, 0, 958,
	962, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 984, 1215, 1216, 1217, 1002, 281, 282,
	0, 1003, 0, 860, 0, 0, 0, 1069, 1004, 0,
	0, 0, 0, 837, 838, 1245, 1242, 0, 0, 0,
	1200, 1202, 0, 0, 0, 0, 0, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1218, 0,
	0, 0, 0, 0, 1238, 0, 1005, 1006, 1007, 0,
	0, 0, 0, 0, 0, 1393, 0, 130, 131, 0,
	0, 0, 0, 0, 1172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1147, 1148, 1149, 1150, 0,
	0, 0, 0, 0, 847, 1248, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1358, 0, 0, 794, 795, 797, 0, 929, 0,
	910, 0, 0, 800, 0, 841, 0, 844, 58, 60,
	853, 854, 0, 871, 850, 54, 49, 0, 0, 887,
	1312, 350, 1334, 0, 359, 359, 356, 1274, 1275, 0,
	1267, 1269, 1270, 77, 868, 864, 0, 941, 0, 0,
	924, 0, 874, 876, 877, 878, 907, 0, 881, 0,
	0, 0, 0, 96, 926, 1365, 101, 0, 0, 106,
	107, 1366, 1367, 1368, 1369, 0, 574, -2, 436, 167,
	169, 170, 171, 162, -2, 348, 346, 347, 291, 350,
	350, 315, 316, 317, 318, 319, 320, 0, 0, 308,
	309, 310, 311, 302, 0, 303, 304, 305, 0, 306,
	403, 0, 1276, 366, 367, 369, 377, 0, 372, 373,
	0, 377, 377, 0, 398, 399, 0, 1268, 1293, 0,
	0, 0, 1395, 1394, 1394, 1394, 0, 155, 156, 157,
	158, 159, 160, 610, 0, 0, 586, 608, 609, 153,
	0, 0, 163, 491, 490, 0, 642, 0, 401, 0,
	0, 395, 395, 380, 381, 532, 0, 0, 617, 618,
	619, 620, 0, 0, 0, 518, 430, 0, 519, 520,
	489, 491, 0, 0, 361, 444, 445, 450, 451, 470,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 565, 566, 567, 568, 493, 572, 569, 493, 573,
	1290, 1291, 1292, 0, 0, 680, 0, 0, 427, 92,
	1383, 685, 746, 706, 722, 746, 698, 705, 732, 764,
	808, 0, 0, 0, 0, 816, 0, 0, 951, 1055,
	1057, 955, 0, 959, 963, 0, 0, 0, 0, 0,
	0, 0, 1051, 0, 1075, 1076, 0, 0, 1262, 0,
	1243, 0, 0, 1083, 0, 1203, 1204, 0, 0, 0,
	0, 0, 1095, 1096, 1097, 1098, 1099, 0, 1101, 0,
	1102, 0, 0, 0, 0, 0, 1110, 1111, 0, 0,
	1112, 0, 0, 0, 0, 0, 0, 0, 0, 1124,
	1125, 1126, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1138, 1139, 0, 1033, 0, 0, 1033,
	0, 1071, 0, 0, 846, 0, 1205, 1206, 1207, 1208,
	1209, 0, 0, 0, 0, 0, 0, 1248, 1359, 793,
	796, 798, 883, 930, 931, 0, 0, 0, 0, 911,
	1391, 839, 840, 843, -2, 0, 0, 1250, 0, 0,
	871, 941, 872, 0, 851, 51, 886, 0, 1316, 1315,
	1328, 1341, 359, 359, 353, 354, 360, 355, 357, 358,
	1266, 0, 1271, 0, 1352, 0, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 914, 0, 0, 917,
	0, 0, 0, 0, 908, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 362, 363, 144, 153, 438, 168, 411,
	0, 0, 287, 349, 312, 313, 314, 0, 336, 0,
	0, 0, 432, 116, 1280, 1279, 377, 377, 368, 0,
	371, 0, 0, 0, 1396, 339, 400, 0, 134, 0,
	0, 0, 0, 0, 140, 580, 0, 0, 587, 0,
	0, 0, 500, 0, 511, 512, 0, 614, -2, 676,
	365, 0, 379, 382, 896, 0, 0, 513, 0, 516,
	517, 431, 491, 522, 523, 537, 524, 473, 474, 471,
	0, 0, 1303, 1304, 1309, 1307, 1308, 121, 558, 560,
	559, 563, 0, 0, 495, 0, 495, 556, 0, 427,
	1276, 0, 684, 428, 429, 749, 749, 803, 95, 0,
	806, 0, 0, 0, 0, 956, 960, 861, 0, 1236,
	338, 338, 1223, 338, 342, 1226, 338, 1228, 338, 1231,
	338, 1234, 1235, 0, 0, 0, 0, 0, 1240, 1082,
	1246, 0, 0, 0, 0, 0, 1094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 133, 1172, 0,
	0, 1174, 1176, 1177, 1116, 1173, 0, 0, 1170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1028,
	1032, 0, 1034, 1035, 0, 0, 1141, 0, 0, 1151,
	1072, 1073, 0, 1249, 0, 0, 0, 0, 0, 0,
	932, 937, 937, 937, 0, 0, 0, 1378, 1379, 1251,
	1252, 941, 1253, 873, 852, 888, 1334, 0, 1327, 0,
	-2, 1336, 0, 0, 0, 1342, 351, 352, 865, 78,
	942, 81, 0, 1352, 1361, 0, 1343, 1354, 1356, 0,
	0, 0, 1348, 0, 941, 875, 903, 905, 0, 900,
	915, 916, 918, 0, 920, 0, 922, 923, 885, 880,
	882, 0, 0, 98, 0, 941, 941, 97, 0, 928,
	108, 109, 110, 437, 172, 177, 0, 0, 0, 182,
	0, 184, 0, 0, 0, 189, 190, 377, 377, 412,
	0, 284, 286, 0, 0, 175, 350, 0, 350, 0,
	343, 0, 413, 433, 1277, 1278, 0, 0, 370, 374,
	375, 376, 0, 1385, 136, 0, 0, 0, 583, 0,
	611, 0, 0, 0, 0, 0, 0, 164, 492, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 0, 377,
	0, 0, 0, 377, 377, 377, 0, 668, 364, 0,
	0, 639, 636, 514, 0, 213, 214, 216, 0, 0,
	521, 885, 1294, 1295, 1296, 0, 1306, 1310, 124, 0,
	0, 0, 0, 570, 0, 494, 571, 681, 682, 683,
	93, 691, 697, 805, 825, 949, 957, 961, 0, 0,
	1237, 1221, 350, 1224, 1225, 1227, 1229, 1230, 1232, 1233,
	996, 997, 1001, 0, 1078, 0, 1080, 1271, 0, 1244,
	0, 0, 0, 1093, 0, 0, 0, 1104, 1103, 1105,
	0, 1107, 1108, 1109, 0, 0, 1115, 0, 1117, 0,
	0, 0, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 0, 1026, 1029, 1140, 1036, 1037, 1042, 1143,
	0, 0, 1074, 1153, 0, 1158, 0, 0, 1164, 0,
	1168, 0, 0, 0, 0, 0, 909, -2, 62, 1253,
	1255, 0, 1321, 1319, 1319, 1329, 1330, 0, 0, 1337,
	0, 0, 0, 0, 82, 0, 0, 0, 1357, 0,
	0, 0, 0, 99, 1262, 897, 904, 0, 0, 898,
	0, 899, 919, 921, 879, -2, 0, 941, 941, 88,
	89, 0, 178, 0, 180, 206, 207, 0, 183, 185,
	186, 187, 193, 194, 195, 188, 0, 0, 283, 285,
	0, 0, 326, 337, 327, 0, 0, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 885, 137, 138, 139, 575,
	0, 585, 0, 0, 0, 578, 0, 503, 0, 0,
	0, 377, 377, 377, 0, 0, 0, 0, 653, 0,
	0, 616, 0, 624, 0, 0, 0, 217, 218, 0,
	1305, 557, 0, 122, 123, 0, 0, 562, 496, 497,
	1210, 995, 1222, 0, 0, 0, 1241, 0, 0, 0,
	0, 0, 1100, 0, 1113, 0, 1175, 0, 1120, 0,
	0, 0, 605, 606, 0, 1171, 1031, 1262, 0, 1033,
	1043, 1044, 0, 1033, 1152, 0, 0, 0, 0, 0,
	0, 938, 0, 0, 0, 0, 929, 1255, 1260, 0,
	0, 1324, 0, 1317, 1320, 1318, 1331, 0, 0, 1338,
	0, 1340, 0, 1362, 1363, 1355, 0, 1347, 1350, 1346,
	1349, 1271, 901, 0, 906, 0, 1262, 87, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 0, 0, 341, 344, 0, 0, 0,
	576, 0, 588, 579, 0, 666, 0, 670, 0, 0,
	0, 673, 674, 675, 652, 0, 656, 405, 640, 637,
	638, 515, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 1077, 1079, 1081, 0, 1091, 1092, 1219, 1220, 1106,
	1114, 1118, 0, 1121, 0, 0, 1122, 0, 607, 1022,
	0, 0, 1040, 1041, 0, 1154, 0, 1159, 1160, 0,
	1165, 0, 1169, 0, 934, 891, 892, 939, 940, 0,
	0, 884, 1260, 80, 1261, 1258, 0, 1256, 1254, 1313,
	0, 1322, 1323, 1332, 1333, 1339, 0, 1345, 0, 85,
	0, 0, 0, 1271, 179, 0, 198, 0, 584, 0,
	587, 577, 664, 665, 0, 677, 669, 671, 672, 654,
	-2, 1297, 0, 0, 0, 564, 994, 0, 0, 0,
	0, 1172, 1123, 0, 603, 604, 1030, 1023, 0, 1008,
	1009, 1027, 1142, 1144, 0, 0, 0, 0, 933, 935,
	936, 79, 0, 1257, 1048, 0, 1325, 1326, 1353, 1351,
	902, 909, 0, 86, 418, 411, 1297, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 554, 1299, 127,
	128, 484, 485, 486, 121, 1211, 0, 1214, 1084, 0,
	1024, 0, 0, 0, 0, 1020, 1021, 0, 1155, 0,
	1161, 0, 1166, 0, 893, 894, 1259, 0, 0, 589,
	0, 591, 0, -2, 406, 419, 0, 173, 199, 200,
	0, 0, 203, 204, 205, 196, 197, 117, 0, 0,
	678, 0, 1300, 1301, 124, 1212, 1119, 0, 1015, 1016,
	1017, 1018, 1019, 0, 0, 0, 1049, 1028, 590, 0,
	0, 361, 0, 600, 407, 408, 0, 414, 415, 416,
	417, 201, 202, 612, 0, 0, 561, 0, 0, 1156,
	0, 1162, 0, 1167, 0, 592, 593, 601, 0, 409,
	0, 410, 0, 0, 0, 581, 0, 612, 1298, 0,
	1025, 0, 0, 1047, 0, 602, 598, 420, 422, 423,
	0, 0, 421, 613, 582, 1213, 1157, 1163, 0, 424,
	425, 426, 594, 595, 596, 597,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
<<<<<<< HEAD
	3, 3, 3, 3, 3, 3, 3, 3, 3, 627,
=======
	3, 3, 3, 3, 3, 3, 3, 3, 3, 623,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
<<<<<<< HEAD
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 0,
=======
	57945, 620, 57946, 621, 57947, 622, 0,
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:575
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:580
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:585
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:621
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:640
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:644
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:650
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:656
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:662
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:666
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:675
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:681
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:685
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:691
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:728
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:745
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:769
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:775
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:787
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:791
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:806
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:831
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:837
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:858
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:862
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:870
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:882
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:894
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:898
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:904
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:910
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:922
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:927
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:932
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:936
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:942
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:946
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:952
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:956
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:965
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:971
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:977
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:987
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:997
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1001
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1005
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1011
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1015
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1019
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1023
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1029
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1033
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1039
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1045
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1052
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1061
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1065
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1076
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1081
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1096
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1101
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1107
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1112
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1127
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1133
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1149
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1156
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1163
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1168
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1173
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1178
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1185
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1192
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1203
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1214
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1220
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1224
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1228
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1256
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1260
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1266
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1270
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1276
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1280
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1286
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1290
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1296
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1300
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1306
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1311
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1320
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1329
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1333
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1344
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1353
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1375
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1379
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1391
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1396
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1401
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1411
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1416
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1425
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1434
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1455
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1461
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1465
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1469
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1475
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1479
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1484
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1488
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1493
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1499
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1505
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1510
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1521
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1529
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1536
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1540
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1544
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1548
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1552
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1570
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1574
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1588
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1604
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1788
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1792
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1796
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1806
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1810
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1814
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1820
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1824
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1828
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1834
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1838
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1845
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1849
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1853
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1857
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1874
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1879
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2085
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2090
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2094
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2103
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2111
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2121
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2137
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2142
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2146
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2151
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2163
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2167
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2177
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2182
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2193
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2202
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2217
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2222
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2226
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2232
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2242
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2246
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2251
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2255
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2259
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2263
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2267
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2271
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2287
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2291
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2295
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2299
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2303
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2371
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2381
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2385
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2391
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2395
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2401
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2405
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2411
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2417
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2421
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2425
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2429
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2433
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2442
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2448
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2454
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2460
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2464
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2468
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2473
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2477
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2483
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2489
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2495
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2499
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2503
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2507
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2511
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2516
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2534
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2539
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2543
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2548
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2552
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2558
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2566
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2572
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2576
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2622
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2626
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2630
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2634
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2638
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2642
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2646
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2650
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2654
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2658
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2662
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2666
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2670
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2674
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2678
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2682
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2686
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2690
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2694
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2698
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2702
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2707
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2715
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2753
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2757
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2762
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2766
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2771
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2775
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2784
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2788
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2797
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2801
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2805
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2813
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2819
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2823
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2827
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2837
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2841
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2845
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2874
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2883
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2887
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2891
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2895
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2899
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2903
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2907
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2911
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2915
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2919
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2923
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2927
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2931
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2935
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2939
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2943
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2947
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2951
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2955
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2961
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2965
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2971
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2975
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2979
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2983
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2987
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2991
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2995
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2999
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3003
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3007
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3013
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3040
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3050
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3057
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3064
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3090
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3094
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3117
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3121
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3132
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3160
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3197
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3201
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3210
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3218
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3227
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3234
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3242
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3246
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3255
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3266
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3270
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3275
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3279
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3284
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3288
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3294
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3300
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3306
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3316
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3320
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3326
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3332
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3338
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3344
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3350
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3354
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3358
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3362
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3368
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3374
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3380
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3384
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3388
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3394
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3398
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3403
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3407
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3412
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3416
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3422
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3426
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3430
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3434
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3438
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3442
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3446
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3450
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3454
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3458
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3462
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3466
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3470
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3474
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3478
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3482
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3486
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3490
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3494
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3498
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3502
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3506
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3515
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3519
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3526
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3536
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3541
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3545
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3550
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3555
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3560
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3565
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3570
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3576
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3582
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3587
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3593
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3599
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3609
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3614
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3618
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3623
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3628
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3633
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3638
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3644
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3650
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3657
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3664
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3671
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3683
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3689
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3695
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3701
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3707
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3713
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3719
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3731
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = ""
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3747
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3753
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3757
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3767
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3776
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3795
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3813
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3948
=======
//line sql.y:3950
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3952
=======
//line sql.y:3954
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3956
=======
//line sql.y:3958
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3960
=======
//line sql.y:3962
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3964
=======
//line sql.y:3967
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3987
=======
//line sql.y:3998
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3991
=======
//line sql.y:4002
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:3995
=======
//line sql.y:4006
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
<<<<<<< HEAD
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
=======
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
<<<<<<< HEAD
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
=======
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4016
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4009
=======
//line sql.y:4022
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4013
=======
//line sql.y:4026
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = "extended "
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4019
=======
//line sql.y:4032
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4023
=======
//line sql.y:4036
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4029
=======
//line sql.y:4042
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4033
=======
//line sql.y:4046
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4039
=======
//line sql.y:4052
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4043
=======
//line sql.y:4056
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4047
=======
//line sql.y:4060
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
<<<<<<< HEAD
//line sql.y:4053
=======
//line sql.y:4066
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
<<<<<<< HEAD
//line sql.y:4057
=======
//line sql.y:4070
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
<<<<<<< HEAD
//line sql.y:4061
=======
//line sql.y:4074
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
<<<<<<< HEAD
//line sql.y:4067
=======
//line sql.y:4080
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
<<<<<<< HEAD
//line sql.y:4071
=======
//line sql.y:4084
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4077
=======
//line sql.y:4090
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4081
=======
//line sql.y:4094
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4085
=======
//line sql.y:4098
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4101
=======
//line sql.y:4104
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4105
=======
//line sql.y:4108
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4109
=======
//line sql.y:4112
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4115
=======
//line sql.y:4118
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4119
=======
//line sql.y:4122
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4125
=======
//line sql.y:4128
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4131
=======
//line sql.y:4134
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4135
=======
//line sql.y:4138
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4140
=======
//line sql.y:4143
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4142
=======
//line sql.y:4145
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4145
=======
//line sql.y:4148
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4147
=======
//line sql.y:4150
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4152
=======
//line sql.y:4155
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4158
=======
//line sql.y:4161
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
<<<<<<< HEAD
//line sql.y:4163
=======
//line sql.y:4166
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
<<<<<<< HEAD
//line sql.y:4167
=======
//line sql.y:4170
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
<<<<<<< HEAD
//line sql.y:4171
=======
//line sql.y:4174
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
<<<<<<< HEAD
//line sql.y:4175
=======
//line sql.y:4178
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
<<<<<<< HEAD
//line sql.y:4179
=======
//line sql.y:4182
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
<<<<<<< HEAD
//line sql.y:4183
=======
//line sql.y:4186
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4189
=======
//line sql.y:4192
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4193
=======
//line sql.y:4196
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4197
=======
//line sql.y:4200
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = yyDollar[1].str
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4203
=======
//line sql.y:4206
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4207
=======
//line sql.y:4210
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4211
=======
//line sql.y:4214
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4215
=======
//line sql.y:4218
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4220
=======
//line sql.y:4223
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = ""
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4224
=======
//line sql.y:4227
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4228
=======
//line sql.y:4231
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4234
=======
//line sql.y:4237
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4238
=======
//line sql.y:4241
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4244
=======
//line sql.y:4247
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4248
=======
//line sql.y:4251
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4254
=======
//line sql.y:4257
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
<<<<<<< HEAD
//line sql.y:4260
=======
//line sql.y:4263
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4264
=======
//line sql.y:4267
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
<<<<<<< HEAD
//line sql.y:4270
=======
//line sql.y:4273
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
<<<<<<< HEAD
//line sql.y:4276
=======
//line sql.y:4279
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
<<<<<<< HEAD
//line sql.y:4280
=======
//line sql.y:4283
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
<<<<<<< HEAD
//line sql.y:4284
=======
//line sql.y:4287
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
<<<<<<< HEAD
//line sql.y:4288
=======
//line sql.y:4291
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4294
=======
//line sql.y:4297
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4300
=======
//line sql.y:4303
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4306
=======
//line sql.y:4309
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4310
=======
//line sql.y:4313
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4314
=======
//line sql.y:4317
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4318
=======
//line sql.y:4321
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4322
=======
//line sql.y:4325
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4326
=======
//line sql.y:4329
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4332
=======
//line sql.y:4335
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4336
=======
//line sql.y:4339
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4342
=======
//line sql.y:4345
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4346
=======
//line sql.y:4349
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4350
=======
//line sql.y:4353
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4354
=======
//line sql.y:4357
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4358
=======
//line sql.y:4361
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4362
=======
//line sql.y:4365
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4366
=======
//line sql.y:4369
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4370
=======
//line sql.y:4373
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4374
=======
//line sql.y:4377
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4378
=======
//line sql.y:4381
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4382
=======
//line sql.y:4385
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4386
=======
//line sql.y:4389
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4391
=======
//line sql.y:4394
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4395
=======
//line sql.y:4398
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4399
=======
//line sql.y:4402
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4404
=======
//line sql.y:4407
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4408
=======
//line sql.y:4411
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4413
=======
//line sql.y:4416
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			setAllowComments(yylex, true)
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4417
=======
//line sql.y:4420
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4423
=======
//line sql.y:4426
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = nil
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4427
=======
//line sql.y:4430
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4433
=======
//line sql.y:4436
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4437
=======
//line sql.y:4440
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4441
=======
//line sql.y:4444
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4446
=======
//line sql.y:4449
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = ""
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4450
=======
//line sql.y:4453
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4454
=======
//line sql.y:4457
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = SQLCacheStr
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4459
=======
//line sql.y:4462
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4463
=======
//line sql.y:4466
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
<<<<<<< HEAD
//line sql.y:4467
=======
//line sql.y:4470
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4473
=======
//line sql.y:4476
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4477
=======
//line sql.y:4480
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4489
=======
//line sql.y:4492
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4494
=======
//line sql.y:4497
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4498
=======
//line sql.y:4501
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4504
=======
//line sql.y:4507
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
<<<<<<< HEAD
//line sql.y:4508
=======
//line sql.y:4511
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
<<<<<<< HEAD
//line sql.y:4513
=======
//line sql.y:4516
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
<<<<<<< HEAD
//line sql.y:4517
=======
//line sql.y:4520
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4522
=======
//line sql.y:4525
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = nil
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4526
=======
//line sql.y:4529
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4530
=======
//line sql.y:4533
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4534
=======
//line sql.y:4537
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
//line sql.y:4538
=======
//line sql.y:4541
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4544
=======
//line sql.y:4547
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4548
=======
//line sql.y:4551
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = SQLCacheStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4552
=======
//line sql.y:4555
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = DistinctStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4556
=======
//line sql.y:4559
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = DistinctStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4560
=======
//line sql.y:4563
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = StraightJoinHint
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4564
=======
//line sql.y:4567
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4568
=======
//line sql.y:4571
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
<<<<<<< HEAD
//line sql.y:4574
=======
//line sql.y:4577
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4578
=======
//line sql.y:4581
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
<<<<<<< HEAD
//line sql.y:4584
=======
//line sql.y:4587
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
<<<<<<< HEAD
//line sql.y:4588
=======
//line sql.y:4591
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
<<<<<<< HEAD
//line sql.y:4592
=======
//line sql.y:4595
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
<<<<<<< HEAD
//line sql.y:4596
=======
//line sql.y:4599
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4601
=======
//line sql.y:4604
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4605
=======
//line sql.y:4608
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4609
=======
//line sql.y:4612
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4616
=======
//line sql.y:4619
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
<<<<<<< HEAD
//line sql.y:4621
=======
//line sql.y:4624
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
<<<<<<< HEAD
//line sql.y:4625
=======
//line sql.y:4628
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
<<<<<<< HEAD
//line sql.y:4631
=======
//line sql.y:4634
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
<<<<<<< HEAD
//line sql.y:4637
=======
//line sql.y:4640
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4641
=======
//line sql.y:4644
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4651
=======
//line sql.y:4654
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4655
=======
//line sql.y:4658
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4659
=======
//line sql.y:4662
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4663
=======
//line sql.y:4666
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
<<<<<<< HEAD
//line sql.y:4669
=======
//line sql.y:4672
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4673
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
<<<<<<< HEAD
//line sql.y:4679
=======
//line sql.y:4678
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
<<<<<<< HEAD
//line sql.y:4683
=======
//line sql.y:4682
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4688
=======
//line sql.y:4687
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4692
=======
//line sql.y:4691
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4698
=======
//line sql.y:4697
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4702
=======
//line sql.y:4701
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4708
=======
//line sql.y:4707
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4712
=======
//line sql.y:4711
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4718
=======
//line sql.y:4717
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
<<<<<<< HEAD
//line sql.y:4722
=======
//line sql.y:4721
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4726
=======
//line sql.y:4725
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4730
=======
//line sql.y:4729
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
<<<<<<< HEAD
//line sql.y:4736
=======
//line sql.y:4735
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4740
=======
//line sql.y:4739
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4753
=======
//line sql.y:4752
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4757
=======
//line sql.y:4756
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4761
=======
//line sql.y:4760
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
<<<<<<< HEAD
//line sql.y:4765
=======
//line sql.y:4764
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4771
=======
//line sql.y:4770
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
<<<<<<< HEAD
//line sql.y:4773
=======
//line sql.y:4772
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4777
=======
//line sql.y:4776
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4779
=======
//line sql.y:4778
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4783
=======
//line sql.y:4782
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4785
=======
//line sql.y:4784
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4788
=======
//line sql.y:4787
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4790
=======
//line sql.y:4789
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:4793
=======
//line sql.y:4792
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4797
=======
//line sql.y:4796
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4801
=======
//line sql.y:4800
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4808
=======
//line sql.y:4807
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4814
=======
//line sql.y:4813
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4818
=======
//line sql.y:4817
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4822
=======
//line sql.y:4821
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4828
=======
//line sql.y:4827
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4834
=======
//line sql.y:4833
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4838
=======
//line sql.y:4837
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4842
=======
//line sql.y:4841
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4846
=======
//line sql.y:4845
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4852
=======
//line sql.y:4851
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
<<<<<<< HEAD
//line sql.y:4856
=======
//line sql.y:4855
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4866
=======
//line sql.y:4865
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4870
=======
//line sql.y:4869
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:4876
=======
//line sql.y:4875
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4880
=======
//line sql.y:4879
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:4886
=======
//line sql.y:4885
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
<<<<<<< HEAD
//line sql.y:4891
=======
//line sql.y:4890
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
<<<<<<< HEAD
//line sql.y:4895
=======
//line sql.y:4894
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
<<<<<<< HEAD
//line sql.y:4901
=======
//line sql.y:4900
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
<<<<<<< HEAD
//line sql.y:4905
=======
//line sql.y:4904
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
<<<<<<< HEAD
//line sql.y:4911
=======
//line sql.y:4910
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
<<<<<<< HEAD
//line sql.y:4915
=======
//line sql.y:4914
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
<<<<<<< HEAD
//line sql.y:4919
=======
//line sql.y:4918
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
<<<<<<< HEAD
//line sql.y:4923
=======
//line sql.y:4922
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
<<<<<<< HEAD
//line sql.y:4928
=======
//line sql.y:4927
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
<<<<<<< HEAD
//line sql.y:4932
=======
//line sql.y:4931
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
<<<<<<< HEAD
//line sql.y:4936
=======
//line sql.y:4935
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
<<<<<<< HEAD
//line sql.y:4940
=======
//line sql.y:4939
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4946
=======
//line sql.y:4945
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4950
=======
//line sql.y:4949
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4957
=======
//line sql.y:4956
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4961
=======
//line sql.y:4960
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4965
=======
//line sql.y:4964
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4969
=======
//line sql.y:4968
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4973
=======
//line sql.y:4972
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4977
=======
//line sql.y:4976
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4981
=======
//line sql.y:4980
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4987
=======
//line sql.y:4986
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4991
=======
//line sql.y:4990
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4995
=======
//line sql.y:4994
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:4999
=======
//line sql.y:4998
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5005
=======
//line sql.y:5004
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5009
=======
//line sql.y:5008
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5013
=======
//line sql.y:5012
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5017
=======
//line sql.y:5016
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5021
=======
//line sql.y:5020
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5025
=======
//line sql.y:5024
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5029
=======
//line sql.y:5028
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5033
=======
//line sql.y:5032
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5037
=======
//line sql.y:5036
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5041
=======
//line sql.y:5040
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5045
=======
//line sql.y:5044
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:5051
=======
//line sql.y:5050
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:5054
=======
//line sql.y:5053
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
		}
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5060
=======
//line sql.y:5059
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5064
=======
//line sql.y:5063
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5068
=======
//line sql.y:5067
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5072
=======
//line sql.y:5071
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5076
=======
//line sql.y:5075
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5080
=======
//line sql.y:5079
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5084
=======
//line sql.y:5083
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5088
=======
//line sql.y:5087
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5092
=======
//line sql.y:5091
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5096
=======
//line sql.y:5095
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5100
=======
//line sql.y:5099
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5104
=======
//line sql.y:5103
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5108
=======
//line sql.y:5107
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5114
=======
//line sql.y:5113
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5118
=======
//line sql.y:5117
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5122
=======
//line sql.y:5121
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5126
=======
//line sql.y:5125
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5130
=======
//line sql.y:5129
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5134
=======
//line sql.y:5133
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5138
=======
//line sql.y:5137
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5142
=======
//line sql.y:5141
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5146
=======
//line sql.y:5145
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5150
=======
//line sql.y:5149
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5154
=======
//line sql.y:5153
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5158
=======
//line sql.y:5157
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5162
=======
//line sql.y:5161
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5166
=======
//line sql.y:5165
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5170
=======
//line sql.y:5169
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5174
=======
//line sql.y:5173
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5178
=======
//line sql.y:5177
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5182
=======
//line sql.y:5181
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5186
=======
//line sql.y:5185
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5194
=======
//line sql.y:5193
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5198
=======
//line sql.y:5197
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5206
=======
//line sql.y:5205
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5210
=======
//line sql.y:5209
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5214
=======
//line sql.y:5213
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5220
=======
//line sql.y:5219
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
<<<<<<< HEAD
//line sql.y:5226
=======
//line sql.y:5225
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
<<<<<<< HEAD
//line sql.y:5230
=======
//line sql.y:5229
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
<<<<<<< HEAD
//line sql.y:5234
=======
//line sql.y:5233
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
<<<<<<< HEAD
//line sql.y:5240
=======
//line sql.y:5239
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
<<<<<<< HEAD
//line sql.y:5244
=======
//line sql.y:5243
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
<<<<<<< HEAD
//line sql.y:5251
=======
//line sql.y:5250
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
<<<<<<< HEAD
//line sql.y:5255
=======
//line sql.y:5254
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
<<<<<<< HEAD
//line sql.y:5259
=======
//line sql.y:5258
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
<<<<<<< HEAD
//line sql.y:5263
=======
//line sql.y:5262
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
<<<<<<< HEAD
//line sql.y:5267
=======
//line sql.y:5266
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
<<<<<<< HEAD
//line sql.y:5273
=======
//line sql.y:5272
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
<<<<<<< HEAD
//line sql.y:5277
=======
//line sql.y:5276
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
<<<<<<< HEAD
//line sql.y:5281
=======
//line sql.y:5280
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
<<<<<<< HEAD
//line sql.y:5285
=======
//line sql.y:5284
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
<<<<<<< HEAD
//line sql.y:5289
=======
//line sql.y:5288
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5295
=======
//line sql.y:5294
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5299
=======
//line sql.y:5298
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
<<<<<<< HEAD
//line sql.y:5304
=======
//line sql.y:5303
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
<<<<<<< HEAD
//line sql.y:5308
=======
//line sql.y:5307
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
<<<<<<< HEAD
//line sql.y:5314
=======
//line sql.y:5313
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
<<<<<<< HEAD
//line sql.y:5318
=======
//line sql.y:5317
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
<<<<<<< HEAD
//line sql.y:5323
=======
//line sql.y:5322
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
<<<<<<< HEAD
//line sql.y:5327
=======
//line sql.y:5326
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:5332
=======
//line sql.y:5331
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
<<<<<<< HEAD
//line sql.y:5335
=======
//line sql.y:5334
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
<<<<<<< HEAD
//line sql.y:5341
=======
//line sql.y:5340
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
<<<<<<< HEAD
//line sql.y:5347
=======
//line sql.y:5346
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
<<<<<<< HEAD
//line sql.y:5351
=======
//line sql.y:5350
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
<<<<<<< HEAD
//line sql.y:5356
=======
//line sql.y:5355
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
<<<<<<< HEAD
//line sql.y:5363
=======
//line sql.y:5362
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
<<<<<<< HEAD
//line sql.y:5369
=======
//line sql.y:5368
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
<<<<<<< HEAD
//line sql.y:5373
=======
//line sql.y:5372
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
<<<<<<< HEAD
//line sql.y:5379
=======
//line sql.y:5378
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
<<<<<<< HEAD
//line sql.y:5383
=======
//line sql.y:5382
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
<<<<<<< HEAD
//line sql.y:5389
=======
//line sql.y:5388
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
<<<<<<< HEAD
//line sql.y:5393
=======
//line sql.y:5392
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
<<<<<<< HEAD
//line sql.y:5398
=======
//line sql.y:5397
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
<<<<<<< HEAD
//line sql.y:5405
=======
//line sql.y:5404
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
<<<<<<< HEAD
//line sql.y:5411
=======
//line sql.y:5410
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
<<<<<<< HEAD
//line sql.y:5415
=======
//line sql.y:5414
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
<<<<<<< HEAD
//line sql.y:5421
=======
//line sql.y:5420
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
<<<<<<< HEAD
//line sql.y:5427
=======
//line sql.y:5426
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:5431
=======
//line sql.y:5430
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
<<<<<<< HEAD
//line sql.y:5437
=======
//line sql.y:5436
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = ""
		}
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:5441
=======
//line sql.y:5440
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
<<<<<<< HEAD
//line sql.y:5447
=======
//line sql.y:5446
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
<<<<<<< HEAD
//line sql.y:5451
=======
//line sql.y:5450
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
<<<<<<< HEAD
//line sql.y:5458
=======
//line sql.y:5457
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
<<<<<<< HEAD
//line sql.y:5462
=======
//line sql.y:5461
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
<<<<<<< HEAD
//line sql.y:5466
=======
//line sql.y:5465
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
<<<<<<< HEAD
//line sql.y:5470
=======
//line sql.y:5469
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
<<<<<<< HEAD
//line sql.y:5476
=======
//line sql.y:5475
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
<<<<<<< HEAD
//line sql.y:5480
=======
//line sql.y:5479
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
<<<<<<< HEAD
//line sql.y:5484
=======
//line sql.y:5483
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
<<<<<<< HEAD
//line sql.y:5488
=======
//line sql.y:5487
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
<<<<<<< HEAD
//line sql.y:5492
=======
//line sql.y:5491
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
<<<<<<< HEAD
//line sql.y:5496
=======
//line sql.y:5495
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
<<<<<<< HEAD
//line sql.y:5500
=======
//line sql.y:5499
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
<<<<<<< HEAD
//line sql.y:5506
=======
//line sql.y:5505
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
<<<<<<< HEAD
//line sql.y:5510
=======
//line sql.y:5509
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
<<<<<<< HEAD
//line sql.y:5514
=======
//line sql.y:5513
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
<<<<<<< HEAD
//line sql.y:5521
=======
//line sql.y:5520
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
<<<<<<< HEAD
//line sql.y:5527
=======
//line sql.y:5526
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
<<<<<<< HEAD
//line sql.y:5531
=======
//line sql.y:5530
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5541
=======
//line sql.y:5540
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5545
=======
//line sql.y:5544
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5549
=======
//line sql.y:5548
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5553
=======
//line sql.y:5552
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5563
=======
//line sql.y:5562
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5567
=======
//line sql.y:5566
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5571
=======
//line sql.y:5570
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5575
=======
//line sql.y:5574
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5579
=======
//line sql.y:5578
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5583
=======
//line sql.y:5582
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5587
=======
//line sql.y:5586
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5591
=======
//line sql.y:5590
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5595
=======
//line sql.y:5594
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5599
=======
//line sql.y:5598
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5603
=======
//line sql.y:5602
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5614
=======
//line sql.y:5613
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5618
=======
//line sql.y:5617
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5624
=======
//line sql.y:5623
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5628
=======
//line sql.y:5627
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5633
=======
//line sql.y:5632
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5637
=======
//line sql.y:5636
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5641
=======
//line sql.y:5640
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5645
=======
//line sql.y:5644
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5649
=======
//line sql.y:5648
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5653
=======
//line sql.y:5652
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5657
=======
//line sql.y:5656
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5661
=======
//line sql.y:5660
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5665
=======
//line sql.y:5664
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5669
=======
//line sql.y:5668
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5673
=======
//line sql.y:5672
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
<<<<<<< HEAD
//line sql.y:5677
=======
//line sql.y:5676
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5681
=======
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5688
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1106:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5685
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5689
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5693
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5697
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5701
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5705
=======
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5692
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5696
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5709
=======
	case 1109:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1113:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
=======
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
=======
	case 1111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5721
=======
	case 1112:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1116:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5725
=======
	case 1113:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1117:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5729
=======
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5733
=======
	case 1115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5737
=======
	case 1116:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5741
=======
	case 1117:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5740
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1121:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5745
=======
	case 1118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5744
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1122:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5749
=======
	case 1119:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5748
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1123:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5753
=======
	case 1120:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5752
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1124:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
=======
	case 1121:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5756
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1125:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
=======
	case 1122:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5760
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1126:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5765
=======
	case 1123:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5764
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5769
=======
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5768
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5773
=======
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5772
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5777
=======
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5776
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5781
=======
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5780
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5785
=======
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5784
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5789
=======
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5788
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5793
=======
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5792
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5797
=======
	case 1131:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5796
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5801
=======
	case 1132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5800
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5805
=======
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5804
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5809
=======
	case 1134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5808
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1138:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5813
=======
	case 1135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5812
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1139:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5817
=======
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5816
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5821
=======
	case 1137:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5820
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5825
=======
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5824
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5829
=======
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5828
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5833
=======
	case 1140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5837
=======
	case 1141:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1145:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5841
=======
	case 1142:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5845
=======
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5844
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1147:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5849
=======
	case 1144:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5848
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
=======
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5856
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
=======
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5860
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
=======
	case 1149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
=======
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5876
=======
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5875
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5880
=======
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5879
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5887
=======
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1157:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5891
=======
	case 1154:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1158:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5895
=======
	case 1155:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1159:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5899
=======
	case 1156:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1160:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
=======
	case 1157:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5908
=======
	case 1158:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5912
=======
	case 1159:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1163:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5916
=======
	case 1160:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5920
=======
	case 1161:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5919
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1165:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5924
=======
	case 1162:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1166:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5928
=======
	case 1163:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1167:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
=======
	case 1164:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5932
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
=======
	case 1165:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5936
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5941
=======
	case 1166:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5940
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1170:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5945
=======
	case 1167:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
=======
	case 1168:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5951
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
=======
	case 1169:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5955
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1173:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5961
=======
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5960
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5965
=======
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5964
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5970
=======
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5969
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5974
=======
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5973
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5980
=======
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5979
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5984
=======
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5983
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
<<<<<<< HEAD
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5990
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5994
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6000
		{
		}
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6002
=======
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5999
		{
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6001
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6006
=======
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6005
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6010
=======
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6009
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6014
=======
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6013
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6018
=======
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6017
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6022
=======
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6021
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6026
=======
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6025
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6030
=======
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6029
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6034
=======
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6033
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6038
=======
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6037
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6042
=======
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6041
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6048
=======
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6047
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6052
=======
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6051
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6056
=======
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6055
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6060
=======
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6059
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6064
=======
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6063
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6068
=======
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6067
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6072
=======
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6071
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6076
=======
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6075
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6080
=======
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6079
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6090
=======
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6089
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6094
=======
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6093
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1206:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6098
=======
	case 1203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6097
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
=======
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6101
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6113
=======
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6117
=======
	case 1206:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1210:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6121
=======
	case 1207:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1211:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6125
=======
	case 1208:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6129
=======
	case 1209:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1213:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6135
=======
	case 1210:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6134
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6139
=======
	case 1211:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6138
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1215:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6143
=======
	case 1212:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6142
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1216:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6147
=======
	case 1213:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6146
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6151
=======
	case 1214:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6150
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6157
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6161
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6165
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6171
=======
	case 1215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6156
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6160
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6164
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6170
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6175
=======
	case 1219:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6174
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6179
=======
	case 1220:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6178
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6185
=======
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6184
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6189
=======
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6188
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6193
=======
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6192
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6197
=======
	case 1224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6196
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6201
=======
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6200
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6207
=======
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6206
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6211
=======
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6210
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6215
=======
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6214
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6219
=======
	case 1229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6218
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6223
=======
	case 1230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6222
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6227
=======
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6226
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6231
=======
	case 1232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6230
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6235
=======
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6234
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6239
=======
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6238
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6243
=======
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6242
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6249
=======
	case 1236:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6248
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6253
=======
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6252
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6258
=======
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6257
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
=======
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6261
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1243:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6267
		{
			yyVAL.str = string("")
		}
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6271
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6277
=======
	case 1240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6266
		{
			yyVAL.str = string("")
		}
	case 1241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6270
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6276
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6281
=======
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6280
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
<<<<<<< HEAD
	case 1247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6287
=======
	case 1244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6286
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6292
=======
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6291
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6296
=======
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6302
=======
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6301
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6306
=======
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6305
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1252:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6310
=======
	case 1249:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6309
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6316
=======
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6325
=======
	case 1251:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6324
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6329
=======
	case 1252:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6328
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6335
=======
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6334
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6339
=======
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6338
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
=======
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6343
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
=======
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6347
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6354
=======
	case 1257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6353
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6360
=======
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6359
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6364
=======
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6363
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
<<<<<<< HEAD
	case 1263:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6369
=======
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6368
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6373
=======
	case 1261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6372
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6378
=======
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6377
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6382
=======
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6381
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6388
=======
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6387
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1268:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6394
=======
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6393
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6398
=======
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6397
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
<<<<<<< HEAD
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6404
=======
	case 1267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6403
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6409
=======
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6408
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6413
=======
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6412
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6417
=======
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6416
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6422
=======
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6421
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6426
=======
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6425
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6432
=======
	case 1273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6431
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6436
=======
	case 1274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6435
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6440
=======
	case 1275:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6439
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6445
=======
	case 1276:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6444
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6449
=======
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6448
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6453
=======
	case 1278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6452
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6457
=======
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6456
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6461
=======
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6460
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6468
=======
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6467
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6472
=======
	case 1282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6471
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6476
=======
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6475
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6480
=======
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6479
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6486
=======
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6485
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6490
=======
	case 1286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6489
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6494
=======
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6493
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6498
=======
	case 1288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6497
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6503
		{
			yyVAL.str = ""
		}
	case 1293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6507
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6511
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6515
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6520
		{
			yyVAL.str = ""
		}
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6524
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6534
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6539
		{
			yyVAL.str = ""
		}
	case 1301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6543
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6548
		{
			yyVAL.str = "cascaded"
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6552
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6556
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6561
=======
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6502
		{
			yyVAL.str = ""
		}
	case 1290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6506
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6510
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6514
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6519
		{
			yyVAL.str = ""
		}
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6523
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6529
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6533
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1297:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6538
		{
			yyVAL.str = ""
		}
	case 1298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6542
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6547
		{
			yyVAL.str = "cascaded"
		}
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6551
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6555
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6560
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6565
=======
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6564
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6571
=======
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6570
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6577
=======
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6576
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6583
=======
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6582
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6592
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6601
		{
			yyVAL.str = ""
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6611
=======
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6591
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6595
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6600
		{
			yyVAL.str = ""
		}
	case 1310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6604
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6610
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6615
=======
	case 1312:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6614
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1316:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6621
=======
	case 1313:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6620
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6625
=======
	case 1314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6624
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1318:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6629
=======
	case 1315:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6628
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6634
		{
			yyVAL.str = ""
		}
	case 1320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6638
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6642
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6647
		{
			yyVAL.str = ""
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6651
		{
			yyVAL.str = " header"
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6656
		{
			yyVAL.str = ""
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6660
		{
			yyVAL.str = " manifest on"
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6664
		{
			yyVAL.str = " manifest off"
		}
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6669
		{
			yyVAL.str = ""
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6673
		{
			yyVAL.str = " overwrite on"
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6677
		{
			yyVAL.str = " overwrite off"
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6683
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6688
		{
			yyVAL.str = ""
		}
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6692
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6698
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6702
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6708
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6712
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6717
		{
			yyVAL.str = ""
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6721
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6727
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6731
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6737
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6741
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6745
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6750
		{
			yyVAL.str = ""
		}
	case 1345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6754
		{
			yyVAL.str = " optionally"
		}
	case 1346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6767
=======
	case 1316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6633
		{
			yyVAL.str = ""
		}
	case 1317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6637
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6641
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6646
		{
			yyVAL.str = ""
		}
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6650
		{
			yyVAL.str = " header"
		}
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6655
		{
			yyVAL.str = ""
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6659
		{
			yyVAL.str = " manifest on"
		}
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6663
		{
			yyVAL.str = " manifest off"
		}
	case 1324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6668
		{
			yyVAL.str = ""
		}
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6672
		{
			yyVAL.str = " overwrite on"
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6676
		{
			yyVAL.str = " overwrite off"
		}
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6682
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6687
		{
			yyVAL.str = ""
		}
	case 1329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6691
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6697
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6701
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6707
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6711
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6716
		{
			yyVAL.str = ""
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6720
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6726
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6730
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6736
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6744
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6749
		{
			yyVAL.str = ""
		}
	case 1342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6753
		{
			yyVAL.str = " optionally"
		}
	case 1343:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6766
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6771
=======
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6770
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6775
=======
	case 1345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6774
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1349:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6779
=======
	case 1346:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6778
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1350:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6783
=======
	case 1347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6782
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6789
=======
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6788
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6793
=======
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6792
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6797
=======
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6796
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
<<<<<<< HEAD
	case 1354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6801
=======
	case 1351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6800
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
<<<<<<< HEAD
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6806
=======
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6805
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6810
=======
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6809
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6816
=======
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6815
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6820
=======
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6819
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
<<<<<<< HEAD
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6826
=======
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6825
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1360:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6830
=======
	case 1357:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6829
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6836
=======
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6835
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6840
=======
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6839
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6845
=======
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6844
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6855
=======
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6854
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6859
=======
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6858
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
<<<<<<< HEAD
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6865
=======
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6864
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6871
=======
	case 1364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6870
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6875
=======
	case 1365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6874
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
<<<<<<< HEAD
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6881
=======
	case 1366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6880
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6885
=======
	case 1367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6884
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6889
=======
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6888
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6893
=======
	case 1369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6892
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1373:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6897
=======
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6896
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6905
		{
			yyVAL.str = "charset"
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6915
=======
	case 1372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6904
		{
			yyVAL.str = "charset"
		}
	case 1375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6914
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6919
=======
	case 1376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6918
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6923
=======
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6922
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6932
=======
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6931
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6934
=======
	case 1381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6933
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6937
=======
	case 1382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6936
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6939
=======
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6938
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6942
=======
	case 1384:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6941
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6944
=======
	case 1385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6943
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1389:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6947
=======
	case 1386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6946
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6949
=======
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6948
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6952
		{
			yyVAL.empty = struct{}{}
		}
	case 1392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6954
		{
			yyVAL.empty = struct{}{}
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6956
		{
			yyVAL.empty = struct{}{}
		}
	case 1394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6960
=======
	case 1388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6951
		{
			yyVAL.empty = struct{}{}
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6953
		{
			yyVAL.empty = struct{}{}
		}
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6955
		{
			yyVAL.empty = struct{}{}
		}
	case 1391:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6959
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6965
=======
	case 1392:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6964
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6969
=======
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6968
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6974
=======
	case 1394:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6973
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6976
=======
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6975
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1399:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6980
=======
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6979
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
<<<<<<< HEAD
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6986
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6990
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6997
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7003
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7007
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7013
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7017
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7024
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7563
=======
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6985
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6989
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6996
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7002
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7006
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7012
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7016
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7023
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7558
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
<<<<<<< HEAD
	case 1925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7572
		{
			decNesting(yylex)
		}
	case 1926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7577
		{
			skipToEnd(yylex)
		}
	case 1927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7582
		{
			skipToEnd(yylex)
		}
	case 1928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7586
		{
			skipToEnd(yylex)
		}
	case 1929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7590
=======
	case 1918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7567
		{
			decNesting(yylex)
		}
	case 1919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7572
		{
			skipToEnd(yylex)
		}
	case 1920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7577
		{
			skipToEnd(yylex)
		}
	case 1921:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7581
		{
			skipToEnd(yylex)
		}
	case 1922:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7585
>>>>>>> d0c207b0fb... Parse LOCATE(), POSITION() and CHAR() functions (#10629) (#800)
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
