// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const BEGIN = 57533
const START = 57534
const TRANSACTION = 57535
const COMMIT = 57536
const ROLLBACK = 57537
const SAVEPOINT = 57538
const RELEASE = 57539
const WORK = 57540
const BIT = 57541
const TINYINT = 57542
const SMALLINT = 57543
const MEDIUMINT = 57544
const INT = 57545
const INTEGER = 57546
const BIGINT = 57547
const INTNUM = 57548
const REAL = 57549
const DOUBLE = 57550
const FLOAT_TYPE = 57551
const DECIMAL = 57552
const NUMERIC = 57553
const TIME = 57554
const TIMESTAMP = 57555
const DATETIME = 57556
const YEAR = 57557
const CHAR = 57558
const VARCHAR = 57559
const BOOL = 57560
const CHARACTER = 57561
const VARBINARY = 57562
const NCHAR = 57563
const TEXT = 57564
const TINYTEXT = 57565
const MEDIUMTEXT = 57566
const LONGTEXT = 57567
const BLOB = 57568
const TINYBLOB = 57569
const MEDIUMBLOB = 57570
const LONGBLOB = 57571
const JSON = 57572
const ENUM = 57573
const GEOMETRY = 57574
const POINT = 57575
const LINESTRING = 57576
const POLYGON = 57577
const GEOMETRYCOLLECTION = 57578
const MULTIPOINT = 57579
const MULTILINESTRING = 57580
const MULTIPOLYGON = 57581
const NULLX = 57582
const AUTO_INCREMENT = 57583
const APPROXNUM = 57584
const SIGNED = 57585
const UNSIGNED = 57586
const ZEROFILL = 57587
const COLLATION = 57588
const DATABASES = 57589
const SCHEMAS = 57590
const TABLES = 57591
const VITESS_METADATA = 57592
const VSCHEMA = 57593
const FULL = 57594
const PROCESSLIST = 57595
const COLUMNS = 57596
const FIELDS = 57597
const ENGINES = 57598
const PLUGINS = 57599
const EXTENDED = 57600
const KEYSPACES = 57601
const VITESS_KEYSPACES = 57602
const VITESS_SHARDS = 57603
const VITESS_TABLETS = 57604
const NAMES = 57605
const CHARSET = 57606
const GLOBAL = 57607
const SESSION = 57608
const ISOLATION = 57609
const LEVEL = 57610
const READ = 57611
const WRITE = 57612
const ONLY = 57613
const REPEATABLE = 57614
const COMMITTED = 57615
const UNCOMMITTED = 57616
const SERIALIZABLE = 57617
const CURRENT_TIMESTAMP = 57618
const DATABASE = 57619
const CURRENT_DATE = 57620
const CURRENT_TIME = 57621
const LOCALTIME = 57622
const LOCALTIMESTAMP = 57623
const CURRENT_USER = 57624
const UTC_DATE = 57625
const UTC_TIME = 57626
const UTC_TIMESTAMP = 57627
const REPLACE = 57628
const CONVERT = 57629
const CAST = 57630
const SUBSTR = 57631
const SUBSTRING = 57632
const GROUP_CONCAT = 57633
const SEPARATOR = 57634
const TIMESTAMPADD = 57635
const TIMESTAMPDIFF = 57636
const MATCH = 57637
const AGAINST = 57638
const BOOLEAN = 57639
const LANGUAGE = 57640
const WITH = 57641
const QUERY = 57642
const EXPANSION = 57643
const UNUSED = 57644
const ARRAY = 57645
const CUME_DIST = 57646
const DESCRIPTION = 57647
const DENSE_RANK = 57648
const EMPTY = 57649
const EXCEPT = 57650
const FIRST_VALUE = 57651
const GROUPING = 57652
const GROUPS = 57653
const JSON_TABLE = 57654
const LAG = 57655
const LAST_VALUE = 57656
const LATERAL = 57657
const LEAD = 57658
const MEMBER = 57659
const NTH_VALUE = 57660
const NTILE = 57661
const OF = 57662
const OVER = 57663
const PERCENT_RANK = 57664
const RANK = 57665
const RECURSIVE = 57666
const ROW_NUMBER = 57667
const SYSTEM = 57668
const WINDOW = 57669
const ACTIVE = 57670
const ADMIN = 57671
const BUCKETS = 57672
const CLONE = 57673
const COMPONENT = 57674
const DEFINITION = 57675
const ENFORCED = 57676
const EXCLUDE = 57677
const FOLLOWING = 57678
const GEOMCOLLECTION = 57679
const GET_MASTER_PUBLIC_KEY = 57680
const HISTOGRAM = 57681
const HISTORY = 57682
const INACTIVE = 57683
const INVISIBLE = 57684
const LOCKED = 57685
const MASTER_COMPRESSION_ALGORITHMS = 57686
const MASTER_PUBLIC_KEY_PATH = 57687
const MASTER_TLS_CIPHERSUITES = 57688
const MASTER_ZSTD_COMPRESSION_LEVEL = 57689
const NESTED = 57690
const NETWORK_NAMESPACE = 57691
const NOWAIT = 57692
const NULLS = 57693
const OJ = 57694
const OLD = 57695
const OPTIONAL = 57696
const ORDINALITY = 57697
const ORGANIZATION = 57698
const OTHERS = 57699
const PATH = 57700
const PERSIST = 57701
const PERSIST_ONLY = 57702
const PRECEDING = 57703
const PRIVILEGE_CHECKS_USER = 57704
const PROCESS = 57705
const RANDOM = 57706
const REFERENCE = 57707
const REQUIRE_ROW_FORMAT = 57708
const RESOURCE = 57709
const RESPECT = 57710
const RESTART = 57711
const RETAIN = 57712
const REUSE = 57713
const ROLE = 57714
const SECONDARY = 57715
const SECONDARY_ENGINE = 57716
const SECONDARY_LOAD = 57717
const SECONDARY_UNLOAD = 57718
const SKIP = 57719
const SRID = 57720
const THREAD_PRIORITY = 57721
const TIES = 57722
const UNBOUNDED = 57723
const VCPU = 57724
const VISIBLE = 57725
const FORMAT = 57726
const TREE = 57727
const VITESS = 57728
const TRADITIONAL = 57729
const LOCAL = 57730
const LOW_PRIORITY = 57731

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 803,
	-2, 87,
	-1, 43,
	136, 110,
	236, 110,
	-2, 104,
	-1, 50,
	34, 350,
	155, 350,
	167, 350,
	195, 364,
	196, 364,
	-2, 352,
	-1, 55,
	157, 374,
	-2, 372,
	-1, 79,
	55, 417,
	-2, 425,
	-1, 103,
	136, 110,
	236, 110,
	-2, 105,
	-1, 446,
	143, 813,
	-2, 809,
	-1, 447,
	143, 814,
	-2, 810,
	-1, 464,
	55, 418,
	-2, 430,
	-1, 465,
	55, 419,
	-2, 431,
	-1, 485,
	111, 1101,
	-2, 80,
	-1, 486,
	111, 1001,
	-2, 81,
	-1, 491,
	111, 959,
	-2, 774,
	-1, 493,
	111, 1042,
	-2, 776,
	-1, 648,
	136, 110,
	236, 110,
	-2, 276,
	-1, 1035,
	143, 816,
	-2, 812,
	-1, 1127,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1525,
	5, 671,
	18, 671,
	20, 671,
	32, 671,
	82, 671,
	-2, 456,
	-1, 1735,
	45, 745,
	-2, 743,
}

const yyPrivate = 57344

const yyLast = 20460

var yyAct = [...]int{
	446, 1829, 1818, 1573, 1782, 1635, 1735, 390, 1349, 1442,
	1317, 1681, 1149, 1145, 1711, 78, 3, 1658, 419, 682,
	1505, 1074, 760, 405, 457, 1506, 1502, 1350, 1194, 1200,
	1179, 1336, 1418, 923, 811, 628, 662, 1417, 1148, 1394,
	804, 913, 1517, 1462, 800, 1158, 113, 625, 1490, 125,
	490, 359, 125, 956, 1022, 1029, 1276, 371, 1410, 125,
	1202, 622, 975, 1163, 841, 1113, 76, 814, 466, 848,
	378, 809, 1106, 1076, 834, 798, 392, 1055, 680, 832,
	999, 451, 1223, 31, 629, 381, 1089, 371, 1124, 621,
	371, 125, 371, 123, 847, 1190, 845, 821, 1129, 831,
	74, 671, 970, 374, 388, 104, 487, 105, 79, 773,
	125, 125, 1071, 1072, 838, 985, 774, 73, 125, 1793,
	654, 1315, 1032, 125, 1732, 8, 1645, 7, 1683, 6,
	1558, 379, 380, 1822, 1779, 627, 1203, 1816, 75, 1758,
	1808, 1574, 1778, 81, 82, 83, 84, 85, 86, 472,
	476, 935, 1757, 1479, 642, 643, 1603, 1205, 452, 637,
	1432, 96, 651, 1316, 1431, 934, 849, 657, 850, 1722,
	722, 721, 731, 732, 724, 725, 726, 727, 728, 729,
	730, 723, 1531, 484, 733, 431, 1139, 437, 438, 435,
	436, 695, 434, 433, 432, 33, 1532, 1533, 67, 37,
	38, 450, 439, 440, 114, 115, 116, 101, 109, 639,
	110, 638, 1140, 1141, 101, 93, 688, 689, 114, 115,
	116, 97, 1463, 449, 98, 99, 1402, 1380, 1204, 933,
	1379, 1173, 1073, 1381, 1444, 641, 114, 115, 116, 101,
	118, 119, 120, 690, 1638, 1760, 1180, 691, 688, 689,
	114, 115, 116, 1594, 1592, 369, 984, 367, 373, 1428,
	1211, 1567, 1213, 1465, 1214, 1215, 694, 1814, 1568, 66,
	986, 987, 988, 916, 693, 668, 945, 670, 1446, 683,
	684, 649, 930, 927, 928, 685, 926, 1447, 1253, 1795,
	339, 944, 942, 1807, 1712, 1107, 1245, 1130, 1741, 342,
	1198, 653, 1445, 634, 1198, 1538, 1806, 352, 624, 667,
	669, 1835, 1467, 1198, 1471, 1833, 1466, 478, 1464, 937,
	940, 1448, 111, 1469, 678, 946, 1794, 943, 1701, 950,
	698, 1427, 1468, 1489, 1488, 640, 1318, 1320, 474, 125,
	660, 350, 1167, 666, 1167, 1470, 1472, 1487, 100, 635,
	357, 371, 1739, 1242, 338, 100, 117, 1624, 1252, 1244,
	371, 1251, 1295, 1530, 1723, 1292, 745, 746, 1341, 1305,
	1284, 932, 1135, 825, 371, 371, 1430, 758, 1557, 1206,
	100, 658, 1146, 659, 733, 1258, 114, 115, 116, 340,
	1257, 704, 1376, 931, 881, 696, 1085, 1756, 114, 115,
	116, 382, 89, 1180, 726, 727, 728, 729, 730, 723,
	723, 976, 733, 733, 647, 665, 354, 343, 344, 672,
	355, 356, 363, 713, 1319, 971, 347, 349, 360, 345,
	346, 365, 364, 1481, 341, 362, 361, 1761, 697, 936,
	1549, 90, 1714, 1415, 652, 677, 673, 674, 675, 1773,
	125, 1006, 924, 1831, 938, 664, 1832, 679, 1830, 1702,
	1700, 711, 712, 710, 743, 1004, 1005, 1003, 1166, 802,
	1166, 1515, 919, 1212, 1056, 371, 917, 1087, 125, 713,
	125, 125, 686, 371, 851, 1243, 801, 1241, 644, 371,
	645, 708, 68, 646, 745, 746, 1809, 745, 746, 1170,
	869, 707, 487, 705, 761, 706, 1171, 722, 721, 731,
	732, 724, 725, 726, 727, 728, 729, 730, 723, 796,
	977, 733, 829, 1810, 799, 840, 724, 725, 726, 727,
	728, 729, 730, 723, 972, 815, 733, 712, 710, 1086,
	1400, 882, 776, 778, 780, 782, 784, 786, 787, 777,
	779, 710, 783, 785, 713, 788, 1090, 1091, 711, 712,
	710, 663, 633, 803, 1277, 655, 656, 713, 830, 103,
	1056, 1744, 1302, 1233, 1800, 818, 713, 1644, 1643, 895,
	898, 899, 900, 901, 902, 903, 813, 904, 905, 906,
	907, 908, 883, 884, 885, 886, 867, 868, 896, 1563,
	870, 1801, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 887, 888, 889, 890, 891, 892, 893, 894,
	1414, 125, 711, 712, 710, 909, 66, 1229, 1230, 1231,
	1483, 711, 712, 710, 125, 1836, 920, 921, 1002, 1413,
	713, 1291, 1492, 939, 371, 1209, 1290, 1812, 125, 713,
	1269, 1270, 1271, 125, 1289, 1811, 125, 955, 636, 125,
	846, 371, 711, 712, 710, 859, 371, 371, 371, 125,
	371, 371, 1802, 711, 712, 710, 1790, 897, 918, 1771,
	713, 1671, 648, 1641, 371, 371, 994, 996, 997, 1612,
	1493, 713, 947, 995, 114, 115, 116, 840, 960, 1232,
	954, 1837, 1564, 1494, 1237, 1234, 1225, 1235, 1228, 958,
	1224, 1424, 1411, 966, 1226, 1227, 969, 961, 711, 712,
	710, 477, 941, 714, 1570, 114, 115, 116, 1236, 1024,
	1698, 1813, 1698, 1754, 1023, 1000, 713, 1060, 461, 959,
	1750, 461, 75, 1025, 963, 964, 965, 482, 967, 968,
	979, 114, 115, 116, 639, 1436, 638, 371, 1707, 382,
	1698, 1748, 973, 974, 1698, 1740, 1706, 951, 771, 114,
	115, 116, 1655, 1383, 1044, 1047, 1698, 461, 1033, 1503,
	1057, 114, 115, 116, 1426, 1221, 1698, 1697, 1514, 978,
	371, 371, 1131, 1001, 1337, 981, 1039, 807, 810, 912,
	1634, 125, 1611, 461, 1622, 461, 479, 480, 1168, 1035,
	1555, 1554, 1034, 371, 1551, 1552, 460, 1551, 1550, 461,
	125, 1098, 461, 371, 1110, 461, 1080, 125, 761, 125,
	408, 407, 410, 411, 412, 413, 1092, 125, 125, 409,
	414, 709, 461, 77, 371, 1033, 1646, 371, 1065, 1066,
	1026, 1027, 1125, 1132, 1131, 33, 912, 911, 371, 371,
	1036, 1134, 1110, 487, 1101, 1337, 487, 858, 857, 1514,
	1370, 1105, 1099, 1108, 1619, 33, 1035, 1150, 1130, 1104,
	1344, 1109, 1127, 709, 1100, 1040, 1041, 1713, 1553, 1046,
	1049, 1050, 1110, 1647, 1648, 1649, 1384, 66, 33, 1138,
	1308, 1307, 1345, 1181, 1182, 1183, 1165, 1174, 1098, 1175,
	1176, 1177, 1178, 371, 1064, 1132, 1098, 1067, 1068, 461,
	1102, 1088, 1688, 1130, 1220, 1186, 1187, 1188, 1189, 66,
	454, 1110, 1069, 1514, 949, 843, 1791, 1196, 1133, 1137,
	1136, 1098, 1660, 125, 125, 125, 125, 125, 1153, 66,
	125, 125, 1128, 1654, 125, 371, 1219, 1197, 1630, 722,
	721, 731, 732, 724, 725, 726, 727, 728, 729, 730,
	723, 125, 66, 733, 914, 1195, 1569, 125, 125, 125,
	1542, 910, 1388, 125, 371, 1191, 1185, 1246, 1247, 1248,
	1249, 1250, 1184, 91, 1254, 1255, 1222, 1207, 1259, 1420,
	1208, 1192, 1193, 962, 66, 632, 1518, 1519, 1443, 1661,
	1238, 1606, 1262, 1218, 1824, 1261, 1266, 1819, 1544, 1521,
	1503, 1419, 1000, 1265, 1650, 1433, 982, 1267, 953, 1524,
	1523, 980, 1358, 1260, 721, 731, 732, 724, 725, 726,
	727, 728, 729, 730, 723, 1357, 1797, 733, 989, 990,
	991, 992, 722, 721, 731, 732, 724, 725, 726, 727,
	728, 729, 730, 723, 1286, 1420, 733, 1361, 1651, 1652,
	125, 1359, 1362, 1777, 1495, 1326, 1360, 812, 125, 1363,
	1001, 1119, 1120, 1775, 1272, 1623, 1115, 1118, 1119, 1120,
	1116, 447, 1117, 1121, 1335, 1334, 1518, 1519, 1766, 1763,
	125, 1799, 1781, 1042, 1043, 1783, 1789, 95, 1324, 1788,
	1736, 125, 125, 125, 125, 125, 1325, 1351, 1285, 1734,
	452, 1323, 1346, 125, 948, 448, 1425, 125, 1419, 805,
	125, 125, 1301, 1330, 125, 125, 125, 1342, 1406, 922,
	126, 806, 1368, 126, 799, 1314, 856, 1382, 372, 371,
	126, 1322, 108, 1281, 1282, 121, 1052, 661, 1389, 1399,
	1329, 1385, 107, 1395, 1395, 1746, 1338, 1745, 1150, 1340,
	1053, 1708, 1686, 1397, 1299, 1372, 1390, 1617, 372, 1572,
	1083, 372, 126, 372, 1090, 1091, 958, 1364, 1339, 1216,
	1144, 1353, 1354, 1405, 1356, 1407, 1408, 1409, 952, 1374,
	1369, 126, 126, 1396, 1422, 1123, 1403, 1404, 1377, 126,
	1352, 455, 456, 1355, 126, 1387, 458, 1804, 1371, 371,
	1435, 1803, 1373, 1605, 1391, 1392, 1393, 731, 732, 724,
	725, 726, 727, 728, 729, 730, 723, 1333, 1423, 733,
	125, 1786, 1615, 1767, 1412, 1332, 371, 1616, 459, 1199,
	1115, 1118, 1119, 1120, 1116, 77, 1117, 1121, 1498, 1337,
	371, 692, 1421, 1296, 722, 721, 731, 732, 724, 725,
	726, 727, 728, 729, 730, 723, 467, 1293, 733, 1826,
	1825, 454, 826, 819, 1439, 371, 1826, 1737, 1639, 1084,
	468, 1023, 75, 80, 1437, 72, 1, 1070, 797, 358,
	1817, 112, 1575, 1657, 1459, 929, 1710, 1416, 1201, 1438,
	1156, 1440, 1147, 816, 817, 470, 88, 469, 619, 87,
	1460, 676, 371, 1155, 1450, 1484, 1154, 1461, 1451, 1699,
	1452, 1401, 125, 1172, 1480, 1474, 467, 1637, 1449, 1458,
	1543, 1398, 371, 1743, 864, 1473, 862, 863, 371, 371,
	468, 861, 1351, 1504, 866, 865, 1035, 860, 351, 1034,
	983, 1459, 368, 1122, 1507, 852, 820, 1501, 1240, 1239,
	925, 125, 1556, 464, 465, 470, 1496, 469, 1169, 348,
	687, 1513, 353, 741, 1331, 371, 1378, 371, 488, 371,
	481, 1653, 1395, 1395, 1395, 1303, 1509, 1512, 1522, 1535,
	1217, 1526, 94, 1528, 1150, 1529, 1150, 1548, 1787, 1764,
	1762, 1733, 1682, 1765, 1731, 1798, 1780, 1546, 1547, 1082,
	808, 1614, 1497, 1534, 1536, 1327, 1328, 810, 125, 1300,
	126, 1539, 1540, 1541, 125, 1537, 770, 1165, 1054, 835,
	391, 993, 372, 406, 1576, 371, 371, 371, 403, 125,
	1559, 372, 404, 1561, 1562, 1093, 1560, 1343, 715, 1527,
	389, 383, 827, 1114, 1112, 372, 372, 1111, 839, 1520,
	1516, 833, 1565, 1097, 1429, 915, 1210, 1566, 1571, 631,
	463, 92, 1051, 1721, 1602, 1585, 462, 1581, 1582, 58,
	36, 375, 1256, 1580, 1792, 1772, 1590, 1037, 1038, 700,
	471, 30, 29, 28, 23, 1587, 1588, 22, 1589, 21,
	20, 1591, 19, 1593, 25, 18, 17, 16, 106, 102,
	45, 43, 1351, 41, 1613, 40, 650, 27, 26, 15,
	14, 1618, 13, 12, 11, 371, 10, 9, 5, 4,
	1081, 126, 1627, 371, 703, 385, 24, 1385, 1626, 420,
	32, 759, 2, 0, 1150, 0, 0, 0, 0, 1633,
	0, 1632, 0, 0, 0, 0, 372, 0, 0, 126,
	0, 126, 126, 0, 372, 371, 0, 0, 0, 0,
	372, 1640, 32, 1642, 0, 0, 0, 0, 0, 1664,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 371, 371,
	371, 125, 371, 1674, 1676, 1677, 0, 0, 0, 1663,
	0, 0, 0, 371, 453, 371, 1662, 1670, 0, 0,
	0, 371, 1678, 0, 0, 0, 1694, 1689, 1507, 1685,
	0, 1482, 1507, 1680, 1691, 1687, 0, 0, 0, 0,
	0, 1693, 0, 0, 1704, 371, 1705, 1695, 0, 0,
	1709, 371, 125, 1703, 1696, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1499, 722, 721, 731,
	732, 724, 725, 726, 727, 728, 729, 730, 723, 1730,
	0, 733, 0, 0, 0, 0, 0, 0, 0, 371,
	0, 0, 0, 0, 0, 1600, 1716, 1507, 0, 1738,
	0, 0, 126, 371, 371, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 126, 0, 1753, 1599, 0,
	0, 1752, 0, 1659, 1150, 372, 0, 0, 0, 126,
	371, 0, 125, 1759, 126, 1351, 1768, 126, 0, 0,
	126, 0, 372, 0, 0, 0, 0, 372, 372, 372,
	126, 372, 372, 1279, 1776, 1774, 1784, 1280, 0, 1785,
	0, 0, 0, 0, 0, 372, 372, 0, 1287, 1288,
	1796, 0, 0, 0, 1294, 0, 1770, 1297, 1298, 0,
	0, 0, 371, 0, 0, 1304, 0, 1805, 0, 1306,
	0, 0, 1309, 1310, 1311, 1312, 1313, 722, 721, 731,
	732, 724, 725, 726, 727, 728, 729, 730, 723, 0,
	1823, 733, 1604, 0, 0, 0, 0, 0, 1834, 0,
	722, 721, 731, 732, 724, 725, 726, 727, 728, 729,
	730, 723, 0, 0, 733, 1453, 0, 382, 372, 0,
	0, 0, 0, 0, 1628, 0, 0, 1629, 0, 0,
	1631, 0, 1366, 1367, 0, 722, 721, 731, 732, 724,
	725, 726, 727, 728, 729, 730, 723, 0, 0, 733,
	0, 372, 372, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	681, 0, 0, 0, 372, 1598, 0, 0, 0, 681,
	0, 126, 0, 0, 372, 0, 0, 0, 126, 0,
	126, 0, 0, 0, 0, 32, 0, 0, 126, 126,
	0, 0, 0, 0, 0, 372, 742, 744, 372, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 372,
	372, 0, 0, 0, 1684, 382, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 757, 0, 417,
	0, 762, 763, 764, 765, 766, 767, 768, 769, 0,
	772, 775, 775, 775, 781, 775, 775, 781, 775, 789,
	790, 791, 792, 793, 794, 795, 0, 0, 0, 0,
	0, 0, 0, 32, 372, 0, 0, 722, 721, 731,
	732, 724, 725, 726, 727, 728, 729, 730, 723, 1456,
	1457, 733, 0, 1597, 0, 0, 370, 0, 0, 836,
	0, 0, 0, 0, 126, 126, 126, 126, 126, 0,
	0, 126, 126, 0, 0, 126, 372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 489, 0, 0, 623,
	0, 630, 126, 0, 0, 0, 0, 0, 126, 126,
	126, 0, 0, 0, 126, 372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1510, 0, 0, 0, 0,
	0, 717, 0, 720, 0, 0, 0, 0, 0, 734,
	735, 736, 737, 738, 739, 740, 1525, 718, 719, 716,
	722, 721, 731, 732, 724, 725, 726, 727, 728, 729,
	730, 723, 1278, 0, 733, 722, 721, 731, 732, 724,
	725, 726, 727, 728, 729, 730, 723, 0, 0, 733,
	0, 0, 722, 721, 731, 732, 724, 725, 726, 727,
	728, 729, 730, 723, 0, 0, 733, 0, 0, 0,
	0, 126, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 681, 0, 0, 1584, 0, 0, 0,
	1586, 0, 126, 126, 126, 126, 126, 0, 0, 0,
	681, 1595, 1596, 0, 126, 681, 681, 681, 126, 681,
	681, 126, 126, 0, 0, 126, 126, 126, 1610, 0,
	0, 0, 0, 681, 681, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 1620, 1621, 0, 0,
	1625, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 998, 0, 0, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 1061, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 126, 0, 0, 0, 0, 0, 372, 0, 0,
	0, 0, 0, 699, 701, 1675, 0, 0, 0, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1126, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1717, 1718, 1719, 1720, 0, 1724, 0,
	1725, 1726, 1727, 372, 1728, 1729, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 372, 0, 0, 0, 0, 0, 372,
	372, 0, 0, 0, 823, 0, 0, 0, 1749, 0,
	0, 0, 489, 0, 0, 0, 0, 0, 853, 1755,
	0, 0, 126, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 0, 372, 0,
	372, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 681, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 372, 372, 372, 0,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 1274, 1275, 0, 0, 0, 0, 0, 1827, 1828,
	0, 0, 0, 0, 33, 34, 35, 67, 37, 38,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1283, 71, 0, 453, 0, 0, 39,
	64, 65, 0, 62, 0, 0, 0, 0, 0, 63,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1321, 372, 0, 51, 0,
	489, 0, 0, 0, 372, 489, 489, 489, 66, 489,
	489, 0, 0, 0, 0, 0, 0, 0, 0, 836,
	0, 0, 0, 489, 489, 0, 1347, 1348, 0, 0,
	836, 836, 836, 836, 836, 0, 372, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1126, 0, 0, 836,
	0, 0, 0, 836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 372,
	372, 372, 126, 372, 42, 44, 47, 46, 49, 0,
	61, 0, 0, 0, 372, 0, 372, 0, 0, 0,
	0, 0, 372, 0, 0, 0, 1028, 0, 489, 0,
	0, 0, 0, 50, 70, 69, 0, 0, 59, 60,
	48, 0, 1058, 0, 0, 0, 372, 0, 0, 0,
	0, 0, 372, 126, 0, 0, 0, 0, 0, 1062,
	1063, 0, 0, 0, 0, 0, 52, 53, 0, 54,
	55, 56, 57, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 0, 0, 0, 0, 0, 0,
	372, 0, 823, 0, 0, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 372, 372, 0, 0, 681,
	0, 0, 0, 489, 0, 0, 489, 0, 0, 0,
	0, 0, 0, 1454, 1455, 0, 0, 489, 623, 0,
	0, 372, 0, 126, 0, 0, 0, 0, 1475, 1476,
	0, 1477, 1478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 418, 1485, 1486, 0, 0, 0, 0, 0,
	0, 68, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 372, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1508, 0, 32, 0, 0,
	0, 124, 0, 0, 366, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	836, 0, 0, 0, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 475, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 1545, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 124, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1583,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1601,
	0, 0, 0, 0, 0, 0, 0, 1607, 1608, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 489, 0,
	0, 0, 1656, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1665, 1666, 1667, 1668, 1669, 0, 0,
	0, 1672, 1673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1508,
	0, 32, 0, 1508, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1434, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 0, 0, 0, 0, 0, 0, 0, 1508, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 0, 32, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 489, 0, 0, 1058, 0, 475, 1511, 1491, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 124, 842, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 489, 1815, 630, 0,
	0, 1820, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1577, 1578, 1579, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1058, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 489, 124, 0, 0, 124, 0,
	0, 957, 1636, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1636, 1636, 1636,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1690, 0, 1692, 0, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	475, 957, 0, 0, 0, 475, 475, 0, 0, 475,
	475, 475, 0, 0, 1636, 1059, 0, 0, 0, 0,
	1636, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 475, 475, 475, 475, 0,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1742, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 957, 124,
	0, 124, 1751, 489, 489, 0, 0, 0, 0, 124,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1058, 0, 1769,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 124, 124, 124, 124,
	0, 0, 124, 124, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 1263,
	1264, 124, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 475, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 475, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1059, 124, 124, 124, 124, 124, 0, 0,
	0, 0, 0, 0, 0, 1365, 0, 0, 0, 124,
	0, 0, 124, 124, 0, 0, 124, 1375, 957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1059, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	603, 591, 0, 1078, 544, 606, 517, 534, 615, 535,
	538, 576, 501, 557, 236, 532, 0, 521, 497, 528,
	498, 519, 546, 165, 550, 516, 593, 560, 605, 200,
	0, 522, 248, 578, 279, 155, 208, 206, 301, 170,
	166, 164, 154, 187, 213, 247, 297, 241, 612, 203,
	567, 0, 288, 222, 124, 0, 0, 548, 595, 555,
	587, 543, 577, 506, 566, 607, 533, 574, 608, 191,
	153, 131, 233, 289, 172, 0, 0, 0, 114, 115,
	116, 0, 1151, 1152, 0, 0, 0, 0, 0, 149,
	0, 571, 602, 530, 573, 575, 618, 496, 568, 0,
	499, 502, 614, 598, 525, 526, 1386, 0, 0, 0,
	0, 0, 0, 547, 556, 584, 541, 0, 0, 0,
	0, 0, 0, 0, 0, 523, 0, 565, 0, 0,
	1059, 503, 500, 0, 124, 0, 0, 545, 0, 0,
	0, 505, 0, 524, 585, 0, 494, 177, 589, 597,
	542, 325, 601, 540, 539, 604, 259, 0, 293, 181,
	199, 145, 196, 128, 140, 0, 179, 232, 266, 270,
	594, 520, 529, 156, 527, 268, 245, 314, 564, 249,
	267, 204, 303, 260, 313, 326, 327, 162, 226, 320,
	298, 323, 335, 141, 159, 239, 294, 317, 285, 221,
	300, 195, 284, 133, 296, 311, 150, 278, 0, 0,
	0, 135, 309, 292, 219, 192, 193, 134, 0, 264,
	163, 175, 158, 235, 306, 307, 157, 336, 142, 322,
	137, 143, 321, 228, 302, 310, 220, 212, 136, 308,
	218, 211, 198, 169, 183, 257, 207, 258, 184, 224,
	223, 225, 0, 132, 0, 290, 318, 337, 147, 515,
	590, 299, 331, 334, 0, 261, 148, 176, 168, 256,
	174, 201, 330, 332, 333, 227, 144, 186, 286, 197,
	205, 582, 617, 244, 269, 151, 316, 287, 510, 514,
	508, 509, 558, 559, 511, 609, 610, 611, 586, 504,
	0, 512, 513, 0, 592, 599, 600, 563, 127, 138,
	202, 613, 262, 173, 319, 495, 507, 161, 518, 0,
	0, 531, 536, 537, 549, 551, 552, 553, 554, 562,
	569, 570, 572, 579, 580, 581, 583, 588, 596, 616,
	129, 130, 139, 146, 152, 160, 167, 171, 178, 182,
	185, 188, 189, 190, 194, 210, 214, 215, 216, 217,
	229, 230, 231, 234, 237, 238, 240, 242, 243, 246,
	250, 251, 252, 253, 254, 255, 263, 265, 271, 272,
	273, 274, 275, 276, 277, 280, 281, 282, 283, 291,
	295, 304, 305, 315, 324, 328, 180, 312, 329, 0,
	209, 561, 603, 591, 0, 0, 544, 606, 517, 534,
	615, 535, 538, 576, 501, 557, 236, 532, 0, 521,
	497, 528, 498, 519, 546, 165, 550, 516, 593, 560,
	605, 200, 0, 522, 248, 578, 279, 155, 208, 206,
	301, 170, 166, 164, 154, 187, 213, 247, 297, 241,
	612, 203, 567, 0, 288, 222, 0, 0, 0, 548,
	595, 555, 587, 543, 577, 506, 566, 607, 533, 574,
	608, 191, 153, 131, 233, 289, 172, 0, 0, 0,
	114, 115, 116, 0, 1151, 1152, 0, 0, 0, 0,
	0, 149, 0, 571, 602, 530, 573, 575, 618, 496,
	568, 0, 499, 502, 614, 598, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 547, 556, 584, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 0, 565,
	0, 0, 0, 503, 500, 0, 0, 0, 0, 545,
	0, 0, 0, 505, 0, 524, 585, 0, 494, 177,
	589, 597, 542, 325, 601, 540, 539, 604, 259, 0,
	293, 181, 199, 145, 196, 128, 140, 0, 179, 232,
	266, 270, 594, 520, 529, 156, 527, 268, 245, 314,
	564, 249, 267, 204, 303, 260, 313, 326, 327, 162,
	226, 320, 298, 323, 335, 141, 159, 239, 294, 317,
	285, 221, 300, 195, 284, 133, 296, 311, 150, 278,
	0, 0, 0, 135, 309, 292, 219, 192, 193, 134,
	0, 264, 163, 175, 158, 235, 306, 307, 157, 336,
	142, 322, 137, 143, 321, 228, 302, 310, 220, 212,
	136, 308, 218, 211, 198, 169, 183, 257, 207, 258,
	184, 224, 223, 225, 0, 132, 0, 290, 318, 337,
	147, 515, 590, 299, 331, 334, 0, 261, 148, 176,
	168, 256, 174, 201, 330, 332, 333, 227, 144, 186,
	286, 197, 205, 582, 617, 244, 269, 151, 316, 287,
	510, 514, 508, 509, 558, 559, 511, 609, 610, 611,
	586, 504, 0, 512, 513, 0, 592, 599, 600, 563,
	127, 138, 202, 613, 262, 173, 319, 495, 507, 161,
	518, 0, 0, 531, 536, 537, 549, 551, 552, 553,
	554, 562, 569, 570, 572, 579, 580, 581, 583, 588,
	596, 616, 129, 130, 139, 146, 152, 160, 167, 171,
	178, 182, 185, 188, 189, 190, 194, 210, 214, 215,
	216, 217, 229, 230, 231, 234, 237, 238, 240, 242,
	243, 246, 250, 251, 252, 253, 254, 255, 263, 265,
	271, 272, 273, 274, 275, 276, 277, 280, 281, 282,
	283, 291, 295, 304, 305, 315, 324, 328, 180, 312,
	329, 0, 209, 561, 603, 591, 0, 0, 544, 606,
	517, 534, 615, 535, 538, 576, 501, 557, 236, 532,
	0, 521, 497, 528, 498, 519, 546, 165, 550, 516,
	593, 560, 605, 200, 0, 522, 248, 578, 279, 155,
	208, 206, 301, 170, 166, 164, 154, 187, 213, 247,
	297, 241, 612, 203, 567, 0, 288, 222, 0, 0,
	0, 548, 595, 555, 587, 543, 577, 506, 566, 607,
	533, 574, 608, 191, 153, 131, 233, 289, 172, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 571, 602, 530, 573, 575,
	618, 496, 568, 0, 499, 502, 614, 598, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 547, 556, 584,
	541, 0, 0, 0, 0, 0, 0, 1500, 0, 523,
	0, 565, 0, 0, 0, 503, 500, 0, 0, 0,
	0, 545, 0, 0, 0, 505, 0, 524, 585, 0,
	494, 177, 589, 597, 542, 325, 601, 540, 539, 604,
	259, 0, 293, 181, 199, 145, 196, 128, 140, 0,
	179, 232, 266, 270, 594, 520, 529, 156, 527, 268,
	245, 314, 564, 249, 267, 204, 303, 260, 313, 326,
	327, 162, 226, 320, 298, 323, 335, 141, 159, 239,
	294, 317, 285, 221, 300, 195, 284, 133, 296, 311,
	150, 278, 0, 0, 0, 135, 309, 292, 219, 192,
	193, 134, 0, 264, 163, 175, 158, 235, 306, 307,
	157, 336, 142, 322, 137, 143, 321, 228, 302, 310,
	220, 212, 136, 308, 218, 211, 198, 169, 183, 257,
	207, 258, 184, 224, 223, 225, 0, 132, 0, 290,
	318, 337, 147, 515, 590, 299, 331, 334, 0, 261,
	148, 176, 168, 256, 174, 201, 330, 332, 333, 227,
	144, 186, 286, 197, 205, 582, 617, 244, 269, 151,
	316, 287, 510, 514, 508, 509, 558, 559, 511, 609,
	610, 611, 586, 504, 0, 512, 513, 0, 592, 599,
	600, 563, 127, 138, 202, 613, 262, 173, 319, 495,
	507, 161, 518, 0, 0, 531, 536, 537, 549, 551,
	552, 553, 554, 562, 569, 570, 572, 579, 580, 581,
	583, 588, 596, 616, 129, 130, 139, 146, 152, 160,
	167, 171, 178, 182, 185, 188, 189, 190, 194, 210,
	214, 215, 216, 217, 229, 230, 231, 234, 237, 238,
	240, 242, 243, 246, 250, 251, 252, 253, 254, 255,
	263, 265, 271, 272, 273, 274, 275, 276, 277, 280,
	281, 282, 283, 291, 295, 304, 305, 315, 324, 328,
	180, 312, 329, 0, 209, 561, 603, 591, 0, 0,
	544, 606, 517, 534, 615, 535, 538, 576, 501, 557,
	236, 532, 0, 521, 497, 528, 498, 519, 546, 165,
	550, 516, 593, 560, 605, 200, 0, 522, 248, 578,
	279, 155, 208, 206, 301, 170, 166, 164, 154, 187,
	213, 247, 297, 241, 612, 203, 567, 0, 288, 222,
	0, 0, 0, 548, 595, 555, 587, 543, 577, 506,
	566, 607, 533, 574, 608, 191, 153, 131, 233, 289,
	172, 66, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 571, 602, 530,
	573, 575, 618, 496, 568, 0, 499, 502, 614, 598,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 547,
	556, 584, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 565, 0, 0, 0, 503, 500, 0,
	0, 0, 0, 545, 0, 0, 0, 505, 0, 524,
	585, 0, 494, 177, 589, 597, 542, 325, 601, 540,
	539, 604, 259, 0, 293, 181, 199, 145, 196, 128,
	140, 0, 179, 232, 266, 270, 594, 520, 529, 156,
	527, 268, 245, 314, 564, 249, 267, 204, 303, 260,
	313, 326, 327, 162, 226, 320, 298, 323, 335, 141,
	159, 239, 294, 317, 285, 221, 300, 195, 284, 133,
	296, 311, 150, 278, 0, 0, 0, 135, 309, 292,
	219, 192, 193, 134, 0, 264, 163, 175, 158, 235,
	306, 307, 157, 336, 142, 322, 137, 143, 321, 228,
	302, 310, 220, 212, 136, 308, 218, 211, 198, 169,
	183, 257, 207, 258, 184, 224, 223, 225, 0, 132,
	0, 290, 318, 337, 147, 515, 590, 299, 331, 334,
	0, 261, 148, 176, 168, 256, 174, 201, 330, 332,
	333, 227, 144, 186, 286, 197, 205, 582, 617, 244,
	269, 151, 316, 287, 510, 514, 508, 509, 558, 559,
	511, 609, 610, 611, 586, 504, 0, 512, 513, 0,
	592, 599, 600, 563, 127, 138, 202, 613, 262, 173,
	319, 495, 507, 161, 518, 0, 0, 531, 536, 537,
	549, 551, 552, 553, 554, 562, 569, 570, 572, 579,
	580, 581, 583, 588, 596, 616, 129, 130, 139, 146,
	152, 160, 167, 171, 178, 182, 185, 188, 189, 190,
	194, 210, 214, 215, 216, 217, 229, 230, 231, 234,
	237, 238, 240, 242, 243, 246, 250, 251, 252, 253,
	254, 255, 263, 265, 271, 272, 273, 274, 275, 276,
	277, 280, 281, 282, 283, 291, 295, 304, 305, 315,
	324, 328, 180, 312, 329, 0, 209, 561, 603, 591,
	0, 0, 544, 606, 517, 534, 615, 535, 538, 576,
	501, 557, 236, 532, 0, 521, 497, 528, 498, 519,
	546, 165, 550, 516, 593, 560, 605, 200, 0, 522,
	248, 578, 279, 155, 208, 206, 301, 170, 166, 164,
	154, 187, 213, 247, 297, 241, 612, 203, 567, 0,
	288, 222, 0, 0, 0, 548, 595, 555, 587, 543,
	577, 506, 566, 607, 533, 574, 608, 191, 153, 131,
	233, 289, 172, 0, 0, 0, 114, 115, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 571,
	602, 530, 573, 575, 618, 496, 568, 0, 499, 502,
	614, 598, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 547, 556, 584, 541, 0, 0, 0, 0, 0,
	0, 1376, 0, 523, 0, 565, 0, 0, 0, 503,
	500, 0, 0, 0, 0, 545, 0, 0, 0, 505,
	0, 524, 585, 0, 494, 177, 589, 597, 542, 325,
	601, 540, 539, 604, 259, 0, 293, 181, 199, 145,
	196, 128, 140, 0, 179, 232, 266, 270, 594, 520,
	529, 156, 527, 268, 245, 314, 564, 249, 267, 204,
	303, 260, 313, 326, 327, 162, 226, 320, 298, 323,
	335, 141, 159, 239, 294, 317, 285, 221, 300, 195,
	284, 133, 296, 311, 150, 278, 0, 0, 0, 135,
	309, 292, 219, 192, 193, 134, 0, 264, 163, 175,
	158, 235, 306, 307, 157, 336, 142, 322, 137, 143,
	321, 228, 302, 310, 220, 212, 136, 308, 218, 211,
	198, 169, 183, 257, 207, 258, 184, 224, 223, 225,
	0, 132, 0, 290, 318, 337, 147, 515, 590, 299,
	331, 334, 0, 261, 148, 176, 168, 256, 174, 201,
	330, 332, 333, 227, 144, 186, 286, 197, 205, 582,
	617, 244, 269, 151, 316, 287, 510, 514, 508, 509,
	558, 559, 511, 609, 610, 611, 586, 504, 0, 512,
	513, 0, 592, 599, 600, 563, 127, 138, 202, 613,
	262, 173, 319, 495, 507, 161, 518, 0, 0, 531,
	536, 537, 549, 551, 552, 553, 554, 562, 569, 570,
	572, 579, 580, 581, 583, 588, 596, 616, 129, 130,
	139, 146, 152, 160, 167, 171, 178, 182, 185, 188,
	189, 190, 194, 210, 214, 215, 216, 217, 229, 230,
	231, 234, 237, 238, 240, 242, 243, 246, 250, 251,
	252, 253, 254, 255, 263, 265, 271, 272, 273, 274,
	275, 276, 277, 280, 281, 282, 283, 291, 295, 304,
	305, 315, 324, 328, 180, 312, 329, 0, 209, 561,
	603, 591, 0, 0, 544, 606, 517, 534, 615, 535,
	538, 576, 501, 557, 236, 532, 0, 521, 497, 528,
	498, 519, 546, 165, 550, 516, 593, 560, 605, 200,
	0, 522, 248, 578, 279, 155, 208, 206, 301, 170,
	166, 164, 154, 187, 213, 247, 297, 241, 612, 203,
	567, 0, 288, 222, 0, 0, 0, 548, 595, 555,
	587, 543, 577, 506, 566, 607, 533, 574, 608, 191,
	153, 131, 233, 289, 172, 0, 0, 0, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 571, 602, 530, 573, 575, 618, 496, 568, 0,
	499, 502, 614, 598, 525, 526, 0, 0, 0, 0,
	0, 0, 0, 547, 556, 584, 541, 0, 0, 0,
	0, 0, 0, 1103, 0, 523, 0, 565, 0, 0,
	0, 503, 500, 0, 0, 0, 0, 545, 0, 0,
	0, 505, 0, 524, 585, 0, 494, 177, 589, 597,
	542, 325, 601, 540, 539, 604, 259, 0, 293, 181,
	199, 145, 196, 128, 140, 0, 179, 232, 266, 270,
	594, 520, 529, 156, 527, 268, 245, 314, 564, 249,
	267, 204, 303, 260, 313, 326, 327, 162, 226, 320,
	298, 323, 335, 141, 159, 239, 294, 317, 285, 221,
	300, 195, 284, 133, 296, 311, 150, 278, 0, 0,
	0, 135, 309, 292, 219, 192, 193, 134, 0, 264,
	163, 175, 158, 235, 306, 307, 157, 336, 142, 322,
	137, 143, 321, 228, 302, 310, 220, 212, 136, 308,
	218, 211, 198, 169, 183, 257, 207, 258, 184, 224,
	223, 225, 0, 132, 0, 290, 318, 337, 147, 515,
	590, 299, 331, 334, 0, 261, 148, 176, 168, 256,
	174, 201, 330, 332, 333, 227, 144, 186, 286, 197,
	205, 582, 617, 244, 269, 151, 316, 287, 510, 514,
	508, 509, 558, 559, 511, 609, 610, 611, 586, 504,
	0, 512, 513, 0, 592, 599, 600, 563, 127, 138,
	202, 613, 262, 173, 319, 495, 507, 161, 518, 0,
	0, 531, 536, 537, 549, 551, 552, 553, 554, 562,
	569, 570, 572, 579, 580, 581, 583, 588, 596, 616,
	129, 130, 139, 146, 152, 160, 167, 171, 178, 182,
	185, 188, 189, 190, 194, 210, 214, 215, 216, 217,
	229, 230, 231, 234, 237, 238, 240, 242, 243, 246,
	250, 251, 252, 253, 254, 255, 263, 265, 271, 272,
	273, 274, 275, 276, 277, 280, 281, 282, 283, 291,
	295, 304, 305, 315, 324, 328, 180, 312, 329, 0,
	209, 561, 603, 591, 0, 0, 544, 606, 517, 534,
	615, 535, 538, 576, 501, 557, 236, 532, 0, 521,
	497, 528, 498, 519, 546, 165, 550, 516, 593, 560,
	605, 200, 0, 522, 248, 578, 279, 155, 208, 206,
	301, 170, 166, 164, 154, 187, 213, 247, 297, 241,
	612, 203, 567, 0, 288, 222, 0, 0, 0, 548,
	595, 555, 587, 543, 577, 506, 566, 607, 533, 574,
	608, 191, 153, 131, 233, 289, 172, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 571, 602, 530, 573, 575, 618, 496,
	568, 0, 499, 502, 614, 598, 525, 526, 0, 0,
	0, 0, 0, 0, 0, 547, 556, 584, 541, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 0, 565,
	0, 0, 0, 503, 500, 0, 0, 0, 0, 545,
	0, 0, 0, 505, 0, 524, 585, 0, 494, 177,
	589, 597, 542, 325, 601, 540, 539, 604, 259, 0,
	293, 181, 199, 145, 196, 128, 140, 0, 179, 232,
	266, 270, 594, 520, 529, 156, 527, 268, 245, 314,
	564, 249, 267, 204, 303, 260, 313, 326, 327, 162,
	226, 320, 298, 323, 335, 141, 159, 239, 294, 317,
	285, 221, 300, 195, 284, 133, 296, 311, 150, 278,
	0, 0, 0, 135, 309, 292, 219, 192, 193, 134,
	0, 264, 163, 175, 158, 235, 306, 307, 157, 336,
	142, 322, 137, 143, 321, 228, 302, 310, 220, 212,
	136, 308, 218, 211, 198, 169, 183, 257, 207, 258,
	184, 224, 223, 225, 0, 132, 0, 290, 318, 337,
	147, 515, 590, 299, 331, 334, 0, 261, 148, 176,
	168, 256, 174, 201, 330, 332, 333, 227, 144, 186,
	286, 197, 205, 582, 617, 244, 269, 151, 316, 287,
	510, 514, 508, 509, 558, 559, 511, 609, 610, 611,
	586, 504, 0, 512, 513, 0, 592, 599, 600, 563,
	127, 138, 202, 613, 262, 173, 319, 495, 507, 161,
	518, 0, 0, 531, 536, 537, 549, 551, 552, 553,
	554, 562, 569, 570, 572, 579, 580, 581, 583, 588,
	596, 616, 129, 130, 139, 146, 152, 160, 167, 171,
	178, 182, 185, 188, 189, 190, 194, 210, 214, 215,
	216, 217, 229, 230, 231, 234, 237, 238, 240, 242,
	243, 246, 250, 251, 252, 253, 254, 255, 263, 265,
	271, 272, 273, 274, 275, 276, 277, 280, 281, 282,
	283, 291, 295, 304, 305, 315, 324, 328, 180, 312,
	329, 0, 209, 561, 603, 591, 0, 0, 544, 606,
	517, 534, 615, 535, 538, 576, 501, 557, 236, 532,
	0, 521, 497, 528, 498, 519, 546, 165, 550, 516,
	593, 560, 605, 200, 0, 522, 248, 578, 279, 155,
	208, 206, 301, 170, 166, 164, 154, 187, 213, 247,
	297, 241, 612, 203, 567, 0, 288, 222, 0, 0,
	0, 548, 595, 555, 587, 543, 577, 506, 566, 607,
	533, 574, 608, 191, 153, 131, 233, 289, 172, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 571, 602, 530, 573, 575,
	618, 496, 568, 0, 499, 502, 614, 598, 525, 526,
	0, 0, 0, 0, 0, 0, 0, 547, 556, 584,
	541, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	0, 565, 0, 0, 0, 503, 500, 0, 0, 0,
	0, 545, 0, 0, 0, 505, 0, 524, 585, 0,
	494, 177, 589, 597, 542, 325, 601, 540, 539, 604,
	259, 0, 293, 181, 199, 145, 196, 128, 140, 0,
	179, 232, 266, 270, 594, 520, 529, 156, 527, 268,
	245, 314, 564, 249, 267, 204, 303, 260, 313, 326,
	327, 162, 226, 320, 298, 323, 335, 141, 159, 239,
	294, 317, 285, 221, 300, 195, 284, 133, 296, 311,
	150, 278, 0, 0, 0, 135, 309, 292, 219, 192,
	193, 134, 0, 264, 163, 175, 158, 235, 306, 307,
	157, 336, 142, 322, 137, 492, 321, 228, 302, 310,
	220, 212, 136, 308, 218, 211, 198, 169, 183, 257,
	207, 258, 184, 224, 223, 225, 0, 132, 0, 290,
	318, 337, 147, 515, 590, 299, 331, 334, 0, 261,
	148, 176, 168, 256, 174, 201, 330, 332, 333, 493,
	491, 486, 485, 197, 205, 582, 617, 244, 269, 151,
	316, 287, 510, 514, 508, 509, 558, 559, 511, 609,
	610, 611, 586, 504, 0, 512, 513, 0, 592, 599,
	600, 563, 127, 138, 202, 613, 262, 173, 319, 495,
	507, 161, 518, 0, 0, 531, 536, 537, 549, 551,
	552, 553, 554, 562, 569, 570, 572, 579, 580, 581,
	583, 588, 596, 616, 129, 130, 139, 146, 152, 160,
	167, 171, 178, 182, 185, 188, 189, 190, 194, 210,
	214, 215, 216, 217, 229, 230, 231, 234, 237, 238,
	240, 242, 243, 246, 250, 251, 252, 253, 254, 255,
	263, 265, 271, 272, 273, 274, 275, 276, 277, 280,
	281, 282, 283, 291, 295, 304, 305, 315, 324, 328,
	180, 312, 329, 0, 209, 561, 603, 591, 0, 0,
	544, 606, 517, 534, 615, 535, 538, 576, 501, 557,
	236, 532, 0, 521, 497, 528, 498, 519, 546, 165,
	550, 516, 593, 560, 605, 200, 0, 522, 248, 578,
	279, 155, 208, 206, 301, 170, 166, 164, 154, 187,
	213, 247, 297, 241, 612, 203, 567, 0, 288, 222,
	0, 0, 0, 548, 595, 555, 587, 543, 577, 506,
	566, 607, 533, 574, 608, 191, 153, 131, 233, 289,
	172, 0, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 571, 602, 530,
	573, 575, 618, 496, 568, 0, 499, 502, 614, 598,
	525, 526, 0, 0, 0, 0, 0, 0, 0, 547,
	556, 584, 541, 0, 0, 0, 0, 0, 0, 0,
	0, 523, 0, 565, 0, 0, 0, 503, 500, 0,
	0, 0, 0, 545, 0, 0, 0, 505, 0, 524,
	585, 0, 494, 177, 589, 597, 542, 325, 601, 540,
	539, 604, 259, 0, 293, 181, 199, 145, 196, 128,
	140, 0, 179, 232, 266, 270, 594, 520, 529, 156,
	527, 268, 245, 314, 564, 249, 267, 204, 303, 260,
	313, 326, 327, 162, 226, 320, 298, 323, 335, 141,
	159, 239, 294, 317, 285, 221, 300, 195, 284, 133,
	296, 844, 150, 278, 0, 0, 0, 135, 309, 292,
	219, 192, 193, 134, 0, 264, 163, 175, 158, 235,
	306, 307, 157, 336, 142, 322, 137, 492, 321, 228,
	302, 310, 220, 212, 136, 308, 218, 211, 198, 169,
	183, 257, 207, 258, 184, 224, 223, 225, 0, 132,
	0, 290, 318, 337, 147, 515, 590, 299, 331, 334,
	0, 261, 148, 176, 168, 256, 174, 201, 330, 332,
	333, 493, 491, 486, 485, 197, 205, 582, 617, 244,
	269, 151, 316, 287, 510, 514, 508, 509, 558, 559,
	511, 609, 610, 611, 586, 504, 0, 512, 513, 0,
	592, 599, 600, 563, 127, 138, 202, 613, 262, 173,
	319, 495, 507, 161, 518, 0, 0, 531, 536, 537,
	549, 551, 552, 553, 554, 562, 569, 570, 572, 579,
	580, 581, 583, 588, 596, 616, 129, 130, 139, 146,
	152, 160, 167, 171, 178, 182, 185, 188, 189, 190,
	194, 210, 214, 215, 216, 217, 229, 230, 231, 234,
	237, 238, 240, 242, 243, 246, 250, 251, 252, 253,
	254, 255, 263, 265, 271, 272, 273, 274, 275, 276,
	277, 280, 281, 282, 283, 291, 295, 304, 305, 315,
	324, 328, 180, 312, 329, 0, 209, 561, 603, 591,
	0, 0, 544, 606, 517, 534, 615, 535, 538, 576,
	501, 557, 236, 532, 0, 521, 497, 528, 498, 519,
	546, 165, 550, 516, 593, 560, 605, 200, 0, 522,
	248, 578, 279, 155, 208, 206, 301, 170, 166, 164,
	154, 187, 213, 247, 297, 241, 612, 203, 567, 0,
	288, 222, 0, 0, 0, 548, 595, 555, 587, 543,
	577, 506, 566, 607, 533, 574, 608, 191, 153, 131,
	233, 289, 172, 0, 0, 0, 114, 115, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 0, 571,
	602, 530, 573, 575, 618, 496, 568, 0, 499, 502,
	614, 598, 525, 526, 0, 0, 0, 0, 0, 0,
	0, 547, 556, 584, 541, 0, 0, 0, 0, 0,
	0, 0, 0, 523, 0, 565, 0, 0, 0, 503,
	500, 0, 0, 0, 0, 545, 0, 0, 0, 505,
	0, 524, 585, 0, 494, 177, 589, 597, 542, 325,
	601, 540, 539, 604, 259, 0, 293, 181, 199, 145,
	196, 128, 140, 0, 179, 232, 266, 270, 594, 520,
	529, 156, 527, 268, 245, 314, 564, 249, 267, 204,
	303, 260, 313, 326, 327, 162, 226, 320, 298, 323,
	335, 141, 159, 239, 294, 317, 285, 221, 300, 195,
	284, 133, 296, 483, 150, 278, 0, 0, 0, 135,
	309, 292, 219, 192, 193, 134, 0, 264, 163, 175,
	158, 235, 306, 307, 157, 336, 142, 322, 137, 492,
	321, 228, 302, 310, 220, 212, 136, 308, 218, 211,
	198, 169, 183, 257, 207, 258, 184, 224, 223, 225,
	0, 132, 0, 290, 318, 337, 147, 515, 590, 299,
	331, 334, 0, 261, 148, 176, 168, 256, 174, 201,
	330, 332, 333, 493, 491, 486, 485, 197, 205, 582,
	617, 244, 269, 151, 316, 287, 510, 514, 508, 509,
	558, 559, 511, 609, 610, 611, 586, 504, 0, 512,
	513, 0, 592, 599, 600, 563, 127, 138, 202, 613,
	262, 173, 319, 495, 507, 161, 518, 0, 0, 531,
	536, 537, 549, 551, 552, 553, 554, 562, 569, 570,
	572, 579, 580, 581, 583, 588, 596, 616, 129, 130,
	139, 146, 152, 160, 167, 171, 178, 182, 185, 188,
	189, 190, 194, 210, 214, 215, 216, 217, 229, 230,
	231, 234, 237, 238, 240, 242, 243, 246, 250, 251,
	252, 253, 254, 255, 263, 265, 271, 272, 273, 274,
	275, 276, 277, 280, 281, 282, 283, 291, 295, 304,
	305, 315, 324, 328, 180, 312, 329, 236, 209, 561,
	1030, 0, 387, 0, 0, 0, 165, 0, 386, 0,
	0, 0, 200, 0, 1031, 248, 0, 279, 155, 208,
	206, 301, 170, 166, 164, 154, 187, 213, 247, 297,
	241, 430, 203, 0, 0, 288, 222, 0, 0, 0,
	0, 0, 421, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 153, 131, 233, 289, 172, 66, 0,
	0, 114, 115, 116, 408, 407, 410, 411, 412, 413,
	0, 0, 149, 409, 414, 415, 416, 0, 0, 0,
	0, 384, 401, 0, 429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 473, 0, 0, 0,
	444, 0, 400, 0, 0, 393, 394, 396, 395, 397,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 443, 0, 0, 325, 0, 0, 441, 0, 259,
	0, 293, 181, 199, 145, 196, 128, 140, 0, 179,
	232, 266, 270, 0, 0, 0, 156, 0, 268, 245,
	314, 0, 249, 267, 204, 303, 260, 313, 326, 327,
	162, 226, 320, 298, 323, 335, 141, 159, 239, 294,
	317, 285, 221, 300, 195, 284, 133, 296, 311, 150,
	278, 0, 0, 0, 135, 309, 292, 219, 192, 193,
	134, 0, 264, 163, 175, 158, 235, 306, 307, 157,
	336, 142, 322, 137, 143, 321, 228, 302, 310, 220,
	212, 136, 308, 218, 211, 198, 169, 183, 257, 207,
	258, 184, 224, 223, 225, 0, 132, 0, 290, 318,
	337, 147, 0, 0, 299, 331, 334, 0, 261, 148,
	176, 168, 256, 174, 201, 330, 332, 333, 227, 144,
	186, 286, 197, 205, 0, 0, 244, 269, 151, 316,
	287, 431, 442, 437, 438, 435, 436, 0, 434, 433,
	432, 445, 423, 424, 425, 426, 428, 0, 439, 440,
	427, 127, 138, 202, 0, 262, 173, 319, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 146, 152, 160, 167,
	171, 178, 182, 185, 188, 189, 190, 194, 210, 214,
	215, 216, 217, 229, 230, 231, 234, 237, 238, 240,
	242, 243, 246, 250, 251, 252, 253, 254, 255, 263,
	265, 271, 272, 273, 274, 275, 276, 277, 280, 281,
	282, 283, 291, 295, 304, 305, 315, 324, 328, 180,
	312, 329, 236, 209, 0, 0, 0, 387, 0, 0,
	0, 165, 0, 386, 0, 0, 0, 200, 0, 0,
	248, 0, 279, 155, 208, 206, 301, 170, 166, 164,
	154, 187, 213, 247, 297, 241, 430, 203, 0, 0,
	288, 222, 0, 0, 0, 0, 0, 421, 422, 0,
	0, 0, 0, 0, 0, 1142, 0, 191, 153, 131,
	233, 289, 172, 66, 0, 0, 114, 115, 116, 408,
	407, 410, 411, 412, 413, 0, 0, 149, 409, 414,
	415, 416, 1143, 0, 0, 0, 384, 401, 0, 429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 0, 0, 0, 0, 444, 0, 400, 0, 0,
	393, 394, 396, 395, 397, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 443, 0, 0, 325,
	0, 0, 441, 0, 259, 0, 293, 181, 199, 145,
	196, 128, 140, 0, 179, 232, 266, 270, 0, 0,
	0, 156, 0, 268, 245, 314, 0, 249, 267, 204,
	303, 260, 313, 326, 327, 162, 226, 320, 298, 323,
	335, 141, 159, 239, 294, 317, 285, 221, 300, 195,
	284, 133, 296, 311, 150, 278, 0, 0, 0, 135,
	309, 292, 219, 192, 193, 134, 0, 264, 163, 175,
	158, 235, 306, 307, 157, 336, 142, 322, 137, 143,
	321, 228, 302, 310, 220, 212, 136, 308, 218, 211,
	198, 169, 183, 257, 207, 258, 184, 224, 223, 225,
	0, 132, 0, 290, 318, 337, 147, 0, 0, 299,
	331, 334, 0, 261, 148, 176, 168, 256, 174, 201,
	330, 332, 333, 227, 144, 186, 286, 197, 205, 0,
	0, 244, 269, 151, 316, 287, 431, 442, 437, 438,
	435, 436, 0, 434, 433, 432, 445, 423, 424, 425,
	426, 428, 0, 439, 440, 427, 127, 138, 202, 0,
	262, 173, 319, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 146, 152, 160, 167, 171, 178, 182, 185, 188,
	189, 190, 194, 210, 214, 215, 216, 217, 229, 230,
	231, 234, 237, 238, 240, 242, 243, 246, 250, 251,
	252, 253, 254, 255, 263, 265, 271, 272, 273, 274,
	275, 276, 277, 280, 281, 282, 283, 291, 295, 304,
	305, 315, 324, 328, 180, 312, 329, 236, 209, 0,
	0, 0, 387, 0, 0, 0, 165, 0, 386, 0,
	0, 0, 200, 0, 0, 248, 0, 279, 155, 208,
	206, 301, 170, 166, 164, 154, 187, 213, 247, 297,
	241, 430, 203, 0, 0, 288, 222, 0, 0, 0,
	0, 0, 421, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 153, 131, 233, 289, 172, 66, 0,
	461, 114, 115, 116, 408, 407, 410, 411, 412, 413,
	0, 0, 149, 409, 414, 415, 416, 0, 0, 0,
	0, 384, 401, 0, 429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 0, 0, 0, 0,
	444, 0, 400, 0, 0, 393, 394, 396, 395, 397,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 443, 0, 0, 325, 0, 0, 441, 0, 259,
	0, 293, 181, 199, 145, 196, 128, 140, 0, 179,
	232, 266, 270, 0, 0, 0, 156, 0, 268, 245,
	314, 0, 249, 267, 204, 303, 260, 313, 326, 327,
	162, 226, 320, 298, 323, 335, 141, 159, 239, 294,
	317, 285, 221, 300, 195, 284, 133, 296, 311, 150,
	278, 0, 0, 0, 135, 309, 292, 219, 192, 193,
	134, 0, 264, 163, 175, 158, 235, 306, 307, 157,
	336, 142, 322, 137, 143, 321, 228, 302, 310, 220,
	212, 136, 308, 218, 211, 198, 169, 183, 257, 207,
	258, 184, 224, 223, 225, 0, 132, 0, 290, 318,
	337, 147, 0, 0, 299, 331, 334, 0, 261, 148,
	176, 168, 256, 174, 201, 330, 332, 333, 227, 144,
	186, 286, 197, 205, 0, 0, 244, 269, 151, 316,
	287, 431, 442, 437, 438, 435, 436, 0, 434, 433,
	432, 445, 423, 424, 425, 426, 428, 0, 439, 440,
	427, 127, 138, 202, 0, 262, 173, 319, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 146, 152, 160, 167,
	171, 178, 182, 185, 188, 189, 190, 194, 210, 214,
	215, 216, 217, 229, 230, 231, 234, 237, 238, 240,
	242, 243, 246, 250, 251, 252, 253, 254, 255, 263,
	265, 271, 272, 273, 274, 275, 276, 277, 280, 281,
	282, 283, 291, 295, 304, 305, 315, 324, 328, 180,
	312, 329, 236, 209, 0, 0, 0, 387, 0, 0,
	0, 165, 0, 386, 0, 0, 0, 200, 0, 0,
	248, 0, 279, 155, 208, 206, 301, 170, 166, 164,
	154, 187, 213, 247, 297, 241, 430, 203, 0, 0,
	288, 222, 0, 0, 0, 0, 0, 421, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 153, 131,
	233, 289, 172, 66, 0, 0, 114, 115, 116, 408,
	407, 410, 411, 412, 413, 0, 0, 149, 409, 414,
	415, 416, 0, 0, 0, 0, 384, 401, 0, 429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 473, 0, 0, 0, 444, 0, 400, 0, 0,
	393, 394, 396, 395, 397, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 443, 0, 0, 325,
	0, 0, 441, 0, 259, 0, 293, 181, 199, 145,
	196, 128, 140, 0, 179, 232, 266, 270, 0, 0,
	0, 156, 0, 268, 245, 314, 0, 249, 267, 204,
	303, 260, 313, 326, 327, 162, 226, 320, 298, 323,
	335, 141, 159, 239, 294, 317, 285, 221, 300, 195,
	284, 133, 296, 311, 150, 278, 0, 0, 0, 135,
	309, 292, 219, 192, 193, 134, 0, 264, 163, 175,
	158, 235, 306, 307, 157, 336, 142, 322, 137, 143,
	321, 228, 302, 310, 220, 212, 136, 308, 218, 211,
	198, 169, 183, 257, 207, 258, 184, 224, 223, 225,
	0, 132, 0, 290, 318, 337, 147, 0, 0, 299,
	331, 334, 0, 261, 148, 176, 168, 256, 174, 201,
	330, 332, 333, 227, 144, 186, 286, 197, 205, 0,
	0, 244, 269, 151, 316, 287, 431, 442, 437, 438,
	435, 436, 0, 434, 433, 432, 445, 423, 424, 425,
	426, 428, 0, 439, 440, 427, 127, 138, 202, 0,
	262, 173, 319, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 146, 152, 160, 167, 171, 178, 182, 185, 188,
	189, 190, 194, 210, 214, 215, 216, 217, 229, 230,
	231, 234, 237, 238, 240, 242, 243, 246, 250, 251,
	252, 253, 254, 255, 263, 265, 271, 272, 273, 274,
	275, 276, 277, 280, 281, 282, 283, 291, 295, 304,
	305, 315, 324, 328, 180, 312, 329, 236, 209, 0,
	0, 0, 387, 0, 0, 0, 165, 0, 386, 0,
	0, 0, 200, 0, 0, 248, 0, 279, 155, 208,
	206, 301, 170, 166, 164, 154, 187, 213, 247, 297,
	241, 430, 203, 0, 0, 288, 222, 0, 0, 0,
	0, 0, 421, 422, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 153, 131, 233, 289, 172, 66, 0,
	0, 114, 115, 116, 408, 1048, 410, 411, 412, 413,
	0, 0, 149, 409, 414, 415, 416, 0, 0, 0,
	0, 384, 401, 0, 429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 398, 399, 473, 0, 0, 0,
	444, 0, 400, 0, 0, 393, 394, 396, 395, 397,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 443, 0, 0, 325, 0, 0, 441, 0, 259,
	0, 293, 181, 199, 145, 196, 128, 140, 0, 179,
	232, 266, 270, 0, 0, 0, 156, 0, 268, 245,
	314, 0, 249, 267, 204, 303, 260, 313, 326, 327,
	162, 226, 320, 298, 323, 335, 141, 159, 239, 294,
	317, 285, 221, 300, 195, 284, 133, 296, 311, 150,
	278, 0, 0, 0, 135, 309, 292, 219, 192, 193,
	134, 0, 264, 163, 175, 158, 235, 306, 307, 157,
	336, 142, 322, 137, 143, 321, 228, 302, 310, 220,
	212, 136, 308, 218, 211, 198, 169, 183, 257, 207,
	258, 184, 224, 223, 225, 0, 132, 0, 290, 318,
	337, 147, 0, 0, 299, 331, 334, 0, 261, 148,
	176, 168, 256, 174, 201, 330, 332, 333, 227, 144,
	186, 286, 197, 205, 0, 0, 244, 269, 151, 316,
	287, 431, 442, 437, 438, 435, 436, 0, 434, 433,
	432, 445, 423, 424, 425, 426, 428, 0, 439, 440,
	427, 127, 138, 202, 0, 262, 173, 319, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 146, 152, 160, 167,
	171, 178, 182, 185, 188, 189, 190, 194, 210, 214,
	215, 216, 217, 229, 230, 231, 234, 237, 238, 240,
	242, 243, 246, 250, 251, 252, 253, 254, 255, 263,
	265, 271, 272, 273, 274, 275, 276, 277, 280, 281,
	282, 283, 291, 295, 304, 305, 315, 324, 328, 180,
	312, 329, 236, 209, 0, 0, 0, 387, 0, 0,
	0, 165, 0, 386, 0, 0, 0, 200, 0, 0,
	248, 0, 279, 155, 208, 206, 301, 170, 166, 164,
	154, 187, 213, 247, 297, 241, 430, 203, 0, 0,
	288, 222, 0, 0, 0, 0, 0, 421, 422, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 153, 131,
	233, 289, 172, 66, 0, 0, 114, 115, 116, 408,
	1045, 410, 411, 412, 413, 0, 0, 149, 409, 414,
	415, 416, 0, 0, 0, 0, 384, 401, 0, 429,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 398,
	399, 473, 0, 0, 0, 444, 0, 400, 0, 0,
	393, 394, 396, 395, 397, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 443, 0, 0, 325,
	0, 0, 441, 0, 259, 0, 293, 181, 199, 145,
	196, 128, 140, 0, 179, 232, 266, 270, 0, 0,
	0, 156, 0, 268, 245, 314, 0, 249, 267, 204,
	303, 260, 313, 326, 327, 162, 226, 320, 298, 323,
	335, 141, 159, 239, 294, 317, 285, 221, 300, 195,
	284, 133, 296, 311, 150, 278, 0, 0, 0, 135,
	309, 292, 219, 192, 193, 134, 0, 264, 163, 175,
	158, 235, 306, 307, 157, 336, 142, 322, 137, 143,
	321, 228, 302, 310, 220, 212, 136, 308, 218, 211,
	198, 169, 183, 257, 207, 258, 184, 224, 223, 225,
	0, 132, 0, 290, 318, 337, 147, 0, 0, 299,
	331, 334, 0, 261, 148, 176, 168, 256, 174, 201,
	330, 332, 333, 227, 144, 186, 286, 197, 205, 0,
	0, 244, 269, 151, 316, 287, 431, 442, 437, 438,
	435, 436, 0, 434, 433, 432, 445, 423, 424, 425,
	426, 428, 0, 439, 440, 427, 127, 138, 202, 0,
	262, 173, 319, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 146, 152, 160, 167, 171, 178, 182, 185, 188,
	189, 190, 194, 210, 214, 215, 216, 217, 229, 230,
	231, 234, 237, 238, 240, 242, 243, 246, 250, 251,
	252, 253, 254, 255, 263, 265, 271, 272, 273, 274,
	275, 276, 277, 280, 281, 282, 283, 291, 295, 304,
	305, 315, 324, 328, 180, 312, 329, 454, 209, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 387, 0, 0, 0, 165,
	0, 386, 0, 0, 0, 200, 0, 0, 248, 0,
	279, 155, 208, 206, 301, 170, 166, 164, 154, 187,
	213, 247, 297, 241, 430, 203, 0, 0, 288, 222,
	0, 0, 0, 0, 0, 421, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 153, 131, 233, 289,
	172, 66, 0, 0, 114, 115, 116, 408, 407, 410,
	411, 412, 413, 0, 0, 149, 409, 414, 415, 416,
	0, 0, 0, 0, 384, 401, 0, 429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 0,
	0, 0, 0, 444, 0, 400, 0, 0, 393, 394,
	396, 395, 397, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 443, 0, 0, 325, 0, 0,
	441, 0, 259, 0, 293, 181, 199, 145, 196, 128,
	140, 0, 179, 232, 266, 270, 0, 0, 0, 156,
	0, 268, 245, 314, 0, 249, 267, 204, 303, 260,
	313, 326, 327, 162, 226, 320, 298, 323, 335, 141,
	159, 239, 294, 317, 285, 221, 300, 195, 284, 133,
	296, 311, 150, 278, 0, 0, 0, 135, 309, 292,
	219, 192, 193, 134, 0, 264, 163, 175, 158, 235,
	306, 307, 157, 336, 142, 322, 137, 143, 321, 228,
	302, 310, 220, 212, 136, 308, 218, 211, 198, 169,
	183, 257, 207, 258, 184, 224, 223, 225, 0, 132,
	0, 290, 318, 337, 147, 0, 0, 299, 331, 334,
	0, 261, 148, 176, 168, 256, 174, 201, 330, 332,
	333, 227, 144, 186, 286, 197, 205, 0, 0, 244,
	269, 151, 316, 287, 431, 442, 437, 438, 435, 436,
	0, 434, 433, 432, 445, 423, 424, 425, 426, 428,
	0, 439, 440, 427, 127, 138, 202, 0, 262, 173,
	319, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	152, 160, 167, 171, 178, 182, 185, 188, 189, 190,
	194, 210, 214, 215, 216, 217, 229, 230, 231, 234,
	237, 238, 240, 242, 243, 246, 250, 251, 252, 253,
	254, 255, 263, 265, 271, 272, 273, 274, 275, 276,
	277, 280, 281, 282, 283, 291, 295, 304, 305, 315,
	324, 328, 180, 312, 329, 236, 209, 0, 0, 0,
	387, 0, 0, 0, 165, 0, 386, 0, 0, 0,
	200, 0, 0, 248, 0, 279, 155, 208, 206, 301,
	170, 166, 164, 154, 187, 213, 247, 297, 241, 430,
	203, 0, 0, 288, 222, 0, 0, 0, 0, 0,
	421, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 153, 131, 233, 289, 172, 66, 0, 0, 114,
	115, 116, 408, 407, 410, 411, 412, 413, 0, 0,
	149, 409, 414, 415, 416, 0, 0, 0, 0, 384,
	401, 0, 429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 0, 0, 0, 0, 444, 0,
	400, 0, 0, 393, 394, 396, 395, 397, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 443,
	0, 0, 325, 0, 0, 441, 0, 259, 0, 293,
	181, 199, 145, 196, 128, 140, 0, 179, 232, 266,
	270, 0, 0, 0, 156, 0, 268, 245, 314, 0,
	249, 267, 204, 303, 260, 313, 326, 327, 162, 226,
	320, 298, 323, 335, 141, 159, 239, 294, 317, 285,
	221, 300, 195, 284, 133, 296, 311, 150, 278, 0,
	0, 0, 135, 309, 292, 219, 192, 193, 134, 0,
	264, 163, 175, 158, 235, 306, 307, 157, 336, 142,
	322, 137, 143, 321, 228, 302, 310, 220, 212, 136,
	308, 218, 211, 198, 169, 183, 257, 207, 258, 184,
	224, 223, 225, 0, 132, 0, 290, 318, 337, 147,
	0, 0, 299, 331, 334, 0, 261, 148, 176, 168,
	256, 174, 201, 330, 332, 333, 227, 144, 186, 286,
	197, 205, 0, 0, 244, 269, 151, 316, 287, 431,
	442, 437, 438, 435, 436, 0, 434, 433, 432, 445,
	423, 424, 425, 426, 428, 0, 439, 440, 427, 127,
	138, 202, 0, 262, 173, 319, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 152, 160, 167, 171, 178,
	182, 185, 188, 189, 190, 194, 210, 214, 215, 216,
	217, 229, 230, 231, 234, 237, 238, 240, 242, 243,
	246, 250, 251, 252, 253, 254, 255, 263, 265, 271,
	272, 273, 274, 275, 276, 277, 280, 281, 282, 283,
	291, 295, 304, 305, 315, 324, 328, 180, 312, 329,
	236, 209, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 200, 0, 0, 248, 0,
	279, 155, 208, 206, 301, 170, 166, 164, 154, 187,
	213, 247, 297, 241, 430, 203, 0, 0, 288, 222,
	0, 0, 0, 0, 0, 421, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 153, 131, 233, 289,
	172, 66, 0, 0, 114, 115, 116, 408, 407, 410,
	411, 412, 413, 0, 0, 149, 409, 414, 415, 416,
	0, 0, 0, 0, 0, 401, 0, 429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 0,
	0, 0, 0, 444, 0, 400, 0, 0, 393, 394,
	396, 395, 397, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 443, 0, 0, 325, 0, 0,
	441, 0, 259, 0, 293, 181, 199, 145, 196, 128,
	140, 0, 179, 232, 266, 270, 0, 0, 0, 156,
	0, 268, 245, 314, 1821, 249, 267, 204, 303, 260,
	313, 326, 327, 162, 226, 320, 298, 323, 335, 141,
	159, 239, 294, 317, 285, 221, 300, 195, 284, 133,
	296, 311, 150, 278, 0, 0, 0, 135, 309, 292,
	219, 192, 193, 134, 0, 264, 163, 175, 158, 235,
	306, 307, 157, 336, 142, 322, 137, 143, 321, 228,
	302, 310, 220, 212, 136, 308, 218, 211, 198, 169,
	183, 257, 207, 258, 184, 224, 223, 225, 0, 132,
	0, 290, 318, 337, 147, 0, 0, 299, 331, 334,
	0, 261, 148, 176, 168, 256, 174, 201, 330, 332,
	333, 227, 144, 186, 286, 197, 205, 0, 0, 244,
	269, 151, 316, 287, 431, 442, 437, 438, 435, 436,
	0, 434, 433, 432, 445, 423, 424, 425, 426, 428,
	0, 439, 440, 427, 127, 138, 202, 0, 262, 173,
	319, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	152, 160, 167, 171, 178, 182, 185, 188, 189, 190,
	194, 210, 214, 215, 216, 217, 229, 230, 231, 234,
	237, 238, 240, 242, 243, 246, 250, 251, 252, 253,
	254, 255, 263, 265, 271, 272, 273, 274, 275, 276,
	277, 280, 281, 282, 283, 291, 295, 304, 305, 315,
	324, 328, 180, 312, 329, 236, 209, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	200, 0, 0, 248, 0, 279, 155, 208, 206, 301,
	170, 166, 164, 154, 187, 213, 247, 297, 241, 430,
	203, 0, 0, 288, 222, 0, 0, 0, 0, 0,
	421, 422, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 153, 131, 233, 289, 172, 66, 0, 461, 114,
	115, 116, 408, 407, 410, 411, 412, 413, 0, 0,
	149, 409, 414, 415, 416, 0, 0, 0, 0, 0,
	401, 0, 429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 398, 399, 0, 0, 0, 0, 444, 0,
	400, 0, 0, 393, 394, 396, 395, 397, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 443,
	0, 0, 325, 0, 0, 441, 0, 259, 0, 293,
	181, 199, 145, 196, 128, 140, 0, 179, 232, 266,
	270, 0, 0, 0, 156, 0, 268, 245, 314, 0,
	249, 267, 204, 303, 260, 313, 326, 327, 162, 226,
	320, 298, 323, 335, 141, 159, 239, 294, 317, 285,
	221, 300, 195, 284, 133, 296, 311, 150, 278, 0,
	0, 0, 135, 309, 292, 219, 192, 193, 134, 0,
	264, 163, 175, 158, 235, 306, 307, 157, 336, 142,
	322, 137, 143, 321, 228, 302, 310, 220, 212, 136,
	308, 218, 211, 198, 169, 183, 257, 207, 258, 184,
	224, 223, 225, 0, 132, 0, 290, 318, 337, 147,
	0, 0, 299, 331, 334, 0, 261, 148, 176, 168,
	256, 174, 201, 330, 332, 333, 227, 144, 186, 286,
	197, 205, 0, 0, 244, 269, 151, 316, 287, 431,
	442, 437, 438, 435, 436, 0, 434, 433, 432, 445,
	423, 424, 425, 426, 428, 0, 439, 440, 427, 127,
	138, 202, 0, 262, 173, 319, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 152, 160, 167, 171, 178,
	182, 185, 188, 189, 190, 194, 210, 214, 215, 216,
	217, 229, 230, 231, 234, 237, 238, 240, 242, 243,
	246, 250, 251, 252, 253, 254, 255, 263, 265, 271,
	272, 273, 274, 275, 276, 277, 280, 281, 282, 283,
	291, 295, 304, 305, 315, 324, 328, 180, 312, 329,
	236, 209, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 200, 0, 0, 248, 0,
	279, 155, 208, 206, 301, 170, 166, 164, 154, 187,
	213, 247, 297, 241, 430, 203, 0, 0, 288, 222,
	0, 0, 0, 0, 0, 421, 422, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 153, 131, 233, 289,
	172, 66, 0, 0, 114, 115, 116, 408, 407, 410,
	411, 412, 413, 0, 0, 149, 409, 414, 415, 416,
	0, 0, 0, 0, 0, 401, 0, 429, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 398, 399, 0,
	0, 0, 0, 444, 0, 400, 0, 0, 393, 394,
	396, 395, 397, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 443, 0, 0, 325, 0, 0,
	441, 0, 259, 0, 293, 181, 199, 145, 196, 128,
	140, 0, 179, 232, 266, 270, 0, 0, 0, 156,
	0, 268, 245, 314, 0, 249, 267, 204, 303, 260,
	313, 326, 327, 162, 226, 320, 298, 323, 335, 141,
	159, 239, 294, 317, 285, 221, 300, 195, 284, 133,
	296, 311, 150, 278, 0, 0, 0, 135, 309, 292,
	219, 192, 193, 134, 0, 264, 163, 175, 158, 235,
	306, 307, 157, 336, 142, 322, 137, 143, 321, 228,
	302, 310, 220, 212, 136, 308, 218, 211, 198, 169,
	183, 257, 207, 258, 184, 224, 223, 225, 0, 132,
	0, 290, 318, 337, 147, 0, 0, 299, 331, 334,
	0, 261, 148, 176, 168, 256, 174, 201, 330, 332,
	333, 227, 144, 186, 286, 197, 205, 0, 0, 244,
	269, 151, 316, 287, 431, 442, 437, 438, 435, 436,
	0, 434, 433, 432, 445, 423, 424, 425, 426, 428,
	0, 439, 440, 427, 127, 138, 202, 0, 262, 173,
	319, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	152, 160, 167, 171, 178, 182, 185, 188, 189, 190,
	194, 210, 214, 215, 216, 217, 229, 230, 231, 234,
	237, 238, 240, 242, 243, 246, 250, 251, 252, 253,
	254, 255, 263, 265, 271, 272, 273, 274, 275, 276,
	277, 280, 281, 282, 283, 291, 295, 304, 305, 315,
	324, 328, 180, 312, 329, 236, 209, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	200, 0, 0, 248, 0, 279, 155, 208, 206, 301,
	170, 166, 164, 154, 187, 213, 247, 297, 241, 0,
	203, 0, 0, 288, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 153, 131, 233, 289, 172, 0, 0, 0, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 722, 721,
	731, 732, 724, 725, 726, 727, 728, 729, 730, 723,
	0, 0, 733, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 325, 0, 0, 0, 0, 259, 0, 293,
	181, 199, 145, 196, 128, 140, 0, 179, 232, 266,
	270, 0, 0, 0, 156, 0, 268, 245, 314, 0,
	249, 267, 204, 303, 260, 313, 326, 327, 162, 226,
	320, 298, 323, 335, 141, 159, 239, 294, 317, 285,
	221, 300, 195, 284, 133, 296, 311, 150, 278, 0,
	0, 0, 135, 309, 292, 219, 192, 193, 134, 0,
	264, 163, 175, 158, 235, 306, 307, 157, 336, 142,
	322, 137, 143, 321, 228, 302, 310, 220, 212, 136,
	308, 218, 211, 198, 169, 183, 257, 207, 258, 184,
	224, 223, 225, 0, 132, 0, 290, 318, 337, 147,
	0, 0, 299, 331, 334, 0, 261, 148, 176, 168,
	256, 174, 201, 330, 332, 333, 227, 144, 186, 286,
	197, 205, 0, 0, 244, 269, 151, 316, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	138, 202, 0, 262, 173, 319, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 152, 160, 167, 171, 178,
	182, 185, 188, 189, 190, 194, 210, 214, 215, 216,
	217, 229, 230, 231, 234, 237, 238, 240, 242, 243,
	246, 250, 251, 252, 253, 254, 255, 263, 265, 271,
	272, 273, 274, 275, 276, 277, 280, 281, 282, 283,
	291, 295, 304, 305, 315, 324, 328, 180, 312, 329,
	236, 209, 0, 0, 822, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 200, 0, 0, 248, 0,
	279, 155, 208, 206, 301, 170, 166, 164, 154, 187,
	213, 247, 297, 241, 0, 203, 0, 0, 288, 222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 153, 131, 233, 289,
	172, 0, 0, 0, 114, 115, 116, 0, 824, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 711, 712, 710, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 325, 0, 0,
	0, 0, 259, 0, 293, 181, 199, 145, 196, 128,
	140, 0, 179, 232, 266, 270, 0, 0, 0, 156,
	0, 268, 245, 314, 0, 249, 267, 204, 303, 260,
	313, 326, 327, 162, 226, 320, 298, 323, 335, 141,
	159, 239, 294, 317, 285, 221, 300, 195, 284, 133,
	296, 311, 150, 278, 0, 0, 0, 135, 309, 292,
	219, 192, 193, 134, 0, 264, 163, 175, 158, 235,
	306, 307, 157, 336, 142, 322, 137, 143, 321, 228,
	302, 310, 220, 212, 136, 308, 218, 211, 198, 169,
	183, 257, 207, 258, 184, 224, 223, 225, 0, 132,
	0, 290, 318, 337, 147, 0, 0, 299, 331, 334,
	0, 261, 148, 176, 168, 256, 174, 201, 330, 332,
	333, 227, 144, 186, 286, 197, 205, 0, 0, 244,
	269, 151, 316, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 138, 202, 0, 262, 173,
	319, 0, 0, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 146,
	152, 160, 167, 171, 178, 182, 185, 188, 189, 190,
	194, 210, 214, 215, 216, 217, 229, 230, 231, 234,
	237, 238, 240, 242, 243, 246, 250, 251, 252, 253,
	254, 255, 263, 265, 271, 272, 273, 274, 275, 276,
	277, 280, 281, 282, 283, 291, 295, 304, 305, 315,
	324, 328, 180, 312, 329, 236, 209, 0, 0, 0,
	0, 0, 0, 0, 165, 1167, 0, 0, 0, 0,
	200, 0, 0, 248, 0, 279, 155, 208, 206, 301,
	170, 166, 164, 154, 187, 213, 247, 297, 241, 0,
	203, 0, 0, 288, 222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 153, 131, 233, 289, 172, 0, 0, 0, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 1166, 325, 0, 0, 0, 1162, 1159, 0, 1160,
	1161, 199, 626, 196, 128, 140, 1157, 1164, 232, 266,
	270, 0, 0, 0, 156, 0, 268, 245, 314, 0,
	249, 267, 204, 303, 260, 313, 326, 327, 162, 226,
	320, 298, 323, 335, 141, 159, 239, 294, 317, 285,
	221, 300, 195, 284, 133, 296, 311, 150, 278, 0,
	0, 0, 135, 309, 292, 219, 192, 193, 134, 0,
	264, 163, 175, 158, 235, 306, 307, 157, 336, 142,
	322, 137, 143, 321, 228, 302, 310, 220, 212, 136,
	308, 218, 211, 198, 169, 183, 257, 207, 258, 184,
	224, 223, 225, 0, 132, 0, 290, 318, 337, 147,
	0, 0, 299, 331, 334, 0, 261, 148, 176, 168,
	256, 174, 201, 330, 332, 333, 227, 144, 186, 286,
	197, 205, 0, 0, 244, 269, 151, 316, 287, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	138, 202, 0, 262, 173, 319, 0, 0, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 146, 152, 160, 167, 171, 178,
	182, 185, 188, 189, 190, 194, 210, 214, 215, 216,
	217, 229, 230, 231, 234, 237, 238, 240, 242, 243,
	246, 250, 251, 252, 253, 254, 255, 263, 265, 271,
	272, 273, 274, 275, 276, 277, 280, 281, 282, 283,
	291, 295, 304, 305, 315, 324, 328, 180, 312, 329,
	33, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 200, 0,
	0, 248, 0, 279, 155, 208, 206, 301, 170, 166,
	164, 154, 187, 213, 247, 297, 241, 0, 203, 0,
	0, 288, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 153,
	131, 233, 289, 172, 66, 0, 461, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	325, 0, 0, 0, 0, 259, 0, 293, 181, 199,
	145, 196, 128, 140, 0, 179, 232, 266, 270, 0,
	0, 0, 156, 0, 268, 245, 314, 0, 249, 267,
	204, 303, 260, 313, 326, 327, 162, 226, 320, 298,
	323, 335, 141, 159, 239, 294, 317, 285, 221, 300,
	195, 284, 133, 296, 311, 150, 278, 0, 0, 0,
	135, 309, 292, 219, 192, 193, 134, 0, 264, 163,
	175, 158, 235, 306, 307, 157, 336, 142, 322, 137,
	143, 321, 228, 302, 310, 220, 212, 136, 308, 218,
	211, 198, 169, 183, 257, 207, 258, 184, 224, 223,
	225, 0, 132, 0, 290, 318, 337, 147, 0, 0,
	299, 331, 334, 0, 261, 148, 176, 168, 256, 174,
	201, 330, 332, 333, 227, 144, 186, 286, 197, 205,
	0, 0, 244, 269, 151, 316, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 138, 202,
	0, 262, 173, 319, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 146, 152, 160, 167, 171, 178, 182, 185,
	188, 189, 190, 194, 210, 214, 215, 216, 217, 229,
	230, 231, 234, 237, 238, 240, 242, 243, 246, 250,
	251, 252, 253, 254, 255, 263, 265, 271, 272, 273,
	274, 275, 276, 277, 280, 281, 282, 283, 291, 295,
	304, 305, 315, 324, 328, 180, 312, 329, 236, 209,
	0, 0, 1077, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 200, 0, 0, 248, 0, 279, 155,
	208, 206, 301, 170, 166, 164, 154, 187, 213, 247,
	297, 241, 0, 203, 0, 0, 288, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 153, 131, 233, 289, 172, 0,
	0, 0, 114, 115, 116, 0, 1079, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 325, 0, 0, 0, 0,
	259, 0, 293, 181, 199, 145, 196, 128, 140, 0,
	179, 232, 266, 270, 0, 0, 0, 156, 0, 268,
	245, 314, 0, 249, 267, 204, 303, 260, 313, 326,
	327, 162, 226, 320, 298, 323, 335, 141, 159, 239,
	294, 317, 285, 221, 300, 195, 284, 133, 296, 311,
	150, 278, 0, 0, 0, 135, 309, 292, 219, 192,
	193, 134, 0, 264, 163, 175, 158, 235, 306, 307,
	157, 336, 142, 322, 137, 143, 321, 228, 302, 310,
	220, 212, 136, 308, 218, 211, 198, 169, 183, 257,
	207, 258, 184, 224, 223, 225, 0, 132, 0, 290,
	318, 337, 147, 0, 0, 299, 331, 334, 0, 261,
	148, 176, 168, 256, 174, 201, 330, 332, 333, 227,
	144, 186, 286, 197, 205, 0, 0, 244, 269, 151,
	316, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 138, 202, 0, 262, 173, 319, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 146, 152, 160,
	167, 171, 178, 182, 185, 188, 189, 190, 194, 210,
	214, 215, 216, 217, 229, 230, 231, 234, 237, 238,
	240, 242, 243, 246, 250, 251, 252, 253, 254, 255,
	263, 265, 271, 272, 273, 274, 275, 276, 277, 280,
	281, 282, 283, 291, 295, 304, 305, 315, 324, 328,
	180, 312, 329, 33, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 200, 0, 0, 248, 0, 279, 155, 208, 206,
	301, 170, 166, 164, 154, 187, 213, 247, 297, 241,
	0, 203, 0, 0, 288, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 153, 131, 233, 289, 172, 66, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 325, 0, 0, 0, 0, 259, 0,
	293, 181, 199, 145, 196, 128, 140, 0, 179, 232,
	266, 270, 0, 0, 0, 156, 0, 268, 245, 314,
	0, 249, 267, 204, 303, 260, 313, 326, 327, 162,
	226, 320, 298, 323, 335, 141, 159, 239, 294, 317,
	285, 221, 300, 195, 284, 133, 296, 311, 150, 278,
	0, 0, 0, 135, 309, 292, 219, 192, 193, 134,
	0, 264, 163, 175, 158, 235, 306, 307, 157, 336,
	142, 322, 137, 143, 321, 228, 302, 310, 220, 212,
	136, 308, 218, 211, 198, 169, 183, 257, 207, 258,
	184, 224, 223, 225, 0, 132, 0, 290, 318, 337,
	147, 0, 0, 299, 331, 334, 0, 261, 148, 176,
	168, 256, 174, 201, 330, 332, 333, 227, 144, 186,
	286, 197, 205, 0, 0, 244, 269, 151, 316, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 202, 0, 262, 173, 319, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 152, 160, 167, 171,
	178, 182, 185, 188, 189, 190, 194, 210, 214, 215,
	216, 217, 229, 230, 231, 234, 237, 238, 240, 242,
	243, 246, 250, 251, 252, 253, 254, 255, 263, 265,
	271, 272, 273, 274, 275, 276, 277, 280, 281, 282,
	283, 291, 295, 304, 305, 315, 324, 328, 180, 312,
	329, 236, 209, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 200, 0, 0, 248,
	0, 279, 155, 208, 206, 301, 170, 166, 164, 154,
	187, 213, 247, 297, 241, 0, 203, 0, 0, 288,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 153, 131, 233,
	289, 172, 0, 0, 0, 114, 115, 116, 0, 0,
	1095, 0, 0, 1096, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 325, 0,
	0, 0, 0, 259, 0, 293, 181, 199, 145, 196,
	128, 140, 0, 179, 232, 266, 270, 0, 0, 0,
	156, 0, 268, 245, 314, 0, 249, 267, 204, 303,
	260, 313, 326, 327, 162, 226, 320, 298, 323, 335,
	141, 159, 239, 294, 317, 285, 221, 300, 195, 284,
	133, 296, 311, 150, 278, 0, 0, 0, 135, 309,
	292, 219, 192, 193, 134, 0, 264, 163, 175, 158,
	235, 306, 307, 157, 336, 142, 322, 137, 143, 321,
	228, 302, 310, 220, 212, 136, 308, 218, 211, 198,
	169, 183, 257, 207, 258, 184, 224, 223, 225, 0,
	132, 0, 290, 318, 337, 147, 0, 0, 299, 331,
	334, 0, 261, 148, 176, 168, 256, 174, 201, 330,
	332, 333, 227, 144, 186, 286, 197, 205, 0, 0,
	244, 269, 151, 316, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 202, 0, 262,
	173, 319, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 152, 160, 167, 171, 178, 182, 185, 188, 189,
	190, 194, 210, 214, 215, 216, 217, 229, 230, 231,
	234, 237, 238, 240, 242, 243, 246, 250, 251, 252,
	253, 254, 255, 263, 265, 271, 272, 273, 274, 275,
	276, 277, 280, 281, 282, 283, 291, 295, 304, 305,
	315, 324, 328, 180, 312, 329, 236, 209, 0, 0,
	1077, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 200, 0, 0, 248, 0, 279, 155, 208, 206,
	301, 170, 166, 164, 154, 187, 213, 247, 297, 241,
	0, 203, 0, 0, 288, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 153, 131, 233, 289, 172, 0, 0, 0,
	114, 115, 116, 0, 1079, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 325, 0, 0, 0, 0, 259, 0,
	293, 181, 199, 145, 196, 128, 140, 0, 179, 232,
	266, 270, 0, 0, 0, 156, 0, 268, 245, 314,
	0, 1075, 267, 204, 303, 260, 313, 326, 327, 162,
	226, 320, 298, 323, 335, 141, 159, 239, 294, 317,
	285, 221, 300, 195, 284, 133, 296, 311, 150, 278,
	0, 0, 0, 135, 309, 292, 219, 192, 193, 134,
	0, 264, 163, 175, 158, 235, 306, 307, 157, 336,
	142, 322, 137, 143, 321, 228, 302, 310, 220, 212,
	136, 308, 218, 211, 198, 169, 183, 257, 207, 258,
	184, 224, 223, 225, 0, 132, 0, 290, 318, 337,
	147, 0, 0, 299, 331, 334, 0, 261, 148, 176,
	168, 256, 174, 201, 330, 332, 333, 227, 144, 186,
	286, 197, 205, 0, 0, 244, 269, 151, 316, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 202, 0, 262, 173, 319, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 152, 160, 167, 171,
	178, 182, 185, 188, 189, 190, 194, 210, 214, 215,
	216, 217, 229, 230, 231, 234, 237, 238, 240, 242,
	243, 246, 250, 251, 252, 253, 254, 255, 263, 265,
	271, 272, 273, 274, 275, 276, 277, 280, 281, 282,
	283, 291, 295, 304, 305, 315, 324, 328, 180, 312,
	329, 236, 209, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 855, 0, 0, 0, 200, 0, 0, 248,
	0, 279, 155, 208, 206, 301, 170, 166, 164, 154,
	187, 213, 247, 297, 241, 0, 203, 0, 0, 288,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 153, 131, 233,
	289, 172, 0, 0, 0, 114, 115, 116, 0, 854,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 325, 0,
	0, 0, 0, 259, 0, 293, 181, 199, 145, 196,
	128, 140, 0, 179, 232, 266, 270, 0, 0, 0,
	156, 0, 268, 245, 314, 0, 249, 267, 204, 303,
	260, 313, 326, 327, 162, 226, 320, 298, 323, 335,
	141, 159, 239, 294, 317, 285, 221, 300, 195, 284,
	133, 296, 311, 150, 278, 0, 0, 0, 135, 309,
	292, 219, 192, 193, 134, 0, 264, 163, 175, 158,
	235, 306, 307, 157, 336, 142, 322, 137, 143, 321,
	228, 302, 310, 220, 212, 136, 308, 218, 211, 198,
	169, 183, 257, 207, 258, 184, 224, 223, 225, 0,
	132, 0, 290, 318, 337, 147, 0, 0, 299, 331,
	334, 0, 261, 148, 176, 168, 256, 174, 201, 330,
	332, 333, 227, 144, 186, 286, 197, 205, 0, 0,
	244, 269, 151, 316, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 202, 0, 262,
	173, 319, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 152, 160, 167, 171, 178, 182, 185, 188, 189,
	190, 194, 210, 214, 215, 216, 217, 229, 230, 231,
	234, 237, 238, 240, 242, 243, 246, 250, 251, 252,
	253, 254, 255, 263, 265, 271, 272, 273, 274, 275,
	276, 277, 280, 281, 282, 283, 291, 295, 304, 305,
	315, 324, 328, 180, 312, 329, 236, 209, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 200, 0, 0, 248, 0, 279, 155, 208, 206,
	301, 170, 166, 164, 154, 187, 213, 247, 297, 241,
	0, 203, 0, 0, 288, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 153, 131, 233, 289, 172, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 325, 0, 0, 0, 0, 259, 0,
	293, 181, 199, 626, 196, 128, 140, 624, 179, 232,
	266, 270, 0, 0, 0, 156, 0, 268, 245, 314,
	0, 249, 267, 204, 303, 260, 313, 326, 327, 162,
	226, 320, 298, 323, 335, 141, 159, 239, 294, 317,
	285, 221, 300, 195, 284, 133, 296, 311, 150, 278,
	0, 0, 0, 135, 309, 292, 219, 192, 193, 134,
	0, 264, 163, 175, 158, 235, 306, 307, 157, 336,
	142, 322, 137, 143, 321, 228, 302, 310, 220, 212,
	136, 308, 218, 211, 198, 169, 183, 257, 207, 258,
	184, 224, 223, 225, 0, 132, 0, 290, 318, 337,
	147, 0, 0, 299, 331, 334, 0, 261, 148, 176,
	168, 256, 174, 201, 330, 332, 333, 227, 144, 186,
	286, 197, 205, 0, 0, 244, 269, 151, 316, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 202, 0, 262, 173, 319, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 152, 160, 167, 171,
	178, 182, 185, 188, 189, 190, 194, 210, 214, 215,
	216, 217, 229, 230, 231, 234, 237, 238, 240, 242,
	243, 246, 250, 251, 252, 253, 254, 255, 263, 265,
	271, 272, 273, 274, 275, 276, 277, 280, 281, 282,
	283, 291, 295, 304, 305, 315, 324, 328, 180, 312,
	329, 236, 209, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 200, 0, 0, 248,
	0, 279, 155, 208, 206, 301, 170, 166, 164, 154,
	187, 213, 247, 297, 241, 0, 203, 0, 0, 288,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 153, 131, 233,
	289, 172, 0, 0, 461, 114, 115, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 325, 0,
	0, 0, 0, 259, 0, 293, 181, 199, 145, 196,
	128, 140, 0, 179, 232, 266, 270, 0, 0, 0,
	156, 0, 268, 245, 314, 0, 249, 267, 204, 303,
	260, 313, 326, 327, 162, 226, 320, 298, 323, 335,
	141, 159, 239, 294, 317, 285, 221, 300, 195, 284,
	133, 296, 311, 150, 278, 0, 0, 0, 135, 309,
	292, 219, 192, 193, 134, 0, 264, 163, 175, 158,
	235, 306, 307, 157, 336, 142, 322, 137, 143, 321,
	228, 302, 310, 220, 212, 136, 308, 218, 211, 198,
	169, 183, 257, 207, 258, 184, 224, 223, 225, 0,
	132, 0, 290, 318, 337, 147, 0, 0, 299, 331,
	334, 0, 261, 148, 176, 168, 256, 174, 201, 330,
	332, 333, 227, 144, 186, 286, 197, 205, 0, 0,
	244, 269, 151, 316, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 202, 0, 262,
	173, 319, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 152, 160, 167, 171, 178, 182, 185, 188, 189,
	190, 194, 210, 214, 215, 216, 217, 229, 230, 231,
	234, 237, 238, 240, 242, 243, 246, 250, 251, 252,
	253, 254, 255, 263, 265, 271, 272, 273, 274, 275,
	276, 277, 280, 281, 282, 283, 291, 295, 304, 305,
	315, 324, 328, 180, 312, 329, 236, 209, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 200, 0, 0, 248, 0, 279, 155, 208, 206,
	301, 170, 166, 164, 154, 187, 213, 247, 297, 241,
	0, 203, 0, 0, 288, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 153, 131, 233, 289, 172, 66, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 325, 0, 0, 0, 0, 259, 0,
	293, 181, 199, 145, 196, 128, 140, 0, 179, 232,
	266, 270, 0, 0, 0, 156, 0, 268, 245, 314,
	0, 249, 267, 204, 303, 260, 313, 326, 327, 162,
	226, 320, 298, 323, 335, 141, 159, 239, 294, 317,
	285, 221, 300, 195, 284, 133, 296, 311, 150, 278,
	0, 0, 0, 135, 309, 292, 219, 192, 193, 134,
	0, 264, 163, 175, 158, 235, 306, 307, 157, 336,
	142, 322, 137, 143, 321, 228, 302, 310, 220, 212,
	136, 308, 218, 211, 198, 169, 183, 257, 207, 258,
	184, 224, 223, 225, 0, 132, 0, 290, 318, 337,
	147, 0, 0, 299, 331, 334, 0, 261, 148, 176,
	168, 256, 174, 201, 330, 332, 333, 227, 144, 186,
	286, 197, 205, 0, 0, 244, 269, 151, 316, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 202, 0, 262, 173, 319, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 152, 160, 167, 171,
	178, 182, 185, 188, 189, 190, 194, 210, 214, 215,
	216, 217, 229, 230, 231, 234, 237, 238, 240, 242,
	243, 246, 250, 251, 252, 253, 254, 255, 263, 265,
	271, 272, 273, 274, 275, 276, 277, 280, 281, 282,
	283, 291, 295, 304, 305, 315, 324, 328, 180, 312,
	329, 236, 209, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 200, 0, 0, 248,
	0, 279, 155, 208, 206, 301, 170, 166, 164, 154,
	187, 213, 247, 297, 241, 0, 203, 0, 0, 288,
	222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 153, 131, 233,
	289, 172, 0, 0, 0, 114, 115, 116, 0, 1079,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 325, 0,
	0, 0, 0, 259, 0, 293, 181, 199, 145, 196,
	128, 140, 0, 179, 232, 266, 270, 0, 0, 0,
	156, 0, 268, 245, 314, 0, 249, 267, 204, 303,
	260, 313, 326, 327, 162, 226, 320, 298, 323, 335,
	141, 159, 239, 294, 317, 285, 221, 300, 195, 284,
	133, 296, 311, 150, 278, 0, 0, 0, 135, 309,
	292, 219, 192, 193, 134, 0, 264, 163, 175, 158,
	235, 306, 307, 157, 336, 142, 322, 137, 143, 321,
	228, 302, 310, 220, 212, 136, 308, 218, 211, 198,
	169, 183, 257, 207, 258, 184, 224, 223, 225, 0,
	132, 0, 290, 318, 337, 147, 0, 0, 299, 331,
	334, 0, 261, 148, 176, 168, 256, 174, 201, 330,
	332, 333, 227, 144, 186, 286, 197, 205, 0, 0,
	244, 269, 151, 316, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 202, 0, 262,
	173, 319, 0, 0, 161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	146, 152, 160, 167, 171, 178, 182, 185, 188, 189,
	190, 194, 210, 214, 215, 216, 217, 229, 230, 231,
	234, 237, 238, 240, 242, 243, 246, 250, 251, 252,
	253, 254, 255, 263, 265, 271, 272, 273, 274, 275,
	276, 277, 280, 281, 282, 283, 291, 295, 304, 305,
	315, 324, 328, 180, 312, 329, 236, 209, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 200, 0, 0, 248, 0, 279, 155, 208, 206,
	301, 170, 166, 164, 154, 187, 213, 247, 297, 241,
	0, 203, 0, 0, 288, 222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 153, 131, 233, 289, 172, 0, 0, 0,
	114, 115, 116, 0, 824, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 0, 325, 0, 0, 0, 0, 259, 0,
	293, 181, 199, 145, 196, 128, 140, 0, 179, 232,
	266, 270, 0, 0, 0, 156, 0, 268, 245, 314,
	0, 249, 267, 204, 303, 260, 313, 326, 327, 162,
	226, 320, 298, 323, 335, 141, 159, 239, 294, 317,
	285, 221, 300, 195, 284, 133, 296, 311, 150, 278,
	0, 0, 0, 135, 309, 292, 219, 192, 193, 134,
	0, 264, 163, 175, 158, 235, 306, 307, 157, 336,
	142, 322, 137, 143, 321, 228, 302, 310, 220, 212,
	136, 308, 218, 211, 198, 169, 183, 257, 207, 258,
	184, 224, 223, 225, 0, 132, 0, 290, 318, 337,
	147, 0, 0, 299, 331, 334, 0, 261, 148, 176,
	168, 256, 174, 201, 330, 332, 333, 227, 144, 186,
	286, 197, 205, 0, 0, 244, 269, 151, 316, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 202, 0, 262, 173, 319, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 146, 152, 160, 167, 171,
	178, 182, 185, 188, 189, 190, 194, 210, 214, 215,
	216, 217, 229, 230, 231, 234, 237, 238, 240, 242,
	243, 246, 250, 251, 252, 253, 254, 255, 263, 265,
	271, 272, 273, 274, 275, 276, 277, 280, 281, 282,
	283, 291, 295, 304, 305, 315, 324, 328, 180, 312,
	329, 837, 209, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 200, 0, 0, 248, 0, 279, 155,
	208, 206, 301, 170, 166, 164, 154, 187, 213, 247,
	297, 241, 0, 203, 0, 0, 288, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 153, 131, 233, 289, 172, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 325, 0, 0, 0, 0,
	259, 0, 293, 181, 199, 145, 196, 128, 140, 0,
	179, 232, 266, 270, 0, 0, 0, 156, 0, 268,
	245, 314, 0, 249, 267, 204, 303, 260, 313, 326,
	327, 162, 226, 320, 298, 323, 335, 141, 159, 239,
	294, 317, 285, 221, 300, 195, 284, 133, 296, 311,
	150, 278, 0, 0, 0, 135, 309, 292, 219, 192,
	193, 134, 0, 264, 163, 175, 158, 235, 306, 307,
	157, 336, 142, 322, 137, 143, 321, 228, 302, 310,
	220, 212, 136, 308, 218, 211, 198, 169, 183, 257,
	207, 258, 184, 224, 223, 225, 0, 132, 0, 290,
	318, 337, 147, 0, 0, 299, 331, 334, 0, 261,
	148, 176, 168, 256, 174, 201, 330, 332, 333, 227,
	144, 186, 286, 197, 205, 0, 0, 244, 269, 151,
	316, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 138, 202, 0, 262, 173, 319, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 146, 152, 160,
	167, 171, 178, 182, 185, 188, 189, 190, 194, 210,
	214, 215, 216, 217, 229, 230, 231, 234, 237, 238,
	240, 242, 243, 246, 250, 251, 252, 253, 254, 255,
	263, 265, 271, 272, 273, 274, 275, 276, 277, 280,
	281, 282, 283, 291, 295, 304, 305, 315, 324, 328,
	180, 312, 329, 236, 209, 0, 0, 0, 0, 0,
	0, 828, 165, 0, 0, 0, 0, 0, 200, 0,
	0, 248, 0, 279, 155, 208, 206, 301, 170, 166,
	164, 154, 187, 213, 247, 297, 241, 0, 203, 0,
	0, 288, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 153,
	131, 233, 289, 172, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	325, 0, 0, 0, 0, 259, 0, 293, 181, 199,
	145, 196, 128, 140, 0, 179, 232, 266, 270, 0,
	0, 0, 156, 0, 268, 245, 314, 0, 249, 267,
	204, 303, 260, 313, 326, 327, 162, 226, 320, 298,
	323, 335, 141, 159, 239, 294, 317, 285, 221, 300,
	195, 284, 133, 296, 311, 150, 278, 0, 0, 0,
	135, 309, 292, 219, 192, 193, 134, 0, 264, 163,
	175, 158, 235, 306, 307, 157, 336, 142, 322, 137,
	143, 321, 228, 302, 310, 220, 212, 136, 308, 218,
	211, 198, 169, 183, 257, 207, 258, 184, 224, 223,
	225, 0, 132, 0, 290, 318, 337, 147, 0, 0,
	299, 331, 334, 0, 261, 148, 176, 168, 256, 174,
	201, 330, 332, 333, 227, 144, 186, 286, 197, 205,
	0, 0, 244, 269, 151, 316, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 138, 202,
	0, 262, 173, 319, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 146, 152, 160, 167, 171, 178, 182, 185,
	188, 189, 190, 194, 210, 214, 215, 216, 217, 229,
	230, 231, 234, 237, 238, 240, 242, 243, 246, 250,
	251, 252, 253, 254, 255, 263, 265, 271, 272, 273,
	274, 275, 276, 277, 280, 281, 282, 283, 291, 295,
	304, 305, 315, 324, 328, 180, 312, 329, 236, 209,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 200, 0, 0, 248, 0, 279, 155,
	208, 206, 301, 170, 166, 164, 154, 187, 213, 247,
	297, 241, 0, 203, 0, 0, 288, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 153, 131, 233, 289, 172, 0,
	0, 0, 114, 115, 116, 0, 702, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 325, 0, 0, 0, 0,
	259, 0, 293, 181, 199, 145, 196, 128, 140, 0,
	179, 232, 266, 270, 0, 0, 0, 156, 0, 268,
	245, 314, 0, 249, 267, 204, 303, 260, 313, 326,
	327, 162, 226, 320, 298, 323, 335, 141, 159, 239,
	294, 317, 285, 221, 300, 195, 284, 133, 296, 311,
	150, 278, 0, 0, 0, 135, 309, 292, 219, 192,
	193, 134, 0, 264, 163, 175, 158, 235, 306, 307,
	157, 336, 142, 322, 137, 143, 321, 228, 302, 310,
	220, 212, 136, 308, 218, 211, 198, 169, 183, 257,
	207, 258, 184, 224, 223, 225, 0, 132, 0, 290,
	318, 337, 147, 0, 0, 299, 331, 334, 0, 261,
	148, 176, 168, 256, 174, 201, 330, 332, 333, 227,
	144, 186, 286, 197, 205, 0, 0, 244, 269, 151,
	316, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 138, 202, 0, 262, 173, 319, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 146, 152, 160,
	167, 171, 178, 182, 185, 188, 189, 190, 194, 210,
	214, 215, 216, 217, 229, 230, 231, 234, 237, 238,
	240, 242, 243, 246, 250, 251, 252, 253, 254, 255,
	263, 265, 271, 272, 273, 274, 275, 276, 277, 280,
	281, 282, 283, 291, 295, 304, 305, 315, 324, 328,
	180, 312, 329, 236, 209, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 200, 0,
	0, 248, 0, 279, 155, 208, 206, 301, 170, 166,
	164, 154, 187, 213, 247, 297, 241, 0, 203, 0,
	0, 288, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 153,
	131, 233, 289, 172, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 177, 0, 0, 0,
	325, 0, 0, 0, 0, 259, 0, 293, 181, 199,
	145, 196, 128, 140, 0, 179, 232, 266, 270, 0,
	0, 0, 156, 0, 268, 245, 314, 0, 249, 267,
	204, 303, 260, 313, 326, 327, 162, 226, 320, 298,
	323, 335, 141, 159, 239, 294, 317, 285, 221, 300,
	195, 284, 133, 296, 311, 150, 278, 0, 0, 0,
	135, 309, 292, 219, 192, 193, 134, 0, 264, 163,
	175, 158, 235, 306, 307, 157, 336, 142, 322, 137,
	143, 321, 228, 302, 310, 220, 212, 136, 308, 218,
	211, 198, 169, 183, 257, 207, 258, 184, 224, 223,
	225, 0, 132, 0, 290, 318, 337, 147, 0, 0,
	299, 331, 334, 0, 261, 148, 176, 168, 256, 174,
	201, 330, 332, 333, 227, 144, 186, 286, 197, 205,
	0, 0, 244, 269, 151, 316, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 138, 202,
	0, 262, 173, 319, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 146, 152, 160, 167, 171, 178, 182, 185,
	188, 189, 190, 194, 210, 214, 215, 216, 217, 229,
	230, 231, 234, 237, 238, 240, 242, 243, 246, 250,
	251, 252, 253, 254, 255, 263, 265, 271, 272, 273,
	274, 275, 276, 277, 280, 281, 282, 283, 291, 295,
	304, 305, 315, 324, 328, 376, 312, 329, 236, 209,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 200, 0, 0, 248, 0, 279, 155,
	208, 206, 301, 170, 166, 164, 154, 187, 213, 247,
	297, 241, 0, 203, 0, 0, 288, 222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 153, 131, 233, 289, 172, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 122, 0, 325, 0, 0, 0, 0,
	259, 0, 293, 181, 199, 145, 196, 128, 140, 0,
	179, 232, 266, 270, 0, 0, 0, 156, 0, 268,
	245, 314, 0, 249, 267, 204, 303, 260, 313, 326,
	327, 162, 226, 320, 298, 323, 335, 141, 159, 239,
	294, 317, 285, 221, 300, 195, 284, 133, 296, 311,
	150, 278, 0, 0, 0, 135, 309, 292, 219, 192,
	193, 134, 0, 264, 163, 175, 158, 235, 306, 307,
	157, 336, 142, 322, 137, 143, 321, 228, 302, 310,
	220, 212, 136, 308, 218, 211, 198, 169, 183, 257,
	207, 258, 184, 224, 223, 225, 0, 132, 0, 290,
	318, 337, 147, 0, 0, 299, 331, 334, 0, 261,
	148, 176, 168, 256, 174, 201, 330, 332, 333, 227,
	144, 186, 286, 197, 205, 0, 0, 244, 269, 151,
	316, 287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 138, 202, 0, 262, 173, 319, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 146, 152, 160,
	167, 171, 178, 182, 185, 188, 189, 190, 194, 210,
	214, 215, 216, 217, 229, 230, 231, 234, 237, 238,
	240, 242, 243, 246, 250, 251, 252, 253, 254, 255,
	263, 265, 271, 272, 273, 274, 275, 276, 277, 280,
	281, 282, 283, 291, 295, 304, 305, 315, 324, 328,
	180, 312, 329, 236, 209, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 200, 0,
	0, 248, 0, 279, 155, 208, 206, 301, 170, 166,
	164, 154, 187, 213, 247, 297, 241, 0, 203, 0,
	0, 288, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 153,
	131, 233, 289, 172, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	325, 0, 0, 0, 0, 259, 0, 293, 181, 199,
	145, 196, 128, 140, 0, 179, 232, 266, 270, 0,
	0, 0, 156, 0, 268, 245, 314, 0, 249, 267,
	204, 303, 260, 313, 326, 327, 162, 226, 320, 298,
	323, 335, 141, 159, 239, 294, 317, 285, 221, 300,
	195, 284, 133, 296, 311, 150, 278, 0, 0, 0,
	135, 309, 292, 219, 192, 193, 134, 0, 264, 163,
	175, 158, 235, 306, 307, 157, 336, 142, 322, 137,
	143, 321, 228, 302, 310, 220, 212, 136, 308, 218,
	211, 198, 169, 183, 257, 207, 258, 184, 224, 223,
	225, 0, 132, 0, 290, 318, 337, 147, 0, 0,
	299, 331, 334, 0, 261, 148, 176, 168, 256, 174,
	201, 330, 332, 333, 227, 144, 186, 286, 197, 205,
	0, 0, 244, 269, 151, 316, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 138, 202,
	0, 262, 173, 319, 0, 0, 161, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 146, 152, 160, 167, 171, 178, 182, 185,
	188, 189, 190, 194, 210, 214, 215, 216, 217, 229,
	230, 231, 234, 237, 238, 240, 242, 243, 246, 250,
	251, 252, 253, 254, 255, 263, 265, 271, 272, 273,
	274, 275, 276, 277, 280, 281, 282, 283, 291, 295,
	304, 305, 315, 324, 328, 180, 312, 329, 0, 209,
}

var yyPact = [...]int{
	2558, -1000, -290, 1287, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1239, 892, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	322, 913, 61, 1132, 54, 611, 202, 86, 19669, 200,
	153, 20054, -1000, 47, -1000, 40, 20054, 45, 19284, -1000,
	-1000, -1000, 11166, 1085, -43, -65, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 924, 1190, 1198, 1231, 737, 1314,
	-1000, 9613, 9613, 159, 159, 159, 8073, -1000, -1000, 16197,
	20054, 20054, 929, 144, 194, 144, -144, -1000, -1000, -1000,
	-1000, -1000, -1000, 1132, -1000, -1000, 99, -1000, -1000, 20054,
	20054, 342, 1132, 87, -1000, -1000, -1000, 20054, 142, 611,
	142, 142, 20054, -1000, 238, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20054, 611,
	1126, 442, 121, 300, 300, 300, 300, -1000, 290, -1000,
	5661, 84, 90, -23, 1248, 78, 0, -1000, 442, 5661,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 173, -1000,
	-1000, -1000, -1000, 20054, 18899, 189, 380, -1000, -1000, -1000,
	-1000, 802, 562, -1000, 11166, 1988, 817, 817, -1000, -1000,
	222, -1000, -1000, 12321, 12321, 12321, 12321, 12321, 12321, 12321,
	12321, 12321, 12321, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 817, 234, -1000,
	10781, 817, 817, 817, 817, 817, 817, 817, 817, 11166,
	817, 817, 817, 817, 817, 817, 817, 817, 817, 817,
	817, 817, 817, 817, 817, 817, -1000, -1000, -1000, 20054,
	-1000, 1239, -1000, 892, -1000, -1000, -1000, 1109, 11166, 11166,
	1239, -1000, 1022, 9613, -1000, -1000, 1254, -1000, -1000, -1000,
	-1000, 482, 1271, -1000, 13091, 230, 1270, 18514, -1000, 16967,
	18129, 854, 7671, -118, -1000, -1000, -1000, 373, 15812, -1000,
	-1000, -1000, 1115, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 786,
	20054, -1000, -1000, 363, 611, -1000, 901, -1000, 775, -1000,
	894, 74, 365, 20054, 369, 611, 611, -1000, -1000, -1000,
	1108, 341, 135, 5661, 102, 137, 122, 20054, 1132, 1084,
	853, 172, 20054, 1174, 956, 20054, 611, -1000, 6867, -1000,
	5661, 442, -1000, 630, 11166, 5661, 5661, 5661, 20054, 5661,
	5661, -1000, 629, -1000, -1000, -1000, 413, -1000, -1000, -1000,
	-1000, -1000, -1000, 5661, 5661, 399, 413, 399, -1000, -1000,
	-1000, -1000, 11166, 300, -1000, 954, -1000, -1000, 43, -1000,
	-1000, -1000, -1000, -1000, 1287, -1000, -1000, -1000, -132, 11166,
	11166, 11166, 11166, 590, 305, 12321, 546, 346, 12321, 12321,
	12321, 12321, 12321, 12321, 12321, 12321, 12321, 12321, 12321, 12321,
	12321, 12321, 12321, 642, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 611, -1000, 1275, 744, 744, 248, 248, 248,
	248, 248, 248, 248, 248, 248, 12706, 8458, 6867, 737,
	760, 1239, 9613, 9613, 11166, 11166, 10383, 9998, 9613, 1134,
	367, 562, 20054, -1000, -1000, 11936, -1000, -1000, -1000, -1000,
	-1000, 656, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20054,
	20054, 9613, 9613, 9613, 9613, 9613, -1000, 851, -1000, -174,
	15427, 1198, 737, 1254, 1153, 1279, 275, 458, 840, -1000,
	531, 1198, 15042, 860, -1000, 1254, -1000, -1000, -1000, 20054,
	-1000, -1000, 17737, -1000, -1000, 6465, 20054, 111, 20054, -1000,
	850, 1188, -1000, -1000, -1000, 1182, 14657, 20054, 842, 780,
	-1000, -1000, 229, 7269, -118, -1000, 7269, 818, -1000, -99,
	-75, 8843, 246, -1000, -1000, -1000, -1000, 4857, 13476, 726,
	403, -30, -1000, -1000, -1000, 894, -1000, 894, 894, 894,
	894, 10, 10, 10, 10, -1000, -1000, -1000, -1000, -1000,
	912, 906, -1000, 894, 894, 894, 894, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 905, 905, 905, 895, 895, 147,
	11166, 63, 20054, 1159, 557, 59, 362, 60, -1000, 1165,
	940, -1000, 341, 698, -1000, -1000, 544, 544, 330, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	112, -1000, 20054, 20054, 20054, 20054, 20054, 210, 96, 20054,
	20054, 216, -1000, 20054, 5661, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 562, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	20054, -1000, -1000, -1000, -1000, 442, 20054, 20054, 20054, 442,
	562, -1000, 20054, 20054, -1000, -1000, -1000, -1000, -1000, 562,
	305, 436, 449, -1000, -1000, 554, -1000, -1000, 1555, -1000,
	-1000, -1000, -1000, 546, 12321, 12321, 12321, 385, 1555, 2020,
	1103, 911, 248, 276, 276, 277, 277, 277, 277, 277,
	400, 400, -1000, -1000, -1000, 656, -1000, -1000, -1000, 656,
	9613, 9613, 835, 817, 227, -1000, 924, -1000, -1000, 1198,
	740, 740, 573, 618, 353, 1265, 740, 350, 1251, 740,
	740, 9613, -1000, -1000, 463, -1000, 11166, 656, -1000, 226,
	-1000, 837, 820, 819, 740, 656, 656, 740, 740, 20054,
	-1000, -284, -1000, -124, 266, 817, -1000, 17352, -1000, -1000,
	1109, -1000, -1000, 1070, -1000, 1018, 11166, 11166, 11166, -1000,
	-1000, -1000, 1109, 1225, -1000, 1042, 1041, 1246, 9613, 16967,
	1254, -1000, -1000, -1000, 225, 1246, 849, 817, -1000, 20054,
	16967, 16967, 16967, 16967, 16967, -1000, 983, 970, -1000, 1009,
	1005, 1017, 20054, -1000, 743, 737, 14657, 111, 797, 16967,
	20054, -1000, -1000, 16967, 20054, 6063, -1000, 818, -118, -59,
	-1000, -1000, -1000, -1000, 562, -1000, 686, 815, 4455, -1000,
	-1000, -1000, -1000, 138, -1000, -1000, 902, 611, -1000, 1147,
	313, 313, 315, 611, 1144, -1000, -1000, -1000, -1000, 1129,
	-1000, 444, -36, -1000, -1000, 10, 10, -1000, -1000, 246,
	1107, 246, 246, 246, 625, 625, -1000, -1000, -1000, -1000,
	-1000, 551, -1000, -1000, -1000, 532, -1000, -1000, 901, 361,
	989, 63, -1000, 611, 341, 624, 1089, -1000, -1000, 702,
	175, 52, 77, -1000, -1000, -1000, -1000, 953, 20054, 668,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20054,
	-1000, -1000, -1000, -1000, -1000, 20054, 935, -1000, -1000, -1000,
	-1000, 44, 88, 94, 164, -1000, -1000, -1000, -1000, 5661,
	-1000, 399, -1000, -1000, -1000, 399, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 385, 1555, 1743, -1000, 12321, 12321, -1000,
	-1000, 740, 740, 9613, 6867, 1239, 1109, -1000, -1000, 85,
	642, 85, 12321, 12321, -1000, 12321, 12321, -1000, -160, 827,
	323, -1000, 11166, 522, -1000, 6867, -1000, 12321, 12321, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 192, 179,
	178, 20054, -1000, -1000, 603, 616, 1016, 562, 562, -1000,
	-1000, 20054, -1000, -1000, -1000, -1000, 1244, 11166, -1000, 811,
	-1000, 5259, 1198, 948, 20054, 817, 1287, 13874, 20054, 852,
	-1000, 360, 1188, 934, 947, 1024, -1000, -1000, -1000, -1000,
	968, -1000, 967, -1000, -1000, -1000, -1000, -1000, 737, 1246,
	16967, 781, -1000, 781, -1000, 220, -1000, -1000, -1000, -104,
	-94, -1000, -1000, -1000, 4857, -1000, 4857, -1000, 20054, 134,
	-1000, 611, 611, 611, -1000, -1000, -1000, 900, 946, 12321,
	-1000, -1000, -1000, 246, 246, -1000, 303, -1000, -1000, -1000,
	736, -1000, 733, 807, 729, 27, -1000, 923, 1096, 341,
	341, -1000, -1000, 511, -1000, 615, -1000, 20054, 62, -1000,
	896, 640, -1000, 20054, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1152, -175, 611, 20054, 20054, 20054, -1000, 20054, -1000,
	442, 442, -1000, 12321, 1555, 1555, -1000, -1000, 656, -1000,
	1198, -1000, 656, 894, 894, -1000, 894, 895, -1000, 894,
	33, 894, 32, 656, 656, 2003, 1885, 1708, 1685, 817,
	-153, -1000, 562, 11166, -1000, 1142, 930, 817, 817, 817,
	721, -1000, 602, 10, -1000, -1000, -1000, 1227, 1230, 562,
	-1000, -1000, -1000, 1149, 707, 793, -1000, -1000, 9228, 723,
	1032, 214, 721, 1239, 20054, 11166, -1000, -1000, 11166, 878,
	-1000, 11166, -1000, -1000, -1000, 1239, 1239, 781, -1000, -1000,
	264, -1000, -1000, -1000, 4455, -1000, 718, -1000, 1144, -1000,
	-1000, -1000, 20054, -14, 1278, 1555, -1000, -1000, -1000, -1000,
	10, 596, 10, 490, -1000, 489, -1000, -1000, -225, -1000,
	-1000, 816, 994, -1000, -1000, 873, -1000, -1000, -1000, 690,
	-1000, -1000, 817, -1000, 6867, -1000, -1000, 862, 936, -1000,
	-1000, -1000, -1000, 1555, -1000, 1109, -1000, -1000, 167, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 12321, 12321, 12321,
	12321, 12321, 1198, 594, 562, 12321, 12321, 16582, 20054, 20054,
	14259, 20054, 10, -55, -1000, 11166, 11166, 1143, -1000, 817,
	-1000, 869, 20054, 817, 20054, -1000, 1198, -1000, 562, 562,
	20054, 562, 1198, -1000, 63, 705, -1000, 299, -1000, -108,
	246, -1000, 246, 684, 676, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1148, 20054, -1000, 110, 806, -1000, 331,
	20054, 20054, -1000, -1000, -1000, 837, 837, 837, 837, 48,
	656, -1000, 837, 837, 695, -1000, 695, 695, 266, -1000,
	-277, -1000, 1077, 1067, 562, 802, 1277, -1000, 817, 1287,
	209, 793, -1000, -1000, 683, -1000, -1000, 125, 20054, 477,
	1138, -1000, 1136, -1000, -1000, -1000, -1000, -1000, 892, 679,
	659, -1000, 20054, 6867, 4857, 651, -1000, -1000, -1000, -1000,
	-1000, 656, 83, -178, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -55, 198, -1000, 1048, 1046, 1226, 20054, 793, 20054,
	-1000, 20054, -1000, -1000, 592, -1000, -1000, 133, -1000, -1000,
	110, 1030, -1000, -1000, 935, -1000, 1015, -173, -184, 1053,
	1057, 1057, 1067, 1224, 1065, 1061, -1000, 589, 788, -1000,
	856, -1000, -1000, -79, -1000, 103, -175, -1000, 988, -1000,
	1051, 502, -1000, -1000, -1000, -1000, 585, -1000, 1204, 1200,
	-1000, 20054, 140, -1000, -1000, 106, -1000, -176, -1000, 424,
	-1000, -1000, -1000, 568, 560, 649, 67, 817, -180, -1000,
	-1000, -1000, -1000, 945, -1000, 11551, -185, 942, -1000, 1269,
	837, 656, -1000, -1000, 1276, 284, 284, -1000, -1000, -1000,
	-1000, -1000, 143, 605, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1552, 1551, 15, 83, 81, 1546, 1544, 1539, 1538,
	129, 127, 125, 1537, 1536, 1534, 1533, 1532, 1530, 1529,
	1528, 1527, 1526, 1525, 1523, 1521, 1520, 107, 105, 569,
	1519, 1518, 1517, 1516, 1515, 1514, 1512, 1510, 1509, 1507,
	1504, 1503, 1502, 1501, 108, 1500, 1499, 1495, 1494, 1492,
	1491, 1490, 1489, 1486, 1484, 1483, 1482, 100, 1481, 56,
	122, 55, 67, 1480, 68, 1479, 1477, 1476, 1475, 1474,
	338, 1473, 88, 99, 79, 1471, 42, 1470, 1469, 114,
	1468, 1467, 65, 1464, 1463, 44, 1462, 64, 74, 10,
	31, 1461, 1460, 1458, 1457, 104, 1545, 1455, 1452, 23,
	1448, 1443, 116, 1441, 80, 22, 20, 18, 25, 1440,
	76, 1439, 7, 1438, 77, 1436, 1429, 1422, 1421, 34,
	1420, 71, 86, 24, 1419, 4, 11, 1416, 1415, 1414,
	1413, 1412, 1411, 6, 1410, 1409, 1408, 1402, 1400, 40,
	1396, 5, 1391, 72, 48, 26, 8, 1390, 1388, 27,
	96, 69, 94, 1386, 1384, 1383, 721, 1382, 62, 1380,
	128, 1379, 36, 101, 444, 562, 1378, 1372, 1370, 1369,
	1368, 50, 1091, 1969, 19, 97, 1366, 1365, 2852, 53,
	73, 21, 1363, 1362, 1360, 70, 78, 54, 660, 1358,
	43, 1357, 1355, 1354, 1351, 1347, 1346, 1344, 41, 1343,
	1341, 1340, 30, 13, 95, 28, 1337, 1333, 1331, 1329,
	58, 89, 1326, 1323, 61, 63, 1321, 102, 39, 33,
	1319, 1318, 1316, 1312, 38, 12, 1310, 84, 35, 60,
	37, 32, 1308, 29, 1307, 45, 47, 1306, 14, 1305,
	17, 1303, 3, 0, 1302, 9, 1301, 82, 1107, 1,
	1300, 2, 1299, 1298, 75, 1297, 1296, 1295, 1549, 737,
	98, 1293, 109,
}

var yyR1 = [...]int{
	0, 256, 257, 257, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 243, 243, 243, 246, 246, 21, 41,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 51, 51, 11, 12, 12, 12, 12,
	260, 260, 79, 79, 80, 80, 143, 143, 13, 14,
	14, 152, 152, 151, 151, 151, 153, 153, 153, 153,
	188, 188, 15, 15, 15, 15, 15, 58, 58, 245,
	245, 244, 242, 242, 241, 241, 240, 23, 24, 25,
	26, 248, 248, 220, 30, 30, 29, 29, 29, 29,
	31, 31, 28, 28, 27, 27, 222, 222, 221, 221,
	221, 221, 221, 221, 211, 191, 191, 191, 191, 194,
	194, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	193, 193, 193, 193, 193, 195, 195, 195, 195, 195,
	196, 196, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 197, 197, 197, 197, 197,
	197, 197, 197, 210, 210, 198, 198, 204, 204, 205,
	205, 205, 207, 207, 208, 208, 166, 166, 166, 200,
	200, 201, 201, 206, 206, 202, 202, 202, 203, 203,
	203, 209, 209, 209, 209, 209, 199, 199, 212, 233,
	233, 232, 232, 229, 229, 229, 229, 219, 219, 226,
	226, 226, 226, 226, 226, 216, 216, 216, 217, 217,
	215, 215, 218, 218, 228, 228, 227, 213, 213, 214,
	214, 235, 235, 235, 235, 235, 236, 250, 251, 249,
	249, 249, 249, 249, 49, 49, 49, 167, 167, 167,
	223, 223, 223, 224, 224, 224, 225, 225, 225, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	239, 237, 237, 238, 238, 17, 22, 22, 18, 18,
	18, 18, 19, 19, 32, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 159, 159, 252, 252,
	161, 161, 157, 157, 160, 160, 158, 158, 158, 162,
	162, 162, 163, 163, 189, 189, 189, 34, 34, 36,
	36, 37, 38, 38, 183, 183, 184, 184, 39, 40,
	50, 50, 50, 50, 50, 50, 52, 52, 52, 7,
	7, 7, 7, 46, 46, 46, 6, 6, 35, 35,
	42, 253, 253, 254, 255, 255, 255, 255, 43, 20,
	261, 44, 45, 45, 57, 57, 57, 53, 53, 53,
	56, 56, 56, 61, 61, 63, 63, 63, 63, 63,
	64, 64, 64, 64, 64, 64, 60, 60, 62, 62,
	62, 62, 176, 176, 176, 175, 175, 71, 71, 72,
	72, 73, 73, 74, 74, 74, 111, 88, 88, 142,
	142, 141, 141, 144, 144, 75, 75, 75, 75, 76,
	76, 77, 77, 78, 78, 182, 182, 181, 181, 181,
	180, 180, 81, 81, 81, 83, 82, 82, 82, 82,
	84, 84, 86, 86, 85, 85, 87, 89, 89, 89,
	89, 89, 90, 90, 70, 70, 70, 70, 70, 70,
	70, 70, 155, 155, 92, 92, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 91, 103, 103, 103, 103,
	103, 103, 93, 93, 93, 93, 93, 93, 93, 59,
	59, 104, 104, 104, 110, 105, 105, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	96, 100, 100, 100, 100, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 262, 262, 102, 101, 101, 101,
	101, 101, 101, 101, 55, 55, 55, 55, 55, 187,
	187, 190, 190, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 115, 115, 54, 54, 113, 113,
	114, 116, 116, 112, 112, 112, 95, 95, 95, 95,
	95, 95, 95, 95, 97, 97, 97, 117, 117, 118,
	118, 119, 119, 120, 120, 121, 122, 122, 122, 123,
	123, 123, 123, 234, 234, 234, 234, 234, 230, 230,
	230, 230, 231, 231, 231, 65, 65, 65, 65, 67,
	67, 66, 66, 47, 47, 48, 48, 48, 68, 68,
	69, 69, 69, 69, 139, 139, 139, 124, 124, 124,
	124, 129, 129, 129, 125, 125, 127, 127, 127, 128,
	128, 128, 126, 132, 132, 134, 134, 133, 133, 131,
	131, 136, 136, 135, 135, 130, 130, 94, 94, 94,
	94, 94, 140, 140, 140, 140, 145, 145, 106, 106,
	108, 108, 107, 109, 146, 146, 149, 147, 147, 150,
	150, 150, 150, 150, 148, 148, 148, 177, 177, 177,
	154, 154, 164, 164, 165, 165, 156, 156, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 169, 169,
	169, 170, 170, 137, 137, 137, 137, 138, 138, 173,
	173, 174, 174, 178, 178, 179, 179, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 258, 259, 185, 186, 186, 186,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 7, 4,
	2, 1, 1, 4, 0, 1, 1, 1, 2, 2,
	0, 1, 5, 5, 4, 4, 2, 4, 1, 1,
	3, 4, 3, 3, 8, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	4, 4, 2, 2, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 0, 1, 2, 0,
	2, 0, 3, 0, 1, 0, 3, 3, 0, 2,
	2, 0, 2, 1, 2, 1, 0, 2, 5, 0,
	1, 1, 2, 2, 3, 2, 3, 0, 1, 2,
	3, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 3, 1, 2, 3, 1, 1, 1, 5,
	6, 6, 6, 6, 4, 4, 3, 6, 7, 5,
	5, 5, 12, 7, 5, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 5, 5, 6,
	5, 4, 3, 2, 3, 4, 4, 3, 4, 4,
	4, 4, 4, 4, 3, 3, 3, 3, 2, 7,
	2, 3, 4, 5, 7, 5, 4, 2, 4, 4,
	3, 3, 5, 2, 3, 3, 1, 1, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 2,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 2, 1,
	3, 1, 1, 1, 3, 3, 3, 3, 7, 0,
	3, 1, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 4,
	5, 5, 0, 2, 1, 3, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 8, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 0, 2, 4, 0, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 4, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -256, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -32, -33, -34, -36,
	-37, -38, -39, -40, -6, -35, -20, -21, -41, -42,
	-43, -4, -258, 6, 7, 8, -51, 10, 11, 31,
	-23, -24, 146, -25, 147, -26, 149, 148, 182, 150,
	175, 70, 208, 209, 211, 212, 213, 214, -52, 180,
	181, 152, 35, 41, 32, 33, 80, 9, 303, 177,
	176, 26, -257, 407, -57, 5, -119, 16, -3, -44,
	-261, -44, -44, -44, -44, -44, -44, -220, -222, 80,
	119, 80, -58, 154, -137, -248, 100, 160, 163, 164,
	294, 153, -30, -29, -28, -27, -31, 30, -248, 154,
	156, 268, -246, -243, 83, 84, 85, 154, 154, 155,
	156, -248, 154, -85, -178, -243, -172, 313, 168, 345,
	346, 76, 258, 208, 222, 216, 243, 235, 314, 347,
	169, 198, 233, 236, 281, 166, 348, 263, 271, 94,
	211, 290, 349, 75, 47, 40, 178, 231, 227, 199,
	350, 322, 192, 225, 46, 28, 45, 351, 273, 248,
	44, 352, 79, 318, 275, 226, 272, 152, 353, 171,
	401, 164, 354, 249, 253, 355, 282, 48, 356, 357,
	358, 74, 220, 221, 359, 206, 167, 284, 247, 165,
	34, 276, 315, 54, 186, 285, 42, 251, 41, 405,
	360, 246, 242, 49, 361, 362, 363, 364, 245, 219,
	241, 204, 58, 255, 254, 256, 193, 280, 238, 365,
	366, 367, 172, 77, 368, 228, 19, 369, 370, 200,
	371, 52, 372, 373, 288, 181, 374, 50, 37, 184,
	375, 376, 377, 378, 379, 380, 274, 250, 252, 161,
	188, 270, 317, 381, 224, 382, 173, 185, 180, 289,
	174, 383, 384, 385, 386, 387, 388, 389, 212, 39,
	390, 391, 392, 393, 207, 203, 283, 292, 57, 78,
	260, 394, 218, 163, 201, 395, 209, 51, 195, 266,
	205, 43, 239, 187, 396, 397, 229, 230, 244, 217,
	240, 210, 402, 189, 182, 398, 291, 202, 261, 319,
	194, 237, 234, 196, 399, 156, 190, 191, 400, 403,
	277, 267, 278, 279, 268, 197, 232, 262, 154, 137,
	236, 281, 146, 264, 265, 276, 277, 273, -161, 274,
	188, -189, 154, -157, 263, 267, 268, 197, -252, -243,
	275, 283, 282, 269, 279, 278, -178, 210, -183, 215,
	-173, -243, -172, 213, -85, -50, 401, 150, -185, -185,
	-185, -105, -70, -91, 103, -96, 30, 24, -95, -92,
	-112, -109, -110, 137, 138, 140, 139, 141, 126, 127,
	134, 104, 142, -100, -98, -99, -101, 87, 86, 95,
	88, 89, 90, 91, 96, 97, 98, -173, -178, -107,
	-258, 64, 65, 304, 305, 306, 307, 312, 308, 106,
	53, 293, 302, 301, 300, 297, 298, 295, 296, 310,
	311, 159, 294, 153, 132, 303, -243, -172, 40, 266,
	266, -5, -4, -258, 6, 21, 22, -123, 18, 17,
	-259, 82, -53, -63, 59, 60, -64, 22, 36, 63,
	61, -45, -62, 128, -70, -178, -62, -156, 158, -156,
	-156, -147, -188, 210, -150, 283, 282, -174, -148, -173,
	-171, 281, 236, 280, 151, 320, 102, 23, 25, 105,
	137, 17, 106, 136, 304, 146, 68, 321, 295, 296,
	293, 299, 306, 307, 294, 264, 30, 11, 323, 26,
	176, 22, 36, 130, 148, 109, 110, 179, 24, 177,
	98, 326, 20, 71, 12, 14, 327, 328, 15, 159,
	158, 121, 155, 66, 9, 142, 27, 118, 62, 329,
	29, 330, 331, 332, 333, 64, 119, 18, 297, 298,
	32, 406, 334, 312, 183, 132, 69, 55, 103, 335,
	336, 96, 337, 99, 72, 100, 16, 67, 38, 338,
	339, 340, 286, 341, 120, 149, 303, 65, 342, 153,
	265, 6, 309, 31, 175, 63, 343, 154, 108, 310,
	311, 157, 97, 5, 160, 33, 10, 70, 73, 300,
	301, 302, 53, 316, 107, 13, 344, 287, 101, -221,
	119, -211, -214, -173, 170, -236, 166, -85, -228, -227,
	-173, -65, 76, -165, 159, 155, -165, 303, -27, -28,
	236, 136, -85, -85, 146, 148, 151, 72, -29, 194,
	-22, -85, -164, 159, -243, -164, -164, -85, 143, -85,
	-243, 31, -162, 119, 13, 294, -243, 188, 154, 189,
	156, -163, 119, -163, -163, -163, -216, 155, 34, 167,
	-186, -258, -174, 195, 196, 195, -160, -159, 271, 272,
	266, 270, 13, 196, 266, 191, -162, -186, 157, -173,
	-46, -173, 87, -7, -3, -11, -10, -12, 111, 81,
	102, 100, 101, 118, -70, -93, 121, 103, 119, 120,
	105, 123, 122, 133, 126, 127, 128, 129, 130, 131,
	132, 124, 125, 136, 111, 112, 113, 114, 115, 116,
	117, -155, -258, -110, -258, 144, 145, -96, -96, -96,
	-96, -96, -96, -96, -96, -96, -96, -258, 143, -2,
	-105, -4, -258, -258, -258, -258, -258, -258, -258, -258,
	-115, -70, -258, -262, -102, -258, -262, -102, -262, -102,
	-262, -258, -262, -102, -262, -102, -262, -262, -102, -258,
	-258, -258, -258, -258, -258, -258, -185, -253, -254, -88,
	-85, -119, -3, -44, -139, 20, 32, -70, -120, -121,
	-70, -119, 55, -60, -62, -64, 59, 60, 93, 12,
	-176, -175, 23, -173, 87, 143, 12, -86, 27, -85,
	-72, -73, -74, -75, -88, -111, -258, 12, -79, -80,
	-85, -87, -178, 81, 210, -150, -188, -152, -151, 284,
	286, 111, -177, -173, 87, 30, 31, 82, 81, -85,
	-191, -194, -196, -195, -197, -192, -193, 233, 234, 137,
	237, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 31, 178, 229, 230, 231, 232, 249, 250, 251,
	252, 253, 254, 255, 256, 216, 235, 314, 217, 218,
	219, 220, 221, 222, 224, 225, 226, 227, 228, -243,
	80, 82, 81, -198, 80, -68, 199, 111, -85, 103,
	-243, -243, 31, -219, 111, -168, 151, 148, 149, -239,
	147, 258, 236, 94, 30, 16, 304, 184, 319, -243,
	185, -186, 190, 190, 154, 154, 203, -85, 40, 81,
	157, -79, 24, 72, -85, -243, -179, -178, -171, -186,
	-162, 87, -70, -186, -186, -186, -85, -186, -186, 87,
	-217, 12, 121, -186, -186, -158, 12, 121, -217, -158,
	-70, -163, 72, -184, 213, 247, 402, 403, 404, -70,
	-70, -70, -70, -103, 96, 103, 97, 98, -96, -104,
	-107, -110, 92, 121, 119, 120, 105, -96, -96, -96,
	-96, -96, -96, -96, -96, -96, -96, -96, -96, -96,
	-96, -96, -187, -243, 87, -243, -95, -95, -173, -61,
	22, 36, -60, -174, -179, -171, -57, -259, -259, -119,
	-60, -60, -70, -70, -112, 87, -60, -112, 87, -60,
	-60, -56, 22, 36, -113, -114, 107, -112, -173, -178,
	-259, -96, -173, -173, -60, -61, -61, -60, -60, 81,
	-255, 286, 287, 406, -181, 184, -180, 23, -178, 87,
	-123, -259, -124, 27, 10, 121, 81, 19, 81, -122,
	25, 26, -123, -97, -173, 88, 91, -71, 81, 12,
	-64, -85, -175, 128, -179, -85, -143, 184, -85, 31,
	81, -81, -83, -82, -84, 62, 66, 68, 63, 64,
	65, 69, -182, 23, -72, -3, -258, -85, -79, -260,
	81, 12, 73, -260, 81, 143, -150, -152, 81, 285,
	287, 288, 72, 99, -70, -203, 136, -223, -224, -225,
	-174, 87, 88, -211, -212, -213, -226, 170, -235, 161,
	163, 164, 160, -215, 171, -236, 155, 29, 82, -166,
	96, 103, -207, 261, -198, -198, -198, -198, -198, -202,
	236, -202, -202, -202, 80, 80, -198, -198, -198, -198,
	-204, 80, -204, -204, -205, 80, -205, -236, 166, -70,
	-233, -232, -229, 73, 165, 94, 316, -227, -122, 88,
	-67, 201, 111, 202, 204, 205, 24, -138, 73, -219,
	-243, 87, -185, -247, 166, 162, 170, 171, 164, 83,
	84, 85, 155, 29, 161, 163, 184, 160, -247, -169,
	-170, 157, 23, 155, 29, 184, -85, -85, -85, -85,
	-85, 151, 148, 192, -85, -85, -49, 174, 169, -85,
	-186, -85, -162, -178, -178, -85, -162, -85, -173, 96,
	97, 98, -104, -96, -96, -96, -59, 179, 102, -259,
	-259, -60, -60, -258, 143, -5, -123, -259, -259, 81,
	73, 23, 12, 12, -259, 12, 12, -259, -259, -60,
	-116, -114, 109, -70, -259, 143, -259, 81, 81, -259,
	-259, -259, -259, -259, -254, 405, 287, -89, 70, 158,
	71, -258, -180, -139, 38, 46, 57, -70, -70, -121,
	-139, -154, 20, 12, 53, 53, -90, 13, -62, -72,
	-64, 143, -90, -94, 31, 53, -3, -258, -258, -146,
	-149, -112, -73, -74, -74, -73, -74, 62, 62, 62,
	67, 62, 67, 62, -82, -178, -259, -259, -3, -143,
	73, -72, -85, -72, -87, -178, 128, -151, -153, 289,
	286, 292, -243, 87, 81, -225, 111, -214, 80, -243,
	29, -215, -215, -215, -218, -243, -218, 29, -200, 30,
	96, -208, 262, -202, -202, -203, 31, -203, -203, -203,
	-210, 87, -210, 88, 88, 82, -234, -230, -231, 32,
	76, -229, -243, -219, 87, 37, 82, 156, 207, -69,
	299, 87, 83, 72, -173, -243, 87, -185, -185, -85,
	-185, -173, -245, 73, 190, 258, 190, 193, 157, -186,
	-158, -158, -59, 102, -96, -96, -259, -259, -61, -174,
	-119, -139, -190, 137, 233, 178, 231, 227, 247, 238,
	260, 229, 261, -187, -190, -96, -96, -96, -96, 313,
	-119, 110, -70, 108, -174, -96, -96, 155, 155, 155,
	-144, -173, 39, 87, 87, 58, -85, -117, 14, -70,
	128, -123, -145, 72, -146, -106, -108, -107, -258, -140,
	-259, -173, -144, -90, 81, 111, -77, -76, 72, 73,
	-78, 72, -76, 62, 62, -259, -90, -72, -90, -90,
	143, 286, 290, 291, -224, -225, -228, -235, 171, -218,
	-218, -218, 80, -201, 72, -96, -203, -203, -243, 137,
	82, 81, 82, 81, 82, 81, -167, 351, 103, -231,
	-230, -219, -219, 88, 87, -85, -66, 199, 206, 80,
	84, -85, 27, -242, 316, -244, -243, -173, -173, -173,
	-85, -162, -162, -96, -259, -123, -259, -198, -198, -198,
	-205, -198, 221, -198, 221, -259, -259, 20, 20, 20,
	20, -258, -54, 309, -70, 81, 81, -258, -258, -258,
	-259, 81, 87, -202, -118, 15, 17, 28, -145, 81,
	-259, -259, 81, 53, 143, -259, -119, -149, -70, -70,
	80, -70, -119, -90, 82, -141, -173, -206, 258, 10,
	-202, 87, -202, 88, 88, 351, 30, 77, 78, 79,
	30, 74, 75, -142, 80, 82, -258, -241, -240, -174,
	80, 73, -139, -202, -243, -96, -96, -96, -96, -96,
	-123, 87, -96, -96, -141, -259, -141, -141, -181, -173,
	-202, -126, -131, -160, -70, -105, 29, -108, 53, -3,
	-173, -106, -173, -123, -141, -123, -233, 82, 81, -209,
	161, 29, 160, -99, -203, -203, 82, 82, 23, -141,
	-237, -238, 184, 81, 111, -141, -85, -259, -259, -259,
	-259, -55, 121, 316, -259, -259, -259, -259, -259, -259,
	-89, -129, 401, -132, 42, -133, 43, 10, -106, 143,
	82, 173, -173, -199, 94, 29, 29, -3, 82, -259,
	81, -173, -240, -225, 82, -259, 314, 69, 317, -126,
	47, 239, -134, 51, -135, -130, 52, 17, -146, -173,
	-85, 87, -47, 316, -238, 53, -245, 58, 315, 318,
	-127, 49, -125, 48, -125, -133, 17, -136, 44, 45,
	87, 80, -48, 198, 405, 186, -242, 58, -128, 50,
	72, 99, 87, 17, 17, -141, 166, 187, 316, 72,
	99, 87, 87, 82, 200, -258, 317, -250, -251, 72,
	-96, 183, 318, -251, 72, 11, 10, -259, -259, -249,
	174, 169, 172, 31, -249, 168, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 671, 0, 410, 410, 410, 410, 410, 410, 410,
	0, 0, -2, -2, 0, 36, 0, 0, 0, 0,
	-2, 368, 369, 0, 371, -2, 0, 0, 380, 1155,
	1155, 1155, 0, 0, 0, 0, 1153, 53, 54, 386,
	387, 388, 1, 3, 0, 414, 679, 0, 0, -2,
	412, 0, 0, 786, 786, 786, 0, 82, 83, 0,
	0, 0, 695, 784, 0, 784, 0, 804, 805, 806,
	101, 102, 86, -2, 106, 107, 0, 111, 100, 0,
	0, 0, 110, 37, 33, 34, 35, 0, 782, 0,
	782, 782, 0, 313, 494, 813, 814, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 968, 969, 970, 971, 972, 973, 974,
	975, 976, 977, 978, 979, 980, 981, 982, 983, 984,
	985, 986, 987, 988, 989, 990, 991, 992, 993, 994,
	995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004,
	1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014,
	1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054,
	1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064,
	1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 0, 0,
	0, 359, 0, 362, 362, 362, 362, 328, 0, 330,
	1156, 0, 0, 0, 337, 0, 0, 343, 359, 1156,
	351, 365, 366, 353, 348, 349, 367, 370, 0, 375,
	378, 809, 810, 0, 393, 0, 995, 385, 398, 399,
	409, 38, 545, 504, 0, 510, 512, 0, 547, 548,
	549, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 577, 578, 579, 580, 656, 657, 658,
	659, 660, 661, 662, 663, 514, 515, 653, 0, 763,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 644,
	0, 614, 614, 614, 614, 614, 614, 614, 614, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 1155, 0,
	408, 671, 49, 0, 410, 415, 416, 714, 0, 0,
	671, 1154, 0, 0, -2, -2, 426, 432, 433, 434,
	435, 411, 0, 438, 442, 0, 0, 0, 787, 0,
	0, 68, 0, 1126, 767, -2, -2, 0, 0, 811,
	812, -2, 958, -2, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 900, 901, 902,
	903, 904, 905, 906, 907, 908, 909, 910, 911, 912,
	913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 928, 929, 930, 931, 932,
	933, 934, 935, 936, 937, 938, 939, 940, 941, 0,
	0, 118, 119, 0, 0, 240, 960, 116, 0, 234,
	175, 708, 0, 0, 0, 0, 0, 88, 108, 109,
	0, 217, 0, 1156, 0, 0, 0, 0, -2, 0,
	305, 0, 0, 0, 0, 0, 0, 312, 0, 314,
	1156, 359, 317, 0, 0, 1156, 1156, 1156, 0, 1156,
	1156, 324, 0, 325, 326, 327, 0, 225, 226, 227,
	331, 1157, 1158, 1156, 1156, 356, 0, 356, 354, 355,
	346, 347, 0, 362, 340, 341, 344, 345, 376, 379,
	396, 394, 395, 397, 389, 390, 391, 392, 0, 0,
	0, 0, 0, 0, 508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 532, 533, 534, 535, 536, 537,
	538, 511, 0, 525, 0, 0, 0, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 0, 423, 0, 0,
	0, 671, 0, 0, 0, 0, 0, 0, 0, 420,
	0, 645, 0, 598, 606, 0, 599, 607, 600, 608,
	601, 0, 602, 609, 603, 610, 604, 605, 611, 0,
	0, 0, 423, 423, 0, 0, 39, 400, 401, 0,
	477, 679, 0, 425, 717, 0, 0, 680, 672, 673,
	676, 679, 0, 447, 436, 427, 430, 431, 413, 0,
	439, 443, 0, 445, 446, 0, 0, 66, 0, 493,
	0, 449, 451, 452, 453, 475, 0, 0, 0, 0,
	62, 64, 494, 0, 1126, 773, 0, 70, 71, 0,
	0, 0, 198, 777, 778, 779, 775, 260, 0, 0,
	186, 182, 126, 127, 128, 175, 130, 175, 175, 175,
	175, 195, 195, 195, 195, 158, 159, 160, 161, 162,
	0, 0, 145, 175, 175, 175, 175, 165, 166, 167,
	168, 169, 170, 171, 172, 131, 132, 133, 134, 135,
	136, 137, 138, 139, 177, 177, 177, 179, 179, 0,
	0, 209, 0, 676, 0, 699, 0, 0, 97, 0,
	807, 99, 217, 0, 218, 1155, 0, 0, 798, 275,
	788, 789, 790, 791, 792, 793, 794, 795, 796, 797,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 783, 0, 1156, 311, 495, 815, 816, 315,
	316, 360, 361, 318, 319, 320, 321, 322, 323, 363,
	0, 228, 229, 332, 336, 359, 0, 0, 0, 359,
	338, 339, 0, 0, 377, 381, 382, 383, 384, 546,
	505, 506, 507, 509, 526, 0, 528, 530, 516, 517,
	541, 542, 543, 0, 0, 0, 0, 539, 521, 0,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 566, 629, 630, 0, 564, 565, 576, 0,
	0, 0, 424, 654, 0, -2, 0, 544, 762, 679,
	0, 0, 0, 0, 549, 656, 0, 549, 656, 0,
	0, 0, 421, 422, 651, 648, 0, 0, 653, 0,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	403, 404, 406, 0, 497, 1064, 478, 0, 480, 481,
	714, 50, 40, 0, 715, 0, 0, 0, 0, 675,
	677, 678, 714, 0, 664, 0, 0, 502, 0, 0,
	428, 46, 444, 440, 0, 502, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 485, 0,
	0, 0, 0, 476, 0, 0, 0, -2, 0, 0,
	0, 60, 61, 0, 0, 0, 768, 69, 0, 0,
	74, 75, 769, 770, 771, 772, 0, 103, 261, 263,
	266, 267, 268, 120, 122, 123, 0, 0, 238, 1074,
	1108, 996, 232, 232, 994, 245, 230, 231, 117, 189,
	187, 0, 184, 183, 129, 195, 195, 152, 153, 198,
	0, 198, 198, 198, 0, 0, 146, 147, 148, 149,
	140, 0, 141, 142, 143, 0, 144, 239, 0, 0,
	683, 210, 211, 0, 217, 0, 0, 235, 236, 0,
	0, 0, 0, 696, 697, 698, 785, 0, 0, 0,
	114, 115, 269, 1155, 286, 287, 288, 289, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 1155, 0,
	1155, 799, 800, 801, 802, 0, 89, 279, 281, 280,
	284, 0, 0, 0, 0, 306, 308, 255, 256, 1156,
	310, 356, 333, 357, 358, 356, 335, 342, 373, 527,
	529, 531, 518, 539, 522, 0, 519, 0, 0, 513,
	581, 0, 0, 423, 0, 671, 714, 585, 586, 0,
	0, 0, 0, 0, 622, 0, 0, 623, 0, 671,
	0, 649, 0, 0, 597, 0, 616, 0, 0, 617,
	618, 619, 620, 621, 402, 405, 407, 457, 0, 0,
	0, 0, 479, 42, 0, 0, 0, 681, 682, 674,
	41, 0, 780, 781, 665, 666, 667, 0, 437, 448,
	429, 0, 679, 756, 0, 0, 748, 0, 0, 502,
	764, 0, 450, 471, 473, 0, 468, 483, 484, 486,
	0, 488, 0, 490, 491, 454, 455, 456, 0, 502,
	0, 502, 63, 502, 65, 0, 496, 72, 73, 0,
	0, 79, 199, 200, 0, 264, 0, 121, 0, 0,
	219, 232, 232, 232, 223, 233, 224, 0, 191, 0,
	188, 125, 185, 198, 198, 154, 0, 155, 156, 157,
	0, 173, 0, 0, 0, 257, 84, 687, 686, 217,
	217, 212, 213, 0, 215, 0, 176, 0, 0, 709,
	710, 0, 713, 0, 808, 112, 113, 270, 271, 272,
	273, 0, 92, 0, 0, 0, 0, 277, 0, 309,
	359, 359, 520, 0, 540, 523, 582, 583, 0, 655,
	679, 44, 0, 175, 175, 634, 175, 179, 637, 175,
	639, 175, 642, 0, 0, 0, 0, 0, 0, 0,
	646, 596, 652, 0, 654, 0, 0, 0, 0, 0,
	0, 463, 0, 195, 719, 716, 43, 669, 0, 503,
	441, 47, 51, 0, 756, 747, 758, 760, 0, 0,
	0, 752, 0, 671, 0, 0, 465, 472, 0, 0,
	466, 0, 467, 487, 489, -2, 671, 502, 58, 59,
	0, 76, 77, 78, 262, 265, 0, 237, 0, 220,
	221, 222, 0, 193, 0, 190, 150, 151, 196, 197,
	195, 0, 195, 0, 180, 0, 246, 258, 0, 684,
	685, 0, 0, 214, 216, 459, 700, 701, 702, 0,
	712, 98, 0, 278, 0, 90, 91, 0, 0, 283,
	307, 329, 334, 524, 584, 714, 587, 631, 195, 635,
	636, 638, 640, 641, 643, 589, 588, 0, 0, 0,
	0, 0, 679, 0, 650, 0, 0, 0, 0, 0,
	477, 0, 195, 739, 48, 0, 0, 0, 52, 0,
	761, 0, 0, 0, 0, 67, 679, 765, 766, 469,
	0, 474, 679, 57, 209, 0, 461, 201, 194, 0,
	198, 174, 198, 0, 0, 259, 688, 689, 690, 691,
	692, 693, 694, 0, 0, 711, 0, 93, 94, 0,
	0, 0, 45, 632, 633, 0, 0, 0, 0, 624,
	0, 647, 0, 0, 0, 499, 0, 0, 497, 464,
	721, 720, 733, 737, 670, 668, 0, 759, 0, 751,
	754, 750, 753, 55, 0, 56, 208, 0, 0, 206,
	0, 203, 205, 192, 163, 164, 178, 181, 0, 0,
	0, 301, 0, 0, 0, 0, 285, 590, 592, 591,
	593, 0, 0, 0, 595, 612, 613, 498, 500, 501,
	458, 739, 0, 732, 735, -2, 0, 0, 749, 0,
	470, 0, 462, 124, 0, 202, 204, 703, 460, 300,
	0, 0, 95, 96, 89, 594, 0, 0, 0, 726,
	724, 724, 737, 0, 741, 0, 746, 0, 757, 755,
	0, 207, 85, 705, 302, 0, 92, 625, 0, 628,
	729, 0, 722, 725, 723, 734, 0, 740, 0, 0,
	738, 0, 0, 706, 707, 0, 282, 626, 718, 0,
	727, 728, 736, 0, 0, 0, 0, 0, 0, 730,
	731, 742, 744, 241, 704, 0, 0, 242, 243, 0,
	0, 0, 627, 244, 0, 0, 0, 303, 304, 247,
	249, 250, 0, 0, 248, 251, 252, 253,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 407,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:388
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:393
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:394
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:398
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:429
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:435
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:443
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:464
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:470
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:479
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:483
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:487
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:510
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:518
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:524
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:530
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:538
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:555
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:567
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:595
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:636
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:640
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:652
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:656
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:672
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:676
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:680
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:686
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:690
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:698
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:714
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:720
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:727
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:734
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:738
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:745
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:754
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:758
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:764
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:769
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:774
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:780
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:785
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:791
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:797
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:804
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, IndexType: yyDollar[5].str, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:811
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:818
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:829
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:835
		{
			yyVAL.collateAndCharsets = nil
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:839
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:849
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:853
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:857
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:862
		{
			yyVAL.boolean = false
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.boolean = true
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:872
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:876
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:882
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:886
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:893
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:908
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:913
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:917
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:922
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:926
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:932
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:943
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:954
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 164:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1144
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1148
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1154
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1164
		{
			yyVAL.literal = nil
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1173
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1177
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1185
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1189
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1195
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1203
		{
			yyVAL.boolean = false
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1207
		{
			yyVAL.boolean = true
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1212
		{
			yyVAL.boolean = false
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1216
		{
			yyVAL.boolean = true
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.boolean = false
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.boolean = true
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1235
		{
			yyVAL.optVal = nil
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1248
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolean = false
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.boolean = true
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1262
		{
			yyVAL.str = ""
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1266
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1270
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1275
		{
			yyVAL.str = ""
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1288
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1292
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.colKeyOpt = colKey
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1300
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1304
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1309
		{
			yyVAL.literal = nil
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1313
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1319
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1324
		{
			yyVAL.indexOptions = nil
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1328
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1334
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1338
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1348
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1357
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1363
		{
			yyVAL.str = ""
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1367
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1373
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1377
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1381
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1403
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1428
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = ""
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1453
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1469
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 241:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1479
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 242:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1483
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 243:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1487
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 244:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1491
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1501
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1507
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 257:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1553
		{
			yyVAL.boolean = true
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.boolean = true
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1561
		{
			yyVAL.boolean = false
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = ""
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = yyDollar[1].str
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1610
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 270:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1614
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1618
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1622
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1627
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1632
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1636
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1640
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 277:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1647
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 278:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1654
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1666
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1676
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1680
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 282:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1684
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 283:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1697
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 285:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1711
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1740
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 303:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1756
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1760
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1776
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1784
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1788
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1793
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1797
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1803
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1812
		{
			yyVAL.statement = &OtherRead{}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1823
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1828
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1833
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1850
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1854
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1858
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1868
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1878
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1882
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1895
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1899
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 334:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1903
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1907
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1929
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1938
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1942
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1951
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1991
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1995
		{
			yyVAL.str = "extended "
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = "full "
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2011
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2021
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2035
		{
			yyVAL.showFilter = nil
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2043
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2049
		{
			yyVAL.showFilter = nil
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2053
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2059
		{
			yyVAL.scope = ImplicitScope
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.scope = SessionScope
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.scope = GlobalScope
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2073
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &Begin{}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.statement = &Begin{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &Commit{}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.statement = &Rollback{}
		}
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2103
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2108
		{
			yyVAL.empty = struct{}{}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.empty = struct{}{}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2113
		{
			yyVAL.empty = struct{}{}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.empty = struct{}{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2131
		{
			yyVAL.explainType = EmptyType
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2135
		{
			yyVAL.explainType = JSONType
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.explainType = TreeType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.explainType = VitessType
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2147
		{
			yyVAL.explainType = TraditionalType
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.explainType = AnalyzeType
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2171
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2196
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.statement = &OtherRead{}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2212
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2232
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2238
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.lockType = Read
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2248
		{
			yyVAL.lockType = ReadLocal
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.lockType = Write
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2268
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2272
		{
			setAllowComments(yylex, true)
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2282
		{
			yyVAL.bytes2 = nil
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2286
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.boolean = true
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.boolean = false
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2300
		{
			yyVAL.boolean = true
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2305
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.str = SQLCacheStr
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2318
		{
			yyVAL.boolean = false
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.boolean = true
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2326
		{
			yyVAL.boolean = true
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2331
		{
			yyVAL.selectExprs = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.strs = nil
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2352
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2356
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = SQLCacheStr
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = DistinctStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = DistinctStr
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2378
		{
			yyVAL.str = StraightJoinHint
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2392
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2410
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2415
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2423
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2435
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2439
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2463
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2467
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2473
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2479
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2483
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2488
		{
			yyVAL.columns = nil
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2508
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2512
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2525
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2529
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2533
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2545
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2549
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2555
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2560
		{
			yyVAL.empty = struct{}{}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.empty = struct{}{}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.joinType = NormalJoinType
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2590
		{
			yyVAL.joinType = NormalJoinType
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2594
		{
			yyVAL.joinType = NormalJoinType
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.joinType = StraightJoinType
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2606
		{
			yyVAL.joinType = LeftJoinType
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2610
		{
			yyVAL.joinType = LeftJoinType
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.joinType = RightJoinType
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2618
		{
			yyVAL.joinType = RightJoinType
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2624
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2642
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2658
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.indexHints = nil
		}
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2667
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2671
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2675
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2679
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2684
		{
			yyVAL.expr = nil
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2718
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2728
		{
			yyVAL.str = ""
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2756
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2760
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2764
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2772
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2776
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 524:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2780
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2790
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2810
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2845
		{
			yyVAL.expr = nil
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2869
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2885
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2893
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2905
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2909
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2913
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2917
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2921
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2925
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2929
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2933
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2937
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2945
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2949
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2973
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2993
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3007
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3011
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3059
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3063
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3079
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 594:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 596:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3121
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3126
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3152
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3156
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3170
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3175
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 612:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3179
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 613:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3183
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3203
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3207
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3227
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3233
		{
			yyVAL.matchExprOption = NoOption
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3237
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3241
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 627:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3245
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3249
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3255
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3265
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3277
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3285
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3291
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3303
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3307
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = nil
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3324
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3329
		{
			yyVAL.str = string("")
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3339
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3343
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3349
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3354
		{
			yyVAL.expr = nil
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3358
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3368
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 655:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3372
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3386
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3390
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3394
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3406
		{
			yyVAL.expr = &NullVal{}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3412
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3430
		{
			yyVAL.exprs = nil
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3434
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = nil
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3448
		{
			yyVAL.orderBy = nil
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3462
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3468
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3473
		{
			yyVAL.orderDirection = AscOrder
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.orderDirection = AscOrder
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.orderDirection = DescOrder
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3486
		{
			yyVAL.limit = nil
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3494
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3498
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.indexOptions = nil
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3507
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3515
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3544
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3548
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = ""
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3574
		{
			yyVAL.str = ""
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = yyDollar[3].str
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = yyDollar[2].str
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = "cascaded"
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3610
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = yyDollar[3].str
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3629
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3633
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3642
		{
			yyVAL.lock = NoLock
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.lock = ForUpdateLock
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3650
		{
			yyVAL.lock = ShareModeLock
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3655
		{
			yyVAL.selectInto = nil
		}
	case 718:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3659
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3667
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3672
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = ""
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = " header"
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = ""
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = " manifest on"
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = " manifest off"
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = " overwrite on"
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = " overwrite off"
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3721
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3766
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3771
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3775
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = " optionally"
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3801
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3805
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3809
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 751:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3813
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3819
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3823
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3827
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3831
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3836
		{
			yyVAL.updateExprs = nil
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3840
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3850
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3856
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3860
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3882
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3886
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3892
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3912
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3916
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3924
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.bytes = []byte("charset")
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3943
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3947
		{
			yyVAL.expr = &Default{}
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.boolean = false
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.boolean = true
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3961
		{
			yyVAL.boolean = false
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.boolean = true
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3966
		{
			yyVAL.ignore = false
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.ignore = true
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3974
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3980
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3990
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3994
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3996
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4004
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4007
		{
			yyVAL.str = ""
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4016
		{
			yyVAL.str = ""
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4411
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4420
		{
			decNesting(yylex)
		}
	case 1155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			skipToEnd(yylex)
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4430
		{
			skipToEnd(yylex)
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			skipToEnd(yylex)
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4438
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
