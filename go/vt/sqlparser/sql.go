// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const DO = 57375
const CALL = 57376
const DISTINCTROW = 57377
const PARSER = 57378
const GENERATED = 57379
const ALWAYS = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const SUBQUERY_AS_EXPR = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const HEX = 57427
const STRING = 57428
const NCHAR_STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const EXTRACT = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const OFF = 57443
const DISCARD = 57444
const IMPORT = 57445
const ENABLE = 57446
const DISABLE = 57447
const TABLESPACE = 57448
const VIRTUAL = 57449
const STORED = 57450
const EMPTY_FROM_CLAUSE = 57451
const LOWER_THAN_CHARSET = 57452
const CHARSET = 57453
const UNIQUE = 57454
const KEY = 57455
const OR = 57456
const XOR = 57457
const AND = 57458
const NOT = 57459
const BETWEEN = 57460
const CASE = 57461
const WHEN = 57462
const THEN = 57463
const ELSE = 57464
const END = 57465
const LE = 57466
const GE = 57467
const NE = 57468
const NULL_SAFE_EQUAL = 57469
const IS = 57470
const LIKE = 57471
const REGEXP = 57472
const IN = 57473
const SHIFT_LEFT = 57474
const SHIFT_RIGHT = 57475
const DIV = 57476
const MOD = 57477
const UNARY = 57478
const COLLATE = 57479
const BINARY = 57480
const UNDERSCORE_BINARY = 57481
const UNDERSCORE_UTF8MB4 = 57482
const UNDERSCORE_UTF8 = 57483
const UNDERSCORE_LATIN1 = 57484
const INTERVAL = 57485
const JSON_EXTRACT_OP = 57486
const JSON_UNQUOTE_EXTRACT_OP = 57487
const CREATE = 57488
const ALTER = 57489
const DROP = 57490
const RENAME = 57491
const ANALYZE = 57492
const ADD = 57493
const FLUSH = 57494
const CHANGE = 57495
const MODIFY = 57496
const REVERT = 57497
const SCHEMA = 57498
const TABLE = 57499
const INDEX = 57500
const VIEW = 57501
const TO = 57502
const IGNORE = 57503
const IF = 57504
const PRIMARY = 57505
const COLUMN = 57506
const SPATIAL = 57507
const FULLTEXT = 57508
const KEY_BLOCK_SIZE = 57509
const CHECK = 57510
const INDEXES = 57511
const ACTION = 57512
const CASCADE = 57513
const CONSTRAINT = 57514
const FOREIGN = 57515
const NO = 57516
const REFERENCES = 57517
const RESTRICT = 57518
const SHOW = 57519
const DESCRIBE = 57520
const EXPLAIN = 57521
const DATE = 57522
const ESCAPE = 57523
const REPAIR = 57524
const OPTIMIZE = 57525
const TRUNCATE = 57526
const COALESCE = 57527
const EXCHANGE = 57528
const REBUILD = 57529
const PARTITIONING = 57530
const REMOVE = 57531
const MAXVALUE = 57532
const PARTITION = 57533
const REORGANIZE = 57534
const LESS = 57535
const THAN = 57536
const PROCEDURE = 57537
const TRIGGER = 57538
const VINDEX = 57539
const VINDEXES = 57540
const DIRECTORY = 57541
const NAME = 57542
const UPGRADE = 57543
const STATUS = 57544
const VARIABLES = 57545
const WARNINGS = 57546
const CASCADED = 57547
const DEFINER = 57548
const OPTION = 57549
const SQL = 57550
const UNDEFINED = 57551
const SEQUENCE = 57552
const MERGE = 57553
const TEMPORARY = 57554
const TEMPTABLE = 57555
const INVOKER = 57556
const SECURITY = 57557
const FIRST = 57558
const AFTER = 57559
const LAST = 57560
const VITESS_MIGRATION = 57561
const CANCEL = 57562
const RETRY = 57563
const COMPLETE = 57564
const CLEANUP = 57565
const BEGIN = 57566
const START = 57567
const TRANSACTION = 57568
const COMMIT = 57569
const ROLLBACK = 57570
const SAVEPOINT = 57571
const RELEASE = 57572
const WORK = 57573
const BIT = 57574
const TINYINT = 57575
const SMALLINT = 57576
const MEDIUMINT = 57577
const INT = 57578
const INTEGER = 57579
const BIGINT = 57580
const INTNUM = 57581
const REAL = 57582
const DOUBLE = 57583
const FLOAT_TYPE = 57584
const DECIMAL = 57585
const NUMERIC = 57586
const TIME = 57587
const TIMESTAMP = 57588
const DATETIME = 57589
const YEAR = 57590
const CHAR = 57591
const VARCHAR = 57592
const BOOL = 57593
const CHARACTER = 57594
const VARBINARY = 57595
const NCHAR = 57596
const TEXT = 57597
const TINYTEXT = 57598
const MEDIUMTEXT = 57599
const LONGTEXT = 57600
const BLOB = 57601
const TINYBLOB = 57602
const MEDIUMBLOB = 57603
const LONGBLOB = 57604
const JSON = 57605
const ENUM = 57606
const GEOMETRY = 57607
const POINT = 57608
const LINESTRING = 57609
const POLYGON = 57610
const GEOMETRYCOLLECTION = 57611
const MULTIPOINT = 57612
const MULTILINESTRING = 57613
const MULTIPOLYGON = 57614
const NULLX = 57615
const AUTO_INCREMENT = 57616
const APPROXNUM = 57617
const SIGNED = 57618
const UNSIGNED = 57619
const ZEROFILL = 57620
const CODE = 57621
const COLLATION = 57622
const COLUMNS = 57623
const DATABASES = 57624
const ENGINES = 57625
const EVENT = 57626
const EXTENDED = 57627
const FIELDS = 57628
const FULL = 57629
const FUNCTION = 57630
const GTID_EXECUTED = 57631
const KEYSPACES = 57632
const OPEN = 57633
const PLUGINS = 57634
const PRIVILEGES = 57635
const PROCESSLIST = 57636
const SCHEMAS = 57637
const TABLES = 57638
const TRIGGERS = 57639
const USER = 57640
const VGTID_EXECUTED = 57641
const VITESS_KEYSPACES = 57642
const VITESS_METADATA = 57643
const VITESS_MIGRATIONS = 57644
const VITESS_REPLICATION_STATUS = 57645
const VITESS_SHARDS = 57646
const VITESS_TABLETS = 57647
const VSCHEMA = 57648
const NAMES = 57649
const GLOBAL = 57650
const SESSION = 57651
const ISOLATION = 57652
const LEVEL = 57653
const READ = 57654
const WRITE = 57655
const ONLY = 57656
const REPEATABLE = 57657
const COMMITTED = 57658
const UNCOMMITTED = 57659
const SERIALIZABLE = 57660
const CURRENT_TIMESTAMP = 57661
const DATABASE = 57662
const CURRENT_DATE = 57663
const CURRENT_TIME = 57664
const LOCALTIME = 57665
const LOCALTIMESTAMP = 57666
const CURRENT_USER = 57667
const UTC_DATE = 57668
const UTC_TIME = 57669
const UTC_TIMESTAMP = 57670
const DAY = 57671
const DAY_HOUR = 57672
const DAY_MICROSECOND = 57673
const DAY_MINUTE = 57674
const DAY_SECOND = 57675
const HOUR = 57676
const HOUR_MICROSECOND = 57677
const HOUR_MINUTE = 57678
const HOUR_SECOND = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MINUTE_MICROSECOND = 57682
const MINUTE_SECOND = 57683
const MONTH = 57684
const QUARTER = 57685
const SECOND = 57686
const SECOND_MICROSECOND = 57687
const YEAR_MONTH = 57688
const WEEK = 57689
const REPLACE = 57690
const CONVERT = 57691
const CAST = 57692
const SUBSTR = 57693
const SUBSTRING = 57694
const GROUP_CONCAT = 57695
const SEPARATOR = 57696
const TIMESTAMPADD = 57697
const TIMESTAMPDIFF = 57698
const MATCH = 57699
const AGAINST = 57700
const BOOLEAN = 57701
const LANGUAGE = 57702
const WITH = 57703
const QUERY = 57704
const EXPANSION = 57705
const WITHOUT = 57706
const VALIDATION = 57707
const UNUSED = 57708
const ARRAY = 57709
const CUME_DIST = 57710
const DESCRIPTION = 57711
const DENSE_RANK = 57712
const EMPTY = 57713
const EXCEPT = 57714
const FIRST_VALUE = 57715
const GROUPING = 57716
const GROUPS = 57717
const JSON_TABLE = 57718
const LAG = 57719
const LAST_VALUE = 57720
const LATERAL = 57721
const LEAD = 57722
const MEMBER = 57723
const NTH_VALUE = 57724
const NTILE = 57725
const OF = 57726
const OVER = 57727
const PERCENT_RANK = 57728
const RANK = 57729
const RECURSIVE = 57730
const ROW_NUMBER = 57731
const SYSTEM = 57732
const WINDOW = 57733
const ACTIVE = 57734
const ADMIN = 57735
const BUCKETS = 57736
const CLONE = 57737
const COMPONENT = 57738
const DEFINITION = 57739
const ENFORCED = 57740
const EXCLUDE = 57741
const FOLLOWING = 57742
const GEOMCOLLECTION = 57743
const GET_MASTER_PUBLIC_KEY = 57744
const HISTOGRAM = 57745
const HISTORY = 57746
const INACTIVE = 57747
const INVISIBLE = 57748
const LOCKED = 57749
const MASTER_COMPRESSION_ALGORITHMS = 57750
const MASTER_PUBLIC_KEY_PATH = 57751
const MASTER_TLS_CIPHERSUITES = 57752
const MASTER_ZSTD_COMPRESSION_LEVEL = 57753
const NESTED = 57754
const NETWORK_NAMESPACE = 57755
const NOWAIT = 57756
const NULLS = 57757
const OJ = 57758
const OLD = 57759
const OPTIONAL = 57760
const ORDINALITY = 57761
const ORGANIZATION = 57762
const OTHERS = 57763
const PATH = 57764
const PERSIST = 57765
const PERSIST_ONLY = 57766
const PRECEDING = 57767
const PRIVILEGE_CHECKS_USER = 57768
const PROCESS = 57769
const RANDOM = 57770
const REFERENCE = 57771
const REQUIRE_ROW_FORMAT = 57772
const RESOURCE = 57773
const RESPECT = 57774
const RESTART = 57775
const RETAIN = 57776
const REUSE = 57777
const ROLE = 57778
const SECONDARY = 57779
const SECONDARY_ENGINE = 57780
const SECONDARY_LOAD = 57781
const SECONDARY_UNLOAD = 57782
const SKIP = 57783
const SRID = 57784
const THREAD_PRIORITY = 57785
const TIES = 57786
const UNBOUNDED = 57787
const VCPU = 57788
const VISIBLE = 57789
const FORMAT = 57790
const TREE = 57791
const VITESS = 57792
const TRADITIONAL = 57793
const LOCAL = 57794
const LOW_PRIORITY = 57795
const NO_WRITE_TO_BINLOG = 57796
const LOGS = 57797
const ERROR = 57798
const GENERAL = 57799
const HOSTS = 57800
const OPTIMIZER_COSTS = 57801
const USER_RESOURCES = 57802
const SLOW = 57803
const CHANNEL = 57804
const RELAY = 57805
const EXPORT = 57806
const AVG_ROW_LENGTH = 57807
const CONNECTION = 57808
const CHECKSUM = 57809
const DELAY_KEY_WRITE = 57810
const ENCRYPTION = 57811
const ENGINE = 57812
const INSERT_METHOD = 57813
const MAX_ROWS = 57814
const MIN_ROWS = 57815
const PACK_KEYS = 57816
const PASSWORD = 57817
const FIXED = 57818
const DYNAMIC = 57819
const COMPRESSED = 57820
const REDUNDANT = 57821
const COMPACT = 57822
const ROW_FORMAT = 57823
const STATS_AUTO_RECALC = 57824
const STATS_PERSISTENT = 57825
const STATS_SAMPLE_PAGES = 57826
const STORAGE = 57827
const MEMORY = 57828
const DISK = 57829

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	9, 43,
	10, 43,
	-2, 33,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	1, 135,
	505, 135,
	-2, 141,
	-1, 43,
	114, 141,
	153, 141,
	269, 141,
	-2, 364,
	-1, 50,
	32, 515,
	175, 515,
	186, 515,
	219, 529,
	220, 529,
	-2, 517,
	-1, 55,
	177, 539,
	-2, 537,
	-1, 105,
	174, 1005,
	-2, 114,
	-1, 107,
	1, 136,
	505, 136,
	-2, 141,
	-1, 117,
	115, 267,
	180, 267,
	-2, 358,
	-1, 136,
	114, 141,
	153, 141,
	269, 141,
	-2, 373,
	-1, 601,
	160, 1026,
	-2, 1022,
	-1, 602,
	160, 1027,
	-2, 1023,
	-1, 616,
	56, 607,
	-2, 615,
	-1, 652,
	128, 1379,
	-2, 107,
	-1, 653,
	128, 1260,
	-2, 108,
	-1, 659,
	128, 1311,
	-2, 999,
	-1, 800,
	128, 1193,
	-2, 996,
	-1, 836,
	185, 37,
	190, 37,
	-2, 278,
	-1, 913,
	1, 411,
	505, 411,
	-2, 141,
	-1, 1112,
	56, 608,
	-2, 620,
	-1, 1113,
	56, 609,
	-2, 621,
	-1, 1164,
	1, 308,
	505, 308,
	-2, 141,
	-1, 1167,
	22, 160,
	-2, 162,
	-1, 1240,
	115, 267,
	180, 267,
	-2, 358,
	-1, 1249,
	185, 38,
	190, 38,
	-2, 279,
	-1, 1461,
	160, 1031,
	-2, 1025,
	-1, 1578,
	1, 309,
	505, 309,
	-2, 141,
	-1, 1817,
	74, 89,
	83, 89,
	-2, 673,
	-1, 1989,
	46, 967,
	-2, 961,
	-1, 2165,
	5, 49,
	15, 49,
	17, 49,
	84, 49,
	-2, 648,
}

const yyPrivate = 57344

const yyLast = 31720

var yyAct = [...]int{
	601, 2201, 2365, 2086, 2327, 2340, 2270, 1835, 3, 1998,
	631, 1842, 2001, 1645, 609, 2002, 88, 573, 33, 1094,
	1843, 2232, 1127, 2227, 572, 1764, 2136, 1535, 1999, 2219,
	2129, 558, 1813, 1518, 1551, 2156, 1996, 1990, 1784, 1864,
	1610, 542, 1926, 1887, 1539, 540, 173, 1630, 1615, 173,
	1866, 505, 173, 1564, 1865, 1802, 1980, 521, 1114, 173,
	1556, 976, 924, 32, 1458, 803, 657, 173, 632, 145,
	34, 1555, 1265, 1776, 953, 1446, 1945, 1724, 1643, 173,
	131, 1156, 533, 1617, 1676, 611, 1136, 613, 1575, 617,
	1356, 1629, 1858, 831, 866, 1454, 1405, 1819, 83, 544,
	521, 1558, 87, 521, 173, 521, 1423, 634, 1097, 1477,
	807, 1520, 994, 1353, 810, 1544, 1627, 837, 1339, 811,
	832, 833, 1606, 1155, 1247, 1153, 1254, 1140, 623, 844,
	1361, 108, 90, 974, 969, 618, 909, 1216, 1540, 644,
	621, 1239, 619, 68, 77, 114, 834, 115, 89, 1511,
	1067, 528, 81, 7, 175, 176, 177, 1070, 148, 639,
	109, 654, 620, 69, 6, 5, 1906, 1905, 1674, 1934,
	1935, 995, 819, 814, 537, 1412, 1786, 175, 176, 177,
	1411, 625, 82, 508, 1410, 116, 1325, 1409, 1408, 478,
	1515, 1516, 1407, 1394, 2361, 531, 804, 532, 1762, 1986,
	2179, 110, 2267, 2056, 595, 2266, 871, 70, 2197, 72,
	1399, 2198, 529, 612, 870, 869, 2379, 610, 2350, 2378,
	2317, 2373, 2202, 495, 2341, 651, 70, 1714, 868, 641,
	94, 1221, 494, 626, 633, 1662, 1005, 2349, 658, 825,
	1962, 882, 883, 492, 886, 887, 888, 889, 848, 826,
	892, 893, 894, 895, 896, 897, 898, 899, 900, 901,
	902, 903, 904, 905, 906, 847, 110, 96, 824, 99,
	995, 2118, 105, 1230, 879, 170, 1913, 2316, 473, 1763,
	1912, 489, 2034, 79, 872, 873, 874, 884, 70, 70,
	503, 1712, 534, 1828, 2035, 2036, 1827, 1933, 608, 1829,
	1711, 616, 79, 912, 823, 500, 918, 919, 1570, 1571,
	1157, 1793, 1158, 1569, 943, 606, 605, 1851, 1622, 931,
	2109, 635, 1505, 960, 932, 962, 972, 1001, 646, 647,
	110, 1517, 930, 2133, 929, 1005, 1794, 2245, 509, 1590,
	1589, 1620, 2107, 908, 2279, 1020, 1019, 1029, 1030, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1021, 944, 931, 1031,
	821, 959, 961, 932, 79, 79, 479, 508, 481, 496,
	519, 511, 1398, 510, 485, 937, 483, 487, 497, 488,
	2088, 482, 523, 493, 948, 949, 484, 498, 499, 501,
	515, 514, 502, 517, 491, 512, 1400, 1401, 1402, 823,
	907, 1457, 1888, 1497, 1486, 1487, 1488, 1489, 1499, 1490,
	1491, 1492, 1504, 1500, 1493, 1494, 1501, 1502, 1503, 1495,
	1496, 1498, 508, 1315, 971, 1101, 1001, 508, 1619, 993,
	175, 176, 177, 1345, 945, 1688, 1685, 1687, 1686, 1677,
	585, 2362, 591, 592, 589, 590, 1644, 588, 587, 586,
	957, 818, 938, 820, 958, 1909, 1690, 2089, 1691, 508,
	1692, 885, 911, 1682, 963, 1316, 827, 1317, 822, 2377,
	1340, 950, 2082, 173, 966, 173, 593, 594, 173, 952,
	2083, 951, 946, 947, 914, 1921, 956, 1693, 891, 1000,
	997, 998, 999, 1004, 1006, 1003, 964, 1002, 2055, 1681,
	890, 2090, 1679, 2263, 996, 2192, 521, 521, 521, 823,
	855, 815, 853, 1646, 1552, 864, 1683, 863, 817, 816,
	862, 1233, 509, 861, 521, 521, 860, 859, 858, 857,
	852, 1847, 828, 1911, 987, 865, 808, 2374, 513, 1680,
	806, 2369, 927, 33, 933, 934, 935, 936, 1120, 910,
	808, 846, 2371, 1712, 808, 840, 506, 2134, 1946, 1253,
	839, 1354, 1628, 822, 965, 821, 73, 973, 645, 1765,
	1767, 507, 1922, 1668, 967, 1925, 1350, 509, 881, 78,
	1972, 1346, 509, 2315, 2280, 981, 1713, 875, 1000, 997,
	998, 999, 1004, 1006, 1003, 2063, 1002, 1908, 78, 1971,
	846, 1948, 1970, 996, 1228, 1227, 173, 1226, 941, 856,
	845, 854, 1898, 1351, 509, 849, 839, 1224, 1664, 477,
	1102, 1092, 1621, 173, 1252, 850, 472, 1105, 1104, 611,
	1107, 1920, 1108, 107, 1919, 1042, 1043, 2301, 613, 1041,
	978, 979, 521, 851, 1576, 173, 920, 917, 1742, 2170,
	521, 1327, 1326, 1328, 1329, 1330, 521, 928, 1928, 845,
	78, 78, 2152, 1927, 1950, 1824, 1954, 1093, 1949, 1791,
	1947, 1733, 846, 822, 1654, 1952, 1766, 1344, 1093, 990,
	1928, 1739, 1106, 1144, 1951, 1927, 87, 1055, 69, 922,
	988, 989, 1031, 1021, 2033, 2333, 1031, 1953, 1955, 2331,
	2367, 954, 1362, 2368, 1838, 2366, 846, 1098, 2335, 2336,
	628, 654, 926, 1845, 1846, 970, 90, 1011, 2332, 2311,
	1044, 1045, 1046, 1047, 1048, 102, 1049, 1050, 1051, 1052,
	1053, 845, 1964, 880, 2146, 846, 1069, 1072, 1074, 1076,
	1077, 1079, 1081, 1082, 1073, 1075, 867, 1078, 1080, 1839,
	1083, 940, 846, 1678, 1663, 1103, 1095, 1347, 1159, 991,
	1430, 610, 942, 1126, 612, 845, 1012, 1341, 1123, 1342,
	849, 839, 1343, 1841, 1428, 1429, 1427, 1836, 1844, 103,
	850, 175, 176, 177, 1478, 1448, 1149, 1150, 658, 2241,
	1847, 1845, 1846, 1478, 845, 1749, 1837, 1877, 1042, 1043,
	839, 842, 843, 173, 808, 913, 1008, 1217, 836, 840,
	1661, 845, 1065, 1010, 1008, 2043, 1225, 839, 842, 843,
	2042, 808, 1011, 1650, 1264, 836, 840, 835, 955, 1363,
	1011, 1042, 1043, 534, 1263, 521, 925, 1249, 1251, 1024,
	1025, 1026, 1027, 1028, 1021, 1258, 1109, 1031, 1656, 1262,
	1449, 1656, 521, 521, 1659, 521, 1844, 521, 521, 1121,
	521, 521, 521, 521, 521, 521, 1137, 855, 1847, 175,
	176, 177, 853, 1788, 1660, 521, 2320, 1658, 2294, 173,
	1298, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1021, 1259,
	2355, 1031, 1009, 1010, 1008, 173, 2038, 1418, 1420, 1421,
	1245, 2178, 1545, 1546, 1145, 2375, 521, 2321, 173, 2295,
	1011, 1238, 2177, 79, 1293, 1294, 1419, 1154, 1334, 1352,
	1332, 1231, 1232, 173, 1322, 1267, 1426, 1268, 2061, 1270,
	1272, 2356, 1862, 1276, 1278, 1280, 1282, 1284, 1789, 173,
	1295, 1717, 1718, 1719, 1861, 1625, 173, 175, 176, 177,
	1223, 1831, 1335, 1130, 1320, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 521, 521, 521, 1840, 2298, 1257,
	1256, 1235, 1255, 1255, 1248, 1236, 1319, 1234, 2376, 1301,
	1302, 1333, 1318, 1331, 1309, 1307, 1308, 1321, 1303, 1358,
	1300, 1299, 1737, 1274, 173, 1009, 1010, 1008, 2297, 2121,
	1366, 1736, 1131, 2296, 1364, 1365, 1311, 1370, 2240, 1372,
	1373, 1374, 1375, 1011, 1296, 1738, 1379, 649, 1369, 2238,
	1009, 1010, 1008, 2085, 2216, 1376, 1377, 1378, 1966, 2175,
	1393, 2041, 1447, 1871, 1355, 1009, 1010, 1008, 1011, 1424,
	1859, 1450, 175, 176, 177, 825, 1638, 175, 176, 177,
	1229, 1636, 1672, 1011, 521, 1020, 1019, 1029, 1030, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1021, 1671, 1538, 1031,
	1368, 169, 110, 1524, 824, 1029, 1030, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1021, 521, 521, 1031, 1451, 1452,
	1863, 1009, 1010, 1008, 111, 1121, 1395, 1389, 1390, 1391,
	173, 1392, 1466, 1469, 175, 176, 177, 153, 1479, 1011,
	1009, 1010, 1008, 1359, 1425, 1323, 1525, 1459, 1526, 1310,
	1523, 1306, 1461, 1009, 1010, 1008, 173, 1305, 1011, 521,
	1304, 1132, 968, 1782, 2347, 93, 1782, 2324, 2261, 173,
	2260, 1011, 521, 1134, 1981, 92, 1460, 91, 173, 1832,
	173, 173, 521, 84, 86, 521, 1360, 1782, 2305, 2200,
	86, 87, 1997, 150, 85, 151, 521, 1122, 1124, 93,
	2284, 1121, 2145, 1531, 2028, 168, 1889, 87, 1981, 92,
	1874, 91, 1554, 1712, 1507, 1508, 2195, 1121, 1422, 1584,
	86, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439,
	1440, 1441, 1442, 1443, 1444, 1445, 1459, 92, 1133, 84,
	2145, 1461, 1121, 654, 1121, 1799, 654, 79, 1121, 2147,
	85, 521, 625, 1596, 1597, 1598, 1599, 1631, 1632, 1633,
	1007, 1580, 1635, 1637, 1579, 1550, 2310, 1413, 1414, 1415,
	1416, 154, 1009, 1010, 1008, 521, 1481, 1562, 1121, 2145,
	159, 521, 1258, 1782, 1533, 1258, 1612, 1258, 1799, 1583,
	1011, 1782, 2193, 1656, 1121, 1655, 2051, 1618, 1568, 1548,
	2150, 1121, 2053, 2052, 1121, 1731, 1567, 1566, 2049, 2050,
	2049, 2048, 602, 1799, 1121, 1754, 1582, 1581, 1464, 1465,
	658, 1731, 1121, 658, 1753, 521, 1657, 1447, 1712, 1907,
	1220, 1891, 1447, 1447, 1885, 1886, 1782, 1781, 1007, 1121,
	1642, 1020, 1019, 1029, 1030, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1021, 1220, 1219, 1031, 1731, 1613, 174, 1820,
	534, 174, 1656, 1820, 174, 1608, 1609, 1624, 173, 522,
	1623, 174, 1626, 1778, 1639, 173, 1634, 1165, 1164, 174,
	173, 173, 1543, 1656, 173, 1125, 173, 146, 86, 1613,
	1665, 174, 173, 1541, 1542, 1648, 1647, 1798, 2180, 173,
	1725, 1513, 1667, 848, 1666, 1403, 1649, 1669, 1670, 1652,
	1651, 1653, 522, 1255, 1349, 522, 174, 522, 1151, 1574,
	847, 830, 1821, 1289, 829, 2272, 1821, 173, 521, 1128,
	1867, 1823, 2252, 2172, 1591, 1712, 1592, 1593, 1594, 1595,
	615, 1121, 1222, 1611, 1868, 1731, 2084, 2045, 2181, 2182,
	2183, 1799, 1602, 1603, 1604, 1605, 1892, 1703, 1704, 1607,
	1601, 1600, 1706, 1337, 1675, 1250, 1246, 912, 1218, 2257,
	104, 1707, 2087, 1290, 1291, 1292, 2273, 1868, 1614, 2157,
	2158, 1622, 1424, 2352, 2328, 2160, 2068, 2067, 1462, 1463,
	2066, 1997, 1468, 1471, 1472, 1696, 1020, 1019, 1029, 1030,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1021, 561, 560,
	1031, 563, 564, 565, 566, 2184, 79, 1878, 562, 1506,
	1697, 567, 1509, 1510, 1020, 1019, 1029, 1030, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1021, 1396, 2019, 1031, 2163,
	2017, 2162, 2020, 1530, 173, 2018, 1710, 2021, 2016, 1808,
	1809, 2015, 173, 1286, 2364, 2348, 1537, 1425, 1129, 2293,
	521, 1529, 2185, 2186, 1720, 2151, 1804, 1807, 1808, 1809,
	1805, 1787, 1806, 1810, 2072, 1978, 2157, 2158, 147, 152,
	149, 155, 156, 157, 158, 160, 161, 162, 163, 1977,
	1795, 173, 173, 2231, 164, 165, 166, 167, 2233, 33,
	1287, 1288, 1119, 1115, 2138, 1991, 1993, 1830, 1815, 2141,
	629, 1988, 2137, 1783, 1994, 1348, 1748, 1116, 630, 604,
	1779, 1804, 1807, 1808, 1809, 1805, 1849, 1806, 1810, 1587,
	1872, 877, 876, 1721, 1722, 1723, 2097, 1474, 84, 1867,
	1931, 980, 1527, 1528, 1118, 1098, 1117, 1480, 1900, 85,
	1480, 1475, 1761, 521, 1814, 84, 1899, 111, 173, 1775,
	1790, 2143, 86, 1769, 1780, 173, 85, 1852, 1853, 1545,
	1546, 521, 1122, 1512, 93, 86, 2064, 521, 1833, 1700,
	1825, 1258, 1258, 2307, 92, 2268, 91, 521, 1818, 1848,
	1812, 1822, 1119, 1115, 1618, 86, 1534, 1976, 1884, 1904,
	637, 638, 1532, 1689, 1834, 1975, 1716, 1116, 91, 93,
	173, 173, 173, 173, 173, 1854, 1855, 1856, 1857, 92,
	92, 91, 2239, 2237, 1860, 2236, 2229, 173, 173, 2142,
	1869, 2140, 1112, 1113, 1118, 2069, 1117, 1640, 1750, 93,
	1902, 1875, 636, 173, 1870, 2228, 1895, 1778, 2130, 92,
	1238, 1461, 1981, 1879, 1880, 1881, 2354, 2353, 95, 1755,
	1743, 1740, 1138, 2354, 521, 97, 98, 2299, 1447, 2040,
	627, 80, 1, 2330, 1901, 1460, 490, 1514, 1096, 504,
	2326, 1324, 1314, 2203, 2269, 174, 1903, 174, 2075, 1616,
	174, 1963, 838, 611, 136, 1577, 1578, 2343, 101, 521,
	801, 100, 841, 1137, 939, 1893, 1894, 1929, 1641, 173,
	1930, 2196, 1850, 521, 1588, 1171, 1169, 1170, 522, 522,
	522, 1168, 521, 1923, 1173, 1944, 1942, 521, 521, 1936,
	173, 173, 173, 173, 173, 1172, 522, 522, 2009, 1167,
	1397, 1982, 173, 1956, 617, 1957, 518, 173, 173, 2003,
	173, 1811, 171, 173, 173, 173, 1160, 1139, 1943, 878,
	480, 2054, 1673, 486, 1108, 2000, 1039, 1974, 1983, 1826,
	2000, 1973, 655, 648, 2005, 2135, 1987, 1989, 173, 1979,
	1785, 2027, 2029, 1944, 1992, 2030, 1985, 1729, 1730, 2292,
	618, 2011, 2012, 2230, 2014, 2306, 2022, 619, 1585, 1135,
	2008, 2010, 1747, 2062, 2013, 1746, 1064, 2031, 1476, 173,
	2026, 1559, 543, 1522, 87, 1417, 521, 559, 174, 556,
	557, 1358, 1771, 521, 1792, 1013, 541, 535, 1146, 173,
	1938, 1939, 2037, 1803, 1801, 174, 1800, 1698, 1563, 173,
	2159, 2076, 2155, 1557, 1958, 1959, 2057, 1960, 1961, 1777,
	2074, 2058, 1586, 173, 522, 1910, 173, 174, 1967, 1968,
	2071, 2081, 522, 992, 1111, 530, 2098, 813, 522, 1618,
	2073, 2046, 2047, 1473, 2278, 2079, 2078, 1715, 2117, 1110,
	1484, 2070, 1485, 58, 36, 525, 2360, 983, 643, 31,
	30, 29, 2059, 2060, 2093, 28, 2092, 27, 22, 21,
	20, 19, 18, 24, 17, 173, 16, 15, 106, 1965,
	45, 42, 40, 113, 112, 1969, 43, 39, 915, 37,
	26, 2105, 2095, 2096, 25, 14, 13, 12, 11, 1727,
	10, 9, 8, 1728, 4, 986, 23, 2, 603, 71,
	0, 1734, 1735, 2039, 0, 0, 0, 1741, 0, 0,
	1744, 1745, 0, 0, 2132, 0, 0, 2139, 1751, 173,
	1752, 0, 0, 0, 0, 2144, 2128, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2164, 0, 0, 2161,
	0, 0, 0, 0, 0, 1756, 1757, 1758, 1759, 1760,
	1532, 2167, 2166, 0, 173, 0, 2154, 173, 173, 173,
	521, 1770, 2171, 0, 0, 0, 0, 0, 614, 0,
	71, 0, 0, 0, 0, 174, 2168, 2169, 2204, 521,
	521, 521, 0, 2174, 0, 2176, 0, 2191, 614, 0,
	0, 0, 0, 2199, 2209, 0, 0, 0, 0, 0,
	0, 0, 2099, 0, 0, 0, 0, 522, 0, 0,
	0, 0, 0, 0, 521, 521, 521, 173, 2215, 0,
	0, 0, 0, 0, 522, 522, 0, 522, 0, 522,
	522, 0, 522, 522, 522, 522, 522, 522, 2208, 0,
	0, 521, 0, 521, 2223, 2224, 2234, 522, 2246, 2226,
	2225, 174, 2235, 2244, 2248, 0, 0, 33, 0, 2250,
	0, 611, 2003, 521, 2242, 0, 2003, 174, 2102, 2103,
	0, 2104, 0, 0, 2106, 0, 2108, 2000, 522, 0,
	174, 0, 0, 0, 0, 0, 2119, 0, 0, 0,
	2256, 0, 0, 521, 0, 174, 0, 0, 0, 2265,
	2262, 2131, 0, 0, 2264, 0, 0, 0, 0, 0,
	2173, 174, 0, 2254, 2255, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 534, 0, 0, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 522, 522, 522, 2291,
	2289, 2288, 0, 521, 0, 0, 0, 0, 2300, 0,
	0, 2302, 0, 2258, 2271, 2259, 0, 0, 0, 2304,
	2003, 611, 0, 521, 173, 571, 174, 2309, 1940, 1941,
	2303, 0, 0, 0, 0, 521, 33, 2210, 2211, 2212,
	2213, 2214, 0, 0, 0, 2217, 2218, 0, 0, 0,
	2312, 0, 521, 0, 0, 0, 0, 0, 0, 2322,
	0, 521, 521, 0, 2329, 2325, 2337, 2342, 2334, 0,
	0, 172, 0, 0, 476, 33, 0, 516, 0, 0,
	0, 2351, 0, 0, 476, 2120, 522, 0, 0, 0,
	0, 2000, 476, 2357, 0, 2006, 0, 0, 0, 0,
	0, 2363, 0, 0, 624, 0, 0, 2370, 0, 0,
	0, 0, 2024, 2025, 0, 2372, 0, 522, 522, 0,
	642, 0, 2271, 2344, 0, 0, 2243, 0, 0, 476,
	169, 0, 174, 0, 0, 0, 0, 2251, 0, 0,
	2253, 1020, 1019, 1029, 1030, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1021, 111, 0, 1031, 0, 0, 174, 0,
	0, 522, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 174, 0, 0, 522, 0, 0, 0, 0, 0,
	174, 0, 174, 174, 522, 0, 0, 522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2290, 534,
	1019, 1029, 1030, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1021, 0, 150, 1031, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 2338, 168, 0, 0, 0, 0, 0,
	0, 0, 2100, 0, 2101, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 0, 2110, 2111, 0, 0, 0,
	0, 0, 0, 0, 975, 975, 975, 0, 2122, 0,
	0, 0, 2126, 0, 0, 0, 0, 522, 0, 0,
	0, 0, 0, 522, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 1040, 614, 0,
	154, 0, 0, 2148, 2149, 0, 0, 2153, 0, 159,
	0, 2115, 0, 0, 0, 0, 0, 0, 111, 0,
	133, 0, 0, 0, 0, 2165, 0, 522, 0, 1054,
	0, 153, 0, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 0, 1066, 1068, 1071, 1071, 1071, 1068, 1071, 1071,
	1068, 1071, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	0, 0, 143, 0, 570, 0, 1100, 132, 0, 614,
	174, 0, 0, 614, 2194, 0, 0, 174, 0, 614,
	0, 0, 174, 174, 0, 0, 174, 150, 174, 151,
	0, 0, 0, 0, 174, 120, 121, 142, 141, 168,
	0, 174, 0, 0, 2114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 520, 2220, 0, 0, 0, 0, 0, 0, 174,
	522, 1020, 1019, 1029, 1030, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1021, 0, 0, 1031, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 118, 144, 125, 117, 0,
	138, 139, 0, 0, 656, 154, 0, 805, 0, 812,
	0, 0, 0, 0, 159, 126, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	127, 122, 123, 124, 128, 0, 0, 0, 476, 119,
	476, 1099, 0, 476, 0, 0, 0, 0, 130, 2274,
	2275, 2276, 2277, 0, 2281, 0, 2282, 2283, 2285, 0,
	0, 0, 2286, 2287, 1020, 1019, 1029, 1030, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1021, 0, 0, 1031, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	475, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	524, 0, 522, 0, 0, 0, 0, 0, 607, 0,
	0, 0, 0, 0, 0, 0, 0, 2314, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 809, 0, 147, 152, 149,
	155, 156, 157, 158, 160, 161, 162, 163, 0, 0,
	0, 0, 0, 164, 165, 166, 167, 2113, 0, 0,
	0, 476, 0, 0, 0, 0, 0, 2358, 2359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 624, 0,
	0, 0, 0, 0, 0, 522, 140, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 174, 134, 0,
	476, 135, 0, 522, 1015, 0, 1018, 0, 0, 522,
	0, 0, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 522,
	1016, 1017, 1014, 1020, 1019, 1029, 1030, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1021, 0, 0, 1031, 0, 0,
	0, 0, 174, 174, 174, 174, 174, 0, 0, 0,
	0, 0, 975, 975, 975, 0, 0, 0, 0, 174,
	174, 0, 1020, 1019, 1029, 1030, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1021, 0, 174, 1031, 1020, 1019, 1029,
	1030, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1021, 0,
	0, 1031, 0, 0, 0, 0, 522, 0, 0, 0,
	0, 0, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 0, 0, 0, 0, 0, 164, 165,
	166, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 522, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 522, 0, 0, 0, 476, 522,
	522, 0, 174, 174, 174, 174, 174, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 174,
	174, 0, 174, 0, 0, 174, 174, 174, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2112,
	656, 656, 656, 1261, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 0, 982, 984,
	0, 0, 0, 0, 0, 0, 0, 0, 1261, 1261,
	0, 0, 0, 0, 476, 0, 0, 0, 1560, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 522, 0,
	1312, 0, 0, 0, 0, 522, 0, 0, 0, 0,
	0, 174, 0, 476, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 1357, 0,
	0, 0, 0, 0, 0, 174, 0, 0, 174, 0,
	0, 0, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 476, 0, 0, 916, 0, 921, 0, 0, 923,
	1380, 1381, 476, 476, 476, 476, 476, 476, 476, 1020,
	1019, 1029, 1030, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1021, 1937, 0, 1031, 0, 0, 1142, 174, 0, 0,
	0, 0, 0, 0, 656, 0, 1726, 0, 0, 476,
	1161, 1020, 1019, 1029, 1030, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1021, 0, 0, 1031, 1020, 1019, 1029, 1030,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1021, 0, 0,
	1031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	642, 1357, 642, 642, 0, 0, 642, 642, 642, 0,
	0, 0, 1261, 0, 0, 0, 174, 0, 0, 174,
	174, 174, 522, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 642, 642, 642, 642, 642, 0, 0,
	0, 522, 522, 522, 0, 1312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 1148, 0, 0, 0,
	0, 624, 0, 0, 0, 0, 522, 522, 522, 174,
	0, 0, 0, 0, 476, 0, 0, 0, 0, 0,
	1357, 0, 0, 476, 0, 476, 1565, 0, 0, 0,
	0, 0, 0, 522, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 0,
	0, 0, 1260, 0, 0, 0, 1266, 1266, 1732, 1266,
	0, 1266, 1266, 0, 1275, 1266, 1266, 1266, 1266, 1266,
	0, 0, 0, 0, 0, 522, 0, 1260, 1260, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1336, 0, 0, 0, 0, 0, 0, 0, 1768, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 522, 174, 0, 0, 0,
	1796, 1797, 0, 0, 0, 0, 0, 522, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 656, 656,
	656, 0, 0, 0, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 522, 522, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 476, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 0, 476, 476, 0, 0, 476,
	1297, 1701, 0, 0, 0, 0, 0, 476, 0, 0,
	0, 0, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 1897, 0, 1453, 0,
	656, 0, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 1260, 0, 0, 0, 0, 0, 0, 0, 0,
	1367, 0, 0, 0, 0, 0, 0, 1371, 0, 1482,
	1483, 0, 0, 0, 0, 0, 0, 0, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 642, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1536, 0, 1406, 0, 0, 0, 642,
	0, 0, 0, 0, 0, 0, 1142, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 656, 0, 0, 656,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 1560, 0, 476,
	0, 0, 0, 0, 0, 0, 0, 1312, 0, 0,
	0, 0, 0, 2004, 169, 71, 0, 0, 1560, 1560,
	1560, 1560, 1560, 0, 1883, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1816, 0, 111, 1560, 133,
	0, 1560, 0, 0, 0, 812, 476, 476, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 805,
	0, 0, 0, 0, 0, 812, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 0, 0, 0, 0, 150, 0, 151, 1553,
	0, 0, 1406, 476, 1241, 1242, 142, 141, 168, 805,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1357, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 476, 476, 476, 476,
	0, 0, 0, 137, 1243, 144, 0, 1240, 0, 138,
	139, 2116, 476, 476, 154, 0, 0, 0, 0, 2123,
	2124, 2125, 0, 159, 0, 0, 0, 0, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 642, 642, 0,
	0, 0, 1709, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1261,
	0, 0, 0, 0, 1261, 476, 476, 476, 476, 476,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 1406,
	146, 0, 476, 1312, 0, 476, 1684, 0, 476, 2032,
	1357, 1694, 1695, 0, 0, 1699, 0, 0, 0, 0,
	0, 0, 0, 1702, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 476, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 1708, 0,
	0, 0, 0, 0, 476, 0, 2004, 0, 71, 0,
	2004, 0, 0, 0, 1261, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 0, 0, 134, 0, 0,
	135, 0, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 0,
	0, 476, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 2004, 1536, 0, 0, 0, 0,
	0, 1890, 0, 0, 0, 0, 0, 0, 0, 656,
	0, 1896, 2308, 0, 0, 0, 0, 71, 0, 0,
	0, 147, 152, 149, 155, 156, 157, 158, 160, 161,
	162, 163, 0, 0, 0, 0, 0, 164, 165, 166,
	167, 0, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 169, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 1237, 0, 0, 0, 0,
	0, 0, 0, 1188, 0, 0, 0, 0, 111, 476,
	133, 0, 476, 476, 476, 0, 0, 0, 656, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 143, 1266, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1984, 0, 0,
	0, 0, 1312, 0, 0, 0, 656, 150, 1260, 151,
	0, 2007, 1266, 1260, 0, 1241, 1242, 142, 141, 168,
	0, 1261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1914, 1915, 1916, 1917, 1918, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 1924,
	0, 0, 0, 0, 0, 0, 0, 0, 1176, 0,
	0, 0, 0, 0, 1932, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 1243, 144, 0, 1240, 0,
	138, 139, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 0, 0, 0, 0,
	805, 1189, 0, 1260, 0, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 0, 1202, 1205, 1206, 1207, 1208, 1209, 1210,
	0, 1211, 1212, 1213, 1214, 1215, 1190, 1191, 1192, 1193,
	1174, 1175, 1203, 0, 1177, 1261, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 0, 0, 0, 0, 0, 2044,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2080, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2091, 0, 140, 2094, 0, 0,
	1204, 0, 0, 0, 1536, 0, 0, 0, 134, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2205, 2206, 2207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2127, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2221, 2221,
	2221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1260, 0, 0, 0, 0, 2247, 0, 2249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 0, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 0, 0, 0, 0, 0, 164, 165,
	166, 167, 0, 0, 0, 2187, 0, 656, 2188, 2189,
	2190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1260, 0, 2323, 0, 0, 0,
	0, 0, 0, 0, 0, 656, 656, 0, 0, 0,
	0, 0, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 2345, 0, 2346, 0,
	0, 0, 0, 0, 207, 2313, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 199, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	417, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 977, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 317, 266, 385, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 199, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 2033, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	417, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 977, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 317, 266, 385, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 199, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 1995, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	417, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 977, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 317, 266, 385, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 199, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 1549, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	417, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 977, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 317, 266, 385, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 79,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 199, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	417, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 977, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 317, 266, 385, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 199, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	417, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 977, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 317, 266, 385, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 800, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	417, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 671, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 659, 653, 652, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 800, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	1152, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 671, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 659, 653, 652, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 783, 769, 402, 718, 786, 688, 706, 796,
	709, 712, 752, 667, 731, 326, 703, 0, 692, 663,
	698, 664, 690, 720, 233, 687, 771, 734, 785, 284,
	230, 669, 693, 340, 708, 184, 754, 378, 218, 293,
	291, 407, 244, 236, 232, 217, 268, 299, 338, 396,
	332, 792, 288, 741, 0, 387, 311, 0, 0, 0,
	722, 775, 729, 765, 717, 753, 677, 740, 787, 704,
	749, 788, 274, 216, 183, 323, 388, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 700, 746, 782,
	701, 748, 228, 272, 235, 227, 404, 793, 774, 0,
	0, 800, 784, 724, 751, 799, 662, 743, 0, 665,
	668, 795, 778, 696, 238, 0, 0, 0, 0, 0,
	0, 0, 721, 730, 762, 715, 0, 0, 0, 0,
	0, 0, 0, 0, 694, 0, 739, 0, 0, 0,
	673, 666, 0, 0, 0, 0, 719, 0, 0, 0,
	676, 0, 695, 763, 0, 660, 256, 670, 312, 0,
	767, 777, 716, 436, 781, 714, 713, 758, 674, 773,
	707, 283, 672, 280, 179, 195, 0, 705, 322, 361,
	367, 772, 691, 699, 219, 697, 365, 336, 421, 203,
	246, 358, 341, 363, 738, 756, 364, 289, 409, 353,
	419, 437, 438, 226, 316, 427, 400, 433, 449, 196,
	223, 330, 393, 424, 384, 309, 405, 406, 279, 383,
	254, 182, 287, 443, 194, 373, 211, 201, 187, 395,
	650, 208, 376, 0, 0, 451, 189, 415, 392, 306,
	276, 277, 188, 0, 357, 231, 252, 221, 325, 412,
	413, 220, 452, 198, 432, 191, 671, 431, 318, 408,
	416, 307, 298, 190, 414, 305, 297, 282, 242, 263,
	351, 292, 352, 264, 314, 313, 315, 0, 185, 0,
	389, 425, 453, 204, 205, 206, 686, 241, 245, 251,
	253, 259, 260, 267, 285, 329, 350, 348, 354, 768,
	403, 420, 428, 435, 441, 442, 444, 445, 446, 447,
	448, 659, 653, 652, 281, 290, 760, 798, 335, 366,
	209, 423, 386, 681, 685, 679, 680, 732, 733, 682,
	789, 790, 791, 454, 455, 456, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 0, 764, 675, 0, 683, 684, 0, 770, 779,
	780, 737, 178, 192, 286, 794, 355, 249, 450, 430,
	426, 661, 678, 225, 689, 0, 0, 702, 710, 711,
	723, 725, 726, 727, 728, 736, 744, 745, 747, 755,
	757, 759, 761, 766, 776, 797, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 269, 270, 273,
	278, 295, 300, 301, 302, 303, 319, 320, 321, 324,
	327, 328, 331, 333, 334, 337, 343, 344, 345, 346,
	347, 349, 356, 360, 368, 369, 370, 371, 372, 374,
	375, 379, 380, 381, 382, 390, 394, 410, 411, 422,
	434, 439, 258, 418, 440, 0, 294, 735, 742, 296,
	243, 261, 271, 750, 429, 391, 197, 362, 250, 186,
	215, 200, 222, 237, 240, 275, 304, 310, 339, 342,
	255, 234, 213, 359, 210, 377, 397, 398, 399, 401,
	308, 229, 402, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 326, 0, 0, 1455, 0, 539, 0,
	0, 0, 233, 538, 0, 0, 0, 284, 230, 0,
	1456, 340, 0, 184, 0, 378, 218, 293, 291, 407,
	244, 236, 232, 217, 268, 299, 338, 396, 332, 583,
	288, 0, 0, 387, 311, 0, 0, 0, 0, 0,
	574, 575, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 216, 183, 323, 388, 248, 0, 79, 0, 0,
	175, 176, 177, 561, 560, 550, 563, 564, 565, 566,
	0, 0, 207, 562, 214, 595, 567, 568, 569, 0,
	228, 272, 235, 227, 404, 0, 0, 0, 0, 199,
	0, 0, 0, 0, 0, 536, 554, 0, 582, 0,
	0, 0, 238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 551, 552,
	640, 0, 0, 0, 599, 0, 553, 0, 0, 545,
	546, 548, 547, 549, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 312, 0, 598, 0,
	0, 436, 0, 0, 596, 0, 0, 0, 0, 283,
	0, 280, 179, 195, 0, 0, 322, 361, 367, 0,
	0, 0, 219, 0, 365, 336, 421, 203, 246, 358,
	341, 363, 0, 0, 364, 289, 409, 353, 419, 437,
	438, 226, 316, 427, 400, 433, 449, 196, 223, 330,
	393, 424, 384, 309, 405, 406, 279, 383, 254, 182,
	287, 443, 194, 373, 211, 201, 187, 395, 417, 208,
	376, 0, 0, 451, 189, 415, 392, 306, 276, 277,
	188, 0, 357, 231, 252, 221, 325, 412, 413, 220,
	452, 198, 432, 191, 0, 431, 318, 408, 416, 307,
	298, 190, 414, 305, 297, 282, 242, 263, 351, 292,
	352, 264, 314, 313, 315, 0, 185, 0, 389, 425,
	453, 204, 205, 206, 0, 241, 245, 251, 253, 259,
	260, 267, 285, 329, 350, 348, 354, 0, 403, 420,
	428, 435, 441, 442, 444, 445, 446, 447, 448, 317,
	266, 385, 281, 290, 0, 0, 335, 366, 209, 423,
	386, 585, 597, 591, 592, 589, 590, 584, 588, 587,
	586, 454, 455, 456, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 0,
	600, 576, 577, 578, 579, 581, 0, 593, 594, 580,
	178, 192, 286, 0, 355, 249, 450, 430, 426, 0,
	0, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 181, 193, 202, 212, 224,
	239, 247, 257, 262, 265, 269, 270, 273, 278, 295,
	300, 301, 302, 303, 319, 320, 321, 324, 327, 328,
	331, 333, 334, 337, 343, 344, 345, 346, 347, 349,
	356, 360, 368, 369, 370, 371, 372, 374, 375, 379,
	380, 381, 382, 390, 394, 410, 411, 422, 434, 439,
	258, 418, 440, 0, 294, 0, 0, 296, 243, 261,
	271, 0, 429, 391, 197, 362, 250, 186, 215, 200,
	222, 237, 240, 275, 304, 310, 339, 342, 255, 234,
	213, 359, 210, 377, 397, 398, 399, 401, 308, 229,
	402, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 326, 0, 0, 0, 0, 539, 0, 0, 0,
	233, 538, 0, 0, 0, 284, 230, 0, 0, 340,
	0, 184, 0, 378, 218, 293, 291, 407, 244, 236,
	232, 217, 268, 299, 338, 396, 332, 583, 288, 0,
	0, 387, 311, 0, 0, 0, 0, 0, 574, 575,
	0, 0, 0, 0, 0, 0, 1572, 0, 274, 216,
	183, 323, 388, 248, 0, 79, 0, 0, 175, 176,
	177, 561, 560, 550, 563, 564, 565, 566, 0, 0,
	207, 562, 214, 595, 567, 568, 569, 1573, 228, 272,
	235, 227, 404, 0, 0, 0, 0, 199, 0, 0,
	0, 0, 0, 536, 554, 0, 582, 0, 0, 0,
	238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 551, 552, 0, 0,
	0, 0, 599, 0, 553, 0, 0, 545, 546, 548,
	547, 549, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 312, 0, 598, 0, 0, 436,
	0, 0, 596, 0, 0, 0, 0, 283, 0, 280,
	179, 195, 0, 0, 322, 361, 367, 0, 0, 0,
	219, 0, 365, 336, 421, 203, 246, 358, 341, 363,
	0, 0, 364, 289, 409, 353, 419, 437, 438, 226,
	316, 427, 400, 433, 449, 196, 223, 330, 393, 424,
	384, 309, 405, 406, 279, 383, 254, 182, 287, 443,
	194, 373, 211, 201, 187, 395, 417, 208, 376, 0,
	0, 451, 189, 415, 392, 306, 276, 277, 188, 0,
	357, 231, 252, 221, 325, 412, 413, 220, 452, 198,
	432, 191, 0, 431, 318, 408, 416, 307, 298, 190,
	414, 305, 297, 282, 242, 263, 351, 292, 352, 264,
	314, 313, 315, 0, 185, 0, 389, 425, 453, 204,
	205, 206, 0, 241, 245, 251, 253, 259, 260, 267,
	285, 329, 350, 348, 354, 0, 403, 420, 428, 435,
	441, 442, 444, 445, 446, 447, 448, 317, 266, 385,
	281, 290, 0, 0, 335, 366, 209, 423, 386, 585,
	597, 591, 592, 589, 590, 584, 588, 587, 586, 454,
	455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 0, 600, 576,
	577, 578, 579, 581, 0, 593, 594, 580, 178, 192,
	286, 0, 355, 249, 450, 430, 426, 0, 0, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 181, 193, 202, 212, 224, 239, 247,
	257, 262, 265, 269, 270, 273, 278, 295, 300, 301,
	302, 303, 319, 320, 321, 324, 327, 328, 331, 333,
	334, 337, 343, 344, 345, 346, 347, 349, 356, 360,
	368, 369, 370, 371, 372, 374, 375, 379, 380, 381,
	382, 390, 394, 410, 411, 422, 434, 439, 258, 418,
	440, 0, 294, 0, 0, 296, 243, 261, 271, 0,
	429, 391, 197, 362, 250, 186, 215, 200, 222, 237,
	240, 275, 304, 310, 339, 342, 255, 234, 213, 359,
	210, 377, 397, 398, 399, 401, 308, 229, 70, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 539, 0, 0, 0, 233,
	538, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 583, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 79, 0, 0, 175, 176, 177,
	561, 560, 550, 563, 564, 565, 566, 0, 0, 207,
	562, 214, 595, 567, 568, 569, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 536, 554, 0, 582, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 552, 0, 0, 0,
	0, 599, 0, 553, 0, 0, 545, 546, 548, 547,
	549, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 598, 0, 0, 436, 0,
	0, 596, 0, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 585, 597,
	591, 592, 589, 590, 584, 588, 587, 586, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 600, 576, 577,
	578, 579, 581, 0, 593, 594, 580, 178, 192, 286,
	78, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 539, 0, 0, 0, 233, 538, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 583, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 79, 0, 1121, 175, 176, 177, 561, 560,
	550, 563, 564, 565, 566, 0, 0, 207, 562, 214,
	595, 567, 568, 569, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	536, 554, 0, 582, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 551, 552, 0, 0, 0, 0, 599,
	0, 553, 0, 0, 545, 546, 548, 547, 549, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 598, 0, 0, 436, 0, 0, 596,
	0, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 0, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 585, 597, 591, 592,
	589, 590, 584, 588, 587, 586, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 600, 576, 577, 578, 579,
	581, 0, 593, 594, 580, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 539, 0, 0, 0, 233, 538, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 583, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	79, 0, 0, 175, 176, 177, 561, 560, 550, 563,
	564, 565, 566, 0, 0, 207, 562, 214, 595, 567,
	568, 569, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 536, 554,
	0, 582, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 551, 552, 640, 0, 0, 0, 599, 0, 553,
	0, 0, 545, 546, 548, 547, 549, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 598, 0, 0, 436, 0, 0, 596, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 585, 597, 591, 592, 589, 590,
	584, 588, 587, 586, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 600, 576, 577, 578, 579, 581, 0,
	593, 594, 580, 178, 192, 286, 0, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 539,
	0, 0, 0, 233, 538, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	583, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 79, 0,
	0, 175, 176, 177, 561, 1470, 550, 563, 564, 565,
	566, 0, 0, 207, 562, 214, 595, 567, 568, 569,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 536, 554, 0, 582,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 551,
	552, 640, 0, 0, 0, 599, 0, 553, 0, 0,
	545, 546, 548, 547, 549, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 312, 0, 598,
	0, 0, 436, 0, 0, 596, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 0, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 585, 597, 591, 592, 589, 590, 584, 588,
	587, 586, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 600, 576, 577, 578, 579, 581, 0, 593, 594,
	580, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 258, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 539, 0, 0,
	0, 233, 538, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 583, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 574,
	575, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 79, 0, 0, 175,
	176, 177, 561, 1467, 550, 563, 564, 565, 566, 0,
	0, 207, 562, 214, 595, 567, 568, 569, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 536, 554, 0, 582, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 551, 552, 640,
	0, 0, 0, 599, 0, 553, 0, 0, 545, 546,
	548, 547, 549, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 598, 0, 0,
	436, 0, 0, 596, 0, 0, 0, 0, 283, 0,
	280, 179, 195, 0, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	585, 597, 591, 592, 589, 590, 584, 588, 587, 586,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 600,
	576, 577, 578, 579, 581, 0, 593, 594, 580, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 539, 0, 0, 0, 233,
	538, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 583, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 574, 575, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 79, 0, 0, 175, 176, 177,
	561, 560, 550, 563, 564, 565, 566, 0, 0, 207,
	562, 214, 595, 567, 568, 569, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 536, 554, 0, 582, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 552, 0, 0, 0,
	0, 599, 0, 553, 0, 0, 545, 546, 548, 547,
	549, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 598, 0, 0, 436, 0,
	0, 596, 0, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 585, 597,
	591, 592, 589, 590, 584, 588, 587, 586, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 600, 576, 577,
	578, 579, 581, 0, 593, 594, 580, 178, 192, 286,
	0, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 583, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 574, 575, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 79, 0, 0, 175, 176, 177, 561, 560,
	550, 563, 564, 565, 566, 0, 0, 207, 562, 214,
	595, 567, 568, 569, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 554, 0, 582, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 551, 552, 0, 0, 0, 0, 599,
	0, 553, 0, 0, 545, 546, 548, 547, 549, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 598, 0, 0, 436, 0, 0, 596,
	0, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 2339, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 585, 597, 591, 592,
	589, 590, 584, 588, 587, 586, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 600, 576, 577, 578, 579,
	581, 0, 593, 594, 580, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 583, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 574, 575, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	79, 0, 1121, 175, 176, 177, 561, 560, 550, 563,
	564, 565, 566, 0, 0, 207, 562, 214, 595, 567,
	568, 569, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 554,
	0, 582, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 551, 552, 0, 0, 0, 0, 599, 0, 553,
	0, 0, 545, 546, 548, 547, 549, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 598, 0, 0, 436, 0, 0, 596, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 585, 597, 591, 592, 589, 590,
	584, 588, 587, 586, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 600, 576, 577, 578, 579, 581, 0,
	593, 594, 580, 178, 192, 286, 0, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	583, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 79, 0,
	0, 175, 176, 177, 561, 560, 550, 563, 564, 565,
	566, 0, 0, 207, 562, 214, 595, 567, 568, 569,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 554, 0, 582,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 551,
	552, 0, 0, 0, 0, 599, 0, 553, 0, 0,
	545, 546, 548, 547, 549, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 312, 0, 598,
	0, 0, 436, 0, 0, 596, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 0, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 585, 597, 591, 592, 589, 590, 584, 588,
	587, 586, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 600, 576, 577, 578, 579, 581, 0, 593, 594,
	580, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 258, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 0, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1020, 1019, 1029, 1030, 1022, 1023, 1024,
	1025, 1026, 1027, 1028, 1021, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	280, 179, 195, 0, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 0, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 0, 0, 845, 436, 0,
	0, 0, 0, 0, 842, 843, 283, 808, 280, 179,
	195, 836, 840, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 286,
	0, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 1141, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 0, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 1143,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 1009, 1010, 1008,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 1011, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 0, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 70, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 284, 230, 0, 0, 340, 0, 184, 0, 378,
	218, 293, 291, 407, 244, 236, 232, 217, 268, 299,
	338, 396, 332, 0, 288, 0, 0, 387, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 216, 183, 323, 388, 248,
	0, 79, 0, 1121, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 272, 235, 227, 404, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	312, 0, 0, 0, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 283, 0, 280, 179, 195, 0, 0,
	322, 361, 367, 0, 0, 0, 219, 0, 365, 336,
	421, 203, 246, 358, 341, 363, 0, 0, 364, 289,
	409, 353, 419, 437, 438, 226, 316, 427, 400, 433,
	449, 196, 223, 330, 393, 424, 384, 309, 405, 406,
	279, 383, 254, 182, 287, 443, 194, 373, 211, 201,
	187, 395, 417, 208, 376, 0, 0, 451, 189, 415,
	392, 306, 276, 277, 188, 0, 357, 231, 252, 221,
	325, 412, 413, 220, 452, 198, 432, 191, 0, 431,
	318, 408, 416, 307, 298, 190, 414, 305, 297, 282,
	242, 263, 351, 292, 352, 264, 314, 313, 315, 0,
	185, 0, 389, 425, 453, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 285, 329, 350, 348,
	354, 0, 403, 420, 428, 435, 441, 442, 444, 445,
	446, 447, 448, 317, 266, 385, 281, 290, 0, 0,
	335, 366, 209, 423, 386, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 454, 455, 456, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 286, 78, 355, 249,
	450, 430, 426, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 269,
	270, 273, 278, 295, 300, 301, 302, 303, 319, 320,
	321, 324, 327, 328, 331, 333, 334, 337, 343, 344,
	345, 346, 347, 349, 356, 360, 368, 369, 370, 371,
	372, 374, 375, 379, 380, 381, 382, 390, 394, 410,
	411, 422, 434, 439, 258, 418, 440, 0, 294, 0,
	0, 296, 243, 261, 271, 0, 429, 391, 197, 362,
	250, 186, 215, 200, 222, 237, 240, 275, 304, 310,
	339, 342, 255, 234, 213, 359, 210, 377, 397, 398,
	399, 401, 308, 229, 70, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 0, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	79, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 286, 78, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 1521, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	0, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 1313, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 312, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 1519, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 258, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 0, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 283, 808,
	280, 179, 195, 806, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 1521, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 0, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 1313, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 286,
	0, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 0, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 0, 0, 1121, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 0, 0, 0, 436, 0, 0, 0,
	2222, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 0, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 0, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 1773,
	0, 0, 1774, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 286, 0, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 1163, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	0, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 1162, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 312, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 0, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 258, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 0, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 0, 0, 0,
	436, 0, 0, 0, 2319, 0, 0, 0, 283, 0,
	280, 179, 195, 0, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 0, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 0, 0, 0, 436, 0,
	0, 0, 2222, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 286,
	0, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 0, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 79, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 0, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 0, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 286, 0, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 1561, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	0, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 312, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 0, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 258, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 0, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 1143, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	280, 179, 195, 0, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 0, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 286,
	1404, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	1285, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 0, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 0, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 1283, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 0, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 286, 0, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 1281, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	0, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 312, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 0, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 258, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 1279, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 0, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	280, 179, 195, 0, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 1277, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 0, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 286,
	0, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	1273, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 0, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 0, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 1271, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 0, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 286, 0, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 1269, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	0, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 312, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 0, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 258, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 0, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 1244, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	280, 179, 195, 0, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 1147, 233,
	0, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 0, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 286,
	0, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 402, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 284, 230, 0, 0, 340, 0, 184, 0,
	378, 218, 293, 291, 407, 244, 236, 232, 217, 268,
	299, 338, 396, 332, 0, 288, 0, 0, 387, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 216, 183, 323, 388,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 985,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 272, 235, 227, 404,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 312, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 283, 0, 280, 179, 195, 0,
	0, 322, 361, 367, 0, 0, 0, 219, 0, 365,
	336, 421, 203, 246, 358, 341, 363, 0, 0, 364,
	289, 409, 353, 419, 437, 438, 226, 316, 427, 400,
	433, 449, 196, 223, 330, 393, 424, 384, 309, 405,
	406, 279, 383, 254, 182, 287, 443, 194, 373, 211,
	201, 187, 395, 417, 208, 376, 0, 0, 451, 189,
	415, 392, 306, 276, 277, 188, 0, 357, 231, 252,
	221, 325, 412, 413, 220, 452, 198, 432, 191, 0,
	431, 318, 408, 416, 307, 298, 190, 414, 305, 297,
	282, 242, 263, 351, 292, 352, 264, 314, 313, 315,
	0, 185, 0, 389, 425, 453, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 285, 329, 350,
	348, 354, 0, 403, 420, 428, 435, 441, 442, 444,
	445, 446, 447, 448, 317, 266, 385, 281, 290, 0,
	0, 335, 366, 209, 423, 386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 454, 455, 456, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 286, 0, 355,
	249, 450, 430, 426, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	269, 270, 273, 278, 295, 300, 301, 302, 303, 319,
	320, 321, 324, 327, 328, 331, 333, 334, 337, 343,
	344, 345, 346, 347, 349, 356, 360, 368, 369, 370,
	371, 372, 374, 375, 379, 380, 381, 382, 390, 394,
	410, 411, 422, 434, 439, 258, 418, 440, 0, 294,
	0, 0, 296, 243, 261, 271, 0, 429, 391, 197,
	362, 250, 186, 215, 200, 222, 237, 240, 275, 304,
	310, 339, 342, 255, 234, 213, 359, 210, 377, 397,
	398, 399, 401, 308, 229, 402, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	284, 230, 0, 0, 340, 0, 184, 0, 378, 218,
	293, 291, 407, 244, 236, 232, 217, 268, 299, 338,
	396, 332, 0, 288, 0, 0, 387, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 216, 183, 323, 388, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 272, 235, 227, 404, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 312,
	0, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 283, 0, 280, 179, 195, 0, 0, 322,
	361, 367, 0, 0, 0, 219, 0, 365, 336, 421,
	203, 246, 358, 341, 363, 0, 0, 364, 289, 409,
	353, 419, 437, 438, 226, 316, 427, 400, 433, 449,
	196, 223, 330, 393, 424, 384, 309, 405, 406, 279,
	383, 254, 182, 287, 443, 194, 373, 211, 201, 187,
	395, 417, 208, 376, 0, 0, 451, 189, 415, 392,
	306, 276, 277, 188, 0, 357, 231, 252, 221, 325,
	412, 413, 220, 452, 198, 432, 191, 0, 431, 318,
	408, 416, 307, 298, 190, 414, 305, 297, 282, 242,
	263, 351, 292, 352, 264, 314, 313, 315, 0, 185,
	0, 389, 425, 453, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 285, 329, 350, 348, 354,
	0, 403, 420, 428, 435, 441, 442, 444, 445, 446,
	447, 448, 317, 266, 385, 281, 290, 0, 0, 335,
	366, 209, 423, 386, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 454, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 192, 286, 0, 355, 249, 450,
	430, 426, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 622, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 269, 270,
	273, 278, 295, 300, 301, 302, 303, 319, 320, 321,
	324, 327, 328, 331, 333, 334, 337, 343, 344, 345,
	346, 347, 349, 356, 360, 368, 369, 370, 371, 372,
	374, 375, 379, 380, 381, 382, 390, 394, 410, 411,
	422, 434, 439, 258, 418, 440, 0, 294, 0, 0,
	296, 243, 261, 271, 0, 429, 391, 197, 362, 250,
	186, 215, 200, 222, 237, 240, 275, 304, 310, 339,
	342, 255, 234, 213, 359, 210, 377, 397, 398, 399,
	401, 308, 229, 402, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 284, 230,
	0, 0, 340, 0, 184, 0, 378, 218, 293, 291,
	407, 244, 236, 232, 217, 268, 299, 338, 396, 332,
	0, 288, 0, 0, 387, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 216, 183, 323, 388, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 272, 235, 227, 404, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 0, 256, 0, 312, 0, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	283, 0, 280, 179, 195, 0, 0, 322, 361, 367,
	0, 0, 0, 219, 0, 365, 336, 421, 203, 246,
	358, 341, 363, 0, 0, 364, 289, 409, 353, 419,
	437, 438, 226, 316, 427, 400, 433, 449, 196, 223,
	330, 393, 424, 384, 309, 405, 406, 279, 383, 254,
	182, 287, 443, 194, 373, 211, 201, 187, 395, 417,
	208, 376, 0, 0, 451, 189, 415, 392, 306, 276,
	277, 188, 0, 357, 231, 252, 221, 325, 412, 413,
	220, 452, 198, 432, 191, 0, 431, 318, 408, 416,
	307, 298, 190, 414, 305, 297, 282, 242, 263, 351,
	292, 352, 264, 314, 313, 315, 0, 185, 0, 389,
	425, 453, 204, 205, 206, 0, 241, 245, 251, 253,
	259, 260, 267, 285, 329, 350, 348, 354, 0, 403,
	420, 428, 435, 441, 442, 444, 445, 446, 447, 448,
	317, 266, 385, 281, 290, 0, 0, 335, 366, 209,
	423, 386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 454, 455, 456, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 192, 286, 0, 355, 249, 450, 430, 426,
	0, 0, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 269, 270, 273, 278,
	295, 300, 301, 302, 303, 319, 320, 321, 324, 327,
	328, 331, 333, 334, 337, 343, 344, 345, 346, 347,
	349, 356, 360, 368, 369, 370, 371, 372, 374, 375,
	379, 380, 381, 382, 390, 394, 410, 411, 422, 434,
	439, 526, 418, 440, 0, 294, 0, 0, 296, 243,
	261, 271, 0, 429, 391, 197, 362, 250, 186, 215,
	200, 222, 237, 240, 275, 304, 310, 339, 342, 255,
	234, 213, 359, 210, 377, 397, 398, 399, 401, 308,
	229, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 284, 230, 0, 0,
	340, 0, 184, 0, 378, 218, 293, 291, 407, 244,
	236, 232, 217, 268, 299, 338, 396, 332, 0, 288,
	0, 0, 387, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	216, 183, 323, 388, 248, 0, 0, 0, 0, 175,
	176, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 214, 0, 0, 0, 0, 0, 228,
	272, 235, 227, 404, 0, 0, 0, 0, 199, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 312, 0, 0, 474, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 283, 0,
	280, 179, 195, 0, 0, 322, 361, 367, 0, 0,
	0, 219, 0, 365, 336, 421, 203, 246, 358, 341,
	363, 0, 0, 364, 289, 409, 353, 419, 437, 438,
	226, 316, 427, 400, 433, 449, 196, 223, 330, 393,
	424, 384, 309, 405, 406, 279, 383, 254, 182, 287,
	443, 194, 373, 211, 201, 187, 395, 417, 208, 376,
	0, 0, 451, 189, 415, 392, 306, 276, 277, 188,
	0, 357, 231, 252, 221, 325, 412, 413, 220, 452,
	198, 432, 191, 0, 431, 318, 408, 416, 307, 298,
	190, 414, 305, 297, 282, 242, 263, 351, 292, 352,
	264, 314, 313, 315, 0, 185, 0, 389, 425, 453,
	204, 205, 206, 0, 241, 245, 251, 253, 259, 260,
	267, 285, 329, 350, 348, 354, 0, 403, 420, 428,
	435, 441, 442, 444, 445, 446, 447, 448, 317, 266,
	385, 281, 290, 0, 0, 335, 366, 209, 423, 386,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	192, 286, 0, 355, 249, 450, 430, 426, 0, 0,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 269, 270, 273, 278, 295, 300,
	301, 302, 303, 319, 320, 321, 324, 327, 328, 331,
	333, 334, 337, 343, 344, 345, 346, 347, 349, 356,
	360, 368, 369, 370, 371, 372, 374, 375, 379, 380,
	381, 382, 390, 394, 410, 411, 422, 434, 439, 258,
	418, 440, 0, 294, 0, 0, 296, 243, 261, 271,
	0, 429, 391, 197, 362, 250, 186, 215, 200, 222,
	237, 240, 275, 304, 310, 339, 342, 255, 234, 213,
	359, 210, 377, 397, 398, 399, 401, 308, 229, 402,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 233,
	0, 0, 0, 0, 284, 230, 0, 0, 340, 0,
	184, 0, 378, 218, 293, 291, 407, 244, 236, 232,
	217, 268, 299, 338, 396, 332, 0, 288, 0, 0,
	387, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 216, 183,
	323, 388, 248, 0, 0, 0, 0, 175, 176, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 207,
	0, 214, 0, 0, 0, 0, 0, 228, 272, 235,
	227, 404, 0, 0, 0, 0, 199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 312, 0, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 283, 0, 280, 179,
	195, 0, 0, 322, 361, 367, 0, 0, 0, 219,
	0, 365, 336, 421, 203, 246, 358, 341, 363, 0,
	0, 364, 289, 409, 353, 419, 437, 438, 226, 316,
	427, 400, 433, 449, 196, 223, 330, 393, 424, 384,
	309, 405, 406, 279, 383, 254, 182, 287, 443, 194,
	373, 211, 201, 187, 395, 417, 208, 376, 0, 0,
	451, 189, 415, 392, 306, 276, 277, 188, 0, 357,
	231, 252, 221, 325, 412, 413, 220, 452, 198, 432,
	191, 0, 431, 318, 408, 416, 307, 298, 190, 414,
	305, 297, 282, 242, 263, 351, 292, 352, 264, 314,
	313, 315, 0, 185, 0, 389, 425, 453, 204, 205,
	206, 0, 241, 245, 251, 253, 259, 260, 267, 285,
	329, 350, 348, 354, 0, 403, 420, 428, 435, 441,
	442, 444, 445, 446, 447, 448, 317, 266, 385, 281,
	290, 0, 0, 335, 366, 209, 423, 386, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 454, 455,
	456, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 178, 192, 286,
	0, 355, 249, 450, 430, 426, 0, 0, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 269, 270, 273, 278, 295, 300, 301, 302,
	303, 319, 320, 321, 324, 327, 328, 331, 333, 334,
	337, 343, 344, 345, 346, 347, 349, 356, 360, 368,
	369, 370, 371, 372, 374, 375, 379, 380, 381, 382,
	390, 394, 410, 411, 422, 434, 439, 258, 418, 440,
	0, 294, 0, 0, 296, 243, 261, 271, 0, 429,
	391, 197, 362, 250, 186, 215, 200, 222, 237, 240,
	275, 304, 310, 339, 342, 255, 234, 213, 359, 210,
	377, 397, 398, 399, 401, 308, 229, 70, 35, 72,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 76, 0, 0, 0,
	38, 64, 65, 0, 62, 66, 0, 0, 0, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 79, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 41, 44, 47, 46, 49, 0,
	61, 0, 0, 67, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 50, 75, 74, 0, 0,
	59, 60, 48, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 53, 0, 54, 55, 56, 57, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
}

var yyPact = [...]int{
	31341, -1000, -353, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1606, 1639, -1000, -1000, -1000, 1726, -1000, 643,
	1358, -1000, 1599, 2540, -1000, 30842, 452, -1000, 30344, 445,
	69, 30842, -1000, 150, -1000, 122, 30842, 136, 29846, -1000,
	-1000, -274, 12912, 1548, 3, 2, 30842, -1000, 1704, 1404,
	-1000, 220, -1000, -1000, -1000, -1000, -1000, -1000, 29348, -1000,
	-1000, -1000, 1619, 1589, 1731, 572, 1541, -1000, 1661, 1404,
	-1000, 12912, 1696, 1650, 11418, -1000, 390, -1000, -1000, 8927,
	-1000, -1000, 17894, 30842, 30842, 336, -1000, 1599, -1000, -1000,
	313, -1000, 326, 1311, -1000, 1308, -1000, 619, 435, 322,
	403, 401, 321, 320, 319, 318, 315, 312, 309, 307,
	330, -1000, 618, 618, -167, -168, 2375, 379, 379, 379,
	410, 1570, 1569, -1000, 556, -1000, 618, 618, 308, 618,
	618, 618, 618, 284, 272, 618, 618, 618, 618, 618,
	618, 618, 618, 618, 618, 618, 618, 618, 618, 618,
	226, 1599, 266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 30842, 131, 30842, -1000, 529, 30842, 700, 700,
	21, 700, 700, 700, 700, 156, 576, 1, -1000, 138,
	263, 165, 260, 690, 149, 92, -1000, -1000, 254, 690,
	1043, 579, 111, -1000, 700, 6927, 6927, 6927, -1000, 1582,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 408, -1000,
	-1000, -1000, -1000, 30842, 28850, 201, 631, -1000, -1000, -1000,
	116, -1000, -1000, 1147, 974, -1000, 12912, 2804, 1135, 1135,
	-1000, -1000, 474, -1000, -1000, 14406, 14406, 14406, 14406, 14406,
	-1000, 14406, 14406, 14406, 14406, 14406, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1135, 527, -1000, -1000, 1135, 1135, 1135, 1135, 1135, 1135,
	1135, 1135, 12912, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
	1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135, 1135,
	1135, -1000, -1000, 10422, -1000, 30842, -1000, 1135, 189, 1661,
	1404, -1000, 1704, 1674, 220, -1000, 1642, 1164, 1134, 1011,
	1404, 1272, 30842, -1000, 1317, -1000, -1000, -1000, 1470, 913,
	1042, -1000, -1000, -1000, -1000, 1125, 12912, -1000, -1000, 1721,
	-1000, 15900, 523, 808, 28352, -1000, 390, 390, 1305, 8427,
	-17, -1000, -1000, -1000, 630, 19886, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1582, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1264, 30842, -1000, -1000, 4304, 1019, -1000, 1356, -1000,
	1240, -1000, 1330, 1360, 443, 1019, 432, 430, 429, -1000,
	-92, -1000, -1000, -1000, -1000, -1000, 618, 618, 316, 2540,
	4310, -1000, -1000, -1000, 27854, 1354, 1019, -1000, 1353, -1000,
	722, 444, 484, 484, 1019, -1000, -1000, 30842, 1019, 718,
	708, 30842, 30842, -1000, 27356, -1000, 26858, 26360, 902, 30842,
	25862, 25364, 24866, 24368, 23870, -1000, 1495, -1000, 1365, -1000,
	-1000, -1000, 30842, 30842, 30842, 253, -1000, -1000, 30842, 1019,
	-1000, -1000, 900, 899, 618, 618, 897, 1041, 1038, 1032,
	618, 618, 893, 1030, 21878, 232, 891, 885, 863, 896,
	1026, 158, 892, 890, 861, 30842, 1351, 30842, -1000, 247,
	604, 344, 629, 1599, 1544, 1301, 399, 439, 1019, 382,
	382, -1000, 7427, -1000, -1000, 1024, 12912, -1000, 691, 690,
	690, -1000, -1000, -1000, -1000, -1000, -1000, 700, 30842, 691,
	-1000, -1000, -1000, 690, 700, 30842, 700, 700, 700, 700,
	690, 690, 690, 700, 30842, 30842, 30842, 30842, 30842, 30842,
	30842, 30842, 30842, 6927, 6927, 6927, 579, 700, -279, -1000,
	1007, -1000, 1433, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 126, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -70, 1292, 23372, -1000, -280, -284, -285, -288, -1000,
	-1000, -1000, -292, -297, -1000, -1000, -1000, 12912, 12912, 12912,
	12912, 796, 582, 14406, 831, 638, 14406, 14406, 14406, 14406,
	14406, 14406, 14406, 14406, 14406, 14406, 14406, 14406, 14406, 14406,
	14406, 696, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1019, -1000, 1390, 1390, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 14904, 9425, 7427, 11418, 11418, 12912, 12912,
	12414, 11916, 11418, 1586, 660, 974, 30842, -1000, 1011, -1000,
	-1000, 13908, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30842, 30842, 57, 11418, 11418, 11418,
	11418, 11418, 1130, 1190, 1225, -1000, 1288, -1000, -139, 17396,
	12912, 984, -1000, -1000, -1000, 1661, -1000, 1661, 1130, 1552,
	1475, 11418, -1000, -1000, 1552, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1128, -1000, 30842, 1272, 1644, 30842, 1467,
	979, 253, -1000, 12912, 12912, 1269, -1000, 878, 30842, -1000,
	-1000, 22874, -1000, -1000, 6427, -1000, 306, 30842, -1000, 21380,
	22376, 7927, -17, -1000, 7927, 1185, -1000, -15, -22, 9923,
	491, -1000, -1000, -1000, 2375, 15402, 1105, 1562, 46, -1000,
	-1000, -1000, 1330, -1000, 1330, 1330, 1330, 1330, 253, 253,
	253, 253, -1000, -1000, -1000, -1000, -1000, 1349, 1348, -1000,
	1330, 1330, 1330, 1330, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1347, 1347, 1347, 1331, 1331, 369, -1000, 12912, 244,
	30842, 1615, 854, 247, 383, 1377, 1019, 1019, 1019, 383,
	-1000, 962, 957, -1000, 1261, -1000, -1000, 1691, -1000, -1000,
	636, 763, 758, 590, 30842, 213, 305, -1000, 365, -1000,
	30842, 1019, 707, 484, 1019, -1000, 1019, -1000, -1000, -1000,
	-1000, 514, -1000, -1000, 1019, 1249, -1000, 1270, 768, 745,
	765, 701, 1249, -1000, -1000, -143, 1249, -1000, 1249, -1000,
	1249, -1000, 1249, -1000, 1249, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 589, 30842, 213, 696, -1000, 396, -1000,
	-1000, 696, 696, -1000, -1000, -1000, -1000, 978, 963, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -334, 30842, -1000, 214,
	625, 288, 325, 289, 30842, 198, 1653, 230, 271, 30842,
	30842, 382, 1417, 30842, 1626, 30842, -1000, -1000, -1000, -1000,
	974, 30842, -1000, -1000, 700, 700, -1000, -1000, 30842, 700,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 700, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 30842, 30842, -1000, -1000,
	-1000, -1000, -1000, 17, -29, 208, -1000, -1000, -1000, -1000,
	-1000, 1657, -1000, 974, 582, 695, 687, -1000, -1000, 840,
	-1000, -1000, 2843, -1000, -1000, -1000, -1000, 831, 14406, 14406,
	14406, 1172, 2843, 3147, 934, 2320, 539, 694, 694, 543,
	543, 543, 543, 543, 738, 738, -1000, -1000, -1000, -1000,
	1011, -1000, -1000, -1000, 1011, 11418, 11418, 1243, -1000, 1135,
	511, -1000, 1208, 1208, 918, 993, 670, 1720, 1208, 637,
	1719, 1208, 1208, 11418, -1000, -1000, 669, -1000, 12912, 1011,
	-1000, 1327, 1211, 1202, 1718, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1208, 1011, 1011, 1208,
	1208, 1011, -1000, 30842, -1000, -271, -1000, -51, 498, 1135,
	-1000, 21878, 1011, 1147, -1000, -1000, -1000, -1000, -1000, 19388,
	1332, 1552, -1000, -1000, 1135, 1223, -1000, -1000, 253, 60,
	784, 974, 974, 12912, -1000, -1000, -1000, -1000, -1000, -1000,
	509, 282, 1135, -1000, 1338, 1528, -1000, -1000, -1000, 1638,
	16898, 30842, 1322, 1318, -1000, 505, -1000, 1185, -17, -36,
	-1000, -1000, -1000, -1000, 974, -1000, 862, -1000, 1066, -1000,
	351, -1000, -1000, -1000, -1000, 676, 1637, 1558, 22, -1000,
	-1000, -1000, 253, 253, -1000, -1000, 491, 491, 491, 491,
	951, 951, -1000, -1000, -1000, -1000, -1000, 853, -1000, -1000,
	-1000, 841, -1000, -1000, 1006, 1370, 244, -1000, -1000, 618,
	944, 1564, 30842, -1000, -1000, 1096, 214, 30842, 677, 1414,
	-1000, 1377, 1377, 1377, 30842, -1000, -1000, -1000, -1000, 3799,
	30842, 1221, -1000, 168, -1000, 1092, 30842, -1000, 1217, 1344,
	1019, 1019, -1000, -1000, 7427, -1000, 30842, 1135, -1000, -1000,
	-1000, -1000, 438, 1598, 1590, 213, 168, 491, 1019, -1000,
	-1000, -1000, -1000, -1000, -337, 1215, 421, 223, 191, 30842,
	30842, 30842, 30842, 30842, 466, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 268, 395, -1000, 30842, 30842, 492, -1000,
	-1000, -1000, 690, -1000, -1000, 690, -1000, -1000, -1000, -1000,
	-1000, 1580, 30842, -32, -312, -1000, -309, -1000, -1000, -1000,
	-1000, 1172, 2843, 3132, -1000, 14406, 14406, -1000, -1000, 1208,
	1208, 11418, 11418, 7427, -1000, -1000, 404, 696, 404, 14406,
	14406, -1000, 14406, 14406, -1000, -135, 1192, 605, -1000, 12912,
	903, -1000, -1000, 14406, 14406, 12912, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 427, 424, 405, 30842, -1000,
	-1000, 1656, -1000, 1505, 1491, 1706, 1710, -1000, 21380, 1552,
	-1000, -1000, 30842, -266, -1000, 1538, 1531, -1000, -1000, -1000,
	-1000, 5927, 1388, 30842, 1135, -1000, 16399, 30842, 30842, 21380,
	21380, 21380, 21380, 21380, -1000, 1458, 1455, -1000, 1447, 1444,
	1454, 30842, -1000, 1200, 1011, 1674, 16898, 18392, 1100, 21380,
	-1000, -1000, 21380, 30842, 5427, -1000, -1000, -47, -39, -1000,
	-1000, -1000, 2375, -1000, -1000, -1000, -1000, 795, 14406, 1730,
	-1000, 942, -1000, -1000, 704, 699, -1000, 30842, 1335, -1000,
	-1000, -1000, 491, 491, -1000, -1000, -1000, -1000, 1197, -1000,
	1195, 1183, 1189, 83, -1000, 1337, 1579, 618, 618, -1000,
	837, -1000, 1019, -1000, -1000, 419, -1000, 1623, 30842, 1387,
	1384, 1383, -1000, 1689, 1170, 30842, -1000, -1000, 30842, -1000,
	1490, 244, 30842, -1000, -1000, -1000, -1000, 305, 30842, -1000,
	1390, 168, -1000, -1000, -1000, -1000, -1000, -1000, 30842, 249,
	-1000, 1334, 937, -1000, 1368, -1000, -1000, -1000, -1000, 166,
	287, -1000, 30842, 470, 1370, 30842, -1000, -1000, -1000, 700,
	700, -1000, -1000, 1576, -1000, 1019, -1000, 14406, 2843, 2843,
	-1000, -1000, -1000, 1011, -1000, 1011, 1330, 1330, -1000, 1330,
	1331, -1000, 1330, 88, 1330, 66, 1011, 1011, 3100, 2858,
	2635, 2542, 1135, -100, -1000, 974, 12912, 2252, 916, 775,
	1135, 1135, 1135, 1180, 30842, -1000, -1000, -1000, -1000, 1710,
	1705, 12912, 1175, -1000, -1000, 60, 285, -1000, 1530, 1531,
	-1000, 1685, 1533, 1683, -1000, -1000, -1000, 1604, 1089, -1000,
	606, 1136, -1000, -1000, 10920, 1187, 1481, 502, 1180, 1166,
	1528, 1376, 1382, 1473, -1000, -1000, -1000, -1000, 1448, -1000,
	1446, -1000, -1000, 1317, -1000, -1000, 1190, 306, 21380, 1132,
	1132, -1000, 489, -1000, -1000, -1000, -1000, -1000, -1000, 2843,
	104, -1000, -1000, -1000, 1321, 14406, -1000, -1000, 253, 940,
	253, 821, -1000, 810, -1000, -1000, -215, -1000, -1000, 1340,
	1457, -1000, -1000, 30842, -1000, -1000, 30842, 30842, 30842, 30842,
	-1000, -1000, 295, -1000, 1178, 1103, -1000, -170, -1000, -1000,
	1317, -1000, -1000, -1000, 1075, -1000, -156, 1019, 30842, 30842,
	30842, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2843,
	-1000, -1000, -1000, 345, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14406, 14406, 14406, 14406, 14406, 1661, 935, 974,
	14406, 14406, -1000, 18890, 20882, 20882, 18392, -1000, 1705, 1701,
	1680, 974, 1513, 1519, 1519, 1530, -1000, 1679, 1677, -1000,
	930, 1676, 919, 673, -1000, 30842, 12912, 1135, -1000, 283,
	30842, 1135, 30842, -1000, 1675, -1000, -1000, 12912, 1320, -1000,
	12912, -1000, -1000, -1000, -1000, -1000, 1710, 1132, -1000, -1000,
	549, -1000, 30842, 1355, 491, -1000, 491, 1056, 1054, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1317, -1000, -1000,
	-1000, 1170, 292, 339, -1000, 305, -1000, -177, -180, 1633,
	-1000, -1000, 7427, -1000, -1000, 1313, 1372, -1000, -1000, -1000,
	1327, 1327, 1327, 1327, 206, 1011, -1000, 1327, 1327, 1087,
	-1000, -1000, -1000, 1087, 1087, 498, 1701, -1000, 12912, 12912,
	1478, 805, -1000, -1000, -1000, -1000, 914, 909, -1000, 879,
	-1000, 1728, -1000, 974, -1000, 1135, -1000, 477, 1136, -1000,
	1661, 974, 30842, 974, 1675, -1000, 1074, -1000, -1000, -1000,
	-1000, -1000, 1631, 1135, -1000, -1000, -1000, -1000, 220, 1153,
	-1000, 591, 30842, 30842, -1000, -1000, -1000, -1000, 1011, 207,
	-159, -1000, -1000, -1000, 20384, -1000, -1000, -1000, -1000, -1000,
	974, 1147, -1000, 803, -1000, -1000, -1000, -1000, -1000, 30842,
	1136, 30842, -1000, 1053, 1661, 1381, 598, 220, 13410, -154,
	7427, 4927, 1050, -1000, -1000, 1466, -140, -162, -1000, -1000,
	-1000, -1000, 1127, -1000, -1000, -1000, 1380, -1000, 1717, -1000,
	-1000, -1000, 789, 842, -1000, -1000, -1000, -154, 1327, 1011,
	-1000, -28, -1000, -1000, -1000, -1000, -1000, 1368, -1000, 1465,
	-1000, -1000, 1724, 512, 512, -1000, -1000, -1000, -1000, -1000,
	367, -1000, -1000, -156, -157, -1000, -1000, -1000, 350, 877,
	-1000, 245, -1000, -160, -1000, -1000, -1000, -1000, -164, -1000,
}

var yyPgo = [...]int{
	0, 2007, 17, 63, 143, 8, 144, 70, 2006, 2005,
	2004, 165, 164, 153, 2002, 2001, 2000, 1998, 1997, 1996,
	1995, 1994, 1990, 1989, 162, 128, 140, 1988, 1987, 1986,
	80, 141, 54, 50, 147, 1984, 1983, 39, 1982, 1981,
	1980, 160, 131, 633, 1978, 158, 78, 1977, 1976, 1974,
	1973, 1972, 1971, 1970, 1969, 1968, 1967, 1965, 1961, 1960,
	1959, 230, 1958, 1957, 5, 1956, 42, 1955, 1954, 1953,
	1952, 1950, 1949, 1948, 112, 1947, 1944, 1943, 148, 1937,
	1935, 77, 401, 95, 64, 1934, 1933, 58, 136, 1931,
	84, 118, 1925, 1922, 229, 73, 32, 1919, 71, 60,
	1913, 35, 1912, 1910, 96, 1908, 1907, 1906, 55, 1904,
	1903, 2751, 1898, 53, 101, 25, 56, 1897, 1896, 1895,
	1894, 45, 174, 1892, 1890, 31, 1889, 1887, 157, 1885,
	106, 19, 1883, 12, 24, 15, 1882, 99, 1881, 41,
	43, 1878, 109, 1876, 1872, 30, 23, 14, 1869, 16,
	86, 115, 10, 68, 98, 1868, 1865, 21, 38, 1863,
	1859, 1856, 1854, 1850, 1847, 37, 1846, 26, 1845, 149,
	1844, 27, 22, 29, 34, 72, 36, 9, 1843, 138,
	1842, 28, 125, 81, 123, 1839, 1837, 1836, 139, 176,
	1833, 1832, 62, 134, 113, 116, 1831, 173, 1830, 1829,
	66, 1282, 2614, 61, 127, 1827, 1826, 2275, 90, 111,
	33, 1822, 74, 1821, 1816, 1810, 151, 133, 75, 917,
	76, 1809, 1805, 1794, 1791, 1787, 1786, 1785, 231, 44,
	88, 122, 40, 1784, 1782, 1781, 92, 65, 1778, 121,
	120, 93, 129, 1774, 130, 126, 124, 1772, 94, 1771,
	1770, 1768, 1767, 69, 1766, 1765, 1764, 1762, 119, 114,
	83, 47, 1759, 48, 91, 117, 110, 1758, 13, 145,
	6, 1754, 1, 0, 1753, 3, 137, 172, 146, 1752,
	1751, 2, 1750, 4, 1749, 1748, 108, 1747, 1746, 1743,
	11, 20, 7, 1742, 1741, 2008, 548, 97, 1728, 150,
}

//line sql.y:5599
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 293, 294, 294, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 273, 273, 273, 276, 276, 22,
	56, 24, 24, 23, 23, 26, 26, 25, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 7, 7,
	7, 7, 7, 10, 6, 6, 11, 11, 68, 68,
	12, 13, 13, 13, 13, 297, 297, 106, 106, 104,
	104, 105, 105, 174, 174, 14, 15, 15, 184, 184,
	183, 183, 183, 185, 185, 185, 185, 219, 219, 16,
	16, 16, 16, 16, 79, 79, 275, 275, 274, 272,
	272, 271, 271, 270, 28, 29, 38, 38, 38, 38,
	39, 40, 277, 277, 249, 44, 44, 43, 43, 43,
	43, 45, 45, 42, 42, 41, 41, 251, 251, 238,
	238, 250, 250, 250, 250, 250, 250, 250, 237, 237,
	93, 93, 155, 155, 155, 155, 155, 155, 155, 155,
	289, 289, 156, 156, 156, 156, 156, 156, 290, 290,
	290, 290, 221, 221, 221, 221, 224, 224, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 223, 223, 223,
	223, 223, 225, 225, 225, 225, 225, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 227, 227, 227, 227, 227, 227, 227, 227,
	236, 236, 228, 228, 231, 231, 232, 232, 232, 233,
	233, 233, 234, 234, 229, 229, 229, 229, 230, 230,
	230, 239, 263, 263, 262, 262, 260, 260, 260, 260,
	248, 248, 257, 257, 257, 257, 257, 247, 247, 243,
	243, 243, 244, 244, 245, 245, 242, 242, 246, 246,
	259, 259, 258, 240, 240, 241, 241, 265, 291, 291,
	291, 291, 292, 292, 266, 282, 283, 281, 281, 281,
	281, 281, 66, 66, 66, 196, 196, 196, 255, 255,
	254, 254, 254, 256, 256, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 191, 191, 191, 280, 280, 280, 280,
	280, 280, 279, 279, 279, 252, 252, 252, 278, 278,
	46, 46, 140, 140, 35, 35, 35, 35, 35, 35,
	34, 34, 34, 30, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 36, 36, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 235, 235,
	235, 267, 267, 268, 268, 18, 27, 27, 19, 19,
	19, 19, 20, 20, 47, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 284, 284, 190, 190, 198, 198, 189,
	189, 212, 212, 212, 192, 192, 192, 193, 193, 288,
	288, 288, 49, 49, 51, 51, 52, 53, 53, 214,
	214, 215, 215, 54, 55, 67, 67, 67, 67, 67,
	67, 69, 69, 69, 9, 9, 9, 9, 63, 63,
	63, 8, 8, 50, 50, 57, 285, 285, 286, 287,
	287, 287, 287, 58, 60, 21, 21, 21, 21, 21,
	21, 86, 86, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 80, 80, 80, 75, 75,
	298, 61, 62, 62, 78, 78, 78, 72, 72, 72,
	77, 77, 77, 83, 83, 85, 85, 85, 85, 85,
	87, 87, 87, 87, 87, 87, 87, 82, 82, 84,
	84, 84, 84, 205, 205, 205, 204, 204, 95, 95,
	97, 96, 96, 98, 98, 99, 99, 99, 138, 114,
	114, 172, 172, 171, 171, 173, 173, 173, 173, 175,
	175, 100, 100, 100, 100, 101, 101, 102, 102, 103,
	103, 213, 213, 210, 210, 210, 209, 209, 107, 107,
	107, 109, 108, 108, 108, 108, 110, 110, 112, 112,
	111, 111, 113, 115, 115, 115, 115, 115, 116, 116,
	94, 94, 94, 94, 94, 94, 94, 94, 187, 187,
	118, 118, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 129, 129, 129, 129, 129, 129, 119, 119,
	119, 119, 119, 119, 119, 81, 81, 130, 130, 130,
	137, 131, 131, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 126, 126,
	126, 126, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 71, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 299, 299, 128, 127, 127, 127,
	127, 127, 127, 127, 76, 76, 76, 76, 76, 218,
	218, 218, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 143, 143, 73, 73, 141,
	141, 142, 144, 144, 139, 139, 139, 121, 121, 121,
	121, 121, 121, 121, 121, 123, 123, 123, 145, 145,
	146, 146, 147, 147, 149, 148, 148, 150, 151, 151,
	151, 152, 152, 153, 153, 153, 37, 37, 37, 37,
	37, 32, 32, 32, 32, 33, 33, 33, 88, 88,
	88, 88, 90, 90, 89, 89, 64, 64, 65, 65,
	65, 91, 91, 92, 92, 92, 92, 169, 169, 154,
	154, 154, 161, 161, 161, 157, 157, 159, 159, 159,
	160, 160, 160, 158, 166, 166, 168, 168, 167, 167,
	163, 163, 164, 164, 165, 165, 165, 162, 162, 120,
	120, 120, 120, 120, 170, 170, 170, 170, 176, 176,
	133, 133, 135, 135, 134, 136, 177, 177, 181, 178,
	178, 182, 182, 182, 182, 182, 179, 179, 180, 180,
	206, 206, 206, 186, 186, 197, 197, 194, 194, 195,
	195, 188, 188, 199, 199, 199, 59, 132, 132, 264,
	264, 261, 202, 202, 203, 203, 207, 207, 211, 211,
	208, 208, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 295, 296, 216, 217,
	217, 217,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 2, 3, 0, 1, 3, 1, 4, 3, 3,
	4, 3, 2, 3, 4, 3, 4, 2, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 9, 8, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 4, 9,
	0, 2, 0, 2, 3, 3, 4, 2, 3, 2,
	1, 1, 0, 2, 2, 3, 3, 2, 2, 1,
	2, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 4, 4, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 2, 2, 2, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 4, 4, 2,
	11, 3, 6, 8, 6, 6, 6, 13, 8, 6,
	10, 5, 5, 5, 5, 5, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 4, 4, 4, 3, 3, 3, 5, 2, 3,
	3, 3, 3, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 1, 1, 1, 1, 4, 5,
	5, 6, 4, 4, 6, 6, 6, 8, 8, 8,
	8, 9, 8, 5, 4, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 1, 2, 3, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 0, 1, 0, 2, 1,
	2, 4, 0, 2, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 0, 3,
	0, 2, 0, 1, 3, 1, 3, 2, 0, 1,
	1, 0, 1, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 2, 4, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -293, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -47, -48, -49, -51, -52,
	-53, -54, -55, -8, -50, -21, -22, -56, -57, -58,
	-59, -60, -3, -2, -7, 7, -68, -23, 29, -28,
	-38, 163, -39, -29, 164, -40, 166, 165, 201, 167,
	194, 71, 241, 242, 244, 245, 246, 247, -69, 199,
	200, 169, 33, 42, 30, 31, 34, 172, -4, -24,
	6, -295, 8, 365, 196, 195, 25, -6, 378, 82,
	-294, 505, -169, -154, 19, 30, 26, -153, -149, -78,
	-154, 17, 15, 5, -61, -298, -61, 9, 10, -61,
	-249, -251, 82, 136, 82, -61, -44, -43, -42, -41,
	-45, 28, -35, -36, -269, -34, -31, 168, 165, 209,
	105, 106, 201, 202, 203, 167, 185, 200, 204, 199,
	218, -30, 77, 30, 378, 381, -256, 164, 170, 171,
	366, 108, 107, 72, 166, -253, 291, 482, -45, 484,
	97, 99, 483, 41, 175, 485, 486, 487, 488, 184,
	489, 490, 491, 492, 498, 499, 500, 501, 109, 5,
	-61, -211, -207, -273, -201, 85, 86, 87, 375, 187,
	409, 410, 234, 77, 38, 291, 482, 241, 255, 249,
	276, 268, 376, 411, 237, 188, 222, 479, 266, 114,
	484, 240, 412, 202, 296, 297, 298, 97, 244, 333,
	497, 239, 413, 495, 99, 483, 76, 48, 41, 197,
	264, 260, 485, 223, 414, 386, 216, 108, 105, 504,
	33, 258, 47, 27, 494, 107, 46, 486, 127, 415,
	487, 300, 281, 473, 45, 301, 203, 416, 80, 380,
	481, 302, 259, 303, 233, 493, 169, 417, 465, 304,
	305, 474, 418, 282, 286, 419, 325, 306, 49, 420,
	421, 475, 106, 422, 75, 488, 253, 254, 423, 231,
	186, 327, 280, 184, 32, 307, 377, 235, 55, 210,
	328, 43, 284, 42, 469, 424, 472, 279, 275, 50,
	425, 426, 427, 428, 489, 278, 252, 274, 503, 228,
	490, 59, 171, 288, 287, 289, 217, 324, 271, 429,
	430, 431, 191, 78, 432, 261, 18, 433, 434, 308,
	224, 435, 53, 436, 437, 331, 200, 438, 51, 491,
	36, 205, 492, 439, 440, 441, 442, 443, 310, 444,
	309, 283, 285, 212, 311, 379, 445, 257, 204, 496,
	446, 192, 480, 206, 209, 199, 332, 193, 447, 448,
	449, 450, 451, 238, 452, 453, 245, 498, 40, 454,
	455, 456, 457, 232, 227, 326, 335, 58, 79, 293,
	458, 478, 251, 225, 459, 242, 52, 499, 500, 501,
	219, 502, 7, 313, 109, 229, 230, 44, 272, 211,
	460, 461, 262, 263, 277, 250, 273, 243, 466, 213,
	314, 201, 462, 334, 226, 294, 383, 218, 315, 477,
	382, 270, 267, 220, 463, 316, 176, 214, 215, 464,
	467, 317, 318, 236, 319, 320, 321, 322, 323, 221,
	381, 248, 265, 295, 346, 347, 348, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 361,
	362, 363, 174, -61, 174, -111, -207, 174, -179, 297,
	-198, 299, 312, 307, 317, 305, -190, 308, 310, 212,
	-288, 325, 174, 314, 163, 154, 300, 309, 318, 319,
	236, 320, 323, 221, -284, -273, 487, 502, 114, 269,
	304, 302, 326, 469, 322, 321, -207, 243, -214, 248,
	-202, -273, -201, 246, -111, -67, 465, 167, -216, -216,
	-80, 469, 471, -131, -94, -117, 120, -122, 28, 23,
	-121, -118, -139, -136, -137, 154, 155, 157, 156, 158,
	90, 143, 144, 151, 121, 159, -126, -124, -125, -127,
	89, 88, 98, 91, 92, 93, 94, 101, 102, 103,
	-202, -207, -134, -2, 65, 66, 366, 367, 368, 369,
	374, 370, 123, 54, 342, 336, 345, 344, 343, 340,
	341, 338, 339, 372, 373, 100, 179, 337, 173, 149,
	365, -273, -201, -295, 41, 313, 313, -111, -61, -147,
	-78, -149, -4, -2, -295, 6, -61, -2, -3, -7,
	-24, -26, 405, -25, -207, -154, -169, 9, 138, 39,
	47, -152, -153, -6, -2, -94, 16, 20, 21, -84,
	145, -94, -207, -62, -188, 178, -61, -61, -178, -219,
	243, -182, 326, 325, -203, -180, -202, -200, -179, 324,
	168, 384, 119, 22, 24, 122, 154, 16, 123, 34,
	170, 269, 185, 153, 181, 366, 163, 69, 385, 338,
	339, 336, 342, 368, 369, 337, 299, 28, 10, 387,
	25, 195, 21, 35, 147, 165, 126, 198, 23, 196,
	100, 103, 390, 19, 72, 190, 11, 183, 37, 13,
	391, 392, 14, 179, 178, 138, 175, 67, 8, 159,
	26, 135, 63, 393, 116, 394, 395, 396, 397, 65,
	136, 17, 340, 341, 30, 470, 398, 374, 207, 149,
	70, 56, 471, 120, 399, 400, 101, 401, 104, 73,
	476, 117, 15, 68, 39, 402, 208, 403, 180, 404,
	329, 405, 137, 166, 365, 66, 406, 173, 312, 6,
	371, 29, 194, 182, 111, 64, 407, 174, 125, 372,
	373, 177, 102, 5, 115, 31, 9, 71, 74, 343,
	344, 345, 54, 110, 378, 124, 12, 408, 330, 118,
	114, -250, 136, -237, -241, -202, 189, -266, 185, -111,
	-259, -258, -202, -79, -197, 175, 183, 182, 115, -277,
	117, 229, 337, 173, -41, -42, -179, 153, 206, 83,
	83, -241, -240, -239, -278, 208, 189, -265, -257, 181,
	190, -247, 182, 183, -242, 175, 116, -278, -242, 180,
	190, 208, 208, 109, 208, 109, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 205, -248, 128, -248, 382,
	382, -253, -278, -278, -278, 177, 32, 32, -199, -242,
	177, 22, -248, -248, -179, 153, -248, -248, -248, -248,
	216, 216, -248, -248, -248, -248, -248, -248, -248, -248,
	-248, -248, -248, -248, -248, -248, -248, 174, -277, -88,
	323, 236, 77, -43, 218, -27, -111, -197, 175, 176,
	-277, -111, 160, -111, -192, 136, 12, -192, -189, 313,
	311, 298, 303, -192, -192, -192, -192, 219, 296, -243,
	175, 32, 186, 313, 219, 296, 219, 220, 219, 220,
	306, 316, 219, -212, 11, 138, 337, 301, 305, 212,
	174, 213, 176, 315, -273, 472, 220, -212, 89, -193,
	136, 313, 215, -192, -217, -295, -203, 269, -217, -217,
	29, 177, -202, -63, -202, 89, -9, -5, -12, -11,
	-13, 128, -86, 313, -74, 154, 487, 473, 474, 475,
	472, 310, 480, 478, 476, 219, 477, 83, 119, 117,
	118, 135, -94, -119, 138, 120, 136, 137, 122, 140,
	139, 150, 143, 144, 145, 146, 147, 148, 149, 141,
	142, 153, 128, 129, 130, 131, 132, 133, 134, -187,
	-295, -137, 161, 162, -122, -122, -122, -122, -122, -122,
	-122, -122, -122, -122, -295, 160, -295, -295, -295, -295,
	-295, -295, -295, -295, -143, -94, -295, -299, -295, -299,
	-128, -295, -299, -128, -299, -128, -299, -299, -128, -299,
	-128, -299, -299, -128, -295, -295, -295, -295, -295, -295,
	-295, -295, -2, -3, -131, -216, -285, -286, -114, -111,
	-295, 236, -152, -6, -2, -147, -153, -149, -2, -61,
	-72, -85, 60, 61, -87, 21, 35, 64, 62, 20,
	-296, 84, -296, -169, -296, 83, -26, -172, 82, 58,
	40, 89, 89, 83, 18, -148, -150, -94, 11, -205,
	-204, 22, -202, 89, 160, 96, -112, 26, -111, -188,
	-188, 83, 243, -182, -219, -184, -183, 327, 329, 128,
	-206, -202, 89, 28, 84, 83, -111, -221, -224, -226,
	-225, -227, -222, -223, 266, 267, 154, 270, 272, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 29, 197,
	262, 263, 264, 265, 282, 283, 284, 285, 286, 287,
	288, 289, 249, 268, 376, 250, 251, 252, 253, 254,
	255, 257, 258, 259, 260, 261, -276, -273, 82, 84,
	83, -228, 82, -88, 174, -273, 175, 175, 175, -61,
	365, -248, -248, 205, -34, -31, -269, 15, -30, -31,
	168, 105, 106, 165, 82, -237, 82, -246, -276, -273,
	82, 116, 180, 115, -245, -242, -245, -246, -273, -139,
	-202, -207, -273, 116, 116, -175, -202, -175, -175, 20,
	-175, 20, -175, 20, 91, -202, -175, 20, -175, 20,
	-175, 20, -175, 20, -175, 20, 28, 75, 76, 28,
	78, 79, 80, -139, -139, -237, -179, -111, -273, 91,
	91, -248, -248, 91, 89, 89, 89, -248, -248, 91,
	89, -209, -207, 89, -279, 191, 233, 235, 91, 91,
	91, 91, 28, 89, -280, 28, 494, 493, 495, 496,
	497, 91, 28, 91, 28, 91, -202, 82, -111, -91,
	223, 163, 165, 168, 73, 89, 237, 128, 41, 83,
	177, 174, -273, -194, 179, -194, -208, -207, -200, 89,
	-94, -244, 11, 138, -212, -212, -192, -111, -244, -212,
	-192, -111, -192, -192, -192, -192, -212, -212, -212, -192,
	-207, -207, -111, -111, -111, -111, -111, -111, -111, -217,
	-217, -217, -193, -192, 472, 89, 73, -215, 246, 280,
	466, 467, 468, 83, 378, -104, -111, 472, 472, 472,
	472, 472, 472, -94, -94, -94, -94, -129, 101, 120,
	102, 103, -122, -130, -134, -137, 95, 138, 136, 137,
	122, -122, -122, -122, -122, -122, -122, -122, -122, -122,
	-122, -122, -122, -122, -122, -122, -218, -273, 89, 154,
	-273, -121, -121, -202, -83, 21, 35, -82, -84, -203,
	-208, -200, -82, -82, -94, -94, -139, 89, -82, -139,
	89, -82, -82, -77, 21, 35, -141, -142, 124, -139,
	-296, -122, -202, -202, -71, -70, 347, 348, 349, 350,
	352, 353, 354, 357, 358, 362, 363, 346, 364, 351,
	356, 359, 360, 361, 355, 265, -82, -83, -83, -82,
	-82, -169, -296, 83, -287, 329, 330, 470, -210, 208,
	-209, 22, -132, -131, 89, -152, -152, 60, 61, 56,
	-82, -87, -296, -25, 22, -171, -202, 59, 89, -229,
	-179, -94, -94, 83, -151, 24, 25, -111, -204, 145,
	-208, -174, 208, -111, -96, -98, -99, -100, -114, -138,
	-295, 11, -104, -105, -113, -207, -182, -184, 83, 328,
	330, 331, 73, 104, -94, -230, 153, -255, -254, -253,
	-237, -239, -240, -241, 84, -155, -93, 37, -233, 294,
	293, -228, -228, -228, -228, -228, -229, -229, -229, -229,
	82, 82, -228, -228, -228, -228, -231, 82, -231, -231,
	-232, 82, -232, -266, -94, -263, -262, -260, -261, 184,
	97, 378, 74, -258, -151, 91, -91, -195, 179, -264,
	-261, -273, -273, -273, -195, -273, 89, -273, 89, 83,
	16, -238, -237, -46, 233, -268, 208, -265, -259, -246,
	116, -245, -246, -246, 160, -273, 83, 26, 109, 109,
	109, 109, 378, 165, 29, -237, -46, -218, 177, -218,
	-218, 89, 89, -191, 502, -104, -90, 225, 128, 214,
	214, 174, 174, 227, -111, 238, 240, 239, 237, 20,
	226, 228, 230, 216, -111, -111, -194, 73, -106, -111,
	23, -207, -111, -192, -192, -111, -192, -192, -111, -202,
	-74, 329, 83, 378, 19, -75, 19, 101, 102, 103,
	-130, -122, -122, -122, -81, 198, 119, -296, -296, -82,
	-82, 83, -295, 160, -296, -296, 83, 74, 22, 11,
	11, -296, 11, 11, -296, -296, -82, -144, -142, 126,
	-94, -296, -296, 83, 83, 11, -296, -296, -296, -296,
	-296, -286, 469, 330, -115, 71, 178, 72, -295, -209,
	-296, -123, -202, 91, 94, -154, -95, -97, 11, -87,
	-137, 84, 83, -229, -158, -163, -189, -273, 89, 154,
	-150, 160, -120, 29, 54, -5, -295, -295, 29, 83,
	-107, -109, -108, -110, 63, 67, 69, 64, 65, 66,
	70, -213, 22, -96, -3, -2, -295, -111, -104, -297,
	11, 74, -297, 83, 160, -183, -185, 332, 329, 335,
	-273, 89, 83, -253, -241, -292, 101, 120, 28, 73,
	291, 97, -290, -291, 180, 115, 116, 192, 22, 38,
	-234, 295, -229, -229, -230, -230, -230, -230, -236, 89,
	-236, 91, 91, 84, -37, -32, -33, 30, 77, -260,
	-248, 89, 36, -202, 84, -90, -111, 120, 73, -264,
	-264, -264, -207, 15, -171, 83, 84, -140, 234, 84,
	-202, 84, 82, -246, -246, -203, -202, -295, 174, 28,
	28, -46, -140, -230, -273, 504, 503, 84, 176, 232,
	-92, 342, 89, 85, -111, -111, -111, -111, -111, 168,
	165, 217, 177, -104, -111, 83, -66, 193, 188, -212,
	-212, 30, -111, 329, 481, 479, -81, 119, -122, -122,
	-296, -296, -84, -83, -203, -220, 154, 266, 197, 264,
	260, 280, 271, 293, 262, 294, -218, -220, -122, -122,
	-122, -122, 375, -147, 127, -94, 125, -122, -122, -94,
	175, 175, 175, -175, -186, 19, 11, 54, 54, -95,
	-116, 12, -96, -87, -202, -161, 465, -166, 43, -164,
	-165, 44, -162, 45, 53, 145, -176, 73, -177, -181,
	-139, -133, -135, -134, -295, -170, -296, -202, -175, -177,
	-98, -99, -99, -98, -99, 63, 63, 63, 68, 63,
	68, 63, -108, -207, -296, -296, -3, -210, 74, -96,
	-96, -113, -207, 145, 329, 333, 334, -253, 101, -122,
	9, 89, 116, 116, -111, 82, -230, -230, 84, 83,
	84, 83, 84, 83, -196, 415, 120, -33, -32, -248,
	-248, 91, -273, 176, 23, -111, 73, 73, 73, 16,
	-237, -139, 54, -263, -171, -267, -268, -111, -121, -140,
	-111, -89, 223, 231, 82, 86, -275, 74, 214, 291,
	214, -111, -66, -37, -111, -192, -192, 30, -273, -122,
	-296, -296, -228, -228, -228, -232, -228, 254, -228, 254,
	-296, -296, 19, 19, 19, 19, -295, -73, 371, -94,
	83, 83, -296, -295, -295, -295, -296, -111, -116, -145,
	13, -94, -158, 48, 272, -168, -167, 52, 44, -165,
	16, 46, 16, 27, -176, 83, 128, 83, -296, -296,
	83, 54, 160, -296, -116, -102, -101, 73, 74, -103,
	73, -101, 63, 63, -172, -296, -174, -96, -116, -116,
	160, -125, 82, -122, -229, 89, -229, 91, 91, 415,
	28, 78, 79, 80, 28, 75, 76, -111, -111, -111,
	-111, -171, 210, 84, -296, 83, -235, 378, 381, -172,
	84, -272, 378, -274, -273, -202, -202, -202, -229, -273,
	-122, -122, -122, -122, -122, -152, 89, -122, -122, -173,
	-296, -202, 180, -173, -173, -210, -145, -146, 14, 16,
	-159, 50, -157, 49, -157, -167, 16, 16, 89, 16,
	89, 116, -181, -94, -135, 54, -5, -202, -133, -202,
	-147, -94, 82, -94, -116, -116, -171, 84, -230, -230,
	84, 84, -172, 211, -291, -268, 382, 382, 22, -271,
	-270, -203, 82, 74, -296, -296, -296, -296, -76, 138,
	378, -296, -296, -296, 83, -296, -296, -296, -115, -146,
	-94, -131, -160, 51, 73, 104, 89, 89, 89, 9,
	-133, 160, -152, -171, -147, 84, -156, 22, -295, -5,
	83, 128, -171, -111, -296, 376, 70, 379, -202, 180,
	73, 104, -177, -202, 84, -152, -282, -283, 73, -292,
	-289, 101, 120, 97, -290, 110, 111, -5, -122, 207,
	-64, 378, -270, -252, -203, 89, 91, 84, 59, 377,
	380, -283, 73, 10, 9, 101, 89, -64, -296, -296,
	-65, 222, 469, -275, 59, -281, 193, 188, 191, 29,
	-281, 185, -272, 378, 187, 28, 101, 224, 379, 380,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 64, 66, 67, 600, 600, 0, 600, 0,
	0, 600, -2, -2, 600, 1028, 0, 600, 0, 0,
	-2, 533, 534, 0, 536, -2, 0, 0, 545, 1468,
	1468, 595, 0, 0, 0, 0, 0, 600, 892, 44,
	600, 0, 78, 79, 551, 552, 553, 59, 0, 1466,
	1, 3, 65, 69, 0, 0, 0, 52, 901, 0,
	72, 0, 0, 604, 0, 602, 1011, 600, 600, 0,
	109, 110, 0, 0, 0, -2, 113, -2, 137, 138,
	0, 142, 406, 367, 409, 365, 395, -2, 358, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 370, 260, 260, 0, 0, -2, 358, 358, 358,
	0, 0, 0, 392, 1013, 313, 260, 260, 0, 260,
	260, 260, 260, 0, 0, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	918, 141, 1029, 1026, 1027, 34, 35, 36, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 0, 1005, 0, 463, 690, 0, 524, 524,
	0, 524, 524, 524, 524, 0, 0, 0, 475, 0,
	0, 0, 0, 521, 0, 0, 494, 496, 0, 521,
	0, 527, 0, 508, 524, 1469, 1469, 1469, 996, 0,
	518, 516, 530, 531, 513, 514, 532, 535, 0, 540,
	543, 1022, 1023, 0, 558, 43, 1252, 550, 563, 564,
	0, 596, 597, 39, 741, 700, 0, 706, 708, 0,
	743, 744, 745, 746, 747, 0, 0, 0, 0, 0,
	768, 0, 0, 0, 0, 0, 774, 775, 776, 777,
	877, 878, 879, 880, 881, 882, 883, 884, 710, 711,
	874, 0, 985, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 865, 0, 834, 834, 834, 834, 834, 834,
	834, 834, 834, 0, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 1468, 0, 573, 0, 0, 901,
	0, 893, 892, 57, 0, 600, -2, 0, 0, 0,
	0, 41, 0, 46, 651, 71, 70, 937, 0, 0,
	0, 53, 902, 61, 63, 903, 0, 605, 606, 0,
	629, 633, 0, 601, 0, 1012, 1011, 1011, 95, 0,
	1411, 989, -2, -2, 0, 0, 1024, 1025, 998, -2,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	-2, 0, 0, 151, 152, 0, 37, 286, 0, 147,
	0, 280, 232, 918, 0, 0, 0, 0, 0, 600,
	0, 1006, 132, 133, 139, 140, 260, 260, 0, 141,
	141, 374, 375, 376, 0, 0, -2, 284, 0, 359,
	0, 0, 274, 274, 278, 276, 277, 0, 0, 0,
	0, 0, 0, 386, 0, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 447, 0, 261, 0, 404,
	405, 314, 0, 0, 0, 0, 384, 385, 0, 0,
	1014, 1015, 0, 0, 260, 260, 0, 0, 0, 0,
	260, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 931,
	0, 0, 0, -2, 0, 455, 0, 0, 0, 1007,
	1007, 462, 0, 464, 465, 0, 0, 466, 0, 521,
	521, 519, 520, 468, 469, 470, 471, 524, 0, 0,
	269, 270, 271, 521, 524, 0, 524, 524, 524, 524,
	521, 521, 521, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1469, 1469, 1469, 527, 524, 0, 504,
	0, 505, 506, 509, 510, 1470, 1471, 1043, 511, 512,
	997, 541, 544, 561, 559, 560, 562, 554, 555, 556,
	557, 0, 575, 576, 581, 0, 0, 0, 0, 587,
	588, 589, 0, 0, 592, 593, 594, 0, 0, 0,
	0, 0, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 728, 729, 730, 731, 732, 733, 734, 707,
	0, 721, 0, 0, 763, 764, 765, 766, 767, 769,
	770, 771, 772, 0, 613, 0, 0, 0, 0, 0,
	0, 0, 0, 610, 0, 866, 0, 795, 0, 796,
	804, 0, 797, 805, 798, 806, 799, 800, 807, 801,
	808, 802, 803, 809, 0, 0, 0, 0, 613, 613,
	0, 0, 740, 0, 0, 40, 565, 566, 0, 673,
	1017, 0, 51, 60, 62, 901, 55, 901, 0, 615,
	0, 0, -2, -2, 616, 622, 623, 624, 625, 626,
	48, 1467, 49, 0, 68, 0, 42, 0, 0, 0,
	0, 244, 940, 0, 0, 894, 895, 898, 0, 630,
	634, 0, 636, 637, 0, 603, 93, 0, 689, 0,
	0, 0, 1411, 995, 0, 97, 98, 0, 0, 0,
	248, 1000, 1001, 1002, -2, 267, 0, -2, 239, 183,
	184, 185, 232, 187, 232, 232, 232, 232, 244, 244,
	244, 244, 215, 216, 217, 218, 219, 0, 0, 202,
	232, 232, 232, 232, 222, 223, 224, 225, 226, 227,
	228, 229, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 234, 234, 234, 236, 236, 0, 38, 0, 252,
	0, 898, 0, 931, 1009, 1019, 0, 0, 0, 1009,
	115, 0, 0, 407, 368, 396, 408, 0, 371, 372,
	-2, 0, 0, 358, 0, 360, 0, 268, 0, -2,
	0, 278, 0, 274, 278, 275, 278, 266, 279, 388,
	874, 0, 389, 390, 0, 427, 659, 0, 0, 0,
	0, 0, 433, 434, 435, 0, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 397, 398, 399, 400,
	401, 402, 403, 0, 0, 360, 0, 393, 0, 315,
	316, 0, 0, 319, 320, 321, 322, 0, 0, 325,
	326, 327, 676, 677, 328, 352, 353, 354, 329, 330,
	331, 332, 333, 334, 335, 346, 347, 348, 349, 350,
	351, 336, 337, 338, 339, 340, 343, 0, 125, 922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1007, 0, 0, 0, 0, 691, 1030, 1031, 525,
	526, 0, 272, 273, 524, 524, 472, 495, 0, 524,
	476, 497, 477, 479, 478, 480, 499, 500, 524, 483,
	522, 523, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 493, 501, 502, 503, 528, 0, 0, 542, 546,
	547, 548, 549, 0, 0, 578, 89, 583, 584, 585,
	586, 598, 591, 742, 701, 702, 703, 705, 722, 0,
	724, 726, 712, 713, 737, 738, 739, 0, 0, 0,
	0, 735, 717, 0, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 762, 849, 850, 851,
	0, 760, 761, 773, 0, 0, 0, 614, 627, 875,
	0, -2, 0, 0, 0, 0, 745, 877, 0, 745,
	877, 0, 0, 0, 611, 612, 872, 869, 0, 0,
	835, 0, 0, 0, 0, 813, 814, 815, 816, 817,
	818, 819, 820, 821, 822, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 0, 0, 0, 0,
	0, 0, 984, 0, 568, 569, 571, 0, 693, 0,
	674, 0, 0, 1018, 574, 54, 56, 620, 621, 0,
	638, 617, 50, 45, 0, 0, 653, 938, 244, 960,
	0, 904, 905, 0, 897, 899, 900, 73, 635, 631,
	0, 0, 0, 688, 0, 641, 643, 644, 645, 671,
	0, 0, 0, 0, 91, 690, 990, 96, 0, 0,
	101, 102, 991, 992, 993, 994, 0, 134, -2, 310,
	153, 155, 156, 157, 148, 292, 0, 0, 242, 240,
	241, 186, 244, 244, 209, 210, 248, 248, 248, 248,
	0, 0, 203, 204, 205, 206, 197, 0, 198, 199,
	200, 0, 201, 285, 0, 906, 253, 254, 256, 260,
	0, 0, 0, 281, 282, 0, 922, 0, 0, 0,
	1020, 1019, 1019, 1019, 0, 143, 144, 145, 146, 141,
	0, 0, 149, 362, 361, 0, 0, 283, 0, 0,
	278, 278, 263, 264, 0, 391, 0, 0, 429, 430,
	431, 432, 0, 0, 0, 360, 362, 248, 0, 317,
	318, 323, 324, 341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 422, 423, 424, 425,
	919, 920, 921, 0, 0, 456, 0, 0, 302, 87,
	1008, 461, 521, 482, 498, 521, 474, 481, 507, 538,
	582, 0, 0, 0, 0, 590, 0, 723, 725, 727,
	714, 735, 718, 0, 715, 0, 0, 709, 778, 0,
	0, 0, 613, 0, 782, 783, 0, 0, 0, 0,
	0, 842, 0, 0, 843, 0, 892, 0, 870, 0,
	0, 794, 836, 0, 0, 0, 837, 838, 839, 840,
	841, 567, 570, 572, 649, 0, 0, 0, 0, 675,
	1016, 0, 885, 0, 0, 638, 698, 639, 0, 618,
	47, 652, 0, 942, 941, 954, 967, 245, 246, 247,
	896, 0, 978, 0, 0, 970, 0, 0, 0, 0,
	0, 0, 0, 0, 678, 0, 0, 681, 0, 0,
	0, 0, 672, 0, 0, 0, 0, -2, 0, 0,
	85, 86, 0, 0, 0, 99, 100, 0, 0, 106,
	249, 250, 141, 312, 154, 158, 163, 0, 0, 0,
	167, 0, 169, 293, 0, 179, 181, 0, 0, 161,
	182, 243, 248, 248, 211, 212, 213, 214, 0, 230,
	0, 0, 0, 305, 111, 910, 909, 260, 260, 255,
	0, 258, 0, 1021, 233, 0, 124, 0, 0, 0,
	0, 0, 130, 0, 366, 0, 377, 378, 0, 426,
	0, 252, 0, 262, 265, 875, 660, 0, 0, 379,
	0, 362, 382, 383, 394, 344, 345, 342, 0, 0,
	932, 933, 0, 936, 116, 414, 416, 415, 419, 0,
	0, 412, 0, 302, 906, 0, 460, 303, 304, 524,
	524, 577, 90, 0, 580, 0, 716, 0, 736, 719,
	779, 780, 628, 0, 876, 0, 232, 232, 855, 232,
	236, 858, 232, 860, 232, 863, 0, 0, 0, 0,
	0, 0, 0, 867, 793, 873, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1003, 1004, 886, 887, 698,
	888, 0, 640, 619, 654, 960, 0, 953, 0, -2,
	962, 0, 0, 0, 968, 632, 76, 0, 978, 986,
	0, 969, 980, 982, 0, 0, 0, 974, 0, 698,
	642, 667, 669, 0, 664, 679, 680, 682, 0, 684,
	0, 686, 687, 651, 647, 648, 0, 93, 0, 698,
	698, 92, 0, 692, 103, 104, 105, 311, 164, 165,
	0, 168, 178, 180, 0, 0, 207, 208, 244, 0,
	244, 0, 237, 0, 294, 306, 0, 907, 908, 0,
	0, 257, 259, 0, 1010, 126, 0, 0, 0, 0,
	150, 363, 0, 251, 0, 0, 451, 448, 380, 381,
	651, 923, 924, 925, 0, 935, 119, 0, 0, 0,
	0, 457, 458, 459, 88, 467, 473, 579, 599, 720,
	781, 784, 852, 244, 856, 857, 859, 861, 862, 864,
	786, 785, 0, 0, 0, 0, 0, 901, 0, 871,
	0, 0, 812, 0, 0, 0, 673, 58, 888, 890,
	0, 699, 947, 945, 945, 955, 956, 0, 0, 963,
	0, 0, 0, 0, 77, 0, 0, 0, 983, 0,
	0, 0, 0, 94, 892, 661, 668, 0, 0, 662,
	0, 663, 683, 685, 646, -2, 698, 698, 83, 84,
	0, 166, 0, 0, 248, 231, 248, 0, 0, 307,
	911, 912, 913, 914, 915, 916, 917, 651, 127, 128,
	129, 369, 0, 0, 428, 0, 436, 0, 0, 0,
	934, 413, 0, 117, 118, 0, 0, 418, 853, 854,
	0, 0, 0, 0, 844, 0, 868, 0, 0, 0,
	695, 655, 656, 0, 0, 693, 890, 75, 0, 0,
	950, 0, 943, 946, 944, 957, 0, 0, 964, 0,
	966, 0, 987, 988, 981, 0, 973, 976, 972, 975,
	901, 665, 0, 670, 892, 82, 0, 172, 220, 221,
	235, 238, 0, 0, 287, 452, 449, 450, 0, 120,
	121, 0, 0, 0, 787, 789, 788, 790, 0, 0,
	0, 792, 810, 811, 0, 694, 696, 697, 650, 74,
	891, 889, 939, 0, 948, 949, 958, 959, 965, 0,
	971, 0, 80, 0, 901, 288, 292, 0, 0, 926,
	0, 0, 0, 420, 791, 0, 0, 0, 657, 658,
	951, 952, 979, 977, 666, 81, 289, 290, 0, 159,
	173, 174, 0, 0, 177, 170, 171, 926, 0, 0,
	410, 928, 122, 123, 355, 356, 357, 116, 845, 0,
	848, 291, 0, 0, 0, 175, 176, 112, 453, 454,
	0, 929, 930, 119, 846, 295, 297, 298, 0, 0,
	296, 0, 417, 0, 299, 300, 301, 927, 0, 847,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 121, 3, 3, 3, 148, 140, 3,
	82, 84, 145, 143, 83, 144, 160, 146, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 505,
	129, 128, 130, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 150, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 151,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 125,
	126, 127, 131, 132, 133, 134, 135, 136, 137, 138,
	141, 142, 147, 149, 152, 153, 154, 155, 156, 157,
	158, 159, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:449
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:454
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:455
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:459
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:491
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:497
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:501
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:505
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:510
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:514
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:520
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:526
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:532
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:536
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:541
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:545
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:551
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:555
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:561
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:567
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:571
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:575
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:598
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:604
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:609
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:615
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:622
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:628
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:635
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:714
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:734
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:746
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:758
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:762
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:768
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:774
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:778
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:796
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:806
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:816
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:820
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:829
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:835
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:851
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:861
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:865
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:869
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:875
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:879
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:883
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:887
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:893
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:897
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:945
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:955
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:960
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:965
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:971
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:988
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:995
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1002
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1007
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1012
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1017
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1024
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1031
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1042
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1052
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1058
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1062
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1086
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1090
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1096
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1107
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1111
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1117
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1127
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1132
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1141
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1146
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1160
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1166
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1174
		{
			yyVAL.str = ""
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.str = ""
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1187
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1191
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1197
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1203
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1208
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1213
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1218
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1223
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1230
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1234
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1239
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1243
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1248
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1260
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1265
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1272
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1276
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1280
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1284
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1290
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1301
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1312
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1320
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1328
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1340
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1356
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1374
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1382
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1386
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1390
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 207:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1404
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 208:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1408
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1412
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1416
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 212:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1456
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 221:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1461
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1515
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1520
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 235:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1524
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1532
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1542
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1550
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1554
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1558
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1563
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1567
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = ""
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1589
		{
			yyVAL.str = ""
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 251:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1604
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1613
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1619
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1623
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1629
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1633
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1638
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1642
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = ""
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1658
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1662
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1666
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1670
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1674
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = ""
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = yyDollar[2].str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = "key"
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = yyDollar[1].str
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = ""
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1742
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1746
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1752
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1758
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1762
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1768
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1772
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1778
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1784
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1788
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1792
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1796
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1801
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1805
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1811
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1817
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1823
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1829
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1833
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1837
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1841
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1845
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = ""
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1863
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1867
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1871
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1876
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1880
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1886
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1890
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1900
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1904
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1910
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1914
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1918
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1922
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1926
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1930
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1934
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1938
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1942
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1946
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1950
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1954
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1958
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1962
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1966
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1970
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1974
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1978
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1982
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1986
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1990
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1994
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1998
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2002
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2006
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2010
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2014
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2018
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = ""
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2078
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2082
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2087
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2091
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2095
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2099
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2103
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2107
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2113
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2121
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2127
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2131
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2135
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2139
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2143
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2147
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2151
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2155
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2159
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2163
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2167
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2171
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2175
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2179
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2183
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2187
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2191
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2195
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2199
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2203
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2207
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2211
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2217
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2227
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2231
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2235
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2239
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2243
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2247
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2251
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2255
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2259
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2265
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2271
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2278
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2285
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2291
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2295
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2302
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2309
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2321
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2331
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2335
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2339
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2352
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2362
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2366
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2377
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2384
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2391
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2398
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2405
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2413
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2417
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2421
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2425
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2429
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2433
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2437
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2441
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2445
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2449
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2453
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2457
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2461
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2465
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2469
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2473
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2477
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2481
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2485
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2489
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2493
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2497
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2502
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2506
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2510
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2517
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 453:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2527
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2531
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2537
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2543
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2547
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2553
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2557
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2566
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2570
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2576
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2580
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2585
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2591
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2595
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2599
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2603
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2607
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2615
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2619
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2627
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2631
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2639
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2675
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2679
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2683
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2687
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2691
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2731
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2735
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2744
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2748
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = "extended "
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2818
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2822
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2856
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2860
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2870
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.empty = struct{}{}
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.empty = struct{}{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.empty = struct{}{}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2890
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2894
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2900
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2916
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2920
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.empty = struct{}{}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.empty = struct{}{}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.empty = struct{}{}
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.empty = struct{}{}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2937
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2943
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2948
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2952
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2956
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2960
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2964
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2968
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = yyDollar[1].str
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = yyDollar[1].str
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2996
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3000
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3023
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3029
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3045
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3055
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3061
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3065
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3069
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3073
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = ""
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			setAllowComments(yylex, true)
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3202
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.strs = nil
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3212
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = ""
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.str = SQLCacheStr
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3261
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3266
		{
			yyVAL.strs = nil
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3282
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.str = SQLCacheStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = DistinctStr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = DistinctStr
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = StraightJoinHint
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3318
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3328
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3332
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3336
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3340
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3345
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3365
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3369
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3375
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3381
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3395
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3399
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3403
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3409
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3415
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3419
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3428
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3434
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3438
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3444
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3448
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3452
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3456
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3462
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3479
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3483
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3487
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3491
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3499
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3509
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.empty = struct{}{}
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.empty = struct{}{}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3519
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3523
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3540
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3544
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3548
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3554
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3560
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3564
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3568
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3572
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3578
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3582
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3592
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3612
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3621
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3625
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3629
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3633
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3638
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3642
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3648
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3652
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3656
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3660
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3664
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3668
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3672
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3676
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3692
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3696
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3702
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3706
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3710
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3714
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3718
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3744
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3748
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3752
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3756
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3760
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3764
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3770
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3774
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3778
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3782
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3786
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3790
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3794
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3799
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3803
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3809
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3813
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3817
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3824
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3830
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3834
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3840
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3844
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3852
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3856
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3860
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3864
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3868
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3872
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3884
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3888
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3892
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3896
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3900
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3904
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3908
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3912
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3916
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3920
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3924
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3928
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3932
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3936
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3940
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3944
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3948
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3952
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3956
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3960
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3978
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3982
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3986
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3990
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4000
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4004
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4008
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4012
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4016
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4028
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4032
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4036
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4040
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4044
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4048
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4052
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4062
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4066
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4070
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4075
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4080
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4085
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4091
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4096
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4101
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4105
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4109
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4114
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4119
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4124
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4128
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4136
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4144
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4148
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4152
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4156
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4160
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4164
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4168
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4172
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4176
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4180
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4184
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4190
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4194
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4198
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4202
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4206
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4210
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4214
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4218
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4222
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4242
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4246
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4272
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4276
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4280
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4284
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4288
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4298
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4302
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4308
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4312
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4316
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4320
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4324
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4328
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4334
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4338
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4342
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4346
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4350
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4354
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4358
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4363
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4367
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = string("")
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4382
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4392
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4397
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4401
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4407
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4411
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4415
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4421
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4425
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4429
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4441
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4450
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4456
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4479
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4484
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4488
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4493
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4497
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4503
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4509
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4513
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4519
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4524
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4528
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4532
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4541
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4547
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4551
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4555
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4564
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4568
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4572
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4576
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4583
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4587
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4591
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4595
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4601
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4605
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4609
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4614
		{
			yyVAL.str = ""
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4622
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4626
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4631
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4635
		{
			yyVAL.str = yyDollar[3].str
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4645
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4650
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4654
		{
			yyVAL.str = yyDollar[2].str
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = "cascaded"
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = ""
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = yyDollar[3].str
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4694
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4700
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4704
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4710
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4714
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4718
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4723
		{
			yyVAL.str = ""
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4736
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4740
		{
			yyVAL.str = " header"
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4745
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4749
		{
			yyVAL.str = " manifest on"
		}
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4753
		{
			yyVAL.str = " manifest off"
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4758
		{
			yyVAL.str = ""
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4762
		{
			yyVAL.str = " overwrite on"
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4766
		{
			yyVAL.str = " overwrite off"
		}
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4772
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4777
		{
			yyVAL.str = ""
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4781
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = yyDollar[1].str
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4791
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4797
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 960:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = ""
		}
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4810
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = yyDollar[1].str
		}
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4820
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4830
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4834
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4839
		{
			yyVAL.str = ""
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4843
		{
			yyVAL.str = " optionally"
		}
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4856
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4860
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4864
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4868
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4872
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4878
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4882
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4886
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4890
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 978:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4899
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4905
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4909
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4915
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4919
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4925
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4931
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4941
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4945
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4951
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4957
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4967
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4971
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4975
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4979
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4983
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4991
		{
			yyVAL.str = "charset"
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5005
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5009
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5020
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5023
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5025
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5028
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5030
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5033
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5038
		{
			yyVAL.empty = struct{}{}
		}
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5040
		{
			yyVAL.empty = struct{}{}
		}
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5042
		{
			yyVAL.empty = struct{}{}
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5046
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5055
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5062
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5066
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5076
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5083
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5089
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5093
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5099
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5103
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5569
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5578
		{
			decNesting(yylex)
		}
	case 1468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5583
		{
			skipToEnd(yylex)
		}
	case 1469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5588
		{
			skipToEnd(yylex)
		}
	case 1470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5592
		{
			skipToEnd(yylex)
		}
	case 1471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5596
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
