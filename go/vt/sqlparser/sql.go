// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const JSON_CONTAINS = 57444
const JSON_CONTAINS_PATH = 57445
const JSON_EXTRACT = 57446
const JSON_KEYS = 57447
const JSON_OVERLAPS = 57448
const JSON_SEARCH = 57449
const JSON_VALUE = 57450
const EXTRACT = 57451
const NULL = 57452
const TRUE = 57453
const FALSE = 57454
const OFF = 57455
const DISCARD = 57456
const IMPORT = 57457
const ENABLE = 57458
const DISABLE = 57459
const TABLESPACE = 57460
const VIRTUAL = 57461
const STORED = 57462
const BOTH = 57463
const LEADING = 57464
const TRAILING = 57465
const EMPTY_FROM_CLAUSE = 57466
const LOWER_THAN_CHARSET = 57467
const CHARSET = 57468
const MEMBER = 57469
const UNIQUE = 57470
const KEY = 57471
const EXPRESSION_PREC_SETTER = 57472
const OR = 57473
const XOR = 57474
const AND = 57475
const NOT = 57476
const BETWEEN = 57477
const CASE = 57478
const WHEN = 57479
const THEN = 57480
const ELSE = 57481
const END = 57482
const LE = 57483
const GE = 57484
const NE = 57485
const NULL_SAFE_EQUAL = 57486
const IS = 57487
const LIKE = 57488
const REGEXP = 57489
const IN = 57490
const SHIFT_LEFT = 57491
const SHIFT_RIGHT = 57492
const DIV = 57493
const MOD = 57494
const UNARY = 57495
const COLLATE = 57496
const BINARY = 57497
const UNDERSCORE_ARMSCII8 = 57498
const UNDERSCORE_ASCII = 57499
const UNDERSCORE_BIG5 = 57500
const UNDERSCORE_BINARY = 57501
const UNDERSCORE_CP1250 = 57502
const UNDERSCORE_CP1251 = 57503
const UNDERSCORE_CP1256 = 57504
const UNDERSCORE_CP1257 = 57505
const UNDERSCORE_CP850 = 57506
const UNDERSCORE_CP852 = 57507
const UNDERSCORE_CP866 = 57508
const UNDERSCORE_CP932 = 57509
const UNDERSCORE_DEC8 = 57510
const UNDERSCORE_EUCJPMS = 57511
const UNDERSCORE_EUCKR = 57512
const UNDERSCORE_GB18030 = 57513
const UNDERSCORE_GB2312 = 57514
const UNDERSCORE_GBK = 57515
const UNDERSCORE_GEOSTD8 = 57516
const UNDERSCORE_GREEK = 57517
const UNDERSCORE_HEBREW = 57518
const UNDERSCORE_HP8 = 57519
const UNDERSCORE_KEYBCS2 = 57520
const UNDERSCORE_KOI8R = 57521
const UNDERSCORE_KOI8U = 57522
const UNDERSCORE_LATIN1 = 57523
const UNDERSCORE_LATIN2 = 57524
const UNDERSCORE_LATIN5 = 57525
const UNDERSCORE_LATIN7 = 57526
const UNDERSCORE_MACCE = 57527
const UNDERSCORE_MACROMAN = 57528
const UNDERSCORE_SJIS = 57529
const UNDERSCORE_SWE7 = 57530
const UNDERSCORE_TIS620 = 57531
const UNDERSCORE_UCS2 = 57532
const UNDERSCORE_UJIS = 57533
const UNDERSCORE_UTF16 = 57534
const UNDERSCORE_UTF16LE = 57535
const UNDERSCORE_UTF32 = 57536
const UNDERSCORE_UTF8 = 57537
const UNDERSCORE_UTF8MB4 = 57538
const INTERVAL = 57539
const JSON_EXTRACT_OP = 57540
const JSON_UNQUOTE_EXTRACT_OP = 57541
const CREATE = 57542
const ALTER = 57543
const DROP = 57544
const RENAME = 57545
const ANALYZE = 57546
const ADD = 57547
const FLUSH = 57548
const CHANGE = 57549
const MODIFY = 57550
const DEALLOCATE = 57551
const REVERT = 57552
const SCHEMA = 57553
const TABLE = 57554
const INDEX = 57555
const VIEW = 57556
const TO = 57557
const IGNORE = 57558
const IF = 57559
const PRIMARY = 57560
const COLUMN = 57561
const SPATIAL = 57562
const FULLTEXT = 57563
const KEY_BLOCK_SIZE = 57564
const CHECK = 57565
const INDEXES = 57566
const ACTION = 57567
const CASCADE = 57568
const CONSTRAINT = 57569
const FOREIGN = 57570
const NO = 57571
const REFERENCES = 57572
const RESTRICT = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const COALESCE = 57582
const EXCHANGE = 57583
const REBUILD = 57584
const PARTITIONING = 57585
const REMOVE = 57586
const PREPARE = 57587
const EXECUTE = 57588
const MAXVALUE = 57589
const PARTITION = 57590
const REORGANIZE = 57591
const LESS = 57592
const THAN = 57593
const PROCEDURE = 57594
const TRIGGER = 57595
const VINDEX = 57596
const VINDEXES = 57597
const DIRECTORY = 57598
const NAME = 57599
const UPGRADE = 57600
const STATUS = 57601
const VARIABLES = 57602
const WARNINGS = 57603
const CASCADED = 57604
const DEFINER = 57605
const OPTION = 57606
const SQL = 57607
const UNDEFINED = 57608
const SEQUENCE = 57609
const MERGE = 57610
const TEMPORARY = 57611
const TEMPTABLE = 57612
const INVOKER = 57613
const SECURITY = 57614
const FIRST = 57615
const AFTER = 57616
const LAST = 57617
const VITESS_MIGRATION = 57618
const CANCEL = 57619
const RETRY = 57620
const COMPLETE = 57621
const CLEANUP = 57622
const BEGIN = 57623
const START = 57624
const TRANSACTION = 57625
const COMMIT = 57626
const ROLLBACK = 57627
const SAVEPOINT = 57628
const RELEASE = 57629
const WORK = 57630
const BIT = 57631
const TINYINT = 57632
const SMALLINT = 57633
const MEDIUMINT = 57634
const INT = 57635
const INTEGER = 57636
const BIGINT = 57637
const INTNUM = 57638
const REAL = 57639
const DOUBLE = 57640
const FLOAT_TYPE = 57641
const DECIMAL_TYPE = 57642
const NUMERIC = 57643
const TIME = 57644
const TIMESTAMP = 57645
const DATETIME = 57646
const YEAR = 57647
const CHAR = 57648
const VARCHAR = 57649
const BOOL = 57650
const CHARACTER = 57651
const VARBINARY = 57652
const NCHAR = 57653
const TEXT = 57654
const TINYTEXT = 57655
const MEDIUMTEXT = 57656
const LONGTEXT = 57657
const BLOB = 57658
const TINYBLOB = 57659
const MEDIUMBLOB = 57660
const LONGBLOB = 57661
const JSON = 57662
const JSON_SCHEMA_VALID = 57663
const JSON_SCHEMA_VALIDATION_REPORT = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const ASCII = 57674
const UNICODE = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const CODE = 57682
const COLLATION = 57683
const COLUMNS = 57684
const DATABASES = 57685
const ENGINES = 57686
const EVENT = 57687
const EXTENDED = 57688
const FIELDS = 57689
const FULL = 57690
const FUNCTION = 57691
const GTID_EXECUTED = 57692
const KEYSPACES = 57693
const OPEN = 57694
const PLUGINS = 57695
const PRIVILEGES = 57696
const PROCESSLIST = 57697
const SCHEMAS = 57698
const TABLES = 57699
const TRIGGERS = 57700
const USER = 57701
const VGTID_EXECUTED = 57702
const VITESS_KEYSPACES = 57703
const VITESS_METADATA = 57704
const VITESS_MIGRATIONS = 57705
const VITESS_REPLICATION_STATUS = 57706
const VITESS_SHARDS = 57707
const VITESS_TABLETS = 57708
const VSCHEMA = 57709
const NAMES = 57710
const GLOBAL = 57711
const SESSION = 57712
const ISOLATION = 57713
const LEVEL = 57714
const READ = 57715
const WRITE = 57716
const ONLY = 57717
const REPEATABLE = 57718
const COMMITTED = 57719
const UNCOMMITTED = 57720
const SERIALIZABLE = 57721
const CURRENT_TIMESTAMP = 57722
const DATABASE = 57723
const CURRENT_DATE = 57724
const CURRENT_TIME = 57725
const LOCALTIME = 57726
const LOCALTIMESTAMP = 57727
const CURRENT_USER = 57728
const UTC_DATE = 57729
const UTC_TIME = 57730
const UTC_TIMESTAMP = 57731
const DAY = 57732
const DAY_HOUR = 57733
const DAY_MICROSECOND = 57734
const DAY_MINUTE = 57735
const DAY_SECOND = 57736
const HOUR = 57737
const HOUR_MICROSECOND = 57738
const HOUR_MINUTE = 57739
const HOUR_SECOND = 57740
const MICROSECOND = 57741
const MINUTE = 57742
const MINUTE_MICROSECOND = 57743
const MINUTE_SECOND = 57744
const MONTH = 57745
const QUARTER = 57746
const SECOND = 57747
const SECOND_MICROSECOND = 57748
const YEAR_MONTH = 57749
const WEEK = 57750
const REPLACE = 57751
const CONVERT = 57752
const CAST = 57753
const SUBSTR = 57754
const SUBSTRING = 57755
const GROUP_CONCAT = 57756
const SEPARATOR = 57757
const TIMESTAMPADD = 57758
const TIMESTAMPDIFF = 57759
const WEIGHT_STRING = 57760
const LTRIM = 57761
const RTRIM = 57762
const TRIM = 57763
const JSON_ARRAY = 57764
const JSON_OBJECT = 57765
const JSON_QUOTE = 57766
const MATCH = 57767
const AGAINST = 57768
const BOOLEAN = 57769
const LANGUAGE = 57770
const WITH = 57771
const QUERY = 57772
const EXPANSION = 57773
const WITHOUT = 57774
const VALIDATION = 57775
const UNUSED = 57776
const ARRAY = 57777
const CUME_DIST = 57778
const DESCRIPTION = 57779
const DENSE_RANK = 57780
const EMPTY = 57781
const EXCEPT = 57782
const FIRST_VALUE = 57783
const GROUPING = 57784
const GROUPS = 57785
const JSON_TABLE = 57786
const LAG = 57787
const LAST_VALUE = 57788
const LATERAL = 57789
const LEAD = 57790
const NTH_VALUE = 57791
const NTILE = 57792
const OF = 57793
const OVER = 57794
const PERCENT_RANK = 57795
const RANK = 57796
const RECURSIVE = 57797
const ROW_NUMBER = 57798
const SYSTEM = 57799
const WINDOW = 57800
const ACTIVE = 57801
const ADMIN = 57802
const BUCKETS = 57803
const CLONE = 57804
const COMPONENT = 57805
const DEFINITION = 57806
const ENFORCED = 57807
const EXCLUDE = 57808
const FOLLOWING = 57809
const GEOMCOLLECTION = 57810
const GET_MASTER_PUBLIC_KEY = 57811
const HISTOGRAM = 57812
const HISTORY = 57813
const INACTIVE = 57814
const INVISIBLE = 57815
const LOCKED = 57816
const MASTER_COMPRESSION_ALGORITHMS = 57817
const MASTER_PUBLIC_KEY_PATH = 57818
const MASTER_TLS_CIPHERSUITES = 57819
const MASTER_ZSTD_COMPRESSION_LEVEL = 57820
const NESTED = 57821
const NETWORK_NAMESPACE = 57822
const NOWAIT = 57823
const NULLS = 57824
const OJ = 57825
const OLD = 57826
const OPTIONAL = 57827
const ORDINALITY = 57828
const ORGANIZATION = 57829
const OTHERS = 57830
const PATH = 57831
const PERSIST = 57832
const PERSIST_ONLY = 57833
const PRECEDING = 57834
const PRIVILEGE_CHECKS_USER = 57835
const PROCESS = 57836
const RANDOM = 57837
const REFERENCE = 57838
const REQUIRE_ROW_FORMAT = 57839
const RESOURCE = 57840
const RESPECT = 57841
const RESTART = 57842
const RETAIN = 57843
const REUSE = 57844
const ROLE = 57845
const SECONDARY = 57846
const SECONDARY_ENGINE = 57847
const SECONDARY_LOAD = 57848
const SECONDARY_UNLOAD = 57849
const SKIP = 57850
const SRID = 57851
const THREAD_PRIORITY = 57852
const TIES = 57853
const UNBOUNDED = 57854
const VCPU = 57855
const VISIBLE = 57856
const FORMAT = 57857
const TREE = 57858
const VITESS = 57859
const TRADITIONAL = 57860
const LOCAL = 57861
const LOW_PRIORITY = 57862
const NO_WRITE_TO_BINLOG = 57863
const LOGS = 57864
const ERROR = 57865
const GENERAL = 57866
const HOSTS = 57867
const OPTIMIZER_COSTS = 57868
const USER_RESOURCES = 57869
const SLOW = 57870
const CHANNEL = 57871
const RELAY = 57872
const EXPORT = 57873
const AVG_ROW_LENGTH = 57874
const CONNECTION = 57875
const CHECKSUM = 57876
const DELAY_KEY_WRITE = 57877
const ENCRYPTION = 57878
const ENGINE = 57879
const INSERT_METHOD = 57880
const MAX_ROWS = 57881
const MIN_ROWS = 57882
const PACK_KEYS = 57883
const PASSWORD = 57884
const FIXED = 57885
const DYNAMIC = 57886
const COMPRESSED = 57887
const REDUNDANT = 57888
const COMPACT = 57889
const ROW_FORMAT = 57890
const STATS_AUTO_RECALC = 57891
const STATS_PERSISTENT = 57892
const STATS_SAMPLE_PAGES = 57893
const STORAGE = 57894
const MEMORY = 57895
const DISK = 57896
const PARTITIONS = 57897
const LINEAR = 57898
const RANGE = 57899
const LIST = 57900
const SUBPARTITION = 57901
const SUBPARTITIONS = 57902
const HASH = 57903

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"MEMBER",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	579, 145,
	-2, 151,
	-1, 48,
	129, 151,
	170, 151,
	326, 151,
	-2, 454,
	-1, 55,
	33, 652,
	230, 652,
	241, 652,
	276, 666,
	277, 666,
	-2, 654,
	-1, 60,
	232, 677,
	-2, 675,
	-1, 114,
	229, 1181,
	-2, 119,
	-1, 116,
	1, 146,
	579, 146,
	-2, 151,
	-1, 126,
	131, 357,
	235, 357,
	-2, 448,
	-1, 145,
	129, 151,
	170, 151,
	326, 151,
	-2, 463,
	-1, 647,
	214, 1202,
	-2, 1198,
	-1, 648,
	214, 1203,
	-2, 1199,
	-1, 722,
	57, 745,
	-2, 760,
	-1, 759,
	146, 1586,
	-2, 112,
	-1, 760,
	146, 1445,
	-2, 113,
	-1, 766,
	146, 1515,
	-2, 1175,
	-1, 913,
	146, 1376,
	-2, 1172,
	-1, 951,
	240, 41,
	245, 41,
	-2, 368,
	-1, 1028,
	1, 502,
	579, 502,
	-2, 151,
	-1, 1249,
	57, 746,
	-2, 765,
	-1, 1250,
	57, 747,
	-2, 766,
	-1, 1303,
	129, 151,
	170, 151,
	326, 151,
	-2, 398,
	-1, 1380,
	131, 357,
	235, 357,
	-2, 448,
	-1, 1389,
	240, 42,
	245, 42,
	-2, 369,
	-1, 1672,
	214, 1207,
	-2, 1201,
	-1, 1755,
	129, 151,
	170, 151,
	326, 151,
	-2, 399,
	-1, 1762,
	23, 170,
	-2, 172,
	-1, 1980,
	84, 39,
	-2, 802,
	-1, 2032,
	75, 94,
	84, 94,
	-2, 822,
	-1, 2220,
	47, 1143,
	-2, 1137,
	-1, 2401,
	84, 39,
	-2, 803,
	-1, 2439,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 794,
	-1, 2702,
	20, 1517,
	30, 1517,
	171, 1517,
	252, 1517,
	306, 1517,
	307, 1517,
	308, 1517,
	309, 1517,
	310, 1517,
	311, 1517,
	312, 1517,
	314, 1517,
	315, 1517,
	316, 1517,
	317, 1517,
	318, 1517,
	319, 1517,
	320, 1517,
	321, 1517,
	322, 1517,
	323, 1517,
	324, 1517,
	325, 1517,
	327, 1517,
	329, 1517,
	330, 1517,
	331, 1517,
	332, 1517,
	333, 1517,
	334, 1517,
	335, 1517,
	336, 1517,
	337, 1517,
	340, 1517,
	341, 1517,
	342, 1517,
	343, 1517,
	344, 1517,
	345, 1517,
	346, 1517,
	347, 1517,
	348, 1517,
	444, 1517,
	-2, 542,
}

const yyPrivate = 57344

const yyLast = 39327

var yyAct = [...]int{
	647, 656, 2768, 2189, 2767, 2750, 2644, 2744, 1752, 2700,
	2704, 2500, 2343, 1306, 2684, 649, 2273, 2280, 1686, 1949,
	1092, 2234, 1706, 2603, 3, 2231, 2314, 1228, 2530, 2326,
	1968, 1815, 1264, 580, 2282, 2325, 2003, 641, 37, 737,
	2620, 2235, 642, 2410, 2188, 2232, 96, 650, 2404, 715,
	2535, 182, 577, 639, 182, 640, 544, 182, 606, 1710,
	2328, 1725, 560, 2229, 182, 2430, 1995, 1233, 2187, 2221,
	2026, 1785, 182, 2396, 578, 2064, 2093, 576, 2134, 1805,
	1790, 2065, 1741, 2066, 154, 981, 764, 182, 36, 2015,
	1251, 1987, 38, 1970, 916, 572, 2151, 1730, 738, 140,
	1656, 1666, 1804, 1596, 1729, 1387, 1857, 1586, 1069, 560,
	1544, 1824, 560, 182, 560, 719, 2058, 723, 941, 946,
	1792, 514, 1295, 717, 1273, 1403, 2034, 1688, 91, 761,
	589, 563, 1732, 1231, 1175, 740, 95, 1495, 1608, 710,
	1111, 1563, 923, 1491, 949, 584, 952, 1394, 1802, 920,
	924, 1717, 947, 948, 1781, 1477, 1294, 1278, 1711, 729,
	1085, 1652, 1292, 1500, 157, 1355, 98, 1379, 724, 959,
	123, 1090, 725, 124, 727, 1178, 751, 85, 2653, 1182,
	922, 117, 118, 1024, 1040, 1679, 89, 76, 2086, 97,
	2751, 1817, 1818, 1819, 1817, 2311, 2113, 2112, 1855, 1360,
	2084, 1463, 8, 567, 726, 77, 745, 7, 750, 6,
	2142, 2143, 119, 2778, 517, 1551, 125, 2777, 1550, 731,
	1683, 1684, 90, 184, 185, 186, 2771, 1549, 983, 1548,
	986, 917, 102, 1547, 1546, 1533, 1112, 1669, 570, 2718,
	571, 997, 998, 1966, 1001, 1002, 1003, 1004, 1538, 2217,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 718, 716, 765, 1997, 568,
	2764, 758, 962, 104, 105, 739, 108, 732, 939, 114,
	932, 119, 179, 927, 2728, 512, 2741, 2465, 1556, 2599,
	2598, 987, 988, 989, 2297, 985, 984, 963, 938, 937,
	2493, 2778, 78, 2494, 78, 711, 712, 713, 714, 178,
	2770, 722, 2763, 1797, 2694, 2754, 999, 2664, 2739, 78,
	2089, 1112, 80, 994, 2501, 2685, 2006, 1843, 2693, 2663,
	78, 2150, 2377, 120, 1895, 142, 178, 1795, 1369, 753,
	754, 1122, 2270, 2271, 931, 119, 162, 933, 184, 185,
	186, 2007, 2121, 2548, 1967, 936, 2120, 1033, 1034, 1027,
	120, 1076, 2043, 1078, 1296, 2042, 1297, 1685, 2044, 1747,
	1748, 2269, 2141, 162, 1892, 1746, 1088, 152, 1059, 87,
	1047, 87, 141, 1064, 1065, 1048, 709, 708, 2645, 1036,
	2087, 547, 1047, 1046, 1060, 1045, 87, 1048, 1893, 1053,
	2055, 1075, 1077, 159, 2345, 160, 2407, 87, 1765, 1764,
	2177, 2368, 2366, 934, 558, 2048, 547, 547, 547, 1537,
	562, 1381, 1382, 151, 150, 177, 1122, 1235, 556, 2094,
	159, 1825, 160, 534, 2338, 1483, 1118, 1453, 2116, 1110,
	1144, 936, 2339, 928, 1539, 1540, 1541, 1863, 1858, 2753,
	930, 929, 177, 1478, 547, 1062, 1063, 1000, 940, 1082,
	1023, 2608, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153,
	1152, 1154, 1155, 1029, 1066, 1061, 1068, 1794, 1087, 533,
	1054, 1454, 2129, 1455, 1067, 2346, 1869, 1866, 1868, 1867,
	1874, 531, 1006, 1871, 1073, 1872, 2719, 1873, 1074, 934,
	1005, 2347, 1864, 1860, 2486, 2322, 1862, 1828, 1079, 936,
	1022, 970, 182, 1726, 182, 968, 942, 182, 87, 943,
	943, 1118, 146, 1383, 153, 935, 1380, 1238, 147, 148,
	1072, 528, 979, 978, 163, 1080, 977, 976, 975, 974,
	542, 973, 1372, 168, 972, 560, 560, 560, 1861, 967,
	980, 1893, 2133, 1156, 961, 539, 2286, 2758, 2737, 921,
	2748, 163, 2178, 560, 560, 954, 921, 1156, 921, 1393,
	168, 955, 919, 996, 1026, 1492, 1803, 1971, 1973, 1031,
	752, 1037, 1057, 2130, 1039, 1849, 1488, 1098, 548, 1104,
	990, 2304, 2115, 1367, 1366, 1365, 2105, 1489, 1363, 516,
	511, 2641, 37, 2446, 1117, 1114, 1115, 1116, 1121, 1123,
	1120, 935, 1119, 548, 548, 548, 2321, 1845, 2426, 1113,
	518, 961, 520, 535, 2652, 550, 2128, 549, 524, 2127,
	522, 526, 536, 527, 2085, 521, 2146, 532, 2296, 1484,
	523, 537, 538, 540, 554, 553, 541, 1083, 530, 551,
	1907, 548, 960, 2039, 2002, 971, 155, 964, 954, 969,
	1159, 1160, 1161, 1162, 1958, 1025, 2088, 965, 1678, 2118,
	1167, 1282, 1170, 1392, 1712, 1713, 1081, 1157, 1158, 935,
	1208, 1753, 961, 155, 1796, 1482, 2408, 966, 961, 1117,
	1114, 1115, 1116, 1121, 1123, 1120, 1226, 1119, 1038, 2595,
	1155, 2276, 2662, 1043, 1113, 1049, 1050, 1051, 1052, 182,
	2136, 2136, 116, 560, 560, 2135, 2135, 1094, 1095, 960,
	2268, 1156, 1163, 184, 185, 186, 734, 1588, 1089, 182,
	1086, 149, 1465, 1464, 1466, 1467, 1468, 2769, 1972, 81,
	2658, 2482, 86, 111, 86, 2420, 2277, 1227, 560, 982,
	143, 2609, 182, 144, 1241, 1239, 1070, 560, 1245, 86,
	1894, 1501, 1859, 560, 719, 717, 1244, 1107, 1242, 77,
	86, 2279, 1105, 2746, 1106, 1485, 2747, 761, 2745, 1056,
	960, 1180, 995, 1181, 1298, 2274, 960, 1108, 1044, 1184,
	1058, 964, 954, 1035, 1042, 2170, 1032, 1568, 552, 2077,
	1609, 965, 1221, 2284, 2285, 1609, 1844, 1921, 1589, 1227,
	2275, 1569, 1570, 1567, 112, 1127, 545, 2544, 1243, 1287,
	961, 2457, 95, 1214, 1215, 1216, 1217, 2456, 1479, 1832,
	1480, 546, 1402, 1481, 1718, 1719, 961, 1917, 1126, 1127,
	1401, 1232, 2281, 1148, 1149, 1150, 1151, 1153, 1152, 1154,
	1155, 1391, 98, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 1837, 2733, 1558, 1560, 1561, 173,
	174, 175, 176, 1150, 1151, 1153, 1152, 1154, 1155, 1842,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 1559, 1840, 1028, 1240, 970, 173, 174, 175, 176,
	1071, 1841, 2447, 1263, 968, 1502, 1283, 2283, 716, 1916,
	1260, 1229, 2761, 87, 718, 765, 182, 2734, 960, 2286,
	1356, 1837, 1472, 2670, 954, 957, 958, 1566, 921, 1364,
	1288, 1289, 951, 955, 960, 1041, 2619, 1258, 2590, 1128,
	954, 957, 958, 1125, 921, 1126, 1127, 2759, 951, 955,
	560, 2634, 1389, 950, 1246, 1128, 1930, 1293, 1839, 1125,
	1398, 1126, 1127, 2516, 1400, 2671, 2515, 560, 560, 1470,
	560, 2464, 560, 560, 1144, 560, 560, 560, 560, 560,
	560, 2463, 1128, 1305, 2312, 1471, 1125, 2302, 1126, 1127,
	560, 1460, 2638, 2635, 182, 1436, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1153, 1152, 1154, 1155, 1899, 1900, 1901,
	182, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1152, 1154,
	1155, 560, 2374, 182, 2278, 1370, 1371, 2062, 2061, 1128,
	1800, 2760, 1469, 1125, 1490, 1126, 1127, 560, 1473, 182,
	1458, 1457, 2172, 1456, 1385, 1378, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1130, 1459, 182, 1447, 1258, 661, 662,
	663, 1435, 182, 1128, 1613, 1397, 756, 1125, 1614, 1126,
	1127, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	560, 560, 560, 1441, 1433, 1439, 1440, 1258, 1438, 1437,
	1476, 1445, 1446, 1405, 2637, 1406, 1938, 1408, 1410, 1412,
	2636, 1414, 1416, 1418, 1420, 1422, 1396, 1267, 1399, 2543,
	1362, 182, 1375, 2541, 2512, 1376, 2461, 1388, 1374, 184,
	185, 186, 1506, 2454, 2453, 1497, 2071, 1395, 1395, 1510,
	2059, 1223, 1128, 1431, 1432, 1853, 1125, 1449, 1126, 1127,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1852, 1709, 1434,
	184, 185, 186, 1691, 1503, 1504, 1268, 1587, 1534, 1593,
	1593, 1590, 1594, 1498, 1461, 1368, 1448, 1444, 1508, 1258,
	1599, 560, 1443, 1591, 1591, 1515, 1516, 1517, 1545, 1493,
	2372, 1258, 1564, 1442, 1128, 1269, 560, 560, 1125, 1084,
	1126, 1127, 2342, 119, 1571, 1097, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1562,
	938, 937, 1993, 2752, 1128, 2724, 1258, 1572, 1125, 1507,
	1126, 1127, 2735, 1993, 2691, 1653, 1128, 1993, 2678, 1670,
	1125, 1258, 1126, 1127, 182, 92, 1993, 2674, 1505, 560,
	184, 185, 186, 1531, 2046, 1509, 93, 1511, 1512, 1513,
	1514, 1528, 1529, 1530, 1518, 2315, 2419, 184, 185, 186,
	2616, 1813, 1653, 182, 2666, 1258, 560, 1128, 1532, 2710,
	1565, 1125, 2615, 1126, 1127, 101, 182, 184, 185, 186,
	560, 1811, 1696, 2708, 1697, 182, 100, 182, 99, 182,
	182, 560, 2712, 2713, 560, 1672, 2649, 94, 1993, 2654,
	1258, 2284, 2285, 1670, 1144, 560, 2145, 101, 2709, 2584,
	1271, 761, 1674, 1675, 761, 1762, 2491, 2651, 100, 2583,
	99, 2391, 1258, 1610, 2499, 95, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1153, 1152, 1154, 1155, 1993, 2591, 2491,
	1258, 1128, 1702, 1720, 95, 1125, 1671, 1126, 1127, 1993,
	2489, 2230, 1724, 1912, 1727, 1258, 2095, 1545, 2074, 1728,
	560, 2419, 1911, 1837, 1258, 94, 1806, 1807, 1808, 1672,
	1761, 1810, 1812, 2424, 1258, 1270, 2716, 1771, 1772, 1773,
	1774, 2294, 2293, 2290, 2291, 560, 2681, 1258, 1756, 731,
	2421, 560, 1398, 1950, 1124, 1398, 1690, 1398, 2657, 1757,
	1739, 1993, 1595, 1836, 2004, 2283, 2290, 2289, 1128, 1601,
	1602, 2012, 1125, 2391, 1126, 1127, 1826, 2286, 2012, 1258,
	1723, 1128, 1704, 1258, 1760, 1125, 1787, 1126, 1127, 1908,
	1258, 2292, 2441, 560, 2205, 1587, 1745, 1721, 1793, 1128,
	1587, 1587, 1144, 1125, 1906, 1126, 1127, 1673, 1744, 765,
	1676, 1677, 765, 1743, 1893, 2114, 100, 1759, 1758, 1359,
	2099, 2091, 2092, 2152, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1153, 1152, 1154, 1155, 2012, 182, 1908, 1128, 1823,
	1993, 1992, 1125, 182, 1126, 1127, 1701, 1943, 182, 182,
	1124, 1258, 182, 2004, 182, 1359, 1358, 1831, 1304, 1303,
	1834, 182, 1835, 2011, 1989, 1788, 1783, 1784, 182, 1258,
	1798, 1766, 1799, 1767, 1768, 1769, 1770, 1809, 1801, 94,
	2588, 2035, 1838, 1927, 1908, 2263, 1926, 1846, 962, 1777,
	1778, 1779, 1780, 1830, 1893, 1829, 182, 560, 1788, 1837,
	648, 1833, 1848, 1545, 2154, 1847, 2393, 1850, 1851, 1820,
	1865, 1716, 1262, 963, 1128, 1875, 1876, 2012, 1125, 1880,
	1126, 1127, 1681, 1395, 2419, 1128, 1542, 1910, 1883, 1125,
	1638, 1126, 1127, 2483, 92, 1886, 1908, 1487, 2035, 1837,
	1290, 94, 2389, 945, 2036, 93, 1856, 944, 87, 2068,
	2380, 183, 1128, 2038, 183, 2605, 1125, 183, 1126, 1127,
	721, 1265, 561, 1889, 183, 2581, 2164, 2163, 2162, 2156,
	1564, 2160, 183, 2155, 2555, 2153, 2481, 2478, 1128, 2459,
	2158, 1903, 1125, 1905, 1126, 1127, 2383, 183, 1128, 2157,
	2382, 1361, 1125, 1877, 1126, 1127, 1128, 1027, 1786, 1258,
	1125, 2036, 1126, 1127, 1904, 2340, 2159, 2161, 2344, 561,
	1893, 2317, 561, 183, 561, 1630, 1619, 1620, 1621, 1622,
	1632, 1623, 1624, 1625, 1637, 1633, 1626, 1627, 1634, 1635,
	1636, 1628, 1629, 1631, 1128, 2313, 2100, 87, 1125, 1782,
	1126, 1127, 182, 1891, 1776, 1775, 1475, 1390, 1884, 1885,
	182, 2379, 1386, 1887, 1593, 560, 1977, 1357, 1565, 1964,
	1144, 560, 1888, 1140, 2063, 1141, 113, 2606, 1591, 1902,
	2470, 1797, 560, 1694, 1953, 2067, 2776, 1981, 2774, 1142,
	1143, 1139, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153,
	1152, 1154, 1155, 2431, 2432, 182, 2730, 1128, 2705, 182,
	2434, 1125, 2309, 1126, 1127, 2466, 1920, 2308, 2307, 1128,
	2008, 2230, 1424, 1125, 2045, 1126, 1127, 2471, 2472, 1952,
	1128, 2078, 2068, 37, 1125, 1672, 1126, 1127, 1427, 1994,
	1878, 1535, 2028, 2252, 2250, 2525, 2437, 2524, 2253, 2251,
	1936, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1152,
	1154, 1155, 2436, 1990, 2249, 2467, 2468, 2469, 560, 1425,
	1426, 1951, 2248, 182, 2721, 1128, 2032, 2692, 1708, 1125,
	182, 1126, 1127, 1266, 1232, 1965, 1671, 1975, 1428, 1429,
	1430, 1700, 560, 2027, 2425, 2523, 2210, 2056, 2057, 560,
	1986, 2209, 2097, 1398, 1398, 2633, 1991, 2534, 560, 1948,
	2049, 2001, 1918, 2254, 2090, 2021, 2022, 1128, 2412, 2033,
	2111, 1125, 2536, 1126, 1127, 2415, 2411, 2110, 735, 2219,
	2288, 182, 182, 182, 182, 182, 736, 2037, 2040, 1947,
	2076, 1793, 1486, 2047, 2222, 2224, 707, 2050, 182, 182,
	2070, 2053, 2072, 2225, 992, 1128, 991, 632, 2354, 1125,
	1946, 1126, 1127, 2060, 182, 2067, 2017, 2020, 2021, 2022,
	2018, 1944, 2019, 2023, 1605, 1955, 1956, 2139, 2075, 2079,
	2080, 2081, 2069, 1587, 92, 1128, 92, 1096, 1606, 1125,
	1378, 1126, 1127, 94, 2109, 93, 2107, 93, 2122, 2123,
	2124, 2125, 2126, 2106, 120, 2417, 1128, 94, 2101, 2102,
	1125, 2756, 1126, 1127, 2305, 1545, 2132, 1128, 1881, 559,
	1593, 1125, 1593, 1126, 1127, 1593, 1718, 1719, 2108, 560,
	2650, 2140, 2601, 2287, 1591, 717, 1591, 101, 2169, 1591,
	2025, 1705, 743, 744, 1870, 560, 1940, 2208, 100, 2199,
	99, 2397, 2148, 1897, 2147, 2207, 99, 2625, 2131, 94,
	182, 101, 2137, 2624, 560, 2138, 763, 2542, 2195, 918,
	2540, 925, 100, 560, 99, 2539, 2532, 2479, 2165, 2416,
	560, 560, 2149, 182, 182, 182, 182, 182, 2414, 2192,
	2166, 2318, 1128, 2199, 2212, 182, 1125, 1821, 1126, 1127,
	182, 1373, 742, 182, 101, 182, 100, 2242, 182, 182,
	182, 2531, 2405, 2227, 2183, 100, 2004, 723, 1989, 2179,
	2236, 2262, 183, 1928, 183, 2732, 2731, 183, 1692, 2198,
	2213, 1284, 1275, 2200, 106, 107, 2732, 1245, 2028, 2639,
	2452, 733, 103, 2303, 88, 1, 2707, 529, 2211, 182,
	1682, 2214, 1230, 543, 2703, 561, 561, 561, 1462, 1452,
	2502, 1654, 560, 1655, 2190, 2602, 2190, 2096, 724, 2190,
	2204, 560, 725, 561, 561, 2264, 182, 1827, 2265, 2477,
	1791, 2244, 2245, 2255, 2247, 953, 182, 2243, 2259, 2260,
	2246, 2266, 1939, 2324, 145, 1754, 1497, 95, 1755, 2687,
	110, 182, 914, 2272, 182, 109, 2241, 956, 1055, 1822,
	2492, 2201, 2202, 2203, 2355, 2054, 2306, 1763, 2299, 2298,
	1310, 1308, 2233, 2300, 2301, 1309, 1307, 2233, 1312, 1311,
	1929, 2332, 1536, 2331, 557, 2024, 180, 1299, 1128, 1276,
	993, 519, 1125, 2327, 1126, 1127, 2295, 1854, 525, 1793,
	2323, 1168, 2206, 2336, 2041, 2335, 2319, 762, 755, 2017,
	2020, 2021, 2022, 2018, 1693, 2019, 2023, 1979, 2348, 2431,
	2432, 2351, 1256, 1252, 2238, 2388, 560, 182, 2350, 2409,
	2349, 2218, 2220, 1996, 2223, 1256, 1252, 1253, 2216, 2632,
	2533, 2358, 2679, 2357, 2051, 1272, 1919, 1607, 2364, 1733,
	1253, 1557, 582, 581, 579, 1982, 2005, 1131, 651, 1969,
	2320, 1285, 1698, 1699, 1255, 2016, 1254, 2014, 2403, 183,
	2013, 1879, 1740, 561, 561, 1249, 1250, 1255, 2433, 1254,
	2429, 2766, 2699, 1735, 182, 1731, 1988, 590, 583, 183,
	575, 2449, 2330, 2117, 2402, 2341, 2398, 2399, 2119, 2428,
	2052, 2337, 2455, 2406, 1109, 1248, 569, 182, 561, 2438,
	2413, 926, 183, 1604, 2607, 2418, 2593, 561, 1896, 2376,
	1247, 2444, 2445, 561, 1617, 182, 1618, 2310, 182, 182,
	182, 1814, 2435, 63, 41, 1645, 564, 2717, 560, 560,
	1100, 749, 2352, 2353, 2442, 32, 31, 30, 29, 28,
	2332, 23, 2331, 22, 2443, 2450, 21, 2451, 20, 19,
	2484, 2485, 25, 18, 17, 560, 560, 560, 560, 2460,
	16, 2462, 2361, 2362, 2458, 2363, 2727, 2755, 2365, 115,
	2367, 50, 2369, 47, 45, 2487, 122, 121, 48, 2498,
	44, 1030, 2473, 42, 27, 2474, 2475, 2476, 26, 15,
	14, 2496, 2497, 13, 12, 11, 10, 9, 5, 4,
	35, 1593, 34, 1593, 33, 1103, 24, 2, 2083, 1816,
	0, 182, 0, 0, 0, 1591, 0, 1591, 0, 0,
	0, 0, 2507, 0, 0, 0, 2511, 0, 0, 2528,
	0, 0, 2508, 0, 0, 560, 0, 560, 0, 0,
	0, 0, 763, 763, 763, 0, 2520, 0, 0, 0,
	0, 0, 0, 1593, 0, 2557, 0, 2551, 2549, 0,
	1099, 1101, 2529, 2538, 0, 0, 183, 1591, 2519, 2537,
	0, 37, 0, 2547, 2236, 2545, 0, 0, 2236, 0,
	0, 0, 0, 0, 0, 717, 0, 0, 2553, 2558,
	2559, 0, 560, 0, 0, 0, 2561, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 560, 0, 2589, 0, 2585, 561, 561, 0,
	561, 2587, 561, 561, 2586, 561, 561, 561, 561, 561,
	561, 2597, 2604, 560, 2596, 0, 0, 560, 560, 2592,
	561, 0, 0, 0, 183, 2190, 0, 2190, 178, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 560, 0, 2629, 2628,
	2631, 561, 120, 183, 0, 2233, 0, 2626, 2627, 0,
	2640, 0, 0, 0, 0, 162, 0, 561, 2643, 183,
	0, 0, 560, 0, 0, 0, 0, 0, 0, 0,
	0, 2236, 0, 2642, 0, 183, 0, 0, 0, 0,
	1236, 1237, 183, 0, 2648, 717, 560, 182, 2646, 0,
	0, 183, 183, 183, 183, 183, 183, 183, 183, 183,
	561, 561, 561, 0, 0, 0, 2656, 0, 2659, 0,
	0, 0, 159, 0, 160, 1280, 0, 0, 0, 37,
	0, 0, 560, 0, 763, 0, 0, 0, 0, 0,
	1300, 183, 0, 0, 177, 0, 0, 0, 560, 560,
	0, 0, 0, 0, 0, 2672, 0, 560, 0, 0,
	0, 0, 0, 0, 2660, 2680, 182, 560, 2604, 2688,
	2682, 2686, 0, 0, 0, 2695, 2677, 0, 37, 0,
	0, 0, 0, 0, 2698, 2714, 2706, 2711, 0, 0,
	0, 0, 0, 0, 2720, 0, 0, 0, 0, 0,
	0, 561, 0, 0, 2729, 2726, 0, 560, 0, 0,
	0, 0, 0, 0, 0, 560, 561, 561, 0, 1593,
	0, 2743, 2738, 0, 2740, 2742, 0, 0, 0, 2736,
	2749, 0, 0, 1591, 0, 0, 0, 0, 0, 0,
	2757, 0, 0, 0, 0, 0, 0, 0, 2762, 0,
	0, 0, 0, 163, 0, 0, 1593, 0, 2765, 2773,
	0, 2772, 168, 1593, 183, 2775, 0, 0, 0, 561,
	1591, 0, 0, 0, 0, 2233, 0, 1591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	561, 0, 0, 0, 0, 183, 0, 183, 0, 183,
	183, 561, 0, 0, 561, 0, 0, 918, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 0, 0,
	1224, 0, 0, 0, 1404, 1404, 0, 1404, 0, 1404,
	1404, 0, 1413, 1404, 1404, 1404, 1404, 1404, 0, 0,
	0, 0, 0, 0, 0, 1224, 1224, 918, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 0, 0, 0,
	561, 0, 0, 0, 0, 0, 0, 0, 1474, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 0, 142,
	0, 0, 0, 0, 1494, 561, 0, 0, 0, 0,
	162, 561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 141, 763, 763, 763,
	0, 0, 0, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 160,
	0, 2563, 2565, 2564, 2574, 2575, 2576, 2577, 2578, 2579,
	2580, 612, 0, 0, 0, 129, 130, 151, 150, 177,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 183, 183,
	0, 0, 183, 0, 183, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1600, 0,
	0, 0, 0, 0, 0, 1224, 0, 0, 0, 0,
	0, 0, 0, 1615, 1616, 0, 183, 561, 0, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 763, 0, 173, 174,
	175, 176, 0, 0, 0, 0, 146, 127, 153, 134,
	126, 0, 147, 148, 0, 0, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 1695, 168, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 136, 131, 132, 133, 137, 0, 0,
	0, 0, 0, 1707, 128, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 1280, 0, 0,
	763, 0, 0, 0, 0, 0, 0, 0, 763, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 918, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 2569, 2570, 0,
	183, 0, 0, 0, 0, 561, 0, 0, 0, 0,
	155, 561, 0, 0, 0, 0, 0, 925, 0, 0,
	0, 1257, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 918, 0, 0, 183, 0, 0, 925, 183,
	0, 0, 0, 0, 0, 0, 643, 0, 607, 609,
	644, 645, 0, 605, 608, 646, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	918, 0, 610, 611, 2562, 2566, 2567, 2568, 2571, 2572,
	2573, 0, 0, 0, 143, 0, 0, 144, 561, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 0, 561, 515, 0, 0, 555, 0, 0, 561,
	0, 0, 0, 515, 0, 0, 0, 0, 561, 0,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 730, 0, 0, 0,
	0, 183, 183, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 748, 0, 748, 0, 0, 0, 183, 183,
	0, 0, 515, 0, 1890, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 178, 0,
	0, 0, 0, 173, 174, 175, 176, 0, 0, 1377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 561,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 152, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 561, 0, 0, 0, 0, 0,
	0, 0, 159, 561, 160, 0, 0, 0, 0, 0,
	561, 561, 0, 183, 183, 183, 183, 183, 0, 0,
	1381, 1382, 151, 150, 177, 183, 763, 0, 0, 0,
	183, 0, 0, 183, 0, 183, 0, 0, 183, 183,
	183, 0, 1707, 0, 0, 0, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 2725, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 1327, 0, 0, 0, 0, 0, 0,
	0, 561, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 146, 1383, 153, 0, 1380, 0, 147, 148, 0,
	0, 183, 0, 163, 183, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 2073, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1707,
	0, 0, 0, 0, 0, 0, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 2103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 515, 0, 515, 0, 0, 515, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 1224, 0,
	0, 1224, 0, 0, 0, 183, 763, 0, 183, 183,
	183, 0, 0, 0, 0, 1328, 0, 0, 561, 561,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2215, 0, 0, 0, 561, 561, 561, 561, 143,
	763, 0, 144, 0, 1224, 0, 0, 2240, 1404, 1224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	1344, 1345, 1346, 1347, 1348, 1349, 0, 1350, 1351, 1352,
	1353, 1354, 1329, 1330, 1331, 1332, 1313, 1314, 1342, 0,
	1316, 0, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 183, 0, 1326, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 561, 1225, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 1259, 1261, 0, 918,
	0, 0, 1224, 0, 0, 0, 0, 0, 1707, 0,
	0, 0, 156, 161, 158, 164, 165, 166, 167, 169,
	170, 171, 172, 0, 0, 0, 0, 0, 173, 174,
	175, 176, 0, 0, 658, 79, 0, 0, 515, 0,
	0, 0, 561, 0, 0, 78, 39, 40, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 730, 0,
	0, 0, 561, 0, 0, 84, 0, 1343, 0, 43,
	69, 70, 0, 67, 71, 0, 0, 0, 0, 0,
	0, 515, 68, 561, 0, 0, 0, 561, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 56, 720, 2215, 79, 0, 561, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 720, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 561, 561,
	0, 0, 0, 0, 0, 1707, 1707, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 561, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 0, 0, 0,
	0, 0, 2503, 2504, 2505, 2506, 46, 49, 52, 51,
	54, 0, 66, 0, 0, 75, 72, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 561, 0, 0,
	0, 0, 0, 0, 0, 561, 0, 0, 55, 83,
	82, 0, 1225, 64, 65, 53, 0, 1224, 0, 1224,
	0, 73, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1225, 1225, 0,
	0, 0, 0, 515, 0, 0, 0, 1224, 0, 0,
	0, 0, 2550, 0, 2552, 0, 0, 57, 58, 1450,
	59, 60, 61, 62, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 0, 0, 0, 515, 0, 0, 0, 0, 1707,
	0, 515, 0, 0, 0, 0, 0, 0, 0, 0,
	1519, 1520, 515, 515, 515, 515, 515, 515, 515, 763,
	0, 0, 0, 0, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2622, 0, 0, 0, 2622, 2622, 0, 0, 0, 0,
	515, 0, 0, 0, 0, 0, 0, 573, 0, 0,
	0, 1611, 0, 0, 0, 1612, 0, 0, 0, 0,
	0, 0, 0, 1707, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 741,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 1707,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 1259,
	1680, 748, 748, 0, 0, 0, 0, 1225, 0, 0,
	0, 0, 0, 1707, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 0, 0, 0, 0, 748, 1496, 748,
	748, 748, 748, 748, 0, 0, 0, 1224, 0, 2673,
	0, 0, 0, 0, 0, 0, 1315, 0, 0, 0,
	0, 0, 0, 1450, 0, 763, 763, 0, 0, 0,
	0, 0, 0, 0, 2696, 0, 0, 0, 748, 1091,
	1091, 1091, 0, 0, 2701, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 515, 0, 0, 0, 0,
	0, 0, 1496, 0, 515, 0, 515, 0, 515, 1742,
	0, 0, 0, 0, 1707, 0, 720, 1164, 1165, 1166,
	0, 1169, 2701, 1171, 1172, 1173, 1174, 1328, 1177, 1179,
	1179, 0, 1179, 1183, 1183, 1185, 1186, 1187, 1188, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 0, 1209,
	1210, 1211, 1212, 1213, 0, 0, 0, 0, 1183, 1183,
	1183, 1183, 659, 660, 0, 0, 0, 0, 1592, 0,
	0, 1341, 1344, 1345, 1346, 1347, 1348, 1349, 0, 1350,
	1351, 1352, 1353, 1354, 1329, 1330, 1331, 1332, 1313, 1314,
	1342, 0, 1316, 0, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 0, 0, 1326, 1333, 1334, 1335, 1336,
	1337, 1338, 1339, 1340, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 720, 0, 0, 0, 720, 0, 0, 0, 0,
	0, 720, 0, 0, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 515, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 515, 515, 0,
	0, 515, 0, 1882, 0, 0, 0, 0, 0, 1343,
	515, 0, 0, 0, 0, 0, 0, 515, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 1909, 0, 0,
	0, 1913, 0, 1914, 1915, 0, 0, 0, 0, 0,
	0, 0, 1923, 0, 0, 1924, 1925, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1931, 1932, 1933, 1934, 1935, 0, 1937, 0,
	0, 0, 0, 0, 1941, 0, 1942, 0, 0, 0,
	1945, 0, 0, 0, 748, 0, 0, 0, 1954, 0,
	0, 0, 0, 0, 0, 1959, 1960, 1961, 1962, 1963,
	0, 1703, 0, 0, 1129, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1176, 87, 0, 0, 0, 0, 0, 652,
	659, 660, 661, 662, 663, 653, 655, 748, 748, 0,
	654, 0, 0, 0, 0, 0, 0, 0, 1496, 0,
	0, 515, 0, 657, 664, 665, 0, 0, 0, 1450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2333, 2334, 1978, 0, 515, 659, 660, 0, 515, 0,
	0, 1592, 666, 667, 668, 669, 670, 671, 672, 673,
	674, 675, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 0, 1091, 1091, 1091, 0, 0, 0,
	0, 0, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 0, 0, 0, 0, 0, 0, 2082,
	0, 0, 0, 0, 0, 0, 0, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 0, 0,
	515, 515, 515, 515, 515, 0, 0, 0, 0, 0,
	0, 2176, 0, 0, 0, 0, 0, 515, 515, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2191, 0, 515, 0, 0, 0, 2196, 2197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1225, 0,
	1225, 2239, 0, 1225, 0, 0, 0, 748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 643, 2257, 2258,
	0, 644, 645, 0, 0, 0, 646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	0, 0, 0, 1734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1225, 0, 0, 0,
	0, 1225, 515, 515, 515, 515, 515, 0, 0, 0,
	0, 0, 0, 0, 2256, 0, 0, 0, 0, 515,
	0, 0, 1450, 0, 515, 0, 0, 515, 2267, 1496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 0,
	0, 0, 0, 0, 0, 0, 2356, 0, 0, 0,
	0, 0, 1499, 2360, 1225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 0, 2370, 2371, 2373,
	2375, 0, 0, 0, 0, 515, 0, 2381, 0, 0,
	0, 0, 2385, 2386, 2387, 0, 0, 0, 0, 2390,
	515, 0, 0, 515, 0, 2392, 0, 2394, 0, 0,
	2395, 0, 0, 0, 0, 0, 2400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1552, 1553, 1554, 1555, 0, 2422,
	2423, 0, 0, 2427, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2439, 2440, 0, 0, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 1597, 1598, 0, 0, 0,
	0, 0, 0, 1603, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1639, 1640,
	1641, 1642, 1643, 1644, 1646, 1650, 1651, 573, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 0, 0, 0,
	0, 1898, 0, 515, 0, 0, 0, 2490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 0, 0, 515, 515, 515,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1714, 1715, 0, 0, 0, 0, 2517, 0, 0, 0,
	2518, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	0, 1225, 1974, 0, 0, 0, 0, 0, 0, 0,
	1450, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	720, 0, 0, 0, 0, 0, 0, 0, 0, 1225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2009, 2010, 0, 0, 0, 0, 0, 2600, 0, 2029,
	0, 2030, 2031, 0, 0, 0, 0, 0, 0, 0,
	0, 2610, 2611, 2612, 0, 2613, 2614, 0, 0, 0,
	0, 2617, 0, 2618, 2621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2647, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2104, 0, 0, 0, 0, 0, 2661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2667, 0, 0, 0, 0, 0, 2668, 2669,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2683, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2722, 0, 1225,
	0, 2723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1922,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1450, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 652, 659, 660, 661, 662,
	663, 653, 655, 0, 1734, 1176, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 657,
	664, 665, 2237, 0, 79, 0, 0, 1734, 1734, 1734,
	1734, 1734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2029, 720, 0, 0, 0, 1734,
	0, 0, 1734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2333, 2334, 0, 0,
	0, 0, 0, 0, 0, 0, 1274, 0, 666, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 0,
	0, 0, 2329, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2167, 2168, 1734, 0,
	0, 2171, 0, 0, 0, 0, 2173, 2174, 2175, 0,
	0, 2448, 0, 0, 0, 0, 0, 0, 2180, 2181,
	2182, 0, 0, 1657, 2184, 0, 2185, 2186, 0, 0,
	0, 2193, 2194, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2488, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2522, 0, 2526, 2527, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 0, 79, 0,
	2237, 0, 0, 0, 0, 0, 0, 2316, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2594, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2378, 0, 0, 0, 0, 0, 0, 2384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 0, 573, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2676, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 2480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2509, 0, 2510, 0, 0, 0, 0, 2513,
	2514, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2546, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2554, 0, 0, 2556, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 573, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2630, 573, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2665,
	0, 0, 0, 896, 881, 436, 0, 828, 899, 797,
	816, 909, 819, 822, 863, 776, 842, 357, 813, 768,
	801, 771, 808, 772, 799, 830, 244, 796, 883, 846,
	898, 312, 241, 778, 802, 371, 818, 193, 865, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 905, 316, 852, 0, 421, 342, 0,
	0, 2715, 832, 887, 840, 877, 827, 864, 786, 851,
	900, 814, 860, 901, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 2689, 0,
	2690, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	810, 857, 895, 811, 859, 239, 285, 246, 238, 440,
	906, 886, 775, 839, 894, 0, 0, 209, 339, 897,
	834, 0, 862, 0, 912, 770, 854, 0, 773, 777,
	908, 890, 805, 249, 0, 0, 0, 0, 0, 0,
	0, 831, 841, 874, 825, 0, 0, 0, 0, 0,
	0, 0, 803, 0, 850, 0, 0, 0, 782, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 785, 0, 804, 875, 0,
	767, 268, 779, 343, 231, 0, 879, 889, 826, 474,
	893, 824, 823, 869, 783, 885, 817, 311, 781, 293,
	188, 205, 0, 815, 353, 394, 400, 884, 800, 809,
	229, 807, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 849, 867, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 1093, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 795, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 880, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 872, 911,
	366, 399, 219, 460, 420, 790, 794, 788, 789, 844,
	845, 791, 902, 903, 904, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 876, 784, 0, 792, 793, 0,
	882, 891, 892, 510, 328, 411, 457, 296, 301, 304,
	848, 187, 202, 314, 907, 388, 261, 488, 468, 464,
	769, 787, 236, 798, 806, 0, 812, 820, 821, 833,
	835, 836, 837, 838, 855, 856, 858, 866, 868, 871,
	873, 878, 888, 910, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 847, 853, 325, 254, 273,
	284, 861, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 843, 870, 321, 437, 438, 280, 896, 881, 436,
	0, 828, 899, 797, 816, 909, 819, 822, 863, 776,
	842, 357, 813, 768, 801, 771, 808, 772, 799, 830,
	244, 796, 883, 846, 898, 312, 241, 778, 802, 371,
	818, 193, 865, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 905, 316, 852,
	0, 421, 342, 0, 0, 0, 832, 887, 840, 877,
	827, 864, 786, 851, 900, 814, 860, 901, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 810, 857, 895, 811, 859, 239,
	285, 246, 238, 440, 906, 886, 775, 839, 894, 0,
	0, 209, 339, 897, 834, 0, 862, 0, 912, 770,
	854, 0, 773, 777, 908, 890, 805, 249, 0, 0,
	0, 0, 0, 0, 0, 831, 841, 874, 825, 0,
	0, 0, 0, 0, 2268, 0, 803, 0, 850, 0,
	0, 0, 782, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 829, 0, 0, 0, 785,
	0, 804, 875, 0, 767, 268, 779, 343, 231, 0,
	879, 889, 826, 474, 893, 824, 823, 869, 783, 885,
	817, 311, 781, 293, 188, 205, 0, 815, 353, 394,
	400, 884, 800, 809, 229, 807, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 849, 867, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 1093, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 795, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 880, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 872, 911, 366, 399, 219, 460, 420, 790,
	794, 788, 789, 844, 845, 791, 902, 903, 904, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 876, 784,
	0, 792, 793, 0, 882, 891, 892, 510, 328, 411,
	457, 296, 301, 304, 848, 187, 202, 314, 907, 388,
	261, 488, 468, 464, 769, 787, 236, 798, 806, 0,
	812, 820, 821, 833, 835, 836, 837, 838, 855, 856,
	858, 866, 868, 871, 873, 878, 888, 910, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 847,
	853, 325, 254, 273, 284, 861, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 843, 870, 321, 437, 438,
	280, 896, 881, 436, 0, 828, 899, 797, 816, 909,
	819, 822, 863, 776, 842, 357, 813, 768, 801, 771,
	808, 772, 799, 830, 244, 796, 883, 846, 898, 312,
	241, 778, 802, 371, 818, 193, 865, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 905, 316, 852, 0, 421, 342, 0, 0, 0,
	832, 887, 840, 877, 827, 864, 786, 851, 900, 814,
	860, 901, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 810, 857,
	895, 811, 859, 239, 285, 246, 238, 440, 906, 886,
	775, 839, 894, 0, 0, 209, 339, 897, 834, 0,
	862, 0, 912, 770, 854, 0, 773, 777, 908, 890,
	805, 249, 0, 0, 0, 0, 0, 0, 0, 831,
	841, 874, 825, 0, 0, 0, 0, 0, 2226, 0,
	803, 0, 850, 0, 0, 0, 782, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 785, 0, 804, 875, 0, 767, 268,
	779, 343, 231, 0, 879, 889, 826, 474, 893, 824,
	823, 869, 783, 885, 817, 311, 781, 293, 188, 205,
	0, 815, 353, 394, 400, 884, 800, 809, 229, 807,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	849, 867, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 487, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 489, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 490, 208,
	470, 201, 1093, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 491, 214, 215, 216, 795, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 880,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 348, 278, 419, 294, 318, 872, 911, 366, 399,
	219, 460, 420, 790, 794, 788, 789, 844, 845, 791,
	902, 903, 904, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 876, 784, 0, 792, 793, 0, 882, 891,
	892, 510, 328, 411, 457, 296, 301, 304, 848, 187,
	202, 314, 907, 388, 261, 488, 468, 464, 769, 787,
	236, 798, 806, 0, 812, 820, 821, 833, 835, 836,
	837, 838, 855, 856, 858, 866, 868, 871, 873, 878,
	888, 910, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 847, 853, 325, 254, 273, 284, 861,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 843,
	870, 321, 437, 438, 280, 896, 881, 436, 0, 828,
	899, 797, 816, 909, 819, 822, 863, 776, 842, 357,
	813, 768, 801, 771, 808, 772, 799, 830, 244, 796,
	883, 846, 898, 312, 241, 778, 802, 371, 818, 193,
	865, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 905, 316, 852, 0, 421,
	342, 0, 0, 0, 832, 887, 840, 877, 827, 864,
	786, 851, 900, 814, 860, 901, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 810, 857, 895, 811, 859, 239, 285, 246,
	238, 440, 906, 886, 775, 839, 894, 0, 0, 209,
	339, 897, 834, 0, 862, 0, 912, 770, 854, 0,
	773, 777, 908, 890, 805, 249, 0, 0, 0, 0,
	0, 0, 0, 831, 841, 874, 825, 0, 0, 0,
	0, 0, 1722, 0, 803, 0, 850, 0, 0, 0,
	782, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 785, 0, 804,
	875, 0, 767, 268, 779, 343, 231, 0, 879, 889,
	826, 474, 893, 824, 823, 869, 783, 885, 817, 311,
	781, 293, 188, 205, 0, 815, 353, 394, 400, 884,
	800, 809, 229, 807, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 849, 867, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 487, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 489, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 490, 208, 470, 201, 1093, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 491, 214, 215, 216,
	795, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 880, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 348, 278, 419, 294, 318,
	872, 911, 366, 399, 219, 460, 420, 790, 794, 788,
	789, 844, 845, 791, 902, 903, 904, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 876, 784, 0, 792,
	793, 0, 882, 891, 892, 510, 328, 411, 457, 296,
	301, 304, 848, 187, 202, 314, 907, 388, 261, 488,
	468, 464, 769, 787, 236, 798, 806, 0, 812, 820,
	821, 833, 835, 836, 837, 838, 855, 856, 858, 866,
	868, 871, 873, 878, 888, 910, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 847, 853, 325,
	254, 273, 284, 861, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 843, 870, 321, 437, 438, 280, 896,
	881, 436, 0, 828, 899, 797, 816, 909, 819, 822,
	863, 776, 842, 357, 813, 768, 801, 771, 808, 772,
	799, 830, 244, 796, 883, 846, 898, 312, 241, 778,
	802, 371, 818, 193, 865, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 905,
	316, 852, 0, 421, 342, 0, 0, 0, 832, 887,
	840, 877, 827, 864, 786, 851, 900, 814, 860, 901,
	287, 226, 192, 354, 422, 259, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 810, 857, 895, 811,
	859, 239, 285, 246, 238, 440, 906, 886, 775, 839,
	894, 0, 0, 209, 339, 897, 834, 0, 862, 0,
	912, 770, 854, 0, 773, 777, 908, 890, 805, 249,
	0, 0, 0, 0, 0, 0, 0, 831, 841, 874,
	825, 0, 0, 0, 0, 0, 0, 0, 803, 0,
	850, 0, 0, 0, 782, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 829, 0, 0,
	0, 785, 0, 804, 875, 0, 767, 268, 779, 343,
	231, 0, 879, 889, 826, 474, 893, 824, 823, 869,
	783, 885, 817, 311, 781, 293, 188, 205, 0, 815,
	353, 394, 400, 884, 800, 809, 229, 807, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 849, 867,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 487, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 489,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 490, 208, 470, 201,
	1093, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	491, 214, 215, 216, 795, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 880, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 348,
	278, 419, 294, 318, 872, 911, 366, 399, 219, 460,
	420, 790, 794, 788, 789, 844, 845, 791, 902, 903,
	904, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	876, 784, 0, 792, 793, 0, 882, 891, 892, 510,
	328, 411, 457, 296, 301, 304, 848, 187, 202, 314,
	907, 388, 261, 488, 468, 464, 769, 787, 236, 798,
	806, 0, 812, 820, 821, 833, 835, 836, 837, 838,
	855, 856, 858, 866, 868, 871, 873, 878, 888, 910,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 847, 853, 325, 254, 273, 284, 861, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 843, 870, 321,
	437, 438, 280, 896, 881, 436, 0, 828, 899, 797,
	816, 909, 819, 822, 863, 776, 842, 357, 813, 768,
	801, 771, 808, 772, 799, 830, 244, 796, 883, 846,
	898, 312, 241, 778, 802, 371, 818, 193, 865, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 905, 316, 852, 0, 421, 342, 0,
	0, 0, 832, 887, 840, 877, 827, 864, 786, 851,
	900, 814, 860, 901, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	810, 857, 895, 811, 859, 239, 285, 246, 238, 440,
	906, 886, 775, 839, 894, 0, 0, 209, 339, 897,
	834, 0, 862, 0, 912, 770, 854, 0, 773, 777,
	908, 890, 805, 249, 0, 0, 0, 0, 0, 0,
	0, 831, 841, 874, 825, 0, 0, 0, 0, 0,
	0, 0, 803, 0, 850, 0, 0, 0, 782, 774,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 0, 785, 0, 804, 875, 0,
	767, 268, 779, 343, 231, 0, 879, 889, 826, 474,
	893, 824, 823, 869, 783, 885, 817, 311, 781, 293,
	188, 205, 0, 815, 353, 394, 400, 884, 800, 809,
	229, 807, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 849, 867, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 1093, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 795, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 880, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 872, 911,
	366, 399, 219, 460, 420, 790, 794, 788, 789, 844,
	845, 791, 902, 903, 904, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 876, 784, 0, 792, 793, 0,
	882, 891, 892, 510, 328, 411, 457, 296, 301, 304,
	848, 187, 202, 314, 907, 388, 261, 488, 468, 464,
	769, 787, 236, 798, 806, 0, 812, 820, 821, 833,
	835, 836, 837, 838, 855, 856, 858, 866, 868, 871,
	873, 878, 888, 910, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 847, 853, 325, 254, 273,
	284, 861, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 843, 870, 321, 437, 438, 280, 896, 881, 436,
	0, 828, 899, 797, 816, 909, 819, 822, 863, 776,
	842, 357, 813, 768, 801, 771, 808, 772, 799, 830,
	244, 796, 883, 846, 898, 312, 241, 778, 802, 371,
	818, 193, 865, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 905, 316, 852,
	0, 421, 342, 0, 0, 0, 832, 887, 840, 877,
	827, 864, 786, 851, 900, 814, 860, 901, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 810, 857, 895, 811, 859, 239,
	285, 246, 238, 440, 906, 886, 775, 839, 894, 0,
	0, 913, 339, 897, 834, 0, 862, 0, 912, 770,
	854, 0, 773, 777, 908, 890, 805, 249, 0, 0,
	0, 0, 0, 0, 0, 831, 841, 874, 825, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 850, 0,
	0, 0, 782, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 829, 0, 0, 0, 785,
	0, 804, 875, 0, 767, 268, 779, 343, 231, 0,
	879, 889, 826, 474, 893, 824, 823, 869, 783, 885,
	817, 311, 781, 293, 188, 205, 0, 815, 353, 394,
	400, 884, 800, 809, 229, 807, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 849, 867, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 780, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 795, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 880, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 766, 760, 759,
	294, 318, 872, 911, 366, 399, 219, 460, 420, 790,
	794, 788, 789, 844, 845, 791, 902, 903, 904, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 876, 784,
	0, 792, 793, 0, 882, 891, 892, 510, 328, 411,
	457, 296, 301, 304, 848, 187, 202, 314, 907, 388,
	261, 488, 468, 464, 769, 787, 236, 798, 806, 0,
	812, 820, 821, 833, 835, 836, 837, 838, 855, 856,
	858, 866, 868, 871, 873, 878, 888, 910, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 847,
	853, 325, 254, 273, 284, 861, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 843, 870, 321, 437, 438,
	280, 896, 881, 436, 0, 828, 899, 797, 816, 909,
	819, 822, 863, 776, 842, 357, 813, 768, 801, 771,
	808, 772, 799, 830, 244, 796, 883, 846, 898, 312,
	241, 778, 802, 371, 818, 193, 865, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 905, 316, 852, 0, 421, 342, 0, 0, 0,
	832, 887, 840, 877, 827, 864, 786, 851, 900, 814,
	860, 901, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 810, 857,
	895, 811, 859, 239, 285, 246, 238, 440, 906, 886,
	775, 839, 894, 0, 0, 913, 339, 897, 834, 0,
	862, 0, 912, 770, 854, 0, 773, 777, 908, 890,
	805, 249, 0, 0, 0, 0, 0, 0, 0, 831,
	841, 874, 825, 0, 0, 0, 0, 0, 0, 0,
	803, 0, 850, 0, 0, 0, 782, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 785, 0, 804, 875, 0, 767, 268,
	779, 343, 231, 0, 879, 889, 826, 474, 893, 824,
	823, 869, 783, 885, 817, 311, 781, 293, 188, 205,
	0, 815, 353, 394, 400, 884, 800, 809, 229, 807,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	849, 867, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 487, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 1291, 218, 409, 0,
	0, 489, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 490, 208,
	470, 201, 780, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 491, 214, 215, 216, 795, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 880,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 766, 760, 759, 294, 318, 872, 911, 366, 399,
	219, 460, 420, 790, 794, 788, 789, 844, 845, 791,
	902, 903, 904, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 876, 784, 0, 792, 793, 0, 882, 891,
	892, 510, 328, 411, 457, 296, 301, 304, 848, 187,
	202, 314, 907, 388, 261, 488, 468, 464, 769, 787,
	236, 798, 806, 0, 812, 820, 821, 833, 835, 836,
	837, 838, 855, 856, 858, 866, 868, 871, 873, 878,
	888, 910, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 847, 853, 325, 254, 273, 284, 861,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 843,
	870, 321, 437, 438, 280, 896, 881, 436, 0, 828,
	899, 797, 816, 909, 819, 822, 863, 776, 842, 357,
	813, 768, 801, 771, 808, 772, 799, 830, 244, 796,
	883, 846, 898, 312, 241, 778, 802, 371, 818, 193,
	865, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 905, 316, 852, 0, 421,
	342, 0, 0, 0, 832, 887, 840, 877, 827, 864,
	786, 851, 900, 814, 860, 901, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 810, 857, 895, 811, 859, 239, 285, 246,
	238, 440, 906, 886, 775, 839, 894, 0, 0, 913,
	339, 897, 834, 0, 862, 0, 912, 770, 854, 0,
	773, 777, 908, 890, 805, 249, 0, 0, 0, 0,
	0, 0, 0, 831, 841, 874, 825, 0, 0, 0,
	0, 0, 0, 0, 803, 0, 850, 0, 0, 0,
	782, 774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 785, 0, 804,
	875, 0, 767, 268, 779, 343, 231, 0, 879, 889,
	826, 474, 893, 824, 823, 869, 783, 885, 817, 311,
	781, 293, 188, 205, 0, 815, 353, 394, 400, 884,
	800, 809, 229, 807, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 849, 867, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 487, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	757, 218, 409, 0, 0, 489, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 490, 208, 470, 201, 780, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 491, 214, 215, 216,
	795, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 880, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 766, 760, 759, 294, 318,
	872, 911, 366, 399, 219, 460, 420, 790, 794, 788,
	789, 844, 845, 791, 902, 903, 904, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 876, 784, 0, 792,
	793, 0, 882, 891, 892, 510, 328, 411, 457, 296,
	301, 304, 848, 187, 202, 314, 907, 388, 261, 488,
	468, 464, 769, 787, 236, 798, 806, 0, 812, 820,
	821, 833, 835, 836, 837, 838, 855, 856, 858, 866,
	868, 871, 873, 878, 888, 910, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 847, 853, 325,
	254, 273, 284, 861, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 843, 870, 321, 437, 438, 280, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 1667, 0, 591, 0, 0, 0,
	244, 596, 0, 0, 0, 312, 241, 0, 1668, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 603, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 598, 599,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 87, 0, 0, 184, 185,
	186, 652, 659, 660, 661, 662, 663, 653, 655, 0,
	0, 217, 654, 224, 614, 616, 615, 625, 626, 627,
	628, 629, 630, 631, 612, 657, 664, 665, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	574, 588, 0, 602, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 586, 746, 0, 0, 0, 637, 0,
	587, 0, 0, 595, 666, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	636, 0, 0, 474, 0, 0, 634, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	620, 621, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 643,
	635, 607, 609, 644, 645, 604, 605, 608, 646, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 638, 594,
	593, 0, 600, 601, 0, 610, 611, 613, 617, 618,
	619, 622, 623, 624, 592, 187, 202, 314, 0, 388,
	261, 488, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 591, 0, 0, 0, 244, 596, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 603, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 598, 599, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 87, 0, 0, 184, 185, 186, 652, 659, 660,
	661, 662, 663, 653, 655, 0, 0, 217, 654, 224,
	614, 616, 615, 625, 626, 627, 628, 629, 630, 631,
	612, 657, 664, 665, 0, 239, 285, 246, 238, 440,
	0, 0, 1647, 1648, 1649, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 574, 588, 0, 602,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 585, 586,
	0, 0, 0, 0, 637, 0, 587, 0, 0, 595,
	666, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 597, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 636, 0, 0, 474,
	0, 0, 634, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 620, 621, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 643, 635, 607, 609, 644,
	645, 604, 605, 608, 646, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 638, 594, 593, 0, 600, 601,
	0, 610, 611, 613, 617, 618, 619, 622, 623, 624,
	592, 187, 202, 314, 0, 388, 261, 488, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 591, 0,
	0, 0, 244, 596, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 603,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	598, 599, 0, 0, 0, 0, 0, 0, 1749, 0,
	287, 226, 192, 354, 422, 259, 0, 87, 0, 0,
	184, 185, 186, 652, 659, 660, 661, 662, 663, 653,
	655, 0, 0, 217, 654, 224, 614, 616, 615, 625,
	626, 627, 628, 629, 630, 631, 612, 657, 664, 665,
	1750, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 574, 588, 0, 602, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 586, 0, 0, 0, 0,
	637, 0, 587, 0, 0, 595, 666, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 636, 0, 0, 474, 0, 0, 634, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 487, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 489,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 490, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 620, 621, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	491, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 643, 635, 607, 609, 644, 645, 604, 605, 608,
	646, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	638, 594, 593, 0, 600, 601, 0, 610, 611, 613,
	617, 618, 619, 622, 623, 624, 592, 187, 202, 314,
	0, 388, 261, 488, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 78, 436, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 591, 0, 0, 0, 244,
	596, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 603, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 598, 599, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 87, 0, 0, 184, 185, 186,
	652, 659, 660, 661, 662, 663, 653, 655, 0, 0,
	217, 654, 224, 614, 616, 615, 625, 626, 627, 628,
	629, 630, 631, 612, 657, 664, 665, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 574,
	588, 0, 602, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 586, 0, 0, 0, 0, 637, 0, 587,
	0, 0, 595, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 636,
	0, 0, 474, 0, 0, 634, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 487,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 489, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 490, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 620,
	621, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 491, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 643, 635,
	607, 609, 644, 645, 604, 605, 608, 646, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 638, 594, 593,
	0, 600, 601, 0, 610, 611, 613, 617, 618, 619,
	622, 623, 624, 592, 187, 202, 314, 86, 388, 261,
	488, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 591, 0, 0, 0, 244, 596, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 603, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 598, 599, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	87, 0, 0, 184, 185, 186, 652, 659, 660, 661,
	662, 663, 653, 655, 0, 0, 217, 654, 224, 614,
	616, 615, 625, 626, 627, 628, 629, 630, 631, 612,
	657, 664, 665, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 574, 588, 0, 602, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 586, 0,
	0, 0, 0, 637, 0, 587, 0, 0, 595, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 636, 0, 0, 474, 0,
	0, 634, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 2655, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 487, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 489, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 490,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 620, 621, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 491, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 643, 635, 607, 609, 644, 645,
	604, 605, 608, 646, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 638, 594, 593, 0, 600, 601, 0,
	610, 611, 613, 617, 618, 619, 622, 623, 624, 592,
	187, 202, 314, 0, 388, 261, 488, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 591, 0, 0,
	0, 244, 596, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 603, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 598,
	599, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 87, 0, 1258, 184,
	185, 186, 652, 659, 660, 661, 662, 663, 653, 655,
	0, 0, 217, 654, 224, 614, 616, 615, 625, 626,
	627, 628, 629, 630, 631, 612, 657, 664, 665, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 574, 588, 0, 602, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 586, 0, 0, 0, 0, 637,
	0, 587, 0, 0, 595, 666, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 636, 0, 0, 474, 0, 0, 634, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 487, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 489, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 490, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 620, 621, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 491,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	643, 635, 607, 609, 644, 645, 604, 605, 608, 646,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 638,
	594, 593, 0, 600, 601, 0, 610, 611, 613, 617,
	618, 619, 622, 623, 624, 592, 187, 202, 314, 0,
	388, 261, 488, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 591, 0, 0, 0, 244, 596, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 603, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 598, 599, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 87, 0, 0, 184, 185, 186, 652, 659,
	660, 661, 662, 663, 653, 655, 0, 0, 217, 654,
	224, 614, 616, 615, 625, 626, 627, 628, 629, 630,
	631, 612, 657, 664, 665, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 574, 588, 0,
	602, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 585,
	586, 746, 0, 0, 0, 637, 0, 587, 0, 0,
	595, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 597, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 636, 0, 0,
	474, 0, 0, 634, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 487, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 489, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 490, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 620, 621, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 491, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 643, 635, 607, 609,
	644, 645, 604, 605, 608, 646, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 638, 594, 593, 0, 600,
	601, 0, 610, 611, 613, 617, 618, 619, 622, 623,
	624, 592, 187, 202, 314, 0, 388, 261, 488, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 436, 0, 321, 437, 438, 280, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 591,
	0, 0, 0, 244, 596, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	603, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 598, 599, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 87, 0,
	0, 184, 185, 186, 652, 659, 660, 661, 662, 663,
	653, 655, 0, 0, 217, 654, 224, 614, 616, 615,
	625, 626, 627, 628, 629, 630, 631, 612, 657, 664,
	665, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 574, 588, 0, 602, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 585, 586, 0, 0, 0,
	0, 637, 0, 587, 0, 0, 595, 666, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 597, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 636, 0, 0, 474, 0, 0, 634,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 487, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	489, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 490, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 620, 621, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 491, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 643, 635, 607, 609, 644, 645, 604, 605,
	608, 646, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 638, 594, 593, 0, 600, 601, 0, 610, 611,
	613, 617, 618, 619, 622, 623, 624, 592, 187, 202,
	314, 0, 388, 261, 488, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 436, 0,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 591, 0, 0, 0, 244,
	596, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 603, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 598, 599, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 87, 0, 0, 184, 185, 186,
	652, 659, 660, 661, 662, 663, 653, 655, 0, 0,
	217, 654, 224, 614, 616, 615, 625, 626, 627, 628,
	629, 630, 631, 612, 657, 664, 665, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	588, 0, 602, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 586, 0, 0, 0, 0, 637, 0, 587,
	0, 0, 595, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 597, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 636,
	0, 0, 474, 0, 0, 634, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 487,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 489, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 490, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 620,
	621, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 491, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 643, 635,
	607, 609, 644, 645, 604, 605, 608, 646, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 638, 594, 593,
	0, 600, 601, 0, 610, 611, 613, 617, 618, 619,
	622, 623, 624, 592, 187, 202, 314, 0, 388, 261,
	488, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 659, 660, 0,
	0, 0, 0, 1592, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 487, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 489, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 490,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 491, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 488, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 961, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 960, 474, 0, 0, 0, 0, 0,
	957, 958, 311, 921, 293, 188, 205, 951, 955, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 487, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 489, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 490, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 491,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 488, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 78, 436, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 487, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 489, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 490, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 491, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 86, 388, 261, 488,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 1737, 0, 0, 1736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 1279,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1281, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 1277, 0, 0, 0,
	1125, 0, 1126, 1127, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 487, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 489, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 490, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 491, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 488, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 1220, 1223, 0, 0, 0, 0, 1219, 1222, 0,
	0, 217, 1218, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 488, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 78, 436, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 87, 0, 1258, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 487, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 489, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 490, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 491, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 86, 388, 261, 488, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 436, 0, 321, 437, 438, 280, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 87, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 487, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	489, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 490, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 491, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 488, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 1737, 0, 0, 1736,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 436, 0,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 1689, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1451, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 1687, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 487,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 489, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 490, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 491, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	488, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 915, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 921, 293, 188,
	205, 919, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 487, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 489, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 490,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 491, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 488, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 1689, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 1451, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 487, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 489, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 490, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 491,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 488, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 1258, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 2623, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 487, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 489, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 490, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 491, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 488, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 436, 0, 321, 437, 438, 280, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1999, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 487, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	489, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 490, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 491, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 488, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 436, 0,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 1984, 0, 0, 0, 1985, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 487,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 489, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 490, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 491, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 510, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	488, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 1302, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 487, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 489, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 490,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 491, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 510, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 488, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 2697, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 487, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 489, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 490, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 491,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 510, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 488, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 2623, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 487, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 489, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 490, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 491, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 510, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 488, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 436, 0, 321, 437, 438, 280, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 1451, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 487, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	489, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 490, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 491, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	510, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 488, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 0, 436,
	321, 437, 438, 280, 1738, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 488, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1281, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 488, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 487, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 489,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 490, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	491, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 510,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 488, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 487, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 489, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 490, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 491, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 1543, 388, 261, 488,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 1423, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 487, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 489, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 490, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 491, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 488, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 1421, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 488, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 1419,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 488, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 1417, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 487, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 489,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 490, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	491, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 510,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 488, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 1415, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 487, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 489, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 490, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 491, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 488,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 1411, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 487, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 489, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 490, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 491, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 488, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 1409, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 488, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 1407,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 488, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 1384, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 487, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 489,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 490, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	491, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 510,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 488, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 1286, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 487, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 489, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 490, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 491, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 488,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 487, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 489, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 490, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 491, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 488, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 488, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 728, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 566,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 488, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	565, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 513, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 487, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 489,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 490, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	491, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 510,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 488, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 487, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 489, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 490, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 491, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 492, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 510, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 488,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 2702, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 487, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 489, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 490, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 491, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 510, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 488, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 2401,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	487, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 489, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 490, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 491, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 510, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 488, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 1980, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 487, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 489, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	490, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 491, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 510, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 488, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 0, 0, 321, 437, 438, 280,
}

var yyPact = [...]int{
	4019, -1000, -393, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1896, 1962, -1000, -1000,
	-1000, -1000, 2054, -1000, 660, 1623, -1000, 1905, 2888, -1000,
	37616, 371, -1000, 36484, 370, 262, 37616, -1000, 128, -1000,
	109, 37616, 117, 35918, -1000, -1000, -298, 16105, 1834, 13,
	12, 37616, -1000, -1000, -1000, -1000, 2029, 1594, -1000, 324,
	-1000, -1000, -1000, -1000, -1000, -1000, 35352, -1000, -1000, -1000,
	1910, 1894, 2061, 570, 1818, -1000, 1968, 1594, -1000, 16105,
	2015, 1951, 15539, -1000, 15539, 347, -1000, -1000, 11570, -1000,
	-1000, 21767, 37616, 37616, 213, -1000, 1905, -1000, -1000, 288,
	-1000, 255, 1503, -1000, 1499, -1000, 688, 422, 284, 394,
	390, 279, 276, 274, 273, 272, 271, 268, 267, 290,
	-1000, 603, 603, -154, -155, 2533, 329, 329, 329, 358,
	1853, 1851, -1000, 550, -1000, 603, 603, 287, 603, 603,
	603, 603, 227, 219, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 281,
	1905, 198, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 37616, 127, 37616, -1000, 484, 37616, 781, 781, 21,
	781, 781, 781, 781, 123, 549, 4, -1000, 118, 179,
	107, 200, 744, 132, 137, -1000, -1000, 182, 744, 1099,
	576, 104, -1000, 781, 9274, 9274, 9274, -1000, 1887, -1000,
	-1000, -1000, -1000, -1000, -1000, 1108, -1000, 355, -1000, -1000,
	-1000, -1000, 37616, 34786, 313, 641, -1000, -1000, -1000, 65,
	-1000, -1000, 1310, 1054, 16105, 900, -1000, 1565, 551, -1000,
	-1000, -1000, -1000, -1000, 462, 16671, 16671, 16671, 16671, -1000,
	-1000, 1505, 1505, 1505, 1505, 16671, 1505, 16671, 1505, 1505,
	1505, 1505, 16105, 1505, 1505, 1505, -1000, 1505, 1505, 1505,
	1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505,
	1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505,
	1505, 1505, 1505, 466, 1505, 1505, 1505, 1505, 1505, -1000,
	-1000, -1000, -1000, 1505, 1505, 1505, 1505, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19502, -1000, 13841, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 37616, -1000,
	1505, 134, 37616, 37616, 265, 1968, 1594, -1000, 2029, 1986,
	324, -1000, 2194, 1270, 1554, 1146, 1594, 1468, 37616, -1000,
	1518, -1000, -1000, -1000, 1754, 1066, 1095, -1000, -1000, -1000,
	-1000, 1291, 16105, -1000, -1000, 2050, -1000, 18936, 457, 808,
	2049, 34220, -1000, 347, 347, 1496, 10996, -24, -1000, -1000,
	-1000, 638, 24597, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1887, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1414, 37616, -1000, -1000, 4365, 1064,
	-1000, 1614, -1000, 1411, -1000, 1548, 1559, 369, 1064, 365,
	364, 363, -1000, -88, -1000, -1000, -1000, -1000, -1000, 603,
	603, -1000, 282, 2014, 2888, 3443, -1000, -1000, -1000, 33654,
	1609, 1064, -1000, 1604, -1000, 719, 438, 489, 489, 1064,
	-1000, -1000, 37616, 1064, 708, 700, 37616, 37616, -1000, 33088,
	-1000, 32522, 31956, 1007, 37616, 31390, 30824, 30258, 29692, 29126,
	-1000, 1723, -1000, 1739, -1000, -1000, -1000, 37616, 37616, 37616,
	289, -1000, -1000, 37616, 1064, -1000, -1000, 997, 996, 603,
	603, 991, 1093, 1082, 1077, 603, 603, 964, 1076, 26295,
	191, 951, 949, 948, 962, 1074, 172, 940, 893, 946,
	37616, 1603, 37616, -1000, 173, 611, 345, 629, 1905, 1830,
	1493, 354, 368, 1064, 341, 341, 37616, -1000, 9848, -1000,
	-1000, 1073, 16105, -1000, 749, 744, 744, -1000, -1000, -1000,
	-1000, -1000, -1000, 781, 37616, 749, -1000, -1000, -1000, 744,
	781, 37616, 781, 781, 781, 781, 744, 744, 744, 781,
	37616, 37616, 37616, 37616, 37616, 37616, 37616, 37616, 37616, 9274,
	9274, 9274, 576, 781, -304, -1000, 1068, -1000, 1697, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 116, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -89, 1482,
	28560, -1000, -305, -306, -310, -312, -1000, -1000, -1000, -321,
	-324, -1000, -1000, -1000, 16105, 16105, 16105, 16105, -180, -1000,
	753, 16671, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 830,
	657, 16671, 16671, 16671, 16671, 16671, 16671, 16671, 16671, 16671,
	16671, 16671, 16671, 16671, 16671, 16671, 637, 4572, 4572, 551,
	551, 551, 551, -1000, 15539, 16105, 16105, 551, -1000, 1064,
	27994, 15539, 15539, 16105, 1882, 658, 1054, 37616, -1000, 1146,
	-1000, -1000, -1000, 972, -1000, 37616, 37616, 1248, 16105, 16105,
	16105, 16105, 16105, 16105, 12708, 16105, 16105, 16105, 16105, 16105,
	16105, 16105, 16105, 16105, 16105, 16105, 16105, 12142, 9848, 15539,
	15539, 15539, 15539, 15539, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 454, 1302, 1215, 1406, -1000,
	1478, -1000, -170, 21201, 16105, 1063, 2046, 1638, 37616, -1000,
	-1000, -1000, 1968, -1000, 1968, 1302, 2181, 1764, 15539, -1000,
	-1000, 2181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1338, -1000, 37616, 1468, 1948, 37616, 1748, 1058, 325, -1000,
	16105, 16105, 1467, -1000, 809, 37616, -1000, -180, -1000, 27428,
	-1000, -1000, 8700, -1000, 37616, 248, 37616, -1000, 20635, 26862,
	10422, -24, -1000, 10422, 1352, -1000, -14, -22, 13274, 511,
	-1000, -1000, -1000, 2533, 17803, 1285, 511, 54, -1000, -1000,
	-1000, 1548, -1000, 1548, 1548, 1548, 1548, 325, 325, 325,
	325, -1000, -1000, -1000, -1000, -1000, 1602, 1601, -1000, 1548,
	1548, 1548, 1548, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1596, 1596, 1596, 1555, 1555, 319, -1000, 16105, 238, 37616,
	1931, 938, 173, 342, 1636, 1064, 1064, 1064, 342, -1000,
	1191, 1171, -1000, -382, 1465, -1000, -1000, 2010, -1000, -1000,
	704, 783, 774, 556, 37616, 141, 242, -1000, 326, -1000,
	37616, 1064, 697, 489, 1064, -1000, 1064, -1000, -1000, -1000,
	-1000, -1000, 1064, 1455, -1000, 1495, 837, 771, 780, 758,
	1455, -1000, -1000, -119, 1455, -1000, 1455, -1000, 1455, -1000,
	1455, -1000, 1455, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 587, 37616, 141, 637, -1000, 353, -1000, -1000, 637,
	637, -1000, -1000, -1000, -1000, 1057, 1045, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -371, 37616, -1000, 166, 616, 232,
	277, 218, 37616, 192, 1953, 210, 217, 37616, 37616, 341,
	1696, 37616, 1924, 37616, -1000, -1000, -1000, -1000, -1000, 1054,
	37616, -1000, -1000, 781, 781, -1000, -1000, 37616, 781, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 781, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 37616, 37616, -1000, -1000, -1000,
	-1000, -1000, 150, -16, 314, -1000, -1000, -1000, -1000, -1000,
	1963, -1000, 1054, 702, 678, -1000, 1505, -1000, -1000, 894,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 830, 16671, 16671,
	16671, 1307, 397, 839, 1624, 853, 683, 683, 711, 711,
	533, 533, 533, 533, 533, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1041, -1000, 1345, -1000, 1544, 1278, 1146,
	-1000, 1345, 1345, 825, 15539, -1000, -1000, 663, -1000, 16105,
	1146, -1000, -1000, 1146, 1146, 1442, 1439, 2041, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 933,
	1424, 1424, 1424, 1424, 1424, 16105, 1084, -1000, -1000, -1000,
	2038, 1892, 1146, 1310, 1146, 1403, -1000, 1817, 1424, 1806,
	1785, 1755, 1309, 1717, 1675, 1630, 1146, 15539, 15539, 1393,
	1505, 450, -1000, 1345, 1146, 1146, 1345, 1345, 9848, 1146,
	-1000, 37616, -1000, -293, -1000, -37, 505, 1505, -1000, 26295,
	1146, -1000, 4955, -1000, 38748, -1000, -1000, -1000, -1000, -1000,
	24031, 1492, 2181, -1000, -1000, 1505, 1396, -1000, -1000, 325,
	33, 23465, -1000, -1000, 1054, 1054, 16105, -1000, -1000, -1000,
	-1000, -1000, -1000, 440, 2033, 296, 1505, -1000, 1473, 1832,
	-1000, -1000, -1000, 1947, 18370, -1000, 1505, 1505, 37616, 1566,
	1509, -1000, 439, -1000, 1352, -24, -28, -1000, -1000, -1000,
	-1000, 1054, -1000, 1154, 254, 331, -1000, 328, -1000, -1000,
	-1000, -1000, 1843, 44, -1000, -1000, -1000, 325, 325, -1000,
	-1000, -1000, -1000, -1000, -1000, 1040, 1040, -1000, -1000, -1000,
	-1000, -1000, 936, -1000, -1000, -1000, 935, -1000, -1000, 1619,
	1684, 238, -1000, -1000, 603, 1036, 1845, 37616, -1000, -1000,
	1273, 166, 37616, 661, 1687, -1000, 1636, 1636, 1636, 37616,
	-1000, -1000, -1000, -1000, -372, 56, 307, -1000, -1000, -1000,
	304, 37616, 1377, -1000, 138, -1000, 1271, 1777, 37616, -1000,
	1375, 1593, 1064, 1064, -1000, -1000, -1000, 37616, 1505, -1000,
	-1000, -1000, -1000, 367, 1904, 1897, 141, 138, 511, 1064,
	-1000, -1000, -1000, -1000, -1000, -374, 1370, 361, 149, 266,
	37616, 37616, 37616, 37616, 37616, 407, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 208, 351, -1000, 37616, 37616, 468,
	-1000, -1000, -1000, 744, -1000, -1000, 744, -1000, -1000, -1000,
	-1000, -1000, 1876, 37616, -18, -338, -1000, -335, 16105, -1000,
	-1000, -1000, -1000, 1169, 383, 839, 16671, 16671, 15539, -112,
	1292, 1292, 637, -1000, -1000, -1000, 16105, 16105, 1440, 650,
	-1000, 16105, 899, -1000, -1000, -1000, 16105, 16105, 16105, 1146,
	239, -1000, -1000, -1000, -1000, -1000, 2037, -1000, 16105, 16105,
	16105, -1000, -1000, 16105, 16105, -1000, 16105, 16105, 17237, 1146,
	17237, 16105, 16105, 17237, -1000, 1345, 1345, 15539, 9848, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 505,
	-1000, 489, 489, 489, 37616, -1000, -1000, -1000, -1000, -1000,
	-1000, 1350, 1965, -1000, 1776, 1771, 2036, 2033, -1000, 20635,
	2181, -1000, -1000, 37616, -283, -1000, 1815, 1829, -1000, -1000,
	-1000, -1000, 8126, 1968, 16105, 1677, 37616, 1505, -1000, 20069,
	37616, 37616, 20635, 20635, 20635, 20635, 20635, -1000, 1738, 1730,
	-1000, 1710, 1709, 1779, 37616, -1000, 1334, 1146, 1986, 18370,
	324, 16105, 22333, 1450, 20635, -1000, -1000, 20635, 37616, 7552,
	-1000, -1000, -19, -52, -1000, -1000, -1000, -1000, 2533, -1000,
	-1000, 672, 1940, 1821, -1000, -1000, -1000, -1000, 1322, -1000,
	1299, 1347, 1297, 156, -1000, 1511, 1864, 603, 603, -1000,
	895, -1000, 1064, -1000, -1000, 360, -1000, 1920, 37616, 1674,
	1673, 1668, -1000, -381, 892, 1592, 1177, 16105, 1568, 2004,
	1317, 37616, -1000, -1000, 37616, -1000, -1000, 349, -1000, 238,
	37616, -1000, -1000, -1000, 242, 37616, -1000, 5906, 138, -1000,
	-1000, -1000, -1000, -1000, -1000, 37616, 154, -1000, 1562, 1105,
	-1000, -1000, 1573, -1000, -1000, -1000, -1000, 133, 230, -1000,
	37616, 467, 1684, 37616, -1000, -1000, -1000, 781, 781, -1000,
	-1000, 1857, -1000, 1064, 1424, 16671, 16671, -1000, 551, -1000,
	1505, 1146, 1548, 1548, -1000, 1548, 1555, -1000, 1548, 101,
	1548, 100, 1548, -1000, -1000, 1146, 1146, 1096, 1002, -100,
	-1000, 1054, 16105, 1607, 1506, 1424, -1000, 1547, 1543, 16105,
	1424, 1424, 1424, -1000, 1054, 1309, 1498, 1237, -1000, -1000,
	-1000, -1000, 1329, 1424, 1462, 1146, -1000, -1000, 1146, -1000,
	-1000, 1961, 1961, 1961, 1279, 38182, 37616, -1000, -1000, -1000,
	-1000, 2033, 2028, 1327, -1000, -1000, 33, 357, -1000, 1803,
	1829, -1000, 2001, 1808, 1992, -1000, -1000, -1000, 1054, -1000,
	1907, 1277, -1000, 599, 1306, -1000, -1000, 14973, 1289, 1769,
	404, 1279, 1480, 1832, 1659, 1666, 2125, -1000, -1000, -1000,
	-1000, 1728, -1000, 1712, -1000, -1000, 1518, -1000, -1000, 1215,
	1146, 1348, 248, 20635, 1391, 1391, -1000, 389, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 789, 4880, 2060, -1000, 1034,
	-1000, 1033, -1000, 695, 689, -1000, 37616, 1536, -1000, 325,
	1026, 325, 889, -1000, 879, -1000, -1000, -195, -1000, -1000,
	1716, 1681, -1000, -1000, 37616, -1000, -1000, 37616, 37616, 37616,
	1534, 1990, -1000, 16105, 1533, 595, 1488, 37616, 37616, -1000,
	-1000, 236, 1505, -1000, 1265, 1255, -1000, -146, -1000, 16105,
	-1000, -1000, -1000, 966, 966, -1000, 1518, -1000, -1000, -1000,
	1239, -1000, -1000, -122, 37616, 37616, 37616, 37616, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 551, 16671,
	-1000, -1000, 325, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 16105, -1000, 16105, -1000, 1968, 1024, 1054, 16105,
	16105, -1000, 874, 871, 1424, -1000, -1000, -1000, 1146, 17237,
	-1000, 17237, -1000, 16105, -1000, -1000, 1505, 1761, 1505, 1505,
	22333, -1000, -1000, 2028, 2026, 1989, 1786, 1802, 1802, 1803,
	-1000, 1988, 1983, -1000, 1023, 1980, 1019, 685, -1000, 37616,
	16105, 1505, -1000, 298, 37616, 1505, 37616, -1000, 2020, -1000,
	-1000, 16105, 1531, -1000, 16105, -1000, -1000, -1000, -1000, -1000,
	-1000, 4572, 2033, 1391, -1000, -1000, 558, -1000, 16105, -1000,
	-1000, -1000, 2889, -1000, -1000, -1000, -1000, -1000, 1522, 16105,
	-1000, -1000, -1000, 1234, 1224, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1518, -1000, -1000, -1000, -1000, 242, -379,
	1435, 37616, 846, -1000, 1253, 1317, 435, -1000, 16105, 309,
	-1000, 242, -1000, -160, -161, 1424, -1000, -1000, 1939, -1000,
	-1000, 9848, -1000, -1000, 1512, 1632, -1000, 305, -1000, 1424,
	1424, 1146, -1000, 1424, 1424, 1187, 1175, -1000, -1000, 1237,
	-1000, 852, 22899, -1000, 1976, 1970, 25729, 25729, 505, 2026,
	-1000, 16105, 16105, 1783, 877, -1000, -1000, -1000, -1000, 1010,
	1004, -1000, 902, -1000, 2059, -1000, 1054, -1000, 1505, -1000,
	387, 1306, -1000, 1968, 1054, 37616, 1054, 29, 2020, -1000,
	1424, -1000, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505,
	1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505, 1505,
	1505, 37616, 1211, -1000, -1000, 1937, 1232, 46, -1000, 1214,
	-1000, -1000, -1000, -1000, 14407, -1000, -1000, -1000, -1000, -1000,
	-1000, 324, 1314, -1000, 594, 37616, 37616, 1146, 258, -130,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16105,
	1180, -1000, -1000, -1000, -1000, -1000, 1180, 1180, -1000, -1000,
	1054, 1310, -1000, 849, -1000, -1000, -1000, -1000, -1000, 37616,
	1306, 37616, -1000, 1152, 1146, 1505, 1968, -1000, 1143, -1000,
	324, -1000, 1303, 1177, -1000, 1146, -121, 9848, 6978, 1139,
	-1000, -1000, 1747, -117, -134, 1309, 25163, -1000, -1000, -1000,
	-1000, -1000, 1172, -1000, -1000, 22333, 37050, -1000, 1664, 1170,
	-121, 16105, 1293, -1000, -1000, -40, -1000, -1000, -1000, -1000,
	-1000, 1573, -1000, 1744, -1000, 1146, -1000, -1000, -1000, 1131,
	-1000, 3603, -222, 1662, -1000, 2045, -1000, -1000, -1000, 752,
	827, -1000, -1000, -1000, -1000, 1137, 37616, 318, -1000, -1000,
	-122, -128, -1000, -1000, 37050, -217, 511, 4572, -1000, -1000,
	2056, 530, 530, -1000, -1000, -387, 1128, 168, -1000, -132,
	-1000, -1000, 1917, 29, -1000, -1000, -1000, 315, 918, -1000,
	-1000, 820, -387, -1000, -136, -236, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 4572, 197, 197, -1000, 1644, -1000,
	-1000, 4572, -1000, 1642, -239, -1000, -327, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2399, 2398, 26, 5, 2397, 37, 88, 187, 24,
	177, 92, 2396, 2395, 2394, 2392, 2390, 2389, 2388, 209,
	207, 202, 2387, 2386, 2385, 2384, 2383, 2380, 2379, 2378,
	2374, 2373, 204, 159, 174, 2371, 2370, 2368, 99, 167,
	81, 83, 173, 2367, 2366, 75, 2364, 2363, 2361, 182,
	181, 712, 2359, 164, 111, 31, 2357, 2356, 2350, 2344,
	2343, 2342, 2339, 2338, 2336, 2333, 2331, 2329, 2328, 2327,
	2326, 2325, 232, 2321, 2320, 14, 2317, 78, 2316, 2315,
	2314, 2313, 118, 2311, 2307, 2306, 2304, 2300, 2299, 140,
	2298, 2296, 2294, 2293, 189, 2291, 2286, 237, 101, 103,
	2285, 2284, 90, 183, 2281, 106, 2280, 2278, 2275, 155,
	2273, 4359, 2272, 60, 55, 2271, 52, 74, 53, 47,
	15, 3, 2270, 2268, 58, 77, 2267, 91, 70, 2266,
	104, 97, 2265, 2263, 9, 6, 2262, 4, 2261, 2,
	65, 2260, 2258, 110, 2252, 2251, 2250, 89, 2247, 2245,
	67, 2241, 82, 132, 93, 73, 2239, 30, 36, 2238,
	2237, 2236, 2235, 2234, 33, 2233, 2232, 2231, 141, 27,
	161, 21, 42, 41, 130, 2229, 145, 76, 2227, 138,
	134, 2226, 48, 28, 49, 2225, 46, 124, 151, 39,
	98, 128, 2224, 2222, 50, 66, 2220, 2219, 2218, 2214,
	2213, 2212, 69, 2211, 43, 2209, 185, 2204, 22, 2197,
	32, 40, 2194, 61, 125, 63, 25, 2188, 158, 2187,
	45, 162, 122, 156, 2184, 2182, 2181, 176, 268, 2178,
	2177, 184, 160, 143, 148, 2176, 283, 2171, 2170, 86,
	1540, 1887, 20, 157, 2169, 2167, 3309, 137, 127, 18,
	2166, 108, 2165, 2164, 2162, 203, 171, 107, 957, 96,
	2160, 13, 2159, 2158, 2156, 2155, 2151, 2150, 199, 179,
	59, 8, 154, 71, 2147, 2145, 2140, 116, 94, 2139,
	153, 152, 119, 169, 2138, 163, 147, 105, 2137, 85,
	2135, 2132, 2130, 2129, 84, 2128, 2125, 2124, 2115, 150,
	142, 120, 79, 2110, 80, 102, 146, 149, 35, 2109,
	29, 2107, 2097, 170, 23, 2095, 11, 44, 68, 19,
	100, 2093, 2091, 0, 2090, 12, 165, 280, 144, 2089,
	2088, 7, 2084, 10, 2083, 2082, 133, 2080, 2077, 2076,
	17, 34, 16, 1, 2075, 2074, 4014, 3251, 126, 2072,
	175,
}

//line sql.y:6539
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 344, 345, 345, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 323, 323,
	323, 326, 326, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	348, 348, 145, 145, 143, 143, 144, 144, 213, 213,
	22, 23, 23, 223, 223, 222, 222, 222, 224, 224,
	224, 224, 258, 258, 24, 24, 24, 24, 24, 95,
	95, 325, 325, 324, 316, 316, 315, 315, 314, 322,
	322, 321, 321, 320, 36, 37, 46, 46, 46, 46,
	47, 48, 327, 327, 290, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 292, 292, 279,
	279, 291, 291, 291, 291, 291, 291, 291, 278, 278,
	106, 106, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 339, 339, 193, 193, 193, 193, 193,
	193, 115, 115, 124, 124, 124, 124, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 123, 123, 119, 119,
	119, 120, 120, 120, 121, 121, 340, 340, 340, 340,
	261, 261, 261, 261, 264, 264, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 263, 263, 263, 263, 263,
	265, 265, 265, 265, 265, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	267, 267, 267, 267, 267, 267, 267, 267, 277, 277,
	268, 268, 272, 272, 273, 273, 273, 274, 274, 274,
	275, 275, 270, 270, 270, 270, 270, 270, 271, 271,
	271, 280, 304, 304, 303, 303, 301, 301, 301, 301,
	289, 289, 298, 298, 298, 298, 298, 288, 288, 284,
	284, 284, 285, 285, 286, 286, 283, 283, 287, 287,
	300, 300, 299, 281, 281, 282, 282, 306, 341, 341,
	341, 341, 342, 342, 307, 332, 333, 331, 331, 331,
	331, 331, 77, 77, 77, 235, 235, 235, 296, 296,
	295, 295, 295, 297, 297, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 230, 230, 230, 330, 330, 330, 330,
	330, 330, 329, 329, 329, 293, 293, 293, 328, 328,
	54, 54, 177, 177, 43, 43, 43, 43, 43, 43,
	42, 42, 42, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 44, 44, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 82, 82, 83,
	83, 83, 83, 84, 84, 84, 309, 309, 55, 55,
	3, 3, 133, 135, 136, 136, 134, 134, 134, 134,
	134, 134, 57, 57, 56, 56, 138, 137, 139, 139,
	139, 1, 1, 2, 2, 4, 4, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 313, 313, 313, 276,
	276, 276, 308, 308, 310, 312, 312, 312, 312, 311,
	91, 91, 26, 35, 35, 27, 27, 27, 27, 28,
	28, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	334, 334, 229, 229, 237, 237, 228, 228, 251, 251,
	251, 231, 231, 231, 232, 232, 338, 338, 338, 60,
	60, 60, 62, 62, 63, 64, 64, 253, 253, 254,
	254, 65, 66, 78, 78, 78, 78, 78, 78, 81,
	81, 81, 13, 13, 13, 13, 74, 74, 74, 12,
	12, 61, 61, 68, 335, 335, 336, 337, 337, 337,
	337, 69, 71, 29, 29, 29, 29, 29, 29, 101,
	101, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 96, 96, 96, 90, 90, 349, 72,
	73, 73, 94, 94, 94, 87, 87, 87, 93, 93,
	93, 14, 14, 15, 212, 212, 16, 16, 98, 98,
	100, 100, 100, 100, 100, 102, 102, 102, 102, 102,
	102, 102, 97, 97, 99, 99, 99, 99, 244, 244,
	244, 243, 243, 127, 127, 129, 128, 128, 130, 130,
	131, 131, 131, 131, 175, 175, 153, 153, 210, 210,
	208, 208, 209, 209, 211, 211, 211, 211, 214, 214,
	132, 132, 132, 132, 140, 140, 141, 141, 142, 142,
	252, 252, 249, 249, 249, 248, 248, 146, 146, 146,
	148, 147, 147, 147, 147, 149, 149, 151, 151, 150,
	150, 152, 157, 157, 156, 156, 154, 154, 154, 154,
	155, 155, 155, 155, 158, 158, 111, 111, 111, 111,
	111, 111, 111, 122, 122, 122, 122, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 79, 79, 79, 226, 226, 159,
	159, 167, 167, 167, 167, 160, 160, 160, 160, 160,
	160, 160, 168, 168, 168, 174, 169, 169, 165, 165,
	165, 165, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 319, 319, 318, 318, 317, 317, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 350,
	350, 269, 269, 269, 269, 166, 166, 166, 166, 166,
	92, 92, 92, 92, 92, 257, 257, 257, 260, 260,
	260, 259, 259, 259, 259, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 259, 259, 180, 180, 88, 88,
	178, 178, 179, 181, 181, 176, 176, 176, 162, 162,
	162, 182, 182, 183, 183, 184, 184, 186, 185, 185,
	187, 188, 188, 188, 189, 189, 190, 190, 190, 45,
	45, 45, 45, 45, 40, 40, 40, 40, 41, 41,
	41, 103, 103, 103, 103, 105, 105, 104, 104, 75,
	75, 76, 76, 76, 109, 109, 110, 110, 110, 107,
	107, 108, 108, 206, 206, 191, 191, 191, 198, 198,
	198, 194, 194, 196, 196, 196, 197, 197, 197, 195,
	203, 203, 205, 205, 204, 204, 200, 200, 201, 201,
	202, 202, 202, 199, 199, 161, 161, 161, 161, 161,
	207, 207, 207, 207, 215, 215, 171, 171, 173, 173,
	172, 126, 216, 216, 220, 217, 217, 221, 221, 221,
	221, 221, 218, 218, 219, 219, 245, 245, 245, 225,
	225, 236, 236, 233, 233, 234, 234, 227, 227, 238,
	238, 238, 70, 170, 170, 305, 305, 302, 241, 241,
	242, 242, 246, 246, 250, 250, 247, 247, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 346, 347,
	255, 256, 256, 256,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 4, 4, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	4, 3, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 3, 1, 2, 1, 1, 5, 0, 1, 0,
	1, 2, 3, 0, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 2, 2, 3, 1, 3, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 5, 5, 4, 0, 2, 4, 4, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 1, 2, 1, 3, 1, 1,
	1, 4, 3, 1, 3, 4, 3, 7, 0, 3,
	1, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 6, 3, 4, 3, 1, 3, 4, 5,
	6, 3, 4, 5, 6, 3, 4, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 3, 1, 1, 2, 2,
	2, 2, 1, 1, 2, 9, 6, 6, 6, 2,
	2, 3, 3, 3, 1, 1, 1, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	5, 4, 4, 4, 4, 4, 7, 4, 6, 6,
	6, 4, 4, 4, 7, 8, 6, 5, 6, 8,
	11, 6, 0, 2, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 2, 3, 3, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 0, 5,
	5, 2, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 2, 1, 1, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	1, 0, 1, 2, 4, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 2, 1, 2, 3, 3, 0, 2, 1, 2,
	3, 4, 3, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -344, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 7,
	8, -80, -31, 30, -36, -46, 217, -47, -37, 218,
	-48, 220, 219, 256, 221, 249, 72, 298, 299, 301,
	302, 303, 304, -81, 254, 255, 223, 34, 43, 31,
	32, 35, 227, 262, 263, 226, -8, -32, 6, -346,
	9, 426, 251, 250, 26, -10, 446, 83, -345, 579,
	-206, -191, 20, 31, 27, -190, -186, -94, -191, 18,
	16, 5, -72, -349, -72, -72, 10, 11, -72, -290,
	-292, 83, 154, 83, -72, -52, -51, -50, -49, -53,
	29, -43, -44, -313, -42, -39, 222, 219, 266, 117,
	118, 256, 257, 258, 221, 240, 255, 259, 254, 275,
	-38, 78, 31, 446, 449, -297, 218, 224, 225, 427,
	120, 119, 73, 220, -294, 352, 549, -53, 551, 99,
	101, 550, 42, 230, 552, 553, 554, 555, 239, 556,
	557, 558, 559, 565, 566, 567, 568, 121, 5, -72,
	-250, -246, -323, -240, 86, 87, 88, 443, 242, 476,
	477, 291, 78, 39, 349, 352, 549, 298, 312, 306,
	333, 325, 444, 478, 294, 243, 279, 546, 323, 129,
	551, 297, 479, 257, 357, 358, 359, 99, 301, 394,
	564, 296, 480, 562, 101, 550, 77, 49, 42, 252,
	321, 226, 317, 552, 280, 481, 454, 273, 120, 117,
	571, 34, 315, 48, 28, 561, 119, 47, 553, 145,
	482, 554, 361, 340, 540, 46, 362, 258, 483, 81,
	263, 448, 548, 363, 316, 364, 290, 560, 223, 484,
	532, 365, 366, 541, 485, 341, 345, 486, 386, 367,
	578, 50, 487, 488, 542, 118, 489, 76, 555, 310,
	311, 490, 288, 241, 388, 337, 439, 105, 106, 107,
	108, 440, 109, 102, 441, 110, 104, 103, 111, 338,
	339, 239, 33, 368, 445, 292, 56, 267, 389, 44,
	343, 575, 43, 536, 491, 539, 336, 332, 436, 51,
	492, 493, 494, 495, 556, 335, 309, 331, 570, 130,
	285, 557, 60, 225, 347, 346, 348, 274, 385, 328,
	496, 497, 498, 246, 79, 499, 318, 19, 500, 501,
	369, 281, 502, 54, 503, 504, 392, 255, 505, 52,
	558, 37, 260, 572, 559, 506, 507, 508, 509, 262,
	510, 371, 511, 370, 342, 344, 269, 372, 447, 512,
	314, 259, 563, 513, 247, 547, 261, 266, 254, 393,
	248, 514, 515, 516, 517, 518, 295, 519, 520, 302,
	565, 437, 41, 521, 522, 523, 524, 289, 284, 387,
	396, 59, 80, 354, 525, 545, 308, 282, 526, 299,
	53, 566, 567, 568, 276, 569, 7, 576, 577, 374,
	121, 286, 287, 45, 329, 268, 527, 528, 319, 320,
	334, 307, 330, 300, 533, 270, 375, 438, 256, 529,
	395, 283, 350, 355, 451, 275, 376, 544, 450, 327,
	324, 277, 530, 377, 231, 271, 272, 531, 534, 378,
	379, 293, 380, 381, 382, 383, 384, 278, 449, 305,
	322, 356, 407, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	435, 229, -72, 229, -150, -246, 229, -218, 358, -237,
	360, 373, 368, 378, 366, -229, 369, 371, 269, -338,
	386, 229, 375, 217, 171, 361, 370, 379, 380, 293,
	381, 384, 278, -334, -323, 554, 569, 129, 326, 365,
	363, 387, 536, 383, 382, -246, 300, -253, 305, -241,
	-323, -240, 303, -150, -78, 532, 221, -255, -255, -96,
	536, 538, -169, -111, 138, -122, -125, -116, -117, -163,
	-164, -165, -166, -123, -176, 160, 161, 168, 139, -174,
	-126, 24, 442, 428, 427, 171, 29, 213, 66, 67,
	430, 431, 141, 55, 403, 404, -124, 399, 405, 400,
	433, 434, 112, 435, 102, 104, 103, 436, 437, 438,
	338, 339, 439, 440, 441, 105, 106, 107, 108, 109,
	110, 111, -241, -246, 234, 398, 228, 166, 426, -118,
	-114, -6, -172, 397, 401, 402, 406, -323, -240, -120,
	-119, -159, 89, 95, 100, 96, -343, 113, -346, 90,
	91, 92, 93, 94, 114, 115, 172, 173, 174, 175,
	176, 177, 178, 179, 180, 181, 182, 183, 184, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	196, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 42, 374, 374,
	-150, -72, -72, -72, -72, -184, -94, -186, -8, -6,
	-346, 6, -72, -6, -7, -11, -32, -34, 472, -33,
	-246, -191, -206, 10, 156, 40, 48, -189, -190, -10,
	-6, -111, 17, 21, 22, -99, 162, -111, -246, -73,
	-99, -227, 233, -72, -72, -217, -258, 300, -221, 387,
	386, -242, -219, -241, -239, -218, 385, 222, 21, 452,
	137, 23, 25, 140, 171, 124, 17, 141, 35, 224,
	326, 240, 170, 236, 427, 217, 70, 453, 399, 400,
	397, 403, 429, 430, 398, 360, 29, 11, 455, 26,
	250, 22, 36, 164, 219, 144, 456, 253, 24, 251,
	112, 115, 458, 20, 73, 245, 12, 238, 38, 14,
	459, 460, 15, 234, 233, 156, 230, 68, 9, 213,
	27, 153, 64, 461, 132, 462, 463, 464, 465, 125,
	66, 154, 18, 573, 401, 402, 31, 537, 442, 264,
	166, 71, 57, 538, 138, 466, 467, 113, 468, 116,
	74, 543, 134, 16, 69, 40, 469, 265, 470, 235,
	574, 471, 390, 472, 155, 220, 426, 67, 473, 228,
	373, 6, 432, 30, 249, 237, 123, 65, 474, 229,
	143, 433, 434, 232, 126, 114, 5, 131, 32, 10,
	72, 75, 404, 405, 406, 55, 122, 446, 142, 13,
	475, 391, 136, 129, -291, 154, -278, -282, -241, 244,
	-307, 240, -150, -300, -299, -241, -95, -236, 230, 238,
	237, 131, -327, 134, 286, 398, 228, -49, -50, -218,
	170, -82, 261, 265, 84, 84, -282, -281, -280, -328,
	265, 244, -306, -298, 236, 245, -288, 237, 238, -283,
	230, 132, -328, -283, 235, 245, 265, 265, 121, 265,
	121, 265, 265, 265, 265, 265, 265, 265, 265, 265,
	260, -289, 146, -289, 450, 450, -294, -328, -328, -328,
	232, 33, 33, -238, -283, 232, 23, -289, -289, -218,
	170, -289, -289, -289, -289, 273, 273, -289, -289, -289,
	-289, -289, -289, -289, -289, -289, -289, -289, -289, -289,
	-289, -289, 229, -327, -103, 384, 293, 78, -51, 275,
	-35, -150, -236, 230, 231, -327, 262, -150, 214, -150,
	-231, 154, 13, -231, -228, 374, 372, 359, 364, -231,
	-231, -231, -231, 276, 357, -284, 230, 33, 241, 374,
	276, 357, 276, 277, 276, 277, 367, 377, 276, -251,
	12, 156, 398, 362, 366, 269, 229, 270, 231, 376,
	-323, 539, 277, -251, 90, -232, 154, 374, 272, -231,
	-256, -346, -242, 326, -256, -256, 30, 87, 232, -241,
	-74, -241, 90, -13, -9, -20, -19, -21, 146, -101,
	374, -89, 171, 554, 540, 541, 542, 539, 371, 547,
	545, 543, 276, 544, 84, 134, 136, 137, 130, -111,
	153, -160, 146, 147, 148, 149, 150, 151, 152, 156,
	138, 140, 154, 155, 135, 157, 158, 159, 160, 161,
	162, 163, 165, 164, 166, 167, 170, 215, 216, -117,
	-117, -117, -117, -174, -346, -346, -346, -117, -226, -346,
	-117, -346, -346, -346, -346, -180, -111, -346, -350, -346,
	-350, -350, -269, -346, -269, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, 214, -346,
	-346, -346, -346, -346, -269, -269, -269, -269, 100, 95,
	89, -176, 96, 90, -241, -246, -6, -7, -169, -255,
	-335, -336, -153, -150, -346, 293, -241, -241, 262, -189,
	-10, -6, -184, -190, -186, -6, -72, -87, -100, 61,
	62, -102, 22, 36, 65, 63, 21, -347, 85, -347,
	-206, -347, 84, -34, -210, 83, 59, 41, 90, 90,
	84, 19, -185, -187, -111, 12, -244, 130, -243, 23,
	-241, 90, 214, 98, 12, -151, 27, -150, -227, -227,
	84, 300, -221, -258, -223, -222, 388, 390, 146, -245,
	-241, 90, 29, 85, 84, -150, -261, -264, -266, -265,
	-267, -262, -263, 323, 324, 171, 327, 329, 330, 331,
	332, 333, 334, 335, 336, 337, 340, 30, 252, 319,
	320, 321, 322, 341, 342, 343, 344, 345, 346, 347,
	348, 306, 325, 444, 307, 308, 309, 310, 311, 312,
	314, 315, 316, 317, 318, -326, -323, 83, 85, 84,
	-268, 83, -103, 229, -323, 230, 230, 230, -72, 426,
	-289, -289, 260, 17, -42, -39, -313, 16, -38, -39,
	222, 117, 118, 219, 83, -278, 83, -287, -326, -323,
	83, 132, 235, 131, -286, -283, -286, -287, -323, -176,
	-323, 132, 132, -214, -241, -214, -214, 21, -214, 21,
	-214, 21, 92, -241, -214, 21, -214, 21, -214, 21,
	-214, 21, -214, 21, 29, 76, 77, 29, 79, 80,
	81, -176, -176, -278, -218, -150, -323, 92, 92, -289,
	-289, 92, 90, 90, 90, -289, -289, 92, 90, -248,
	-246, 90, -329, 246, 290, 292, 92, 92, 92, 92,
	29, 90, -330, 29, 561, 560, 562, 563, 564, 92,
	29, 92, 29, 92, -241, 83, -150, -109, 280, 217,
	219, 222, 74, 90, 294, 146, 42, 84, 232, 229,
	-323, -233, 234, -233, -241, -247, -246, -239, 90, -111,
	-285, 12, 156, -251, -251, -231, -150, -285, -251, -231,
	-150, -231, -231, -231, -231, -251, -251, -251, -231, -246,
	-246, -150, -150, -150, -150, -150, -150, -150, -256, -256,
	-256, -232, -231, 539, 90, 74, -254, 303, 337, 533,
	534, 535, 84, 446, -143, -150, 539, 539, 539, 539,
	539, 539, -111, -111, -111, -111, 468, -167, 113, 138,
	114, 115, -125, -168, -172, -174, 97, 156, 140, 154,
	155, -116, -117, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -257, -323, 90, 171,
	-121, -120, 96, -343, -121, -97, -99, -111, -111, -323,
	-241, -97, -97, -111, -93, 22, 36, -178, -179, 142,
	-176, -347, -347, 92, 96, -241, -241, -86, -85, 408,
	409, 410, 411, 413, 414, 415, 418, 419, 423, 424,
	407, 425, 412, 417, 420, 421, 422, 416, 322, -111,
	-111, -111, -111, -111, -111, -79, -111, 124, 125, 126,
	-111, -111, -170, -169, -322, -321, -320, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -98, 22, 36, -97,
	-242, -247, -239, -97, -98, -98, -97, -97, 214, -206,
	-347, 84, -337, 390, 391, 537, -249, 265, -248, 23,
	-170, 90, 12, -212, 75, -241, -189, -189, 61, 62,
	57, -97, -102, -347, -33, 23, -208, -241, 60, 90,
	-270, -218, 349, 350, -111, -111, 84, -188, 25, 26,
	-150, -243, 162, -247, -150, -213, 265, -150, -128, -130,
	-131, -132, -153, -175, -346, -133, 464, 461, 12, -143,
	-144, -152, -246, -221, -223, 84, 389, 391, 392, 74,
	116, -111, -271, 170, -296, -295, -294, -278, -280, -281,
	-282, 85, -271, -274, 355, 354, -268, -268, -268, -268,
	-268, -270, -270, -270, -270, 83, 83, -268, -268, -268,
	-268, -272, 83, -272, -272, -273, 83, -273, -307, -111,
	-304, -303, -301, -302, 239, 99, 446, 75, -299, -188,
	92, -109, -234, 234, -305, -302, -323, -323, -323, -234,
	-323, 90, -323, 90, -83, -55, -1, 573, 574, 575,
	84, 17, -279, -278, -54, 290, -310, -311, 265, -306,
	-300, -287, 132, -286, -287, -287, -323, 84, 27, 121,
	121, 121, 121, 446, 219, 30, -278, -54, -257, 232,
	-257, -257, 90, 90, -230, 569, -143, -105, 282, 146,
	271, 271, 229, 229, 284, -150, 295, 297, 296, 294,
	21, 283, 285, 287, 273, -150, -150, -233, 74, -145,
	-150, 24, -246, -150, -231, -231, -150, -231, -231, -150,
	-241, -89, 390, 84, 446, 20, -90, 20, -346, 113,
	114, 115, -168, -116, -117, -116, 137, 253, 84, -347,
	23, 84, 75, -347, -347, -347, 84, 12, -97, -181,
	-179, 144, -111, -347, -347, -347, 84, 84, 12, -260,
	23, -347, -347, -347, -347, -347, -180, -347, 12, 84,
	84, -347, -347, 84, 84, -347, 84, 84, 84, -319,
	84, 84, 84, 84, -347, -97, -97, -346, 214, -347,
	-347, -347, -347, -347, -242, -336, 536, 391, -157, -156,
	-154, 72, 233, 73, -346, -248, -347, -121, 87, -209,
	87, -208, -162, -241, 92, 96, -191, -127, -129, 12,
	-102, -174, 85, 84, -270, -195, -200, -228, -241, 90,
	171, -187, 214, -158, 13, -161, 30, 55, -9, -346,
	-346, 30, 84, -146, -148, -147, -149, 64, 68, 70,
	65, 66, 67, 71, -252, 23, -128, -7, -6, -346,
	-346, -346, -150, -143, -348, 12, 75, -348, 84, 214,
	-222, -224, 393, 390, 396, -323, 90, -82, 84, -294,
	-282, -192, -106, 38, -275, 356, -270, -270, -277, 90,
	-277, 92, 92, 85, -45, -40, -41, 31, 78, -301,
	-289, 90, 37, -241, 85, -105, -150, 138, 74, -305,
	-305, -305, -246, -2, 572, 578, 132, 83, 359, 16,
	-208, 84, 85, -177, 291, 85, -312, 55, -241, 85,
	83, -287, -287, -241, -346, 229, 29, 29, -54, -177,
	-271, -323, 571, 570, 85, 231, 289, -110, 403, -107,
	90, 86, -150, -150, -150, -150, -150, 222, 219, 274,
	232, -143, -150, 84, -77, 248, 243, -251, -251, 31,
	-150, 390, 548, 546, -111, 137, 253, -125, -117, -99,
	443, -259, 171, 323, 252, 321, 317, 337, 328, 354,
	319, 355, 316, 315, 314, -259, -257, -111, -111, -184,
	145, -111, 143, -111, -111, -111, -347, 171, 323, 12,
	-111, -111, -111, -320, -111, -111, -111, -318, -317, -121,
	-176, -347, -318, -111, -111, -317, -347, -347, -98, -242,
	-154, -283, -283, -283, -214, 84, -225, 20, 12, 55,
	55, -127, -158, -128, -102, -241, -198, 532, -203, 44,
	-201, -202, 45, -199, 46, 54, 162, -189, -111, -215,
	74, -216, -220, -176, -171, -173, -172, -346, -207, -347,
	-241, -214, -216, -130, -131, -131, -130, -131, 64, 64,
	64, 69, 64, 69, 64, -147, -246, -347, -347, -7,
	-7, -111, -249, 75, -128, -128, -152, -246, 162, 390,
	394, 395, -294, -342, 113, 138, 29, 74, 352, 99,
	-340, 170, -341, 235, 131, 132, 247, 23, 39, 85,
	84, 85, 84, 85, 84, -235, 482, 138, -41, -40,
	-289, -289, 92, -323, 231, 24, -150, 74, 74, 74,
	-84, 576, 92, 83, -3, 78, -111, 83, 17, -278,
	-176, 267, 156, -304, -208, -308, -310, -150, -113, -346,
	-112, -114, -118, 160, 161, -177, -150, -104, 280, 288,
	83, -108, 87, -325, 75, 271, 352, 271, -150, -77,
	-45, -150, -231, -231, 31, -323, -347, -125, -117, -346,
	-347, -268, -268, -268, -273, -268, 311, -268, 311, -268,
	-347, -347, 84, -347, 20, -347, -88, 432, -111, 84,
	84, -347, 83, 83, -111, -347, -347, -347, -319, 84,
	-347, 84, -347, 84, -347, -347, -155, 20, -155, -155,
	-347, 87, -150, -158, -182, 14, -195, 49, 329, -205,
	-204, 53, 45, -202, 17, 47, 17, 28, -215, 84,
	146, 84, -347, -347, 84, 55, 214, -347, -158, -141,
	-140, 74, 75, -142, 74, -140, 64, 64, -210, -347,
	-347, 84, -213, -128, -158, -158, 214, 113, -346, -115,
	-124, -113, 10, 90, 90, -323, 132, 132, -150, 83,
	-270, 90, -270, 92, 92, 482, 29, 79, 80, 81,
	29, 76, 77, -150, -150, -150, -150, -309, 83, 17,
	-111, 83, 146, 85, -208, -208, 268, -172, -346, 85,
	-347, 84, -276, 446, 449, -111, -119, -119, -210, 85,
	-316, 446, -324, -241, -241, -241, -241, -116, -270, -111,
	-111, -189, 90, -111, -111, 92, 92, -347, -347, -318,
	-317, -111, -346, 64, 16, 14, -346, -346, -249, -182,
	-183, 15, 17, -196, 51, -194, 50, -194, -204, 17,
	17, 90, 17, 90, 132, -220, -111, -173, 55, -9,
	-241, -171, -241, -184, -111, 83, -111, -121, -158, -158,
	-111, -164, 435, 102, 104, 103, 436, 437, 438, 338,
	339, 439, 440, 441, 105, 106, 107, 108, 109, 110,
	111, 83, -111, 85, 85, -210, -308, -55, 85, -208,
	92, 85, -172, -91, -346, 264, -341, -310, 450, 450,
	-347, 23, -315, -314, -242, 83, 75, -92, 156, 446,
	-347, -347, -347, -347, -347, 85, 85, -347, -347, 84,
	-211, -347, -241, 235, 17, 17, -211, -211, -157, -183,
	-111, -169, -197, 52, 74, 116, 90, 90, 90, 10,
	-171, 214, -189, -208, -135, 359, -184, -347, -208, 85,
	23, 85, 578, 132, 85, 264, -9, 84, 146, -208,
	-150, -347, 444, 71, 447, -111, 84, -347, -347, -347,
	74, 116, -216, -241, 85, -347, -346, -189, 85, -193,
	-9, 83, -3, -347, -75, 446, -314, -293, -242, 90,
	92, 85, 60, 445, 448, -319, -241, 235, -249, -136,
	-134, -241, 496, -332, -333, 74, -342, -339, 113, 138,
	99, -340, 122, 123, -75, -111, 83, -76, 279, 536,
	-325, 60, -347, -347, 84, 20, -261, -57, 506, -333,
	74, 11, 10, 113, 90, 85, -208, 240, -316, 446,
	-134, 503, -271, -121, -331, 248, 243, 246, 30, -331,
	-4, 577, 85, 281, 447, -56, 24, -135, 242, 29,
	113, 92, -4, 448, 506, -121, -138, -137, -139, 540,
	113, 29, -137, -139, 74, -121, 74, 456, 540,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 738,
	738, 738, 0, 738, 0, 0, 738, -2, -2, 738,
	1204, 0, 738, 0, 0, -2, 670, 672, 0, 674,
	-2, 0, 0, 683, 1680, 1680, 733, 0, 0, 0,
	0, 0, 738, 738, 738, 738, 1065, 48, 738, 0,
	83, 84, 689, 690, 691, 63, 0, 1678, 1, 3,
	69, 73, 0, 0, 0, 56, 1074, 0, 76, 0,
	0, 742, 0, 740, 0, 1187, 738, 738, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 517, 457, 500, 455, 486, -2, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 350, 350, 0, 0, -2, 448, 448, 448, 0,
	0, 0, 483, 1189, 403, 350, 350, 0, 350, 350,
	350, 350, 0, 0, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 1091,
	151, 1205, 1202, 1203, 38, 39, 40, 1354, 1355, 1356,
	1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
	1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
	1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
	1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
	1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
	1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
	1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
	1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476,
	1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486,
	1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
	1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506,
	1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516,
	1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526,
	1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536,
	1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546,
	1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556,
	1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566,
	1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576,
	1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586,
	1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596,
	1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606,
	1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 0, 1181, 0, 600, 839, 0, 661, 661, 0,
	661, 661, 661, 661, 0, 0, 0, 612, 0, 0,
	0, 0, 658, 0, 0, 631, 633, 0, 658, 0,
	664, 0, 645, 661, 1681, 1681, 1681, 1172, 0, 655,
	653, 667, 668, 650, 651, 669, 673, 0, 678, 681,
	1198, 1199, 0, 696, 47, 1437, 688, 701, 702, 0,
	734, 735, 43, 936, 0, 861, 866, 877, 890, 891,
	892, 893, 894, 896, 897, 0, 0, 0, 0, 902,
	903, 0, 0, 0, 0, 0, 917, 0, 0, 0,
	0, 0, 1046, 0, 1009, 1009, 953, 1009, 1011, 1011,
	0, 0, 0, 1677, 1470, 1473, 1474, 1495, 1578, 1624,
	1476, 1477, 1463, 1468, 1471, 1464, 1465, 1466, 1467, 1469,
	1472, 1475, 1055, 0, 0, 0, 0, 0, 0, 256,
	257, 935, 1161, 1011, 1011, 1011, 1011, -2, -2, 203,
	204, 205, 206, 207, 208, 209, 0, 199, 0, 261,
	262, 258, 259, 260, 919, 920, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 1680, 0, 711,
	0, 0, 0, 0, 0, 1074, 0, 1066, 1065, 61,
	0, 738, -2, 0, 0, 0, 0, 45, 0, 50,
	798, 75, 74, 1113, 0, 0, 0, 57, 1075, 65,
	67, 1076, 0, 743, 744, 0, 774, 778, 0, 739,
	0, 0, 1188, 1187, 1187, 100, 0, 1620, 1165, -2,
	-2, 0, 0, 1200, 1201, 1174, -2, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, -2, 0, 0, 161, 162, 0, 41,
	376, 0, 157, 0, 370, 320, 1091, 0, 0, 0,
	0, 0, 738, 0, 1182, 142, 143, 149, 150, 350,
	350, 497, 0, 0, 151, 151, 464, 465, 466, 0,
	0, -2, 374, 0, 449, 0, 0, 364, 364, 368,
	366, 367, 0, 0, 0, 0, 0, 0, 477, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 0, 351, 0, 495, 496, 404, 0, 0, 0,
	0, 475, 476, 0, 0, 1190, 1191, 0, 0, 350,
	350, 0, 0, 0, 0, 350, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 1104, 0, 0, 0, -2, 0,
	592, 0, 0, 0, 1183, 1183, 0, 599, 0, 601,
	602, 0, 0, 603, 0, 658, 658, 656, 657, 605,
	606, 607, 608, 661, 0, 0, 359, 360, 361, 658,
	661, 0, 661, 661, 661, 661, 658, 658, 658, 661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	1681, 1681, 664, 661, 0, 641, 0, 642, 643, 646,
	647, 1682, 1683, 1221, 648, 649, 1173, 671, 679, 682,
	699, 697, 698, 700, 692, 693, 694, 695, 0, 713,
	714, 719, 0, 0, 0, 0, 725, 726, 727, 0,
	0, 730, 731, 732, 0, 0, 0, 0, 0, 859,
	0, 0, 925, 926, 927, 928, 929, 930, 931, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 898,
	899, 900, 901, 904, 0, 0, 0, 909, 910, 0,
	0, 0, 0, 0, 748, 0, 1047, 0, 951, 0,
	952, 954, 955, 0, 956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1193, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 758, 0, 0,
	758, 758, 0, 0, 193, 194, 195, 196, 210, 211,
	212, 213, 214, 263, 1055, 0, 935, 0, 0, 44,
	703, 704, 0, 822, 1193, 0, 0, 754, 0, 55,
	64, 66, 1074, 59, 1074, 0, 760, 0, 0, -2,
	-2, 761, 767, 768, 769, 770, 771, 52, 1679, 53,
	0, 72, 0, 46, 0, 0, 0, 0, 332, 1116,
	0, 0, 1067, 1068, 1071, 0, 775, 1506, 779, 0,
	781, 782, 0, 741, 0, 98, 0, 838, 0, 0,
	0, 1620, 1171, 0, 102, 103, 0, 0, 0, 338,
	1176, 1177, 1178, -2, 357, 0, 338, 327, 271, 272,
	273, 320, 275, 320, 320, 320, 320, 332, 332, 332,
	332, 303, 304, 305, 306, 307, 0, 0, 290, 320,
	320, 320, 320, 310, 311, 312, 313, 314, 315, 316,
	317, 276, 277, 278, 279, 280, 281, 282, 283, 284,
	322, 322, 322, 324, 324, 0, 42, 0, 342, 0,
	1071, 0, 1104, 1185, 1195, 0, 0, 0, 1185, 120,
	0, 0, 498, 528, 458, 487, 499, 0, 461, 462,
	-2, 0, 0, 448, 0, 450, 0, 358, 0, -2,
	0, 368, 0, 364, 368, 365, 368, 356, 369, 479,
	480, 481, 0, 558, 808, 0, 0, 0, 0, 0,
	564, 565, 566, 0, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 488, 489, 490, 491, 492, 493,
	494, 0, 0, 450, 0, 484, 0, 405, 406, 0,
	0, 409, 410, 411, 412, 0, 0, 415, 416, 417,
	825, 826, 418, 442, 443, 444, 419, 420, 421, 422,
	423, 424, 425, 436, 437, 438, 439, 440, 441, 426,
	427, 428, 429, 430, 433, 0, 135, 1095, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1183,
	0, 0, 0, 0, 757, 840, 1206, 1207, 662, 663,
	0, 362, 363, 661, 661, 609, 632, 0, 661, 613,
	634, 614, 616, 615, 617, 636, 637, 661, 620, 659,
	660, 621, 622, 623, 624, 625, 626, 627, 628, 629,
	630, 638, 639, 640, 665, 0, 0, 680, 684, 685,
	686, 687, 0, 0, 716, 94, 721, 722, 723, 724,
	736, 729, 937, 856, 857, 858, 0, 860, 863, 0,
	921, 923, 865, 867, 932, 933, 934, 0, 0, 0,
	0, 0, 871, 875, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 895, 1025, 1026, 1027,
	912, 264, 265, 0, 913, 0, 772, 0, 0, 0,
	911, 0, 0, 0, 0, 749, 750, 1053, 1050, 0,
	0, 1010, 1012, 0, 0, 0, 0, 0, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1028,
	0, 0, 0, 0, 0, 1046, 0, 914, 915, 916,
	0, 0, 0, 1194, 0, 130, 131, 0, 0, 0,
	0, 0, 982, 0, 0, 0, 0, 0, 0, 759,
	1056, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	1160, 0, 706, 707, 709, 0, 842, 0, 823, 0,
	0, 712, 0, 753, 0, 756, 58, 60, 765, 766,
	0, 783, 762, 54, 49, 0, 0, 800, 1114, 332,
	1136, 0, 336, 337, 1077, 1078, 0, 1070, 1072, 1073,
	77, 780, 776, 0, 854, 0, 0, 837, 0, 786,
	788, 789, 790, 820, 0, 793, 0, 0, 0, 0,
	0, 96, 839, 1166, 101, 0, 0, 106, 107, 1167,
	1168, 1169, 1170, 0, 517, -2, 400, 163, 165, 166,
	167, 158, -2, 330, 328, 329, 274, 332, 332, 297,
	298, 299, 300, 301, 302, 0, 0, 291, 292, 293,
	294, 285, 0, 286, 287, 288, 0, 289, 375, 0,
	1079, 343, 344, 346, 350, 0, 0, 0, 371, 372,
	0, 1095, 0, 0, 0, 1196, 1195, 1195, 1195, 0,
	153, 154, 155, 156, 553, 0, 0, 529, 551, 552,
	151, 0, 0, 159, 452, 451, 0, 585, 0, 373,
	0, 0, 368, 368, 353, 354, 482, 0, 0, 560,
	561, 562, 563, 0, 0, 0, 450, 452, 338, 0,
	407, 408, 413, 414, 431, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 513, 514, 515,
	516, 1092, 1093, 1094, 0, 0, 593, 0, 0, 392,
	92, 1184, 598, 658, 619, 635, 658, 611, 618, 644,
	676, 720, 0, 0, 0, 0, 728, 0, 0, 864,
	922, 924, 868, 0, 872, 876, 0, 0, 0, 0,
	0, 0, 0, 918, 942, 943, 0, 0, 1065, 0,
	1051, 0, 0, 950, 1013, 1014, 0, 0, 0, 0,
	0, 961, 962, 963, 964, 965, 0, 967, 0, 0,
	0, 971, 972, 0, 0, 973, 0, 0, 0, 0,
	0, 0, 0, 0, 938, 0, 0, 758, 0, 1015,
	1016, 1017, 1018, 1019, 1056, 705, 708, 710, 796, 843,
	844, 0, 0, 0, 0, 824, 1192, 751, 752, 755,
	-2, 0, 0, 1058, 0, 0, 783, 854, 784, 0,
	763, 51, 799, 0, 1118, 1117, 1130, 1143, 333, 334,
	335, 1069, 0, 1074, 0, 1154, 0, 0, 1146, 0,
	0, 0, 0, 0, 0, 0, 0, 827, 0, 0,
	830, 0, 0, 0, 0, 821, 0, 0, 0, 0,
	0, 0, -2, 0, 0, 90, 91, 0, 0, 0,
	104, 105, 0, 0, 111, 339, 340, 144, 151, 402,
	164, 382, 0, 0, 270, 331, 295, 296, 0, 318,
	0, 0, 0, 395, 116, 1083, 1082, 350, 350, 345,
	0, 348, 0, 1197, 321, 0, 134, 0, 0, 0,
	0, 0, 140, 523, 0, 0, 530, 0, 0, 0,
	456, 0, 467, 468, 0, 557, 584, 0, 589, 342,
	0, 352, 355, 809, 0, 0, 469, 0, 452, 473,
	474, 485, 434, 435, 432, 0, 0, 1105, 1106, 1111,
	1109, 1110, 121, 505, 507, 506, 510, 0, 0, 503,
	0, 392, 1079, 0, 597, 393, 394, 661, 661, 715,
	95, 0, 718, 0, 0, 0, 0, 869, 873, 773,
	0, 0, 320, 320, 1033, 320, 324, 1036, 320, 1038,
	320, 1041, 320, 1044, 1045, 0, 0, 0, 0, 1048,
	949, 1054, 0, 0, 0, 0, 960, 0, 0, 0,
	0, 0, 0, 132, 133, 982, 0, 0, 984, 986,
	987, 977, 983, 0, 0, 0, 939, 940, 0, 1057,
	845, 850, 850, 850, 0, 0, 0, 1179, 1180, 1059,
	1060, 854, 1061, 785, 764, 801, 1136, 0, 1129, 0,
	-2, 1138, 0, 0, 0, 1144, 777, 78, 855, 81,
	0, 1154, 1162, 0, 1145, 1156, 1158, 0, 0, 0,
	1150, 0, 854, 787, 816, 818, 0, 813, 828, 829,
	831, 0, 833, 0, 835, 836, 798, 792, 794, 0,
	0, 0, 98, 0, 854, 854, 97, 0, 841, 108,
	109, 110, 401, 168, 173, 0, 0, 0, 178, 0,
	180, 0, 383, 0, 267, 269, 0, 0, 171, 332,
	0, 332, 0, 325, 0, 384, 396, 0, 1080, 1081,
	0, 0, 347, 349, 0, 1186, 136, 0, 0, 0,
	526, 0, 554, 0, 0, 0, 0, 0, 0, 160,
	453, 0, 0, 341, 0, 0, 582, 579, 470, 0,
	197, 198, 200, 0, 0, 472, 798, 1096, 1097, 1098,
	0, 1108, 1112, 124, 0, 0, 0, 0, 594, 595,
	596, 93, 604, 610, 717, 737, 862, 870, 874, 0,
	906, 1031, 332, 1034, 1035, 1037, 1039, 1040, 1042, 1043,
	907, 908, 0, 945, 0, 947, 1074, 0, 1052, 0,
	0, 959, 0, 0, 0, 968, 969, 970, 0, 0,
	976, 0, 978, 0, 981, 941, 0, 0, 0, 0,
	822, -2, 62, 1061, 1063, 0, 1123, 1121, 1121, 1131,
	1132, 0, 0, 1139, 0, 0, 0, 0, 82, 0,
	0, 0, 1159, 0, 0, 0, 0, 99, 1065, 810,
	817, 0, 0, 811, 0, 812, 832, 834, 791, -2,
	795, 0, 854, 854, 88, 89, 0, 174, 0, 176,
	191, 192, 0, 179, 181, 182, 266, 268, 0, 0,
	308, 319, 309, 0, 0, 397, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 798, 137, 138, 139, 518, 0, 528,
	0, 0, 0, 521, 0, 459, 0, 588, 0, 0,
	559, 0, 567, 0, 0, 0, 201, 202, 0, 1107,
	504, 0, 122, 123, 0, 0, 509, 1020, 1032, 0,
	0, 0, 1049, 0, 0, 0, 0, 966, 974, 0,
	985, 0, 0, 851, 0, 0, 0, 0, 842, 1063,
	80, 0, 0, 1126, 0, 1119, 1122, 1120, 1133, 0,
	0, 1140, 0, 1142, 0, 1163, 1164, 1157, 0, 1149,
	1152, 1148, 1151, 1074, 814, 0, 819, 0, 1065, 87,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 326, 0, 0, 0, 519, 0,
	531, 522, 586, 587, 0, 590, 377, 583, 580, 581,
	471, 0, 125, 126, 0, 0, 0, 0, 0, 0,
	944, 946, 948, 957, 958, 1029, 1030, 975, 979, 0,
	0, 847, 804, 805, 852, 853, 0, 0, 797, 79,
	1064, 1062, 1115, 0, 1124, 1125, 1134, 1135, 1141, 0,
	1147, 0, 85, 0, 0, 0, 1074, 175, 0, 185,
	0, 527, 0, 530, 520, 0, 1099, 0, 0, 0,
	511, 905, 0, 0, 0, 982, 0, 846, 848, 849,
	1127, 1128, 1155, 1153, 815, 822, 0, 86, 378, 382,
	1099, 0, 0, 591, 501, 1101, 127, 128, 445, 446,
	447, 121, 1021, 0, 1024, 0, 806, 807, 532, 0,
	534, 0, -2, 379, 380, 0, 169, 186, 187, 0,
	0, 190, 183, 184, 117, 0, 0, 0, 1102, 1103,
	124, 1022, 980, 533, 0, 0, 338, 0, 543, 381,
	0, 0, 0, 188, 189, 555, 0, 0, 508, 0,
	535, 536, 544, 0, 385, 387, 388, 0, 0, 386,
	524, 0, 555, 1100, 0, 0, 545, 541, 389, 390,
	391, 556, 525, 1023, 0, 537, 538, 539, 0, 548,
	549, 0, 540, 0, 0, 550, 0, 546, 547,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 139, 3, 3, 3, 165, 157, 3,
	83, 85, 162, 160, 84, 161, 214, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 579,
	147, 146, 148, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 167, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 135, 3, 168,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	136, 137, 138, 140, 141, 142, 143, 144, 145, 149,
	150, 151, 152, 153, 154, 155, 156, 158, 159, 164,
	166, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:499
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:504
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:505
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:509
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:545
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:555
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:559
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:564
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:568
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:574
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:580
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:586
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:590
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:599
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:609
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:615
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:621
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:625
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:629
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:689
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:703
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:734
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:768
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:774
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:806
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:818
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:822
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:828
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:834
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:838
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:842
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:846
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:852
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:856
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:860
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:866
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:870
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:876
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:880
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:889
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:895
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:901
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:905
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:911
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:921
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:925
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:929
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:935
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:939
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:943
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:947
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:953
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:957
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:963
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:969
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:976
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:989
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1005
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1009
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1015
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1020
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1025
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1031
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1042
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1051
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1057
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1067
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1073
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1080
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1087
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1092
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1097
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1109
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1116
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1127
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1134
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1138
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1144
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1148
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1172
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1176
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1193
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1197
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1203
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1213
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1218
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1223
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1227
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1232
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1236
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1240
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1251
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1260
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1269
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1282
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1286
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1292
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1303
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1318
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1323
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1332
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1339
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1343
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1348
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1369
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1381
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1418
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1422
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1432
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1436
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1440
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1444
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1448
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1452
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1457
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1461
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1465
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1469
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1473
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1480
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1544
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1580
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1664
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1668
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1672
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1678
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1682
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1689
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1693
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1697
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1701
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1718
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1779
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1811
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1932
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1937
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1949
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1959
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1975
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1980
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1984
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2031
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2040
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2046
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2056
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2060
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2065
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2069
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2085
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2089
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2093
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2097
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2101
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2106
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2110
		{
			yyVAL.str = yyDollar[2].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2116
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2120
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2140
		{
			yyVAL.str = "key"
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.str = yyDollar[1].str
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2150
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2169
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2179
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2185
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2189
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2195
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2199
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2205
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2211
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2215
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2219
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2223
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2232
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2238
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2244
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2250
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2256
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2260
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2264
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2268
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2272
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2298
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2307
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2313
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2321
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2327
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2389
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2393
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2397
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2401
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2405
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2409
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2413
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2417
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2421
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2425
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2429
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2433
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2437
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2441
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2445
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2450
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2458
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2496
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2500
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2509
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2514
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2518
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2522
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2526
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2534
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2540
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2586
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2590
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2594
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2634
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2638
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2642
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2648
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2658
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2662
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2666
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2670
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2674
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2678
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2682
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2686
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2690
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2696
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2710
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2763
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2767
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2794
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2798
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2830
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2848
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2857
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2865
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2874
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2881
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2893
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2902
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2917
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2931
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2935
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2941
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2947
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2953
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2963
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2967
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2973
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2979
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2985
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2991
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2997
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3005
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3015
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3021
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3027
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3031
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3035
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3041
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3045
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3050
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3054
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3059
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3063
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3069
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3073
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3077
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3081
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3085
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3089
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3093
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3097
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3101
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3105
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3109
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3113
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3117
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3121
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3125
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3129
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3133
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3137
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3141
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3145
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3149
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3153
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3158
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3162
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3173
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3177
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3188
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3192
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3199
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3206
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3215
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3237
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3241
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3251
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3264
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3285
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3289
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3293
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3297
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3301
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3309
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3313
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3317
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3321
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3325
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3329
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3341
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3345
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3349
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3353
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3357
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3361
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3365
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3369
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3373
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3377
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3381
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3385
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3393
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3397
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3401
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3409
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3413
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3417
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3421
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3434
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3447
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3464
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3478
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3486
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3502
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.str = "extended "
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3512
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3516
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3532
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3536
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3540
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3546
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3550
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3554
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3560
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3564
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3570
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3584
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3588
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3592
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3598
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3602
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3608
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3614
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3623
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3625
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3628
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3630
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3646
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3650
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3654
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3658
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3662
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3666
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3672
		{
			yyVAL.str = yyDollar[1].str
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = yyDollar[1].str
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3686
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3690
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3694
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3698
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3743
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3747
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3753
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3759
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3763
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3767
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3771
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3809
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3815
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3819
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3878
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3882
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = ""
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3891
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3896
		{
			setAllowComments(yylex, true)
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3900
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3906
		{
			yyVAL.strs = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3910
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3916
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3920
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3929
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.str = SQLCacheStr
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3942
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3946
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3950
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3981
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3996
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4000
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4005
		{
			yyVAL.strs = nil
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4013
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4021
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.str = SQLCacheStr
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.str = DistinctStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.str = DistinctStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.str = StraightJoinHint
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4057
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4067
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4071
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4075
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4079
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4084
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4092
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4099
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4104
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4108
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4114
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4120
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4134
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4138
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4142
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4146
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4152
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4156
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4162
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4166
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4171
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4175
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4181
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4185
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4191
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4195
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4201
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4205
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4209
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4213
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4219
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4236
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4240
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4244
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4248
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4254
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4256
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4260
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4266
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4271
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4273
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4276
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4284
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4297
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4301
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4305
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4311
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4317
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4321
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4325
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4329
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4335
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4339
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4349
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4363
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4369
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4378
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4384
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4388
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 846:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4394
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4398
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4402
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4406
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4411
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4415
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4419
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4423
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4429
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4433
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4440
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4444
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4448
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4452
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4456
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4460
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4464
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4471
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4475
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4479
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4483
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4489
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4493
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4497
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4501
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4505
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4513
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4517
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4521
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4525
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4535
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4547
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4551
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4555
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4559
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4589
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4605
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4633
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4637
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4641
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4645
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4649
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4653
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4691
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4695
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4699
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4705
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4709
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4715
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4719
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4726
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4730
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4734
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4738
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4744
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4748
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4752
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4756
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4760
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4764
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4768
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4774
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4778
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4782
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4789
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4795
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4799
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 938:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4817
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4821
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4839
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4878
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4882
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4888
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4892
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4949
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4961
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4973
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4977
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4981
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5006
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5012
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5016
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5022
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5026
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5032
		{
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5034
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5038
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5042
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5046
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5050
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5054
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5058
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5062
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5066
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5070
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5074
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5080
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5084
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5088
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5092
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5096
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5100
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5104
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5108
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5112
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5145
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5149
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5153
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5157
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5161
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5167
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5171
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5175
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5179
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5183
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5193
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5203
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5207
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5211
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5217
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5221
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5225
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5229
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5233
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5239
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5243
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5247
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5251
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5255
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5259
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5263
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5267
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5271
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5275
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5290
		{
			yyVAL.str = string("")
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5294
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5300
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5304
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5310
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5325
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5329
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5333
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5348
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5352
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5362
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5376
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5380
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5386
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5392
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5396
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5402
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5407
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5411
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5415
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5420
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5424
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5430
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5434
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5438
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5447
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5451
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5455
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5459
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5466
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5470
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5474
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5478
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5484
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5488
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5492
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5497
		{
			yyVAL.str = ""
		}
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5501
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5505
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5509
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5514
		{
			yyVAL.str = ""
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5518
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5524
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5528
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5533
		{
			yyVAL.str = ""
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5537
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5542
		{
			yyVAL.str = "cascaded"
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5546
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5550
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1104:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5559
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5565
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5571
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5577
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5590
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5595
		{
			yyVAL.str = ""
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5599
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5605
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5609
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5615
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5619
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5623
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5628
		{
			yyVAL.str = ""
		}
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5632
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5636
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5641
		{
			yyVAL.str = ""
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5645
		{
			yyVAL.str = " header"
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5650
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5654
		{
			yyVAL.str = " manifest on"
		}
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5658
		{
			yyVAL.str = " manifest off"
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5663
		{
			yyVAL.str = ""
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5667
		{
			yyVAL.str = " overwrite on"
		}
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5671
		{
			yyVAL.str = " overwrite off"
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5677
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1130:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5682
		{
			yyVAL.str = ""
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5686
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5692
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5696
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5702
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5706
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5711
		{
			yyVAL.str = ""
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5715
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5721
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5725
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5731
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5735
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5739
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5744
		{
			yyVAL.str = ""
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5748
		{
			yyVAL.str = " optionally"
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5761
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5765
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5769
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5773
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5777
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5783
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5787
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5791
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5795
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5804
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5810
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5814
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5820
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5824
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5830
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5835
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5845
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5849
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5855
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5861
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5865
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5871
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5875
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5879
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5883
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5887
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5895
		{
			yyVAL.str = "charset"
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5905
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5909
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5913
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5927
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5929
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5932
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5934
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5937
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5942
		{
			yyVAL.empty = struct{}{}
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5944
		{
			yyVAL.empty = struct{}{}
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5946
		{
			yyVAL.empty = struct{}{}
		}
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5950
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5955
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5959
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5964
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5966
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5970
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5976
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5980
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5987
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5993
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5997
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6003
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6007
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6014
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6509
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6518
		{
			decNesting(yylex)
		}
	case 1680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6523
		{
			skipToEnd(yylex)
		}
	case 1681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6528
		{
			skipToEnd(yylex)
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6532
		{
			skipToEnd(yylex)
		}
	case 1683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6536
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
