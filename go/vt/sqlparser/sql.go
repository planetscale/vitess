// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const CHANGE = 57478
const SCHEMA = 57479
const TABLE = 57480
const INDEX = 57481
const VIEW = 57482
const TO = 57483
const IGNORE = 57484
const IF = 57485
const UNIQUE = 57486
const PRIMARY = 57487
const COLUMN = 57488
const SPATIAL = 57489
const FULLTEXT = 57490
const KEY_BLOCK_SIZE = 57491
const CHECK = 57492
const INDEXES = 57493
const ACTION = 57494
const CASCADE = 57495
const CONSTRAINT = 57496
const FOREIGN = 57497
const NO = 57498
const REFERENCES = 57499
const RESTRICT = 57500
const SHOW = 57501
const DESCRIBE = 57502
const EXPLAIN = 57503
const DATE = 57504
const ESCAPE = 57505
const REPAIR = 57506
const OPTIMIZE = 57507
const TRUNCATE = 57508
const MAXVALUE = 57509
const PARTITION = 57510
const REORGANIZE = 57511
const LESS = 57512
const THAN = 57513
const PROCEDURE = 57514
const TRIGGER = 57515
const VINDEX = 57516
const VINDEXES = 57517
const DIRECTORY = 57518
const NAME = 57519
const UPGRADE = 57520
const STATUS = 57521
const VARIABLES = 57522
const WARNINGS = 57523
const CASCADED = 57524
const DEFINER = 57525
const OPTION = 57526
const SQL = 57527
const UNDEFINED = 57528
const SEQUENCE = 57529
const MERGE = 57530
const TEMPTABLE = 57531
const INVOKER = 57532
const SECURITY = 57533
const FIRST = 57534
const AFTER = 57535
const BEGIN = 57536
const START = 57537
const TRANSACTION = 57538
const COMMIT = 57539
const ROLLBACK = 57540
const SAVEPOINT = 57541
const RELEASE = 57542
const WORK = 57543
const BIT = 57544
const TINYINT = 57545
const SMALLINT = 57546
const MEDIUMINT = 57547
const INT = 57548
const INTEGER = 57549
const BIGINT = 57550
const INTNUM = 57551
const REAL = 57552
const DOUBLE = 57553
const FLOAT_TYPE = 57554
const DECIMAL = 57555
const NUMERIC = 57556
const TIME = 57557
const TIMESTAMP = 57558
const DATETIME = 57559
const YEAR = 57560
const CHAR = 57561
const VARCHAR = 57562
const BOOL = 57563
const CHARACTER = 57564
const VARBINARY = 57565
const NCHAR = 57566
const TEXT = 57567
const TINYTEXT = 57568
const MEDIUMTEXT = 57569
const LONGTEXT = 57570
const BLOB = 57571
const TINYBLOB = 57572
const MEDIUMBLOB = 57573
const LONGBLOB = 57574
const JSON = 57575
const ENUM = 57576
const GEOMETRY = 57577
const POINT = 57578
const LINESTRING = 57579
const POLYGON = 57580
const GEOMETRYCOLLECTION = 57581
const MULTIPOINT = 57582
const MULTILINESTRING = 57583
const MULTIPOLYGON = 57584
const NULLX = 57585
const AUTO_INCREMENT = 57586
const APPROXNUM = 57587
const SIGNED = 57588
const UNSIGNED = 57589
const ZEROFILL = 57590
const COLLATION = 57591
const DATABASES = 57592
const SCHEMAS = 57593
const TABLES = 57594
const VITESS_METADATA = 57595
const VSCHEMA = 57596
const FULL = 57597
const PROCESSLIST = 57598
const COLUMNS = 57599
const FIELDS = 57600
const ENGINES = 57601
const PLUGINS = 57602
const EXTENDED = 57603
const KEYSPACES = 57604
const VITESS_KEYSPACES = 57605
const VITESS_SHARDS = 57606
const VITESS_TABLETS = 57607
const CODE = 57608
const PRIVILEGES = 57609
const FUNCTION = 57610
const NAMES = 57611
const CHARSET = 57612
const GLOBAL = 57613
const SESSION = 57614
const ISOLATION = 57615
const LEVEL = 57616
const READ = 57617
const WRITE = 57618
const ONLY = 57619
const REPEATABLE = 57620
const COMMITTED = 57621
const UNCOMMITTED = 57622
const SERIALIZABLE = 57623
const CURRENT_TIMESTAMP = 57624
const DATABASE = 57625
const CURRENT_DATE = 57626
const CURRENT_TIME = 57627
const LOCALTIME = 57628
const LOCALTIMESTAMP = 57629
const CURRENT_USER = 57630
const UTC_DATE = 57631
const UTC_TIME = 57632
const UTC_TIMESTAMP = 57633
const REPLACE = 57634
const CONVERT = 57635
const CAST = 57636
const SUBSTR = 57637
const SUBSTRING = 57638
const GROUP_CONCAT = 57639
const SEPARATOR = 57640
const TIMESTAMPADD = 57641
const TIMESTAMPDIFF = 57642
const MATCH = 57643
const AGAINST = 57644
const BOOLEAN = 57645
const LANGUAGE = 57646
const WITH = 57647
const QUERY = 57648
const EXPANSION = 57649
const UNUSED = 57650
const ARRAY = 57651
const CUME_DIST = 57652
const DESCRIPTION = 57653
const DENSE_RANK = 57654
const EMPTY = 57655
const EXCEPT = 57656
const FIRST_VALUE = 57657
const GROUPING = 57658
const GROUPS = 57659
const JSON_TABLE = 57660
const LAG = 57661
const LAST_VALUE = 57662
const LATERAL = 57663
const LEAD = 57664
const MEMBER = 57665
const NTH_VALUE = 57666
const NTILE = 57667
const OF = 57668
const OVER = 57669
const PERCENT_RANK = 57670
const RANK = 57671
const RECURSIVE = 57672
const ROW_NUMBER = 57673
const SYSTEM = 57674
const WINDOW = 57675
const ACTIVE = 57676
const ADMIN = 57677
const BUCKETS = 57678
const CLONE = 57679
const COMPONENT = 57680
const DEFINITION = 57681
const ENFORCED = 57682
const EXCLUDE = 57683
const FOLLOWING = 57684
const GEOMCOLLECTION = 57685
const GET_MASTER_PUBLIC_KEY = 57686
const HISTOGRAM = 57687
const HISTORY = 57688
const INACTIVE = 57689
const INVISIBLE = 57690
const LOCKED = 57691
const MASTER_COMPRESSION_ALGORITHMS = 57692
const MASTER_PUBLIC_KEY_PATH = 57693
const MASTER_TLS_CIPHERSUITES = 57694
const MASTER_ZSTD_COMPRESSION_LEVEL = 57695
const NESTED = 57696
const NETWORK_NAMESPACE = 57697
const NOWAIT = 57698
const NULLS = 57699
const OJ = 57700
const OLD = 57701
const OPTIONAL = 57702
const ORDINALITY = 57703
const ORGANIZATION = 57704
const OTHERS = 57705
const PATH = 57706
const PERSIST = 57707
const PERSIST_ONLY = 57708
const PRECEDING = 57709
const PRIVILEGE_CHECKS_USER = 57710
const PROCESS = 57711
const RANDOM = 57712
const REFERENCE = 57713
const REQUIRE_ROW_FORMAT = 57714
const RESOURCE = 57715
const RESPECT = 57716
const RESTART = 57717
const RETAIN = 57718
const REUSE = 57719
const ROLE = 57720
const SECONDARY = 57721
const SECONDARY_ENGINE = 57722
const SECONDARY_LOAD = 57723
const SECONDARY_UNLOAD = 57724
const SKIP = 57725
const SRID = 57726
const THREAD_PRIORITY = 57727
const TIES = 57728
const UNBOUNDED = 57729
const VCPU = 57730
const VISIBLE = 57731
const FORMAT = 57732
const TREE = 57733
const VITESS = 57734
const TRADITIONAL = 57735
const LOCAL = 57736
const LOW_PRIORITY = 57737

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	156, 828,
	-2, 87,
	-1, 43,
	136, 111,
	239, 111,
	-2, 105,
	-1, 51,
	34, 375,
	156, 375,
	168, 375,
	196, 389,
	197, 389,
	-2, 377,
	-1, 56,
	158, 399,
	-2, 397,
	-1, 80,
	55, 442,
	-2, 450,
	-1, 104,
	136, 111,
	239, 111,
	-2, 106,
	-1, 112,
	161, 228,
	162, 228,
	-2, 272,
	-1, 457,
	143, 839,
	-2, 835,
	-1, 458,
	143, 840,
	-2, 836,
	-1, 475,
	55, 443,
	-2, 455,
	-1, 476,
	55, 444,
	-2, 456,
	-1, 496,
	111, 1134,
	-2, 80,
	-1, 497,
	111, 1034,
	-2, 81,
	-1, 502,
	111, 992,
	-2, 799,
	-1, 504,
	111, 1075,
	-2, 801,
	-1, 664,
	167, 36,
	172, 36,
	-2, 239,
	-1, 685,
	136, 111,
	239, 111,
	-2, 295,
	-1, 972,
	167, 37,
	172, 37,
	-2, 240,
	-1, 1089,
	143, 842,
	-2, 838,
	-1, 1179,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1550,
	5, 696,
	18, 696,
	20, 696,
	32, 696,
	82, 696,
	-2, 481,
	-1, 1752,
	45, 770,
	-2, 768,
}

const yyPrivate = 57344

const yyLast = 20557

var yyAct = [...]int{
	457, 1830, 1817, 1597, 1752, 1461, 1793, 1468, 1680, 739,
	1703, 1201, 1378, 430, 1112, 1346, 1530, 79, 3, 1126,
	1527, 416, 1531, 1379, 1235, 853, 802, 1457, 1240, 468,
	399, 1197, 1365, 1542, 1200, 401, 638, 1437, 1436, 1515,
	846, 1176, 698, 675, 1488, 1306, 1076, 121, 1018, 1083,
	133, 501, 370, 133, 1242, 1004, 1265, 77, 382, 639,
	133, 737, 890, 970, 1429, 1158, 873, 1165, 851, 477,
	883, 1109, 1128, 856, 977, 645, 876, 889, 840, 874,
	403, 642, 665, 31, 1053, 1141, 462, 1231, 382, 978,
	392, 382, 133, 382, 471, 1243, 646, 498, 863, 120,
	1181, 887, 75, 661, 1021, 662, 105, 106, 880, 111,
	80, 389, 815, 1123, 1124, 1039, 74, 133, 1803, 133,
	816, 122, 123, 124, 1344, 1749, 133, 8, 691, 1220,
	7, 133, 6, 1576, 1705, 1666, 1836, 1790, 1829, 76,
	1771, 1819, 1598, 1789, 1505, 82, 83, 84, 85, 86,
	87, 1770, 1627, 654, 1557, 1558, 483, 487, 1247, 463,
	442, 1345, 448, 449, 446, 447, 1451, 445, 444, 443,
	1450, 1556, 660, 390, 391, 361, 97, 450, 451, 1245,
	1192, 1193, 33, 1191, 362, 68, 37, 38, 1409, 495,
	891, 1408, 892, 359, 1410, 708, 122, 123, 124, 706,
	717, 718, 672, 102, 126, 127, 128, 102, 116, 461,
	118, 656, 655, 1739, 764, 763, 773, 774, 766, 767,
	768, 769, 770, 771, 772, 765, 460, 356, 775, 1421,
	102, 94, 1214, 1125, 735, 1659, 368, 98, 719, 1773,
	99, 100, 720, 717, 718, 1221, 1489, 122, 123, 124,
	1618, 1244, 658, 1616, 380, 1038, 67, 384, 1470, 378,
	1458, 1266, 1585, 1447, 1254, 1252, 1255, 1256, 726, 1586,
	728, 1824, 993, 1040, 1041, 1042, 733, 347, 959, 1285,
	712, 713, 709, 710, 711, 714, 707, 1473, 1491, 686,
	1472, 990, 1159, 992, 1677, 643, 1837, 1815, 643, 1720,
	668, 674, 725, 727, 349, 350, 351, 956, 366, 367,
	373, 734, 667, 1834, 363, 365, 374, 352, 353, 376,
	375, 994, 355, 354, 119, 348, 358, 371, 1471, 991,
	1804, 731, 643, 690, 1086, 651, 641, 489, 1474, 1493,
	998, 1497, 740, 1492, 1446, 1490, 346, 133, 674, 101,
	1495, 976, 975, 101, 1514, 657, 1347, 1349, 1513, 1494,
	1512, 652, 721, 724, 125, 1284, 1275, 1756, 1283, 1325,
	1648, 382, 1496, 1498, 1322, 1555, 101, 787, 788, 1370,
	1314, 1276, 1187, 113, 867, 382, 382, 1575, 1449, 800,
	684, 695, 701, 702, 703, 704, 705, 765, 723, 1198,
	775, 775, 1769, 1221, 746, 689, 1405, 1246, 122, 123,
	124, 1019, 736, 722, 1740, 764, 763, 773, 774, 766,
	767, 768, 769, 770, 771, 772, 765, 1022, 673, 775,
	1137, 1721, 1719, 104, 1774, 667, 670, 671, 755, 643,
	700, 90, 1035, 664, 668, 1348, 754, 752, 1731, 372,
	676, 752, 1832, 730, 114, 1833, 1785, 1831, 112, 663,
	115, 133, 1567, 755, 681, 732, 682, 755, 1507, 683,
	1540, 1321, 1110, 1307, 1253, 673, 1142, 1143, 960, 785,
	91, 893, 844, 1274, 750, 69, 382, 962, 843, 133,
	1211, 133, 133, 1419, 382, 715, 1110, 1212, 1332, 1759,
	382, 787, 788, 498, 860, 1665, 787, 788, 768, 769,
	770, 771, 772, 765, 749, 803, 775, 747, 1838, 748,
	1020, 766, 767, 768, 769, 770, 771, 772, 765, 1060,
	485, 775, 872, 1664, 692, 693, 1023, 841, 1299, 1300,
	1301, 1581, 1433, 1058, 1059, 1057, 699, 857, 753, 754,
	752, 753, 754, 752, 685, 1820, 818, 820, 822, 824,
	826, 828, 829, 1139, 819, 821, 755, 825, 827, 755,
	830, 838, 1432, 472, 677, 678, 845, 1250, 1517, 759,
	1823, 762, 1821, 1810, 1839, 650, 1822, 776, 777, 778,
	779, 780, 781, 782, 393, 760, 761, 758, 764, 763,
	773, 774, 766, 767, 768, 769, 770, 771, 772, 765,
	1811, 1812, 775, 764, 763, 773, 774, 766, 767, 768,
	769, 770, 771, 772, 765, 1138, 1518, 775, 773, 774,
	766, 767, 768, 769, 770, 771, 772, 765, 133, 1320,
	775, 1801, 952, 1783, 753, 754, 752, 1319, 1048, 1050,
	1051, 133, 488, 963, 964, 1049, 1434, 888, 1693, 1662,
	67, 1588, 755, 1636, 382, 972, 753, 754, 752, 753,
	754, 752, 1056, 981, 753, 754, 752, 1509, 122, 123,
	124, 382, 653, 1519, 755, 133, 1442, 755, 1430, 1296,
	133, 1008, 755, 133, 1003, 472, 133, 753, 754, 752,
	969, 1726, 966, 122, 123, 124, 1725, 1078, 133, 1676,
	133, 1594, 1805, 985, 988, 755, 122, 123, 124, 1445,
	1454, 1209, 382, 382, 133, 382, 382, 133, 382, 382,
	122, 123, 124, 1539, 1412, 76, 980, 1643, 490, 491,
	1007, 951, 989, 1594, 1767, 493, 979, 1006, 751, 1010,
	1730, 1012, 1764, 1014, 1015, 1016, 1017, 419, 418, 421,
	422, 423, 424, 1366, 971, 1024, 420, 425, 33, 967,
	1594, 1763, 1054, 122, 123, 124, 1077, 1262, 1594, 1757,
	1594, 472, 1528, 1025, 1026, 1079, 1028, 1029, 1183, 1031,
	1032, 1539, 656, 655, 1635, 472, 1646, 472, 999, 382,
	1594, 1593, 1573, 1572, 1569, 1570, 1569, 1568, 1366, 855,
	1087, 1161, 472, 1150, 472, 1710, 1091, 1092, 1080, 1081,
	955, 1460, 1455, 1456, 1162, 472, 751, 472, 33, 1093,
	1183, 1162, 382, 382, 1033, 955, 954, 900, 899, 1055,
	1399, 1151, 67, 133, 1098, 1101, 78, 33, 1182, 1184,
	1111, 1571, 1089, 1373, 1162, 382, 1088, 1186, 1667, 1133,
	1413, 1162, 133, 1190, 1337, 382, 1336, 465, 1150, 133,
	803, 133, 1182, 1132, 1140, 1374, 1539, 1087, 1121, 133,
	133, 997, 885, 1144, 1117, 1118, 382, 659, 67, 382,
	1682, 1184, 1675, 458, 1654, 498, 1177, 957, 498, 1182,
	382, 382, 67, 1236, 1090, 1668, 1669, 1670, 1549, 1202,
	1150, 1150, 1587, 1269, 1232, 1226, 1225, 973, 953, 1089,
	92, 67, 1438, 1156, 1439, 649, 756, 1152, 1167, 1170,
	1171, 1172, 1168, 1469, 1169, 1173, 1683, 1205, 1543, 1544,
	1247, 67, 1826, 134, 1543, 1544, 134, 1818, 1562, 1546,
	1528, 383, 1671, 134, 1452, 1036, 382, 1001, 1548, 1387,
	1208, 1386, 393, 1154, 1189, 1807, 1439, 1261, 1390, 382,
	982, 813, 1388, 1391, 382, 1237, 1788, 1389, 981, 1520,
	981, 383, 1185, 1355, 383, 134, 383, 1188, 1180, 382,
	672, 133, 133, 133, 133, 133, 1672, 1673, 133, 133,
	849, 852, 133, 382, 1207, 1264, 1206, 854, 1647, 1260,
	134, 1364, 134, 1363, 983, 984, 1809, 1779, 1776, 134,
	133, 133, 133, 1792, 134, 1277, 1392, 1794, 1171, 1172,
	1800, 1630, 1353, 1238, 133, 1233, 1234, 133, 382, 96,
	1354, 1272, 1249, 1273, 1222, 1223, 1224, 1799, 1753, 1268,
	1751, 1271, 1248, 1238, 1267, 996, 459, 1443, 1438, 1259,
	1425, 1290, 965, 898, 1289, 697, 1465, 1294, 1464, 1418,
	1106, 1054, 764, 763, 773, 774, 766, 767, 768, 769,
	770, 771, 772, 765, 1107, 117, 775, 847, 129, 1167,
	1170, 1171, 1172, 1168, 1309, 1169, 1173, 1761, 1310, 848,
	108, 1760, 1708, 1270, 974, 1641, 1142, 1143, 1727, 1317,
	1318, 1135, 1257, 1000, 1175, 1324, 466, 467, 1327, 1328,
	469, 1362, 133, 1316, 1814, 1813, 1334, 1797, 1335, 1361,
	133, 1338, 1339, 1340, 1341, 1342, 1780, 1640, 1055, 1094,
	1095, 470, 1302, 1100, 1103, 1104, 78, 1639, 1523, 1366,
	1828, 1827, 133, 1326, 1323, 868, 861, 1828, 1754, 1660,
	1136, 465, 76, 133, 133, 133, 133, 133, 1116, 81,
	73, 1119, 1120, 1352, 463, 133, 1375, 1315, 1, 133,
	1331, 357, 133, 133, 1122, 1359, 133, 133, 133, 839,
	1371, 1395, 1396, 1368, 369, 1816, 1397, 1380, 841, 1411,
	1343, 382, 1351, 1599, 1679, 1258, 1435, 1241, 666, 1358,
	1202, 1199, 1414, 89, 636, 1215, 88, 1216, 1217, 1218,
	1219, 669, 1369, 1400, 1367, 729, 1263, 1402, 1718, 1381,
	1420, 1009, 1384, 1227, 1228, 1229, 1230, 1213, 1658, 1006,
	134, 1393, 1561, 1382, 1383, 1398, 1385, 1417, 382, 1758,
	906, 904, 1424, 1406, 1426, 1427, 1428, 1403, 905, 903,
	478, 1453, 1629, 908, 383, 1416, 907, 902, 1037, 379,
	382, 1174, 981, 894, 479, 862, 1574, 1210, 383, 383,
	1034, 478, 1043, 1044, 1045, 1046, 1466, 364, 1441, 382,
	716, 1431, 360, 783, 1360, 479, 1440, 858, 859, 481,
	1407, 480, 1459, 764, 763, 773, 774, 766, 767, 768,
	769, 770, 771, 772, 765, 382, 499, 775, 475, 476,
	481, 1077, 480, 492, 1485, 1674, 1482, 1483, 1089, 1534,
	95, 1798, 1088, 1777, 1467, 1463, 1775, 1096, 1097, 1750,
	1704, 1486, 1476, 1778, 1477, 1748, 1422, 1423, 1808, 1478,
	1475, 382, 1791, 1134, 134, 1506, 850, 1487, 1638, 1522,
	1330, 133, 812, 1484, 1108, 877, 1500, 1499, 402, 1047,
	417, 382, 414, 415, 1145, 1372, 757, 382, 382, 383,
	1485, 400, 134, 394, 134, 134, 1529, 383, 1532, 869,
	1166, 1535, 1164, 383, 1163, 881, 1545, 1541, 875, 1149,
	133, 1526, 1448, 958, 1251, 1584, 648, 474, 93, 1380,
	1105, 1538, 1550, 1738, 382, 1626, 382, 1537, 1547, 1311,
	1312, 473, 59, 1202, 1196, 1202, 1566, 1560, 36, 386,
	1624, 1551, 1802, 1553, 1784, 1554, 742, 482, 30, 29,
	1329, 1552, 28, 23, 1582, 22, 21, 133, 1559, 20,
	19, 25, 18, 133, 1564, 1565, 382, 17, 16, 107,
	103, 46, 43, 41, 109, 110, 44, 40, 687, 27,
	1600, 382, 382, 382, 1577, 133, 1578, 26, 15, 14,
	13, 12, 1579, 1580, 1239, 11, 10, 9, 5, 1592,
	4, 745, 1590, 24, 1591, 1596, 1595, 801, 2, 1608,
	0, 0, 0, 1610, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 1620, 1609, 0, 1614, 1605,
	1606, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1634, 134, 764, 763, 773, 774, 766, 767, 768, 769,
	770, 771, 772, 765, 134, 0, 775, 0, 1644, 1645,
	1642, 0, 1649, 0, 0, 0, 0, 383, 0, 0,
	382, 0, 0, 1651, 1650, 0, 0, 0, 0, 1202,
	0, 1414, 0, 0, 383, 1380, 0, 1656, 134, 0,
	0, 0, 0, 134, 0, 1657, 134, 0, 0, 134,
	0, 0, 0, 0, 0, 382, 0, 0, 0, 382,
	0, 134, 0, 134, 0, 0, 0, 0, 1681, 0,
	0, 0, 0, 1686, 0, 383, 383, 134, 383, 383,
	134, 383, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 382, 382, 133, 382, 1696, 1698, 1699,
	0, 1333, 0, 0, 0, 0, 1697, 382, 1637, 382,
	1684, 0, 0, 0, 1700, 382, 1692, 1532, 0, 0,
	1716, 1532, 0, 1711, 1713, 0, 1709, 1707, 0, 1356,
	1357, 852, 0, 0, 0, 0, 382, 0, 133, 0,
	1715, 1728, 1722, 382, 133, 0, 1717, 0, 1732, 0,
	0, 0, 383, 1723, 0, 1724, 0, 0, 1661, 0,
	1663, 0, 1734, 1735, 1736, 1737, 0, 1741, 0, 1742,
	1743, 1744, 0, 1745, 1746, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 1532, 383, 383, 1755, 0, 0,
	0, 382, 382, 0, 0, 0, 134, 0, 0, 1765,
	1681, 1202, 1685, 1766, 0, 1762, 0, 0, 383, 429,
	0, 0, 0, 1768, 0, 134, 0, 382, 383, 1772,
	0, 0, 134, 0, 134, 382, 1702, 1781, 0, 0,
	1786, 0, 134, 134, 0, 1787, 0, 0, 0, 383,
	1796, 1795, 383, 0, 0, 0, 0, 0, 0, 0,
	1380, 1806, 0, 383, 383, 0, 1623, 1611, 1612, 132,
	1613, 0, 377, 1615, 0, 1617, 0, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 842,
	1835, 1622, 486, 486, 0, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1621, 0, 383, 1508, 0, 0, 132, 383, 132, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 131,
	132, 0, 383, 0, 134, 134, 134, 134, 134, 385,
	0, 134, 134, 0, 0, 134, 383, 1524, 764, 763,
	773, 774, 766, 767, 768, 769, 770, 771, 772, 765,
	0, 0, 775, 134, 134, 134, 0, 428, 0, 0,
	0, 644, 0, 0, 0, 0, 0, 134, 0, 0,
	134, 383, 0, 764, 763, 773, 774, 766, 767, 768,
	769, 770, 771, 772, 765, 0, 679, 775, 680, 0,
	0, 0, 0, 0, 0, 688, 0, 1479, 0, 0,
	694, 0, 764, 763, 773, 774, 766, 767, 768, 769,
	770, 771, 772, 765, 0, 381, 775, 764, 763, 773,
	774, 766, 767, 768, 769, 770, 771, 772, 765, 0,
	0, 775, 764, 763, 773, 774, 766, 767, 768, 769,
	770, 771, 772, 765, 1308, 500, 775, 0, 640, 0,
	647, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 134, 764, 763, 773, 774, 766, 767,
	768, 769, 770, 771, 772, 765, 0, 0, 775, 0,
	1628, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 134, 134, 134,
	134, 0, 0, 0, 393, 0, 0, 0, 134, 0,
	0, 1652, 134, 0, 1653, 134, 134, 1655, 0, 134,
	134, 134, 0, 0, 0, 0, 33, 34, 35, 68,
	37, 38, 0, 0, 383, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 72, 0, 0, 0,
	0, 39, 65, 66, 0, 63, 0, 0, 0, 0,
	0, 64, 763, 773, 774, 766, 767, 768, 769, 770,
	771, 772, 765, 0, 0, 775, 0, 0, 0, 0,
	0, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	67, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	1706, 393, 0, 0, 0, 0, 696, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 42, 45, 48, 47,
	50, 0, 62, 0, 0, 0, 0, 0, 132, 0,
	132, 884, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 51, 71, 70, 0,
	0, 60, 61, 49, 383, 0, 0, 0, 0, 0,
	383, 383, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 53, 54, 134, 55, 56, 57, 58, 0, 0,
	0, 0, 741, 743, 0, 0, 0, 383, 0, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 871, 0,
	0, 882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 0, 0, 0, 0, 0, 134, 0, 0, 383,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 383, 383, 0, 134, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 865, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 895, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 987, 987, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 132,
	0, 0, 132, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 132, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	0, 0, 0, 132, 0, 0, 132, 0, 0, 0,
	961, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 995, 0, 0, 0, 0, 882,
	0, 0, 1002, 0, 0, 383, 383, 383, 134, 383,
	0, 0, 0, 0, 0, 0, 0, 1011, 0, 1013,
	383, 0, 383, 0, 0, 0, 0, 0, 383, 486,
	1005, 0, 0, 1027, 486, 486, 1030, 0, 486, 486,
	486, 0, 0, 0, 987, 0, 0, 0, 0, 383,
	0, 134, 0, 0, 0, 0, 383, 134, 0, 0,
	0, 640, 396, 486, 486, 486, 486, 486, 0, 0,
	0, 0, 1130, 0, 0, 986, 986, 0, 500, 431,
	32, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 0, 0, 0, 0, 0, 1005, 132, 0,
	132, 0, 0, 0, 383, 383, 0, 0, 132, 132,
	0, 0, 32, 0, 0, 0, 0, 0, 0, 500,
	500, 0, 500, 500, 0, 500, 500, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1153, 0, 0, 0, 0, 0, 0, 1157, 0,
	1160, 0, 0, 0, 0, 0, 0, 0, 0, 1179,
	0, 0, 0, 0, 0, 0, 1082, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 0,
	132, 132, 132, 132, 132, 0, 0, 132, 132, 1114,
	1115, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1291,
	1292, 132, 1146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 865, 132, 0, 500, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 640, 0,
	1278, 1279, 1280, 1281, 1282, 0, 0, 1286, 1287, 0,
	0, 1288, 0, 0, 486, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1293, 0, 0, 0, 486, 0, 0, 0, 0,
	0, 0, 0, 1295, 0, 0, 1297, 0, 0, 0,
	0, 132, 0, 647, 0, 0, 0, 0, 0, 1130,
	0, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	486, 132, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 987, 132, 132, 132, 132, 132, 0, 0, 0,
	500, 0, 0, 0, 1394, 0, 0, 0, 132, 0,
	0, 132, 132, 0, 0, 132, 1404, 1005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	738, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 32, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 784, 786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1401, 0, 0, 0, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1005, 0, 799, 0,
	0, 0, 804, 805, 806, 807, 808, 809, 810, 811,
	0, 814, 817, 817, 817, 823, 817, 817, 823, 817,
	831, 832, 833, 834, 835, 836, 837, 0, 0, 0,
	0, 0, 0, 486, 32, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 0, 0, 987, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 1462, 0, 0,
	1521, 0, 0, 0, 500, 0, 132, 0, 0, 0,
	0, 0, 132, 0, 0, 0, 500, 0, 987, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 1583, 0, 0, 0,
	738, 0, 1589, 0, 0, 0, 0, 0, 500, 987,
	0, 986, 0, 0, 1536, 1516, 0, 0, 0, 0,
	0, 0, 0, 0, 1604, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 738, 738, 0, 738, 738, 0, 738, 738, 0,
	0, 500, 0, 500, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 1061, 1062, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 0, 1130, 0, 0, 0, 1601, 1602,
	1603, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 1178, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 987, 0, 0, 1729, 0, 0,
	0, 0, 1678, 1733, 0, 0, 500, 923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1462,
	1462, 1462, 0, 1701, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1712, 0, 1714, 0, 0, 0,
	0, 0, 1462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1462, 0, 0, 0, 0, 0, 0,
	1462, 0, 738, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 1304, 1305, 0, 0, 0, 0, 500, 500,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 924, 0, 0, 0, 0,
	0, 0, 986, 0, 1782, 0, 0, 0, 0, 0,
	0, 0, 1462, 0, 0, 0, 0, 1313, 0, 0,
	464, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 937, 940, 941, 942, 943,
	944, 945, 0, 946, 947, 948, 949, 950, 925, 926,
	927, 928, 909, 910, 938, 0, 912, 1350, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 929, 930,
	931, 932, 933, 934, 935, 936, 0, 0, 0, 0,
	0, 878, 0, 0, 0, 0, 0, 0, 1376, 1377,
	0, 0, 878, 878, 878, 878, 878, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 878, 0, 0, 0, 878, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 738, 0,
	1480, 1481, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 1502, 0, 1503, 1504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1510,
	1511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1533, 0, 32, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 878,
	0, 1563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1625, 0, 0, 0, 0,
	0, 0, 1631, 1632, 1633, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1687, 1688, 1689, 1690, 1691, 0,
	0, 0, 1694, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 32, 0, 1533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 620, 607, 0, 0, 559, 623, 530, 548, 632,
	550, 553, 591, 512, 572, 245, 545, 32, 534, 508,
	541, 509, 532, 561, 174, 565, 529, 609, 575, 622,
	209, 0, 535, 257, 593, 288, 164, 217, 215, 309,
	179, 175, 173, 163, 196, 222, 256, 305, 250, 629,
	212, 582, 0, 297, 231, 0, 0, 0, 563, 612,
	570, 603, 558, 592, 519, 581, 624, 546, 589, 625,
	200, 162, 140, 242, 298, 181, 0, 0, 0, 122,
	123, 124, 0, 1203, 1204, 0, 0, 0, 0, 0,
	158, 0, 586, 619, 543, 588, 590, 635, 507, 583,
	0, 510, 513, 631, 615, 538, 539, 1415, 0, 0,
	0, 0, 0, 0, 562, 571, 600, 556, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 580, 0,
	0, 0, 515, 511, 0, 0, 0, 0, 560, 0,
	0, 0, 518, 0, 537, 601, 0, 505, 187, 0,
	605, 614, 557, 333, 618, 555, 554, 621, 596, 516,
	611, 549, 208, 514, 205, 136, 149, 0, 547, 241,
	275, 279, 610, 533, 542, 165, 540, 277, 254, 322,
	579, 258, 276, 213, 311, 269, 321, 334, 335, 171,
	235, 328, 306, 331, 343, 150, 168, 248, 302, 325,
	294, 230, 308, 204, 293, 186, 139, 142, 304, 319,
	159, 287, 0, 0, 0, 144, 317, 301, 228, 201,
	202, 143, 0, 273, 172, 184, 167, 244, 314, 315,
	166, 344, 151, 330, 146, 152, 329, 237, 310, 318,
	229, 221, 145, 316, 227, 220, 207, 178, 192, 267,
	216, 268, 193, 233, 232, 234, 0, 141, 0, 299,
	326, 345, 156, 528, 606, 307, 339, 342, 0, 270,
	157, 185, 177, 266, 183, 210, 338, 340, 341, 155,
	264, 190, 236, 153, 195, 295, 206, 214, 598, 634,
	253, 278, 160, 324, 296, 523, 527, 521, 522, 573,
	574, 524, 626, 627, 628, 602, 517, 0, 525, 526,
	0, 608, 616, 617, 578, 135, 147, 211, 630, 271,
	182, 327, 506, 520, 170, 531, 0, 0, 544, 551,
	552, 564, 566, 567, 568, 569, 577, 584, 585, 587,
	594, 595, 597, 599, 604, 613, 633, 137, 138, 148,
	154, 161, 169, 176, 180, 188, 191, 194, 197, 198,
	199, 203, 219, 223, 224, 225, 226, 238, 239, 240,
	243, 246, 247, 249, 251, 252, 255, 259, 260, 261,
	262, 263, 265, 272, 274, 280, 281, 282, 283, 284,
	285, 286, 289, 290, 291, 292, 300, 303, 312, 313,
	323, 332, 336, 189, 320, 337, 0, 218, 576, 620,
	607, 0, 0, 559, 623, 530, 548, 632, 550, 553,
	591, 512, 572, 245, 545, 0, 534, 508, 541, 509,
	532, 561, 174, 565, 529, 609, 575, 622, 209, 0,
	535, 257, 593, 288, 164, 217, 215, 309, 179, 175,
	173, 163, 196, 222, 256, 305, 250, 629, 212, 582,
	0, 297, 231, 0, 0, 0, 563, 612, 570, 603,
	558, 592, 519, 581, 624, 546, 589, 625, 200, 162,
	140, 242, 298, 181, 0, 0, 0, 122, 123, 124,
	0, 1203, 1204, 0, 0, 0, 0, 0, 158, 0,
	586, 619, 543, 588, 590, 635, 507, 583, 0, 510,
	513, 631, 615, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 562, 571, 600, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 580, 0, 0, 0,
	515, 511, 0, 0, 0, 0, 560, 0, 0, 0,
	518, 0, 537, 601, 0, 505, 187, 0, 605, 614,
	557, 333, 618, 555, 554, 621, 596, 516, 611, 549,
	208, 514, 205, 136, 149, 0, 547, 241, 275, 279,
	610, 533, 542, 165, 540, 277, 254, 322, 579, 258,
	276, 213, 311, 269, 321, 334, 335, 171, 235, 328,
	306, 331, 343, 150, 168, 248, 302, 325, 294, 230,
	308, 204, 293, 186, 139, 142, 304, 319, 159, 287,
	0, 0, 0, 144, 317, 301, 228, 201, 202, 143,
	0, 273, 172, 184, 167, 244, 314, 315, 166, 344,
	151, 330, 146, 152, 329, 237, 310, 318, 229, 221,
	145, 316, 227, 220, 207, 178, 192, 267, 216, 268,
	193, 233, 232, 234, 0, 141, 0, 299, 326, 345,
	156, 528, 606, 307, 339, 342, 0, 270, 157, 185,
	177, 266, 183, 210, 338, 340, 341, 155, 264, 190,
	236, 153, 195, 295, 206, 214, 598, 634, 253, 278,
	160, 324, 296, 523, 527, 521, 522, 573, 574, 524,
	626, 627, 628, 602, 517, 0, 525, 526, 0, 608,
	616, 617, 578, 135, 147, 211, 630, 271, 182, 327,
	506, 520, 170, 531, 0, 0, 544, 551, 552, 564,
	566, 567, 568, 569, 577, 584, 585, 587, 594, 595,
	597, 599, 604, 613, 633, 137, 138, 148, 154, 161,
	169, 176, 180, 188, 191, 194, 197, 198, 199, 203,
	219, 223, 224, 225, 226, 238, 239, 240, 243, 246,
	247, 249, 251, 252, 255, 259, 260, 261, 262, 263,
	265, 272, 274, 280, 281, 282, 283, 284, 285, 286,
	289, 290, 291, 292, 300, 303, 312, 313, 323, 332,
	336, 189, 320, 337, 0, 218, 576, 620, 607, 0,
	0, 559, 623, 530, 548, 632, 550, 553, 591, 512,
	572, 245, 545, 0, 534, 508, 541, 509, 532, 561,
	174, 565, 529, 609, 575, 622, 209, 0, 535, 257,
	593, 288, 164, 217, 215, 309, 179, 175, 173, 163,
	196, 222, 256, 305, 250, 629, 212, 582, 0, 297,
	231, 0, 0, 0, 563, 612, 570, 603, 558, 592,
	519, 581, 624, 546, 589, 625, 200, 162, 140, 242,
	298, 181, 0, 0, 0, 122, 123, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 586, 619,
	543, 588, 590, 635, 507, 583, 0, 510, 513, 631,
	615, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	562, 571, 600, 556, 0, 0, 0, 0, 0, 0,
	1525, 0, 536, 0, 580, 0, 0, 0, 515, 511,
	0, 0, 0, 0, 560, 0, 0, 0, 518, 0,
	537, 601, 0, 505, 187, 0, 605, 614, 557, 333,
	618, 555, 554, 621, 596, 516, 611, 549, 208, 514,
	205, 136, 149, 0, 547, 241, 275, 279, 610, 533,
	542, 165, 540, 277, 254, 322, 579, 258, 276, 213,
	311, 269, 321, 334, 335, 171, 235, 328, 306, 331,
	343, 150, 168, 248, 302, 325, 294, 230, 308, 204,
	293, 186, 139, 142, 304, 319, 159, 287, 0, 0,
	0, 144, 317, 301, 228, 201, 202, 143, 0, 273,
	172, 184, 167, 244, 314, 315, 166, 344, 151, 330,
	146, 152, 329, 237, 310, 318, 229, 221, 145, 316,
	227, 220, 207, 178, 192, 267, 216, 268, 193, 233,
	232, 234, 0, 141, 0, 299, 326, 345, 156, 528,
	606, 307, 339, 342, 0, 270, 157, 185, 177, 266,
	183, 210, 338, 340, 341, 155, 264, 190, 236, 153,
	195, 295, 206, 214, 598, 634, 253, 278, 160, 324,
	296, 523, 527, 521, 522, 573, 574, 524, 626, 627,
	628, 602, 517, 0, 525, 526, 0, 608, 616, 617,
	578, 135, 147, 211, 630, 271, 182, 327, 506, 520,
	170, 531, 0, 0, 544, 551, 552, 564, 566, 567,
	568, 569, 577, 584, 585, 587, 594, 595, 597, 599,
	604, 613, 633, 137, 138, 148, 154, 161, 169, 176,
	180, 188, 191, 194, 197, 198, 199, 203, 219, 223,
	224, 225, 226, 238, 239, 240, 243, 246, 247, 249,
	251, 252, 255, 259, 260, 261, 262, 263, 265, 272,
	274, 280, 281, 282, 283, 284, 285, 286, 289, 290,
	291, 292, 300, 303, 312, 313, 323, 332, 336, 189,
	320, 337, 0, 218, 576, 620, 607, 0, 0, 559,
	623, 530, 548, 632, 550, 553, 591, 512, 572, 245,
	545, 0, 534, 508, 541, 509, 532, 561, 174, 565,
	529, 609, 575, 622, 209, 0, 535, 257, 593, 288,
	164, 217, 215, 309, 179, 175, 173, 163, 196, 222,
	256, 305, 250, 629, 212, 582, 0, 297, 231, 0,
	0, 0, 563, 612, 570, 603, 558, 592, 519, 581,
	624, 546, 589, 625, 200, 162, 140, 242, 298, 181,
	67, 0, 0, 122, 123, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 586, 619, 543, 588,
	590, 635, 507, 583, 0, 510, 513, 631, 615, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 562, 571,
	600, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 0, 580, 0, 0, 0, 515, 511, 0, 0,
	0, 0, 560, 0, 0, 0, 518, 0, 537, 601,
	0, 505, 187, 0, 605, 614, 557, 333, 618, 555,
	554, 621, 596, 516, 611, 549, 208, 514, 205, 136,
	149, 0, 547, 241, 275, 279, 610, 533, 542, 165,
	540, 277, 254, 322, 579, 258, 276, 213, 311, 269,
	321, 334, 335, 171, 235, 328, 306, 331, 343, 150,
	168, 248, 302, 325, 294, 230, 308, 204, 293, 186,
	139, 142, 304, 319, 159, 287, 0, 0, 0, 144,
	317, 301, 228, 201, 202, 143, 0, 273, 172, 184,
	167, 244, 314, 315, 166, 344, 151, 330, 146, 152,
	329, 237, 310, 318, 229, 221, 145, 316, 227, 220,
	207, 178, 192, 267, 216, 268, 193, 233, 232, 234,
	0, 141, 0, 299, 326, 345, 156, 528, 606, 307,
	339, 342, 0, 270, 157, 185, 177, 266, 183, 210,
	338, 340, 341, 155, 264, 190, 236, 153, 195, 295,
	206, 214, 598, 634, 253, 278, 160, 324, 296, 523,
	527, 521, 522, 573, 574, 524, 626, 627, 628, 602,
	517, 0, 525, 526, 0, 608, 616, 617, 578, 135,
	147, 211, 630, 271, 182, 327, 506, 520, 170, 531,
	0, 0, 544, 551, 552, 564, 566, 567, 568, 569,
	577, 584, 585, 587, 594, 595, 597, 599, 604, 613,
	633, 137, 138, 148, 154, 161, 169, 176, 180, 188,
	191, 194, 197, 198, 199, 203, 219, 223, 224, 225,
	226, 238, 239, 240, 243, 246, 247, 249, 251, 252,
	255, 259, 260, 261, 262, 263, 265, 272, 274, 280,
	281, 282, 283, 284, 285, 286, 289, 290, 291, 292,
	300, 303, 312, 313, 323, 332, 336, 189, 320, 337,
	0, 218, 576, 620, 607, 0, 0, 559, 623, 530,
	548, 632, 550, 553, 591, 512, 572, 245, 545, 0,
	534, 508, 541, 509, 532, 561, 174, 565, 529, 609,
	575, 622, 209, 0, 535, 257, 593, 288, 164, 217,
	215, 309, 179, 175, 173, 163, 196, 222, 256, 305,
	250, 629, 212, 582, 0, 297, 231, 0, 0, 0,
	563, 612, 570, 603, 558, 592, 519, 581, 624, 546,
	589, 625, 200, 162, 140, 242, 298, 181, 0, 0,
	0, 122, 123, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 586, 619, 543, 588, 590, 635,
	507, 583, 0, 510, 513, 631, 615, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 562, 571, 600, 556,
	0, 0, 0, 0, 0, 0, 1405, 0, 536, 0,
	580, 0, 0, 0, 515, 511, 0, 0, 0, 0,
	560, 0, 0, 0, 518, 0, 537, 601, 0, 505,
	187, 0, 605, 614, 557, 333, 618, 555, 554, 621,
	596, 516, 611, 549, 208, 514, 205, 136, 149, 0,
	547, 241, 275, 279, 610, 533, 542, 165, 540, 277,
	254, 322, 579, 258, 276, 213, 311, 269, 321, 334,
	335, 171, 235, 328, 306, 331, 343, 150, 168, 248,
	302, 325, 294, 230, 308, 204, 293, 186, 139, 142,
	304, 319, 159, 287, 0, 0, 0, 144, 317, 301,
	228, 201, 202, 143, 0, 273, 172, 184, 167, 244,
	314, 315, 166, 344, 151, 330, 146, 152, 329, 237,
	310, 318, 229, 221, 145, 316, 227, 220, 207, 178,
	192, 267, 216, 268, 193, 233, 232, 234, 0, 141,
	0, 299, 326, 345, 156, 528, 606, 307, 339, 342,
	0, 270, 157, 185, 177, 266, 183, 210, 338, 340,
	341, 155, 264, 190, 236, 153, 195, 295, 206, 214,
	598, 634, 253, 278, 160, 324, 296, 523, 527, 521,
	522, 573, 574, 524, 626, 627, 628, 602, 517, 0,
	525, 526, 0, 608, 616, 617, 578, 135, 147, 211,
	630, 271, 182, 327, 506, 520, 170, 531, 0, 0,
	544, 551, 552, 564, 566, 567, 568, 569, 577, 584,
	585, 587, 594, 595, 597, 599, 604, 613, 633, 137,
	138, 148, 154, 161, 169, 176, 180, 188, 191, 194,
	197, 198, 199, 203, 219, 223, 224, 225, 226, 238,
	239, 240, 243, 246, 247, 249, 251, 252, 255, 259,
	260, 261, 262, 263, 265, 272, 274, 280, 281, 282,
	283, 284, 285, 286, 289, 290, 291, 292, 300, 303,
	312, 313, 323, 332, 336, 189, 320, 337, 0, 218,
	576, 620, 607, 0, 0, 559, 623, 530, 548, 632,
	550, 553, 591, 512, 572, 245, 545, 0, 534, 508,
	541, 509, 532, 561, 174, 565, 529, 609, 575, 622,
	209, 0, 535, 257, 593, 288, 164, 217, 215, 309,
	179, 175, 173, 163, 196, 222, 256, 305, 250, 629,
	212, 582, 0, 297, 231, 0, 0, 0, 563, 612,
	570, 603, 558, 592, 519, 581, 624, 546, 589, 625,
	200, 162, 140, 242, 298, 181, 0, 0, 0, 122,
	123, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	158, 0, 586, 619, 543, 588, 590, 635, 507, 583,
	0, 510, 513, 631, 615, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 562, 571, 600, 556, 0, 0,
	0, 0, 0, 0, 1155, 0, 536, 0, 580, 0,
	0, 0, 515, 511, 0, 0, 0, 0, 560, 0,
	0, 0, 518, 0, 537, 601, 0, 505, 187, 0,
	605, 614, 557, 333, 618, 555, 554, 621, 596, 516,
	611, 549, 208, 514, 205, 136, 149, 0, 547, 241,
	275, 279, 610, 533, 542, 165, 540, 277, 254, 322,
	579, 258, 276, 213, 311, 269, 321, 334, 335, 171,
	235, 328, 306, 331, 343, 150, 168, 248, 302, 325,
	294, 230, 308, 204, 293, 186, 139, 142, 304, 319,
	159, 287, 0, 0, 0, 144, 317, 301, 228, 201,
	202, 143, 0, 273, 172, 184, 167, 244, 314, 315,
	166, 344, 151, 330, 146, 152, 329, 237, 310, 318,
	229, 221, 145, 316, 227, 220, 207, 178, 192, 267,
	216, 268, 193, 233, 232, 234, 0, 141, 0, 299,
	326, 345, 156, 528, 606, 307, 339, 342, 0, 270,
	157, 185, 177, 266, 183, 210, 338, 340, 341, 155,
	264, 190, 236, 153, 195, 295, 206, 214, 598, 634,
	253, 278, 160, 324, 296, 523, 527, 521, 522, 573,
	574, 524, 626, 627, 628, 602, 517, 0, 525, 526,
	0, 608, 616, 617, 578, 135, 147, 211, 630, 271,
	182, 327, 506, 520, 170, 531, 0, 0, 544, 551,
	552, 564, 566, 567, 568, 569, 577, 584, 585, 587,
	594, 595, 597, 599, 604, 613, 633, 137, 138, 148,
	154, 161, 169, 176, 180, 188, 191, 194, 197, 198,
	199, 203, 219, 223, 224, 225, 226, 238, 239, 240,
	243, 246, 247, 249, 251, 252, 255, 259, 260, 261,
	262, 263, 265, 272, 274, 280, 281, 282, 283, 284,
	285, 286, 289, 290, 291, 292, 300, 303, 312, 313,
	323, 332, 336, 189, 320, 337, 0, 218, 576, 620,
	607, 0, 0, 559, 623, 530, 548, 632, 550, 553,
	591, 512, 572, 245, 545, 0, 534, 508, 541, 509,
	532, 561, 174, 565, 529, 609, 575, 622, 209, 0,
	535, 257, 593, 288, 164, 217, 215, 309, 179, 175,
	173, 163, 196, 222, 256, 305, 250, 629, 212, 582,
	0, 297, 231, 0, 0, 0, 563, 612, 570, 603,
	558, 592, 519, 581, 624, 546, 589, 625, 200, 162,
	140, 242, 298, 181, 0, 0, 0, 122, 123, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	586, 619, 543, 588, 590, 635, 507, 583, 0, 510,
	513, 631, 615, 538, 539, 0, 0, 0, 0, 0,
	0, 0, 562, 571, 600, 556, 0, 0, 0, 0,
	0, 0, 0, 0, 536, 0, 580, 0, 0, 0,
	515, 511, 0, 0, 0, 0, 560, 0, 0, 0,
	518, 0, 537, 601, 0, 505, 187, 0, 605, 614,
	557, 333, 618, 555, 554, 621, 596, 516, 611, 549,
	208, 514, 205, 136, 149, 0, 547, 241, 275, 279,
	610, 533, 542, 165, 540, 277, 254, 322, 579, 258,
	276, 213, 311, 269, 321, 334, 335, 171, 235, 328,
	306, 331, 343, 150, 168, 248, 302, 325, 294, 230,
	308, 204, 293, 186, 139, 142, 304, 319, 159, 287,
	0, 0, 0, 144, 317, 301, 228, 201, 202, 143,
	0, 273, 172, 184, 167, 244, 314, 315, 166, 344,
	151, 330, 146, 152, 329, 237, 310, 318, 229, 221,
	145, 316, 227, 220, 207, 178, 192, 267, 216, 268,
	193, 233, 232, 234, 0, 141, 0, 299, 326, 345,
	156, 528, 606, 307, 339, 342, 0, 270, 157, 185,
	177, 266, 183, 210, 338, 340, 341, 155, 264, 190,
	236, 153, 195, 295, 206, 214, 598, 634, 253, 278,
	160, 324, 296, 523, 527, 521, 522, 573, 574, 524,
	626, 627, 628, 602, 517, 0, 525, 526, 0, 608,
	616, 617, 578, 135, 147, 211, 630, 271, 182, 327,
	506, 520, 170, 531, 0, 0, 544, 551, 552, 564,
	566, 567, 568, 569, 577, 584, 585, 587, 594, 595,
	597, 599, 604, 613, 633, 137, 138, 148, 154, 161,
	169, 176, 180, 188, 191, 194, 197, 198, 199, 203,
	219, 223, 224, 225, 226, 238, 239, 240, 243, 246,
	247, 249, 251, 252, 255, 259, 260, 261, 262, 263,
	265, 272, 274, 280, 281, 282, 283, 284, 285, 286,
	289, 290, 291, 292, 300, 303, 312, 313, 323, 332,
	336, 189, 320, 337, 0, 218, 576, 620, 607, 0,
	0, 559, 623, 530, 548, 632, 550, 553, 591, 512,
	572, 245, 545, 0, 534, 508, 541, 509, 532, 561,
	174, 565, 529, 609, 575, 622, 209, 0, 535, 257,
	593, 288, 164, 217, 215, 309, 179, 175, 173, 163,
	196, 222, 256, 305, 250, 629, 212, 582, 0, 297,
	231, 0, 0, 0, 563, 612, 570, 603, 558, 592,
	519, 581, 624, 546, 589, 625, 200, 162, 140, 242,
	298, 181, 0, 0, 0, 122, 123, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 586, 619,
	543, 588, 590, 635, 507, 583, 0, 510, 513, 631,
	615, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	562, 571, 600, 556, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 580, 0, 0, 0, 515, 511,
	0, 0, 0, 0, 560, 0, 0, 0, 518, 0,
	537, 601, 0, 505, 187, 0, 605, 614, 557, 333,
	618, 555, 554, 621, 596, 516, 611, 549, 208, 514,
	205, 136, 149, 0, 547, 241, 275, 279, 610, 533,
	542, 165, 540, 277, 254, 322, 579, 258, 276, 213,
	311, 269, 321, 334, 335, 171, 235, 328, 306, 331,
	343, 150, 168, 248, 302, 325, 294, 230, 308, 204,
	293, 186, 139, 142, 304, 319, 159, 287, 0, 0,
	0, 144, 317, 301, 228, 201, 202, 143, 0, 273,
	172, 184, 167, 244, 314, 315, 166, 344, 151, 330,
	146, 503, 329, 237, 310, 318, 229, 221, 145, 316,
	227, 220, 207, 178, 192, 267, 216, 268, 193, 233,
	232, 234, 0, 141, 0, 299, 326, 345, 156, 528,
	606, 307, 339, 342, 0, 270, 157, 185, 177, 266,
	183, 210, 338, 340, 341, 155, 264, 190, 504, 502,
	497, 496, 206, 214, 598, 634, 253, 278, 160, 324,
	296, 523, 527, 521, 522, 573, 574, 524, 626, 627,
	628, 602, 517, 0, 525, 526, 0, 608, 616, 617,
	578, 135, 147, 211, 630, 271, 182, 327, 506, 520,
	170, 531, 0, 0, 544, 551, 552, 564, 566, 567,
	568, 569, 577, 584, 585, 587, 594, 595, 597, 599,
	604, 613, 633, 137, 138, 148, 154, 161, 169, 176,
	180, 188, 191, 194, 197, 198, 199, 203, 219, 223,
	224, 225, 226, 238, 239, 240, 243, 246, 247, 249,
	251, 252, 255, 259, 260, 261, 262, 263, 265, 272,
	274, 280, 281, 282, 283, 284, 285, 286, 289, 290,
	291, 292, 300, 303, 312, 313, 323, 332, 336, 189,
	320, 337, 0, 218, 576, 620, 607, 0, 0, 559,
	623, 530, 548, 632, 550, 553, 591, 512, 572, 245,
	545, 0, 534, 508, 541, 509, 532, 561, 174, 565,
	529, 609, 575, 622, 209, 0, 535, 257, 593, 288,
	164, 217, 215, 309, 179, 175, 173, 163, 196, 222,
	256, 305, 250, 629, 212, 582, 0, 297, 231, 0,
	0, 0, 563, 612, 570, 603, 558, 592, 519, 581,
	624, 546, 589, 625, 200, 162, 140, 242, 298, 181,
	0, 0, 0, 122, 123, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 586, 619, 543, 588,
	590, 635, 507, 583, 0, 510, 513, 631, 615, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 562, 571,
	600, 556, 0, 0, 0, 0, 0, 0, 0, 0,
	536, 0, 580, 0, 0, 0, 515, 511, 0, 0,
	0, 0, 560, 0, 0, 0, 518, 0, 537, 601,
	0, 505, 187, 0, 605, 614, 557, 333, 618, 555,
	554, 621, 596, 516, 611, 549, 208, 514, 205, 136,
	149, 0, 547, 241, 275, 279, 610, 533, 542, 165,
	540, 277, 254, 322, 579, 258, 276, 213, 311, 269,
	321, 334, 335, 171, 235, 328, 306, 331, 343, 150,
	168, 248, 302, 325, 294, 230, 308, 204, 293, 186,
	139, 142, 304, 886, 159, 287, 0, 0, 0, 144,
	317, 301, 228, 201, 202, 143, 0, 273, 172, 184,
	167, 244, 314, 315, 166, 344, 151, 330, 146, 503,
	329, 237, 310, 318, 229, 221, 145, 316, 227, 220,
	207, 178, 192, 267, 216, 268, 193, 233, 232, 234,
	0, 141, 0, 299, 326, 345, 156, 528, 606, 307,
	339, 342, 0, 270, 157, 185, 177, 266, 183, 210,
	338, 340, 341, 155, 264, 190, 504, 502, 497, 496,
	206, 214, 598, 634, 253, 278, 160, 324, 296, 523,
	527, 521, 522, 573, 574, 524, 626, 627, 628, 602,
	517, 0, 525, 526, 0, 608, 616, 617, 578, 135,
	147, 211, 630, 271, 182, 327, 506, 520, 170, 531,
	0, 0, 544, 551, 552, 564, 566, 567, 568, 569,
	577, 584, 585, 587, 594, 595, 597, 599, 604, 613,
	633, 137, 138, 148, 154, 161, 169, 176, 180, 188,
	191, 194, 197, 198, 199, 203, 219, 223, 224, 225,
	226, 238, 239, 240, 243, 246, 247, 249, 251, 252,
	255, 259, 260, 261, 262, 263, 265, 272, 274, 280,
	281, 282, 283, 284, 285, 286, 289, 290, 291, 292,
	300, 303, 312, 313, 323, 332, 336, 189, 320, 337,
	0, 218, 576, 620, 607, 0, 0, 559, 623, 530,
	548, 632, 550, 553, 591, 512, 572, 245, 545, 0,
	534, 508, 541, 509, 532, 561, 174, 565, 529, 609,
	575, 622, 209, 0, 535, 257, 593, 288, 164, 217,
	215, 309, 179, 175, 173, 163, 196, 222, 256, 305,
	250, 629, 212, 582, 0, 297, 231, 0, 0, 0,
	563, 612, 570, 603, 558, 592, 519, 581, 624, 546,
	589, 625, 200, 162, 140, 242, 298, 181, 0, 0,
	0, 122, 123, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 586, 619, 543, 588, 590, 635,
	507, 583, 0, 510, 513, 631, 615, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 562, 571, 600, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 536, 0,
	580, 0, 0, 0, 515, 511, 0, 0, 0, 0,
	560, 0, 0, 0, 518, 0, 537, 601, 0, 505,
	187, 0, 605, 614, 557, 333, 618, 555, 554, 621,
	596, 516, 611, 549, 208, 514, 205, 136, 149, 0,
	547, 241, 275, 279, 610, 533, 542, 165, 540, 277,
	254, 322, 579, 258, 276, 213, 311, 269, 321, 334,
	335, 171, 235, 328, 306, 331, 343, 150, 168, 248,
	302, 325, 294, 230, 308, 204, 293, 186, 139, 142,
	304, 494, 159, 287, 0, 0, 0, 144, 317, 301,
	228, 201, 202, 143, 0, 273, 172, 184, 167, 244,
	314, 315, 166, 344, 151, 330, 146, 503, 329, 237,
	310, 318, 229, 221, 145, 316, 227, 220, 207, 178,
	192, 267, 216, 268, 193, 233, 232, 234, 0, 141,
	0, 299, 326, 345, 156, 528, 606, 307, 339, 342,
	0, 270, 157, 185, 177, 266, 183, 210, 338, 340,
	341, 155, 264, 190, 504, 502, 497, 496, 206, 214,
	598, 634, 253, 278, 160, 324, 296, 523, 527, 521,
	522, 573, 574, 524, 626, 627, 628, 602, 517, 0,
	525, 526, 0, 608, 616, 617, 578, 135, 147, 211,
	630, 271, 182, 327, 506, 520, 170, 531, 0, 0,
	544, 551, 552, 564, 566, 567, 568, 569, 577, 584,
	585, 587, 594, 595, 597, 599, 604, 613, 633, 137,
	138, 148, 154, 161, 169, 176, 180, 188, 191, 194,
	197, 198, 199, 203, 219, 223, 224, 225, 226, 238,
	239, 240, 243, 246, 247, 249, 251, 252, 255, 259,
	260, 261, 262, 263, 265, 272, 274, 280, 281, 282,
	283, 284, 285, 286, 289, 290, 291, 292, 300, 303,
	312, 313, 323, 332, 336, 189, 320, 337, 245, 218,
	576, 1084, 0, 398, 0, 0, 0, 174, 0, 397,
	0, 0, 0, 209, 0, 1085, 257, 0, 288, 164,
	217, 215, 309, 179, 175, 173, 163, 196, 222, 256,
	305, 250, 441, 212, 0, 0, 297, 231, 0, 0,
	0, 0, 0, 432, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 162, 140, 242, 298, 181, 67,
	0, 0, 122, 123, 124, 419, 418, 421, 422, 423,
	424, 0, 0, 158, 420, 425, 426, 427, 0, 0,
	0, 0, 395, 412, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 484, 0, 0,
	0, 455, 0, 411, 0, 0, 404, 405, 407, 406,
	408, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 454, 0, 0, 333, 0, 0, 452,
	0, 0, 0, 0, 0, 208, 0, 205, 136, 149,
	0, 0, 241, 275, 279, 0, 0, 0, 165, 0,
	277, 254, 322, 0, 258, 276, 213, 311, 269, 321,
	334, 335, 171, 235, 328, 306, 331, 343, 150, 168,
	248, 302, 325, 294, 230, 308, 204, 293, 186, 139,
	142, 304, 319, 159, 287, 0, 0, 0, 144, 317,
	301, 228, 201, 202, 143, 0, 273, 172, 184, 167,
	244, 314, 315, 166, 344, 151, 330, 146, 152, 329,
	237, 310, 318, 229, 221, 145, 316, 227, 220, 207,
	178, 192, 267, 216, 268, 193, 233, 232, 234, 0,
	141, 0, 299, 326, 345, 156, 0, 0, 307, 339,
	342, 0, 270, 157, 185, 177, 266, 183, 210, 338,
	340, 341, 155, 264, 190, 236, 153, 195, 295, 206,
	214, 0, 0, 253, 278, 160, 324, 296, 442, 453,
	448, 449, 446, 447, 0, 445, 444, 443, 456, 434,
	435, 436, 437, 439, 0, 450, 451, 438, 135, 147,
	211, 0, 271, 182, 327, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 138, 148, 154, 161, 169, 176, 180, 188, 191,
	194, 197, 198, 199, 203, 219, 223, 224, 225, 226,
	238, 239, 240, 243, 246, 247, 249, 251, 252, 255,
	259, 260, 261, 262, 263, 265, 272, 274, 280, 281,
	282, 283, 284, 285, 286, 289, 290, 291, 292, 300,
	303, 312, 313, 323, 332, 336, 189, 320, 337, 245,
	218, 0, 0, 0, 398, 0, 0, 0, 174, 0,
	397, 0, 0, 0, 209, 0, 0, 257, 0, 288,
	164, 217, 215, 309, 179, 175, 173, 163, 196, 222,
	256, 305, 250, 441, 212, 0, 0, 297, 231, 0,
	0, 0, 0, 0, 432, 433, 0, 0, 0, 0,
	0, 0, 1194, 0, 200, 162, 140, 242, 298, 181,
	67, 0, 0, 122, 123, 124, 419, 418, 421, 422,
	423, 424, 0, 0, 158, 420, 425, 426, 427, 1195,
	0, 0, 0, 395, 412, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 0, 455, 0, 411, 0, 0, 404, 405, 407,
	406, 408, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 454, 0, 0, 333, 0, 0,
	452, 0, 0, 0, 0, 0, 208, 0, 205, 136,
	149, 0, 0, 241, 275, 279, 0, 0, 0, 165,
	0, 277, 254, 322, 0, 258, 276, 213, 311, 269,
	321, 334, 335, 171, 235, 328, 306, 331, 343, 150,
	168, 248, 302, 325, 294, 230, 308, 204, 293, 186,
	139, 142, 304, 319, 159, 287, 0, 0, 0, 144,
	317, 301, 228, 201, 202, 143, 0, 273, 172, 184,
	167, 244, 314, 315, 166, 344, 151, 330, 146, 152,
	329, 237, 310, 318, 229, 221, 145, 316, 227, 220,
	207, 178, 192, 267, 216, 268, 193, 233, 232, 234,
	0, 141, 0, 299, 326, 345, 156, 0, 0, 307,
	339, 342, 0, 270, 157, 185, 177, 266, 183, 210,
	338, 340, 341, 155, 264, 190, 236, 153, 195, 295,
	206, 214, 0, 0, 253, 278, 160, 324, 296, 442,
	453, 448, 449, 446, 447, 0, 445, 444, 443, 456,
	434, 435, 436, 437, 439, 0, 450, 451, 438, 135,
	147, 211, 0, 271, 182, 327, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 138, 148, 154, 161, 169, 176, 180, 188,
	191, 194, 197, 198, 199, 203, 219, 223, 224, 225,
	226, 238, 239, 240, 243, 246, 247, 249, 251, 252,
	255, 259, 260, 261, 262, 263, 265, 272, 274, 280,
	281, 282, 283, 284, 285, 286, 289, 290, 291, 292,
	300, 303, 312, 313, 323, 332, 336, 189, 320, 337,
	245, 218, 0, 0, 0, 398, 0, 0, 0, 174,
	0, 397, 0, 0, 0, 209, 0, 0, 257, 0,
	288, 164, 217, 215, 309, 179, 175, 173, 163, 196,
	222, 256, 305, 250, 441, 212, 0, 0, 297, 231,
	0, 0, 0, 0, 0, 432, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 162, 140, 242, 298,
	181, 67, 0, 472, 122, 123, 124, 419, 418, 421,
	422, 423, 424, 0, 0, 158, 420, 425, 426, 427,
	0, 0, 0, 0, 395, 412, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 0,
	0, 0, 0, 455, 0, 411, 0, 0, 404, 405,
	407, 406, 408, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 454, 0, 0, 333, 0,
	0, 452, 0, 0, 0, 0, 0, 208, 0, 205,
	136, 149, 0, 0, 241, 275, 279, 0, 0, 0,
	165, 0, 277, 254, 322, 0, 258, 276, 213, 311,
	269, 321, 334, 335, 171, 235, 328, 306, 331, 343,
	150, 168, 248, 302, 325, 294, 230, 308, 204, 293,
	186, 139, 142, 304, 319, 159, 287, 0, 0, 0,
	144, 317, 301, 228, 201, 202, 143, 0, 273, 172,
	184, 167, 244, 314, 315, 166, 344, 151, 330, 146,
	152, 329, 237, 310, 318, 229, 221, 145, 316, 227,
	220, 207, 178, 192, 267, 216, 268, 193, 233, 232,
	234, 0, 141, 0, 299, 326, 345, 156, 0, 0,
	307, 339, 342, 0, 270, 157, 185, 177, 266, 183,
	210, 338, 340, 341, 155, 264, 190, 236, 153, 195,
	295, 206, 214, 0, 0, 253, 278, 160, 324, 296,
	442, 453, 448, 449, 446, 447, 0, 445, 444, 443,
	456, 434, 435, 436, 437, 439, 0, 450, 451, 438,
	135, 147, 211, 0, 271, 182, 327, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 138, 148, 154, 161, 169, 176, 180,
	188, 191, 194, 197, 198, 199, 203, 219, 223, 224,
	225, 226, 238, 239, 240, 243, 246, 247, 249, 251,
	252, 255, 259, 260, 261, 262, 263, 265, 272, 274,
	280, 281, 282, 283, 284, 285, 286, 289, 290, 291,
	292, 300, 303, 312, 313, 323, 332, 336, 189, 320,
	337, 245, 218, 0, 0, 0, 398, 0, 0, 0,
	174, 0, 397, 0, 0, 0, 209, 0, 0, 257,
	0, 288, 164, 217, 215, 309, 179, 175, 173, 163,
	196, 222, 256, 305, 250, 441, 212, 0, 0, 297,
	231, 0, 0, 0, 0, 0, 432, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 162, 140, 242,
	298, 181, 67, 0, 0, 122, 123, 124, 419, 418,
	421, 422, 423, 424, 0, 0, 158, 420, 425, 426,
	427, 0, 0, 0, 0, 395, 412, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	484, 0, 0, 0, 455, 0, 411, 0, 0, 404,
	405, 407, 406, 408, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 454, 0, 0, 333,
	0, 0, 452, 0, 0, 0, 0, 0, 208, 0,
	205, 136, 149, 0, 0, 241, 275, 279, 0, 0,
	0, 165, 0, 277, 254, 322, 0, 258, 276, 213,
	311, 269, 321, 334, 335, 171, 235, 328, 306, 331,
	343, 150, 168, 248, 302, 325, 294, 230, 308, 204,
	293, 186, 139, 142, 304, 319, 159, 287, 0, 0,
	0, 144, 317, 301, 228, 201, 202, 143, 0, 273,
	172, 184, 167, 244, 314, 315, 166, 344, 151, 330,
	146, 152, 329, 237, 310, 318, 229, 221, 145, 316,
	227, 220, 207, 178, 192, 267, 216, 268, 193, 233,
	232, 234, 0, 141, 0, 299, 326, 345, 156, 0,
	0, 307, 339, 342, 0, 270, 157, 185, 177, 266,
	183, 210, 338, 340, 341, 155, 264, 190, 236, 153,
	195, 295, 206, 214, 0, 0, 253, 278, 160, 324,
	296, 442, 453, 448, 449, 446, 447, 0, 445, 444,
	443, 456, 434, 435, 436, 437, 439, 0, 450, 451,
	438, 135, 147, 211, 0, 271, 182, 327, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 138, 148, 154, 161, 169, 176,
	180, 188, 191, 194, 197, 198, 199, 203, 219, 223,
	224, 225, 226, 238, 239, 240, 243, 246, 247, 249,
	251, 252, 255, 259, 260, 261, 262, 263, 265, 272,
	274, 280, 281, 282, 283, 284, 285, 286, 289, 290,
	291, 292, 300, 303, 312, 313, 323, 332, 336, 189,
	320, 337, 245, 218, 0, 0, 0, 398, 0, 0,
	0, 174, 0, 397, 0, 0, 0, 209, 0, 0,
	257, 0, 288, 164, 217, 215, 309, 179, 175, 173,
	163, 196, 222, 256, 305, 250, 441, 212, 0, 0,
	297, 231, 0, 0, 0, 0, 0, 432, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 162, 140,
	242, 298, 181, 67, 0, 0, 122, 123, 124, 419,
	1102, 421, 422, 423, 424, 0, 0, 158, 420, 425,
	426, 427, 0, 0, 0, 0, 395, 412, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 484, 0, 0, 0, 455, 0, 411, 0, 0,
	404, 405, 407, 406, 408, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 454, 0, 0,
	333, 0, 0, 452, 0, 0, 0, 0, 0, 208,
	0, 205, 136, 149, 0, 0, 241, 275, 279, 0,
	0, 0, 165, 0, 277, 254, 322, 0, 258, 276,
	213, 311, 269, 321, 334, 335, 171, 235, 328, 306,
	331, 343, 150, 168, 248, 302, 325, 294, 230, 308,
	204, 293, 186, 139, 142, 304, 319, 159, 287, 0,
	0, 0, 144, 317, 301, 228, 201, 202, 143, 0,
	273, 172, 184, 167, 244, 314, 315, 166, 344, 151,
	330, 146, 152, 329, 237, 310, 318, 229, 221, 145,
	316, 227, 220, 207, 178, 192, 267, 216, 268, 193,
	233, 232, 234, 0, 141, 0, 299, 326, 345, 156,
	0, 0, 307, 339, 342, 0, 270, 157, 185, 177,
	266, 183, 210, 338, 340, 341, 155, 264, 190, 236,
	153, 195, 295, 206, 214, 0, 0, 253, 278, 160,
	324, 296, 442, 453, 448, 449, 446, 447, 0, 445,
	444, 443, 456, 434, 435, 436, 437, 439, 0, 450,
	451, 438, 135, 147, 211, 0, 271, 182, 327, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 138, 148, 154, 161, 169,
	176, 180, 188, 191, 194, 197, 198, 199, 203, 219,
	223, 224, 225, 226, 238, 239, 240, 243, 246, 247,
	249, 251, 252, 255, 259, 260, 261, 262, 263, 265,
	272, 274, 280, 281, 282, 283, 284, 285, 286, 289,
	290, 291, 292, 300, 303, 312, 313, 323, 332, 336,
	189, 320, 337, 245, 218, 0, 0, 0, 398, 0,
	0, 0, 174, 0, 397, 0, 0, 0, 209, 0,
	0, 257, 0, 288, 164, 217, 215, 309, 179, 175,
	173, 163, 196, 222, 256, 305, 250, 441, 212, 0,
	0, 297, 231, 0, 0, 0, 0, 0, 432, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 162,
	140, 242, 298, 181, 67, 0, 0, 122, 123, 124,
	419, 1099, 421, 422, 423, 424, 0, 0, 158, 420,
	425, 426, 427, 0, 0, 0, 0, 395, 412, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 484, 0, 0, 0, 455, 0, 411, 0,
	0, 404, 405, 407, 406, 408, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 454, 0,
	0, 333, 0, 0, 452, 0, 0, 0, 0, 0,
	208, 0, 205, 136, 149, 0, 0, 241, 275, 279,
	0, 0, 0, 165, 0, 277, 254, 322, 0, 258,
	276, 213, 311, 269, 321, 334, 335, 171, 235, 328,
	306, 331, 343, 150, 168, 248, 302, 325, 294, 230,
	308, 204, 293, 186, 139, 142, 304, 319, 159, 287,
	0, 0, 0, 144, 317, 301, 228, 201, 202, 143,
	0, 273, 172, 184, 167, 244, 314, 315, 166, 344,
	151, 330, 146, 152, 329, 237, 310, 318, 229, 221,
	145, 316, 227, 220, 207, 178, 192, 267, 216, 268,
	193, 233, 232, 234, 0, 141, 0, 299, 326, 345,
	156, 0, 0, 307, 339, 342, 0, 270, 157, 185,
	177, 266, 183, 210, 338, 340, 341, 155, 264, 190,
	236, 153, 195, 295, 206, 214, 0, 0, 253, 278,
	160, 324, 296, 442, 453, 448, 449, 446, 447, 0,
	445, 444, 443, 456, 434, 435, 436, 437, 439, 0,
	450, 451, 438, 135, 147, 211, 0, 271, 182, 327,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 138, 148, 154, 161,
	169, 176, 180, 188, 191, 194, 197, 198, 199, 203,
	219, 223, 224, 225, 226, 238, 239, 240, 243, 246,
	247, 249, 251, 252, 255, 259, 260, 261, 262, 263,
	265, 272, 274, 280, 281, 282, 283, 284, 285, 286,
	289, 290, 291, 292, 300, 303, 312, 313, 323, 332,
	336, 189, 320, 337, 465, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 398, 0, 0, 0, 174, 0, 397, 0,
	0, 0, 209, 0, 0, 257, 0, 288, 164, 217,
	215, 309, 179, 175, 173, 163, 196, 222, 256, 305,
	250, 441, 212, 0, 0, 297, 231, 0, 0, 0,
	0, 0, 432, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 162, 140, 242, 298, 181, 67, 0,
	0, 122, 123, 124, 419, 418, 421, 422, 423, 424,
	0, 0, 158, 420, 425, 426, 427, 0, 0, 0,
	0, 395, 412, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 0, 0, 0, 0,
	455, 0, 411, 0, 0, 404, 405, 407, 406, 408,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 454, 0, 0, 333, 0, 0, 452, 0,
	0, 0, 0, 0, 208, 0, 205, 136, 149, 0,
	0, 241, 275, 279, 0, 0, 0, 165, 0, 277,
	254, 322, 0, 258, 276, 213, 311, 269, 321, 334,
	335, 171, 235, 328, 306, 331, 343, 150, 168, 248,
	302, 325, 294, 230, 308, 204, 293, 186, 139, 142,
	304, 319, 159, 287, 0, 0, 0, 144, 317, 301,
	228, 201, 202, 143, 0, 273, 172, 184, 167, 244,
	314, 315, 166, 344, 151, 330, 146, 152, 329, 237,
	310, 318, 229, 221, 145, 316, 227, 220, 207, 178,
	192, 267, 216, 268, 193, 233, 232, 234, 0, 141,
	0, 299, 326, 345, 156, 0, 0, 307, 339, 342,
	0, 270, 157, 185, 177, 266, 183, 210, 338, 340,
	341, 155, 264, 190, 236, 153, 195, 295, 206, 214,
	0, 0, 253, 278, 160, 324, 296, 442, 453, 448,
	449, 446, 447, 0, 445, 444, 443, 456, 434, 435,
	436, 437, 439, 0, 450, 451, 438, 135, 147, 211,
	0, 271, 182, 327, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	138, 148, 154, 161, 169, 176, 180, 188, 191, 194,
	197, 198, 199, 203, 219, 223, 224, 225, 226, 238,
	239, 240, 243, 246, 247, 249, 251, 252, 255, 259,
	260, 261, 262, 263, 265, 272, 274, 280, 281, 282,
	283, 284, 285, 286, 289, 290, 291, 292, 300, 303,
	312, 313, 323, 332, 336, 189, 320, 337, 245, 218,
	0, 0, 0, 398, 0, 0, 0, 174, 0, 397,
	0, 0, 0, 209, 0, 0, 257, 0, 288, 164,
	217, 215, 309, 179, 175, 173, 163, 196, 222, 256,
	305, 250, 441, 212, 0, 0, 297, 231, 0, 0,
	0, 0, 0, 432, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 162, 140, 242, 298, 181, 67,
	0, 0, 122, 123, 124, 419, 418, 421, 422, 423,
	424, 0, 0, 158, 420, 425, 426, 427, 0, 0,
	0, 0, 395, 412, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 0, 0, 0,
	0, 455, 0, 411, 0, 0, 404, 405, 407, 406,
	408, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 454, 0, 0, 333, 0, 0, 452,
	0, 0, 0, 0, 0, 208, 0, 205, 136, 149,
	0, 0, 241, 275, 279, 0, 0, 0, 165, 0,
	277, 254, 322, 0, 258, 276, 213, 311, 269, 321,
	334, 335, 171, 235, 328, 306, 331, 343, 150, 168,
	248, 302, 325, 294, 230, 308, 204, 293, 186, 139,
	142, 304, 319, 159, 287, 0, 0, 0, 144, 317,
	301, 228, 201, 202, 143, 0, 273, 172, 184, 167,
	244, 314, 315, 166, 344, 151, 330, 146, 152, 329,
	237, 310, 318, 229, 221, 145, 316, 227, 220, 207,
	178, 192, 267, 216, 268, 193, 233, 232, 234, 0,
	141, 0, 299, 326, 345, 156, 0, 0, 307, 339,
	342, 0, 270, 157, 185, 177, 266, 183, 210, 338,
	340, 341, 155, 264, 190, 236, 153, 195, 295, 206,
	214, 0, 0, 253, 278, 160, 324, 296, 442, 453,
	448, 449, 446, 447, 0, 445, 444, 443, 456, 434,
	435, 436, 437, 439, 0, 450, 451, 438, 135, 147,
	211, 0, 271, 182, 327, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 138, 148, 154, 161, 169, 176, 180, 188, 191,
	194, 197, 198, 199, 203, 219, 223, 224, 225, 226,
	238, 239, 240, 243, 246, 247, 249, 251, 252, 255,
	259, 260, 261, 262, 263, 265, 272, 274, 280, 281,
	282, 283, 284, 285, 286, 289, 290, 291, 292, 300,
	303, 312, 313, 323, 332, 336, 189, 320, 337, 245,
	218, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 209, 0, 0, 257, 0, 288,
	164, 217, 215, 309, 179, 175, 173, 163, 196, 222,
	256, 305, 250, 441, 212, 0, 0, 297, 231, 0,
	0, 0, 0, 0, 432, 433, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 162, 140, 242, 298, 181,
	67, 0, 472, 122, 123, 124, 419, 418, 421, 422,
	423, 424, 0, 0, 158, 420, 425, 426, 427, 0,
	0, 0, 0, 0, 412, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 0, 455, 0, 411, 0, 0, 404, 405, 407,
	406, 408, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 454, 0, 0, 333, 0, 0,
	452, 0, 0, 0, 0, 0, 208, 0, 205, 136,
	149, 0, 0, 241, 275, 279, 0, 0, 0, 165,
	0, 277, 254, 322, 0, 258, 276, 213, 311, 269,
	321, 334, 335, 171, 235, 328, 306, 331, 343, 150,
	168, 248, 302, 325, 294, 230, 308, 204, 293, 186,
	139, 142, 304, 319, 159, 287, 0, 0, 0, 144,
	317, 301, 228, 201, 202, 143, 0, 273, 172, 184,
	167, 244, 314, 315, 166, 344, 151, 330, 146, 152,
	329, 237, 310, 318, 229, 221, 145, 316, 227, 220,
	207, 178, 192, 267, 216, 268, 193, 233, 232, 234,
	0, 141, 0, 299, 326, 345, 156, 0, 0, 307,
	339, 342, 0, 270, 157, 185, 177, 266, 183, 210,
	338, 340, 341, 155, 264, 190, 236, 153, 195, 295,
	206, 214, 0, 0, 253, 278, 160, 324, 296, 442,
	453, 448, 449, 446, 447, 0, 445, 444, 443, 456,
	434, 435, 436, 437, 439, 0, 450, 451, 438, 135,
	147, 211, 0, 271, 182, 327, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 138, 148, 154, 161, 169, 176, 180, 188,
	191, 194, 197, 198, 199, 203, 219, 223, 224, 225,
	226, 238, 239, 240, 243, 246, 247, 249, 251, 252,
	255, 259, 260, 261, 262, 263, 265, 272, 274, 280,
	281, 282, 283, 284, 285, 286, 289, 290, 291, 292,
	300, 303, 312, 313, 323, 332, 336, 189, 320, 337,
	245, 218, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 209, 0, 0, 257, 0,
	288, 164, 217, 215, 309, 179, 175, 173, 163, 196,
	222, 256, 305, 250, 441, 212, 0, 0, 297, 231,
	0, 0, 0, 0, 0, 432, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 162, 140, 242, 298,
	181, 67, 0, 0, 122, 123, 124, 419, 418, 421,
	422, 423, 424, 0, 0, 158, 420, 425, 426, 427,
	0, 0, 0, 0, 0, 412, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 0,
	0, 0, 0, 455, 0, 411, 0, 0, 404, 405,
	407, 406, 408, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 454, 0, 0, 333, 0,
	0, 452, 0, 0, 0, 0, 0, 208, 0, 205,
	136, 149, 0, 0, 241, 275, 279, 0, 0, 0,
	165, 0, 277, 254, 322, 0, 258, 276, 213, 311,
	269, 321, 334, 335, 171, 235, 328, 306, 331, 343,
	150, 168, 248, 302, 325, 294, 230, 308, 204, 293,
	186, 139, 142, 304, 319, 159, 287, 0, 0, 0,
	144, 317, 301, 228, 201, 202, 143, 0, 273, 172,
	184, 167, 244, 314, 315, 166, 344, 151, 330, 146,
	152, 329, 237, 310, 318, 229, 221, 145, 316, 227,
	220, 207, 178, 192, 267, 216, 268, 193, 233, 232,
	234, 0, 141, 0, 299, 326, 345, 156, 0, 0,
	307, 339, 342, 0, 270, 157, 185, 177, 266, 183,
	210, 338, 340, 341, 155, 264, 190, 236, 153, 195,
	295, 206, 214, 0, 0, 253, 278, 160, 324, 296,
	442, 453, 448, 449, 446, 447, 0, 445, 444, 443,
	456, 434, 435, 436, 437, 439, 0, 450, 451, 438,
	135, 147, 211, 0, 271, 182, 327, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 138, 148, 154, 161, 169, 176, 180,
	188, 191, 194, 197, 198, 199, 203, 219, 223, 224,
	225, 226, 238, 239, 240, 243, 246, 247, 249, 251,
	252, 255, 259, 260, 261, 262, 263, 265, 272, 274,
	280, 281, 282, 283, 284, 285, 286, 289, 290, 291,
	292, 300, 303, 312, 313, 323, 332, 336, 189, 320,
	337, 245, 218, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 209, 0, 0, 257,
	0, 288, 164, 217, 215, 309, 179, 175, 173, 163,
	196, 222, 256, 305, 250, 0, 212, 0, 0, 297,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 162, 140, 242,
	298, 181, 0, 0, 0, 122, 123, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 764, 763, 773, 774, 766, 767,
	768, 769, 770, 771, 772, 765, 0, 0, 775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	205, 136, 149, 0, 0, 241, 275, 279, 0, 0,
	0, 165, 0, 277, 254, 322, 0, 258, 276, 213,
	311, 269, 321, 334, 335, 171, 235, 328, 306, 331,
	343, 150, 168, 248, 302, 325, 294, 230, 308, 204,
	293, 186, 139, 142, 304, 319, 159, 287, 0, 0,
	0, 144, 317, 301, 228, 201, 202, 143, 0, 273,
	172, 184, 167, 244, 314, 315, 166, 344, 151, 330,
	146, 152, 329, 237, 310, 318, 229, 221, 145, 316,
	227, 220, 207, 178, 192, 267, 216, 268, 193, 233,
	232, 234, 0, 141, 0, 299, 326, 345, 156, 0,
	0, 307, 339, 342, 0, 270, 157, 185, 177, 266,
	183, 210, 338, 340, 341, 155, 264, 190, 236, 153,
	195, 295, 206, 214, 0, 0, 253, 278, 160, 324,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 147, 211, 0, 271, 182, 327, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 138, 148, 154, 161, 169, 176,
	180, 188, 191, 194, 197, 198, 199, 203, 219, 223,
	224, 225, 226, 238, 239, 240, 243, 246, 247, 249,
	251, 252, 255, 259, 260, 261, 262, 263, 265, 272,
	274, 280, 281, 282, 283, 284, 285, 286, 289, 290,
	291, 292, 300, 303, 312, 313, 323, 332, 336, 189,
	320, 337, 245, 218, 0, 0, 0, 0, 0, 0,
	0, 174, 674, 0, 0, 0, 0, 209, 0, 0,
	257, 0, 288, 164, 217, 215, 309, 179, 175, 173,
	163, 196, 222, 256, 305, 250, 0, 212, 0, 0,
	297, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 162, 140,
	242, 298, 181, 0, 0, 0, 122, 123, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 673,
	333, 0, 0, 0, 0, 0, 0, 670, 671, 208,
	643, 205, 136, 149, 664, 668, 241, 275, 279, 0,
	0, 0, 165, 0, 277, 254, 322, 0, 258, 276,
	213, 311, 269, 321, 334, 335, 171, 235, 328, 306,
	331, 343, 150, 168, 248, 302, 325, 294, 230, 308,
	204, 293, 186, 139, 142, 304, 319, 159, 287, 0,
	0, 0, 144, 317, 301, 228, 201, 202, 143, 0,
	273, 172, 184, 167, 244, 314, 315, 166, 344, 151,
	330, 146, 152, 329, 237, 310, 318, 229, 221, 145,
	316, 227, 220, 207, 178, 192, 267, 216, 268, 193,
	233, 232, 234, 0, 141, 0, 299, 326, 345, 156,
	0, 0, 307, 339, 342, 0, 270, 157, 185, 177,
	266, 183, 210, 338, 340, 341, 155, 264, 190, 236,
	153, 195, 295, 206, 214, 0, 0, 253, 278, 160,
	324, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 147, 211, 0, 271, 182, 327, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 138, 148, 154, 161, 169,
	176, 180, 188, 191, 194, 197, 198, 199, 203, 219,
	223, 224, 225, 226, 238, 239, 240, 243, 246, 247,
	249, 251, 252, 255, 259, 260, 261, 262, 263, 265,
	272, 274, 280, 281, 282, 283, 284, 285, 286, 289,
	290, 291, 292, 300, 303, 312, 313, 323, 332, 336,
	189, 320, 337, 245, 218, 0, 0, 864, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 209, 0,
	0, 257, 0, 288, 164, 217, 215, 309, 179, 175,
	173, 163, 196, 222, 256, 305, 250, 0, 212, 0,
	0, 297, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 162,
	140, 242, 298, 181, 0, 0, 0, 122, 123, 124,
	0, 866, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 753, 754, 752, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 205, 136, 149, 0, 0, 241, 275, 279,
	0, 0, 0, 165, 0, 277, 254, 322, 0, 258,
	276, 213, 311, 269, 321, 334, 335, 171, 235, 328,
	306, 331, 343, 150, 168, 248, 302, 325, 294, 230,
	308, 204, 293, 186, 139, 142, 304, 319, 159, 287,
	0, 0, 0, 144, 317, 301, 228, 201, 202, 143,
	0, 273, 172, 184, 167, 244, 314, 315, 166, 344,
	151, 330, 146, 152, 329, 237, 310, 318, 229, 221,
	145, 316, 227, 220, 207, 178, 192, 267, 216, 268,
	193, 233, 232, 234, 0, 141, 0, 299, 326, 345,
	156, 0, 0, 307, 339, 342, 0, 270, 157, 185,
	177, 266, 183, 210, 338, 340, 341, 155, 264, 190,
	236, 153, 195, 295, 206, 214, 0, 0, 253, 278,
	160, 324, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 147, 211, 0, 271, 182, 327,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 138, 148, 154, 161,
	169, 176, 180, 188, 191, 194, 197, 198, 199, 203,
	219, 223, 224, 225, 226, 238, 239, 240, 243, 246,
	247, 249, 251, 252, 255, 259, 260, 261, 262, 263,
	265, 272, 274, 280, 281, 282, 283, 284, 285, 286,
	289, 290, 291, 292, 300, 303, 312, 313, 323, 332,
	336, 189, 320, 337, 33, 218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 209, 0, 0, 257, 0, 288, 164, 217,
	215, 309, 179, 175, 173, 163, 196, 222, 256, 305,
	250, 0, 212, 0, 0, 297, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 162, 140, 242, 298, 181, 67, 0,
	472, 122, 123, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 205, 136, 149, 0,
	0, 241, 275, 279, 0, 0, 0, 165, 0, 277,
	254, 322, 0, 258, 276, 213, 311, 269, 321, 334,
	335, 171, 235, 328, 306, 331, 343, 150, 168, 248,
	302, 325, 294, 230, 308, 204, 293, 186, 139, 142,
	304, 319, 159, 287, 0, 0, 0, 144, 317, 301,
	228, 201, 202, 143, 0, 273, 172, 184, 167, 244,
	314, 315, 166, 344, 151, 330, 146, 152, 329, 237,
	310, 318, 229, 221, 145, 316, 227, 220, 207, 178,
	192, 267, 216, 268, 193, 233, 232, 234, 0, 141,
	0, 299, 326, 345, 156, 0, 0, 307, 339, 342,
	0, 270, 157, 185, 177, 266, 183, 210, 338, 340,
	341, 155, 264, 190, 236, 153, 195, 295, 206, 214,
	0, 0, 253, 278, 160, 324, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 147, 211,
	0, 271, 182, 327, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	138, 148, 154, 161, 169, 176, 180, 188, 191, 194,
	197, 198, 199, 203, 219, 223, 224, 225, 226, 238,
	239, 240, 243, 246, 247, 249, 251, 252, 255, 259,
	260, 261, 262, 263, 265, 272, 274, 280, 281, 282,
	283, 284, 285, 286, 289, 290, 291, 292, 300, 303,
	312, 313, 323, 332, 336, 189, 320, 337, 245, 218,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 209, 0, 0, 257, 0, 288, 164,
	217, 215, 309, 179, 175, 173, 163, 196, 222, 256,
	305, 250, 0, 212, 0, 0, 297, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 162, 140, 242, 298, 181, 0,
	0, 0, 122, 123, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 643, 205, 136, 149,
	641, 0, 241, 275, 279, 0, 0, 0, 165, 0,
	277, 254, 322, 0, 258, 276, 213, 311, 269, 321,
	334, 335, 171, 235, 328, 306, 331, 343, 150, 168,
	248, 302, 325, 294, 230, 308, 204, 293, 186, 139,
	142, 304, 319, 159, 287, 0, 0, 0, 144, 317,
	301, 228, 201, 202, 143, 0, 273, 172, 184, 167,
	244, 314, 315, 166, 344, 151, 330, 146, 152, 329,
	237, 310, 318, 229, 221, 145, 316, 227, 220, 207,
	178, 192, 267, 216, 268, 193, 233, 232, 234, 0,
	141, 0, 299, 326, 345, 156, 0, 0, 307, 339,
	342, 0, 270, 157, 185, 177, 266, 183, 210, 338,
	340, 341, 155, 264, 190, 236, 153, 195, 295, 206,
	214, 0, 0, 253, 278, 160, 324, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 147,
	211, 0, 271, 182, 327, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 138, 148, 154, 161, 169, 176, 180, 188, 191,
	194, 197, 198, 199, 203, 219, 223, 224, 225, 226,
	238, 239, 240, 243, 246, 247, 249, 251, 252, 255,
	259, 260, 261, 262, 263, 265, 272, 274, 280, 281,
	282, 283, 284, 285, 286, 289, 290, 291, 292, 300,
	303, 312, 313, 323, 332, 336, 189, 320, 337, 245,
	218, 0, 0, 1129, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 209, 0, 0, 257, 0, 288,
	164, 217, 215, 309, 179, 175, 173, 163, 196, 222,
	256, 305, 250, 0, 212, 0, 0, 297, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 162, 140, 242, 298, 181,
	0, 0, 0, 122, 123, 124, 0, 1131, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 205, 136,
	149, 0, 0, 241, 275, 279, 0, 0, 0, 165,
	0, 277, 254, 322, 0, 258, 276, 213, 311, 269,
	321, 334, 335, 171, 235, 328, 306, 331, 343, 150,
	168, 248, 302, 325, 294, 230, 308, 204, 293, 186,
	139, 142, 304, 319, 159, 287, 0, 0, 0, 144,
	317, 301, 228, 201, 202, 143, 0, 273, 172, 184,
	167, 244, 314, 315, 166, 344, 151, 330, 146, 152,
	329, 237, 310, 318, 229, 221, 145, 316, 227, 220,
	207, 178, 192, 267, 216, 268, 193, 233, 232, 234,
	0, 141, 0, 299, 326, 345, 156, 0, 0, 307,
	339, 342, 0, 270, 157, 185, 177, 266, 183, 210,
	338, 340, 341, 155, 264, 190, 236, 153, 195, 295,
	206, 214, 0, 0, 253, 278, 160, 324, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	147, 211, 0, 271, 182, 327, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 138, 148, 154, 161, 169, 176, 180, 188,
	191, 194, 197, 198, 199, 203, 219, 223, 224, 225,
	226, 238, 239, 240, 243, 246, 247, 249, 251, 252,
	255, 259, 260, 261, 262, 263, 265, 272, 274, 280,
	281, 282, 283, 284, 285, 286, 289, 290, 291, 292,
	300, 303, 312, 313, 323, 332, 336, 189, 320, 337,
	33, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 209, 0,
	0, 257, 0, 288, 164, 217, 215, 309, 179, 175,
	173, 163, 196, 222, 256, 305, 250, 0, 212, 0,
	0, 297, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 162,
	140, 242, 298, 181, 67, 0, 0, 122, 123, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 205, 136, 149, 0, 0, 241, 275, 279,
	0, 0, 0, 165, 0, 277, 254, 322, 0, 258,
	276, 213, 311, 269, 321, 334, 335, 171, 235, 328,
	306, 331, 343, 150, 168, 248, 302, 325, 294, 230,
	308, 204, 293, 186, 139, 142, 304, 319, 159, 287,
	0, 0, 0, 144, 317, 301, 228, 201, 202, 143,
	0, 273, 172, 184, 167, 244, 314, 315, 166, 344,
	151, 330, 146, 152, 329, 237, 310, 318, 229, 221,
	145, 316, 227, 220, 207, 178, 192, 267, 216, 268,
	193, 233, 232, 234, 0, 141, 0, 299, 326, 345,
	156, 0, 0, 307, 339, 342, 0, 270, 157, 185,
	177, 266, 183, 210, 338, 340, 341, 155, 264, 190,
	236, 153, 195, 295, 206, 214, 0, 0, 253, 278,
	160, 324, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 147, 211, 0, 271, 182, 327,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 138, 148, 154, 161,
	169, 176, 180, 188, 191, 194, 197, 198, 199, 203,
	219, 223, 224, 225, 226, 238, 239, 240, 243, 246,
	247, 249, 251, 252, 255, 259, 260, 261, 262, 263,
	265, 272, 274, 280, 281, 282, 283, 284, 285, 286,
	289, 290, 291, 292, 300, 303, 312, 313, 323, 332,
	336, 189, 320, 337, 245, 218, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 209,
	0, 0, 257, 0, 288, 164, 217, 215, 309, 179,
	175, 173, 163, 196, 222, 256, 305, 250, 0, 212,
	0, 0, 297, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	162, 140, 242, 298, 181, 0, 0, 0, 122, 123,
	124, 0, 0, 1147, 0, 0, 1148, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 205, 136, 149, 0, 0, 241, 275,
	279, 0, 0, 0, 165, 0, 277, 254, 322, 0,
	258, 276, 213, 311, 269, 321, 334, 335, 171, 235,
	328, 306, 331, 343, 150, 168, 248, 302, 325, 294,
	230, 308, 204, 293, 186, 139, 142, 304, 319, 159,
	287, 0, 0, 0, 144, 317, 301, 228, 201, 202,
	143, 0, 273, 172, 184, 167, 244, 314, 315, 166,
	344, 151, 330, 146, 152, 329, 237, 310, 318, 229,
	221, 145, 316, 227, 220, 207, 178, 192, 267, 216,
	268, 193, 233, 232, 234, 0, 141, 0, 299, 326,
	345, 156, 0, 0, 307, 339, 342, 0, 270, 157,
	185, 177, 266, 183, 210, 338, 340, 341, 155, 264,
	190, 236, 153, 195, 295, 206, 214, 0, 0, 253,
	278, 160, 324, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 147, 211, 0, 271, 182,
	327, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 138, 148, 154,
	161, 169, 176, 180, 188, 191, 194, 197, 198, 199,
	203, 219, 223, 224, 225, 226, 238, 239, 240, 243,
	246, 247, 249, 251, 252, 255, 259, 260, 261, 262,
	263, 265, 272, 274, 280, 281, 282, 283, 284, 285,
	286, 289, 290, 291, 292, 300, 303, 312, 313, 323,
	332, 336, 189, 320, 337, 245, 218, 0, 0, 1129,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	209, 0, 0, 257, 0, 288, 164, 217, 215, 309,
	179, 175, 173, 163, 196, 222, 256, 305, 250, 0,
	212, 0, 0, 297, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	200, 162, 140, 242, 298, 181, 0, 0, 0, 122,
	123, 124, 0, 1131, 0, 0, 0, 0, 0, 0,
	158, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 205, 136, 149, 0, 0, 241,
	275, 279, 0, 0, 0, 165, 0, 277, 254, 322,
	0, 1127, 276, 213, 311, 269, 321, 334, 335, 171,
	235, 328, 306, 331, 343, 150, 168, 248, 302, 325,
	294, 230, 308, 204, 293, 186, 139, 142, 304, 319,
	159, 287, 0, 0, 0, 144, 317, 301, 228, 201,
	202, 143, 0, 273, 172, 184, 167, 244, 314, 315,
	166, 344, 151, 330, 146, 152, 329, 237, 310, 318,
	229, 221, 145, 316, 227, 220, 207, 178, 192, 267,
	216, 268, 193, 233, 232, 234, 0, 141, 0, 299,
	326, 345, 156, 0, 0, 307, 339, 342, 0, 270,
	157, 185, 177, 266, 183, 210, 338, 340, 341, 155,
	264, 190, 236, 153, 195, 295, 206, 214, 0, 0,
	253, 278, 160, 324, 296, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 135, 147, 211, 0, 271,
	182, 327, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 138, 148,
	154, 161, 169, 176, 180, 188, 191, 194, 197, 198,
	199, 203, 219, 223, 224, 225, 226, 238, 239, 240,
	243, 246, 247, 249, 251, 252, 255, 259, 260, 261,
	262, 263, 265, 272, 274, 280, 281, 282, 283, 284,
	285, 286, 289, 290, 291, 292, 300, 303, 312, 313,
	323, 332, 336, 189, 320, 337, 245, 218, 0, 0,
	0, 0, 0, 0, 0, 174, 0, 897, 0, 0,
	0, 209, 0, 0, 257, 0, 288, 164, 217, 215,
	309, 179, 175, 173, 163, 196, 222, 256, 305, 250,
	0, 212, 0, 0, 297, 231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 200, 162, 140, 242, 298, 181, 0, 0, 0,
	122, 123, 124, 0, 896, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 205, 136, 149, 0, 0,
	241, 275, 279, 0, 0, 0, 165, 0, 277, 254,
	322, 0, 258, 276, 213, 311, 269, 321, 334, 335,
	171, 235, 328, 306, 331, 343, 150, 168, 248, 302,
	325, 294, 230, 308, 204, 293, 186, 139, 142, 304,
	319, 159, 287, 0, 0, 0, 144, 317, 301, 228,
	201, 202, 143, 0, 273, 172, 184, 167, 244, 314,
	315, 166, 344, 151, 330, 146, 152, 329, 237, 310,
	318, 229, 221, 145, 316, 227, 220, 207, 178, 192,
	267, 216, 268, 193, 233, 232, 234, 0, 141, 0,
	299, 326, 345, 156, 0, 0, 307, 339, 342, 0,
	270, 157, 185, 177, 266, 183, 210, 338, 340, 341,
	155, 264, 190, 236, 153, 195, 295, 206, 214, 0,
	0, 253, 278, 160, 324, 296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 147, 211, 0,
	271, 182, 327, 0, 0, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 137, 138,
	148, 154, 161, 169, 176, 180, 188, 191, 194, 197,
	198, 199, 203, 219, 223, 224, 225, 226, 238, 239,
	240, 243, 246, 247, 249, 251, 252, 255, 259, 260,
	261, 262, 263, 265, 272, 274, 280, 281, 282, 283,
	284, 285, 286, 289, 290, 291, 292, 300, 303, 312,
	313, 323, 332, 336, 189, 320, 337, 245, 218, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 209, 0, 0, 257, 0, 288, 164, 217,
	215, 309, 179, 175, 173, 163, 196, 222, 256, 305,
	250, 0, 212, 0, 0, 297, 231, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 200, 162, 140, 242, 298, 181, 0, 0,
	472, 122, 123, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 158, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 205, 136, 149, 0,
	0, 241, 275, 279, 0, 0, 0, 165, 0, 277,
	254, 322, 0, 258, 276, 213, 311, 269, 321, 334,
	335, 171, 235, 328, 306, 331, 343, 150, 168, 248,
	302, 325, 294, 230, 308, 204, 293, 186, 139, 142,
	304, 319, 159, 287, 0, 0, 0, 144, 317, 301,
	228, 201, 202, 143, 0, 273, 172, 184, 167, 244,
	314, 315, 166, 344, 151, 330, 146, 152, 329, 237,
	310, 318, 229, 221, 145, 316, 227, 220, 207, 178,
	192, 267, 216, 268, 193, 233, 232, 234, 0, 141,
	0, 299, 326, 345, 156, 0, 0, 307, 339, 342,
	0, 270, 157, 185, 177, 266, 183, 210, 338, 340,
	341, 155, 264, 190, 236, 153, 195, 295, 206, 214,
	0, 0, 253, 278, 160, 324, 296, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 135, 147, 211,
	0, 271, 182, 327, 0, 0, 170, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	138, 148, 154, 161, 169, 176, 180, 188, 191, 194,
	197, 198, 199, 203, 219, 223, 224, 225, 226, 238,
	239, 240, 243, 246, 247, 249, 251, 252, 255, 259,
	260, 261, 262, 263, 265, 272, 274, 280, 281, 282,
	283, 284, 285, 286, 289, 290, 291, 292, 300, 303,
	312, 313, 323, 332, 336, 189, 320, 337, 245, 218,
	0, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 209, 0, 0, 257, 0, 288, 164,
	217, 215, 309, 179, 175, 173, 163, 196, 222, 256,
	305, 250, 0, 212, 0, 0, 297, 231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 200, 162, 140, 242, 298, 181, 67,
	0, 0, 122, 123, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 205, 136, 149,
	0, 0, 241, 275, 279, 0, 0, 0, 165, 0,
	277, 254, 322, 0, 258, 276, 213, 311, 269, 321,
	334, 335, 171, 235, 328, 306, 331, 343, 150, 168,
	248, 302, 325, 294, 230, 308, 204, 293, 186, 139,
	142, 304, 319, 159, 287, 0, 0, 0, 144, 317,
	301, 228, 201, 202, 143, 0, 273, 172, 184, 167,
	244, 314, 315, 166, 344, 151, 330, 146, 152, 329,
	237, 310, 318, 229, 221, 145, 316, 227, 220, 207,
	178, 192, 267, 216, 268, 193, 233, 232, 234, 0,
	141, 0, 299, 326, 345, 156, 0, 0, 307, 339,
	342, 0, 270, 157, 185, 177, 266, 183, 210, 338,
	340, 341, 155, 264, 190, 236, 153, 195, 295, 206,
	214, 0, 0, 253, 278, 160, 324, 296, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 147,
	211, 0, 271, 182, 327, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 138, 148, 154, 161, 169, 176, 180, 188, 191,
	194, 197, 198, 199, 203, 219, 223, 224, 225, 226,
	238, 239, 240, 243, 246, 247, 249, 251, 252, 255,
	259, 260, 261, 262, 263, 265, 272, 274, 280, 281,
	282, 283, 284, 285, 286, 289, 290, 291, 292, 300,
	303, 312, 313, 323, 332, 336, 189, 320, 337, 245,
	218, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 209, 0, 0, 257, 0, 288,
	164, 217, 215, 309, 179, 175, 173, 163, 196, 222,
	256, 305, 250, 0, 212, 0, 0, 297, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 162, 140, 242, 298, 181,
	0, 0, 0, 122, 123, 124, 0, 1131, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 205, 136,
	149, 0, 0, 241, 275, 279, 0, 0, 0, 165,
	0, 277, 254, 322, 0, 258, 276, 213, 311, 269,
	321, 334, 335, 171, 235, 328, 306, 331, 343, 150,
	168, 248, 302, 325, 294, 230, 308, 204, 293, 186,
	139, 142, 304, 319, 159, 287, 0, 0, 0, 144,
	317, 301, 228, 201, 202, 143, 0, 273, 172, 184,
	167, 244, 314, 315, 166, 344, 151, 330, 146, 152,
	329, 237, 310, 318, 229, 221, 145, 316, 227, 220,
	207, 178, 192, 267, 216, 268, 193, 233, 232, 234,
	0, 141, 0, 299, 326, 345, 156, 0, 0, 307,
	339, 342, 0, 270, 157, 185, 177, 266, 183, 210,
	338, 340, 341, 155, 264, 190, 236, 153, 195, 295,
	206, 214, 0, 0, 253, 278, 160, 324, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	147, 211, 0, 271, 182, 327, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 138, 148, 154, 161, 169, 176, 180, 188,
	191, 194, 197, 198, 199, 203, 219, 223, 224, 225,
	226, 238, 239, 240, 243, 246, 247, 249, 251, 252,
	255, 259, 260, 261, 262, 263, 265, 272, 274, 280,
	281, 282, 283, 284, 285, 286, 289, 290, 291, 292,
	300, 303, 312, 313, 323, 332, 336, 189, 320, 337,
	245, 218, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 0, 0, 0, 209, 0, 0, 257, 0,
	288, 164, 217, 215, 309, 179, 175, 173, 163, 196,
	222, 256, 305, 250, 0, 212, 0, 0, 297, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 162, 140, 242, 298,
	181, 0, 0, 0, 122, 123, 124, 0, 866, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 205,
	136, 149, 0, 0, 241, 275, 279, 0, 0, 0,
	165, 0, 277, 254, 322, 0, 258, 276, 213, 311,
	269, 321, 334, 335, 171, 235, 328, 306, 331, 343,
	150, 168, 248, 302, 325, 294, 230, 308, 204, 293,
	186, 139, 142, 304, 319, 159, 287, 0, 0, 0,
	144, 317, 301, 228, 201, 202, 143, 0, 273, 172,
	184, 167, 244, 314, 315, 166, 344, 151, 330, 146,
	152, 329, 237, 310, 318, 229, 221, 145, 316, 227,
	220, 207, 178, 192, 267, 216, 268, 193, 233, 232,
	234, 0, 141, 0, 299, 326, 345, 156, 0, 0,
	307, 339, 342, 0, 270, 157, 185, 177, 266, 183,
	210, 338, 340, 341, 155, 264, 190, 236, 153, 195,
	295, 206, 214, 0, 0, 253, 278, 160, 324, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 147, 211, 0, 271, 182, 327, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 138, 148, 154, 161, 169, 176, 180,
	188, 191, 194, 197, 198, 199, 203, 219, 223, 224,
	225, 226, 238, 239, 240, 243, 246, 247, 249, 251,
	252, 255, 259, 260, 261, 262, 263, 265, 272, 274,
	280, 281, 282, 283, 284, 285, 286, 289, 290, 291,
	292, 300, 303, 312, 313, 323, 332, 336, 189, 320,
	337, 245, 218, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 209, 0, 0, 257,
	0, 288, 164, 217, 215, 309, 179, 175, 173, 163,
	196, 222, 256, 305, 250, 0, 212, 0, 0, 297,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 162, 140, 242,
	298, 181, 968, 0, 0, 122, 123, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	205, 136, 149, 0, 0, 241, 275, 279, 0, 0,
	0, 165, 0, 277, 254, 322, 0, 258, 276, 213,
	311, 269, 321, 334, 335, 171, 235, 328, 306, 331,
	343, 150, 168, 248, 302, 325, 294, 230, 308, 204,
	293, 186, 139, 142, 304, 319, 159, 287, 0, 0,
	0, 144, 317, 301, 228, 201, 202, 143, 0, 273,
	172, 184, 167, 244, 314, 315, 166, 344, 151, 330,
	146, 152, 329, 237, 310, 318, 229, 221, 145, 316,
	227, 220, 207, 178, 192, 267, 216, 268, 193, 233,
	232, 234, 0, 141, 0, 299, 326, 345, 156, 0,
	0, 307, 339, 342, 0, 270, 157, 185, 177, 266,
	183, 210, 338, 340, 341, 155, 264, 190, 236, 153,
	195, 295, 206, 214, 0, 0, 253, 278, 160, 324,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 147, 211, 0, 271, 182, 327, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 138, 148, 154, 161, 169, 176,
	180, 188, 191, 194, 197, 198, 199, 203, 219, 223,
	224, 225, 226, 238, 239, 240, 243, 246, 247, 249,
	251, 252, 255, 259, 260, 261, 262, 263, 265, 272,
	274, 280, 281, 282, 283, 284, 285, 286, 289, 290,
	291, 292, 300, 303, 312, 313, 323, 332, 336, 189,
	320, 337, 879, 218, 0, 0, 0, 0, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 209, 0, 0, 257, 0, 288,
	164, 217, 215, 309, 179, 175, 173, 163, 196, 222,
	256, 305, 250, 0, 212, 0, 0, 297, 231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 200, 162, 140, 242, 298, 181,
	0, 0, 0, 122, 123, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 158, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 205, 136,
	149, 0, 0, 241, 275, 279, 0, 0, 0, 165,
	0, 277, 254, 322, 0, 258, 276, 213, 311, 269,
	321, 334, 335, 171, 235, 328, 306, 331, 343, 150,
	168, 248, 302, 325, 294, 230, 308, 204, 293, 186,
	139, 142, 304, 319, 159, 287, 0, 0, 0, 144,
	317, 301, 228, 201, 202, 143, 0, 273, 172, 184,
	167, 244, 314, 315, 166, 344, 151, 330, 146, 152,
	329, 237, 310, 318, 229, 221, 145, 316, 227, 220,
	207, 178, 192, 267, 216, 268, 193, 233, 232, 234,
	0, 141, 0, 299, 326, 345, 156, 0, 0, 307,
	339, 342, 0, 270, 157, 185, 177, 266, 183, 210,
	338, 340, 341, 155, 264, 190, 236, 153, 195, 295,
	206, 214, 0, 0, 253, 278, 160, 324, 296, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	147, 211, 0, 271, 182, 327, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 137, 138, 148, 154, 161, 169, 176, 180, 188,
	191, 194, 197, 198, 199, 203, 219, 223, 224, 225,
	226, 238, 239, 240, 243, 246, 247, 249, 251, 252,
	255, 259, 260, 261, 262, 263, 265, 272, 274, 280,
	281, 282, 283, 284, 285, 286, 289, 290, 291, 292,
	300, 303, 312, 313, 323, 332, 336, 189, 320, 337,
	245, 218, 0, 0, 0, 0, 0, 0, 870, 174,
	0, 0, 0, 0, 0, 209, 0, 0, 257, 0,
	288, 164, 217, 215, 309, 179, 175, 173, 163, 196,
	222, 256, 305, 250, 0, 212, 0, 0, 297, 231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 200, 162, 140, 242, 298,
	181, 0, 0, 0, 122, 123, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 205,
	136, 149, 0, 0, 241, 275, 279, 0, 0, 0,
	165, 0, 277, 254, 322, 0, 258, 276, 213, 311,
	269, 321, 334, 335, 171, 235, 328, 306, 331, 343,
	150, 168, 248, 302, 325, 294, 230, 308, 204, 293,
	186, 139, 142, 304, 319, 159, 287, 0, 0, 0,
	144, 317, 301, 228, 201, 202, 143, 0, 273, 172,
	184, 167, 244, 314, 315, 166, 344, 151, 330, 146,
	152, 329, 237, 310, 318, 229, 221, 145, 316, 227,
	220, 207, 178, 192, 267, 216, 268, 193, 233, 232,
	234, 0, 141, 0, 299, 326, 345, 156, 0, 0,
	307, 339, 342, 0, 270, 157, 185, 177, 266, 183,
	210, 338, 340, 341, 155, 264, 190, 236, 153, 195,
	295, 206, 214, 0, 0, 253, 278, 160, 324, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	135, 147, 211, 0, 271, 182, 327, 0, 0, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 138, 148, 154, 161, 169, 176, 180,
	188, 191, 194, 197, 198, 199, 203, 219, 223, 224,
	225, 226, 238, 239, 240, 243, 246, 247, 249, 251,
	252, 255, 259, 260, 261, 262, 263, 265, 272, 274,
	280, 281, 282, 283, 284, 285, 286, 289, 290, 291,
	292, 300, 303, 312, 313, 323, 332, 336, 189, 320,
	337, 245, 218, 0, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 209, 0, 0, 257,
	0, 288, 164, 217, 215, 309, 179, 175, 173, 163,
	196, 222, 256, 305, 250, 0, 212, 0, 0, 297,
	231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 200, 162, 140, 242,
	298, 181, 0, 0, 0, 122, 123, 124, 0, 744,
	0, 0, 0, 0, 0, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	205, 136, 149, 0, 0, 241, 275, 279, 0, 0,
	0, 165, 0, 277, 254, 322, 0, 258, 276, 213,
	311, 269, 321, 334, 335, 171, 235, 328, 306, 331,
	343, 150, 168, 248, 302, 325, 294, 230, 308, 204,
	293, 186, 139, 142, 304, 319, 159, 287, 0, 0,
	0, 144, 317, 301, 228, 201, 202, 143, 0, 273,
	172, 184, 167, 244, 314, 315, 166, 344, 151, 330,
	146, 152, 329, 237, 310, 318, 229, 221, 145, 316,
	227, 220, 207, 178, 192, 267, 216, 268, 193, 233,
	232, 234, 0, 141, 0, 299, 326, 345, 156, 0,
	0, 307, 339, 342, 0, 270, 157, 185, 177, 266,
	183, 210, 338, 340, 341, 155, 264, 190, 236, 153,
	195, 295, 206, 214, 0, 0, 253, 278, 160, 324,
	296, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 147, 211, 0, 271, 182, 327, 0, 0,
	170, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 137, 138, 148, 154, 161, 169, 176,
	180, 188, 191, 194, 197, 198, 199, 203, 219, 223,
	224, 225, 226, 238, 239, 240, 243, 246, 247, 249,
	251, 252, 255, 259, 260, 261, 262, 263, 265, 272,
	274, 280, 281, 282, 283, 284, 285, 286, 289, 290,
	291, 292, 300, 303, 312, 313, 323, 332, 336, 189,
	320, 337, 245, 218, 0, 0, 0, 0, 0, 0,
	0, 174, 0, 0, 0, 0, 0, 209, 0, 0,
	257, 0, 288, 164, 217, 215, 309, 179, 175, 173,
	163, 196, 222, 256, 305, 250, 0, 212, 0, 0,
	297, 231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 200, 162, 140,
	242, 298, 181, 0, 0, 0, 122, 123, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 388, 0, 187, 0, 0, 0, 0,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 205, 136, 149, 0, 0, 241, 275, 279, 0,
	0, 0, 165, 0, 277, 254, 322, 0, 258, 276,
	213, 311, 269, 321, 334, 335, 171, 235, 328, 306,
	331, 343, 150, 168, 248, 302, 325, 294, 230, 308,
	204, 293, 186, 139, 142, 304, 319, 159, 287, 0,
	0, 0, 144, 317, 301, 228, 201, 202, 143, 0,
	273, 172, 184, 167, 244, 314, 315, 166, 344, 151,
	330, 146, 152, 329, 237, 310, 318, 229, 221, 145,
	316, 227, 220, 207, 178, 192, 267, 216, 268, 193,
	233, 232, 234, 0, 141, 0, 299, 326, 345, 156,
	0, 0, 307, 339, 342, 0, 270, 157, 185, 177,
	266, 183, 210, 338, 340, 341, 155, 264, 190, 236,
	153, 195, 295, 206, 214, 0, 0, 253, 278, 160,
	324, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 135, 147, 211, 0, 271, 182, 327, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 138, 148, 154, 161, 169,
	176, 180, 188, 191, 194, 197, 198, 199, 203, 219,
	223, 224, 225, 226, 238, 239, 240, 243, 246, 247,
	249, 251, 252, 255, 259, 260, 261, 262, 263, 265,
	272, 274, 280, 281, 282, 283, 284, 285, 286, 289,
	290, 291, 292, 300, 303, 312, 313, 323, 332, 336,
	387, 320, 337, 245, 218, 0, 0, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 209, 0,
	0, 257, 0, 288, 164, 217, 215, 309, 179, 175,
	173, 163, 196, 222, 256, 305, 250, 0, 212, 0,
	0, 297, 231, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 200, 162,
	140, 242, 298, 181, 0, 0, 0, 122, 123, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 130,
	0, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 205, 136, 149, 0, 0, 241, 275, 279,
	0, 0, 0, 165, 0, 277, 254, 322, 0, 258,
	276, 213, 311, 269, 321, 334, 335, 171, 235, 328,
	306, 331, 343, 150, 168, 248, 302, 325, 294, 230,
	308, 204, 293, 186, 139, 142, 304, 319, 159, 287,
	0, 0, 0, 144, 317, 301, 228, 201, 202, 143,
	0, 273, 172, 184, 167, 244, 314, 315, 166, 344,
	151, 330, 146, 152, 329, 237, 310, 318, 229, 221,
	145, 316, 227, 220, 207, 178, 192, 267, 216, 268,
	193, 233, 232, 234, 0, 141, 0, 299, 326, 345,
	156, 0, 0, 307, 339, 342, 0, 270, 157, 185,
	177, 266, 183, 210, 338, 340, 341, 155, 264, 190,
	236, 153, 195, 295, 206, 214, 0, 0, 253, 278,
	160, 324, 296, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 147, 211, 0, 271, 182, 327,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 138, 148, 154, 161,
	169, 176, 180, 188, 191, 194, 197, 198, 199, 203,
	219, 223, 224, 225, 226, 238, 239, 240, 243, 246,
	247, 249, 251, 252, 255, 259, 260, 261, 262, 263,
	265, 272, 274, 280, 281, 282, 283, 284, 285, 286,
	289, 290, 291, 292, 300, 303, 312, 313, 323, 332,
	336, 189, 320, 337, 245, 218, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 209,
	0, 0, 257, 0, 288, 164, 217, 215, 309, 179,
	175, 173, 163, 196, 222, 256, 305, 250, 0, 212,
	0, 0, 297, 231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 200,
	162, 140, 242, 298, 181, 0, 0, 0, 122, 123,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 205, 136, 149, 0, 0, 241, 275,
	279, 0, 0, 0, 165, 0, 277, 254, 322, 0,
	258, 276, 213, 311, 269, 321, 334, 335, 171, 235,
	328, 306, 331, 343, 150, 168, 248, 302, 325, 294,
	230, 308, 204, 293, 186, 139, 142, 304, 319, 159,
	287, 0, 0, 0, 144, 317, 301, 228, 201, 202,
	143, 0, 273, 172, 184, 167, 244, 314, 315, 166,
	344, 151, 330, 146, 152, 329, 237, 310, 318, 229,
	221, 145, 316, 227, 220, 207, 178, 192, 267, 216,
	268, 193, 233, 232, 234, 0, 141, 0, 299, 326,
	345, 156, 0, 0, 307, 339, 342, 0, 270, 157,
	185, 177, 266, 183, 210, 338, 340, 341, 155, 264,
	190, 236, 153, 195, 295, 206, 214, 0, 0, 253,
	278, 160, 324, 296, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 147, 211, 0, 271, 182,
	327, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 138, 148, 154,
	161, 169, 176, 180, 188, 191, 194, 197, 198, 199,
	203, 219, 223, 224, 225, 226, 238, 239, 240, 243,
	246, 247, 249, 251, 252, 255, 259, 260, 261, 262,
	263, 265, 272, 274, 280, 281, 282, 283, 284, 285,
	286, 289, 290, 291, 292, 300, 303, 312, 313, 323,
	332, 336, 189, 320, 337, 0, 218,
}

var yyPact = [...]int{
	2080, -1000, -297, 1157, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1130, 841, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	361, 840, 76, 1070, 307, 53, 595, 209, 49, 19754,
	191, 38, 20145, -1000, 46, -1000, 36, 20145, 41, 19363,
	-1000, -1000, -1000, 11119, 1016, -43, -60, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 861, 1095, 1102, 1124, 730,
	1259, -1000, 9542, 9542, 178, 178, 178, 7978, -1000, -1000,
	13869, 20145, 20145, 849, 175, 205, 175, -156, -1000, -1000,
	-1000, -1000, -1000, -1000, 1070, -1000, -1000, 116, -1000, -1000,
	806, -1000, 272, 339, 149, 149, 20145, -1000, 20145, 318,
	1070, 94, -1000, -1000, -1000, 20145, 173, 595, 173, 173,
	20145, -1000, 248, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20145, 1034, 427, 427,
	427, 427, 427, 427, 3, -1000, -1, 87, 84, 89,
	-31, 595, 113, -1000, 297, -1000, 79, 42, -1000, 427,
	5530, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 184,
	-1000, -1000, -1000, -1000, 20145, 18972, 176, 373, -1000, -1000,
	-1000, -1000, 667, 597, -1000, 11119, 476, 808, 808, -1000,
	-1000, 233, -1000, -1000, 11901, 11901, 11901, 11901, 11901, 11901,
	11901, 11901, 11901, 11901, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 808, 246,
	-1000, 10728, 808, 808, 808, 808, 808, 808, 808, 808,
	11119, 808, 808, 808, 808, 808, 808, 808, 808, 808,
	808, 808, 808, 808, 808, 808, 808, -1000, -1000, -1000,
	20145, -1000, 1130, -1000, 841, -1000, -1000, -1000, 1067, 11119,
	11119, 1130, -1000, 952, 9542, -1000, -1000, 1238, -1000, -1000,
	-1000, -1000, 411, 1144, -1000, 13074, 241, 1143, 18581, -1000,
	16619, 18190, 801, 7570, -100, -1000, -1000, -1000, 370, 15837,
	-1000, -1000, -1000, 1032, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 756, 20145, -1000, -1000,
	3486, 595, -1000, 838, -1000, 754, -1000, 817, 78, 367,
	20145, 384, 595, 595, -1000, -1000, -1000, 1031, 339, 307,
	-1000, -1000, -1000, 17792, 595, -1000, 837, -1000, 1075, 190,
	319, 319, 595, -1000, -1000, 940, -1000, 20145, 20145, -1000,
	5530, 100, 138, 117, 20145, 1070, 1015, 800, 182, 20145,
	1089, 885, 20145, 595, -1000, 6754, -1000, 427, -1000, 604,
	11119, -1000, -1000, -1000, -1000, -1000, 427, 20145, 427, 20145,
	427, 427, 427, 427, 399, 415, 399, -1000, -1000, -1000,
	-1000, 5530, 5530, 20145, 5530, 5530, 20145, 5530, 5530, 415,
	-1000, -1000, -1000, 323, -1000, 883, -1000, -1000, -1000, -1000,
	39, -1000, -1000, -1000, -1000, -1000, 1157, -1000, -1000, -1000,
	-135, 11119, 11119, 11119, 11119, 552, 320, 11901, 580, 424,
	11901, 11901, 11901, 11901, 11901, 11901, 11901, 11901, 11901, 11901,
	11901, 11901, 11901, 11901, 11901, 620, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 595, -1000, 1155, 671, 671, 265,
	265, 265, 265, 265, 265, 265, 265, 265, 12292, 8369,
	6754, 730, 745, 1130, 9542, 9542, 11119, 11119, 10324, 9933,
	9542, 1048, 365, 597, 20145, -1000, -1000, 11510, -1000, -1000,
	-1000, -1000, -1000, 613, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20145, 20145, 9542, 9542, 9542, 9542, 9542, -1000, 797,
	-1000, -179, 15446, 1102, 730, 1238, 1084, 1150, 309, 544,
	793, -1000, 451, 1102, 15055, 829, -1000, 1238, -1000, -1000,
	-1000, 20145, -1000, -1000, 17401, -1000, -1000, 6346, 20145, 107,
	20145, -1000, 780, 1027, -1000, -1000, -1000, 1091, 14664, 20145,
	818, 776, -1000, -1000, 239, 7162, -100, -1000, 7162, 782,
	-1000, -108, -113, 8760, 263, -1000, -1000, -1000, -1000, 4714,
	12683, 639, 394, -32, -1000, -1000, -1000, 817, -1000, 817,
	817, 817, 817, 6, 6, 6, 6, -1000, -1000, -1000,
	-1000, -1000, 836, 835, -1000, 817, 817, 817, 817, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 834, 834, 834, 823,
	823, 131, -1000, 11119, 85, 20145, 1081, 489, 63, 363,
	61, -1000, 1088, 867, -1000, 339, 690, -1000, 20145, 52,
	-1000, 128, -1000, 20145, 833, 1074, 319, 595, -1000, 595,
	-1000, -1000, -1000, -1000, -1000, 335, -1000, 238, 20145, -1000,
	20145, 20145, 20145, 20145, 20145, 217, 86, 20145, 20145, 791,
	-1000, 20145, 5530, -1000, -1000, -1000, -1000, -1000, -1000, 597,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 427, 20145,
	20145, 20145, -1000, -1000, 427, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 20145, -1000, 602, 20145, 20145, -1000, -1000,
	-1000, -1000, -1000, 597, 320, 345, 349, -1000, -1000, 442,
	-1000, -1000, 1870, -1000, -1000, -1000, -1000, 580, 11901, 11901,
	11901, 293, 1870, 1902, 504, 1999, 265, 380, 380, 264,
	264, 264, 264, 264, 395, 395, -1000, -1000, -1000, 613,
	-1000, -1000, -1000, 613, 9542, 9542, 787, 808, 237, -1000,
	861, -1000, -1000, 1102, 732, 732, 566, 448, 362, 1142,
	732, 357, 1141, 732, 732, 9542, -1000, -1000, 389, -1000,
	11119, 613, -1000, 491, 785, 783, 732, 613, 613, 732,
	732, 20145, -1000, -287, -1000, -132, 286, 808, -1000, 17010,
	-1000, -1000, 1067, -1000, -1000, 994, -1000, 926, 11119, 11119,
	11119, -1000, -1000, -1000, 1067, 1109, -1000, 960, 958, 1136,
	9542, 16619, 1238, -1000, -1000, -1000, 236, 1136, 822, 808,
	-1000, 20145, 16619, 16619, 16619, 16619, 16619, -1000, 899, 897,
	-1000, 910, 906, 964, 20145, -1000, 743, 730, 14664, 107,
	767, 16619, 20145, -1000, -1000, 16619, 20145, 5938, -1000, 782,
	-100, -104, -1000, -1000, -1000, -1000, 597, -1000, 647, 779,
	4306, -1000, -1000, -1000, -1000, 165, -1000, -1000, -1000, -1000,
	1039, -1000, 397, -36, -1000, -1000, 6, 6, -1000, -1000,
	263, 1029, 263, 263, 263, 601, 601, -1000, -1000, -1000,
	-1000, -1000, 484, -1000, -1000, -1000, 454, -1000, -1000, 574,
	890, 85, -1000, -1000, 339, 599, 1020, 20145, -1000, -1000,
	637, 187, 55, 83, -1000, -1000, -1000, -1000, 882, -1000,
	633, -1000, -1000, 741, -1000, 50, 20145, -1000, 739, 20145,
	-1000, 595, -1000, -1000, 1038, 1036, 6754, 52, 860, -1000,
	-1000, -1000, -1000, 67, 99, 93, 180, -1000, 5530, -1000,
	-1000, -1000, -1000, 399, -1000, 399, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 293, 1870, 1855, -1000, 11901, 11901, -1000,
	-1000, 732, 732, 9542, 6754, 1130, 1067, -1000, -1000, 109,
	620, 109, 11901, 11901, -1000, 11901, 11901, -1000, -175, 830,
	358, -1000, 11119, 569, -1000, -1000, 11901, 11901, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 204, 202, 198,
	20145, -1000, -1000, 539, 596, 921, 597, 597, -1000, -1000,
	20145, -1000, -1000, -1000, -1000, 1134, 11119, -1000, 773, -1000,
	5122, 1102, 878, 20145, 808, 1157, 13478, 20145, 795, -1000,
	359, 1027, 872, 877, 866, -1000, -1000, -1000, -1000, 896,
	-1000, 846, -1000, -1000, -1000, -1000, -1000, 730, 1136, 16619,
	750, -1000, 750, -1000, 232, -1000, -1000, -1000, -121, -142,
	-1000, -1000, -1000, 4714, -1000, 4714, -1000, 876, 11901, -1000,
	-1000, -1000, 263, 263, -1000, 325, -1000, -1000, -1000, 725,
	-1000, 723, 770, 721, 30, -1000, 848, 1026, 339, 339,
	-1000, 453, -1000, 595, -1000, -1000, 20145, 62, -1000, 832,
	577, -1000, 20145, -1000, -1000, 20145, -1000, -1000, 20145, -1000,
	85, 719, -1000, -1000, -1000, 671, -1000, 50, -180, 595,
	20145, 20145, 20145, -1000, 20145, -1000, 427, 427, -1000, 11901,
	1870, 1870, -1000, -1000, 613, -1000, 1102, -1000, 613, 817,
	817, -1000, 817, 823, -1000, 817, 29, 817, 26, 613,
	613, 1840, 1811, 1776, 1410, 808, -163, -1000, 597, 11119,
	1181, 950, 808, 808, 808, 713, -1000, 576, 6, -1000,
	-1000, -1000, 1132, 1120, 597, -1000, -1000, -1000, 1077, 710,
	656, -1000, -1000, 9151, 715, 955, 227, 713, 1130, 20145,
	11119, -1000, -1000, 11119, 814, -1000, 11119, -1000, -1000, -1000,
	1130, 1130, 750, -1000, -1000, 278, -1000, -1000, -1000, 4306,
	-1000, -26, 1149, 1870, -1000, -1000, -1000, -1000, 6, 572,
	6, 445, -1000, 417, -1000, -1000, -222, -1000, -1000, 828,
	922, -1000, -1000, 812, -1000, -1000, -1000, 627, -1000, -1000,
	-1000, -1000, -1000, 120, 20145, -1000, -1000, -1000, 6754, -1000,
	-1000, 810, 863, -1000, -1000, -1000, -1000, 1870, -1000, 1067,
	-1000, -1000, 164, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 11901, 11901, 11901, 11901, 11901, 1102, 571, 597, 11901,
	11901, 16228, 20145, 20145, 14260, 20145, 6, -74, -1000, 11119,
	11119, 1073, -1000, 808, -1000, 762, 20145, 808, 20145, -1000,
	1102, -1000, 597, 597, 20145, 597, 1102, -1000, 270, -1000,
	-139, 263, -1000, 263, 624, 619, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1085, 20145, -1000, 20145, -1000, 669,
	-1000, 337, 20145, 20145, -1000, -1000, -1000, 491, 491, 491,
	491, 92, 613, -1000, 491, 491, 699, -1000, 699, 699,
	286, -1000, -282, -1000, 1008, 1005, 597, 667, 1148, -1000,
	808, 1157, 224, 656, -1000, -1000, 697, -1000, 405, 1072,
	-1000, 1068, -1000, -1000, -1000, -1000, -1000, 841, 689, 672,
	6754, 4714, 662, -1000, -1000, -1000, -1000, -1000, 613, 82,
	-183, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -74, 192,
	-1000, 967, 965, 1119, 20145, 656, 20145, -1000, -1000, 556,
	-1000, -1000, 134, -1000, 20145, -1000, -1000, 860, -1000, 918,
	-178, -187, 974, 979, 979, 1005, 1110, 1003, 985, -1000,
	554, 652, -1000, -1000, -1000, -81, 630, -180, -1000, 907,
	-1000, 966, 511, -1000, -1000, -1000, -1000, 524, -1000, 1108,
	1107, -1000, 130, -1000, -1000, 875, -1000, -181, -1000, 483,
	-1000, -1000, -1000, 499, 493, 70, 870, -1000, 1140, -185,
	-1000, -1000, -1000, -1000, -1000, -1000, 1147, 282, 282, -188,
	-1000, -1000, -1000, 127, 488, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1498, 1497, 17, 83, 86, 1493, 1491, 1490, 1488,
	132, 130, 127, 1487, 1486, 1485, 1481, 1480, 1479, 1478,
	1477, 1469, 1468, 1467, 1466, 109, 1465, 1464, 1463, 1462,
	1461, 107, 106, 433, 1460, 1459, 1458, 1457, 1452, 1451,
	1450, 1449, 1446, 1445, 1443, 1442, 1439, 1438, 110, 1437,
	1436, 1434, 1432, 1429, 1428, 1422, 1421, 1415, 1413, 1410,
	102, 1408, 45, 334, 49, 73, 1407, 69, 1406, 1405,
	1404, 1403, 1402, 530, 1399, 41, 66, 79, 1398, 33,
	1397, 1396, 108, 1395, 1394, 67, 1392, 1390, 1829, 1389,
	70, 76, 15, 32, 1383, 1381, 1376, 1375, 30, 2582,
	1374, 1373, 21, 1372, 1370, 120, 1369, 84, 26, 16,
	13, 22, 1368, 80, 1365, 35, 56, 27, 1364, 71,
	1362, 1360, 1359, 1358, 25, 1356, 68, 85, 29, 1353,
	6, 10, 1352, 1348, 1345, 1343, 1340, 1339, 4, 1336,
	1333, 1331, 1330, 40, 1329, 5, 1325, 65, 39, 20,
	12, 1323, 1316, 23, 101, 62, 77, 1300, 1294, 1293,
	652, 1292, 48, 1290, 134, 1287, 42, 1280, 405, 585,
	1277, 1276, 1276, 1276, 1276, 51, 893, 1917, 9, 98,
	1275, 1273, 1749, 55, 72, 19, 1271, 1269, 1268, 111,
	61, 46, 657, 44, 1267, 1266, 1263, 1259, 1258, 1251,
	1250, 307, 1249, 1247, 1242, 129, 31, 87, 24, 1238,
	1237, 1230, 1228, 64, 36, 1226, 105, 103, 59, 89,
	1225, 104, 74, 63, 1221, 43, 1216, 1214, 1213, 1211,
	34, 11, 1208, 96, 75, 54, 38, 37, 95, 1207,
	28, 1206, 1205, 82, 81, 1205, 1205, 1205, 8, 1204,
	3, 0, 1203, 7, 99, 1203, 1039, 459, 1, 1195,
	2, 1194, 1189, 78, 1184, 1181, 1178, 1170, 2599, 14,
	100, 1169, 112,
}

var yyR1 = [...]int{
	0, 266, 267, 267, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 251, 251, 251, 254, 254, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	270, 270, 82, 82, 83, 83, 147, 147, 13, 14,
	14, 156, 156, 155, 155, 155, 157, 157, 157, 157,
	192, 192, 15, 15, 15, 15, 15, 61, 61, 253,
	253, 252, 250, 250, 249, 249, 248, 23, 24, 28,
	29, 30, 256, 256, 226, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 228, 228, 215,
	215, 227, 227, 227, 227, 227, 227, 227, 214, 194,
	194, 194, 194, 197, 197, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 196, 196, 196, 196, 196, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 213, 213, 201,
	201, 207, 207, 208, 208, 208, 210, 210, 211, 211,
	170, 170, 170, 203, 203, 204, 204, 209, 209, 205,
	205, 205, 206, 206, 206, 212, 212, 212, 212, 212,
	202, 202, 216, 240, 240, 239, 239, 235, 235, 235,
	235, 225, 225, 232, 232, 232, 232, 232, 224, 224,
	220, 220, 220, 221, 221, 222, 222, 219, 219, 223,
	223, 234, 234, 233, 217, 217, 218, 218, 243, 243,
	243, 243, 244, 259, 260, 258, 258, 258, 258, 258,
	171, 171, 171, 229, 229, 229, 230, 230, 230, 231,
	231, 231, 257, 257, 116, 116, 117, 117, 27, 27,
	26, 26, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 247,
	245, 245, 246, 246, 17, 22, 22, 18, 18, 18,
	18, 19, 19, 36, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 163, 163, 261, 261, 165, 165, 161, 161, 164,
	164, 162, 162, 162, 166, 166, 166, 167, 167, 265,
	265, 265, 38, 38, 40, 40, 41, 42, 42, 187,
	187, 188, 188, 43, 44, 53, 53, 53, 53, 53,
	53, 55, 55, 55, 7, 7, 7, 7, 50, 50,
	50, 6, 6, 39, 39, 46, 262, 262, 263, 264,
	264, 264, 264, 47, 20, 271, 48, 49, 49, 60,
	60, 60, 56, 56, 56, 59, 59, 59, 64, 64,
	66, 66, 66, 66, 66, 67, 67, 67, 67, 67,
	67, 63, 63, 65, 65, 65, 65, 180, 180, 180,
	179, 179, 74, 74, 75, 75, 76, 76, 77, 77,
	77, 114, 91, 91, 146, 146, 145, 145, 148, 148,
	78, 78, 78, 78, 79, 79, 80, 80, 81, 81,
	186, 186, 185, 185, 185, 184, 184, 84, 84, 84,
	86, 85, 85, 85, 85, 87, 87, 89, 89, 88,
	88, 90, 92, 92, 92, 92, 92, 93, 93, 73,
	73, 73, 73, 73, 73, 73, 73, 159, 159, 95,
	95, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 106, 106, 106, 106, 106, 106, 96, 96, 96,
	96, 96, 96, 96, 62, 62, 107, 107, 107, 113,
	108, 108, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 103, 103, 103, 103,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 272,
	272, 105, 104, 104, 104, 104, 104, 104, 104, 58,
	58, 58, 58, 58, 191, 191, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 120,
	120, 57, 57, 118, 118, 119, 121, 121, 115, 115,
	115, 98, 98, 98, 98, 98, 98, 98, 98, 100,
	100, 100, 122, 122, 123, 123, 124, 124, 125, 125,
	126, 127, 127, 127, 128, 128, 128, 128, 241, 241,
	241, 241, 241, 236, 236, 236, 236, 237, 237, 237,
	68, 68, 68, 68, 70, 70, 69, 69, 51, 51,
	52, 52, 52, 71, 71, 72, 72, 72, 72, 143,
	143, 143, 129, 129, 129, 129, 134, 134, 134, 130,
	130, 132, 132, 132, 133, 133, 133, 131, 137, 137,
	139, 139, 138, 138, 136, 136, 141, 141, 140, 140,
	135, 135, 97, 97, 97, 97, 97, 144, 144, 144,
	144, 149, 149, 109, 109, 111, 111, 110, 112, 150,
	150, 153, 151, 151, 154, 154, 154, 154, 154, 152,
	152, 152, 181, 181, 181, 158, 158, 168, 168, 169,
	169, 160, 160, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 173, 173, 173, 174, 174, 142, 142,
	142, 142, 242, 242, 238, 177, 177, 178, 178, 182,
	182, 183, 183, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 268, 269, 189, 190, 190,
	190,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 3, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 0, 1, 0, 2, 0, 2, 0, 1,
	1, 3, 2, 2, 2, 5, 5, 3, 3, 3,
	5, 6, 6, 2, 4, 3, 6, 7, 5, 5,
	5, 12, 7, 5, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 3, 8, 8, 3, 3, 5, 4, 6, 5,
	4, 3, 2, 3, 4, 3, 3, 3, 3, 3,
	3, 4, 2, 4, 4, 4, 4, 4, 5, 7,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	7, 2, 4, 5, 4, 3, 3, 5, 2, 3,
	3, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 2, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 0, 1,
	0, 1, 2, 3, 4, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 2, 1, 3, 1, 1, 1, 3,
	3, 3, 3, 7, 0, 3, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 5, 4, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 3,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 4, 5, 5, 6,
	4, 4, 6, 6, 6, 8, 8, 8, 8, 9,
	8, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 8, 8, 0,
	2, 3, 4, 4, 4, 4, 4, 4, 4, 0,
	3, 4, 7, 3, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 0,
	2, 4, 0, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 4,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -266, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -268, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 146, -29, -24, 147, -30, 149, 148, 183,
	150, 176, 70, 211, 212, 214, 215, 216, 217, -55,
	181, 182, 152, 35, 41, 32, 33, 80, 9, 309,
	178, 177, 26, -267, 413, -60, 5, -124, 16, -3,
	-48, -271, -48, -48, -48, -48, -48, -48, -226, -228,
	80, 119, 80, -61, 155, -142, -256, 100, 161, 164,
	165, 300, 154, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 151, 76, 147, 153, 155, -256, 157, 271,
	-254, -251, 83, 84, 85, 155, 155, 156, 157, -256,
	155, -88, -182, -251, -176, 319, 169, 351, 352, 210,
	76, 261, 211, 225, 219, 246, 238, 320, 353, 170,
	199, 236, 239, 287, 354, 283, 266, 274, 94, 214,
	296, 355, 75, 47, 40, 179, 234, 230, 200, 356,
	328, 193, 228, 46, 28, 45, 357, 276, 251, 44,
	358, 79, 324, 278, 229, 275, 209, 152, 359, 407,
	285, 360, 252, 256, 361, 288, 48, 362, 363, 364,
	74, 223, 224, 365, 207, 168, 290, 250, 166, 34,
	279, 321, 54, 187, 291, 42, 254, 41, 411, 366,
	249, 245, 49, 367, 368, 369, 370, 248, 222, 244,
	205, 58, 258, 257, 259, 194, 286, 241, 371, 372,
	373, 173, 77, 374, 231, 19, 375, 376, 201, 377,
	52, 378, 379, 294, 182, 380, 50, 37, 185, 381,
	382, 383, 384, 385, 284, 386, 277, 253, 255, 189,
	273, 323, 387, 227, 388, 174, 186, 181, 295, 175,
	389, 390, 391, 392, 393, 394, 395, 215, 39, 396,
	397, 398, 399, 208, 204, 289, 298, 57, 78, 263,
	400, 221, 202, 401, 212, 51, 196, 269, 206, 43,
	242, 188, 402, 403, 232, 233, 247, 220, 243, 213,
	408, 190, 183, 404, 297, 203, 264, 325, 195, 240,
	237, 197, 405, 157, 191, 192, 406, 409, 280, 270,
	281, 282, 271, 198, 235, 265, 155, 239, 287, 266,
	267, 268, 279, 280, 285, 284, 189, -265, 288, 155,
	-161, 137, 146, 276, -165, 277, 270, 271, 198, -261,
	-251, 289, 411, 272, 278, 282, 281, -182, 213, -187,
	218, -177, -251, -176, 216, -88, -53, 407, 150, -189,
	-189, -189, -108, -73, -94, 103, -99, 30, 24, -98,
	-95, -115, -112, -113, 137, 138, 140, 139, 141, 126,
	127, 134, 104, 142, -103, -101, -102, -104, 87, 86,
	95, 88, 89, 90, 91, 96, 97, 98, -177, -182,
	-110, -268, 64, 65, 310, 311, 312, 313, 318, 314,
	106, 53, 299, 308, 307, 306, 303, 304, 301, 302,
	316, 317, 160, 300, 154, 132, 309, -251, -176, 40,
	269, 269, -5, -4, -268, 6, 21, 22, -128, 18,
	17, -269, 82, -56, -66, 59, 60, -67, 22, 36,
	63, 61, -49, -65, 128, -73, -182, -65, -160, 159,
	-160, -160, -151, -192, 213, -154, 289, 288, -178, -152,
	-177, -175, 287, 239, 286, 151, 326, 102, 23, 25,
	105, 137, 17, 106, 167, 136, 163, 310, 146, 68,
	327, 301, 302, 299, 305, 312, 313, 300, 267, 30,
	11, 329, 26, 177, 22, 36, 130, 148, 109, 110,
	180, 24, 178, 98, 332, 20, 71, 172, 12, 165,
	14, 333, 334, 15, 160, 159, 121, 156, 66, 9,
	142, 27, 118, 62, 335, 29, 336, 337, 338, 339,
	64, 119, 18, 303, 304, 32, 412, 340, 318, 184,
	132, 69, 55, 103, 341, 342, 96, 343, 99, 72,
	100, 16, 67, 38, 344, 345, 162, 346, 292, 347,
	120, 149, 309, 65, 348, 154, 268, 6, 315, 31,
	176, 164, 63, 349, 155, 108, 316, 317, 158, 97,
	5, 161, 33, 10, 70, 73, 306, 307, 308, 53,
	322, 107, 13, 350, 293, 101, -227, 119, -214, -218,
	-177, 171, -244, 167, -88, -234, -233, -177, -68, 76,
	-169, 160, 156, -169, 309, -31, -32, 239, 136, 81,
	-218, -217, -216, -257, 171, -243, -232, 163, 172, -224,
	164, 165, -219, 156, 29, -225, 111, -257, -257, -88,
	-88, 146, 148, 151, 72, -33, 195, -22, -88, -168,
	160, -251, -168, -168, -88, 143, -88, 31, -166, 119,
	13, -166, -166, -166, -166, -166, 196, 283, 196, 283,
	196, 197, 196, 197, 196, -164, -163, 274, 275, 269,
	273, -251, 300, 285, -251, 189, 155, 190, 157, -220,
	156, 34, 168, 197, 269, 192, -166, -190, -268, -178,
	158, -177, -50, -177, 87, -7, -3, -11, -10, -12,
	111, 81, 102, 100, 101, 118, -73, -96, 121, 103,
	119, 120, 105, 123, 122, 133, 126, 127, 128, 129,
	130, 131, 132, 124, 125, 136, 111, 112, 113, 114,
	115, 116, 117, -159, -268, -113, -268, 144, 145, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -268,
	143, -2, -108, -4, -268, -268, -268, -268, -268, -268,
	-268, -268, -120, -73, -268, -272, -105, -268, -272, -105,
	-272, -105, -272, -268, -272, -105, -272, -105, -272, -272,
	-105, -268, -268, -268, -268, -268, -268, -268, -189, -262,
	-263, -91, -88, -124, -3, -48, -143, 20, 32, -73,
	-125, -126, -73, -124, 55, -63, -65, -67, 59, 60,
	93, 12, -180, -179, 23, -177, 87, 143, 12, -89,
	27, -88, -75, -76, -77, -78, -91, -114, -268, 12,
	-82, -83, -88, -90, -182, 81, 213, -154, -192, -156,
	-155, 290, 292, 111, -181, -177, 87, 30, 31, 82,
	81, -88, -194, -197, -199, -198, -200, -195, -196, 236,
	237, 137, 240, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 31, 179, 232, 233, 234, 235, 252,
	253, 254, 255, 256, 257, 258, 259, 219, 238, 320,
	220, 221, 222, 223, 224, 225, 227, 228, 229, 230,
	231, -254, -251, 80, 82, 81, -201, 80, -71, 200,
	111, -88, 103, -251, -251, 31, -225, -25, 80, -214,
	-223, -254, -251, 80, 29, 162, 161, -222, -219, -222,
	-223, -251, 30, 74, 75, -115, -177, -182, -115, -190,
	191, 191, 155, 155, 204, -88, 40, 81, 158, -82,
	24, 72, -88, -251, -183, -182, -175, -166, 87, -73,
	-166, -88, -166, -88, -166, -166, -166, -166, -162, 12,
	121, -221, 12, 121, -162, -190, -190, -88, -190, -190,
	-88, -190, -190, -221, -167, 119, 72, -188, 216, 250,
	408, 409, 410, -73, -73, -73, -73, -106, 96, 103,
	97, 98, -99, -107, -110, -113, 92, 121, 119, 120,
	105, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -191, -251, 87, -251,
	-98, -98, -177, -64, 22, 36, -63, -178, -183, -175,
	-60, -269, -269, -124, -63, -63, -73, -73, -115, 87,
	-63, -115, 87, -63, -63, -59, 22, 36, -118, -119,
	107, -115, -269, -99, -177, -177, -63, -64, -64, -63,
	-63, 81, -264, 292, 293, 412, -185, 185, -184, 23,
	-182, 87, -128, -269, -129, 27, 10, 121, 81, 19,
	81, -127, 25, 26, -128, -100, -177, 88, 91, -74,
	81, 12, -67, -88, -179, 128, -183, -88, -147, 185,
	-88, 31, 81, -84, -86, -85, -87, 62, 66, 68,
	63, 64, 65, 69, -186, 23, -75, -3, -268, -88,
	-82, -270, 81, 12, 73, -270, 81, 143, -154, -156,
	81, 291, 293, 294, 72, 99, -73, -206, 136, -229,
	-230, -231, -178, 87, 88, -214, -216, -217, -218, 82,
	-170, 96, 103, -210, 264, -201, -201, -201, -201, -201,
	-205, 239, -205, -205, -205, 80, 80, -201, -201, -201,
	-201, -207, 80, -207, -207, -208, 80, -208, -244, -73,
	-240, -239, -235, -238, 166, 94, 322, 73, -233, -127,
	88, -70, 202, 111, 203, 205, 206, 24, -242, -238,
	-225, -251, 87, -215, -214, -116, 209, -243, -234, 80,
	29, -222, -223, -223, 148, 31, 143, -214, -88, -88,
	-88, -88, -88, 151, 148, 193, -88, -88, -88, -190,
	-166, -182, -182, -88, -166, -88, 87, -88, -177, 96,
	97, 98, -107, -99, -99, -99, -62, 180, 102, -269,
	-269, -63, -63, -268, 143, -5, -128, -269, -269, 81,
	73, 23, 12, 12, -269, 12, 12, -269, -269, -63,
	-121, -119, 109, -73, -269, -269, 81, 81, -269, -269,
	-269, -269, -269, -263, 411, 293, -92, 70, 159, 71,
	-268, -184, -143, 38, 46, 57, -73, -73, -126, -143,
	-158, 20, 12, 53, 53, -93, 13, -65, -75, -67,
	143, -93, -97, 31, 53, -3, -268, -268, -150, -153,
	-115, -76, -77, -77, -76, -77, 62, 62, 62, 67,
	62, 67, 62, -85, -182, -269, -269, -3, -147, 73,
	-75, -88, -75, -90, -182, 128, -155, -157, 295, 292,
	298, -251, 87, 81, -231, 111, -218, -203, 30, 96,
	-211, 265, -205, -205, -206, 31, -206, -206, -206, -213,
	87, -213, 88, 88, 82, -241, -236, -237, 32, 76,
	-235, -225, 87, 37, -177, 82, 157, 208, -72, 305,
	87, 83, 72, -251, 87, 81, 82, -117, 210, -115,
	82, -145, -177, -223, 30, 30, -178, -116, -253, 73,
	191, 261, 191, 194, 158, -190, -162, -162, -62, 102,
	-99, -99, -269, -269, -64, -178, -124, -143, -193, 137,
	236, 179, 234, 230, 250, 241, 263, 232, 264, -191,
	-193, -99, -99, -99, -99, 319, -124, 110, -73, 108,
	-99, -99, 156, 156, 156, -148, -177, 39, 87, 87,
	58, -88, -122, 14, -73, 128, -128, -149, 72, -150,
	-109, -111, -110, -268, -144, -269, -177, -148, -93, 81,
	111, -80, -79, 72, 73, -81, 72, -79, 62, 62,
	-269, -93, -75, -93, -93, 143, 292, 296, 297, -230,
	-231, -204, 72, -99, -206, -206, -251, 137, 82, 81,
	82, 81, 82, 81, -171, 357, 103, -237, -236, -225,
	-225, 88, -251, -88, -69, 200, 207, 80, 84, -88,
	-214, -115, -240, 82, 81, -98, -117, -250, 322, -252,
	-251, -177, -177, -177, -88, -166, -166, -99, -269, -128,
	-269, -201, -201, -201, -208, -201, 224, -201, 224, -269,
	-269, 20, 20, 20, 20, -268, -57, 315, -73, 81,
	81, -268, -268, -268, -269, 81, 87, -205, -123, 15,
	17, 28, -149, 81, -269, -269, 81, 53, 143, -269,
	-124, -153, -73, -73, 80, -73, -124, -93, -209, 261,
	10, -205, 87, -205, 88, 88, 357, 30, 77, 78,
	79, 30, 74, 75, -146, 80, 82, 174, -177, -249,
	-248, -178, 80, 73, -143, -205, -251, -99, -99, -99,
	-99, -99, -128, 87, -99, -99, -145, -269, -145, -145,
	-185, -177, -205, -131, -136, -164, -73, -108, 29, -111,
	53, -3, -177, -109, -177, -128, -145, -128, -212, 162,
	29, 161, -102, -206, -206, 82, 82, 23, -145, -88,
	81, 111, -145, -88, -269, -269, -269, -269, -58, 121,
	322, -269, -269, -269, -269, -269, -269, -92, -134, 407,
	-137, 42, -138, 43, 10, -109, 143, 82, -202, 94,
	29, 29, -3, 82, 80, -248, -231, 82, -269, 320,
	69, 323, -131, 47, 242, -139, 51, -140, -135, 52,
	17, -150, -177, 87, -51, 322, -145, -253, 58, 321,
	324, -132, 49, -130, 48, -130, -138, 17, -141, 44,
	45, 87, -52, 199, 411, 82, -250, 58, -133, 50,
	72, 99, 87, 17, 17, 167, -259, -260, 72, 322,
	72, 99, 87, 87, 201, -260, 72, 11, 10, 323,
	-258, 175, 170, 173, 31, -258, 324, 169, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 696, 0, 435, 435, 435, 435, 435, 435, 435,
	0, 0, -2, -2, 278, 0, 36, 0, 0, 0,
	0, -2, 393, 394, 0, 396, -2, 0, 0, 405,
	1187, 1187, 1187, 0, 0, 0, 0, 1185, 53, 54,
	411, 412, 413, 1, 3, 0, 439, 704, 0, 0,
	-2, 437, 0, 0, 811, 811, 811, 0, 82, 83,
	0, 0, 0, 720, 809, 0, 809, 0, 829, 830,
	831, 102, 103, 86, -2, 107, 108, 0, 112, 293,
	279, 280, -2, 221, 272, 272, 0, 101, 0, 0,
	111, 37, 33, 34, 35, 0, 807, 0, 807, 807,
	0, 332, 519, 839, 840, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 0, 0, 384, 384,
	384, 384, 384, 384, 0, 342, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 361, 0, 0, 368, 384,
	1188, 390, 391, 378, 376, 373, 374, 392, 395, 0,
	400, 403, 835, 836, 0, 418, 0, 1028, 410, 423,
	424, 434, 38, 570, 529, 0, 535, 537, 0, 572,
	573, 574, 575, 576, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 602, 603, 604, 605, 681, 682,
	683, 684, 685, 686, 687, 688, 539, 540, 678, 0,
	788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	669, 0, 639, 639, 639, 639, 639, 639, 639, 639,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 1187,
	0, 433, 696, 49, 0, 435, 440, 441, 739, 0,
	0, 696, 1186, 0, 0, -2, -2, 451, 457, 458,
	459, 460, 436, 0, 463, 467, 0, 0, 0, 812,
	0, 0, 68, 0, 1158, 792, -2, -2, 0, 0,
	837, 838, -2, 991, -2, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 973, 0, 0, 121, 122,
	0, 36, 247, 0, 117, 0, 241, 179, 733, 0,
	0, 0, 0, 0, 88, 109, 110, 0, 221, 0,
	282, 283, 284, 0, -2, 245, 0, 273, 0, 0,
	235, 235, 239, 237, 238, 0, 222, 0, 0, 98,
	1188, 0, 0, 0, 0, -2, 0, 324, 0, 0,
	0, 0, 0, 0, 331, 0, 333, 384, 335, 0,
	0, 336, 337, 338, 339, 340, 384, 0, 384, 0,
	384, 384, 384, 384, 381, 0, 381, 379, 380, 371,
	372, 1188, 1188, 0, 1188, 1188, 0, 1188, 1188, 0,
	230, 231, 232, 387, 365, 366, 369, 370, 1189, 1190,
	401, 404, 421, 419, 420, 422, 414, 415, 416, 417,
	0, 0, 0, 0, 0, 0, 533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 557, 558, 559, 560,
	561, 562, 563, 536, 0, 550, 0, 0, 0, 592,
	593, 594, 595, 596, 597, 598, 599, 600, 0, 448,
	0, 0, 0, 696, 0, 0, 0, 0, 0, 0,
	0, 445, 0, 670, 0, 623, 631, 0, 624, 632,
	625, 633, 626, 0, 627, 634, 628, 635, 629, 630,
	636, 0, 0, 0, 448, 448, 0, 0, 39, 425,
	426, 0, 502, 704, 0, 450, 742, 0, 0, 705,
	697, 698, 701, 704, 0, 472, 461, 452, 455, 456,
	438, 0, 464, 468, 0, 470, 471, 0, 0, 66,
	0, 518, 0, 474, 476, 477, 478, 500, 0, 0,
	0, 0, 62, 64, 519, 0, 1158, 798, 0, 70,
	71, 0, 0, 0, 202, 802, 803, 804, 800, 263,
	228, 0, 190, 186, 130, 131, 132, 179, 134, 179,
	179, 179, 179, 199, 199, 199, 199, 162, 163, 164,
	165, 166, 0, 0, 149, 179, 179, 179, 179, 169,
	170, 171, 172, 173, 174, 175, 176, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 181, 181, 181, 183,
	183, 0, 37, 0, 213, 0, 701, 0, 724, 0,
	0, 97, 0, 832, 100, 221, 0, 281, 0, 274,
	229, 0, -2, 0, 0, 0, 235, 239, 236, 239,
	227, 240, 287, 288, 289, 0, 678, 0, 0, 294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	808, 0, 1188, 330, 520, 841, 842, 334, 385, 386,
	341, 359, 343, 362, 344, 346, 345, 347, 384, 0,
	0, 0, 233, 234, 384, 350, 351, 352, 353, 354,
	355, 356, 357, 0, 364, 0, 0, 0, 402, 406,
	407, 408, 409, 571, 530, 531, 532, 534, 551, 0,
	553, 555, 541, 542, 566, 567, 568, 0, 0, 0,
	0, 564, 546, 0, 577, 578, 579, 580, 581, 582,
	583, 584, 585, 586, 587, 588, 591, 654, 655, 0,
	589, 590, 601, 0, 0, 0, 449, 679, 0, -2,
	0, 569, 787, 704, 0, 0, 0, 0, 574, 681,
	0, 574, 681, 0, 0, 0, 446, 447, 676, 673,
	0, 0, 640, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 428, 429, 431, 0, 522, 1097, 503, 0,
	505, 506, 739, 50, 40, 0, 740, 0, 0, 0,
	0, 700, 702, 703, 739, 0, 689, 0, 0, 527,
	0, 0, 453, 46, 469, 465, 0, 527, 0, 0,
	517, 0, 0, 0, 0, 0, 0, 507, 0, 0,
	510, 0, 0, 0, 0, 501, 0, 0, 0, -2,
	0, 0, 0, 60, 61, 0, 0, 0, 793, 69,
	0, 0, 74, 75, 794, 795, 796, 797, 0, 104,
	264, 266, 269, 270, 271, 123, 125, 126, 127, 118,
	193, 191, 0, 188, 187, 133, 199, 199, 156, 157,
	202, 0, 202, 202, 202, 0, 0, 150, 151, 152,
	153, 144, 0, 145, 146, 147, 0, 148, 246, 0,
	708, 214, 215, 217, 221, 0, 0, 0, 242, 243,
	0, 0, 0, 0, 721, 722, 723, 810, 0, 833,
	0, 115, 116, 0, 119, 276, 0, 244, 0, 0,
	223, 239, 224, 225, 0, 0, 0, 274, 89, 298,
	300, 299, 303, 0, 0, 0, 0, 325, 1188, 329,
	348, 382, 383, 381, 363, 381, 388, 367, 398, 552,
	554, 556, 543, 564, 547, 0, 544, 0, 0, 538,
	606, 0, 0, 448, 0, 696, 739, 610, 611, 0,
	0, 0, 0, 0, 647, 0, 0, 648, 0, 696,
	0, 674, 0, 0, 622, 641, 0, 0, 642, 643,
	644, 645, 646, 427, 430, 432, 482, 0, 0, 0,
	0, 504, 42, 0, 0, 0, 706, 707, 699, 41,
	0, 805, 806, 690, 691, 692, 0, 462, 473, 454,
	0, 704, 781, 0, 0, 773, 0, 0, 527, 789,
	0, 475, 496, 498, 0, 493, 508, 509, 511, 0,
	513, 0, 515, 516, 479, 480, 481, 0, 527, 0,
	527, 63, 527, 65, 0, 521, 72, 73, 0, 0,
	79, 203, 204, 0, 267, 0, 124, 195, 0, 192,
	129, 189, 202, 202, 158, 0, 159, 160, 161, 0,
	177, 0, 0, 0, 260, 84, 712, 711, 221, 221,
	216, 0, 219, 0, 834, 180, 0, 0, 734, 735,
	0, 738, 0, 113, 114, 0, 285, 286, 0, 275,
	213, 0, 486, 226, 290, 0, 679, 276, 92, 0,
	0, 0, 0, 296, 0, 328, 384, 384, 545, 0,
	565, 548, 607, 608, 0, 680, 704, 44, 0, 179,
	179, 659, 179, 183, 662, 179, 664, 179, 667, 0,
	0, 0, 0, 0, 0, 0, 671, 621, 677, 0,
	0, 0, 0, 0, 0, 0, 488, 0, 199, 744,
	741, 43, 694, 0, 528, 466, 47, 51, 0, 781,
	772, 783, 785, 0, 0, 0, 777, 0, 696, 0,
	0, 490, 497, 0, 0, 491, 0, 492, 512, 514,
	-2, 696, 527, 58, 59, 0, 76, 77, 78, 265,
	268, 197, 0, 194, 154, 155, 200, 201, 199, 0,
	199, 0, 184, 0, 252, 261, 0, 709, 710, 0,
	0, 218, 220, 484, 725, 726, 727, 0, 737, 99,
	120, 277, 212, 0, 0, 291, 292, 297, 0, 90,
	91, 0, 0, 302, 326, 349, 360, 549, 609, 739,
	612, 656, 199, 660, 661, 663, 665, 666, 668, 614,
	613, 0, 0, 0, 0, 0, 704, 0, 675, 0,
	0, 0, 0, 0, 502, 0, 199, 764, 48, 0,
	0, 0, 52, 0, 786, 0, 0, 0, 0, 67,
	704, 790, 791, 494, 0, 499, 704, 57, 205, 198,
	0, 202, 178, 202, 0, 0, 262, 713, 714, 715,
	716, 717, 718, 719, 0, 0, 736, 0, 487, 93,
	94, 0, 0, 0, 45, 657, 658, 0, 0, 0,
	0, 649, 0, 672, 0, 0, 0, 524, 0, 0,
	522, 489, 746, 745, 758, 762, 695, 693, 0, 784,
	0, 776, 779, 775, 778, 55, 0, 56, 210, 0,
	207, 209, 196, 167, 168, 182, 185, 0, 0, 0,
	0, 0, 0, 304, 615, 617, 616, 618, 0, 0,
	0, 620, 637, 638, 523, 525, 526, 483, 764, 0,
	757, 760, -2, 0, 0, 774, 0, 495, 128, 0,
	206, 208, 728, 485, 0, 95, 96, 89, 619, 0,
	0, 0, 751, 749, 749, 762, 0, 766, 0, 771,
	0, 782, 780, 211, 85, 730, 0, 92, 650, 0,
	653, 754, 0, 747, 750, 748, 759, 0, 765, 0,
	0, 763, 0, 731, 732, 248, 301, 651, 743, 0,
	752, 753, 761, 0, 0, 0, 249, 250, 0, 0,
	755, 756, 767, 769, 729, 251, 0, 0, 0, 0,
	253, 255, 256, 0, 0, 254, 652, 257, 258, 259,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 413,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:397
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:402
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:403
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:407
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:438
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:444
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:448
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:467
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:473
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:479
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:492
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:496
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:519
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:527
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:533
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:539
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:564
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:576
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:598
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:616
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:645
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:649
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:681
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:689
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:707
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:744
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:748
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:755
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:764
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:784
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:807
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:821
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:828
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:846
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:852
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:879
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:889
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:893
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:899
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:903
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:914
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:935
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:940
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:944
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:957
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:963
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1145
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1195
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1208
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1216
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1226
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1243
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1266
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1275
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1293
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1306
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1319
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.colKeyOpt = colKey
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1340
		{
			yyVAL.literal = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1350
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1355
		{
			yyVAL.indexOptions = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1365
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1394
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1416
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1425
		{
			yyVAL.str = ""
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = yyDollar[2].str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = "key"
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1492
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1524
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 249:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1536
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1581
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.boolean = true
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.boolean = false
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = yyDollar[1].str
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1637
		{
			yyVAL.bytes = []byte("")
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1643
		{
			yyVAL.colName = nil
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1652
		{
			yyVAL.colName = nil
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.alterOptions = nil
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1675
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1685
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1689
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1693
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1697
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1713
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1717
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1721
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1727
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1759
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1770
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 297:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1789
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1803
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 301:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1820
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 319:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1863
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 322:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1879
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 323:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1883
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1889
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1895
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1899
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1907
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1911
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1916
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1920
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1935
		{
			yyVAL.statement = &OtherRead{}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1985
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1989
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1993
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1997
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 349:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2001
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2013
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2034
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2046
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2059
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2069
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 367:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2082
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2091
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = ""
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = "extended "
		}
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = "full "
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2155
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = ""
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.showFilter = nil
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2183
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2189
		{
			yyVAL.showFilter = nil
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2193
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2199
		{
			yyVAL.empty = struct{}{}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.empty = struct{}{}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.empty = struct{}{}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2213
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2217
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.statement = &Begin{}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.statement = &Begin{}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.statement = &Commit{}
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.statement = &Rollback{}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2243
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.empty = struct{}{}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.empty = struct{}{}
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2253
		{
			yyVAL.empty = struct{}{}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.empty = struct{}{}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2260
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2266
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2271
		{
			yyVAL.explainType = EmptyType
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			yyVAL.explainType = JSONType
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.explainType = TreeType
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.explainType = VitessType
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.explainType = TraditionalType
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.explainType = AnalyzeType
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2297
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.statement = &OtherRead{}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.lockType = Read
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2388
		{
			yyVAL.lockType = ReadLocal
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.lockType = Write
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2396
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2412
		{
			setAllowComments(yylex, true)
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2422
		{
			yyVAL.bytes2 = nil
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.boolean = true
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.boolean = false
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.boolean = true
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = SQLCacheStr
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2458
		{
			yyVAL.boolean = false
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.boolean = true
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.boolean = true
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2471
		{
			yyVAL.selectExprs = nil
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2480
		{
			yyVAL.strs = nil
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2496
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = SQLCacheStr
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = DistinctStr
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = DistinctStr
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = StraightJoinHint
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2532
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2550
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2555
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2570
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2575
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2579
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2589
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2599
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2607
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 483:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2623
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columns = nil
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2652
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2665
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2669
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2673
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2677
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2683
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2685
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2689
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2695
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2700
		{
			yyVAL.empty = struct{}{}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.empty = struct{}{}
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2713
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.joinType = NormalJoinType
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.joinType = NormalJoinType
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.joinType = NormalJoinType
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.joinType = StraightJoinType
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.joinType = LeftJoinType
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2750
		{
			yyVAL.joinType = LeftJoinType
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.joinType = RightJoinType
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2758
		{
			yyVAL.joinType = RightJoinType
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2798
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2803
		{
			yyVAL.indexHints = nil
		}
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2807
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2811
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2815
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2819
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2824
		{
			yyVAL.expr = nil
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2828
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2888
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2892
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2896
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2900
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2904
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2912
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2916
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2920
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2930
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2938
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2942
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2946
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2950
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2960
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2985
		{
			yyVAL.expr = nil
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2999
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3009
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3089
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3097
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3101
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3109
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3121
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3151
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3173
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3177
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 609:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3185
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3195
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3199
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3203
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3207
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 614:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3227
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 619:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3231
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 620:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3235
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3239
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3243
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3261
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3266
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3271
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3282
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3292
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3296
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3300
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3305
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 637:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 638:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3367
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3373
		{
			yyVAL.matchExprOption = NoOption
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3377
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3381
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 652:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3385
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3405
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3409
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3413
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3435
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3447
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3460
		{
			yyVAL.expr = nil
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = string("")
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3479
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3483
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3489
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3494
		{
			yyVAL.expr = nil
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3498
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 680:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3512
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &NullVal{}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3565
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3570
		{
			yyVAL.exprs = nil
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3579
		{
			yyVAL.expr = nil
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3583
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3588
		{
			yyVAL.orderBy = nil
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3598
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3608
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3613
		{
			yyVAL.orderDirection = AscOrder
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.orderDirection = AscOrder
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3621
		{
			yyVAL.orderDirection = DescOrder
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3626
		{
			yyVAL.limit = nil
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3630
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3634
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3638
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3643
		{
			yyVAL.indexOptions = nil
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3647
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3659
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3678
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3684
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = ""
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = yyDollar[3].str
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = yyDollar[2].str
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3742
		{
			yyVAL.str = "cascaded"
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = yyDollar[3].str
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3782
		{
			yyVAL.lock = NoLock
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.lock = ForUpdateLock
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3790
		{
			yyVAL.lock = ShareModeLock
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3795
		{
			yyVAL.selectInto = nil
		}
	case 743:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3799
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3807
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = ""
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3820
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = ""
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = " header"
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = ""
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = " manifest on"
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = " manifest off"
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = ""
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = " overwrite on"
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = " overwrite off"
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3861
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3870
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3897
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = ""
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3911
		{
			yyVAL.str = ""
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3915
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = ""
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.str = " optionally"
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3937
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3945
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3949
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3953
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3959
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3967
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 780:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3971
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3976
		{
			yyVAL.updateExprs = nil
		}
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3980
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3986
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3990
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3996
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4000
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4006
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4012
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4042
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4052
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4072
		{
			yyVAL.bytes = []byte("charset")
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4087
		{
			yyVAL.expr = &Default{}
		}
	case 807:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.boolean = false
		}
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4098
		{
			yyVAL.boolean = true
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4101
		{
			yyVAL.boolean = false
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.boolean = true
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4106
		{
			yyVAL.ignore = false
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.ignore = true
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4128
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4130
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4134
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4142
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.str = ""
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4153
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4156
		{
			yyVAL.indexOptions = nil
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4179
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4572
		{
			decNesting(yylex)
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4577
		{
			skipToEnd(yylex)
		}
	case 1188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4582
		{
			skipToEnd(yylex)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			skipToEnd(yylex)
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4590
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
