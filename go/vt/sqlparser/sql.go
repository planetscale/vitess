// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const UNDERSCORE_UTF8MB3 = 57540
const INTERVAL = 57541
const JSON_EXTRACT_OP = 57542
const JSON_UNQUOTE_EXTRACT_OP = 57543
const CREATE = 57544
const ALTER = 57545
const DROP = 57546
const RENAME = 57547
const ANALYZE = 57548
const ADD = 57549
const FLUSH = 57550
const CHANGE = 57551
const MODIFY = 57552
const DEALLOCATE = 57553
const REVERT = 57554
const SCHEMA = 57555
const TABLE = 57556
const INDEX = 57557
const VIEW = 57558
const TO = 57559
const IGNORE = 57560
const IF = 57561
const PRIMARY = 57562
const COLUMN = 57563
const SPATIAL = 57564
const FULLTEXT = 57565
const KEY_BLOCK_SIZE = 57566
const CHECK = 57567
const INDEXES = 57568
const ACTION = 57569
const CASCADE = 57570
const CONSTRAINT = 57571
const FOREIGN = 57572
const NO = 57573
const REFERENCES = 57574
const RESTRICT = 57575
const SHOW = 57576
const DESCRIBE = 57577
const EXPLAIN = 57578
const DATE = 57579
const ESCAPE = 57580
const REPAIR = 57581
const OPTIMIZE = 57582
const TRUNCATE = 57583
const COALESCE = 57584
const EXCHANGE = 57585
const REBUILD = 57586
const PARTITIONING = 57587
const REMOVE = 57588
const PREPARE = 57589
const EXECUTE = 57590
const MAXVALUE = 57591
const PARTITION = 57592
const REORGANIZE = 57593
const LESS = 57594
const THAN = 57595
const PROCEDURE = 57596
const TRIGGER = 57597
const VINDEX = 57598
const VINDEXES = 57599
const DIRECTORY = 57600
const NAME = 57601
const UPGRADE = 57602
const STATUS = 57603
const VARIABLES = 57604
const WARNINGS = 57605
const CASCADED = 57606
const DEFINER = 57607
const OPTION = 57608
const SQL = 57609
const UNDEFINED = 57610
const SEQUENCE = 57611
const MERGE = 57612
const TEMPORARY = 57613
const TEMPTABLE = 57614
const INVOKER = 57615
const SECURITY = 57616
const FIRST = 57617
const AFTER = 57618
const LAST = 57619
const VITESS_MIGRATION = 57620
const CANCEL = 57621
const RETRY = 57622
const COMPLETE = 57623
const CLEANUP = 57624
const BEGIN = 57625
const START = 57626
const TRANSACTION = 57627
const COMMIT = 57628
const ROLLBACK = 57629
const SAVEPOINT = 57630
const RELEASE = 57631
const WORK = 57632
const BIT = 57633
const TINYINT = 57634
const SMALLINT = 57635
const MEDIUMINT = 57636
const INT = 57637
const INTEGER = 57638
const BIGINT = 57639
const INTNUM = 57640
const REAL = 57641
const DOUBLE = 57642
const FLOAT_TYPE = 57643
const DECIMAL_TYPE = 57644
const NUMERIC = 57645
const TIME = 57646
const TIMESTAMP = 57647
const DATETIME = 57648
const YEAR = 57649
const CHAR = 57650
const VARCHAR = 57651
const BOOL = 57652
const CHARACTER = 57653
const VARBINARY = 57654
const NCHAR = 57655
const TEXT = 57656
const TINYTEXT = 57657
const MEDIUMTEXT = 57658
const LONGTEXT = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const JSON_SCHEMA_VALID = 57665
const JSON_SCHEMA_VALIDATION_REPORT = 57666
const ENUM = 57667
const GEOMETRY = 57668
const POINT = 57669
const LINESTRING = 57670
const POLYGON = 57671
const GEOMETRYCOLLECTION = 57672
const MULTIPOINT = 57673
const MULTILINESTRING = 57674
const MULTIPOLYGON = 57675
const ASCII = 57676
const UNICODE = 57677
const NULLX = 57678
const AUTO_INCREMENT = 57679
const APPROXNUM = 57680
const SIGNED = 57681
const UNSIGNED = 57682
const ZEROFILL = 57683
const CODE = 57684
const COLLATION = 57685
const COLUMNS = 57686
const DATABASES = 57687
const ENGINES = 57688
const EVENT = 57689
const EXTENDED = 57690
const FIELDS = 57691
const FULL = 57692
const FUNCTION = 57693
const GTID_EXECUTED = 57694
const KEYSPACES = 57695
const OPEN = 57696
const PLUGINS = 57697
const PRIVILEGES = 57698
const PROCESSLIST = 57699
const SCHEMAS = 57700
const TABLES = 57701
const TRIGGERS = 57702
const USER = 57703
const VGTID_EXECUTED = 57704
const VITESS_KEYSPACES = 57705
const VITESS_METADATA = 57706
const VITESS_MIGRATIONS = 57707
const VITESS_REPLICATION_STATUS = 57708
const VITESS_SHARDS = 57709
const VITESS_TABLETS = 57710
const VITESS_TARGET = 57711
const VSCHEMA = 57712
const NAMES = 57713
const GLOBAL = 57714
const SESSION = 57715
const ISOLATION = 57716
const LEVEL = 57717
const READ = 57718
const WRITE = 57719
const ONLY = 57720
const REPEATABLE = 57721
const COMMITTED = 57722
const UNCOMMITTED = 57723
const SERIALIZABLE = 57724
const CURRENT_TIMESTAMP = 57725
const DATABASE = 57726
const CURRENT_DATE = 57727
const NOW = 57728
const CURRENT_TIME = 57729
const LOCALTIME = 57730
const LOCALTIMESTAMP = 57731
const CURRENT_USER = 57732
const UTC_DATE = 57733
const UTC_TIME = 57734
const UTC_TIMESTAMP = 57735
const DAY = 57736
const DAY_HOUR = 57737
const DAY_MICROSECOND = 57738
const DAY_MINUTE = 57739
const DAY_SECOND = 57740
const HOUR = 57741
const HOUR_MICROSECOND = 57742
const HOUR_MINUTE = 57743
const HOUR_SECOND = 57744
const MICROSECOND = 57745
const MINUTE = 57746
const MINUTE_MICROSECOND = 57747
const MINUTE_SECOND = 57748
const MONTH = 57749
const QUARTER = 57750
const SECOND = 57751
const SECOND_MICROSECOND = 57752
const YEAR_MONTH = 57753
const WEEK = 57754
const REPLACE = 57755
const CONVERT = 57756
const CAST = 57757
const SUBSTR = 57758
const SUBSTRING = 57759
const GROUP_CONCAT = 57760
const SEPARATOR = 57761
const TIMESTAMPADD = 57762
const TIMESTAMPDIFF = 57763
const WEIGHT_STRING = 57764
const LTRIM = 57765
const RTRIM = 57766
const TRIM = 57767
const JSON_ARRAY = 57768
const JSON_OBJECT = 57769
const JSON_QUOTE = 57770
const JSON_DEPTH = 57771
const JSON_TYPE = 57772
const JSON_LENGTH = 57773
const JSON_VALID = 57774
const JSON_ARRAY_APPEND = 57775
const JSON_ARRAY_INSERT = 57776
const JSON_INSERT = 57777
const JSON_MERGE = 57778
const JSON_MERGE_PATCH = 57779
const JSON_MERGE_PRESERVE = 57780
const JSON_REMOVE = 57781
const JSON_REPLACE = 57782
const JSON_SET = 57783
const JSON_UNQUOTE = 57784
const MATCH = 57785
const AGAINST = 57786
const BOOLEAN = 57787
const LANGUAGE = 57788
const WITH = 57789
const QUERY = 57790
const EXPANSION = 57791
const WITHOUT = 57792
const VALIDATION = 57793
const UNUSED = 57794
const ARRAY = 57795
const CUME_DIST = 57796
const DESCRIPTION = 57797
const DENSE_RANK = 57798
const EMPTY = 57799
const EXCEPT = 57800
const FIRST_VALUE = 57801
const GROUPING = 57802
const GROUPS = 57803
const JSON_TABLE = 57804
const LAG = 57805
const LAST_VALUE = 57806
const LATERAL = 57807
const LEAD = 57808
const NTH_VALUE = 57809
const NTILE = 57810
const OF = 57811
const OVER = 57812
const PERCENT_RANK = 57813
const RANK = 57814
const RECURSIVE = 57815
const ROW_NUMBER = 57816
const SYSTEM = 57817
const WINDOW = 57818
const ACTIVE = 57819
const ADMIN = 57820
const AUTOEXTEND_SIZE = 57821
const BUCKETS = 57822
const CLONE = 57823
const COLUMN_FORMAT = 57824
const COMPONENT = 57825
const DEFINITION = 57826
const ENFORCED = 57827
const ENGINE_ATTRIBUTE = 57828
const EXCLUDE = 57829
const FOLLOWING = 57830
const GEOMCOLLECTION = 57831
const GET_MASTER_PUBLIC_KEY = 57832
const HISTOGRAM = 57833
const HISTORY = 57834
const INACTIVE = 57835
const INVISIBLE = 57836
const LOCKED = 57837
const MASTER_COMPRESSION_ALGORITHMS = 57838
const MASTER_PUBLIC_KEY_PATH = 57839
const MASTER_TLS_CIPHERSUITES = 57840
const MASTER_ZSTD_COMPRESSION_LEVEL = 57841
const NESTED = 57842
const NETWORK_NAMESPACE = 57843
const NOWAIT = 57844
const NULLS = 57845
const OJ = 57846
const OLD = 57847
const OPTIONAL = 57848
const ORDINALITY = 57849
const ORGANIZATION = 57850
const OTHERS = 57851
const PARTIAL = 57852
const PATH = 57853
const PERSIST = 57854
const PERSIST_ONLY = 57855
const PRECEDING = 57856
const PRIVILEGE_CHECKS_USER = 57857
const PROCESS = 57858
const RANDOM = 57859
const REFERENCE = 57860
const REQUIRE_ROW_FORMAT = 57861
const RESOURCE = 57862
const RESPECT = 57863
const RESTART = 57864
const RETAIN = 57865
const REUSE = 57866
const ROLE = 57867
const SECONDARY = 57868
const SECONDARY_ENGINE = 57869
const SECONDARY_ENGINE_ATTRIBUTE = 57870
const SECONDARY_LOAD = 57871
const SECONDARY_UNLOAD = 57872
const SIMPLE = 57873
const SKIP = 57874
const SRID = 57875
const THREAD_PRIORITY = 57876
const TIES = 57877
const UNBOUNDED = 57878
const VCPU = 57879
const VISIBLE = 57880
const RETURNING = 57881
const FORMAT = 57882
const TREE = 57883
const VITESS = 57884
const TRADITIONAL = 57885
const LOCAL = 57886
const LOW_PRIORITY = 57887
const NO_WRITE_TO_BINLOG = 57888
const LOGS = 57889
const ERROR = 57890
const GENERAL = 57891
const HOSTS = 57892
const OPTIMIZER_COSTS = 57893
const USER_RESOURCES = 57894
const SLOW = 57895
const CHANNEL = 57896
const RELAY = 57897
const EXPORT = 57898
const AVG_ROW_LENGTH = 57899
const CONNECTION = 57900
const CHECKSUM = 57901
const DELAY_KEY_WRITE = 57902
const ENCRYPTION = 57903
const ENGINE = 57904
const INSERT_METHOD = 57905
const MAX_ROWS = 57906
const MIN_ROWS = 57907
const PACK_KEYS = 57908
const PASSWORD = 57909
const FIXED = 57910
const DYNAMIC = 57911
const COMPRESSED = 57912
const REDUNDANT = 57913
const COMPACT = 57914
const ROW_FORMAT = 57915
const STATS_AUTO_RECALC = 57916
const STATS_PERSISTENT = 57917
const STATS_SAMPLE_PAGES = 57918
const STORAGE = 57919
const MEMORY = 57920
const DISK = 57921
const PARTITIONS = 57922
const LINEAR = 57923
const RANGE = 57924
const LIST = 57925
const SUBPARTITION = 57926
const SUBPARTITIONS = 57927
const HASH = 57928

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	604, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	328, 153,
	-2, 487,
	-1, 55,
	35, 718,
	232, 718,
	243, 718,
	278, 732,
	279, 732,
	-2, 720,
	-1, 60,
	234, 745,
	-2, 743,
	-1, 114,
	231, 1269,
	-2, 119,
	-1, 116,
	1, 146,
	604, 146,
	-2, 153,
	-1, 127,
	132, 378,
	237, 378,
	-2, 481,
	-1, 146,
	131, 153,
	171, 153,
	328, 153,
	-2, 496,
	-1, 687,
	216, 1290,
	-2, 1286,
	-1, 688,
	216, 1291,
	-2, 1287,
	-1, 763,
	59, 813,
	-2, 828,
	-1, 800,
	147, 1694,
	-2, 112,
	-1, 801,
	147, 1537,
	-2, 113,
	-1, 807,
	147, 1620,
	-2, 1263,
	-1, 955,
	147, 1466,
	-2, 1260,
	-1, 996,
	242, 41,
	247, 41,
	-2, 389,
	-1, 1079,
	1, 538,
	604, 538,
	-2, 153,
	-1, 1316,
	59, 814,
	-2, 833,
	-1, 1317,
	59, 815,
	-2, 834,
	-1, 1370,
	131, 153,
	171, 153,
	328, 153,
	-2, 428,
	-1, 1449,
	132, 378,
	237, 378,
	-2, 481,
	-1, 1458,
	242, 42,
	247, 42,
	-2, 390,
	-1, 1763,
	216, 1295,
	-2, 1289,
	-1, 1846,
	131, 153,
	171, 153,
	328, 153,
	-2, 429,
	-1, 1853,
	25, 174,
	-2, 176,
	-1, 2096,
	86, 39,
	-2, 870,
	-1, 2148,
	77, 94,
	86, 94,
	-2, 890,
	-1, 2215,
	579, 646,
	-2, 620,
	-1, 2349,
	49, 1231,
	-2, 1225,
	-1, 2565,
	86, 39,
	-2, 871,
	-1, 2603,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 862,
	-1, 2880,
	579, 646,
	-2, 634,
	-1, 2938,
	22, 1622,
	32, 1622,
	172, 1622,
	254, 1622,
	308, 1622,
	309, 1622,
	310, 1622,
	311, 1622,
	312, 1622,
	313, 1622,
	314, 1622,
	316, 1622,
	317, 1622,
	318, 1622,
	319, 1622,
	320, 1622,
	321, 1622,
	322, 1622,
	323, 1622,
	324, 1622,
	325, 1622,
	326, 1622,
	327, 1622,
	329, 1622,
	331, 1622,
	332, 1622,
	333, 1622,
	334, 1622,
	335, 1622,
	336, 1622,
	337, 1622,
	338, 1622,
	339, 1622,
	342, 1622,
	343, 1622,
	344, 1622,
	345, 1622,
	346, 1622,
	347, 1622,
	348, 1622,
	349, 1622,
	350, 1622,
	462, 1622,
	-2, 578,
}

const yyPrivate = 57344

const yyLast = 42702

var yyAct = [...]int{
	687, 2703, 2704, 2308, 2702, 2992, 3000, 2861, 2968, 1843,
	2969, 2679, 2936, 1373, 1797, 2496, 2920, 1777, 2402, 2409,
	2814, 2459, 2050, 2464, 2450, 778, 2461, 2460, 1142, 2458,
	2360, 96, 696, 2463, 2462, 2666, 1779, 681, 2363, 2717,
	756, 680, 37, 2417, 2837, 689, 2084, 2479, 1913, 1331,
	2478, 186, 2574, 3, 186, 2361, 570, 186, 605, 2364,
	690, 2722, 585, 609, 186, 2307, 602, 678, 1295, 2568,
	1801, 2119, 186, 679, 631, 2481, 2270, 2142, 2358, 1816,
	2594, 2350, 2111, 2560, 1876, 603, 1427, 186, 2306, 2180,
	2212, 1091, 2253, 1901, 1881, 2181, 1944, 1832, 2182, 805,
	601, 2131, 958, 779, 38, 155, 1318, 1820, 758, 585,
	2086, 36, 585, 186, 585, 2103, 1821, 1004, 1757, 760,
	1922, 764, 1808, 1733, 1474, 1663, 141, 1456, 1673, 1120,
	1621, 1900, 1958, 1883, 2174, 986, 597, 802, 1732, 781,
	1362, 95, 2150, 991, 614, 1340, 1823, 91, 1298, 1227,
	1685, 1640, 1163, 1463, 1570, 965, 1552, 1566, 994, 962,
	997, 1898, 966, 992, 993, 1872, 1361, 770, 1359, 1345,
	1134, 1802, 1575, 159, 1140, 1729, 1422, 1448, 124, 125,
	792, 119, 1075, 1760, 766, 98, 768, 76, 85, 97,
	592, 765, 1234, 2870, 2205, 117, 118, 1770, 1230, 89,
	2993, 1915, 1916, 1917, 1915, 2667, 2447, 2232, 2231, 1956,
	2203, 1537, 767, 77, 2469, 8, 7, 6, 2623, 2659,
	2261, 120, 2262, 2894, 1628, 2707, 126, 542, 574, 1627,
	2893, 786, 1626, 791, 90, 1774, 1775, 1625, 772, 1624,
	2469, 102, 1623, 188, 189, 190, 1008, 1606, 595, 2707,
	596, 2957, 1033, 2466, 2082, 959, 593, 2346, 2548, 970,
	1615, 3009, 2967, 2113, 2983, 759, 757, 2226, 984, 1946,
	1633, 2467, 1042, 1028, 1164, 1892, 975, 799, 2810, 2809,
	806, 87, 104, 105, 1032, 108, 780, 1007, 114, 773,
	120, 183, 983, 2473, 537, 1031, 3008, 2467, 982, 1886,
	2672, 2972, 78, 2673, 2930, 1325, 1034, 1036, 1037, 2706,
	2996, 2889, 981, 980, 752, 753, 754, 755, 1164, 2473,
	763, 2894, 2946, 78, 78, 2981, 2122, 80, 188, 189,
	190, 1048, 78, 2706, 2680, 2921, 2944, 1941, 2929, 1996,
	2888, 2269, 2941, 2530, 1437, 2950, 2951, 2083, 794, 795,
	1363, 2123, 1364, 2419, 2420, 2399, 2400, 2398, 120, 2240,
	2945, 1196, 2260, 2239, 2159, 974, 1993, 2158, 976, 1837,
	2160, 574, 2735, 1838, 1839, 1127, 1110, 1129, 750, 87,
	1174, 749, 2819, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1205, 1204, 1206, 1207, 1098, 2862, 1715, 2171, 2296, 1099,
	87, 87, 2470, 1994, 1776, 1098, 2206, 1137, 2571, 87,
	1099, 2521, 571, 1078, 2519, 1126, 1128, 1030, 1097, 574,
	1096, 1856, 1855, 583, 1174, 575, 1115, 1116, 2470, 1111,
	1045, 1046, 1047, 2498, 1050, 1051, 1052, 1053, 581, 1885,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1104, 2418, 558,
	1074, 2973, 1614, 979, 587, 971, 1302, 2213, 1923, 2235,
	2421, 556, 973, 972, 1964, 1170, 1558, 1959, 1162, 1616,
	1617, 1618, 2974, 1707, 1696, 1697, 1698, 1699, 1709, 1700,
	1701, 1702, 1714, 1710, 1703, 1704, 1711, 1712, 1713, 1705,
	1706, 1708, 979, 574, 1084, 1085, 574, 2995, 1124, 1136,
	1112, 553, 1125, 1527, 2499, 1131, 1553, 1117, 1080, 1170,
	566, 977, 1130, 1970, 1967, 1969, 1968, 1118, 2661, 1965,
	1119, 2958, 2491, 1113, 1114, 563, 1087, 186, 1105, 186,
	2492, 2660, 186, 1006, 2248, 1123, 1049, 2794, 1972, 1975,
	1973, 2297, 1974, 1055, 1054, 2500, 1963, 1528, 1961, 1529,
	977, 1017, 987, 979, 1073, 1926, 988, 1817, 575, 988,
	1026, 585, 1144, 585, 585, 2657, 87, 1015, 1025, 1024,
	1023, 1022, 3010, 2421, 1441, 1021, 1020, 1019, 585, 585,
	1014, 1305, 1027, 963, 2979, 1208, 963, 961, 1962, 1208,
	543, 1000, 545, 559, 3004, 577, 963, 576, 549, 999,
	547, 551, 560, 552, 999, 546, 575, 557, 1035, 1567,
	548, 561, 562, 564, 567, 568, 569, 565, 1077, 555,
	578, 37, 1945, 1462, 978, 1094, 1899, 1100, 1101, 1102,
	1103, 793, 1005, 1156, 1435, 2249, 1108, 1950, 999, 1002,
	1003, 1563, 963, 1150, 1994, 1038, 996, 1000, 2440, 1138,
	1139, 1434, 1889, 2869, 2204, 2234, 1169, 1166, 1167, 1168,
	1173, 1175, 1172, 978, 1171, 985, 1433, 995, 2237, 2265,
	1559, 1165, 2207, 2008, 2223, 2858, 1006, 2656, 2572, 2820,
	1564, 1431, 1132, 2252, 541, 536, 1211, 1212, 1213, 1214,
	575, 1890, 2271, 575, 1044, 1018, 1219, 116, 1222, 1888,
	1169, 1166, 1167, 1168, 1173, 1175, 1172, 1943, 1171, 1145,
	1076, 1016, 1844, 1803, 1804, 1165, 2610, 2247, 2590, 2887,
	2246, 1006, 2949, 2155, 978, 2118, 2087, 2089, 1461, 2074,
	1293, 1209, 1210, 1891, 1769, 1349, 81, 1146, 1147, 1274,
	186, 2471, 2472, 1887, 585, 585, 1089, 2875, 86, 2705,
	1288, 1215, 1557, 1208, 2475, 1539, 1538, 1540, 1541, 1542,
	186, 1207, 2621, 2622, 775, 1006, 2948, 2471, 2472, 86,
	86, 1995, 1306, 2705, 2273, 1005, 1006, 2397, 86, 585,
	2475, 758, 1311, 186, 1121, 1576, 111, 1083, 585, 1308,
	1309, 579, 77, 1312, 585, 1159, 1157, 1158, 1095, 760,
	1294, 1093, 1006, 2255, 1086, 1135, 2883, 3002, 2254, 572,
	3003, 1029, 3001, 1645, 2652, 2584, 802, 1236, 1960, 1232,
	1005, 1233, 1686, 1180, 573, 1009, 999, 1646, 1647, 1644,
	1011, 1560, 1365, 1107, 1012, 1010, 2283, 2282, 2281, 2275,
	1160, 2279, 2255, 2274, 1109, 2272, 2289, 2254, 2196, 1686,
	2277, 2022, 1178, 1179, 1310, 1013, 112, 1180, 95, 2276,
	1635, 1637, 1638, 1294, 1005, 1280, 1281, 1282, 1283, 1284,
	999, 1002, 1003, 1179, 963, 1005, 2278, 2280, 996, 1000,
	1009, 999, 1079, 2731, 1636, 1011, 1299, 2088, 1196, 1012,
	1010, 1192, 2628, 1193, 2627, 1554, 1942, 1555, 1930, 1471,
	1556, 1005, 98, 1043, 1940, 1470, 1460, 1194, 1195, 1191,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1204, 1206,
	1207, 1938, 188, 189, 190, 1017, 1665, 1122, 1577, 1296,
	1202, 1203, 1205, 1204, 1206, 1207, 1307, 1015, 2899, 757,
	2977, 1092, 2851, 3011, 2975, 759, 1330, 1196, 186, 2264,
	1180, 2611, 1423, 1327, 1177, 1350, 1178, 1179, 1180, 806,
	1935, 1935, 1432, 2291, 1180, 1355, 1356, 1360, 1180, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1205, 1204, 1206, 1207,
	2900, 1809, 1810, 3006, 2852, 585, 87, 1458, 1177, 2031,
	1178, 1179, 1180, 2802, 1313, 1467, 2801, 1939, 1937, 1469,
	1643, 2792, 1472, 1473, 585, 585, 1666, 585, 2976, 585,
	585, 2695, 585, 585, 585, 585, 585, 585, 1200, 1201,
	1202, 1203, 1205, 1204, 1206, 1207, 1503, 3012, 585, 2000,
	2001, 2002, 186, 1508, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1205, 1204, 1206, 1207, 1547, 2830, 1325, 2878, 186,
	1198, 1199, 1200, 1201, 1202, 1203, 1205, 1204, 1206, 1207,
	2694, 1468, 585, 2635, 186, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1182, 2634, 2051, 1565, 797, 1180, 585, 2624,
	186, 1177, 2877, 1178, 1179, 1522, 1545, 1454, 1502, 1177,
	1504, 1178, 1179, 1180, 2448, 1177, 186, 1178, 1179, 1177,
	2436, 1178, 1179, 186, 701, 702, 703, 1447, 1546, 2178,
	1464, 1464, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 585, 1466, 1177, 182, 1178, 1179, 1534, 2177, 1476,
	1505, 1477, 1895, 1479, 1481, 585, 585, 1485, 1487, 1489,
	1491, 1493, 1430, 1196, 1325, 2007, 1548, 1465, 121, 1544,
	1532, 1690, 1531, 186, 1530, 1691, 1520, 1444, 1445, 1443,
	2866, 164, 1514, 1457, 1511, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1205, 1204, 1206, 1207, 1325, 1510, 1509, 1572,
	188, 189, 190, 2495, 2618, 1483, 1580, 188, 189, 190,
	1533, 2162, 2855, 1584, 2854, 1586, 1587, 1588, 1589, 1664,
	1506, 2853, 1593, 1667, 1671, 1180, 2797, 1436, 1177, 1149,
	1178, 1179, 1676, 585, 1605, 2782, 1578, 1579, 161, 1641,
	162, 1180, 1334, 2527, 1177, 2781, 1178, 1179, 585, 585,
	1583, 2583, 1670, 1670, 1568, 2730, 2728, 1590, 1591, 1592,
	181, 1180, 2011, 120, 2691, 1668, 1668, 1438, 1439, 1440,
	1648, 982, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 981, 980, 2632, 2617, 1582,
	1649, 1335, 2439, 2438, 1639, 1196, 1180, 188, 189, 190,
	1180, 1911, 2187, 1687, 2175, 1290, 2039, 1180, 1325, 1954,
	1953, 186, 1604, 1761, 1800, 1603, 585, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1205, 1204, 1206, 1207, 1730, 1611,
	1612, 1782, 1512, 1513, 188, 189, 190, 1607, 1518, 1519,
	186, 1573, 1543, 585, 2790, 1787, 1642, 1788, 1535, 2120,
	1525, 1521, 2405, 186, 1517, 1516, 1177, 585, 1178, 1179,
	1515, 1336, 186, 1133, 186, 1325, 186, 186, 585, 165,
	94, 585, 1177, 2827, 1178, 1179, 2109, 2994, 171, 1325,
	1730, 2826, 585, 2653, 1763, 2963, 1325, 92, 1761, 2525,
	1325, 2786, 1177, 1853, 1178, 1179, 802, 2406, 93, 802,
	188, 189, 190, 2785, 1909, 1765, 1766, 95, 101, 2678,
	1672, 188, 189, 190, 2214, 1907, 1180, 1678, 1679, 100,
	2128, 99, 2408, 2109, 2927, 2192, 95, 1177, 1325, 1178,
	1179, 1177, 2359, 1178, 1179, 1793, 2403, 585, 1177, 1762,
	1178, 1179, 2583, 1819, 1902, 1903, 1904, 2109, 2907, 1906,
	1908, 1910, 1325, 2419, 2420, 2109, 2903, 2895, 1325, 1763,
	2404, 2109, 2871, 2120, 585, 1862, 1863, 1864, 1865, 1764,
	585, 1467, 1767, 1768, 1467, 1857, 1467, 1858, 1859, 1860,
	1861, 2392, 1934, 1852, 1848, 772, 1847, 1781, 1325, 1180,
	1994, 156, 2410, 1868, 1869, 1870, 1871, 1830, 2059, 1325,
	688, 1180, 2670, 2868, 2544, 1325, 1338, 1795, 101, 1792,
	1936, 2018, 2105, 1924, 1814, 585, 1878, 1664, 2585, 100,
	1180, 99, 2127, 1664, 1664, 1851, 1812, 94, 1180, 1884,
	94, 2805, 1325, 1180, 2583, 1835, 1834, 2109, 2793, 806,
	2670, 1325, 806, 2109, 2668, 1850, 1849, 1177, 100, 1178,
	1179, 187, 1935, 1325, 187, 1180, 1176, 187, 2418, 2882,
	1894, 186, 586, 2109, 187, 1180, 1921, 1935, 186, 1180,
	2421, 1337, 187, 186, 186, 1180, 2128, 186, 92, 186,
	1008, 2588, 1325, 2017, 2009, 94, 186, 187, 1325, 93,
	1464, 2128, 1879, 186, 1874, 1875, 2544, 1897, 1929, 1893,
	2427, 1932, 2605, 1933, 2334, 1180, 2013, 1836, 1905, 586,
	2546, 2009, 586, 187, 586, 2012, 2009, 1947, 2044, 186,
	1177, 1007, 1178, 1179, 585, 1928, 1931, 1879, 1927, 1176,
	1325, 2028, 1177, 157, 1178, 1179, 1948, 2542, 2044, 1325,
	169, 1180, 1949, 1325, 2429, 2428, 2027, 2533, 1951, 1952,
	1935, 1177, 2179, 1178, 1179, 1180, 1918, 2532, 1807, 1177,
	1329, 1178, 1179, 2151, 1177, 1772, 1178, 1179, 2425, 2426,
	1180, 2425, 2424, 2128, 1325, 2407, 2009, 1325, 1180, 1619,
	1985, 1986, 177, 1180, 2151, 1988, 1177, 2068, 1178, 1179,
	1562, 1957, 1641, 1357, 1989, 990, 1177, 1180, 1178, 1179,
	1177, 989, 1178, 1179, 1994, 2233, 1177, 2636, 1178, 1179,
	1180, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 2004, 2067, 2006, 1180, 2152, 176, 178, 179,
	180, 2954, 1978, 1426, 2217, 2154, 1177, 2066, 1178, 1179,
	2210, 2211, 2005, 2109, 2108, 1426, 1425, 2152, 1371, 1370,
	2910, 2451, 2065, 1180, 87, 2184, 1994, 2637, 2638, 2639,
	2064, 762, 2816, 1332, 1180, 2063, 2783, 2742, 1180, 2651,
	2648, 2630, 1177, 2536, 1178, 1179, 2535, 1428, 2183, 2062,
	1180, 1877, 1992, 186, 2493, 2453, 1177, 1180, 1178, 1179,
	2449, 186, 2061, 2218, 1873, 1867, 585, 2093, 1866, 1642,
	1550, 1177, 585, 1178, 1179, 1459, 2003, 2060, 2080, 1177,
	2097, 1178, 1179, 585, 1177, 1455, 1178, 1179, 1424, 113,
	2411, 1078, 1498, 1180, 2415, 2184, 1670, 2091, 1177, 2497,
	1178, 1179, 2414, 1180, 2817, 2054, 186, 2989, 87, 1668,
	186, 1177, 2640, 1178, 1179, 2021, 2053, 2595, 2596, 1892,
	2052, 1785, 2601, 2987, 2970, 2161, 1177, 1609, 1178, 1179,
	2892, 1180, 2049, 2835, 2598, 2445, 2416, 1180, 37, 2048,
	2444, 2412, 1499, 1500, 1501, 2019, 2413, 2144, 1495, 1763,
	2124, 2110, 2037, 2443, 1177, 2359, 1178, 1179, 2197, 2641,
	2642, 1979, 2600, 2378, 2377, 1177, 2960, 1178, 1179, 1177,
	2928, 1178, 1179, 585, 1799, 2047, 1333, 2381, 1791, 186,
	2106, 1177, 2382, 1178, 1179, 2045, 186, 2379, 1177, 1610,
	1178, 1179, 2380, 2351, 2353, 1496, 1497, 2589, 2339, 1299,
	585, 2081, 2354, 2383, 1762, 2137, 2138, 585, 2338, 2172,
	2173, 1467, 1467, 2041, 2209, 2850, 585, 2143, 2721, 2040,
	2102, 2107, 2071, 2072, 1177, 2723, 1178, 1179, 2579, 1561,
	2576, 2230, 2165, 2117, 1177, 2348, 1178, 1179, 2575, 2229,
	2149, 748, 186, 186, 186, 186, 186, 2712, 2423, 2711,
	776, 1323, 1319, 2169, 2153, 2188, 1884, 2156, 777, 186,
	186, 2163, 1177, 92, 1178, 1179, 1320, 1040, 1177, 1039,
	1178, 1179, 2166, 2507, 93, 186, 1682, 2133, 2136, 2137,
	2138, 2134, 2176, 2135, 2139, 2581, 2183, 2595, 2596, 2258,
	1683, 1789, 1790, 1322, 1664, 1321, 2185, 2710, 1148, 2193,
	2225, 2224, 121, 1809, 1810, 2867, 92, 187, 94, 187,
	2194, 2998, 187, 94, 2198, 2199, 2200, 93, 2441, 2228,
	2133, 2136, 2137, 2138, 2134, 1447, 2135, 2139, 1982, 2812,
	2422, 758, 2141, 1796, 101, 784, 785, 1971, 2219, 2220,
	2288, 586, 2337, 586, 586, 100, 2561, 99, 2227, 2842,
	2336, 1998, 101, 99, 2841, 585, 94, 2729, 586, 586,
	2727, 2726, 1670, 100, 1670, 99, 2719, 1670, 2649, 2284,
	2580, 585, 1670, 2578, 2267, 1668, 2454, 1668, 1919, 1442,
	1668, 101, 783, 2328, 100, 1668, 186, 2718, 2266, 2250,
	585, 2569, 100, 2309, 2256, 2309, 2120, 2257, 2309, 585,
	2314, 2991, 2990, 2309, 2105, 2315, 585, 585, 2298, 186,
	186, 186, 186, 186, 2321, 2322, 2323, 2324, 2268, 2285,
	2311, 186, 2029, 1783, 1351, 2356, 186, 2328, 1342, 186,
	2990, 186, 106, 107, 186, 186, 186, 2991, 2371, 2186,
	2856, 2365, 2616, 774, 2189, 2190, 2391, 764, 2302, 103,
	88, 1, 2620, 2943, 554, 2341, 1773, 1297, 2971, 2939,
	2940, 1536, 1526, 2342, 2681, 1731, 2362, 1312, 2144, 2437,
	2813, 2362, 2327, 2457, 1925, 2647, 2329, 1882, 186, 2316,
	2317, 2318, 2319, 2320, 998, 2330, 2331, 2332, 146, 1845,
	1846, 585, 2923, 2343, 110, 2333, 956, 109, 2340, 585,
	1001, 1106, 1920, 2671, 186, 2170, 1854, 1377, 2393, 1375,
	766, 2394, 1376, 2477, 1374, 186, 2372, 765, 1379, 2375,
	187, 2384, 1378, 2030, 586, 586, 2373, 2374, 95, 2376,
	186, 2370, 2395, 186, 2547, 1572, 1613, 2388, 2389, 582,
	187, 2140, 184, 2508, 1366, 1343, 1323, 1319, 1041, 544,
	2401, 2430, 1955, 550, 1220, 1608, 2431, 2456, 2433, 586,
	2432, 1320, 2335, 187, 2157, 803, 796, 1784, 586, 2095,
	2367, 2573, 2347, 2485, 586, 2349, 2112, 2352, 2345, 2484,
	2849, 2720, 2908, 2167, 1339, 2020, 1316, 1317, 1322, 1684,
	1321, 1884, 2476, 2455, 1824, 1634, 607, 606, 2488, 604,
	2098, 2121, 1183, 691, 2085, 1352, 2132, 2541, 2130, 2129,
	1980, 1831, 2597, 2593, 2935, 585, 186, 1826, 1822, 2104,
	615, 2503, 608, 2502, 600, 2613, 2483, 2236, 2505, 2506,
	2494, 2511, 2238, 2168, 2490, 1161, 1315, 594, 2514, 2515,
	2517, 2516, 969, 1681, 2518, 2510, 2520, 2818, 2522, 2873,
	1997, 2529, 1314, 1694, 1695, 2880, 2465, 2665, 2446, 2215,
	1912, 63, 41, 1722, 589, 2956, 1152, 790, 32, 31,
	30, 29, 28, 186, 23, 22, 21, 20, 19, 25,
	18, 17, 16, 2468, 2966, 2997, 115, 50, 47, 45,
	123, 2619, 2567, 122, 48, 2562, 2563, 44, 1081, 42,
	27, 26, 186, 15, 14, 13, 12, 11, 2570, 10,
	9, 2577, 5, 4, 35, 2602, 34, 33, 1155, 2582,
	24, 186, 2, 2592, 186, 186, 186, 2202, 187, 1914,
	0, 0, 0, 0, 585, 585, 2599, 2434, 2435, 0,
	0, 0, 0, 0, 0, 2608, 2609, 0, 2654, 2655,
	2607, 2606, 0, 2485, 0, 0, 0, 0, 0, 2484,
	2614, 2615, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2631, 0, 2633, 585, 585,
	585, 585, 0, 0, 586, 586, 0, 586, 0, 586,
	586, 0, 586, 586, 586, 586, 586, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 2677,
	0, 0, 0, 0, 0, 0, 0, 2675, 2676, 187,
	0, 0, 0, 0, 0, 2690, 0, 0, 0, 0,
	671, 0, 586, 0, 187, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 1670, 586, 2686,
	187, 0, 2715, 0, 0, 0, 2687, 0, 1668, 585,
	1668, 585, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 2309, 0, 2309, 2744,
	2699, 0, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 586, 584, 2365, 758, 2708, 2725, 2365, 2738, 37,
	0, 2698, 0, 2740, 2724, 586, 586, 2716, 1670, 2732,
	0, 2736, 0, 0, 0, 2734, 0, 2362, 0, 0,
	0, 1668, 585, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 2791, 0, 585, 804,
	0, 0, 960, 0, 967, 2748, 0, 0, 2745, 2746,
	0, 585, 0, 0, 0, 0, 0, 0, 0, 2625,
	2626, 0, 0, 2787, 0, 2795, 0, 0, 2789, 2788,
	0, 2803, 0, 0, 2832, 2833, 0, 0, 0, 2815,
	585, 2836, 2807, 586, 585, 585, 0, 0, 2808, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 586, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1670, 2658, 0, 585, 0, 2662, 2663, 2664, 0, 0,
	0, 0, 0, 1668, 0, 0, 2846, 2860, 2843, 2844,
	0, 0, 2845, 0, 0, 0, 2859, 0, 0, 0,
	0, 0, 0, 2365, 2857, 0, 0, 758, 0, 0,
	0, 0, 0, 0, 585, 0, 2863, 0, 2848, 0,
	0, 187, 0, 1324, 0, 0, 586, 0, 2865, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 585, 186, 0,
	187, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 2884, 2872, 187, 0, 2876, 0, 586, 0, 0,
	0, 2879, 187, 0, 187, 0, 187, 187, 586, 0,
	0, 586, 0, 0, 37, 0, 0, 0, 0, 585,
	0, 0, 586, 0, 0, 0, 2881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 585, 0, 0, 2901, 0, 2906,
	2964, 0, 0, 0, 0, 2911, 585, 0, 0, 0,
	1394, 0, 2914, 2922, 2919, 186, 585, 2916, 2915, 37,
	2913, 2815, 2924, 2931, 2918, 2917, 0, 586, 0, 0,
	2362, 2909, 2934, 0, 0, 0, 2952, 2942, 2947, 0,
	0, 0, 0, 2798, 2799, 2800, 0, 0, 0, 0,
	0, 0, 0, 2959, 586, 0, 0, 0, 0, 182,
	586, 2965, 0, 0, 0, 585, 0, 0, 0, 0,
	0, 0, 0, 0, 585, 0, 0, 0, 0, 2978,
	2985, 2980, 0, 121, 0, 2984, 2982, 0, 2988, 2986,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 0, 2999, 0, 586, 0, 0, 3005, 1670,
	3007, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1668, 3013, 0, 3015, 3016, 2833, 3014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 187, 1670, 161, 0, 162, 0, 0, 187, 0,
	0, 0, 0, 187, 187, 1668, 0, 187, 0, 187,
	0, 0, 0, 0, 0, 181, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 78,
	39, 40, 80, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 84,
	0, 0, 0, 43, 69, 70, 0, 67, 71, 0,
	0, 0, 1395, 0, 0, 0, 68, 0, 0, 0,
	0, 804, 0, 804, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1151, 1153,
	0, 0, 0, 0, 0, 56, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 1408, 1411, 1412, 1413,
	1414, 1415, 1416, 171, 1417, 1418, 1419, 1420, 1421, 1396,
	1397, 1398, 1399, 1380, 1381, 1409, 0, 1383, 0, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 0, 0,
	1393, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 156, 0, 0, 0,
	46, 49, 52, 51, 54, 0, 66, 0, 0, 75,
	72, 0, 0, 0, 1303, 1304, 187, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 55, 83, 82, 0, 0, 64, 65, 53,
	0, 0, 0, 0, 0, 73, 74, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 57, 58, 586, 59, 60, 61, 62, 0, 187,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 187, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	0, 0, 176, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 960, 0, 0, 0, 1326,
	1328, 0, 0, 0, 0, 586, 0, 0, 1291, 0,
	0, 0, 0, 0, 1475, 1475, 0, 1475, 0, 1475,
	1475, 586, 1484, 1475, 1475, 1475, 1475, 1475, 0, 0,
	0, 0, 0, 0, 0, 1291, 187, 1291, 960, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 586, 586, 0, 187,
	187, 187, 187, 187, 0, 0, 0, 0, 0, 0,
	0, 187, 1549, 0, 0, 0, 187, 0, 0, 187,
	0, 187, 0, 0, 187, 187, 187, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 672, 0, 0, 0, 0, 0, 187, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 0, 0, 0, 804, 804, 0, 0, 586,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 185, 0, 0, 540, 0, 0, 580,
	187, 0, 0, 187, 0, 0, 540, 0, 0, 182,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 0, 0, 121, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 1677, 0, 789, 164, 789, 0, 0,
	1291, 0, 0, 0, 0, 540, 0, 0, 1692, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 142, 0, 0, 586, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 152, 151, 181, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	804, 0, 187, 0, 0, 0, 0, 0, 804, 0,
	0, 804, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 960, 0, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 586, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 128, 154, 135, 127, 0, 148, 149,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 136, 0, 0, 967, 586, 586,
	586, 586, 0, 0, 0, 0, 0, 0, 139, 137,
	132, 133, 134, 138, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 960, 0, 0, 0, 0, 140,
	967, 0, 0, 0, 0, 1688, 0, 0, 0, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 960, 2750, 2752, 2751, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 637, 0, 0, 586,
	0, 586, 0, 0, 0, 0, 0, 0, 1326, 1771,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 0, 150, 1991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 586, 586, 144, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 540, 0, 1896, 540, 0, 1300, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	539, 0, 0, 0, 0, 0, 0, 177, 0, 187,
	588, 0, 0, 0, 0, 0, 0, 0, 751, 0,
	0, 0, 2756, 2757, 0, 0, 0, 586, 187, 0,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 0, 0, 0,
	804, 0, 176, 178, 179, 180, 0, 0, 0, 964,
	0, 0, 0, 0, 0, 0, 1798, 0, 0, 586,
	0, 0, 2099, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 682, 2114, 632, 686, 634, 683, 684, 0,
	630, 633, 685, 586, 586, 0, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 586, 0, 0, 635,
	636, 2749, 2753, 2754, 2755, 2758, 2759, 2760, 2768, 2770,
	660, 2769, 2771, 2772, 2773, 2776, 2777, 2778, 2779, 2774,
	2775, 2780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 771, 2191, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2010, 0, 0, 0,
	2014, 0, 2015, 2016, 0, 540, 0, 0, 0, 0,
	1798, 2024, 0, 0, 2025, 2026, 0, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 2221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2032, 2033, 2034, 2035, 2036, 0, 2038, 0, 0,
	0, 0, 0, 2042, 0, 2043, 0, 0, 0, 2046,
	0, 0, 0, 0, 0, 0, 0, 2055, 2056, 2057,
	2058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2069, 2070, 0, 0, 0, 0, 0, 0, 2075, 2076,
	2077, 2078, 2079, 0, 1794, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2092, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1291, 0, 1291, 0, 0, 1291, 0, 0, 0, 0,
	1291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 804, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2344, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 1291, 0, 0, 2369, 1475, 1291, 0,
	1292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 1292,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 1082, 0, 1088, 0, 0, 1090, 0,
	0, 960, 1571, 0, 1291, 0, 0, 0, 0, 1798,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 1594, 1595, 540, 540, 540, 540,
	540, 540, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2310, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2325, 2326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2344, 0, 0, 0, 789,
	0, 0, 0, 0, 0, 0, 789, 789, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 2368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2386, 2387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 1571, 789, 789,
	789, 789, 789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 1798, 1798, 0, 0, 0, 1354,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 1571, 0, 540, 0, 540, 0, 540, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2509, 2682, 2683,
	2684, 2685, 0, 0, 2513, 788, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2523, 2524,
	2526, 2528, 0, 0, 0, 0, 0, 0, 2534, 0,
	0, 0, 0, 2538, 2539, 2540, 0, 0, 0, 0,
	2543, 0, 0, 1291, 0, 1291, 2545, 0, 0, 2549,
	2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 0,
	0, 2559, 0, 0, 0, 0, 0, 2564, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 0, 0, 0, 2737,
	0, 2739, 0, 0, 0, 0, 0, 0, 0, 0,
	2586, 2587, 0, 0, 2591, 782, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2603, 2604, 1372, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2806, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	540, 804, 0, 0, 0, 540, 540, 0, 0, 540,
	0, 1983, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 1507, 0,
	2839, 0, 2669, 0, 2839, 2839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	1551, 0, 0, 1798, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	698, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2696, 1581, 0, 0, 2697, 0, 0, 0, 1585,
	0, 2701, 0, 0, 1798, 0, 0, 0, 0, 0,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 0, 0, 0,
	0, 0, 0, 0, 789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1622,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	79, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 761, 2902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 789, 789, 804, 804, 0, 0, 0, 0, 0,
	0, 0, 1571, 0, 0, 540, 2932, 0, 0, 2804,
	0, 0, 0, 1523, 0, 0, 2937, 0, 2811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2821, 2822, 2823, 0, 2824, 2825, 0, 0,
	0, 0, 2828, 0, 2829, 0, 2831, 2834, 0, 0,
	0, 0, 0, 2838, 0, 0, 0, 0, 540, 0,
	0, 0, 540, 0, 0, 1798, 0, 0, 0, 0,
	0, 0, 0, 0, 2937, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 1815, 0,
	1818, 540, 0, 1622, 0, 0, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2886, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2891, 0, 0, 0,
	0, 2896, 0, 0, 0, 0, 0, 2897, 2898, 0,
	0, 0, 0, 0, 540, 540, 540, 540, 540, 0,
	0, 0, 0, 0, 0, 2904, 0, 0, 0, 0,
	0, 540, 540, 0, 0, 1181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	0, 0, 789, 1228, 0, 2208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2955, 0, 121, 0,
	143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 2961, 0, 0, 0, 2962,
	0, 0, 1292, 0, 1292, 0, 0, 1292, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 789, 142, 0, 0,
	0, 0, 0, 0, 598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1622, 161, 0,
	162, 0, 0, 0, 1966, 0, 0, 0, 540, 1976,
	1977, 0, 0, 1981, 0, 0, 1450, 1451, 152, 151,
	181, 0, 1984, 0, 0, 1292, 0, 0, 0, 1987,
	1292, 540, 540, 540, 540, 540, 0, 0, 0, 0,
	0, 0, 0, 2385, 0, 0, 0, 0, 540, 0,
	0, 1523, 0, 540, 0, 1990, 540, 2396, 1571, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1141, 0, 1141, 1141, 0, 1292, 147, 1452, 154,
	0, 1449, 0, 148, 149, 0, 540, 0, 0, 165,
	79, 0, 0, 0, 0, 0, 0, 540, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 540, 0, 761, 1216, 1217,
	1218, 0, 1221, 0, 1223, 1224, 1225, 1226, 0, 1229,
	1231, 1231, 0, 1231, 1235, 1235, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 0, 1275, 1276, 1277, 1278, 1279, 0,
	0, 0, 0, 1235, 1235, 1235, 1235, 1235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 0, 1429, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1301, 0, 0, 540, 0, 0, 761, 0,
	0, 0, 761, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 0, 2195, 540, 540, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 2241, 2242,
	2243, 2244, 2245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1622, 2251, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 0, 0,
	0, 2259, 177, 0, 0, 1292, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1629, 1630, 1631, 1632, 0, 1523, 0, 0,
	0, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 0, 0, 0, 0, 1292, 176, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1674, 1675, 0, 0, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1716, 1717, 1718, 1719,
	1720, 1721, 1723, 1727, 1728, 598, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 0,
	182, 0, 0, 0, 0, 0, 0, 1523, 0, 0,
	0, 1446, 0, 0, 0, 0, 0, 1382, 0, 0,
	0, 0, 0, 0, 121, 0, 143, 598, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 1806, 0, 0, 0, 153, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2442, 0, 0, 0, 0, 0,
	0, 1842, 0, 0, 161, 0, 162, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2480, 1141, 1450, 1451, 152, 151, 181, 0, 0, 0,
	0, 2489, 0, 0, 0, 1141, 1141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2501, 0, 0, 2504,
	0, 1523, 0, 0, 0, 0, 0, 0, 0, 0,
	1880, 0, 0, 1408, 1411, 1412, 1413, 1414, 1415, 1416,
	540, 1417, 1418, 1419, 1420, 1421, 1396, 1397, 1398, 1399,
	1380, 1381, 1409, 0, 1383, 0, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 0, 0, 1393, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 0, 0, 0, 1292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 147, 1452, 154, 0, 1449, 0, 148,
	149, 0, 2566, 0, 0, 165, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 0, 0, 0, 0, 0, 692, 699,
	700, 701, 702, 703, 693, 695, 0, 0, 0, 694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 697, 704, 705, 0, 0, 1410, 2629, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2643, 0, 0,
	2644, 2645, 2646, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 2486, 2487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 707, 708, 709, 710, 711, 712, 713, 714, 715,
	716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 729, 730, 731, 732, 733, 734, 735,
	736, 737, 738, 739, 740, 741, 742, 743, 744, 745,
	746, 747, 0, 0, 0, 0, 0, 968, 0, 0,
	0, 0, 2023, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	968, 0, 0, 0, 0, 0, 0, 0, 1228, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 0, 0,
	145, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1341, 87, 0, 0, 0, 177, 0,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	0, 694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 697, 704, 705, 158, 163, 160,
	166, 167, 168, 170, 172, 173, 174, 175, 0, 0,
	0, 0, 0, 176, 178, 179, 180, 682, 0, 0,
	686, 0, 683, 684, 0, 0, 0, 685, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2486, 2487, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2885, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2073, 2286, 2287, 0, 0, 0, 2290, 0,
	0, 0, 0, 2292, 2293, 2294, 0, 0, 0, 2090,
	0, 0, 0, 0, 0, 2299, 2300, 2301, 0, 0,
	1734, 2303, 0, 2304, 2305, 0, 0, 761, 2312, 2313,
	0, 0, 0, 0, 0, 0, 1734, 1734, 1734, 1734,
	1734, 598, 598, 598, 598, 0, 0, 2125, 2126, 0,
	0, 0, 0, 0, 0, 0, 2145, 0, 2146, 2147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2357, 0, 0, 2094,
	0, 0, 699, 700, 0, 0, 0, 0, 1669, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 699, 700, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2452, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 2531, 0, 0,
	0, 0, 0, 0, 2537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2366, 0, 79, 0, 0, 1825,
	1825, 1825, 1825, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2145, 761, 0, 0,
	0, 1825, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2482, 0, 2674, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2512, 2688, 0, 2689, 0, 0, 0, 0, 2692, 2693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2700, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2733, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2741, 0, 0, 2743, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2847, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2709, 0, 2713, 2714, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2366, 0, 79, 0,
	2366, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2953, 0, 2796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2366, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2874, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 0,
	938, 923, 460, 79, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 2905, 444, 362, 0, 0, 79, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 2925, 0, 2926, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 214, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 1143, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 214, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 2397, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 1143, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 214, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 2355, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 1143, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 214, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 1813, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 1143, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 214, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 1143, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 214, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 1143, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 955, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 821, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 807, 801, 800, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 955, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 1358, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 821, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 807, 801, 800, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	938, 923, 460, 0, 869, 941, 838, 857, 951, 860,
	863, 905, 817, 883, 377, 854, 809, 842, 812, 849,
	813, 840, 871, 250, 837, 925, 887, 940, 332, 247,
	819, 843, 391, 859, 197, 907, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	947, 336, 893, 0, 444, 362, 0, 0, 0, 873,
	929, 881, 919, 868, 906, 827, 892, 942, 855, 902,
	943, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 851, 899, 937,
	852, 901, 245, 292, 252, 244, 464, 948, 928, 816,
	880, 936, 0, 0, 955, 939, 875, 0, 904, 0,
	954, 811, 895, 0, 814, 818, 950, 932, 846, 255,
	0, 0, 0, 0, 0, 0, 0, 872, 882, 916,
	866, 0, 0, 0, 0, 0, 0, 0, 844, 0,
	891, 0, 0, 0, 823, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 870, 0,
	0, 0, 826, 0, 845, 917, 0, 808, 275, 820,
	363, 237, 0, 921, 931, 867, 498, 935, 865, 864,
	911, 824, 927, 858, 331, 822, 300, 192, 210, 0,
	856, 373, 415, 421, 926, 841, 850, 235, 848, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 890,
	909, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 798, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 821, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 836, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 922, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 807, 801, 800, 301, 338, 914, 953, 386, 420,
	225, 484, 443, 831, 835, 829, 896, 830, 885, 886,
	832, 944, 945, 946, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 918, 825, 0, 833, 834, 0, 924,
	933, 934, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 889, 191, 207, 334, 949, 409, 268,
	513, 492, 488, 810, 828, 242, 839, 847, 0, 853,
	861, 862, 874, 876, 877, 878, 879, 897, 898, 900,
	908, 910, 913, 915, 920, 930, 952, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 888, 894, 345, 261, 280,
	291, 903, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 884, 912, 341, 461, 462, 287, 359, 0, 0,
	0, 0, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 1758, 0, 616,
	0, 0, 0, 250, 621, 0, 0, 0, 332, 247,
	0, 1759, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	628, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 223, 694, 230, 639, 641, 640,
	650, 651, 652, 653, 654, 655, 656, 637, 697, 704,
	705, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 599, 613, 0, 627, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 787, 0, 0, 0,
	676, 0, 612, 0, 0, 620, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 675, 0, 0, 498, 0, 0, 673,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 645, 646, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 682, 674, 632, 686, 634, 683, 684,
	629, 630, 633, 685, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 677, 619, 618, 0, 625, 626, 0,
	635, 636, 638, 642, 643, 644, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 617, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 616, 0, 0, 0, 250, 621,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 628, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 623, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 223,
	694, 230, 639, 641, 640, 650, 651, 652, 653, 654,
	655, 656, 637, 697, 704, 705, 0, 245, 292, 252,
	244, 464, 0, 0, 1724, 1725, 1726, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 599, 613, 0,
	627, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 0, 0, 0, 0, 676, 0, 612, 0, 0,
	620, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 675, 0,
	0, 498, 0, 0, 673, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 645, 646,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 682, 674,
	632, 686, 634, 683, 684, 629, 630, 633, 685, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 677, 619,
	618, 0, 625, 626, 0, 635, 636, 638, 642, 643,
	644, 647, 648, 649, 657, 659, 660, 658, 661, 662,
	663, 666, 667, 668, 669, 664, 665, 670, 617, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 616,
	0, 0, 0, 250, 621, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	628, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 1840,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 223, 694, 230, 639, 641, 640,
	650, 651, 652, 653, 654, 655, 656, 637, 697, 704,
	705, 1841, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 599, 613, 0, 627, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 0, 0, 0, 0,
	676, 0, 612, 0, 0, 620, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 675, 0, 0, 498, 0, 0, 673,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 645, 646, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 682, 674, 632, 686, 634, 683, 684,
	629, 630, 633, 685, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 677, 619, 618, 0, 625, 626, 0,
	635, 636, 638, 642, 643, 644, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 617, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 0, 341, 461, 462, 287, 359, 0, 0,
	0, 78, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 616,
	0, 0, 0, 250, 621, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	628, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 223, 694, 230, 639, 641, 640,
	650, 651, 652, 653, 654, 655, 656, 637, 697, 704,
	705, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 599, 613, 0, 627, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 0, 0, 0, 0,
	676, 0, 612, 0, 0, 620, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 675, 0, 0, 498, 0, 0, 673,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 645, 646, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 682, 674, 632, 686, 634, 683, 684,
	629, 630, 633, 685, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 677, 619, 618, 0, 625, 626, 0,
	635, 636, 638, 642, 643, 644, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 617, 191, 207, 334, 86, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 616, 0, 0, 0, 250, 621,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 628, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 623, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 223,
	694, 230, 639, 641, 640, 650, 651, 652, 653, 654,
	655, 656, 637, 697, 704, 705, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 599, 613, 0,
	627, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 0, 0, 0, 0, 676, 0, 612, 0, 0,
	620, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 675, 0,
	0, 498, 0, 0, 673, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 2912, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 645, 646,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 682, 674,
	632, 686, 634, 683, 684, 629, 630, 633, 685, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 677, 619,
	618, 0, 625, 626, 0, 635, 636, 638, 642, 643,
	644, 647, 648, 649, 657, 659, 660, 658, 661, 662,
	663, 666, 667, 668, 669, 664, 665, 670, 617, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 616,
	0, 0, 0, 250, 621, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	628, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	1325, 188, 189, 190, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 223, 694, 230, 639, 641, 640,
	650, 651, 652, 653, 654, 655, 656, 637, 697, 704,
	705, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 599, 613, 0, 627, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 0, 0, 0, 0,
	676, 0, 612, 0, 0, 620, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 675, 0, 0, 498, 0, 0, 673,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 645, 646, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 682, 674, 632, 686, 634, 683, 684,
	629, 630, 633, 685, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 677, 619, 618, 0, 625, 626, 0,
	635, 636, 638, 642, 643, 644, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 617, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 616, 0, 0, 0, 250, 621,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 628, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 623, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 223,
	694, 230, 639, 641, 640, 650, 651, 652, 653, 654,
	655, 656, 637, 697, 704, 705, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 599, 613, 0,
	627, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 787, 0, 0, 0, 676, 0, 612, 0, 0,
	620, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 675, 0,
	0, 498, 0, 0, 673, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 645, 646,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 682, 674,
	632, 686, 634, 683, 684, 629, 630, 633, 685, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 677, 619,
	618, 0, 625, 626, 0, 635, 636, 638, 642, 643,
	644, 647, 648, 649, 657, 659, 660, 658, 661, 662,
	663, 666, 667, 668, 669, 664, 665, 670, 617, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 616,
	0, 0, 0, 250, 621, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	628, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 623, 624, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 692, 699, 700, 701, 702, 703,
	693, 695, 0, 0, 223, 694, 230, 639, 641, 640,
	650, 651, 652, 653, 654, 655, 656, 637, 697, 704,
	705, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 599, 613, 0, 627, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 610, 611, 0, 0, 0, 0,
	676, 0, 612, 0, 0, 620, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 622, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 675, 0, 0, 498, 0, 0, 673,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 645, 646, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 682, 674, 632, 686, 634, 683, 684,
	629, 630, 633, 685, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 677, 619, 618, 0, 625, 626, 0,
	635, 636, 638, 642, 643, 644, 647, 648, 649, 657,
	659, 660, 658, 661, 662, 663, 666, 667, 668, 669,
	664, 665, 670, 617, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 616, 0, 0, 0, 250, 621,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 628, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 623, 624, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 223,
	694, 230, 639, 641, 640, 650, 651, 652, 653, 654,
	655, 656, 637, 697, 704, 705, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 613, 0,
	627, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 610,
	611, 0, 0, 0, 0, 676, 0, 612, 0, 0,
	620, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 622, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 675, 0,
	0, 498, 0, 0, 673, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 645, 646,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 682, 674,
	632, 686, 634, 683, 684, 629, 630, 633, 685, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 677, 619,
	618, 0, 625, 626, 0, 635, 636, 638, 642, 643,
	644, 647, 648, 649, 657, 659, 660, 658, 661, 662,
	663, 666, 667, 668, 669, 664, 665, 670, 617, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 699, 700, 0, 0, 0,
	0, 1669, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 706, 707, 708, 709,
	710, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 727, 728, 729,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 1006, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	1005, 498, 0, 0, 0, 0, 0, 1002, 1003, 331,
	963, 300, 192, 210, 996, 1000, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 0, 341, 461,
	462, 287, 359, 0, 0, 0, 78, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 86, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 1344, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 1346, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1348, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 1177, 0,
	1178, 1179, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 1287,
	1290, 0, 0, 0, 0, 1286, 1289, 0, 0, 223,
	1285, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 0, 341, 461,
	462, 287, 359, 0, 0, 0, 78, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 1325, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 86, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 87, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 1827, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 1780, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 1778, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 957, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 963, 300, 192, 210, 961,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 1780, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	1325, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	2840, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	2115, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 2100, 0, 0,
	0, 2101, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 1369,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1368, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	2933, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1524, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	2840, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 87, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	1348, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 1620, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1494, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 1492, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1490, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 1488, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1486, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 1482, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 1480, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 1478, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 1453, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 1353, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 769, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 591, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	590, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 538,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	2938, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 359, 341, 461,
	462, 287, 460, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 250, 0, 0, 0, 0, 332, 247,
	0, 0, 391, 0, 197, 0, 434, 234, 342, 339,
	467, 262, 253, 249, 233, 288, 349, 389, 454, 383,
	0, 336, 0, 0, 444, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 294, 232, 196, 374, 445, 266, 0, 0, 0,
	0, 188, 2565, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 230, 317, 326, 325,
	306, 307, 309, 311, 316, 323, 329, 0, 0, 0,
	0, 0, 245, 292, 252, 244, 464, 0, 0, 0,
	0, 0, 0, 0, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	363, 237, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 331, 0, 300, 192, 210, 0,
	0, 373, 415, 421, 0, 0, 0, 235, 0, 419,
	387, 482, 218, 264, 412, 393, 417, 400, 267, 0,
	0, 418, 337, 469, 407, 479, 499, 500, 243, 367,
	489, 458, 495, 512, 211, 240, 381, 451, 485, 441,
	360, 465, 466, 299, 440, 273, 195, 335, 505, 209,
	427, 227, 216, 202, 453, 477, 224, 431, 0, 0,
	514, 204, 475, 450, 356, 296, 297, 203, 0, 411,
	248, 271, 238, 376, 472, 473, 236, 515, 213, 494,
	206, 0, 493, 369, 468, 476, 357, 347, 205, 474,
	355, 346, 302, 321, 322, 260, 282, 405, 340, 406,
	283, 365, 364, 366, 198, 486, 0, 199, 0, 446,
	487, 516, 219, 220, 222, 0, 259, 263, 270, 272,
	278, 279, 286, 333, 380, 404, 402, 408, 0, 463,
	480, 490, 497, 503, 504, 506, 507, 508, 509, 510,
	511, 368, 285, 442, 301, 338, 0, 0, 386, 420,
	225, 484, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 517, 518, 519, 520, 521, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 348, 433, 481, 303, 315, 318, 308,
	327, 0, 328, 304, 305, 310, 312, 313, 314, 319,
	320, 324, 330, 0, 191, 207, 334, 0, 409, 268,
	513, 492, 488, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 200,
	208, 217, 221, 228, 241, 256, 258, 265, 276, 281,
	284, 289, 290, 293, 298, 344, 350, 351, 352, 353,
	370, 371, 372, 375, 378, 379, 382, 384, 385, 388,
	392, 396, 397, 398, 399, 401, 403, 410, 414, 422,
	423, 424, 425, 426, 429, 430, 435, 436, 437, 438,
	439, 447, 448, 452, 470, 471, 483, 496, 501, 428,
	277, 478, 502, 0, 343, 0, 0, 345, 261, 280,
	291, 0, 491, 449, 212, 416, 269, 201, 231, 215,
	239, 254, 257, 295, 354, 361, 390, 395, 274, 251,
	229, 413, 226, 432, 455, 456, 457, 459, 358, 246,
	394, 0, 359, 341, 461, 462, 287, 460, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 250, 0,
	0, 0, 0, 332, 247, 0, 0, 391, 0, 197,
	0, 434, 234, 342, 339, 467, 262, 253, 249, 233,
	288, 349, 389, 454, 383, 0, 336, 0, 0, 444,
	362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 294, 232, 196, 374,
	445, 266, 0, 0, 0, 0, 188, 2096, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 230, 317, 326, 325, 306, 307, 309, 311, 316,
	323, 329, 0, 0, 0, 0, 0, 245, 292, 252,
	244, 464, 0, 0, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 363, 237, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 300, 192, 210, 0, 0, 373, 415, 421, 0,
	0, 0, 235, 0, 419, 387, 482, 218, 264, 412,
	393, 417, 400, 267, 0, 0, 418, 337, 469, 407,
	479, 499, 500, 243, 367, 489, 458, 495, 512, 211,
	240, 381, 451, 485, 441, 360, 465, 466, 299, 440,
	273, 195, 335, 505, 209, 427, 227, 216, 202, 453,
	477, 224, 431, 0, 0, 514, 204, 475, 450, 356,
	296, 297, 203, 0, 411, 248, 271, 238, 376, 472,
	473, 236, 515, 213, 494, 206, 0, 493, 369, 468,
	476, 357, 347, 205, 474, 355, 346, 302, 321, 322,
	260, 282, 405, 340, 406, 283, 365, 364, 366, 198,
	486, 0, 199, 0, 446, 487, 516, 219, 220, 222,
	0, 259, 263, 270, 272, 278, 279, 286, 333, 380,
	404, 402, 408, 0, 463, 480, 490, 497, 503, 504,
	506, 507, 508, 509, 510, 511, 368, 285, 442, 301,
	338, 0, 0, 386, 420, 225, 484, 443, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 517,
	518, 519, 520, 521, 522, 523, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 348, 433,
	481, 303, 315, 318, 308, 327, 0, 328, 304, 305,
	310, 312, 313, 314, 319, 320, 324, 330, 0, 191,
	207, 334, 0, 409, 268, 513, 492, 488, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 194, 200, 208, 217, 221, 228, 241,
	256, 258, 265, 276, 281, 284, 289, 290, 293, 298,
	344, 350, 351, 352, 353, 370, 371, 372, 375, 378,
	379, 382, 384, 385, 388, 392, 396, 397, 398, 399,
	401, 403, 410, 414, 422, 423, 424, 425, 426, 429,
	430, 435, 436, 437, 438, 439, 447, 448, 452, 470,
	471, 483, 496, 501, 428, 277, 478, 502, 0, 343,
	0, 0, 345, 261, 280, 291, 0, 491, 449, 212,
	416, 269, 201, 231, 215, 239, 254, 257, 295, 354,
	361, 390, 395, 274, 251, 229, 413, 226, 432, 455,
	456, 457, 459, 358, 246, 394, 0, 0, 341, 461,
	462, 287,
}

var yyPact = [...]int{
	3081, -1000, -405, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2004, 2047, -1000, -1000,
	-1000, -1000, 2140, -1000, 711, 1724, -1000, 1991, 3742, -1000,
	40908, 464, -1000, 39718, 463, 240, 40908, -1000, 136, -1000,
	116, 40908, 159, 39123, -1000, -1000, -313, 17693, 1917, 5,
	2, 40908, -1000, -1000, -1000, -1000, 2094, 1743, -1000, 324,
	-1000, -1000, -1000, -1000, -1000, -1000, 38528, -1000, -1000, -1000,
	1999, 1961, 2151, 617, 1928, -1000, 2053, 1743, -1000, 17693,
	2083, 2032, 17098, -1000, 17098, 406, -1000, -1000, 12923, -1000,
	-1000, 23653, 40908, 29008, 233, -1000, 1991, -1000, -1000, -1000,
	97, -1000, 299, 1605, -1000, 1599, -1000, 410, 598, 323,
	454, 438, 320, 319, 318, 314, 313, 312, 311, 303,
	330, -1000, 674, 674, -173, -184, 1127, 376, 371, 371,
	421, 1954, 1952, -1000, 679, -1000, 674, 674, 674, 375,
	674, 674, 674, 674, 279, 278, 674, 674, 674, 674,
	674, 674, 674, 674, 674, 674, 674, 674, 674, 674,
	674, 674, 674, 333, 1991, 241, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 40908, 272, 40908, -1000,
	540, 40908, 796, 796, 44, 796, 796, 796, 796, 179,
	611, 0, -1000, 151, 255, 148, 252, 780, 144, -1000,
	-1000, 236, 780, 1261, 660, 133, -1000, 796, 796, -1000,
	10523, 155, 10523, 10523, -1000, 1986, -1000, -1000, -1000, -1000,
	1130, -1000, 419, -1000, -1000, -1000, -1000, 40908, 37933, 316,
	703, -1000, -1000, -1000, 102, -1000, -1000, 1460, 956, 17693,
	928, -1000, 762, 592, -1000, -1000, -1000, -1000, -1000, 524,
	18288, 18288, 18288, 18288, -1000, -1000, 1659, 1659, 1659, 1659,
	18288, 1659, 18288, 1659, 1659, 1659, 1659, 17693, 1659, 1659,
	1659, -1000, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
	1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
	1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
	1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
	1659, 1659, 533, 1659, 1659, 1659, 1659, 1659, -1000, -1000,
	-1000, -1000, 1659, 1659, 1659, 1659, 1659, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 21268, -1000, 15313, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40908,
	-1000, 1659, 171, 40908, 40908, 327, 2053, 1743, -1000, 2094,
	2065, 324, -1000, 2243, 1491, 1546, 1268, 1743, 1564, 40908,
	-1000, 1668, -1000, -1000, -1000, 1835, 1189, 1259, -1000, -1000,
	-1000, -1000, 1475, 17693, -1000, -1000, 2134, -1000, 20673, 529,
	865, 2130, 37338, -1000, 406, 406, 1597, 12323, -41, -1000,
	-1000, -1000, 695, 26628, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1986, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1652, 40908, -1000, -1000,
	6185, 1236, -1000, 1723, -1000, 1649, -1000, 1682, 17693, 1731,
	460, 1236, 444, 429, 412, -1000, -86, -1000, -1000, -1000,
	-1000, -1000, -1000, 674, 674, 674, -1000, 322, 2080, 3742,
	6333, -1000, -1000, -1000, 36743, 1720, 1236, -1000, 1710, -1000,
	783, 501, 553, 553, 1236, -1000, -1000, 40908, 1236, 782,
	776, 1236, 1236, 40908, 40908, -1000, 36148, -1000, 35553, 34958,
	1101, 40908, 34363, 33768, 33173, 32578, 31983, -1000, 1837, -1000,
	1781, -1000, -1000, -1000, 40908, 1236, 40908, 40908, 288, -1000,
	-1000, 40908, 1236, -1000, -1000, 1094, 1093, 1080, 674, 674,
	1078, 1258, 1253, 1252, 674, 674, 1072, 1249, 27818, 1248,
	265, 1070, 1068, 1066, 1106, 1246, 180, 1240, 1065, 1024,
	1062, 40908, 1705, 40908, -1000, 234, 686, 384, 694, 1991,
	1905, 1594, 417, 459, 1236, 383, 383, 40908, -1000, 11123,
	-1000, -1000, 1239, 17693, -1000, 781, 780, 780, -1000, -1000,
	-1000, -1000, -1000, -1000, 796, 40908, 781, -1000, -1000, -1000,
	780, 796, 40908, 796, 796, 796, 796, 780, 780, 780,
	796, 40908, 40908, 40908, 40908, 40908, 40908, 40908, 40908, 40908,
	10523, 660, 796, -317, -1000, 1235, -1000, 1833, -1000, -1000,
	-1000, -1000, -1000, -1000, 10523, 10523, -1000, -1000, -1000, -1000,
	157, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-79, 1583, 31388, -1000, -322, -325, -327, -332, -1000, -1000,
	-1000, -335, -340, -1000, -1000, -1000, 17693, 17693, 17693, 17693,
	-216, -1000, 755, 18288, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 911, 682, 18288, 18288, 18288, 18288, 18288, 18288, 18288,
	18288, 18288, 18288, 18288, 18288, 18288, 18288, 18288, 844, 7142,
	7142, 592, 592, 592, 592, -1000, 17098, 17693, 17693, 592,
	-1000, 1236, 30793, 17098, 17098, 17693, 1972, 689, 956, 40908,
	-1000, 1268, -1000, -1000, -1000, 1067, -1000, 40908, 40908, 72,
	17693, 17693, 17693, 17693, 17693, 17693, 14118, 17693, 17693, 17693,
	17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693,
	17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693,
	17693, 17693, 17693, 13523, 11123, 17098, 17098, 17098, 17098, 17098,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 528, 1391, 1355, 1533, -1000, 1569, -1000, -158,
	23058, 17693, 1229, 2129, 1764, 40908, -1000, -1000, -1000, 2053,
	-1000, 2053, 1391, 1948, 1839, 17098, -1000, -1000, 1948, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1331, -1000, 40908,
	1564, 2028, 40908, 1832, 1212, 372, -1000, 17693, 17693, 1562,
	-1000, 964, 40908, -1000, -216, -1000, 30198, -1000, -1000, 9923,
	-1000, 40908, 300, 40908, -1000, 22463, 29603, 11723, -41, -1000,
	11723, 1511, -1000, -23, -21, 14713, 551, -1000, -1000, -1000,
	1127, 19478, 1386, 551, 65, -1000, -1000, -1000, 1682, -1000,
	1682, 1682, 1682, 1682, 372, 372, 372, 372, -1000, -1000,
	-1000, -1000, -1000, 1703, 1700, -1000, 1682, 1682, 1682, 1682,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1699, 1699, 1699,
	1686, 1686, 364, -1000, 17693, 198, 29008, 1996, 1048, 1099,
	234, 400, 1762, 1236, 1236, 1236, 400, -1000, 1313, 1302,
	1199, -1000, -397, 1560, -1000, -1000, 2079, -1000, -1000, 642,
	824, 812, 653, 40908, 176, 298, -1000, 354, -1000, 29008,
	1236, 775, 553, 1236, -1000, 1236, -1000, -1000, -1000, -1000,
	-1000, 1236, -1000, -1000, 1554, -1000, 1471, 885, 808, 884,
	791, 1554, -1000, -1000, -127, 1554, -1000, 1554, -1000, 1554,
	-1000, 1554, -1000, 1554, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 685, 130, 40908, 176, 844, -1000, 413, -1000,
	-1000, -1000, 844, 844, -1000, -1000, -1000, -1000, 1208, 1207,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -385,
	40908, -1000, 193, 681, 285, 325, 243, 40908, 227, 2034,
	263, 274, 40908, 40908, 383, 1805, 40908, 2022, 40908, -1000,
	-1000, -1000, -1000, -1000, 956, 40908, -1000, -1000, 796, 796,
	-1000, -1000, 40908, 796, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 796, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40908, -1000,
	-1000, -1000, -1000, 40908, -1000, -1000, -1000, -1000, -1000, 146,
	-27, 317, -1000, -1000, -1000, -1000, -1000, 2049, -1000, 956,
	725, 745, -1000, 1659, -1000, -1000, 924, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 911, 18288, 18288, 18288, 1017, 428,
	1149, 886, 901, 867, 867, 777, 777, 603, 603, 603,
	603, 603, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1203, -1000, 1580, -1000, 1227, 1519, 1268, -1000, 1580, 1580,
	1487, 17098, -1000, -1000, 716, -1000, 17693, 1268, -1000, -1000,
	1268, 1268, 1550, 1535, 2128, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 974, 1099, 1099, 1099,
	1099, 1099, 17693, 1282, -1000, -1000, -1000, 1853, 1847, 1268,
	1460, 1268, 1522, -1000, 1819, 1099, 1809, 1773, 1766, 998,
	1754, 1750, 1739, 1099, 1099, 1099, 1402, 1711, 1696, 1683,
	1669, 1664, 1656, 1641, 1627, 1591, 1099, 1268, 17098, 17098,
	1515, 1659, 523, -1000, 1580, 1268, 1268, 1580, 1580, 11123,
	1268, -1000, 40908, -1000, -307, -1000, -47, 662, 1659, -1000,
	27818, 1268, -1000, 7100, -1000, 42098, -1000, -1000, -1000, -1000,
	-1000, 26033, 1488, 1948, -1000, -1000, 1659, 1647, -1000, -1000,
	372, 33, 25438, -1000, -1000, 956, 956, 17693, -1000, -1000,
	-1000, -1000, -1000, -1000, 519, 2101, 294, 1659, -1000, 1480,
	1974, -1000, -1000, -1000, 2027, 20078, -1000, 1659, 1659, 40908,
	1660, 1639, -1000, 517, -1000, 1511, -41, -29, -1000, -1000,
	-1000, -1000, 956, -1000, 1109, 302, 2942, -1000, 351, -1000,
	-1000, -1000, -1000, 1933, 39, -1000, -1000, -1000, 372, 372,
	-1000, -1000, -1000, -1000, -1000, -1000, 1202, 1202, -1000, -1000,
	-1000, -1000, -1000, 1044, -1000, -1000, -1000, 1025, -1000, -1000,
	1555, 1735, 198, -1000, -1000, 674, 1200, -1000, -1000, 1936,
	674, 674, 40908, -1000, -1000, 1328, 1996, 193, 40908, 719,
	1802, -1000, 1762, 1762, 1762, 40908, -1000, -1000, -1000, -1000,
	-1000, -1000, -387, 61, 321, -1000, -1000, -1000, 5677, 40908,
	1644, -1000, 174, -1000, 1317, -1000, 40908, -1000, 1637, 1698,
	1236, 1236, -1000, -1000, -1000, 40908, 1659, -1000, -1000, -1000,
	-1000, 453, 1990, 1989, -1000, -1000, -235, 176, 174, 551,
	1236, -1000, -1000, -1000, -1000, -1000, -388, 1608, 432, 178,
	271, 40908, 40908, 40908, 40908, 40908, 506, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 268, 411, -1000, 40908, 40908,
	607, -1000, -1000, -1000, 780, -1000, -1000, 780, -1000, -1000,
	-1000, -1000, -1000, 1976, 40908, -31, -353, -1000, -349, 17693,
	-1000, -1000, -1000, -1000, 821, 424, 1149, 18288, 18288, 17098,
	-120, 530, 530, 844, -1000, -1000, -1000, 17693, 17693, 1520,
	710, -1000, 17693, 829, -1000, -1000, -1000, 17693, 17693, 17693,
	1268, 226, -1000, -1000, -1000, -1000, -1000, 2114, -1000, 17693,
	17693, 17693, -1000, -1000, 17693, 17693, -1000, 17693, 17693, 18883,
	1268, 18883, 17693, 17693, 18883, -1000, -1000, -1000, -1000, 18883,
	17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693, 17693, -1000,
	-1000, 1580, 1580, 17098, 11123, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 662, -1000, 553, 553, 553,
	40908, -1000, -1000, -1000, -1000, -1000, -1000, 1508, 2048, -1000,
	1871, 1861, 2110, 2101, -1000, 22463, 1948, -1000, -1000, 40908,
	-300, -1000, 1909, 1866, -1000, -1000, -1000, -1000, 9323, 2053,
	17693, 1799, 40908, 1659, -1000, 21868, 40908, 40908, 22463, 22463,
	22463, 22463, 22463, -1000, 1818, 1817, -1000, 1841, 1831, 1857,
	40908, -1000, 1577, 1268, 2065, 20078, 324, 17693, 24248, 1394,
	22463, -1000, -1000, 22463, 40908, 8723, -1000, -1000, -36, -42,
	-1000, -1000, -1000, -1000, 1127, -1000, -1000, 1311, 2025, 1927,
	-1000, -1000, -1000, -1000, 1575, -1000, 1572, 1504, 1548, 130,
	-1000, 1665, 1973, 674, 674, -1000, 1016, -1000, 1236, 1191,
	1190, -1000, -1000, -1000, 425, -1000, 2012, 40908, 1797, 1784,
	1779, -1000, -395, 1010, 1695, 1661, 17693, 1690, 2077, 1467,
	40908, -1000, -1000, 40908, -1000, 196, -1000, 198, 40908, -1000,
	-1000, -1000, 298, 40908, -1000, 6789, -1000, 174, -1000, -1000,
	-1000, -1000, -1000, -1000, 40908, 250, -1000, 1689, 1104, -1000,
	-1000, 1742, -1000, -1000, -1000, -1000, 160, 282, -1000, 40908,
	568, 1735, 40908, -1000, -1000, -1000, 796, 796, -1000, -1000,
	1960, -1000, 1236, 1099, 18288, 18288, -1000, 592, -1000, 1659,
	1268, 1682, 1682, -1000, 1682, 1686, -1000, 1682, 101, 1682,
	98, 1682, -1000, -1000, 1268, 1268, 1293, 1211, -93, -1000,
	956, 17693, 1561, 1551, 1099, -1000, 1681, 1678, 17693, 1099,
	1099, 1099, -1000, 956, 998, 1541, 1408, -1000, -1000, -1000,
	-1000, 1500, 1099, 1514, -298, 1268, 1542, 1542, 1542, 1542,
	1542, 1533, 1533, 1533, 1533, -1000, -1000, 1268, -1000, -1000,
	2044, 2044, 2044, 1456, 41503, 40908, -1000, -1000, -1000, -1000,
	2101, 2095, 1495, -1000, -1000, 33, 357, -1000, 1903, 1866,
	-1000, 2074, 1899, 2071, -1000, -1000, -1000, 956, -1000, 1975,
	1346, -1000, 678, 1422, -1000, -1000, 16503, 1485, 1860, 512,
	1456, 1438, 1974, 1761, 1778, 1931, -1000, -1000, -1000, -1000,
	1816, -1000, 1776, -1000, -1000, 1668, -1000, -1000, 1355, 1268,
	1506, 300, 22463, 1324, 1324, -1000, 510, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 846, 6527, 2150, -1000, 1186, -1000,
	1102, 187, 995, -1000, -1000, 674, 674, -1000, 771, 769,
	-1000, 40908, 1676, -1000, 372, 1185, 372, 989, -1000, 979,
	-1000, -1000, -1000, -1000, 1666, 1801, -1000, -1000, -1000, -1000,
	40908, -1000, -1000, 40908, 40908, 40908, 1675, 2069, -1000, 17693,
	1674, 677, 1286, 40908, 40908, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 418, 674, -360, 266,
	253, 674, 674, 674, -396, -1000, -1000, 1447, 1444, -1000,
	-164, -1000, 17693, -1000, -1000, -1000, 1020, 1020, -1000, 1668,
	-1000, -1000, -1000, 1312, -1000, -1000, -130, 40908, 40908, 40908,
	40908, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 592, 18288, -1000, -1000, 372, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 17693, -1000, 17693, -1000, 2053,
	1162, 956, 17693, 17693, -1000, 976, 927, 1099, -1000, -1000,
	-1000, 1268, 18883, -1000, 18883, -1000, 17693, 218, 530, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1659, 1951, 1659, 1659, 24248, -1000, -1000, 2095, 2090, 2067,
	1885, 1893, 1893, 1903, -1000, 2062, 2061, -1000, 1154, 2058,
	1153, 760, -1000, 40908, 17693, 1659, -1000, 315, 40908, 1659,
	40908, -1000, 2086, -1000, -1000, 17693, 1672, -1000, 17693, -1000,
	-1000, -1000, -1000, -1000, -1000, 7142, 2101, 1324, -1000, -1000,
	624, -1000, 17693, -1000, -1000, -1000, 3962, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1143, 1133, -1000, -1000, 1671,
	17693, -1000, -1000, -1000, 1306, 1294, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1668, -1000, -1000, -1000, -1000, 298, -394,
	1247, 40908, 917, -1000, 1441, 1467, 277, 1659, 1124, 674,
	674, 674, 912, 909, 27818, 1435, -1000, 40908, 334, -1000,
	298, -1000, -189, -190, 1099, -1000, -1000, 2024, -1000, -1000,
	11123, -1000, -1000, 1667, 1747, -1000, 225, -1000, 1099, 1099,
	1268, -1000, 1099, 1099, 1284, 1276, -1000, -1000, 1408, -1000,
	970, -1000, 218, 1268, 1777, -1000, -1000, 7142, -1000, 24843,
	-1000, 2055, 2050, 28413, 28413, 662, 2090, -1000, 17693, 17693,
	1881, 876, -1000, -1000, -1000, -1000, 1119, 1112, -1000, 1110,
	-1000, 2148, -1000, 956, -1000, 1659, -1000, 469, 1422, -1000,
	2053, 956, 40908, 956, 34, 2086, -1000, 1099, -1000, 1659,
	1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
	1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
	1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659, 1659,
	1659, -1000, -1000, 40908, 1083, -1000, -1000, 2000, 1406, 60,
	-1000, 1365, -1000, -1000, 491, -1000, 17693, -1000, 27818, 1000,
	966, -1000, -1000, -1000, -1000, -396, -1000, -1000, -1000, -1000,
	-1000, -1000, 324, 1463, -1000, 669, 40908, 40908, 1268, 267,
	-154, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	17693, -1000, 1268, 1774, -1000, -244, -1000, 1361, -1000, -1000,
	-1000, -1000, -1000, 1361, 1361, -1000, -1000, 956, 1460, -1000,
	872, -1000, -1000, -1000, -1000, -1000, 40908, 1422, 40908, -1000,
	1359, 1268, 1659, 2053, -1000, 1351, -1000, 324, -1000, 1655,
	1661, -1000, -1000, -1000, 15908, -1000, -1000, -1000, -1000, -1000,
	170, -129, 11123, 8123, 1327, -1000, -1000, 1828, -125, -162,
	998, -1000, -342, -1000, -1000, 27223, -1000, -1000, -1000, -1000,
	-1000, 1155, -1000, -1000, 24248, 40313, -1000, -118, 221, -129,
	17693, 1636, 1268, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -30, -1000, -1000, -1000, -1000, -1000, 1742, -1000, 1824,
	-1000, 1268, -1000, -1000, -1000, 1289, -1000, 2868, -266, 1768,
	-1000, -66, -1000, -1000, -1000, 839, 926, -1000, -1000, -1000,
	-1000, -1000, -1000, 863, 40908, -1000, 352, -1000, -1000, -130,
	-139, -1000, -1000, 40313, -260, 551, 7142, -1000, 1767, 1751,
	2109, -1000, -1000, -1000, -1000, -1000, -1000, -402, 1280, 224,
	-1000, -155, -1000, -1000, 2005, 34, -1000, 2145, -1000, 2137,
	572, 572, -1000, 899, -402, -1000, -170, -267, -1000, -1000,
	-1000, -1000, -1000, 338, 922, -1000, -1000, -1000, -1000, 7142,
	-1000, -1000, -1000, 194, 194, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2449, 2447, 24, 5, 34, 33, 2442, 41, 111,
	187, 53, 188, 104, 2440, 2438, 2437, 2436, 2434, 2433,
	2432, 217, 216, 215, 2430, 2429, 2427, 2426, 2425, 2424,
	2423, 2421, 2420, 2419, 212, 167, 186, 2418, 2417, 2414,
	126, 177, 95, 98, 179, 2413, 2410, 89, 2409, 2408,
	2407, 196, 195, 181, 707, 2406, 173, 120, 48, 2405,
	2404, 2403, 2402, 2401, 2400, 2399, 2398, 2397, 2396, 2395,
	2394, 2392, 2391, 2390, 2389, 2388, 241, 2387, 2386, 16,
	2385, 92, 2384, 2383, 2382, 2381, 135, 2380, 2379, 2378,
	35, 2377, 2376, 2375, 2374, 2373, 2372, 2371, 152, 2370,
	2369, 2367, 2363, 189, 2362, 2357, 183, 118, 128, 2356,
	2355, 106, 182, 2354, 132, 2353, 2352, 2350, 156, 2347,
	5065, 2346, 75, 73, 2345, 66, 85, 67, 60, 45,
	3, 2344, 2342, 74, 100, 2340, 115, 77, 2339, 107,
	116, 2338, 2337, 12, 7, 2334, 1, 4, 2, 80,
	2333, 2332, 130, 2331, 2330, 2329, 101, 2328, 2326, 4226,
	2325, 97, 146, 110, 83, 2324, 46, 71, 2323, 2322,
	2321, 2320, 2319, 58, 2317, 2316, 2315, 151, 68, 175,
	38, 37, 59, 144, 2314, 63, 90, 2309, 150, 149,
	2305, 69, 39, 40, 2304, 31, 145, 122, 25, 103,
	147, 2303, 2302, 61, 82, 2301, 2300, 2298, 2297, 2296,
	2295, 81, 2292, 52, 2291, 197, 2290, 14, 2289, 49,
	44, 2287, 79, 124, 78, 30, 2286, 171, 2285, 55,
	168, 140, 166, 2284, 2282, 2275, 2274, 180, 263, 2273,
	2272, 91, 170, 157, 161, 96, 2271, 259, 2269, 2268,
	99, 1490, 2560, 28, 169, 2265, 2264, 3682, 154, 36,
	17, 2262, 129, 2261, 2259, 2256, 190, 174, 125, 977,
	76, 2254, 2243, 13, 2242, 2238, 2234, 2232, 2229, 2227,
	86, 29, 27, 26, 192, 70, 9, 165, 84, 2226,
	2225, 2223, 134, 102, 2222, 164, 163, 143, 117, 2221,
	172, 153, 127, 2220, 273, 23, 2217, 2216, 2214, 2212,
	105, 2210, 2209, 2208, 2204, 162, 155, 133, 93, 2197,
	94, 131, 160, 159, 50, 2195, 47, 2194, 2193, 21,
	178, 20, 2190, 11, 65, 88, 22, 123, 138, 2185,
	0, 2184, 15, 176, 276, 158, 2182, 2181, 6, 8,
	10, 2180, 2179, 2178, 2177, 148, 2176, 2174, 2173, 2172,
	19, 43, 18, 32, 2171, 2170, 5320, 2793, 142, 2169,
	198,
}

//line sql.y:7000
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 364, 365, 365, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 340, 340,
	340, 343, 343, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	368, 368, 154, 154, 152, 152, 153, 153, 222, 222,
	24, 25, 25, 232, 232, 231, 231, 231, 233, 233,
	233, 233, 269, 269, 26, 26, 26, 26, 26, 104,
	104, 342, 342, 341, 333, 333, 332, 332, 331, 339,
	339, 338, 338, 337, 38, 39, 48, 48, 48, 48,
	49, 50, 344, 344, 306, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 308, 308, 294, 294, 307, 307, 307, 307, 307,
	307, 307, 293, 293, 115, 115, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 359, 359, 359, 358, 358, 202, 202,
	202, 202, 202, 202, 202, 202, 124, 124, 133, 133,
	133, 133, 133, 122, 122, 123, 121, 121, 121, 127,
	127, 127, 127, 127, 127, 127, 127, 127, 127, 127,
	127, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 132, 132, 128, 128, 128, 129, 129,
	129, 130, 130, 360, 360, 360, 360, 273, 273, 273,
	273, 276, 276, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 275, 275, 275, 275, 275, 277, 277, 277,
	277, 277, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 279, 279, 279,
	279, 279, 279, 279, 279, 292, 292, 280, 280, 287,
	287, 288, 288, 288, 289, 289, 289, 290, 290, 285,
	285, 285, 285, 285, 285, 286, 286, 286, 295, 320,
	320, 319, 319, 317, 317, 317, 317, 317, 317, 317,
	317, 304, 304, 314, 314, 314, 314, 314, 303, 303,
	299, 299, 299, 300, 300, 301, 301, 298, 298, 302,
	302, 316, 316, 315, 315, 296, 296, 297, 297, 322,
	361, 361, 361, 361, 361, 362, 362, 323, 351, 353,
	353, 353, 352, 352, 349, 350, 348, 348, 348, 348,
	348, 81, 81, 81, 245, 245, 246, 246, 312, 312,
	311, 311, 311, 313, 313, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 240, 240, 240, 347,
	347, 347, 347, 347, 347, 346, 346, 346, 309, 309,
	309, 345, 345, 57, 57, 186, 186, 45, 45, 45,
	45, 45, 45, 44, 44, 44, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 46, 46, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 325, 325, 58, 58, 3, 3, 142, 144,
	145, 145, 143, 143, 143, 143, 143, 143, 60, 60,
	59, 59, 147, 146, 148, 148, 148, 1, 1, 2,
	2, 4, 4, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 330, 330, 330, 330, 330,
	330, 330, 330, 330, 330, 291, 291, 291, 324, 324,
	326, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, 92, 91, 91, 90, 93, 93, 93, 93, 93,
	93, 93, 93, 328, 328, 328, 61, 61, 329, 281,
	282, 283, 5, 6, 305, 327, 100, 100, 28, 37,
	37, 29, 29, 29, 29, 30, 30, 62, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 239, 239,
	248, 248, 238, 238, 262, 262, 262, 241, 241, 241,
	242, 242, 357, 357, 357, 235, 235, 64, 64, 64,
	66, 66, 67, 68, 68, 264, 264, 265, 265, 69,
	70, 82, 82, 82, 82, 82, 82, 85, 85, 85,
	15, 15, 15, 15, 78, 78, 78, 14, 14, 65,
	65, 72, 354, 354, 355, 356, 356, 356, 356, 73,
	75, 31, 31, 31, 31, 31, 31, 110, 110, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 105, 105, 105, 99, 99, 369, 76, 77, 77,
	103, 103, 103, 96, 96, 96, 102, 102, 102, 16,
	16, 17, 221, 221, 18, 18, 107, 107, 109, 109,
	109, 109, 109, 111, 111, 111, 111, 111, 111, 111,
	106, 106, 108, 108, 108, 108, 255, 255, 255, 254,
	254, 136, 136, 138, 137, 137, 139, 139, 140, 140,
	140, 140, 184, 184, 162, 162, 219, 219, 217, 217,
	218, 218, 220, 220, 220, 220, 223, 223, 141, 141,
	141, 141, 149, 149, 150, 150, 151, 151, 263, 263,
	260, 260, 260, 259, 259, 155, 155, 155, 157, 156,
	156, 156, 156, 158, 158, 160, 160, 159, 159, 161,
	166, 166, 165, 165, 163, 163, 163, 163, 164, 164,
	164, 164, 167, 167, 120, 120, 120, 120, 120, 120,
	120, 131, 131, 131, 131, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 134, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	126, 126, 83, 83, 83, 236, 236, 168, 168, 176,
	176, 176, 176, 169, 169, 169, 169, 169, 169, 169,
	177, 177, 177, 183, 178, 178, 174, 174, 174, 174,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 271, 271,
	336, 336, 335, 335, 334, 334, 95, 95, 95, 95,
	95, 95, 95, 95, 95, 95, 95, 95, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 370, 370, 284,
	284, 284, 284, 175, 175, 175, 175, 175, 101, 101,
	101, 101, 101, 268, 268, 268, 272, 272, 272, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 189, 189, 97, 97, 187, 187,
	188, 190, 190, 185, 185, 185, 171, 171, 171, 191,
	191, 192, 192, 193, 193, 195, 194, 194, 196, 197,
	197, 197, 198, 198, 199, 199, 199, 47, 47, 47,
	47, 47, 42, 42, 42, 42, 43, 43, 43, 112,
	112, 112, 112, 114, 114, 113, 113, 79, 79, 80,
	80, 80, 118, 118, 119, 119, 119, 116, 116, 117,
	117, 215, 215, 200, 200, 200, 207, 207, 207, 203,
	203, 205, 205, 205, 206, 206, 206, 204, 212, 212,
	214, 214, 213, 213, 209, 209, 210, 210, 211, 211,
	211, 208, 208, 170, 170, 170, 170, 170, 216, 216,
	216, 216, 224, 224, 180, 180, 182, 182, 181, 135,
	225, 225, 229, 226, 226, 230, 230, 230, 230, 230,
	227, 227, 228, 228, 256, 256, 256, 234, 234, 247,
	247, 243, 243, 244, 244, 237, 237, 249, 249, 249,
	74, 179, 179, 321, 321, 318, 252, 252, 253, 253,
	257, 257, 261, 261, 258, 258, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 366, 367,
	266, 267, 267, 267,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 4, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 3, 3, 0, 2, 2, 2, 2,
	2, 2, 2, 4, 4, 3, 0, 1, 4, 3,
	4, 4, 3, 3, 3, 2, 1, 3, 3, 3,
	5, 7, 7, 6, 5, 3, 2, 3, 3, 3,
	7, 3, 3, 3, 3, 4, 7, 5, 2, 4,
	4, 4, 4, 4, 5, 5, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 2, 4, 4, 4, 4,
	4, 3, 3, 3, 5, 2, 3, 3, 2, 3,
	4, 4, 4, 3, 4, 4, 5, 3, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 4, 3, 7, 0, 3, 1, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	6, 3, 4, 3, 1, 3, 4, 5, 6, 3,
	4, 5, 6, 3, 4, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 3, 1, 1, 2, 2, 2, 2,
	1, 1, 2, 9, 6, 6, 6, 2, 2, 3,
	3, 3, 1, 1, 1, 0, 3, 1, 1, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 5, 5, 6,
	4, 4, 8, 6, 8, 6, 8, 5, 4, 2,
	2, 1, 2, 2, 2, 8, 8, 6, 5, 4,
	4, 4, 4, 4, 7, 4, 6, 6, 6, 4,
	4, 4, 7, 8, 6, 5, 6, 8, 11, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 0, 2,
	0, 2, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -364, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 219, -49, -39, 220,
	-50, 222, 221, 258, 223, 251, 74, 300, 301, 303,
	304, 305, 306, -85, 256, 257, 225, 36, 45, 33,
	34, 37, 229, 264, 265, 228, -10, -34, 8, -366,
	11, 430, 253, 252, 28, -12, 464, 85, -365, 604,
	-215, -200, 22, 33, 29, -199, -195, -103, -200, 20,
	18, 7, -76, -369, -76, -76, 12, 13, -76, -306,
	-308, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -330, -44, -41, 224, 221, 268,
	119, 120, 258, 259, 260, 223, 242, 257, 261, 256,
	277, -40, 80, 33, 464, 467, -313, 220, 226, 227,
	431, 122, 121, 75, 222, -310, 354, 496, 574, -56,
	576, 101, 103, 575, 44, 232, 577, 578, 579, 503,
	580, 241, 581, 582, 583, 584, 590, 545, 591, 592,
	593, 123, 7, -76, -261, -257, -340, -251, 88, 89,
	90, 461, 244, 494, 495, 293, 80, 41, 351, 354,
	496, 574, 300, 314, 308, 335, 327, 462, 497, 296,
	245, 281, 571, 325, 131, 576, 299, 498, 259, 359,
	360, 499, 361, 101, 303, 397, 589, 298, 500, 587,
	103, 575, 79, 51, 44, 254, 323, 228, 319, 577,
	282, 501, 472, 275, 122, 119, 596, 36, 317, 50,
	30, 586, 121, 49, 578, 146, 502, 579, 503, 363,
	342, 565, 48, 364, 260, 504, 83, 265, 466, 573,
	365, 318, 366, 292, 585, 225, 505, 557, 367, 368,
	566, 506, 343, 347, 507, 389, 369, 603, 52, 508,
	509, 567, 120, 510, 78, 580, 312, 313, 511, 290,
	243, 391, 339, 443, 450, 451, 107, 108, 446, 109,
	452, 110, 453, 454, 455, 444, 111, 104, 445, 456,
	457, 340, 341, 112, 458, 106, 105, 447, 449, 113,
	459, 241, 35, 370, 463, 294, 58, 269, 392, 46,
	345, 600, 45, 561, 512, 564, 338, 334, 440, 53,
	513, 514, 515, 516, 581, 337, 311, 333, 595, 4,
	287, 582, 62, 227, 349, 348, 350, 276, 388, 330,
	517, 518, 519, 248, 81, 520, 320, 21, 521, 522,
	371, 283, 523, 56, 524, 525, 395, 257, 526, 54,
	583, 39, 527, 262, 597, 584, 528, 529, 530, 531,
	264, 532, 373, 533, 372, 344, 346, 271, 374, 465,
	534, 316, 261, 588, 535, 249, 572, 263, 268, 256,
	396, 250, 536, 537, 538, 539, 540, 297, 556, 541,
	542, 304, 590, 441, 43, 543, 544, 545, 546, 547,
	291, 286, 390, 399, 61, 82, 356, 548, 549, 570,
	310, 284, 550, 301, 55, 591, 592, 593, 278, 594,
	9, 601, 602, 376, 123, 288, 289, 47, 331, 270,
	551, 552, 321, 322, 336, 309, 332, 302, 558, 272,
	377, 442, 258, 553, 398, 285, 352, 357, 469, 277,
	378, 569, 468, 329, 326, 279, 554, 379, 233, 273,
	274, 555, 559, 380, 381, 295, 382, 383, 384, 385,
	386, 387, 280, 467, 307, 324, 358, 411, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 439, 231, -76, 231, -159,
	-257, 231, -227, 360, -248, 362, 375, 370, 380, 368,
	-239, 371, 373, 271, -357, 389, 231, 377, 219, 363,
	372, 381, 382, 295, 383, 387, 280, 384, 385, 386,
	-340, 172, 579, 594, 131, 328, 367, 365, 390, 561,
	-257, 302, -264, 307, -252, -340, -251, 305, -159, -82,
	557, 223, -266, -266, -105, 561, 563, -178, -120, 139,
	-131, -134, -125, -126, -172, -173, -174, -175, -132, -185,
	161, 162, 169, 140, -183, -135, 26, 460, 432, 431,
	172, 31, 215, 68, 69, 434, 435, 142, 57, 407,
	408, -133, 402, 409, 404, 437, 438, 114, 439, 104,
	106, 105, 440, 441, 442, 340, 341, 443, 444, 445,
	107, 108, 109, 110, 111, 112, 113, 446, 449, 447,
	448, 450, 451, 452, 457, 458, 453, 454, 455, 456,
	459, -252, -257, 236, 401, 230, 167, 430, -127, -123,
	-8, -181, 400, 405, 406, 410, 403, -340, -251, -129,
	-128, -168, 91, 97, 102, 98, -363, 115, -366, 92,
	93, 94, 95, 96, 116, 117, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 44, 376,
	376, -159, -76, -76, -76, -76, -193, -103, -195, -10,
	-8, -366, 8, -76, -8, -9, -13, -34, -36, 490,
	-35, -257, -200, -215, 12, 157, 42, 50, -198, -199,
	-12, -8, -120, 19, 23, 24, -108, 163, -120, -257,
	-77, -108, -237, 235, -76, -76, -226, -269, 302, -230,
	390, 389, -253, -228, -252, -250, -227, 388, 224, 23,
	470, 138, 25, 27, 141, 172, 126, 19, 142, 37,
	226, 328, 242, 171, 238, 431, 219, 72, 471, 402,
	404, 400, 407, 433, 434, 401, 362, 31, 13, 473,
	28, 252, 24, 38, 165, 221, 145, 474, 255, 26,
	253, 114, 117, 476, 22, 75, 247, 14, 240, 40,
	16, 477, 478, 17, 236, 235, 157, 232, 70, 11,
	215, 29, 154, 66, 479, 133, 480, 481, 482, 483,
	127, 68, 155, 20, 598, 405, 406, 33, 562, 460,
	266, 167, 73, 59, 563, 139, 403, 484, 485, 115,
	486, 118, 76, 568, 135, 18, 71, 42, 487, 267,
	488, 237, 599, 489, 393, 490, 156, 222, 430, 69,
	491, 230, 375, 8, 436, 32, 251, 239, 125, 67,
	492, 231, 144, 437, 438, 234, 128, 116, 7, 132,
	34, 12, 74, 77, 408, 409, 410, 57, 124, 464,
	143, 15, 493, 394, 137, 131, -307, 155, -293, -297,
	-252, 246, -323, 242, -159, -316, -315, -252, -366, -104,
	-247, 232, 240, 239, 132, -344, 135, 288, 401, 230,
	-51, -52, -53, -227, 171, 578, -86, 263, 267, 86,
	86, -297, -296, -295, -345, 267, 246, -322, -314, 238,
	247, -303, 239, 240, -298, 232, 133, -345, -298, 237,
	247, 242, 246, 267, 267, 123, 267, 123, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 262, -304, 147,
	-304, 468, 468, -310, -345, 242, -345, -345, 234, 35,
	35, -249, -298, 234, 25, -304, -304, -304, -227, 171,
	-304, -304, -304, -304, 275, 275, -304, -304, -304, -304,
	-304, -304, -304, -304, -304, -304, -304, -304, -304, -304,
	-304, -304, -304, 231, -344, -112, 387, 295, 80, -54,
	277, -37, -159, -247, 232, 233, -344, 264, -159, 216,
	-159, -241, 155, 15, -241, -238, 376, 374, 361, 366,
	-241, -241, -241, -241, 278, 359, -299, 232, 35, 243,
	376, 278, 359, 278, 279, 278, 279, 369, 379, 278,
	-262, 14, 157, 401, 364, 368, 271, 231, 272, 233,
	378, 279, -262, 92, -242, 155, 376, 274, -241, -241,
	-267, -366, -253, 328, -340, 564, -267, -267, 32, 89,
	234, -252, -78, -252, 92, -15, -11, -22, -21, -23,
	147, -110, 376, -98, 172, 579, 565, 566, 567, 564,
	373, 572, 570, 568, 278, 569, 86, 135, 137, 138,
	4, -120, 154, -169, 147, 148, 149, 150, 151, 152,
	153, 157, 139, 141, 155, 156, 136, 158, 159, 160,
	161, 162, 163, 164, 166, 165, 167, 168, 171, 217,
	218, -126, -126, -126, -126, -183, -366, -366, -366, -126,
	-236, -366, -126, -366, -366, -366, -366, -189, -120, -366,
	-370, -366, -370, -370, -284, -366, -284, -366, -366, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, -366, -366, -366, -366, -366, -366,
	-366, -366, -366, -366, 216, -366, -366, -366, -366, -366,
	-284, -284, -284, -284, -284, 102, 97, 91, -185, 98,
	92, -252, -257, -8, -9, -178, -266, -354, -355, -162,
	-159, -366, 295, -252, -252, 264, -198, -12, -8, -193,
	-199, -195, -8, -76, -96, -109, 63, 64, -111, 24,
	38, 67, 65, 23, -367, 87, -367, -215, -367, 86,
	-36, -219, 85, 61, 43, 92, 92, 86, 21, -194,
	-196, -120, 14, -255, 4, -254, 25, -252, 92, 216,
	100, 14, -160, 29, -159, -237, -237, 86, 302, -230,
	-269, -232, -231, 391, 393, 147, -256, -252, 92, 31,
	87, 86, -159, -273, -276, -278, -277, -279, -274, -275,
	325, 326, 172, 329, 331, 332, 333, 334, 335, 336,
	337, 338, 339, 342, 32, 254, 321, 322, 323, 324,
	343, 344, 345, 346, 347, 348, 349, 350, 308, 327,
	462, 309, 310, 311, 312, 313, 314, 316, 317, 318,
	319, 320, -343, -340, 85, 87, 86, -280, 85, -120,
	-112, 231, -340, 232, 232, 232, -76, 430, -304, -304,
	-304, 262, 19, -44, -41, -330, 18, -40, -41, 224,
	119, 120, 221, 85, -293, 85, -302, -343, -340, 85,
	133, 237, 132, -301, -298, -301, -302, -340, -185, -340,
	133, 133, -340, -340, -223, -252, -223, -223, 23, -223,
	23, -223, 23, 94, -252, -223, 23, -223, 23, -223,
	23, -223, 23, -223, 23, 31, 78, 79, 31, 81,
	82, 83, -185, -340, -185, -293, -227, -159, -340, 94,
	94, 94, -304, -304, 94, 92, 92, 92, -304, -304,
	94, 92, -259, -257, 92, 92, -346, 248, 292, 294,
	94, 94, 94, 94, 31, 92, -347, 31, 586, 585,
	587, 588, 589, 92, 94, 31, 94, 31, 94, -252,
	85, -159, -118, 282, 219, 221, 224, 76, 92, 296,
	147, 44, 86, 234, 231, -340, -243, 236, -243, -252,
	-258, -257, -250, 92, -120, -300, 14, 157, -262, -262,
	-241, -159, -300, -262, -241, -159, -241, -241, -241, -241,
	-262, -262, -262, -241, -257, -257, -159, -159, -159, -159,
	-159, -159, -159, -267, -242, -241, 564, 92, -235, 14,
	76, -267, -267, -265, 305, 339, 558, 559, 560, 86,
	464, -152, -159, 564, 564, 564, 564, 564, 564, -120,
	-120, -120, -120, 486, -176, 115, 139, 116, 117, -134,
	-177, -181, -183, 99, 157, 141, 155, 156, -125, -126,
	-125, -125, -125, -125, -125, -125, -125, -125, -125, -125,
	-125, -125, -125, -268, -340, 92, 172, -130, -129, 98,
	-363, -130, -106, -108, -120, -120, -340, -252, -106, -106,
	-120, -102, 24, 38, -187, -188, 143, -185, -367, -367,
	94, 98, -252, -252, -95, -94, 412, 413, 414, 415,
	417, 418, 419, 422, 423, 427, 428, 411, 429, 416,
	421, 424, 425, 426, 420, 324, -120, -120, -120, -120,
	-120, -120, -83, -120, 126, 127, 128, -120, -120, -179,
	-178, -339, -338, -337, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -120, -120, -120,
	-120, -120, -120, -120, -120, -120, -120, -107, 24, 38,
	-106, -253, -258, -250, -106, -107, -107, -106, -106, 216,
	-215, -367, 86, -356, 393, 394, 562, -260, 267, -259,
	25, -179, 92, 14, -221, 77, -252, -198, -198, 63,
	64, 59, -106, -111, -367, -35, 25, -217, -252, 62,
	92, -285, -227, 351, 352, -120, -120, 86, -197, 27,
	28, -159, -254, 163, -258, -159, -222, 267, -159, -137,
	-139, -140, -141, -162, -184, -366, -142, 482, 479, 14,
	-152, -153, -161, -257, -230, -232, 86, 392, 394, 395,
	76, 118, -120, -286, 171, -312, -311, -310, -293, -295,
	-296, -297, 87, -286, -289, 357, 356, -280, -280, -280,
	-280, -280, -285, -285, -285, -285, 85, 85, -280, -280,
	-280, -280, -287, 85, -287, -287, -288, 85, -288, -323,
	-120, -320, -319, -317, -318, 241, 101, 555, 511, 464,
	503, 545, 77, -315, -197, 94, -367, -118, -244, 236,
	-321, -318, -340, -340, -340, -244, -340, 92, -340, 92,
	-340, 92, -87, -58, -1, 598, 599, 600, 86, 19,
	-294, -293, -57, 292, -326, -327, 267, -322, -316, -302,
	133, -301, -302, -302, -340, 86, 29, 123, 123, 123,
	123, 464, 221, 32, -245, 502, 139, -293, -57, -268,
	234, -268, -268, 92, 92, -240, 594, -152, -114, 284,
	147, 273, 273, 231, 231, 286, -159, 297, 299, 298,
	296, 23, 285, 287, 289, 275, -159, -159, -243, 76,
	-154, -159, 26, -257, -159, -241, -241, -159, -241, -241,
	-159, -252, -98, 393, 86, 464, 22, -99, 22, -366,
	115, 116, 117, -177, -125, -126, -125, 138, 255, 86,
	-367, 25, 86, 77, -367, -367, -367, 86, 14, -106,
	-190, -188, 145, -120, -367, -367, -367, 86, 86, 14,
	-272, 25, -367, -367, -367, -367, -367, -189, -367, 14,
	86, 86, -367, -367, 86, 86, -367, 86, 86, 86,
	-336, 86, 86, 86, 86, -367, -367, -367, -367, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, -367,
	-367, -106, -106, -366, 216, -367, -367, -367, -367, -367,
	-253, -355, 561, 394, -166, -165, -163, 74, 235, 75,
	-366, -259, -367, -130, 89, -218, 89, -217, -171, -252,
	94, 98, -200, -136, -138, 14, -111, -183, 87, 86,
	-285, -204, -209, -238, -252, 92, 172, -196, 216, -167,
	15, -170, 32, 57, -11, -366, -366, 32, 86, -155,
	-157, -156, -158, 66, 70, 72, 67, 68, 69, 73,
	-263, 25, -137, -9, -8, -366, -366, -366, -159, -152,
	-368, 14, 77, -368, 86, 216, -231, -233, 396, 393,
	399, -340, 92, -86, 86, -310, -297, -201, -115, 40,
	-290, 358, -285, -285, -292, 92, -292, 94, 94, 87,
	-47, -42, -43, 33, 80, -317, -304, 92, 39, -304,
	-304, -252, 87, -197, -114, -159, 139, 76, -321, -321,
	-321, -257, -2, 597, 603, 133, 85, 361, 18, -217,
	86, 87, -186, 293, 87, -88, -252, 87, 85, -302,
	-302, -252, -366, 231, 31, 31, 502, -57, -186, -286,
	-340, 596, 595, 87, 233, 291, -119, 407, -116, 92,
	88, -159, -159, -159, -159, -159, 224, 221, 276, 234,
	-152, -159, 86, -81, 250, 245, -262, -262, 33, -159,
	393, 573, 571, -120, 138, 255, -134, -126, -108, 461,
	-270, 172, 325, 254, 323, 319, 339, 330, 356, 321,
	357, 318, 317, 316, -270, -268, -120, -120, -193, 146,
	-120, 144, -120, -120, -120, -367, 172, 325, 14, -120,
	-120, -120, -337, -120, -120, -120, -335, -334, -130, -185,
	-367, -335, -120, -120, -334, -334, -338, -338, -338, -338,
	-338, -178, -178, -178, -178, -367, -367, -107, -253, -163,
	-298, -298, -298, -223, 86, -234, 22, 14, 57, 57,
	-136, -167, -137, -111, -252, -207, 557, -212, 46, -210,
	-211, 47, -208, 48, 56, 163, -198, -120, -224, 76,
	-225, -229, -185, -180, -182, -181, -366, -216, -367, -252,
	-223, -225, -139, -140, -140, -139, -140, 66, 66, 66,
	71, 66, 71, 66, -156, -257, -367, -367, -9, -9,
	-120, -260, 77, -137, -137, -161, -257, 163, 393, 397,
	398, -310, -362, 115, 139, 31, 76, 354, 101, -360,
	171, 499, 550, 555, 511, 503, 545, -361, 237, 132,
	133, 249, 25, 41, 87, 86, 87, 86, 87, 86,
	-246, -245, -43, -42, -304, -304, 94, -340, 92, 92,
	233, 26, -159, 76, 76, 76, -89, 601, 94, 85,
	-3, 80, -120, 85, 19, -293, -185, -328, -281, -329,
	-282, -283, -5, -6, -305, -92, 57, 101, -61, 44,
	232, 581, 582, 123, -366, 594, -320, -217, -324, -326,
	-159, -122, -366, -121, -123, -127, 161, 162, -186, -159,
	-113, 282, 290, 85, -117, 89, -342, 77, 273, 354,
	273, -159, -81, -47, -159, -241, -241, 33, -340, -367,
	-134, -126, -366, -367, -280, -280, -280, -288, -280, 313,
	-280, 313, -280, -367, -367, 86, -367, 22, -367, -97,
	436, -120, 86, 86, -367, 85, 85, -120, -367, -367,
	-367, -336, 86, -367, 86, -367, 86, -271, 556, -367,
	-367, -367, -367, -367, -367, -367, -367, -367, -367, -367,
	-164, 22, -164, -164, -367, 89, -159, -167, -191, 16,
	-204, 51, 331, -214, -213, 55, 47, -211, 19, 49,
	19, 30, -224, 86, 147, 86, -367, -367, 86, 57,
	216, -367, -167, -150, -149, 76, 77, -151, 76, -149,
	66, 66, -219, -367, -367, 86, -222, -137, -167, -167,
	216, 115, -366, -124, -133, -122, 12, 92, 92, -340,
	-359, 585, 586, 31, 94, -304, -304, 133, 133, -159,
	85, -285, 92, -285, 94, 94, 31, 81, 82, 83,
	31, 78, 79, -159, -159, -159, -159, -325, 85, 19,
	-120, 85, 147, 87, -217, -217, 269, 157, -304, 579,
	275, 275, -304, -304, -304, -91, -90, 601, 87, -367,
	86, -291, 464, 467, -120, -128, -128, -219, 87, -333,
	464, -341, -252, -252, -252, -252, -125, -285, -120, -120,
	-198, 92, -120, -120, 94, 94, -367, -367, -335, -334,
	-120, -367, -147, -146, -148, 565, 115, 31, -270, -366,
	66, 18, 16, -366, -366, -260, -191, -192, 17, 19,
	-205, 53, -203, 52, -203, -213, 19, 19, 92, 19,
	92, 133, -229, -120, -182, 57, -11, -252, -180, -252,
	-193, -120, 85, -120, -130, -167, -167, -120, -173, 439,
	104, 106, 105, 440, 441, 442, 340, 341, 443, 444,
	445, 107, 108, 109, 110, 111, 112, 113, 446, 449,
	447, 450, 451, 452, 457, 458, 453, 454, 455, 456,
	459, 92, 92, 85, -120, 87, 87, -219, -324, -58,
	87, -217, 94, 87, 270, -181, -366, 92, -304, -304,
	-304, 94, 94, -259, -367, 86, -252, -361, -326, 468,
	468, -367, 25, -332, -331, -253, 85, 77, -101, 157,
	464, -367, -367, -367, -367, -367, 87, 87, -367, -367,
	86, -367, -146, -148, -367, 76, -130, -220, -367, -252,
	237, 19, 19, -220, -220, -166, -192, -120, -178, -206,
	54, 76, 118, 92, 92, 92, 12, -180, 216, -198,
	-217, -144, 361, -193, -367, -217, 87, 25, 87, 603,
	133, 87, -181, -100, -366, 266, -259, 92, 92, -90,
	-93, -11, 86, 147, -217, -159, -367, 462, 73, 465,
	-120, -367, 76, 474, 565, 86, -367, -367, -367, 76,
	118, -225, -252, 87, -367, -366, -198, 87, -202, -11,
	85, -3, 266, -281, -329, -282, -283, -5, -6, -305,
	-79, 464, -331, -309, -253, 92, 94, 87, 62, 463,
	466, -336, -252, 237, -260, -145, -143, -252, 517, -352,
	-351, 460, -362, -358, 115, 139, 101, -360, 555, 511,
	124, 125, -79, -120, 85, -367, -80, 281, 561, -342,
	62, -367, -367, 86, 22, -273, -60, 528, -349, -350,
	76, -353, 367, 527, 548, 115, 92, 87, -217, 242,
	-333, 464, -143, 524, -286, -130, -350, 76, -349, 76,
	13, 12, -4, 602, 87, 283, 465, -59, 26, -144,
	-348, 250, 245, 248, 32, -348, 94, -4, 466, 528,
	244, 31, 115, -130, -147, -146, -146,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 806,
	806, 806, 0, 806, 0, 0, 806, -2, -2, 806,
	1292, 0, 806, 0, 0, -2, 738, 740, 0, 742,
	-2, 0, 0, 751, 1790, 1790, 801, 0, 0, 0,
	0, 0, 806, 806, 806, 806, 1153, 48, 806, 0,
	83, 84, 757, 758, 759, 63, 0, 1788, 1, 3,
	69, 73, 0, 0, 0, 56, 1162, 0, 76, 0,
	0, 810, 0, 808, 0, 1275, 806, 806, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 553, 490, 536, 488, 522, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 519, 1277, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1179, 153, 1293, 1290, 1291, 38, 39,
	40, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591,
	1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601,
	1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611,
	1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621,
	1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631,
	1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641,
	1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651,
	1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661,
	1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671,
	1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681,
	1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691,
	1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701,
	1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711,
	1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721,
	1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731,
	1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741,
	1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751,
	1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761,
	1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771,
	1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781,
	1782, 1783, 1784, 1785, 1786, 1787, 0, 1269, 0, 666,
	907, 0, 727, 727, 0, 727, 727, 727, 727, 0,
	0, 0, 678, 0, 0, 0, 0, 724, 0, 694,
	695, 0, 724, 0, 730, 0, 705, 727, 727, 708,
	1791, 0, 1791, 1791, 1260, 0, 721, 719, 733, 734,
	737, 741, 0, 746, 749, 1286, 1287, 0, 764, 47,
	1529, 756, 769, 770, 0, 802, 803, 43, 1004, 0,
	929, 934, 945, 958, 959, 960, 961, 962, 964, 965,
	0, 0, 0, 0, 970, 971, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 1134, 0, 1097,
	1097, 1021, 1097, 1099, 1099, 0, 0, 0, 1787, 1569,
	1577, 1578, 1600, 1685, 1733, 1573, 1574, 1555, 1567, 1570,
	1558, 1559, 1561, 1563, 1568, 1575, 1581, 1560, 1580, 1579,
	0, 1556, 1557, 1562, 1572, 1576, 1564, 1565, 1566, 1571,
	1582, 1143, 0, 0, 0, 0, 0, 0, 273, 274,
	1003, 1249, 1099, 1099, 1099, 1099, 1099, -2, -2, 219,
	220, 221, 222, 223, 224, 225, 0, 215, 0, 278,
	279, 275, 276, 277, 987, 988, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 1790, 0,
	779, 0, 0, 0, 0, 0, 1162, 0, 1154, 1153,
	61, 0, 806, -2, 0, 0, 0, 0, 45, 0,
	50, 866, 75, 74, 1201, 0, 0, 0, 57, 1163,
	65, 67, 1164, 0, 811, 812, 0, 842, 846, 0,
	807, 0, 0, 1276, 1275, 1275, 100, 0, 1729, 1253,
	-2, -2, 0, 0, 1288, 1289, 1262, -2, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357,
	1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437,
	1438, 1439, 1440, 1441, 1442, -2, 0, 0, 165, 166,
	0, 41, 398, 0, 161, 0, 391, 337, 0, 1179,
	0, 0, 0, 0, 0, 806, 0, 1270, 142, 143,
	150, 151, 152, 371, 371, 371, 533, 0, 0, 153,
	153, 497, 498, 499, 0, 0, -2, 396, 0, 482,
	0, 0, 385, 385, 389, 387, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 0, 372,
	0, 531, 532, 434, 0, 0, 0, 0, 0, 509,
	510, 0, 0, 1278, 1279, 0, 0, 0, 371, 371,
	0, 0, 0, 0, 371, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1192, 0, 0, 0, -2,
	0, 658, 0, 0, 0, 1271, 1271, 0, 665, 0,
	667, 668, 0, 0, 669, 0, 724, 724, 722, 723,
	671, 672, 673, 674, 727, 0, 0, 380, 381, 382,
	724, 727, 0, 727, 727, 727, 727, 724, 724, 724,
	727, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1791, 730, 727, 0, 701, 0, 702, 703, 706, 707,
	709, 1792, 1793, 1309, 1791, 1791, 713, 717, 1261, 739,
	747, 750, 767, 765, 766, 768, 760, 761, 762, 763,
	0, 781, 782, 787, 0, 0, 0, 0, 793, 794,
	795, 0, 0, 798, 799, 800, 0, 0, 0, 0,
	0, 927, 0, 0, 993, 994, 995, 996, 997, 998,
	999, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 966, 967, 968, 969, 972, 0, 0, 0, 977,
	978, 0, 0, 0, 0, 0, 816, 0, 1135, 0,
	1019, 0, 1020, 1022, 1023, 0, 1024, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 826, 0, 0, 826, 826, 0, 0,
	208, 209, 210, 211, 212, 226, 227, 228, 229, 230,
	280, 1143, 0, 1003, 0, 0, 44, 771, 772, 0,
	890, 1281, 0, 0, 822, 0, 55, 64, 66, 1162,
	59, 1162, 0, 828, 0, 0, -2, -2, 829, 835,
	836, 837, 838, 839, 52, 1789, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 349, 1204, 0, 0, 1155,
	1156, 1159, 0, 843, 1611, 847, 0, 849, 850, 0,
	809, 0, 98, 0, 906, 0, 0, 0, 1729, 1259,
	0, 102, 103, 0, 0, 0, 355, 1264, 1265, 1266,
	-2, 378, 0, 355, 344, 288, 289, 290, 337, 292,
	337, 337, 337, 337, 349, 349, 349, 349, 320, 321,
	322, 323, 324, 0, 0, 307, 337, 337, 337, 337,
	327, 328, 329, 330, 331, 332, 333, 334, 293, 294,
	295, 296, 297, 298, 299, 300, 301, 339, 339, 339,
	341, 341, 0, 42, 0, 359, 0, 1159, 0, 0,
	1192, 1273, 1283, 0, 0, 0, 1273, 120, 0, 0,
	0, 534, 564, 491, 523, 535, 0, 494, 495, -2,
	0, 0, 481, 0, 483, 0, 379, 0, -2, 0,
	389, 0, 385, 389, 386, 389, 377, 390, 513, 514,
	515, 0, 517, 518, 594, 876, 0, 0, 0, 0,
	0, 600, 601, 602, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 483, 0, 520, 0, 435,
	436, 437, 0, 0, 440, 441, 442, 443, 0, 0,
	446, 447, 448, 893, 894, 449, 450, 475, 476, 477,
	451, 452, 453, 454, 455, 456, 457, 469, 470, 471,
	472, 473, 474, 458, 459, 460, 461, 462, 463, 466,
	0, 135, 1183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1271, 0, 0, 0, 0, 825,
	908, 1294, 1295, 728, 729, 0, 383, 384, 727, 727,
	675, 714, 0, 727, 679, 715, 680, 682, 681, 683,
	696, 697, 727, 686, 725, 726, 687, 688, 689, 690,
	691, 692, 693, 710, 698, 699, 700, 731, 0, 735,
	736, 711, 712, 0, 748, 752, 753, 754, 755, 0,
	0, 784, 94, 789, 790, 791, 792, 804, 797, 1005,
	924, 925, 926, 0, 928, 931, 0, 989, 991, 933,
	935, 1000, 1001, 1002, 0, 0, 0, 0, 0, 939,
	943, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 963, 1113, 1114, 1115, 980, 281, 282,
	0, 981, 0, 840, 0, 0, 0, 979, 0, 0,
	0, 0, 817, 818, 1141, 1138, 0, 0, 1098, 1100,
	0, 0, 0, 0, 0, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1116, 0, 0, 0,
	0, 0, 1134, 0, 982, 983, 984, 0, 0, 0,
	1282, 0, 130, 131, 0, 0, 0, 0, 0, 1070,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	827, 1144, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1248, 0, 774, 775, 777, 0, 910, 0, 891,
	0, 0, 780, 0, 821, 0, 824, 58, 60, 833,
	834, 0, 851, 830, 54, 49, 0, 0, 868, 1202,
	349, 1224, 0, 353, 354, 1165, 1166, 0, 1158, 1160,
	1161, 77, 848, 844, 0, 922, 0, 0, 905, 0,
	854, 856, 857, 858, 888, 0, 861, 0, 0, 0,
	0, 0, 96, 907, 1254, 101, 0, 0, 106, 107,
	1255, 1256, 1257, 1258, 0, 553, -2, 430, 167, 169,
	170, 171, 162, -2, 347, 345, 346, 291, 349, 349,
	314, 315, 316, 317, 318, 319, 0, 0, 308, 309,
	310, 311, 302, 0, 303, 304, 305, 0, 306, 397,
	0, 1167, 360, 361, 363, 371, 0, 366, 367, 0,
	371, 371, 0, 392, 393, 0, 1159, 1183, 0, 0,
	0, 1284, 1283, 1283, 1283, 0, 155, 156, 157, 158,
	159, 160, 589, 0, 0, 565, 587, 588, 153, 0,
	0, 163, 485, 484, 0, 621, 0, 395, 0, 0,
	389, 389, 374, 375, 516, 0, 0, 596, 597, 598,
	599, 0, 0, 0, 505, 424, 0, 483, 485, 355,
	0, 438, 439, 444, 445, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 549, 550,
	551, 552, 1180, 1181, 1182, 0, 0, 659, 0, 0,
	421, 92, 1272, 664, 724, 685, 716, 724, 677, 684,
	704, 744, 788, 0, 0, 0, 0, 796, 0, 0,
	932, 990, 992, 936, 0, 940, 944, 0, 0, 0,
	0, 0, 0, 0, 986, 1010, 1011, 0, 0, 1153,
	0, 1139, 0, 0, 1018, 1101, 1102, 0, 0, 0,
	0, 0, 1029, 1030, 1031, 1032, 1033, 0, 1035, 0,
	0, 0, 1039, 1040, 0, 0, 1041, 0, 0, 0,
	0, 0, 0, 0, 0, 1053, 1054, 1055, 1056, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1067,
	1006, 0, 0, 826, 0, 1103, 1104, 1105, 1106, 1107,
	1144, 773, 776, 778, 864, 911, 912, 0, 0, 0,
	0, 892, 1280, 819, 820, 823, -2, 0, 0, 1146,
	0, 0, 851, 922, 852, 0, 831, 51, 867, 0,
	1206, 1205, 1218, 1231, 350, 351, 352, 1157, 0, 1162,
	0, 1242, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 0, 0, 895, 0, 0, 898, 0, 0, 0,
	0, 889, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 356, 357, 144, 153, 432, 168, 405, 0, 0,
	287, 348, 312, 313, 0, 335, 0, 0, 0, 426,
	116, 1171, 1170, 371, 371, 362, 0, 365, 0, 0,
	0, 1285, 338, 394, 0, 134, 0, 0, 0, 0,
	0, 140, 559, 0, 0, 566, 0, 0, 0, 489,
	0, 500, 501, 0, 593, -2, 655, 359, 0, 373,
	376, 877, 0, 0, 502, 0, 425, 485, 507, 508,
	521, 467, 468, 465, 0, 0, 1193, 1194, 1199, 1197,
	1198, 121, 541, 543, 542, 546, 0, 0, 539, 0,
	421, 1167, 0, 663, 422, 423, 727, 727, 783, 95,
	0, 786, 0, 0, 0, 0, 937, 941, 841, 0,
	0, 337, 337, 1121, 337, 341, 1124, 337, 1126, 337,
	1129, 337, 1132, 1133, 0, 0, 0, 0, 1136, 1017,
	1142, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	0, 0, 132, 133, 1070, 0, 0, 1072, 1074, 1075,
	1045, 1071, 0, 0, 1068, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1007, 1008, 0, 1145, 913,
	918, 918, 918, 0, 0, 0, 1267, 1268, 1147, 1148,
	922, 1149, 853, 832, 869, 1224, 0, 1217, 0, -2,
	1226, 0, 0, 0, 1232, 845, 78, 923, 81, 0,
	1242, 1250, 0, 1233, 1244, 1246, 0, 0, 0, 1238,
	0, 922, 855, 884, 886, 0, 881, 896, 897, 899,
	0, 901, 0, 903, 904, 866, 860, 862, 0, 0,
	0, 98, 0, 922, 922, 97, 0, 909, 108, 109,
	110, 431, 172, 177, 0, 0, 0, 182, 0, 184,
	0, 0, 0, 189, 190, 371, 371, 406, 0, 284,
	286, 0, 0, 175, 349, 0, 349, 0, 342, 0,
	407, 427, 1168, 1169, 0, 0, 364, 368, 369, 370,
	0, 1274, 136, 0, 0, 0, 562, 0, 590, 0,
	0, 0, 0, 0, 0, 164, 486, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 0, 371, 0, 0,
	0, 371, 371, 371, 0, 647, 358, 0, 0, 618,
	615, 503, 0, 213, 214, 216, 0, 0, 506, 866,
	1184, 1185, 1186, 0, 1196, 1200, 124, 0, 0, 0,
	0, 660, 661, 662, 93, 670, 676, 785, 805, 930,
	938, 942, 0, 974, 1119, 349, 1122, 1123, 1125, 1127,
	1128, 1130, 1131, 975, 976, 0, 1013, 0, 1015, 1162,
	0, 1140, 0, 0, 1027, 0, 0, 0, 1036, 1037,
	1038, 0, 0, 1044, 0, 1046, 0, 0, 0, 1057,
	1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1009,
	0, 0, 0, 0, 890, -2, 62, 1149, 1151, 0,
	1211, 1209, 1209, 1219, 1220, 0, 0, 1227, 0, 0,
	0, 0, 82, 0, 0, 0, 1247, 0, 0, 0,
	0, 99, 1153, 878, 885, 0, 0, 879, 0, 880,
	900, 902, 859, -2, 863, 0, 922, 922, 88, 89,
	0, 178, 0, 180, 206, 207, 0, 183, 185, 186,
	187, 193, 194, 195, 188, 0, 0, 283, 285, 0,
	0, 325, 336, 326, 0, 0, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 866, 137, 138, 139, 554, 0, 564,
	0, 0, 0, 557, 0, 492, 0, 0, 0, 371,
	371, 371, 0, 0, 0, 0, 632, 0, 0, 595,
	0, 603, 0, 0, 0, 217, 218, 0, 1195, 540,
	0, 122, 123, 0, 0, 545, 1108, 1120, 0, 0,
	0, 1137, 0, 0, 0, 0, 1034, 1042, 0, 1073,
	0, 1049, 0, 0, 0, 584, 585, 0, 1069, 0,
	919, 0, 0, 0, 0, 910, 1151, 80, 0, 0,
	1214, 0, 1207, 1210, 1208, 1221, 0, 0, 1228, 0,
	1230, 0, 1251, 1252, 1245, 0, 1237, 1240, 1236, 1239,
	1162, 882, 0, 887, 0, 1153, 87, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 0, 0, 340, 343, 0, 0, 0,
	555, 0, 567, 558, 0, 645, 0, 649, 0, 0,
	0, 652, 653, 654, 631, 0, 635, 399, 619, 616,
	617, 504, 0, 125, 126, 0, 0, 0, 0, 0,
	0, 1012, 1014, 1016, 1025, 1026, 1117, 1118, 1043, 1047,
	0, 1050, 0, 0, 1051, 0, 586, 0, 915, 872,
	873, 920, 921, 0, 0, 865, 79, 1152, 1150, 1203,
	0, 1212, 1213, 1222, 1223, 1229, 0, 1235, 0, 85,
	0, 0, 0, 1162, 179, 0, 198, 0, 563, 0,
	566, 556, 643, 644, 0, 656, 648, 650, 651, 633,
	-2, 1187, 0, 0, 0, 547, 973, 0, 0, 0,
	1070, 1052, 0, 582, 583, 0, 914, 916, 917, 1215,
	1216, 1243, 1241, 883, 890, 0, 86, 412, 405, 1187,
	0, 0, 0, 636, 637, 638, 639, 640, 641, 642,
	537, 1189, 127, 128, 478, 479, 480, 121, 1109, 0,
	1112, 0, 874, 875, 568, 0, 570, 0, -2, 400,
	413, 0, 173, 199, 200, 0, 0, 203, 204, 205,
	196, 197, 117, 0, 0, 657, 0, 1190, 1191, 124,
	1110, 1048, 569, 0, 0, 355, 0, 579, 401, 402,
	0, 408, 409, 410, 411, 201, 202, 591, 0, 0,
	544, 0, 571, 572, 580, 0, 403, 0, 404, 0,
	0, 0, 560, 0, 591, 1188, 0, 0, 581, 577,
	414, 416, 417, 0, 0, 415, 592, 561, 1111, 0,
	418, 419, 420, 573, 574, 575, 576,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 216, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 604,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:527
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:532
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:533
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:537
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:573
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:592
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:602
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:608
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:614
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:618
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:627
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:637
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:643
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:653
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:717
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:753
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:772
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:796
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:810
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:814
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:822
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:834
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:846
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:850
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:870
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:874
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:884
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:888
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:894
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:898
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:904
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:908
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:913
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:917
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:939
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:943
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:949
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:953
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:957
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:963
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:967
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:971
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:975
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:981
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:985
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1004
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1013
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1017
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1024
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1033
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1037
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1043
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1048
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1053
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1059
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1070
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1075
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1079
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1085
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1095
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1101
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1108
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1115
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1120
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1125
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1130
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1137
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1144
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1155
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1162
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1166
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1172
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1176
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1180
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1192
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1198
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1202
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1208
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1212
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1218
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1228
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1232
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1238
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1242
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1248
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1252
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1258
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1263
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1268
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1272
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1296
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1305
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1314
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1318
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1327
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1343
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1348
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1353
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1358
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1363
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1377
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1382
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1386
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1391
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1397
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1403
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1413
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1417
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1421
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1427
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1431
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1440
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1457
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1462
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1473
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1481
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1488
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1492
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1496
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1500
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1504
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1515
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1522
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1526
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1532
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1536
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1540
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1544
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1548
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1552
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1556
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1561
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1565
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1577
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1596
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1600
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1604
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1676
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1680
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1684
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1688
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1700
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1704
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1720
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1724
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1758
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1762
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1772
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1776
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1780
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1786
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1790
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1797
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1801
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1805
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1809
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1815
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2031
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2040
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2045
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2049
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2057
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2061
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2067
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2075
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2079
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2083
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2088
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2092
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2113
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2124
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2128
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2139
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2144
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2148
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2154
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2158
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2164
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2168
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2173
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2177
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2181
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2185
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2189
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2193
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2209
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2213
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2217
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2221
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2225
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2244
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2264
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2283
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2293
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2303
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2307
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2313
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2317
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2323
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2327
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2333
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2339
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2343
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2347
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2351
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2355
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2364
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2370
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2376
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2382
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2386
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2390
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2395
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2399
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2405
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2411
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2417
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2421
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2425
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2429
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2433
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2438
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2452
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2456
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2461
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2465
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2470
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2474
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2480
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2494
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2504
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2508
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2512
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2516
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2520
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2524
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2528
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2532
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2536
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2540
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2544
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2548
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2552
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2556
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2560
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2564
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2568
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2572
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2576
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2580
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2584
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2588
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2629
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2656
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2675
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2679
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2688
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2697
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2701
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2705
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2713
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2719
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2723
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2733
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2737
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2741
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2745
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2749
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2753
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2757
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2761
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2765
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2769
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2773
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2777
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2781
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2785
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2789
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2793
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2797
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2801
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2805
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2809
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2813
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2817
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2821
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2825
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2829
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2833
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2839
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2843
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2849
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2853
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2857
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2861
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2865
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2869
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2877
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2881
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2887
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2894
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2901
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2908
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2924
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2931
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2938
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2950
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2960
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2964
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2968
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2981
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2991
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2995
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3006
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3013
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3020
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3045
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3054
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3062
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3071
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3078
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3086
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3090
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3099
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3114
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3119
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3123
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3128
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3132
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3138
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3144
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3150
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3154
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3160
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3164
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3170
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3176
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3182
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3188
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3194
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3198
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3202
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3212
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3218
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3224
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3228
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3232
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3238
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3242
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3247
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3251
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3256
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3260
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3266
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3270
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3274
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3278
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3282
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3286
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3290
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3294
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3298
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3302
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3306
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3310
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3314
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3318
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3322
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3326
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3330
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3334
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3338
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3342
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3346
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3350
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3359
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3370
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3380
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3385
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3389
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3394
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3399
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3404
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3409
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3414
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3420
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3426
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3431
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3437
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3443
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3453
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3458
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3462
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3467
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3472
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3477
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3482
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3488
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3494
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3501
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3508
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3515
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3523
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3527
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3533
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3539
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3545
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3551
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3557
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3563
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3575
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3581
		{
			yyVAL.str = ""
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3585
		{
			yyVAL.str = ""
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3597
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3601
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3620
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3653
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3657
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3661
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3665
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3669
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3673
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3677
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3681
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3685
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3689
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3693
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3697
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3701
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3705
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3709
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3713
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3717
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3721
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3725
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3729
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3733
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3737
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3741
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3745
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3749
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3753
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3757
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3761
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3765
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3769
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3773
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3777
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3781
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3793
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3805
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = "extended "
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3860
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3864
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3884
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3888
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3894
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3898
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3902
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3912
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3918
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3942
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3946
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3950
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3956
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3960
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3972
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3976
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3981
		{
			yyVAL.empty = struct{}{}
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.empty = struct{}{}
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3986
		{
			yyVAL.empty = struct{}{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			yyVAL.empty = struct{}{}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3993
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4004
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4008
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4012
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4016
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4020
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4024
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.str = yyDollar[1].str
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = yyDollar[1].str
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = yyDollar[1].str
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4044
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4048
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4052
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4056
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4075
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4079
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4095
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4101
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4111
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4117
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4121
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4125
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4129
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4135
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4141
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4147
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4151
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4155
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4159
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4163
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4167
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4173
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4211
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4232
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4236
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4240
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = ""
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			setAllowComments(yylex, true)
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4258
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.strs = nil
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4268
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4274
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4278
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4282
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = ""
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = SQLCacheStr
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4300
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4308
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4314
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4318
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4330
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4335
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4339
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4345
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4349
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4358
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4363
		{
			yyVAL.strs = nil
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4379
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4385
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = SQLCacheStr
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = DistinctStr
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = DistinctStr
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = StraightJoinHint
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4415
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4419
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4425
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4429
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4433
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4437
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4442
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4450
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4457
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4462
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4466
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4472
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4478
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4492
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4496
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4500
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4504
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4510
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4514
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4520
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4524
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4533
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4539
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4543
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4549
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4559
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4563
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4567
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4571
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4577
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4594
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4598
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4602
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4606
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4612
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4614
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4618
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4620
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4624
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4629
		{
			yyVAL.empty = struct{}{}
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4631
		{
			yyVAL.empty = struct{}{}
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4634
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4642
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4655
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4659
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4663
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4669
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4675
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4679
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4683
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4687
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4693
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4697
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4707
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4711
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4727
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4736
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4742
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4746
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 914:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4752
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4756
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4760
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4764
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4769
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4773
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4777
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4781
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4787
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4791
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4798
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4802
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4822
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4829
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4833
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4871
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4883
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4887
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4947
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4951
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4983
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4987
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4991
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4999
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5039
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5043
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5049
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5053
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5057
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5063
		{
			yyVAL.str = ""
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5067
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5073
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5077
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5084
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5088
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5092
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5096
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5102
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5106
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5110
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5114
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5118
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5122
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5126
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5132
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5136
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5140
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5147
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5153
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5157
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5236
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5240
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5246
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5250
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5315
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5327
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5343
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5347
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5351
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5355
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5359
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5363
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5367
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5371
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5375
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5379
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5383
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5387
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5391
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5395
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5399
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5403
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5407
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5411
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5415
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5419
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5423
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5427
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5432
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5436
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5441
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5445
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5451
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5455
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5461
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5465
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5471
		{
		}
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5473
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5477
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5481
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5485
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5489
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5493
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5497
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5501
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5505
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5509
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5513
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5519
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5523
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5527
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5531
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5535
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5539
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5543
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5547
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5551
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5569
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5573
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5592
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5596
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5606
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5610
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5614
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5618
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5622
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5632
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5636
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5642
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5646
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5650
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5656
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5660
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5664
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5668
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5672
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5678
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5682
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5686
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5690
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5694
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5698
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5702
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5706
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5710
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5714
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5729
		{
			yyVAL.str = string("")
		}
	case 1137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5733
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5739
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5743
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5749
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5764
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5768
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5772
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5801
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5819
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5825
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5831
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5835
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5841
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5846
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5850
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5854
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5863
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5869
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5873
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5877
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5882
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5886
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5890
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5894
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5898
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5905
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5909
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5913
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5917
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5923
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5927
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5931
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5936
		{
			yyVAL.str = ""
		}
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5940
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5944
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5948
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5953
		{
			yyVAL.str = ""
		}
	case 1184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5957
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5963
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5967
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5972
		{
			yyVAL.str = ""
		}
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5976
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5981
		{
			yyVAL.str = "cascaded"
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5985
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5989
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1192:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5998
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6004
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6010
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6016
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6025
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6029
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6034
		{
			yyVAL.str = ""
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6038
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6044
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6048
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6054
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6058
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6062
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = ""
		}
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6075
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1209:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6080
		{
			yyVAL.str = ""
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6084
		{
			yyVAL.str = " header"
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6089
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6093
		{
			yyVAL.str = " manifest on"
		}
	case 1213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6097
		{
			yyVAL.str = " manifest off"
		}
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6102
		{
			yyVAL.str = ""
		}
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6106
		{
			yyVAL.str = " overwrite on"
		}
	case 1216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6110
		{
			yyVAL.str = " overwrite off"
		}
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6116
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6121
		{
			yyVAL.str = ""
		}
	case 1219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6125
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6131
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6135
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6141
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6145
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6150
		{
			yyVAL.str = ""
		}
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6154
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6160
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6164
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6170
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6174
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6178
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6183
		{
			yyVAL.str = ""
		}
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6187
		{
			yyVAL.str = " optionally"
		}
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6200
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6204
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6208
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6212
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6216
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6222
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6226
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6230
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1241:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6234
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1242:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6243
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6249
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6253
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6259
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6263
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6269
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6284
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6288
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6294
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6300
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6304
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6310
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6314
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6318
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6322
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6326
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6334
		{
			yyVAL.str = "charset"
		}
	case 1264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6344
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6348
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6352
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6361
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6363
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6368
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6371
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6373
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6376
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6378
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6381
		{
			yyVAL.empty = struct{}{}
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6383
		{
			yyVAL.empty = struct{}{}
		}
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6385
		{
			yyVAL.empty = struct{}{}
		}
	case 1280:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6389
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6398
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6405
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6409
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6415
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6419
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6426
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6432
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6436
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6442
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6446
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6453
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6970
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6979
		{
			decNesting(yylex)
		}
	case 1790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6984
		{
			skipToEnd(yylex)
		}
	case 1791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6989
		{
			skipToEnd(yylex)
		}
	case 1792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6993
		{
			skipToEnd(yylex)
		}
	case 1793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6997
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
