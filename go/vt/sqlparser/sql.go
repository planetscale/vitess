// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const DEFAULT = 57370
const SET = 57371
const LOCK = 57372
const UNLOCK = 57373
const KEYS = 57374
const DO = 57375
const CALL = 57376
const DISTINCTROW = 57377
const PARSER = 57378
const GENERATED = 57379
const ALWAYS = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const SUBQUERY_AS_EXPR = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const HEX = 57427
const STRING = 57428
const NCHAR_STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const EXTRACT = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const OFF = 57443
const DISCARD = 57444
const IMPORT = 57445
const ENABLE = 57446
const DISABLE = 57447
const TABLESPACE = 57448
const VIRTUAL = 57449
const STORED = 57450
const EMPTY_FROM_CLAUSE = 57451
const LOWER_THAN_CHARSET = 57452
const CHARSET = 57453
const UNIQUE = 57454
const KEY = 57455
const EXPRESSION_PREC_SETTER = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const UNDERSCORE_UTF8MB4 = 57483
const UNDERSCORE_UTF8 = 57484
const UNDERSCORE_LATIN1 = 57485
const INTERVAL = 57486
const JSON_EXTRACT_OP = 57487
const JSON_UNQUOTE_EXTRACT_OP = 57488
const CREATE = 57489
const ALTER = 57490
const DROP = 57491
const RENAME = 57492
const ANALYZE = 57493
const ADD = 57494
const FLUSH = 57495
const CHANGE = 57496
const MODIFY = 57497
const REVERT = 57498
const SCHEMA = 57499
const TABLE = 57500
const INDEX = 57501
const VIEW = 57502
const TO = 57503
const IGNORE = 57504
const IF = 57505
const PRIMARY = 57506
const COLUMN = 57507
const SPATIAL = 57508
const FULLTEXT = 57509
const KEY_BLOCK_SIZE = 57510
const CHECK = 57511
const INDEXES = 57512
const ACTION = 57513
const CASCADE = 57514
const CONSTRAINT = 57515
const FOREIGN = 57516
const NO = 57517
const REFERENCES = 57518
const RESTRICT = 57519
const SHOW = 57520
const DESCRIBE = 57521
const EXPLAIN = 57522
const DATE = 57523
const ESCAPE = 57524
const REPAIR = 57525
const OPTIMIZE = 57526
const TRUNCATE = 57527
const COALESCE = 57528
const EXCHANGE = 57529
const REBUILD = 57530
const PARTITIONING = 57531
const REMOVE = 57532
const MAXVALUE = 57533
const PARTITION = 57534
const REORGANIZE = 57535
const LESS = 57536
const THAN = 57537
const PROCEDURE = 57538
const TRIGGER = 57539
const VINDEX = 57540
const VINDEXES = 57541
const DIRECTORY = 57542
const NAME = 57543
const UPGRADE = 57544
const STATUS = 57545
const VARIABLES = 57546
const WARNINGS = 57547
const CASCADED = 57548
const DEFINER = 57549
const OPTION = 57550
const SQL = 57551
const UNDEFINED = 57552
const SEQUENCE = 57553
const MERGE = 57554
const TEMPORARY = 57555
const TEMPTABLE = 57556
const INVOKER = 57557
const SECURITY = 57558
const FIRST = 57559
const AFTER = 57560
const LAST = 57561
const VITESS_MIGRATION = 57562
const CANCEL = 57563
const RETRY = 57564
const COMPLETE = 57565
const CLEANUP = 57566
const BEGIN = 57567
const START = 57568
const TRANSACTION = 57569
const COMMIT = 57570
const ROLLBACK = 57571
const SAVEPOINT = 57572
const RELEASE = 57573
const WORK = 57574
const BIT = 57575
const TINYINT = 57576
const SMALLINT = 57577
const MEDIUMINT = 57578
const INT = 57579
const INTEGER = 57580
const BIGINT = 57581
const INTNUM = 57582
const REAL = 57583
const DOUBLE = 57584
const FLOAT_TYPE = 57585
const DECIMAL = 57586
const NUMERIC = 57587
const TIME = 57588
const TIMESTAMP = 57589
const DATETIME = 57590
const YEAR = 57591
const CHAR = 57592
const VARCHAR = 57593
const BOOL = 57594
const CHARACTER = 57595
const VARBINARY = 57596
const NCHAR = 57597
const TEXT = 57598
const TINYTEXT = 57599
const MEDIUMTEXT = 57600
const LONGTEXT = 57601
const BLOB = 57602
const TINYBLOB = 57603
const MEDIUMBLOB = 57604
const LONGBLOB = 57605
const JSON = 57606
const ENUM = 57607
const GEOMETRY = 57608
const POINT = 57609
const LINESTRING = 57610
const POLYGON = 57611
const GEOMETRYCOLLECTION = 57612
const MULTIPOINT = 57613
const MULTILINESTRING = 57614
const MULTIPOLYGON = 57615
const NULLX = 57616
const AUTO_INCREMENT = 57617
const APPROXNUM = 57618
const SIGNED = 57619
const UNSIGNED = 57620
const ZEROFILL = 57621
const CODE = 57622
const COLLATION = 57623
const COLUMNS = 57624
const DATABASES = 57625
const ENGINES = 57626
const EVENT = 57627
const EXTENDED = 57628
const FIELDS = 57629
const FULL = 57630
const FUNCTION = 57631
const GTID_EXECUTED = 57632
const KEYSPACES = 57633
const OPEN = 57634
const PLUGINS = 57635
const PRIVILEGES = 57636
const PROCESSLIST = 57637
const SCHEMAS = 57638
const TABLES = 57639
const TRIGGERS = 57640
const USER = 57641
const VGTID_EXECUTED = 57642
const VITESS_KEYSPACES = 57643
const VITESS_METADATA = 57644
const VITESS_MIGRATIONS = 57645
const VITESS_REPLICATION_STATUS = 57646
const VITESS_SHARDS = 57647
const VITESS_TABLETS = 57648
const VSCHEMA = 57649
const NAMES = 57650
const GLOBAL = 57651
const SESSION = 57652
const ISOLATION = 57653
const LEVEL = 57654
const READ = 57655
const WRITE = 57656
const ONLY = 57657
const REPEATABLE = 57658
const COMMITTED = 57659
const UNCOMMITTED = 57660
const SERIALIZABLE = 57661
const CURRENT_TIMESTAMP = 57662
const DATABASE = 57663
const CURRENT_DATE = 57664
const CURRENT_TIME = 57665
const LOCALTIME = 57666
const LOCALTIMESTAMP = 57667
const CURRENT_USER = 57668
const UTC_DATE = 57669
const UTC_TIME = 57670
const UTC_TIMESTAMP = 57671
const DAY = 57672
const DAY_HOUR = 57673
const DAY_MICROSECOND = 57674
const DAY_MINUTE = 57675
const DAY_SECOND = 57676
const HOUR = 57677
const HOUR_MICROSECOND = 57678
const HOUR_MINUTE = 57679
const HOUR_SECOND = 57680
const MICROSECOND = 57681
const MINUTE = 57682
const MINUTE_MICROSECOND = 57683
const MINUTE_SECOND = 57684
const MONTH = 57685
const QUARTER = 57686
const SECOND = 57687
const SECOND_MICROSECOND = 57688
const YEAR_MONTH = 57689
const WEEK = 57690
const REPLACE = 57691
const CONVERT = 57692
const CAST = 57693
const SUBSTR = 57694
const SUBSTRING = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const MATCH = 57700
const AGAINST = 57701
const BOOLEAN = 57702
const LANGUAGE = 57703
const WITH = 57704
const QUERY = 57705
const EXPANSION = 57706
const WITHOUT = 57707
const VALIDATION = 57708
const UNUSED = 57709
const ARRAY = 57710
const CUME_DIST = 57711
const DESCRIPTION = 57712
const DENSE_RANK = 57713
const EMPTY = 57714
const EXCEPT = 57715
const FIRST_VALUE = 57716
const GROUPING = 57717
const GROUPS = 57718
const JSON_TABLE = 57719
const LAG = 57720
const LAST_VALUE = 57721
const LATERAL = 57722
const LEAD = 57723
const MEMBER = 57724
const NTH_VALUE = 57725
const NTILE = 57726
const OF = 57727
const OVER = 57728
const PERCENT_RANK = 57729
const RANK = 57730
const RECURSIVE = 57731
const ROW_NUMBER = 57732
const SYSTEM = 57733
const WINDOW = 57734
const ACTIVE = 57735
const ADMIN = 57736
const BUCKETS = 57737
const CLONE = 57738
const COMPONENT = 57739
const DEFINITION = 57740
const ENFORCED = 57741
const EXCLUDE = 57742
const FOLLOWING = 57743
const GEOMCOLLECTION = 57744
const GET_MASTER_PUBLIC_KEY = 57745
const HISTOGRAM = 57746
const HISTORY = 57747
const INACTIVE = 57748
const INVISIBLE = 57749
const LOCKED = 57750
const MASTER_COMPRESSION_ALGORITHMS = 57751
const MASTER_PUBLIC_KEY_PATH = 57752
const MASTER_TLS_CIPHERSUITES = 57753
const MASTER_ZSTD_COMPRESSION_LEVEL = 57754
const NESTED = 57755
const NETWORK_NAMESPACE = 57756
const NOWAIT = 57757
const NULLS = 57758
const OJ = 57759
const OLD = 57760
const OPTIONAL = 57761
const ORDINALITY = 57762
const ORGANIZATION = 57763
const OTHERS = 57764
const PATH = 57765
const PERSIST = 57766
const PERSIST_ONLY = 57767
const PRECEDING = 57768
const PRIVILEGE_CHECKS_USER = 57769
const PROCESS = 57770
const RANDOM = 57771
const REFERENCE = 57772
const REQUIRE_ROW_FORMAT = 57773
const RESOURCE = 57774
const RESPECT = 57775
const RESTART = 57776
const RETAIN = 57777
const REUSE = 57778
const ROLE = 57779
const SECONDARY = 57780
const SECONDARY_ENGINE = 57781
const SECONDARY_LOAD = 57782
const SECONDARY_UNLOAD = 57783
const SKIP = 57784
const SRID = 57785
const THREAD_PRIORITY = 57786
const TIES = 57787
const UNBOUNDED = 57788
const VCPU = 57789
const VISIBLE = 57790
const FORMAT = 57791
const TREE = 57792
const VITESS = 57793
const TRADITIONAL = 57794
const LOCAL = 57795
const LOW_PRIORITY = 57796
const NO_WRITE_TO_BINLOG = 57797
const LOGS = 57798
const ERROR = 57799
const GENERAL = 57800
const HOSTS = 57801
const OPTIMIZER_COSTS = 57802
const USER_RESOURCES = 57803
const SLOW = 57804
const CHANNEL = 57805
const RELAY = 57806
const EXPORT = 57807
const AVG_ROW_LENGTH = 57808
const CONNECTION = 57809
const CHECKSUM = 57810
const DELAY_KEY_WRITE = 57811
const ENCRYPTION = 57812
const ENGINE = 57813
const INSERT_METHOD = 57814
const MAX_ROWS = 57815
const MIN_ROWS = 57816
const PACK_KEYS = 57817
const PASSWORD = 57818
const FIXED = 57819
const DYNAMIC = 57820
const COMPRESSED = 57821
const REDUNDANT = 57822
const COMPACT = 57823
const ROW_FORMAT = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const STORAGE = 57828
const MEMORY = 57829
const DISK = 57830
const PARTITIONS = 57831
const LINEAR = 57832
const RANGE = 57833
const LIST = 57834
const SUBPARTITION = 57835
const SUBPARTITIONS = 57836
const HASH = 57837

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	9, 43,
	10, 43,
	-2, 33,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	1, 135,
	513, 135,
	-2, 141,
	-1, 43,
	114, 141,
	154, 141,
	270, 141,
	-2, 402,
	-1, 50,
	32, 575,
	176, 575,
	187, 575,
	220, 589,
	221, 589,
	-2, 577,
	-1, 55,
	178, 599,
	-2, 597,
	-1, 105,
	175, 1044,
	-2, 114,
	-1, 107,
	1, 136,
	513, 136,
	-2, 141,
	-1, 117,
	115, 305,
	181, 305,
	-2, 396,
	-1, 136,
	114, 141,
	154, 141,
	270, 141,
	-2, 411,
	-1, 595,
	161, 1065,
	-2, 1061,
	-1, 596,
	161, 1066,
	-2, 1062,
	-1, 629,
	56, 667,
	-2, 675,
	-1, 665,
	130, 1423,
	-2, 107,
	-1, 666,
	130, 1300,
	-2, 108,
	-1, 672,
	130, 1354,
	-2, 1038,
	-1, 814,
	130, 1233,
	-2, 1035,
	-1, 850,
	186, 37,
	191, 37,
	-2, 316,
	-1, 927,
	1, 450,
	513, 450,
	-2, 141,
	-1, 1123,
	56, 668,
	-2, 680,
	-1, 1124,
	56, 669,
	-2, 681,
	-1, 1175,
	114, 141,
	154, 141,
	270, 141,
	-2, 346,
	-1, 1178,
	22, 160,
	-2, 162,
	-1, 1251,
	115, 305,
	181, 305,
	-2, 396,
	-1, 1260,
	186, 38,
	191, 38,
	-2, 317,
	-1, 1510,
	161, 1070,
	-2, 1064,
	-1, 1584,
	114, 141,
	154, 141,
	270, 141,
	-2, 347,
	-1, 1818,
	74, 89,
	83, 89,
	-2, 733,
	-1, 1986,
	46, 1006,
	-2, 1000,
	-1, 2173,
	5, 49,
	15, 49,
	17, 49,
	84, 49,
	-2, 708,
}

const yyPrivate = 57344

const yyLast = 31529

var yyAct = [...]int{
	595, 2387, 2438, 2354, 1541, 2409, 2218, 2324, 2326, 2179,
	2360, 2093, 2081, 2373, 2290, 990, 3, 1995, 1998, 644,
	1105, 622, 589, 33, 1838, 2242, 590, 2082, 1845, 1765,
	1847, 1977, 1999, 1138, 547, 2144, 1996, 1524, 2247, 88,
	598, 1557, 2164, 551, 1993, 1987, 173, 544, 1785, 173,
	2137, 511, 173, 1814, 938, 1864, 1616, 527, 2234, 173,
	1887, 1545, 1925, 1621, 587, 573, 2040, 173, 588, 545,
	1636, 1865, 32, 1803, 1866, 1570, 1125, 34, 1562, 173,
	1504, 543, 880, 539, 145, 1777, 645, 1561, 1941, 1581,
	670, 1455, 626, 1232, 630, 817, 1462, 131, 1681, 1635,
	527, 1623, 1858, 527, 173, 527, 1649, 1414, 624, 845,
	1820, 556, 647, 1147, 1526, 667, 1167, 1564, 1108, 1365,
	87, 1474, 1274, 1432, 1008, 1507, 824, 1265, 1633, 1362,
	83, 851, 825, 821, 848, 1348, 846, 847, 1166, 1550,
	1151, 636, 1250, 657, 631, 858, 1370, 634, 988, 632,
	1612, 148, 983, 108, 1164, 1546, 1227, 68, 967, 89,
	114, 115, 923, 534, 90, 1078, 77, 7, 1074, 633,
	69, 6, 1258, 5, 1517, 2422, 109, 2272, 81, 2439,
	2181, 2182, 2183, 2181, 2355, 2327, 116, 1905, 1904, 1679,
	1787, 652, 1933, 1934, 110, 1421, 833, 175, 176, 177,
	828, 175, 176, 177, 1420, 1334, 484, 82, 1419, 1418,
	1521, 1522, 818, 638, 1417, 1416, 882, 1403, 537, 1408,
	538, 885, 2401, 94, 535, 1763, 514, 625, 623, 896,
	897, 1983, 900, 901, 902, 903, 2195, 1009, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 861, 664, 671, 646, 2062, 639, 110,
	96, 839, 99, 1628, 862, 105, 840, 501, 170, 2286,
	2285, 479, 886, 887, 888, 2213, 500, 884, 2214, 70,
	883, 72, 2432, 2383, 838, 1009, 1626, 498, 2427, 2342,
	893, 621, 169, 2417, 629, 70, 2219, 1719, 2374, 1667,
	2382, 1940, 1019, 2341, 898, 2125, 1241, 1829, 1912, 70,
	1828, 70, 1911, 1830, 1040, 111, 837, 1764, 932, 933,
	2031, 659, 660, 110, 974, 495, 976, 1932, 153, 1168,
	832, 1169, 1794, 834, 509, 2295, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1049, 1048, 1050, 1051, 2032, 2033, 506,
	1019, 1523, 1716, 579, 1575, 79, 986, 1795, 957, 2260,
	619, 1717, 973, 975, 1576, 1577, 618, 922, 945, 926,
	1835, 79, 835, 946, 1625, 945, 958, 962, 963, 2274,
	946, 944, 515, 943, 150, 79, 151, 79, 1855, 837,
	514, 829, 2141, 1015, 951, 525, 168, 1407, 831, 830,
	1596, 1595, 2117, 2115, 523, 1409, 1410, 1411, 2095, 529,
	485, 1888, 487, 502, 1650, 517, 514, 516, 491, 1112,
	489, 493, 503, 494, 1908, 488, 654, 499, 514, 1354,
	490, 504, 505, 507, 521, 520, 508, 1682, 497, 518,
	1349, 1015, 2089, 1687, 1007, 835, 175, 176, 177, 1324,
	2090, 971, 2426, 959, 985, 972, 899, 1693, 1690, 1692,
	1691, 960, 961, 154, 964, 977, 837, 921, 841, 2402,
	980, 952, 159, 928, 965, 514, 966, 2097, 1920, 173,
	836, 173, 1698, 905, 173, 2096, 1695, 970, 1696, 540,
	1697, 1325, 904, 1326, 1686, 1684, 1688, 2282, 2415, 2208,
	1652, 869, 978, 1558, 1834, 878, 1851, 877, 876, 875,
	874, 842, 527, 527, 527, 873, 872, 871, 648, 866,
	867, 1244, 879, 822, 1052, 822, 2423, 1717, 854, 925,
	527, 527, 1052, 822, 1685, 853, 1264, 820, 1924, 955,
	941, 658, 947, 948, 949, 950, 515, 1363, 1001, 1634,
	1921, 2061, 1673, 836, 33, 1014, 1011, 1012, 1013, 1018,
	1020, 1017, 1359, 1016, 995, 987, 1910, 889, 1627, 1936,
	1010, 2421, 515, 2271, 2296, 2413, 2069, 1730, 1355, 146,
	1907, 860, 519, 1969, 515, 1942, 1968, 2319, 1967, 979,
	591, 1239, 574, 576, 592, 593, 2275, 572, 575, 594,
	512, 870, 1263, 1014, 1011, 1012, 1013, 1018, 1020, 1017,
	2340, 1016, 1766, 1768, 1238, 513, 924, 2142, 1010, 173,
	868, 860, 1055, 1056, 1057, 1058, 577, 578, 1944, 1103,
	836, 515, 1063, 1927, 1066, 1237, 173, 1897, 1926, 73,
	1052, 859, 1113, 1841, 1927, 895, 1115, 1116, 1098, 1926,
	1119, 1360, 78, 1235, 483, 527, 626, 1718, 173, 478,
	1353, 992, 993, 527, 981, 624, 1118, 107, 78, 527,
	1059, 1336, 1335, 1337, 1338, 1339, 934, 942, 667, 1104,
	931, 859, 78, 954, 78, 2178, 863, 853, 1842, 860,
	1669, 1946, 2160, 1950, 956, 1945, 864, 1943, 1825, 1004,
	1104, 69, 1948, 1002, 1919, 1003, 1792, 1918, 2030, 1053,
	1054, 1947, 1844, 1117, 865, 1755, 1839, 87, 1516, 1155,
	1767, 1085, 936, 1582, 1949, 1951, 1051, 940, 641, 984,
	1849, 1850, 1437, 968, 2353, 2411, 1109, 1840, 2412, 860,
	2410, 1076, 1080, 1077, 1371, 860, 1438, 1439, 1436, 859,
	2336, 1350, 2154, 1351, 863, 853, 1352, 1091, 1092, 1093,
	1094, 90, 881, 1683, 864, 1356, 1170, 102, 1005, 1846,
	147, 152, 149, 155, 156, 157, 158, 160, 161, 162,
	163, 1106, 1957, 1137, 1475, 623, 164, 165, 166, 167,
	1114, 625, 1475, 1877, 1744, 2436, 1848, 1023, 1024, 859,
	1024, 894, 2256, 1160, 1161, 859, 1134, 1022, 1851, 1023,
	1024, 853, 856, 857, 2051, 822, 1959, 173, 671, 850,
	854, 1228, 2366, 103, 2050, 1656, 2364, 1668, 1273, 1022,
	1236, 1023, 1024, 1272, 1262, 2368, 2369, 1666, 849, 927,
	1849, 1850, 175, 176, 177, 1664, 1457, 2365, 869, 527,
	2122, 1260, 1120, 939, 867, 2395, 175, 176, 177, 1269,
	1789, 2345, 969, 1271, 2036, 2424, 527, 527, 1156, 527,
	2441, 527, 527, 1372, 527, 527, 527, 527, 527, 527,
	860, 1044, 1045, 1046, 1047, 1049, 1048, 1050, 1051, 527,
	2120, 1132, 2346, 173, 1307, 1042, 1043, 1044, 1045, 1046,
	1047, 1049, 1048, 1050, 1051, 1270, 1848, 1843, 1022, 173,
	1023, 1024, 1458, 2386, 1165, 1132, 2356, 1661, 1851, 1661,
	527, 79, 173, 1242, 1243, 1022, 1790, 1023, 1024, 2194,
	1302, 1303, 1343, 1361, 1435, 2193, 2312, 173, 2425, 1740,
	859, 2067, 1249, 1665, 1256, 1663, 853, 856, 857, 1022,
	822, 1023, 1024, 173, 850, 854, 609, 610, 1551, 1552,
	173, 1046, 1047, 1049, 1048, 1050, 1051, 2313, 1025, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 527, 527,
	527, 1310, 1311, 1862, 1304, 1267, 1246, 1316, 1317, 1276,
	1234, 1277, 1132, 1279, 1281, 1342, 1072, 1285, 1287, 1289,
	1291, 1293, 1266, 1266, 1247, 1245, 1375, 1259, 173, 1861,
	1631, 1739, 1735, 1379, 662, 1381, 1382, 1383, 1384, 1145,
	1344, 1734, 1388, 1320, 1329, 1132, 1022, 1367, 1023, 1024,
	1328, 1268, 1479, 540, 2384, 1327, 1402, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1026, 1305, 1022, 1341, 1023, 1024,
	1318, 1312, 1022, 1456, 1023, 1024, 1022, 1240, 1023, 1024,
	1309, 1308, 1433, 1283, 1364, 2396, 1465, 527, 1022, 1141,
	1023, 1024, 1722, 1723, 1724, 2316, 1148, 2315, 2314, 110,
	2255, 839, 527, 527, 1144, 1440, 2253, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1377, 1508, 1373, 1374, 838, 2357, 2231, 2191, 1441, 1431,
	1340, 173, 2278, 1427, 1429, 1430, 1378, 1476, 1142, 1022,
	2128, 1023, 1024, 1385, 1386, 1387, 1398, 1399, 1400, 1331,
	2047, 1871, 1529, 1401, 1428, 2127, 1531, 173, 1532, 1022,
	527, 1023, 1024, 175, 176, 177, 1022, 1434, 1023, 1024,
	173, 1863, 1859, 527, 1677, 1022, 2092, 1023, 1024, 173,
	1676, 173, 173, 527, 1544, 1530, 527, 1460, 1512, 1513,
	1022, 1508, 1023, 1024, 1459, 1404, 1510, 527, 667, 1368,
	1332, 667, 1319, 1315, 1314, 1022, 1461, 1023, 1024, 1313,
	87, 1733, 1330, 1467, 1468, 175, 176, 177, 1040, 2048,
	1143, 1036, 1537, 1037, 982, 1509, 87, 175, 176, 177,
	1132, 1832, 1511, 2280, 1560, 1514, 1515, 1038, 1039, 1035,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1049, 1048, 1050,
	1051, 2279, 527, 175, 176, 177, 86, 1644, 1637, 1638,
	1639, 1783, 2440, 1641, 1643, 2217, 1510, 1889, 1536, 2211,
	2420, 1602, 1603, 1604, 1605, 2025, 527, 175, 176, 177,
	1585, 1642, 527, 1269, 1717, 638, 1269, 1874, 1269, 1568,
	1783, 2406, 1586, 1590, 1660, 1556, 596, 1597, 1539, 1598,
	1599, 1600, 1601, 1618, 2153, 1651, 1589, 1022, 1799, 1023,
	1024, 1978, 84, 1554, 1132, 1608, 1609, 1610, 1611, 86,
	2155, 1624, 1573, 85, 527, 1821, 1456, 1783, 2390, 1783,
	2380, 1456, 1456, 1588, 1587, 1783, 2349, 1572, 671, 93,
	1021, 671, 174, 1783, 2330, 174, 93, 1994, 174, 92,
	84, 91, 2335, 528, 1783, 174, 92, 2153, 91, 1800,
	86, 85, 1800, 174, 2302, 1132, 2057, 173, 2211, 1132,
	1574, 1648, 1783, 2209, 173, 174, 1978, 1132, 2435, 173,
	173, 1619, 1800, 173, 1629, 173, 92, 1369, 1822, 1640,
	1632, 173, 1630, 1731, 1614, 1615, 528, 1824, 173, 528,
	174, 528, 1749, 1503, 1661, 1132, 2158, 1132, 1654, 861,
	1748, 1653, 1657, 1619, 1040, 1132, 1935, 1672, 1132, 1670,
	862, 1661, 1674, 1675, 2388, 1132, 173, 527, 2059, 2058,
	1266, 1671, 2055, 2056, 2055, 2054, 1041, 1042, 1043, 1044,
	1045, 1046, 1047, 1049, 1048, 1050, 1051, 2153, 1708, 1709,
	1800, 1132, 1645, 1711, 1731, 1655, 1731, 1132, 1658, 628,
	1659, 2196, 1712, 1717, 1906, 1231, 1891, 1821, 1422, 1423,
	1424, 1425, 1885, 1886, 1680, 1783, 1782, 1021, 1132, 1231,
	1230, 1176, 1175, 1433, 1495, 1484, 1485, 1486, 1487, 1497,
	1488, 1489, 1490, 1502, 1498, 1491, 1492, 1499, 1500, 1501,
	1493, 1494, 1496, 1662, 1549, 1726, 1136, 1728, 1463, 1464,
	1701, 2197, 2198, 2199, 1779, 1519, 1469, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1049, 1048, 1050, 1051, 1727, 86,
	1822, 1412, 1358, 1298, 1162, 79, 1140, 844, 843, 1717,
	173, 2430, 2352, 79, 2329, 2323, 2292, 1040, 173, 1729,
	1139, 2267, 1761, 2188, 1233, 1617, 527, 1715, 540, 2094,
	1661, 2091, 2053, 1892, 1613, 1607, 1606, 1788, 1434, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1049, 1048, 1050, 1051,
	1725, 1346, 1261, 1299, 1300, 1301, 1731, 173, 173, 1257,
	1229, 1547, 1548, 104, 1796, 1805, 1808, 1809, 1810, 1806,
	33, 1807, 1811, 1831, 2325, 2165, 2166, 1868, 1867, 1816,
	926, 2165, 2166, 1040, 2293, 1743, 1741, 1580, 2200, 1628,
	2392, 1295, 2361, 2168, 2074, 2073, 1784, 1510, 2072, 1994,
	1878, 1702, 1405, 2171, 1780, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1049, 1048, 1050, 1051, 2170, 2013, 2016, 527,
	2012, 1752, 1753, 2017, 173, 1868, 1509, 1109, 1762, 1815,
	2404, 173, 1770, 2381, 1543, 2201, 2202, 527, 1296, 1297,
	2014, 1884, 1781, 527, 1535, 2015, 1620, 1269, 1269, 2311,
	1856, 1857, 527, 1791, 1988, 1990, 2159, 1776, 2018, 1836,
	1809, 1810, 2078, 1991, 1903, 1819, 1975, 1974, 2246, 2248,
	1823, 2149, 2146, 1985, 642, 173, 173, 173, 173, 173,
	2145, 1826, 643, 1624, 1357, 617, 1837, 1853, 1593, 1872,
	891, 890, 173, 173, 2104, 1867, 1930, 1471, 1870, 994,
	1860, 1899, 84, 1805, 1808, 1809, 1810, 1806, 173, 1807,
	1811, 1472, 84, 85, 1869, 1130, 1126, 1898, 111, 86,
	86, 1875, 1901, 85, 1130, 1126, 1456, 1879, 1880, 1881,
	1127, 2070, 2151, 1249, 1551, 1552, 1705, 2332, 1131, 1127,
	2288, 1852, 1813, 1540, 1694, 174, 527, 174, 650, 651,
	174, 1721, 1902, 1956, 1973, 1533, 1534, 1129, 91, 1128,
	527, 1966, 1972, 93, 1123, 1124, 1129, 1900, 1128, 2389,
	173, 624, 2254, 92, 527, 91, 2252, 2251, 528, 528,
	528, 2244, 2150, 527, 86, 2148, 2075, 2034, 527, 527,
	1938, 173, 173, 173, 173, 173, 528, 528, 1966, 1922,
	1646, 1937, 649, 173, 92, 2243, 2138, 2006, 173, 173,
	630, 173, 2000, 1952, 173, 173, 173, 1953, 1939, 1893,
	1894, 93, 93, 1979, 1978, 1965, 1779, 95, 1997, 1750,
	1119, 92, 92, 1997, 91, 2394, 2393, 2049, 1149, 97,
	98, 2394, 173, 2317, 2046, 640, 2024, 1980, 80, 1,
	580, 604, 1976, 2363, 496, 1520, 1928, 1107, 510, 1929,
	631, 2359, 1333, 2068, 2026, 632, 1323, 2027, 2220, 173,
	2008, 2009, 2289, 2011, 1622, 2019, 527, 852, 2007, 136,
	2023, 2010, 1970, 527, 1583, 174, 1584, 2080, 173, 2376,
	2028, 101, 1745, 87, 815, 100, 2043, 2039, 173, 855,
	2042, 953, 174, 1647, 2212, 1854, 1367, 526, 1594, 1182,
	2035, 2005, 173, 1180, 1181, 173, 1179, 1184, 1183, 1178,
	1406, 528, 2077, 524, 174, 2105, 1812, 171, 2064, 528,
	2063, 1171, 1150, 892, 486, 528, 2060, 1678, 492, 1064,
	2065, 2066, 1971, 1827, 668, 2079, 661, 2002, 2143, 1984,
	669, 2086, 1624, 819, 2043, 826, 2084, 1986, 2042, 1786,
	1989, 1982, 173, 2310, 2245, 2331, 1148, 1591, 1146, 2100,
	1742, 2076, 1071, 2102, 2103, 2099, 1473, 1565, 1528, 1426,
	549, 548, 546, 1772, 1793, 1027, 599, 1157, 1804, 1802,
	1801, 1703, 1569, 2113, 2167, 2163, 2107, 1563, 2136, 1778,
	557, 550, 542, 597, 2038, 2041, 1592, 2106, 1909, 2088,
	1006, 1122, 536, 827, 1470, 2294, 173, 1720, 2124, 1121,
	1482, 2140, 2147, 1483, 2273, 1833, 2110, 2111, 2162, 2112,
	2152, 58, 2114, 36, 2116, 531, 2400, 997, 656, 31,
	30, 29, 28, 2169, 2172, 27, 22, 21, 2176, 2177,
	20, 19, 18, 24, 17, 16, 2174, 15, 106, 45,
	173, 42, 40, 173, 173, 173, 527, 113, 112, 2175,
	2207, 2187, 43, 39, 929, 2185, 2186, 37, 26, 25,
	14, 13, 12, 174, 11, 527, 527, 527, 527, 10,
	9, 8, 4, 1000, 23, 2, 2180, 0, 0, 0,
	0, 0, 2227, 0, 0, 0, 2190, 0, 2192, 0,
	0, 2216, 0, 0, 0, 528, 0, 0, 0, 0,
	0, 0, 527, 527, 527, 173, 0, 0, 0, 0,
	0, 0, 528, 528, 2230, 528, 0, 528, 528, 0,
	528, 528, 528, 528, 528, 528, 2225, 0, 0, 527,
	0, 527, 0, 0, 0, 528, 1954, 1955, 0, 174,
	0, 1958, 2240, 2226, 2261, 1960, 1961, 1962, 2263, 2250,
	33, 2249, 2000, 0, 2265, 174, 2000, 2241, 2259, 527,
	2257, 2238, 2239, 2277, 0, 0, 528, 1997, 174, 0,
	0, 0, 624, 0, 0, 0, 2269, 2270, 169, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 111, 0, 0, 0, 2291, 174, 2281, 0, 2284,
	2283, 0, 0, 0, 153, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 528, 528, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 2309, 0, 2307, 527, 0,
	2306, 0, 2321, 0, 0, 0, 0, 0, 0, 2318,
	0, 0, 0, 0, 174, 2320, 0, 2000, 0, 0,
	0, 2322, 0, 527, 173, 0, 0, 2337, 0, 0,
	150, 0, 151, 527, 0, 2334, 0, 0, 0, 624,
	0, 33, 168, 0, 0, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 0, 0, 0, 2358, 2347, 527, 527, 0, 0,
	0, 0, 2350, 528, 0, 0, 0, 0, 0, 2370,
	2375, 2291, 2377, 527, 0, 33, 2362, 2385, 528, 528,
	2367, 1997, 0, 0, 0, 0, 0, 0, 0, 0,
	2391, 0, 669, 669, 669, 0, 0, 0, 0, 154,
	1133, 1135, 0, 0, 2397, 0, 2126, 174, 159, 0,
	996, 998, 2403, 2405, 0, 0, 0, 0, 0, 2408,
	2414, 2407, 0, 0, 0, 2139, 0, 0, 0, 2418,
	2416, 0, 0, 174, 0, 2419, 528, 0, 0, 0,
	2428, 0, 0, 2429, 0, 0, 174, 0, 540, 528,
	2431, 2433, 0, 0, 0, 174, 527, 174, 174, 528,
	2437, 0, 528, 2442, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 528, 0, 0, 0, 600, 607, 608,
	609, 610, 601, 603, 2184, 1101, 0, 602, 0, 0,
	605, 611, 612, 0, 0, 0, 0, 0, 0, 0,
	2189, 0, 79, 0, 0, 0, 0, 0, 600, 607,
	608, 609, 610, 601, 603, 146, 0, 0, 602, 0,
	0, 605, 611, 612, 0, 0, 0, 0, 528, 0,
	0, 0, 2215, 2044, 2045, 1153, 0, 0, 0, 0,
	0, 0, 0, 669, 0, 613, 615, 614, 616, 1172,
	0, 0, 528, 0, 0, 0, 0, 0, 528, 0,
	0, 0, 0, 0, 2044, 2045, 0, 2228, 0, 2229,
	0, 0, 0, 0, 2232, 2233, 613, 615, 614, 616,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	528, 2258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2266, 0, 0, 2268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 174, 0, 0, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 174, 174, 0, 0, 174,
	1199, 174, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2308, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 174, 528, 0, 0, 147, 152, 149, 155,
	156, 157, 158, 160, 161, 162, 163, 0, 0, 0,
	0, 2328, 164, 165, 166, 167, 591, 0, 0, 819,
	592, 593, 581, 0, 0, 594, 0, 0, 0, 0,
	0, 0, 1101, 0, 0, 0, 1275, 1275, 0, 1275,
	0, 1275, 1275, 0, 1284, 1275, 1275, 1275, 1275, 1275,
	0, 0, 0, 0, 0, 0, 0, 1101, 1101, 819,
	2351, 0, 0, 0, 0, 0, 0, 0, 172, 0,
	2371, 482, 0, 0, 522, 0, 1187, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 482,
	1345, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 174, 0, 0, 0,
	0, 0, 0, 0, 174, 0, 0, 655, 0, 1200,
	0, 0, 528, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 1477, 0, 0, 0, 1478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 669, 669,
	669, 0, 0, 174, 174, 0, 0, 0, 0, 0,
	0, 0, 0, 1133, 1518, 0, 0, 2434, 0, 0,
	0, 1213, 1216, 1217, 1218, 1219, 1220, 1221, 0, 1222,
	1223, 1224, 1225, 1226, 1201, 1202, 1203, 1204, 1185, 1186,
	1214, 0, 1188, 1538, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 0, 0, 0, 528, 0, 0, 0, 0,
	174, 0, 0, 0, 0, 0, 0, 174, 0, 0,
	0, 0, 0, 528, 0, 0, 0, 1466, 0, 528,
	0, 0, 0, 0, 1101, 0, 0, 0, 528, 0,
	0, 0, 1480, 1481, 0, 0, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 174, 174, 174, 174, 174, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 174,
	0, 0, 70, 35, 72, 0, 0, 0, 1215, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	1542, 76, 0, 0, 0, 38, 64, 65, 0, 62,
	66, 0, 0, 1153, 0, 0, 669, 0, 63, 0,
	0, 0, 0, 669, 0, 0, 669, 0, 0, 0,
	0, 0, 528, 0, 0, 0, 0, 819, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 174, 0, 79, 0,
	528, 0, 0, 0, 0, 0, 0, 0, 0, 528,
	0, 0, 0, 0, 528, 528, 0, 174, 174, 174,
	174, 174, 0, 0, 0, 0, 0, 0, 0, 174,
	0, 0, 826, 0, 174, 174, 0, 174, 0, 0,
	174, 174, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 0,
	0, 0, 826, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	41, 44, 47, 46, 49, 0, 61, 0, 0, 67,
	0, 0, 0, 0, 0, 174, 0, 0, 0, 0,
	0, 0, 528, 0, 819, 0, 0, 0, 0, 528,
	0, 50, 75, 74, 174, 0, 59, 60, 48, 0,
	0, 0, 0, 0, 174, 0, 0, 0, 0, 0,
	0, 482, 0, 482, 0, 0, 482, 0, 174, 0,
	0, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 1736, 0, 1737, 1738, 52, 53,
	0, 54, 55, 56, 57, 1746, 0, 0, 1747, 1110,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 174, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	1756, 1757, 1758, 1759, 1760, 0, 1538, 1714, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 620, 0, 0, 0,
	0, 0, 174, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 823, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 174, 0, 637, 174,
	174, 174, 528, 0, 0, 78, 0, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	482, 528, 528, 528, 528, 0, 0, 669, 0, 0,
	0, 0, 111, 0, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 528,
	528, 174, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 132, 0, 0, 0, 528, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 151, 0, 0, 0, 0, 0, 1252,
	1253, 142, 141, 168, 0, 528, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 0,
	0, 1963, 1964, 0, 0, 0, 0, 1542, 0, 0,
	0, 0, 0, 1890, 0, 0, 0, 0, 0, 137,
	1254, 144, 1895, 1251, 0, 138, 139, 0, 0, 482,
	154, 0, 0, 0, 0, 0, 0, 0, 0, 159,
	0, 0, 0, 0, 528, 0, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2021, 2022, 0, 0, 0, 0, 528,
	174, 0, 0, 0, 1102, 0, 0, 0, 0, 528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 0, 1102,
	1102, 0, 0, 0, 0, 482, 528, 0, 0, 0,
	0, 0, 528, 528, 0, 0, 669, 0, 0, 0,
	0, 1321, 0, 0, 0, 0, 0, 0, 0, 528,
	1275, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1981, 0, 146, 0, 0, 1366,
	0, 0, 0, 669, 0, 1101, 0, 0, 2004, 1275,
	1101, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 1389, 1390, 482, 482, 482, 482, 482, 482, 482,
	2109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2118, 2119, 2121, 2123, 0, 0, 0, 930, 0,
	935, 2129, 528, 937, 2130, 0, 0, 0, 0, 2134,
	482, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 0, 0, 135, 0, 606, 71,
	0, 0, 0, 0, 0, 0, 819, 0, 0, 1101,
	2156, 2157, 0, 1542, 2161, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2173, 655, 0, 0, 0, 0, 0, 0,
	655, 655, 0, 0, 0, 0, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 655, 1366, 655,
	655, 655, 655, 655, 0, 0, 0, 0, 627, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1321, 0, 0, 0, 0, 627, 0,
	2210, 0, 0, 0, 0, 655, 0, 147, 152, 149,
	155, 156, 157, 158, 160, 161, 162, 163, 0, 637,
	0, 0, 0, 164, 165, 166, 167, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 1366, 0,
	0, 482, 0, 482, 1571, 0, 0, 0, 0, 0,
	2235, 0, 0, 0, 0, 0, 0, 1159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2276, 0, 0, 1542, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 2222, 2223, 2224, 0,
	0, 0, 0, 0, 2287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2297, 2298, 2299,
	0, 2300, 2301, 2303, 0, 0, 0, 2304, 2305, 0,
	0, 0, 2236, 2236, 2236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 2262,
	0, 2264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2339, 0, 0, 1177, 0, 0, 1542,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 482,
	0, 0, 0, 0, 169, 0, 482, 0, 0, 0,
	0, 482, 482, 0, 0, 482, 0, 1706, 0, 0,
	669, 0, 0, 482, 0, 0, 0, 111, 0, 133,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	2398, 2399, 1306, 0, 0, 0, 0, 0, 1542, 0,
	0, 143, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 1542, 0, 0, 150, 0, 151, 0,
	0, 0, 0, 2343, 120, 121, 142, 141, 168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1101, 0,
	2348, 0, 1376, 655, 0, 0, 0, 0, 0, 1380,
	1542, 0, 0, 0, 0, 0, 669, 669, 0, 0,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 0, 655, 655,
	0, 0, 0, 0, 137, 118, 144, 125, 117, 1366,
	138, 139, 482, 0, 0, 154, 0, 1415, 0, 0,
	1321, 0, 0, 0, 159, 126, 0, 0, 0, 0,
	989, 989, 989, 0, 0, 0, 0, 0, 0, 129,
	127, 122, 123, 124, 128, 0, 0, 0, 0, 119,
	71, 0, 0, 0, 0, 0, 0, 0, 130, 482,
	482, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1542, 627, 1060, 1061,
	1062, 0, 1065, 0, 1067, 1068, 1069, 1070, 0, 1073,
	1075, 1075, 0, 1075, 1079, 1079, 1081, 1082, 1083, 1084,
	0, 1086, 1087, 1088, 1089, 1090, 0, 0, 0, 0,
	1079, 1079, 1079, 1079, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 146, 0, 1882, 0, 0, 0, 0, 0, 1111,
	0, 0, 627, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 0, 1553,
	0, 0, 0, 0, 0, 0, 0, 0, 1559, 0,
	0, 1415, 0, 0, 0, 0, 0, 482, 482, 482,
	482, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 135, 0, 0, 655, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 655, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 1102, 482, 482, 482, 482, 482, 0, 0,
	0, 0, 0, 0, 0, 2020, 0, 0, 0, 0,
	482, 1321, 0, 482, 0, 0, 482, 2029, 1366, 0,
	0, 0, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 0, 0, 0, 0, 0, 164, 165,
	166, 167, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 1689, 0, 0, 0, 0, 1699, 1700,
	0, 482, 1704, 0, 0, 0, 0, 0, 0, 0,
	1707, 1102, 0, 0, 169, 0, 0, 1710, 0, 0,
	482, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	482, 0, 0, 0, 0, 0, 0, 111, 0, 133,
	0, 0, 0, 0, 482, 1713, 0, 482, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 482, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 151, 0,
	0, 0, 0, 0, 1252, 1253, 142, 141, 168, 0,
	0, 0, 0, 0, 0, 0, 989, 989, 989, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 482, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 137, 1254, 144, 0, 1251, 0,
	138, 139, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 482, 0, 159, 482, 482, 482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1913, 1914, 1915, 1916, 1917, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1931, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 482, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2052, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 0, 0, 0, 0, 0, 164, 165,
	166, 167, 0, 0, 0, 0, 0, 0, 2071, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2098, 0, 0, 2101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2135, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1754, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1769, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 1798, 0, 2203,
	0, 0, 2204, 2205, 2206, 1817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1566, 0,
	0, 0, 0, 2338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 71, 0, 0, 1566,
	1566, 1566, 1566, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 1566,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2037, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2085, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2131, 2132, 2133, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 71, 0, 2001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 797, 783, 406, 731, 800, 701, 719, 810,
	722, 725, 765, 680, 744, 329, 716, 0, 705, 676,
	711, 677, 703, 733, 233, 700, 785, 748, 799, 285,
	230, 682, 706, 343, 721, 184, 767, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 806, 289, 754, 0, 391, 314, 0, 0, 2001,
	735, 789, 742, 779, 730, 766, 690, 753, 801, 717,
	762, 802, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 2333, 175, 176, 177, 0, 2378, 71, 2379, 0,
	0, 0, 0, 0, 207, 0, 214, 713, 759, 796,
	714, 761, 228, 273, 235, 227, 410, 807, 788, 0,
	0, 199, 798, 737, 0, 764, 0, 813, 675, 756,
	0, 678, 681, 809, 792, 709, 238, 0, 0, 0,
	0, 71, 0, 0, 734, 743, 776, 728, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 752, 0, 0,
	0, 686, 679, 0, 0, 0, 0, 732, 0, 0,
	0, 689, 0, 708, 777, 0, 673, 256, 683, 315,
	0, 781, 791, 729, 442, 795, 727, 726, 771, 687,
	787, 720, 284, 685, 281, 179, 195, 0, 718, 325,
	365, 371, 786, 704, 712, 219, 710, 369, 339, 427,
	203, 246, 362, 344, 367, 751, 769, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 991, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 699, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	782, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 774, 812, 338,
	370, 209, 429, 390, 694, 698, 692, 693, 746, 747,
	695, 803, 804, 805, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 778, 688, 0, 696, 697, 0, 784,
	793, 794, 750, 178, 192, 287, 808, 359, 249, 456,
	436, 432, 674, 691, 225, 702, 0, 0, 715, 723,
	724, 736, 738, 739, 740, 741, 311, 757, 758, 760,
	768, 770, 773, 775, 780, 790, 811, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 749, 755,
	298, 243, 261, 272, 763, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 745, 772, 294, 407, 408, 268,
	797, 783, 406, 731, 800, 701, 719, 810, 722, 725,
	765, 680, 744, 329, 716, 0, 705, 676, 711, 677,
	703, 733, 233, 700, 785, 748, 799, 285, 230, 682,
	706, 343, 721, 184, 767, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 806,
	289, 754, 0, 391, 314, 0, 0, 0, 735, 789,
	742, 779, 730, 766, 690, 753, 801, 717, 762, 802,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 713, 759, 796, 714, 761,
	228, 273, 235, 227, 410, 807, 788, 0, 0, 199,
	798, 737, 0, 764, 0, 813, 675, 756, 0, 678,
	681, 809, 792, 709, 238, 0, 0, 0, 0, 0,
	0, 0, 734, 743, 776, 728, 0, 0, 0, 0,
	0, 2030, 0, 707, 0, 752, 0, 0, 0, 686,
	679, 0, 0, 0, 0, 732, 0, 0, 0, 689,
	0, 708, 777, 0, 673, 256, 683, 315, 0, 781,
	791, 729, 442, 795, 727, 726, 771, 687, 787, 720,
	284, 685, 281, 179, 195, 0, 718, 325, 365, 371,
	786, 704, 712, 219, 710, 369, 339, 427, 203, 246,
	362, 344, 367, 751, 769, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 991, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 699, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 782, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	320, 266, 389, 282, 291, 774, 812, 338, 370, 209,
	429, 390, 694, 698, 692, 693, 746, 747, 695, 803,
	804, 805, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 778, 688, 0, 696, 697, 0, 784, 793, 794,
	750, 178, 192, 287, 808, 359, 249, 456, 436, 432,
	674, 691, 225, 702, 0, 0, 715, 723, 724, 736,
	738, 739, 740, 741, 311, 757, 758, 760, 768, 770,
	773, 775, 780, 790, 811, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 749, 755, 298, 243,
	261, 272, 763, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 745, 772, 294, 407, 408, 268, 797, 783,
	406, 731, 800, 701, 719, 810, 722, 725, 765, 680,
	744, 329, 716, 0, 705, 676, 711, 677, 703, 733,
	233, 700, 785, 748, 799, 285, 230, 682, 706, 343,
	721, 184, 767, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 806, 289, 754,
	0, 391, 314, 0, 0, 0, 735, 789, 742, 779,
	730, 766, 690, 753, 801, 717, 762, 802, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 713, 759, 796, 714, 761, 228, 273,
	235, 227, 410, 807, 788, 0, 0, 199, 798, 737,
	0, 764, 0, 813, 675, 756, 0, 678, 681, 809,
	792, 709, 238, 0, 0, 0, 0, 0, 0, 0,
	734, 743, 776, 728, 0, 0, 0, 0, 0, 1992,
	0, 707, 0, 752, 0, 0, 0, 686, 679, 0,
	0, 0, 0, 732, 0, 0, 0, 689, 0, 708,
	777, 0, 673, 256, 683, 315, 0, 781, 791, 729,
	442, 795, 727, 726, 771, 687, 787, 720, 284, 685,
	281, 179, 195, 0, 718, 325, 365, 371, 786, 704,
	712, 219, 710, 369, 339, 427, 203, 246, 362, 344,
	367, 751, 769, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 423, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 991, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 699, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 782, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 320, 266,
	389, 282, 291, 774, 812, 338, 370, 209, 429, 390,
	694, 698, 692, 693, 746, 747, 695, 803, 804, 805,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 778,
	688, 0, 696, 697, 0, 784, 793, 794, 750, 178,
	192, 287, 808, 359, 249, 456, 436, 432, 674, 691,
	225, 702, 0, 0, 715, 723, 724, 736, 738, 739,
	740, 741, 311, 757, 758, 760, 768, 770, 773, 775,
	780, 790, 811, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 749, 755, 298, 243, 261, 272,
	763, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	745, 772, 294, 407, 408, 268, 797, 783, 406, 731,
	800, 701, 719, 810, 722, 725, 765, 680, 744, 329,
	716, 0, 705, 676, 711, 677, 703, 733, 233, 700,
	785, 748, 799, 285, 230, 682, 706, 343, 721, 184,
	767, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 806, 289, 754, 0, 391,
	314, 0, 0, 0, 735, 789, 742, 779, 730, 766,
	690, 753, 801, 717, 762, 802, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 713, 759, 796, 714, 761, 228, 273, 235, 227,
	410, 807, 788, 0, 0, 199, 798, 737, 0, 764,
	0, 813, 675, 756, 0, 678, 681, 809, 792, 709,
	238, 0, 0, 0, 0, 0, 0, 0, 734, 743,
	776, 728, 0, 0, 0, 0, 0, 1555, 0, 707,
	0, 752, 0, 0, 0, 686, 679, 0, 0, 0,
	0, 732, 0, 0, 0, 689, 0, 708, 777, 0,
	673, 256, 683, 315, 0, 781, 791, 729, 442, 795,
	727, 726, 771, 687, 787, 720, 284, 685, 281, 179,
	195, 0, 718, 325, 365, 371, 786, 704, 712, 219,
	710, 369, 339, 427, 203, 246, 362, 344, 367, 751,
	769, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 423, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 991, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 699, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 782, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 320, 266, 389, 282,
	291, 774, 812, 338, 370, 209, 429, 390, 694, 698,
	692, 693, 746, 747, 695, 803, 804, 805, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 778, 688, 0,
	696, 697, 0, 784, 793, 794, 750, 178, 192, 287,
	808, 359, 249, 456, 436, 432, 674, 691, 225, 702,
	0, 0, 715, 723, 724, 736, 738, 739, 740, 741,
	311, 757, 758, 760, 768, 770, 773, 775, 780, 790,
	811, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 749, 755, 298, 243, 261, 272, 763, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 745, 772,
	294, 407, 408, 268, 797, 783, 406, 731, 800, 701,
	719, 810, 722, 725, 765, 680, 744, 329, 716, 0,
	705, 676, 711, 677, 703, 733, 233, 700, 785, 748,
	799, 285, 230, 682, 706, 343, 721, 184, 767, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 806, 289, 754, 0, 391, 314, 0,
	0, 0, 735, 789, 742, 779, 730, 766, 690, 753,
	801, 717, 762, 802, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 0, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 713,
	759, 796, 714, 761, 228, 273, 235, 227, 410, 807,
	788, 0, 0, 199, 798, 737, 0, 764, 0, 813,
	675, 756, 0, 678, 681, 809, 792, 709, 238, 0,
	0, 0, 0, 0, 0, 0, 734, 743, 776, 728,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 752,
	0, 0, 0, 686, 679, 0, 0, 0, 0, 732,
	0, 0, 0, 689, 0, 708, 777, 0, 673, 256,
	683, 315, 0, 781, 791, 729, 442, 795, 727, 726,
	771, 687, 787, 720, 284, 685, 281, 179, 195, 0,
	718, 325, 365, 371, 786, 704, 712, 219, 710, 369,
	339, 427, 203, 246, 362, 344, 367, 751, 769, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 991,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 699,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 782, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 774,
	812, 338, 370, 209, 429, 390, 694, 698, 692, 693,
	746, 747, 695, 803, 804, 805, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 778, 688, 0, 696, 697,
	0, 784, 793, 794, 750, 178, 192, 287, 808, 359,
	249, 456, 436, 432, 674, 691, 225, 702, 0, 0,
	715, 723, 724, 736, 738, 739, 740, 741, 311, 757,
	758, 760, 768, 770, 773, 775, 780, 790, 811, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	749, 755, 298, 243, 261, 272, 763, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 745, 772, 294, 407,
	408, 268, 797, 783, 406, 731, 800, 701, 719, 810,
	722, 725, 765, 680, 744, 329, 716, 0, 705, 676,
	711, 677, 703, 733, 233, 700, 785, 748, 799, 285,
	230, 682, 706, 343, 721, 184, 767, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 806, 289, 754, 0, 391, 314, 0, 0, 0,
	735, 789, 742, 779, 730, 766, 690, 753, 801, 717,
	762, 802, 275, 216, 183, 326, 392, 248, 0, 0,
	0, 0, 175, 176, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 214, 713, 759, 796,
	714, 761, 228, 273, 235, 227, 410, 807, 788, 0,
	0, 199, 798, 737, 0, 764, 0, 813, 675, 756,
	0, 678, 681, 809, 792, 709, 238, 0, 0, 0,
	0, 0, 0, 0, 734, 743, 776, 728, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 752, 0, 0,
	0, 686, 679, 0, 0, 0, 0, 732, 0, 0,
	0, 689, 0, 708, 777, 0, 673, 256, 683, 315,
	0, 781, 791, 729, 442, 795, 727, 726, 771, 687,
	787, 720, 284, 685, 281, 179, 195, 0, 718, 325,
	365, 371, 786, 704, 712, 219, 710, 369, 339, 427,
	203, 246, 362, 344, 367, 751, 769, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 991, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 699, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	782, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 774, 812, 338,
	370, 209, 429, 390, 694, 698, 692, 693, 746, 747,
	695, 803, 804, 805, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 778, 688, 0, 696, 697, 0, 784,
	793, 794, 750, 178, 192, 287, 808, 359, 249, 456,
	436, 432, 674, 691, 225, 702, 0, 0, 715, 723,
	724, 736, 738, 739, 740, 741, 311, 757, 758, 760,
	768, 770, 773, 775, 780, 790, 811, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 749, 755,
	298, 243, 261, 272, 763, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 745, 772, 294, 407, 408, 268,
	797, 783, 406, 731, 800, 701, 719, 810, 722, 725,
	765, 680, 744, 329, 716, 0, 705, 676, 711, 677,
	703, 733, 233, 700, 785, 748, 799, 285, 230, 682,
	706, 343, 721, 184, 767, 382, 218, 295, 292, 413,
	244, 236, 232, 217, 269, 301, 341, 400, 335, 806,
	289, 754, 0, 391, 314, 0, 0, 0, 735, 789,
	742, 779, 730, 766, 690, 753, 801, 717, 762, 802,
	275, 216, 183, 326, 392, 248, 0, 0, 0, 0,
	175, 176, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 214, 713, 759, 796, 714, 761,
	228, 273, 235, 227, 410, 807, 788, 0, 0, 814,
	798, 737, 0, 764, 0, 813, 675, 756, 0, 678,
	681, 809, 792, 709, 238, 0, 0, 0, 0, 0,
	0, 0, 734, 743, 776, 728, 0, 0, 0, 0,
	0, 0, 0, 707, 0, 752, 0, 0, 0, 686,
	679, 0, 0, 0, 0, 732, 0, 0, 0, 689,
	0, 708, 777, 0, 673, 256, 683, 315, 0, 781,
	791, 729, 442, 795, 727, 726, 771, 687, 787, 720,
	284, 685, 281, 179, 195, 0, 718, 325, 365, 371,
	786, 704, 712, 219, 710, 369, 339, 427, 203, 246,
	362, 344, 367, 751, 769, 368, 290, 415, 357, 425,
	443, 444, 226, 319, 433, 404, 439, 455, 196, 223,
	333, 397, 430, 388, 312, 411, 412, 280, 387, 254,
	182, 288, 449, 194, 377, 211, 201, 187, 399, 423,
	208, 380, 0, 0, 457, 189, 421, 396, 308, 277,
	278, 188, 0, 361, 231, 252, 221, 328, 418, 419,
	220, 458, 198, 438, 191, 684, 437, 321, 414, 422,
	309, 300, 190, 420, 307, 299, 283, 242, 263, 355,
	293, 356, 264, 317, 316, 318, 0, 185, 0, 393,
	431, 459, 204, 205, 206, 699, 241, 245, 251, 253,
	259, 260, 267, 286, 332, 354, 352, 358, 782, 409,
	426, 434, 441, 447, 448, 450, 451, 452, 453, 454,
	672, 666, 665, 282, 291, 774, 812, 338, 370, 209,
	429, 390, 694, 698, 692, 693, 746, 747, 695, 803,
	804, 805, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	0, 778, 688, 0, 696, 697, 0, 784, 793, 794,
	750, 178, 192, 287, 808, 359, 249, 456, 436, 432,
	674, 691, 225, 702, 0, 0, 715, 723, 724, 736,
	738, 739, 740, 741, 311, 757, 758, 760, 768, 770,
	773, 775, 780, 790, 811, 180, 181, 193, 202, 212,
	224, 239, 247, 257, 262, 265, 270, 271, 274, 279,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 378, 379,
	383, 384, 385, 386, 394, 398, 416, 417, 428, 440,
	445, 258, 424, 446, 0, 296, 749, 755, 298, 243,
	261, 272, 763, 435, 395, 197, 366, 250, 186, 215,
	200, 222, 237, 240, 276, 306, 313, 342, 346, 255,
	234, 213, 363, 210, 381, 401, 402, 403, 405, 310,
	229, 345, 745, 772, 294, 407, 408, 268, 797, 783,
	406, 731, 800, 701, 719, 810, 722, 725, 765, 680,
	744, 329, 716, 0, 705, 676, 711, 677, 703, 733,
	233, 700, 785, 748, 799, 285, 230, 682, 706, 343,
	721, 184, 767, 382, 218, 295, 292, 413, 244, 236,
	232, 217, 269, 301, 341, 400, 335, 806, 289, 754,
	0, 391, 314, 0, 0, 0, 735, 789, 742, 779,
	730, 766, 690, 753, 801, 717, 762, 802, 275, 216,
	183, 326, 392, 248, 0, 0, 0, 0, 175, 176,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 214, 713, 759, 796, 714, 761, 228, 273,
	235, 227, 410, 807, 788, 0, 0, 814, 798, 737,
	0, 764, 0, 813, 675, 756, 0, 678, 681, 809,
	792, 709, 238, 0, 0, 0, 0, 0, 0, 0,
	734, 743, 776, 728, 0, 0, 0, 0, 0, 0,
	0, 707, 0, 752, 0, 0, 0, 686, 679, 0,
	0, 0, 0, 732, 0, 0, 0, 689, 0, 708,
	777, 0, 673, 256, 683, 315, 0, 781, 791, 729,
	442, 795, 727, 726, 771, 687, 787, 720, 284, 685,
	281, 179, 195, 0, 718, 325, 365, 371, 786, 704,
	712, 219, 710, 369, 339, 427, 203, 246, 362, 344,
	367, 751, 769, 368, 290, 415, 357, 425, 443, 444,
	226, 319, 433, 404, 439, 455, 196, 223, 333, 397,
	430, 388, 312, 411, 412, 280, 387, 254, 182, 288,
	449, 194, 377, 211, 201, 187, 399, 1163, 208, 380,
	0, 0, 457, 189, 421, 396, 308, 277, 278, 188,
	0, 361, 231, 252, 221, 328, 418, 419, 220, 458,
	198, 438, 191, 684, 437, 321, 414, 422, 309, 300,
	190, 420, 307, 299, 283, 242, 263, 355, 293, 356,
	264, 317, 316, 318, 0, 185, 0, 393, 431, 459,
	204, 205, 206, 699, 241, 245, 251, 253, 259, 260,
	267, 286, 332, 354, 352, 358, 782, 409, 426, 434,
	441, 447, 448, 450, 451, 452, 453, 454, 672, 666,
	665, 282, 291, 774, 812, 338, 370, 209, 429, 390,
	694, 698, 692, 693, 746, 747, 695, 803, 804, 805,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 0, 778,
	688, 0, 696, 697, 0, 784, 793, 794, 750, 178,
	192, 287, 808, 359, 249, 456, 436, 432, 674, 691,
	225, 702, 0, 0, 715, 723, 724, 736, 738, 739,
	740, 741, 311, 757, 758, 760, 768, 770, 773, 775,
	780, 790, 811, 180, 181, 193, 202, 212, 224, 239,
	247, 257, 262, 265, 270, 271, 274, 279, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 378, 379, 383, 384,
	385, 386, 394, 398, 416, 417, 428, 440, 445, 258,
	424, 446, 0, 296, 749, 755, 298, 243, 261, 272,
	763, 435, 395, 197, 366, 250, 186, 215, 200, 222,
	237, 240, 276, 306, 313, 342, 346, 255, 234, 213,
	363, 210, 381, 401, 402, 403, 405, 310, 229, 345,
	745, 772, 294, 407, 408, 268, 797, 783, 406, 731,
	800, 701, 719, 810, 722, 725, 765, 680, 744, 329,
	716, 0, 705, 676, 711, 677, 703, 733, 233, 700,
	785, 748, 799, 285, 230, 682, 706, 343, 721, 184,
	767, 382, 218, 295, 292, 413, 244, 236, 232, 217,
	269, 301, 341, 400, 335, 806, 289, 754, 0, 391,
	314, 0, 0, 0, 735, 789, 742, 779, 730, 766,
	690, 753, 801, 717, 762, 802, 275, 216, 183, 326,
	392, 248, 0, 0, 0, 0, 175, 176, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 0,
	214, 713, 759, 796, 714, 761, 228, 273, 235, 227,
	410, 807, 788, 0, 0, 814, 798, 737, 0, 764,
	0, 813, 675, 756, 0, 678, 681, 809, 792, 709,
	238, 0, 0, 0, 0, 0, 0, 0, 734, 743,
	776, 728, 0, 0, 0, 0, 0, 0, 0, 707,
	0, 752, 0, 0, 0, 686, 679, 0, 0, 0,
	0, 732, 0, 0, 0, 689, 0, 708, 777, 0,
	673, 256, 683, 315, 0, 781, 791, 729, 442, 795,
	727, 726, 771, 687, 787, 720, 284, 685, 281, 179,
	195, 0, 718, 325, 365, 371, 786, 704, 712, 219,
	710, 369, 339, 427, 203, 246, 362, 344, 367, 751,
	769, 368, 290, 415, 357, 425, 443, 444, 226, 319,
	433, 404, 439, 455, 196, 223, 333, 397, 430, 388,
	312, 411, 412, 280, 387, 254, 182, 288, 449, 194,
	377, 211, 201, 187, 399, 663, 208, 380, 0, 0,
	457, 189, 421, 396, 308, 277, 278, 188, 0, 361,
	231, 252, 221, 328, 418, 419, 220, 458, 198, 438,
	191, 684, 437, 321, 414, 422, 309, 300, 190, 420,
	307, 299, 283, 242, 263, 355, 293, 356, 264, 317,
	316, 318, 0, 185, 0, 393, 431, 459, 204, 205,
	206, 699, 241, 245, 251, 253, 259, 260, 267, 286,
	332, 354, 352, 358, 782, 409, 426, 434, 441, 447,
	448, 450, 451, 452, 453, 454, 672, 666, 665, 282,
	291, 774, 812, 338, 370, 209, 429, 390, 694, 698,
	692, 693, 746, 747, 695, 803, 804, 805, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 0, 778, 688, 0,
	696, 697, 0, 784, 793, 794, 750, 178, 192, 287,
	808, 359, 249, 456, 436, 432, 674, 691, 225, 702,
	0, 0, 715, 723, 724, 736, 738, 739, 740, 741,
	311, 757, 758, 760, 768, 770, 773, 775, 780, 790,
	811, 180, 181, 193, 202, 212, 224, 239, 247, 257,
	262, 265, 270, 271, 274, 279, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 378, 379, 383, 384, 385, 386,
	394, 398, 416, 417, 428, 440, 445, 258, 424, 446,
	0, 296, 749, 755, 298, 243, 261, 272, 763, 435,
	395, 197, 366, 250, 186, 215, 200, 222, 237, 240,
	276, 306, 313, 342, 346, 255, 234, 213, 363, 210,
	381, 401, 402, 403, 405, 310, 229, 345, 745, 772,
	294, 407, 408, 268, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 1505, 0,
	558, 0, 0, 0, 233, 563, 0, 0, 0, 285,
	230, 0, 1506, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 570, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 565, 566, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 216, 183, 326, 392, 248, 0, 79,
	0, 0, 175, 176, 177, 600, 607, 608, 609, 610,
	601, 603, 0, 0, 207, 602, 214, 579, 605, 611,
	612, 0, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 541,
	555, 0, 569, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 553, 653, 0, 0, 0, 585, 0, 554,
	0, 0, 562, 613, 615, 614, 616, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 584, 0, 0, 442, 0, 0, 582, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 591, 583, 574, 576, 592, 593,
	571, 572, 575, 594, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 586, 561, 560, 0, 567, 568, 0,
	577, 578, 559, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 406, 0, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	558, 0, 0, 0, 233, 563, 0, 0, 0, 285,
	230, 0, 0, 343, 0, 184, 0, 382, 218, 295,
	292, 413, 244, 236, 232, 217, 269, 301, 341, 400,
	335, 570, 289, 0, 0, 391, 314, 0, 0, 0,
	0, 0, 565, 566, 0, 0, 0, 0, 0, 0,
	1578, 0, 275, 216, 183, 326, 392, 248, 0, 79,
	0, 0, 175, 176, 177, 600, 607, 608, 609, 610,
	601, 603, 0, 0, 207, 602, 214, 579, 605, 611,
	612, 1579, 228, 273, 235, 227, 410, 0, 0, 0,
	0, 199, 0, 0, 0, 0, 0, 0, 0, 541,
	555, 0, 569, 0, 0, 0, 238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 552, 553, 0, 0, 0, 0, 585, 0, 554,
	0, 0, 562, 613, 615, 614, 616, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 315,
	0, 584, 0, 0, 442, 0, 0, 582, 0, 0,
	0, 0, 284, 0, 281, 179, 195, 0, 0, 325,
	365, 371, 0, 0, 0, 219, 0, 369, 339, 427,
	203, 246, 362, 344, 367, 0, 0, 368, 290, 415,
	357, 425, 443, 444, 226, 319, 433, 404, 439, 455,
	196, 223, 333, 397, 430, 388, 312, 411, 412, 280,
	387, 254, 182, 288, 449, 194, 377, 211, 201, 187,
	399, 423, 208, 380, 0, 0, 457, 189, 421, 396,
	308, 277, 278, 188, 0, 361, 231, 252, 221, 328,
	418, 419, 220, 458, 198, 438, 191, 0, 437, 321,
	414, 422, 309, 300, 190, 420, 307, 299, 283, 242,
	263, 355, 293, 356, 264, 317, 316, 318, 0, 185,
	0, 393, 431, 459, 204, 205, 206, 0, 241, 245,
	251, 253, 259, 260, 267, 286, 332, 354, 352, 358,
	0, 409, 426, 434, 441, 447, 448, 450, 451, 452,
	453, 454, 320, 266, 389, 282, 291, 0, 0, 338,
	370, 209, 429, 390, 591, 583, 574, 576, 592, 593,
	571, 572, 575, 594, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 0, 586, 561, 560, 0, 567, 568, 0,
	577, 578, 559, 178, 192, 287, 0, 359, 249, 456,
	436, 432, 0, 0, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 181, 193,
	202, 212, 224, 239, 247, 257, 262, 265, 270, 271,
	274, 279, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	378, 379, 383, 384, 385, 386, 394, 398, 416, 417,
	428, 440, 445, 258, 424, 446, 0, 296, 0, 0,
	298, 243, 261, 272, 0, 435, 395, 197, 366, 250,
	186, 215, 200, 222, 237, 240, 276, 306, 313, 342,
	346, 255, 234, 213, 363, 210, 381, 401, 402, 403,
	405, 310, 229, 345, 70, 406, 294, 407, 408, 268,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 0, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 615, 614, 616, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 78, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 0, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 615, 614, 616, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 2372, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 1132, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 615, 614, 616, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 0, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 653, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 615, 614, 616, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 0, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	541, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 615, 614, 616, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 558, 0, 0, 0, 233, 563, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 570, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 565, 566, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	79, 0, 0, 175, 176, 177, 600, 607, 608, 609,
	610, 601, 603, 0, 0, 207, 602, 214, 579, 605,
	611, 612, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 0, 569, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 552, 553, 0, 0, 0, 0, 585, 0,
	554, 0, 0, 562, 613, 615, 614, 616, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 584, 0, 0, 442, 0, 0, 582, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 591, 583, 574, 576, 592,
	593, 571, 572, 575, 594, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 586, 561, 560, 0, 567, 568,
	0, 577, 578, 559, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 860, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 0, 0, 859, 442, 0, 0, 0, 0,
	0, 856, 857, 284, 822, 281, 179, 195, 850, 854,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	1152, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 0, 1154, 0, 0,
	0, 0, 0, 0, 0, 207, 0, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 1022, 0, 1023, 1024,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 406, 0, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	285, 230, 0, 0, 343, 0, 184, 0, 382, 218,
	295, 292, 413, 244, 236, 232, 217, 269, 301, 341,
	400, 335, 0, 289, 0, 0, 391, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 216, 183, 326, 392, 248, 0,
	0, 0, 0, 175, 176, 177, 1097, 1100, 0, 0,
	0, 1096, 1099, 0, 0, 207, 1095, 214, 0, 0,
	0, 0, 0, 228, 273, 235, 227, 410, 0, 0,
	0, 0, 199, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	315, 0, 0, 0, 0, 442, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 179, 195, 0, 0,
	325, 365, 371, 0, 0, 0, 219, 0, 369, 339,
	427, 203, 246, 362, 344, 367, 0, 0, 368, 290,
	415, 357, 425, 443, 444, 226, 319, 433, 404, 439,
	455, 196, 223, 333, 397, 430, 388, 312, 411, 412,
	280, 387, 254, 182, 288, 449, 194, 377, 211, 201,
	187, 399, 423, 208, 380, 0, 0, 457, 189, 421,
	396, 308, 277, 278, 188, 0, 361, 231, 252, 221,
	328, 418, 419, 220, 458, 198, 438, 191, 0, 437,
	321, 414, 422, 309, 300, 190, 420, 307, 299, 283,
	242, 263, 355, 293, 356, 264, 317, 316, 318, 0,
	185, 0, 393, 431, 459, 204, 205, 206, 0, 241,
	245, 251, 253, 259, 260, 267, 286, 332, 354, 352,
	358, 0, 409, 426, 434, 441, 447, 448, 450, 451,
	452, 453, 454, 320, 266, 389, 282, 291, 0, 0,
	338, 370, 209, 429, 390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 192, 287, 0, 359, 249,
	456, 436, 432, 0, 0, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	193, 202, 212, 224, 239, 247, 257, 262, 265, 270,
	271, 274, 279, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 378, 379, 383, 384, 385, 386, 394, 398, 416,
	417, 428, 440, 445, 258, 424, 446, 0, 296, 0,
	0, 298, 243, 261, 272, 0, 435, 395, 197, 366,
	250, 186, 215, 200, 222, 237, 240, 276, 306, 313,
	342, 346, 255, 234, 213, 363, 210, 381, 401, 402,
	403, 405, 310, 229, 345, 70, 406, 294, 407, 408,
	268, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 233, 0, 0, 0,
	0, 285, 230, 0, 0, 343, 0, 184, 0, 382,
	218, 295, 292, 413, 244, 236, 232, 217, 269, 301,
	341, 400, 335, 0, 289, 0, 0, 391, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 216, 183, 326, 392, 248,
	0, 79, 0, 1132, 175, 176, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 214, 0,
	0, 0, 0, 0, 228, 273, 235, 227, 410, 0,
	0, 0, 0, 199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 315, 0, 0, 0, 0, 442, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 179, 195, 0,
	0, 325, 365, 371, 0, 0, 0, 219, 0, 369,
	339, 427, 203, 246, 362, 344, 367, 0, 0, 368,
	290, 415, 357, 425, 443, 444, 226, 319, 433, 404,
	439, 455, 196, 223, 333, 397, 430, 388, 312, 411,
	412, 280, 387, 254, 182, 288, 449, 194, 377, 211,
	201, 187, 399, 423, 208, 380, 0, 0, 457, 189,
	421, 396, 308, 277, 278, 188, 0, 361, 231, 252,
	221, 328, 418, 419, 220, 458, 198, 438, 191, 0,
	437, 321, 414, 422, 309, 300, 190, 420, 307, 299,
	283, 242, 263, 355, 293, 356, 264, 317, 316, 318,
	0, 185, 0, 393, 431, 459, 204, 205, 206, 0,
	241, 245, 251, 253, 259, 260, 267, 286, 332, 354,
	352, 358, 0, 409, 426, 434, 441, 447, 448, 450,
	451, 452, 453, 454, 320, 266, 389, 282, 291, 0,
	0, 338, 370, 209, 429, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 192, 287, 78, 359,
	249, 456, 436, 432, 0, 0, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	181, 193, 202, 212, 224, 239, 247, 257, 262, 265,
	270, 271, 274, 279, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 378, 379, 383, 384, 385, 386, 394, 398,
	416, 417, 428, 440, 445, 258, 424, 446, 0, 296,
	0, 0, 298, 243, 261, 272, 0, 435, 395, 197,
	366, 250, 186, 215, 200, 222, 237, 240, 276, 306,
	313, 342, 346, 255, 234, 213, 363, 210, 381, 401,
	402, 403, 405, 310, 229, 345, 70, 406, 294, 407,
	408, 268, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 79, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 78,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 1527, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 1322,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 1525,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 816, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 822, 281, 179, 195,
	820, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 1527, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 1322,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 1132, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 2237, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 1774, 0, 0, 1775, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 1174, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 1173,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 2344, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 2237, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 79, 0, 0, 175, 176, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 406, 0, 294,
	407, 408, 268, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 233, 0, 0,
	0, 0, 285, 230, 0, 0, 343, 0, 184, 0,
	382, 218, 295, 292, 413, 244, 236, 232, 217, 269,
	301, 341, 400, 335, 0, 289, 0, 0, 391, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 216, 183, 326, 392,
	248, 0, 0, 0, 0, 175, 176, 177, 0, 1322,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 214,
	0, 0, 0, 0, 0, 228, 273, 235, 227, 410,
	0, 0, 0, 0, 199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 315, 0, 0, 0, 0, 442, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 281, 179, 195,
	0, 0, 325, 365, 371, 0, 0, 0, 219, 0,
	369, 339, 427, 203, 246, 362, 344, 367, 0, 0,
	368, 290, 415, 357, 425, 443, 444, 226, 319, 433,
	404, 439, 455, 196, 223, 333, 397, 430, 388, 312,
	411, 412, 280, 387, 254, 182, 288, 449, 194, 377,
	211, 201, 187, 399, 423, 208, 380, 0, 0, 457,
	189, 421, 396, 308, 277, 278, 188, 0, 361, 231,
	252, 221, 328, 418, 419, 220, 458, 198, 438, 191,
	0, 437, 321, 414, 422, 309, 300, 190, 420, 307,
	299, 283, 242, 263, 355, 293, 356, 264, 317, 316,
	318, 0, 185, 0, 393, 431, 459, 204, 205, 206,
	0, 241, 245, 251, 253, 259, 260, 267, 286, 332,
	354, 352, 358, 0, 409, 426, 434, 441, 447, 448,
	450, 451, 452, 453, 454, 320, 266, 389, 282, 291,
	0, 0, 338, 370, 209, 429, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 192, 287, 0,
	359, 249, 456, 436, 432, 0, 0, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 181, 193, 202, 212, 224, 239, 247, 257, 262,
	265, 270, 271, 274, 279, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 378, 379, 383, 384, 385, 386, 394,
	398, 416, 417, 428, 440, 445, 258, 424, 446, 0,
	296, 0, 0, 298, 243, 261, 272, 0, 435, 395,
	197, 366, 250, 186, 215, 200, 222, 237, 240, 276,
	306, 313, 342, 346, 255, 234, 213, 363, 210, 381,
	401, 402, 403, 405, 310, 229, 345, 0, 0, 294,
	407, 408, 268, 406, 0, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 1154, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 1413, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1294, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1292, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1290, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1288, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1286, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1282, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1280, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 1278, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 1255, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 1158, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 999, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 635, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 532, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 480, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 406, 0, 294, 407, 408, 268, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 233, 0, 0, 0, 0, 285, 230,
	0, 0, 343, 0, 184, 0, 382, 218, 295, 292,
	413, 244, 236, 232, 217, 269, 301, 341, 400, 335,
	0, 289, 0, 0, 391, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 216, 183, 326, 392, 248, 0, 0, 0,
	0, 175, 176, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 207, 0, 214, 0, 0, 0, 0,
	0, 228, 273, 235, 227, 410, 0, 0, 0, 0,
	199, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 315, 0,
	0, 0, 0, 442, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 179, 195, 0, 0, 325, 365,
	371, 0, 0, 0, 219, 0, 369, 339, 427, 203,
	246, 362, 344, 367, 0, 0, 368, 290, 415, 357,
	425, 443, 444, 226, 319, 433, 404, 439, 455, 196,
	223, 333, 397, 430, 388, 312, 411, 412, 280, 387,
	254, 182, 288, 449, 194, 377, 211, 201, 187, 399,
	423, 208, 380, 0, 0, 457, 189, 421, 396, 308,
	277, 278, 188, 0, 361, 231, 252, 221, 328, 418,
	419, 220, 458, 198, 438, 191, 0, 437, 321, 414,
	422, 309, 300, 190, 420, 307, 299, 283, 242, 263,
	355, 293, 356, 264, 317, 316, 318, 0, 185, 0,
	393, 431, 459, 204, 205, 206, 0, 241, 245, 251,
	253, 259, 260, 267, 286, 332, 354, 352, 358, 0,
	409, 426, 434, 441, 447, 448, 450, 451, 452, 453,
	454, 320, 266, 389, 282, 291, 0, 0, 338, 370,
	209, 429, 390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 178, 192, 287, 0, 359, 249, 456, 436,
	432, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 181, 193, 202,
	212, 224, 239, 247, 257, 262, 265, 270, 271, 274,
	279, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 378,
	379, 383, 384, 385, 386, 394, 398, 416, 417, 428,
	440, 445, 258, 424, 446, 0, 296, 0, 0, 298,
	243, 261, 272, 0, 435, 395, 197, 366, 250, 186,
	215, 200, 222, 237, 240, 276, 306, 313, 342, 346,
	255, 234, 213, 363, 210, 381, 401, 402, 403, 405,
	310, 229, 345, 0, 0, 294, 407, 408, 268,
}

var yyPact = [...]int{
	2976, -1000, -335, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1703, 1768, -1000, -1000, -1000, 1840, -1000, 685,
	1491, -1000, 1700, 4059, -1000, 31016, 484, -1000, 30516, 479,
	112, 31016, -1000, 160, -1000, 146, 31016, 162, 30016, -1000,
	-1000, -252, 13508, 1654, 52, 46, 31016, -1000, 1826, 1433,
	-1000, 289, -1000, -1000, -1000, -1000, -1000, -1000, 29516, -1000,
	-1000, -1000, 1704, 1693, 1846, 588, 1645, -1000, 1751, 1433,
	-1000, 13508, 1796, 1738, 13008, -1000, 362, -1000, -1000, 10001,
	-1000, -1000, 17510, 31016, 31016, 215, -1000, 1700, -1000, -1000,
	314, -1000, 304, 1435, -1000, 1434, -1000, 629, 505, 310,
	411, 392, 308, 307, 306, 301, 300, 299, 298, 296,
	316, -1000, 632, 632, -103, -106, 2203, 353, 353, 353,
	389, 1669, 1668, -1000, 623, -1000, 632, 632, 302, 632,
	632, 632, 632, 275, 266, 632, 632, 632, 632, 632,
	632, 632, 632, 632, 632, 632, 632, 632, 632, 632,
	292, 1700, 254, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31016, 142,
	31016, -1000, 561, 31016, 715, 715, 69, 715, 715, 715,
	715, 174, 507, 44, -1000, 156, 241, 157, 256, 722,
	149, 116, -1000, -1000, 249, 722, 1115, 591, 140, -1000,
	715, 7969, 7969, 7969, -1000, 1680, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 386, -1000, -1000, -1000, -1000, 31016,
	29016, 273, 638, -1000, -1000, -1000, 130, -1000, -1000, 1237,
	790, 13508, 907, -1000, 1079, 486, -1000, -1000, -1000, -1000,
	-1000, 547, 14008, 14008, 14008, 14008, -1000, -1000, 1441, 1441,
	1441, 1441, 14008, 1441, 14008, 1441, 1441, 1441, 1441, 13508,
	1441, 1441, 1441, -1000, 1441, 1441, 1441, 1441, 1441, 1441,
	1441, 560, 1441, 1441, 1441, 1441, 1441, -1000, -1000, -1000,
	-1000, 1441, 1441, 1441, 1441, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15508, -1000, 11508, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31016, -1000,
	1441, 182, 1751, 1433, -1000, 1826, 1827, 289, -1000, 1714,
	1314, 1273, 1126, 1433, 1403, 31016, -1000, 1448, -1000, -1000,
	-1000, 1458, 1029, 1111, -1000, -1000, -1000, -1000, 1001, 13508,
	-1000, -1000, 1837, -1000, 15008, 558, 772, 28516, -1000, 362,
	362, 1431, 9493, 1, -1000, -1000, -1000, 636, 19510, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1680, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1378, 31016, -1000, -1000, 2611,
	1058, -1000, 1488, -1000, 1376, -1000, 1452, 1513, 478, 1058,
	459, 438, 415, -1000, -60, -1000, -1000, -1000, -1000, -1000,
	632, 632, 315, 4059, 4599, -1000, -1000, -1000, 28016, 1487,
	1058, -1000, 1480, -1000, 718, 421, 465, 465, 1058, -1000,
	-1000, 31016, 1058, 717, 712, 31016, 31016, -1000, 27516, -1000,
	27016, 26516, 972, 31016, 26016, 25516, 25016, 24516, 24016, -1000,
	1573, -1000, 1485, -1000, -1000, -1000, 31016, 31016, 31016, 276,
	-1000, -1000, 31016, 1058, -1000, -1000, 970, 969, 632, 632,
	960, 1100, 1095, 1094, 632, 632, 959, 1093, 21510, 257,
	944, 939, 933, 1101, 1091, 177, 1019, 904, 929, 31016,
	1479, 31016, -1000, 216, 587, 340, 635, 1700, 1653, 1429,
	384, 476, 1058, 367, 367, -1000, 8477, -1000, -1000, 1090,
	13508, -1000, 733, 722, 722, -1000, -1000, -1000, -1000, -1000,
	-1000, 715, 31016, 733, -1000, -1000, -1000, 722, 715, 31016,
	715, 715, 715, 715, 722, 722, 722, 715, 31016, 31016,
	31016, 31016, 31016, 31016, 31016, 31016, 31016, 7969, 7969, 7969,
	591, 715, -256, -1000, 1086, -1000, 1539, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 150, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -62, 1428, 23516, -1000, -258,
	-259, -264, -265, -1000, -1000, -1000, -269, -278, -1000, -1000,
	-1000, 13508, 13508, 13508, 13508, -1000, 1012, 14008, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 839, 608, 14008, 14008, 14008,
	14008, 14008, 14008, 14008, 14008, 14008, 14008, 14008, 14008, 14008,
	14008, 14008, 757, 1085, 1078, 486, 486, 486, 486, -1000,
	13008, 13508, 13508, 486, -1000, 1058, 23016, 13008, 13008, 13508,
	1686, 658, 790, 31016, -1000, 1126, -1000, -1000, -1000, 941,
	-1000, 31016, 31016, 1117, 10507, 8477, 13008, 13008, 13008, 13008,
	13008, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 557, 1321, 1311, 1374, -1000, 1412, -1000, -120,
	17010, 13508, 1076, -1000, -1000, -1000, 1751, -1000, 1751, 1321,
	1705, 1598, 13008, -1000, -1000, 1705, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1210, -1000, 31016, 1403, 1731, 31016,
	1585, 1075, 276, -1000, 13508, 13508, 1401, -1000, 934, 31016,
	-1000, -1000, 22516, -1000, -1000, 7461, -1000, 294, 31016, -1000,
	21010, 22016, 8985, 1, -1000, 8985, 1267, -1000, 25, 33,
	11007, 569, -1000, -1000, -1000, 2203, 14508, 1189, 1661, 106,
	-1000, -1000, -1000, 1452, -1000, 1452, 1452, 1452, 1452, 276,
	276, 276, 276, -1000, -1000, -1000, -1000, -1000, 1464, 1463,
	-1000, 1452, 1452, 1452, 1452, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1462, 1462, 1462, 1453, 1453, 339, -1000, 13508,
	189, 31016, 1720, 919, 216, 369, 1525, 1058, 1058, 1058,
	369, -1000, 1172, 1148, -1000, 1349, -1000, -1000, 1794, -1000,
	-1000, 764, 745, 739, 573, 31016, 180, 291, -1000, 337,
	-1000, 31016, 1058, 709, 465, 1058, -1000, 1058, -1000, -1000,
	-1000, -1000, -1000, 1058, 1318, -1000, 1457, 836, 736, 834,
	728, 1318, -1000, -1000, -80, 1318, -1000, 1318, -1000, 1318,
	-1000, 1318, -1000, 1318, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 661, 31016, 180, 757, -1000, 374, -1000, -1000,
	757, 757, -1000, -1000, -1000, -1000, 1071, 1065, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -314, 31016, -1000, 211, 633,
	280, 319, 268, 31016, 219, 1734, 259, 265, 31016, 31016,
	367, 1538, 31016, 1723, 31016, -1000, -1000, -1000, -1000, 790,
	31016, -1000, -1000, 715, 715, -1000, -1000, 31016, 715, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 715, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 31016, 31016, -1000, -1000, -1000,
	-1000, -1000, 82, 22, 278, -1000, -1000, -1000, -1000, -1000,
	1742, -1000, 790, 677, 679, -1000, -1000, -1000, 971, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 839, 14008, 14008, 14008,
	1408, 378, 1474, 1356, 753, 737, 737, 815, 815, 575,
	575, 575, 575, 575, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1353, -1000, 1169, 938, 1126, -1000, 1353, 1353, 928,
	13008, -1000, -1000, 666, -1000, 13508, 1126, -1000, -1000, 1126,
	1307, 1299, 1828, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1126, 13008, 13008, 1290, 1441, 554,
	-1000, 1353, 1126, 1126, 1353, 1353, 8477, 1126, -1000, 31016,
	-1000, -245, -1000, -14, 541, 1441, -1000, 21510, 1126, 1237,
	-1000, -1000, -1000, -1000, -1000, 19010, 1483, 1705, -1000, -1000,
	1441, 1372, -1000, -1000, 276, 76, 771, 790, 790, 13508,
	-1000, -1000, -1000, -1000, -1000, -1000, 545, 303, 1441, -1000,
	1259, 1650, -1000, -1000, -1000, 1730, 16510, 31016, 1436, 1294,
	-1000, 537, -1000, 1267, 1, -23, -1000, -1000, -1000, -1000,
	790, -1000, 1122, 295, 287, -1000, 347, -1000, -1000, -1000,
	-1000, 615, 1729, 1659, 92, -1000, -1000, -1000, 276, 276,
	-1000, -1000, -1000, -1000, -1000, -1000, 1063, 1063, -1000, -1000,
	-1000, -1000, -1000, 918, -1000, -1000, -1000, 892, -1000, -1000,
	1067, 1558, 189, -1000, -1000, 632, 1042, 1663, 31016, -1000,
	-1000, 1183, 211, 31016, 671, 1537, -1000, 1525, 1525, 1525,
	31016, -1000, -1000, -1000, -1000, 3354, 31016, 1369, -1000, 176,
	-1000, 1163, 31016, -1000, 1362, 1461, 1058, 1058, -1000, -1000,
	-1000, 31016, 1441, -1000, -1000, -1000, -1000, 462, 1699, 1683,
	180, 176, 569, 1058, -1000, -1000, -1000, -1000, -1000, -317,
	1360, 403, 191, 223, 31016, 31016, 31016, 31016, 31016, 538,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 260, 372,
	-1000, 31016, 31016, 455, -1000, -1000, -1000, 722, -1000, -1000,
	722, -1000, -1000, -1000, -1000, -1000, 1676, 31016, -3, -290,
	-1000, -287, -1000, -1000, -1000, -1000, 1275, 370, 1474, 14008,
	14008, 13008, -75, 430, 430, 757, -1000, -1000, -1000, 13508,
	13508, 1351, 653, -1000, 13508, 689, -1000, -1000, 13508, 13508,
	13508, -1000, 1353, 1353, 13008, 8477, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 412, 410, 407, 31016,
	-1000, -1000, 1753, -1000, 1623, 1622, 1825, 1822, -1000, 21010,
	1705, -1000, -1000, 31016, -235, -1000, 1640, 1620, -1000, -1000,
	-1000, -1000, 6953, 1536, 31016, 1441, -1000, 16009, 31016, 31016,
	21010, 21010, 21010, 21010, 21010, -1000, 1567, 1564, -1000, 1587,
	1565, 1605, 31016, -1000, 1347, 1126, 1827, 16510, 18010, 1181,
	21010, -1000, -1000, 21010, 31016, 6445, -1000, -1000, -10, 13,
	-1000, -1000, -1000, -1000, 1781, 2203, -1000, -1000, -1000, -1000,
	763, 2369, 1845, -1000, 1041, -1000, 1110, -1000, 708, 698,
	-1000, 31016, 1460, -1000, -1000, -1000, -1000, -1000, 1331, -1000,
	1329, 1263, 1325, 135, -1000, 1510, 1675, 632, 632, -1000,
	850, -1000, 1058, -1000, -1000, 399, -1000, 1718, 31016, 1535,
	1532, 1531, -1000, 1780, 1251, 31016, -1000, -1000, 31016, -1000,
	1618, 189, 31016, -1000, -1000, -1000, 291, 31016, -1000, 2400,
	176, -1000, -1000, -1000, -1000, -1000, -1000, 31016, 218, -1000,
	1459, 1070, -1000, 1465, -1000, -1000, -1000, -1000, 193, 262,
	-1000, 31016, 444, 1558, 31016, -1000, -1000, -1000, 715, 715,
	-1000, -1000, 1674, -1000, 1058, 14008, 14008, -1000, 486, -1000,
	1441, 1126, 1452, 1452, -1000, 1452, 1453, -1000, 1452, 148,
	1452, 147, 1126, 1126, 807, 831, -67, -1000, 790, 13508,
	1052, 1037, 908, -1000, -1000, 1126, -1000, 1441, 1441, 1441,
	1301, 31016, -1000, -1000, -1000, -1000, 1822, 1803, 13508, 1256,
	-1000, -1000, 76, 344, -1000, 1638, 1620, -1000, 1779, 1635,
	1776, -1000, -1000, -1000, 1715, 1254, -1000, 622, 1217, -1000,
	-1000, 12508, 1303, 1612, 531, 1301, 1344, 1650, 1518, 1530,
	1512, -1000, -1000, -1000, -1000, 1563, -1000, 1550, -1000, -1000,
	1448, -1000, -1000, 1311, 294, 21010, 1279, 1279, -1000, 524,
	-1000, -1000, -1000, -1000, -327, -1000, -1000, 13508, -1000, -1000,
	-1000, -1000, -1000, -1000, 865, 865, 253, -1000, -1000, -1000,
	-1000, -1000, 1451, 13508, 276, 1018, 276, 844, -1000, 838,
	-1000, -1000, -180, -1000, -1000, 1413, 1570, -1000, -1000, 31016,
	-1000, -1000, 31016, 31016, 31016, 31016, -1000, -1000, 288, -1000,
	1269, 1265, -1000, -104, -1000, 13508, -1000, 1448, -1000, -1000,
	-1000, 1161, -1000, -83, 31016, 31016, 31016, 31016, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 486, 14008, -1000,
	-1000, 361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	13508, -1000, 13508, -1000, 1751, 1017, 790, 13508, 13508, -1000,
	-1000, 18510, 20510, 20510, 18010, -1000, 1803, 1801, 1775, 790,
	1628, 1630, 1630, 1638, -1000, 1771, 1770, -1000, 997, 1766,
	991, 686, -1000, 31016, 13508, 1441, -1000, 305, 31016, 1441,
	31016, -1000, 1799, -1000, -1000, 13508, 1449, -1000, 13508, -1000,
	-1000, -1000, -1000, -1000, 1822, 1279, -1000, -1000, 562, 61,
	297, -1000, -1000, -1000, 908, -1000, -1000, -1000, 31016, 1028,
	-1000, -1000, -1000, 1147, 1129, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1448, -1000, -1000, -1000, 1251, 285, 313,
	-1000, 291, -1000, -113, -114, 908, 1728, -1000, -1000, 8477,
	-1000, -1000, 1444, 1520, -1000, 195, -1000, -1000, 908, 908,
	1126, -1000, 908, 908, 1261, -1000, -1000, -1000, 1261, 1261,
	541, 1801, -1000, 13508, 13508, 1608, 863, -1000, -1000, -1000,
	-1000, 989, 988, -1000, 986, -1000, 1844, -1000, 790, -1000,
	1441, -1000, 426, 1217, -1000, 1751, 790, 31016, 790, 1799,
	-1000, 1443, 1507, -321, 13508, 1442, -1000, 1240, -1000, -1000,
	-1000, 1725, 1441, -1000, -1000, -1000, -1000, -1000, 289, 1249,
	-1000, 620, 31016, 31016, 1126, 233, -91, -1000, -1000, -1000,
	-1000, -1000, 20010, -1000, -1000, -1000, -1000, -1000, 790, 1237,
	-1000, 788, -1000, -1000, -1000, -1000, -1000, 31016, 1217, 31016,
	-1000, 1232, 1751, 13508, 1440, 604, -326, 825, 1021, 31016,
	1529, 725, 289, 12008, -81, 8477, 5937, 1226, -1000, -1000,
	1584, -78, -98, -1000, -1000, -1000, -1000, 1201, -1000, -1000,
	-1000, 950, 31016, 822, 1322, 1763, -1000, -1000, 1224, 1527,
	-1000, 1836, -1000, -1000, -1000, 754, 976, -1000, -1000, -1000,
	-81, 908, 1126, -1000, -1, -1000, -1000, -1000, -1000, -1000,
	1465, -1000, 1581, -1000, -321, 1187, -1000, -1000, 291, -324,
	-1000, -1000, 1842, 546, 546, -1000, -1000, -1000, -1000, -1000,
	312, -1000, -1000, -83, -86, -326, -321, 1166, 59, -1000,
	-1000, -1000, 338, 837, -1000, 227, -1000, -92, 1322, -326,
	-1000, 1439, 1507, -1000, -1000, -1000, -1000, -99, -1000, 1322,
	13508, 1276, -1000, -1000, 711, 31016, -332, 1158, -1000, 779,
	-332, -1000, -1000,
}

var yyPgo = [...]int{
	0, 9, 2106, 8, 2, 7, 2105, 22, 72, 157,
	16, 166, 77, 2104, 2103, 2102, 173, 171, 167, 2101,
	2100, 2099, 2094, 2092, 2091, 2090, 2089, 2088, 2087, 169,
	141, 147, 2084, 2083, 2082, 97, 142, 71, 74, 161,
	2078, 2077, 55, 2072, 2071, 2069, 176, 153, 667, 2068,
	151, 106, 2067, 2065, 2064, 2063, 2062, 2061, 2060, 2057,
	2056, 2055, 2052, 2051, 2050, 2049, 223, 2048, 2047, 13,
	2046, 62, 2045, 2043, 2041, 2035, 2034, 3, 2033, 2030,
	2029, 2028, 124, 2027, 2025, 2024, 159, 2023, 2022, 125,
	80, 96, 2021, 2020, 76, 162, 2019, 98, 135, 2018,
	2016, 426, 2015, 66, 68, 2014, 47, 69, 64, 40,
	2013, 2012, 2011, 65, 81, 2010, 85, 53, 2009, 87,
	78, 2007, 42, 2005, 2004, 107, 2002, 2001, 2000, 73,
	1999, 1998, 3229, 1997, 75, 117, 29, 31, 1996, 1995,
	1994, 1993, 1992, 34, 1991, 1990, 1989, 123, 20, 1988,
	18, 26, 32, 111, 1987, 43, 60, 1986, 121, 1982,
	1980, 50, 25, 21, 1978, 39, 113, 139, 19, 86,
	130, 1977, 1975, 38, 48, 1974, 1973, 1971, 1970, 1969,
	1967, 45, 1959, 35, 1958, 174, 1957, 4, 33, 58,
	41, 122, 44, 17, 1956, 155, 1954, 36, 154, 116,
	138, 1953, 1952, 1949, 143, 190, 1948, 1947, 54, 152,
	129, 128, 1946, 200, 1944, 1943, 90, 1276, 1860, 15,
	140, 1942, 1941, 2712, 119, 114, 37, 1937, 158, 1936,
	1933, 1930, 163, 148, 91, 914, 88, 1929, 1928, 1927,
	1926, 1924, 1923, 1919, 93, 165, 61, 89, 150, 56,
	1918, 1915, 1914, 102, 95, 1913, 137, 136, 109, 145,
	1911, 146, 127, 172, 1909, 82, 1905, 1904, 1901, 1899,
	84, 1896, 1894, 1889, 1887, 132, 126, 101, 70, 1884,
	63, 99, 131, 133, 12, 1, 27, 160, 14, 1882,
	6, 0, 1878, 11, 156, 196, 134, 1876, 1872, 5,
	1871, 10, 1868, 1867, 118, 1865, 1864, 1863, 28, 30,
	24, 1861, 1859, 1858, 3738, 1748, 110, 1837, 168,
}

//line sql.y:5835
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) unaryExprOperatorUnion() UnaryExprOperator {
	v, _ := st.union.(UnaryExprOperator)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 312, 313, 313, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 291, 291, 291, 294, 294, 27,
	61, 29, 29, 28, 28, 31, 31, 30, 7, 7,
	7, 8, 8, 8, 8, 8, 8, 8, 8, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 12, 12,
	12, 12, 12, 15, 11, 11, 16, 16, 73, 73,
	17, 18, 18, 18, 18, 316, 316, 127, 127, 125,
	125, 126, 126, 190, 190, 19, 20, 20, 200, 200,
	199, 199, 199, 201, 201, 201, 201, 235, 235, 21,
	21, 21, 21, 21, 87, 87, 293, 293, 292, 290,
	290, 289, 289, 288, 33, 34, 43, 43, 43, 43,
	44, 45, 295, 295, 266, 49, 49, 48, 48, 48,
	48, 50, 50, 47, 47, 46, 46, 268, 268, 255,
	255, 267, 267, 267, 267, 267, 267, 267, 254, 254,
	100, 100, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 307, 307, 172, 172, 172, 172, 172,
	172, 105, 105, 113, 113, 113, 113, 103, 103, 104,
	102, 102, 102, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 311, 311, 311, 311, 112,
	112, 109, 109, 110, 110, 110, 308, 308, 308, 308,
	237, 237, 237, 237, 240, 240, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 239, 239, 239, 239, 239,
	241, 241, 241, 241, 241, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	243, 243, 243, 243, 243, 243, 243, 243, 253, 253,
	244, 244, 248, 248, 249, 249, 249, 250, 250, 250,
	251, 251, 246, 246, 246, 246, 247, 247, 247, 256,
	280, 280, 279, 279, 277, 277, 277, 277, 265, 265,
	274, 274, 274, 274, 274, 264, 264, 260, 260, 260,
	261, 261, 262, 262, 259, 259, 263, 263, 276, 276,
	275, 257, 257, 258, 258, 282, 309, 309, 309, 309,
	310, 310, 283, 300, 301, 299, 299, 299, 299, 299,
	71, 71, 71, 212, 212, 212, 272, 272, 271, 271,
	271, 273, 273, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 270, 270,
	270, 207, 207, 207, 298, 298, 298, 298, 298, 298,
	297, 297, 297, 269, 269, 269, 296, 296, 51, 51,
	156, 156, 40, 40, 40, 40, 40, 40, 39, 39,
	39, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 41, 41, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 22, 22, 22, 22, 22,
	22, 22, 22, 22, 22, 75, 75, 75, 75, 77,
	77, 77, 285, 285, 1, 1, 5, 5, 2, 2,
	76, 76, 3, 3, 4, 4, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 252, 252,
	252, 284, 284, 286, 286, 23, 32, 32, 24, 24,
	24, 24, 25, 25, 52, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 53, 53, 53, 53, 53, 53, 53,
	53, 53, 53, 302, 302, 206, 206, 214, 214, 205,
	205, 228, 228, 228, 208, 208, 208, 209, 209, 306,
	306, 306, 54, 54, 56, 56, 57, 58, 58, 230,
	230, 231, 231, 59, 60, 72, 72, 72, 72, 72,
	72, 74, 74, 74, 14, 14, 14, 14, 68, 68,
	68, 13, 13, 55, 55, 62, 303, 303, 304, 305,
	305, 305, 305, 63, 65, 26, 26, 26, 26, 26,
	26, 93, 93, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 88, 88, 88, 83, 83,
	317, 66, 67, 67, 86, 86, 86, 80, 80, 80,
	85, 85, 85, 90, 90, 92, 92, 92, 92, 92,
	94, 94, 94, 94, 94, 94, 94, 89, 89, 91,
	91, 91, 91, 221, 221, 221, 220, 220, 116, 116,
	118, 117, 117, 119, 119, 120, 120, 120, 154, 135,
	135, 188, 188, 187, 187, 189, 189, 189, 189, 191,
	191, 121, 121, 121, 121, 122, 122, 123, 123, 124,
	124, 229, 229, 226, 226, 226, 225, 225, 128, 128,
	128, 130, 129, 129, 129, 129, 131, 131, 133, 133,
	132, 132, 134, 136, 136, 136, 136, 136, 137, 137,
	101, 101, 101, 101, 101, 101, 111, 111, 111, 111,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 203, 203, 138,
	138, 146, 146, 146, 146, 139, 139, 139, 139, 139,
	139, 139, 147, 147, 147, 153, 148, 148, 144, 144,
	144, 144, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 142, 143, 143, 143, 143, 143, 143, 143, 143,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 318, 318, 245, 245, 245, 145, 145, 145, 145,
	145, 84, 84, 84, 84, 84, 234, 234, 234, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 159, 159, 81, 81, 157, 157, 158, 160,
	160, 155, 155, 155, 141, 141, 141, 161, 161, 162,
	162, 163, 163, 165, 164, 164, 166, 167, 167, 167,
	168, 168, 169, 169, 169, 42, 42, 42, 42, 42,
	37, 37, 37, 37, 38, 38, 38, 95, 95, 95,
	95, 97, 97, 96, 96, 69, 69, 70, 70, 70,
	98, 98, 99, 99, 99, 99, 185, 185, 170, 170,
	170, 177, 177, 177, 173, 173, 175, 175, 175, 176,
	176, 176, 174, 182, 182, 184, 184, 183, 183, 179,
	179, 180, 180, 181, 181, 181, 178, 178, 140, 140,
	140, 140, 140, 186, 186, 186, 186, 192, 192, 150,
	150, 152, 152, 151, 115, 193, 193, 197, 194, 194,
	198, 198, 198, 198, 198, 195, 195, 196, 196, 222,
	222, 222, 202, 202, 213, 213, 210, 210, 211, 211,
	204, 204, 215, 215, 215, 64, 149, 149, 281, 281,
	278, 218, 218, 219, 219, 223, 223, 227, 227, 224,
	224, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 216, 216, 216, 216, 216, 216,
	216, 216, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 314, 315, 232, 233, 233, 233,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 2, 3, 0, 1, 3, 1, 4, 3, 3,
	4, 3, 2, 3, 4, 3, 4, 2, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 9, 8, 7, 8, 1, 1,
	10, 11, 9, 8, 8, 1, 1, 1, 3, 1,
	3, 1, 3, 0, 4, 3, 5, 4, 1, 3,
	3, 2, 2, 2, 2, 2, 1, 1, 1, 2,
	2, 6, 12, 2, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 4, 9,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	0, 1, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 0, 10, 11, 7, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 1, 1,
	3, 4, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 4, 4, 4, 3, 3, 3, 5, 2, 3,
	3, 3, 3, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	3, 3, 3, 2, 3, 1, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 9, 6,
	6, 6, 2, 2, 3, 3, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 4, 4, 4, 4,
	4, 0, 3, 4, 7, 3, 1, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 2, 4, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -312, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -52, -53, -54, -56, -57,
	-58, -59, -60, -13, -55, -26, -27, -61, -62, -63,
	-64, -65, -8, -7, -12, 7, -73, -28, 29, -33,
	-43, 164, -44, -34, 165, -45, 167, 166, 202, 168,
	195, 71, 242, 243, 245, 246, 247, 248, -74, 200,
	201, 170, 33, 42, 30, 31, 34, 173, -9, -29,
	6, -314, 8, 366, 197, 196, 25, -11, 379, 82,
	-313, 513, -185, -170, 19, 30, 26, -169, -165, -86,
	-170, 17, 15, 5, -66, -317, -66, 9, 10, -66,
	-266, -268, 82, 138, 82, -66, -49, -48, -47, -46,
	-50, 28, -40, -41, -287, -39, -36, 169, 166, 210,
	105, 106, 202, 203, 204, 168, 186, 201, 205, 200,
	219, -35, 77, 30, 379, 382, -273, 165, 171, 172,
	367, 108, 107, 72, 167, -270, 292, 483, -50, 485,
	97, 99, 484, 41, 176, 486, 487, 488, 489, 185,
	490, 491, 492, 493, 499, 500, 501, 502, 109, 5,
	-66, -227, -223, -291, -217, 85, 86, 87, 376, 188,
	410, 411, 235, 77, 38, 292, 483, 242, 256, 250,
	277, 269, 377, 412, 238, 189, 223, 480, 267, 114,
	485, 241, 413, 203, 297, 298, 299, 97, 245, 334,
	498, 240, 414, 496, 99, 484, 76, 48, 41, 198,
	265, 261, 486, 224, 415, 387, 217, 108, 105, 505,
	33, 259, 47, 27, 495, 107, 46, 487, 129, 416,
	488, 301, 282, 474, 45, 302, 204, 417, 80, 381,
	482, 303, 260, 304, 234, 494, 170, 418, 466, 305,
	306, 475, 419, 283, 287, 420, 326, 307, 512, 49,
	421, 422, 476, 106, 423, 75, 489, 254, 255, 424,
	232, 187, 328, 281, 185, 32, 308, 378, 236, 55,
	211, 329, 43, 285, 509, 42, 470, 425, 473, 280,
	276, 50, 426, 427, 428, 429, 490, 279, 253, 275,
	504, 399, 229, 491, 59, 172, 289, 288, 290, 218,
	325, 272, 430, 431, 432, 192, 78, 433, 262, 18,
	434, 435, 309, 225, 436, 53, 437, 438, 332, 201,
	439, 51, 492, 36, 206, 506, 493, 440, 441, 442,
	443, 444, 311, 445, 310, 284, 286, 213, 312, 380,
	446, 258, 205, 497, 447, 193, 481, 207, 210, 200,
	333, 194, 448, 449, 450, 451, 452, 239, 453, 454,
	246, 499, 40, 455, 456, 457, 458, 233, 228, 327,
	336, 58, 79, 294, 459, 479, 252, 226, 460, 243,
	52, 500, 501, 502, 220, 503, 7, 510, 511, 314,
	109, 230, 231, 44, 273, 212, 461, 462, 263, 264,
	278, 251, 274, 244, 467, 214, 315, 202, 463, 335,
	227, 295, 384, 219, 316, 478, 383, 271, 268, 221,
	464, 317, 177, 215, 216, 465, 468, 318, 319, 237,
	320, 321, 322, 323, 324, 222, 382, 249, 266, 296,
	347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 361, 362, 363, 364, 175, -66,
	175, -132, -223, 175, -195, 298, -214, 300, 313, 308,
	318, 306, -206, 309, 311, 213, -306, 326, 175, 315,
	164, 155, 301, 310, 319, 320, 237, 321, 324, 222,
	-302, -291, 488, 503, 114, 270, 305, 303, 327, 470,
	323, 322, -223, 244, -230, 249, -218, -291, -217, 247,
	-132, -72, 466, 168, -232, -232, -88, 470, 472, -148,
	-101, 122, -111, -114, -106, -107, -142, -143, -144, -145,
	-112, -155, 144, 145, 152, 123, -153, -115, 23, 375,
	368, 367, 155, 28, 160, 65, 66, 370, 371, 125,
	54, 343, 344, -113, 339, 345, 340, 373, 374, 100,
	-218, -223, 180, 338, 174, 150, 366, -108, -104, -7,
	-151, 337, 341, 342, 346, -291, -217, -110, -109, -138,
	88, 93, 98, 94, -311, 101, -314, 89, 90, 91,
	92, 102, 103, 156, 158, 157, 159, 41, 314, 314,
	-132, -66, -163, -86, -165, -9, -7, -314, 6, -66,
	-7, -8, -12, -29, -31, 406, -30, -223, -170, -185,
	9, 140, 39, 47, -168, -169, -11, -7, -101, 16,
	20, 21, -91, 146, -101, -223, -67, -204, 179, -66,
	-66, -194, -235, 244, -198, 327, 326, -219, -196, -218,
	-216, -195, 325, 169, 385, 121, 22, 24, 124, 155,
	16, 125, 34, 171, 270, 186, 154, 182, 367, 164,
	69, 386, 339, 340, 337, 343, 369, 370, 338, 300,
	28, 10, 388, 25, 196, 21, 35, 148, 166, 128,
	199, 23, 197, 100, 103, 391, 19, 72, 191, 11,
	184, 37, 13, 392, 393, 14, 180, 179, 140, 176,
	67, 8, 160, 26, 137, 63, 394, 116, 395, 396,
	397, 398, 65, 138, 17, 507, 341, 342, 30, 471,
	375, 208, 150, 70, 56, 472, 122, 400, 401, 101,
	402, 104, 73, 477, 118, 15, 68, 39, 403, 209,
	404, 181, 508, 405, 330, 406, 139, 167, 366, 66,
	407, 174, 313, 6, 372, 29, 195, 183, 111, 64,
	408, 175, 127, 373, 374, 178, 102, 5, 115, 31,
	9, 71, 74, 344, 345, 346, 54, 110, 379, 126,
	12, 409, 331, 120, 114, -267, 138, -254, -258, -218,
	190, -283, 186, -132, -276, -275, -218, -87, -213, 176,
	184, 183, 115, -295, 118, 230, 338, 174, -46, -47,
	-195, 154, 207, 83, 83, -258, -257, -256, -296, 209,
	190, -282, -274, 182, 191, -264, 183, 184, -259, 176,
	116, -296, -259, 181, 191, 209, 209, 109, 209, 109,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 206,
	-265, 130, -265, 383, 383, -270, -296, -296, -296, 178,
	32, 32, -215, -259, 178, 22, -265, -265, -195, 154,
	-265, -265, -265, -265, 217, 217, -265, -265, -265, -265,
	-265, -265, -265, -265, -265, -265, -265, -265, -265, -265,
	-265, 175, -295, -95, 324, 237, 77, -48, 219, -32,
	-132, -213, 176, 177, -295, -132, 161, -132, -208, 138,
	12, -208, -205, 314, 312, 299, 304, -208, -208, -208,
	-208, 220, 297, -260, 176, 32, 187, 314, 220, 297,
	220, 221, 220, 221, 307, 317, 220, -228, 11, 140,
	338, 302, 306, 213, 175, 214, 177, 316, -291, 473,
	221, -228, 89, -209, 138, 314, 216, -208, -233, -314,
	-219, 270, -233, -233, 29, 178, -218, -68, -218, 89,
	-14, -10, -17, -16, -18, 130, -93, 314, -82, 155,
	488, 474, 475, 476, 473, 311, 481, 479, 477, 220,
	478, 83, 118, 120, 121, -101, 137, -139, 130, 131,
	132, 133, 134, 135, 136, 140, 122, 124, 138, 139,
	119, 141, 142, 143, 144, 145, 146, 147, 149, 148,
	150, 151, 154, 162, 163, -107, -107, -107, -107, -153,
	-314, -314, -314, -107, -203, -314, -107, -314, -314, -314,
	-314, -159, -101, -314, -318, -314, -318, -318, -245, -314,
	-245, -314, -314, -314, -314, 161, -314, -314, -314, -314,
	-314, -245, -245, -245, -245, 98, 93, 88, -155, 94,
	89, -218, -223, -7, -8, -148, -232, -303, -304, -135,
	-132, -314, 237, -168, -11, -7, -163, -169, -165, -7,
	-66, -80, -92, 60, 61, -94, 21, 35, 64, 62,
	20, -315, 84, -315, -185, -315, 83, -31, -188, 82,
	58, 40, 89, 89, 83, 18, -164, -166, -101, 11,
	-221, -220, 22, -218, 89, 161, 96, -133, 26, -132,
	-204, -204, 83, 244, -198, -235, -200, -199, 328, 330,
	130, -222, -218, 89, 28, 84, 83, -132, -237, -240,
	-242, -241, -243, -238, -239, 267, 268, 155, 271, 273,
	274, 275, 276, 277, 278, 279, 280, 281, 282, 29,
	198, 263, 264, 265, 266, 283, 284, 285, 286, 287,
	288, 289, 290, 250, 269, 377, 251, 252, 253, 254,
	255, 256, 258, 259, 260, 261, 262, -294, -291, 82,
	84, 83, -244, 82, -95, 175, -291, 176, 176, 176,
	-66, 366, -265, -265, 206, -39, -36, -287, 15, -35,
	-36, 169, 105, 106, 166, 82, -254, 82, -263, -294,
	-291, 82, 116, 181, 115, -262, -259, -262, -263, -291,
	-155, -291, 116, 116, -191, -218, -191, -191, 20, -191,
	20, -191, 20, 91, -218, -191, 20, -191, 20, -191,
	20, -191, 20, -191, 20, 28, 75, 76, 28, 78,
	79, 80, -155, -155, -254, -195, -132, -291, 91, 91,
	-265, -265, 91, 89, 89, 89, -265, -265, 91, 89,
	-225, -223, 89, -297, 192, 234, 236, 91, 91, 91,
	91, 28, 89, -298, 28, 495, 494, 496, 497, 498,
	91, 28, 91, 28, 91, -218, 82, -132, -98, 224,
	164, 166, 169, 73, 89, 238, 130, 41, 83, 178,
	175, -291, -210, 180, -210, -224, -223, -216, 89, -101,
	-261, 11, 140, -228, -228, -208, -132, -261, -228, -208,
	-132, -208, -208, -208, -208, -228, -228, -228, -208, -223,
	-223, -132, -132, -132, -132, -132, -132, -132, -233, -233,
	-233, -209, -208, 473, 89, 73, -231, 247, 281, 467,
	468, 469, 83, 379, -125, -132, 473, 473, 473, 473,
	473, 473, -101, -101, -101, -101, -146, 101, 122, 102,
	103, -114, -147, -151, -153, 95, 140, 124, 138, 139,
	-106, -107, -106, -106, -106, -106, -106, -106, -106, -106,
	-106, -106, -106, -106, -106, -234, -291, 89, 155, 89,
	89, -89, -91, -101, -101, -291, -218, -89, -89, -101,
	-85, 21, 35, -157, -158, 126, -155, -315, -315, 91,
	-218, -218, -79, -78, 348, 349, 350, 351, 353, 354,
	355, 358, 359, 363, 364, 347, 365, 352, 357, 360,
	361, 362, 356, 266, -90, 21, 35, -89, -219, -224,
	-216, -89, -90, -90, -89, -89, 161, -185, -315, 83,
	-305, 330, 331, 471, -226, 209, -225, 22, -149, -148,
	89, -168, -168, 60, 61, 56, -89, -94, -315, -30,
	22, -187, -218, 59, 89, -246, -195, -101, -101, 83,
	-167, 24, 25, -132, -220, 146, -224, -190, 209, -132,
	-117, -119, -120, -121, -135, -154, -314, 11, -125, -126,
	-134, -223, -198, -200, 83, 329, 331, 332, 73, 104,
	-101, -247, 154, -272, -271, -270, -254, -256, -257, -258,
	84, -171, -100, 37, -250, 295, 294, -244, -244, -244,
	-244, -244, -246, -246, -246, -246, 82, 82, -244, -244,
	-244, -244, -248, 82, -248, -248, -249, 82, -249, -283,
	-101, -280, -279, -277, -278, 185, 97, 379, 74, -275,
	-167, 91, -98, -211, 180, -281, -278, -291, -291, -291,
	-211, -291, 89, -291, 89, 83, 16, -255, -254, -51,
	234, -286, 209, -282, -276, -263, 116, -262, -263, -263,
	-291, 83, 26, 109, 109, 109, 109, 379, 166, 29,
	-254, -51, -234, 178, -234, -234, 89, 89, -207, 503,
	-125, -97, 226, 130, 215, 215, 175, 175, 228, -132,
	239, 241, 240, 238, 20, 227, 229, 231, 217, -132,
	-132, -210, 73, -127, -132, 23, -223, -132, -208, -208,
	-132, -208, -208, -132, -218, -82, 330, 83, 379, 19,
	-83, 19, 101, 102, 103, -147, -106, -107, -106, 121,
	199, 83, -315, 22, 83, 74, -315, -315, -315, 83,
	11, -89, -160, -158, 128, -101, -315, -315, 83, 83,
	11, -315, -89, -89, -314, 161, -315, -315, -315, -315,
	-315, -219, -304, 470, 331, -136, 71, 179, 72, -314,
	-225, -315, -141, -218, 91, 94, -170, -116, -118, 11,
	-94, -153, 84, 83, -246, -174, -179, -205, -291, 89,
	155, -166, 161, -140, 29, 54, -10, -314, -314, 29,
	83, -128, -130, -129, -131, 63, 67, 69, 64, 65,
	66, 70, -229, 22, -117, -8, -7, -314, -132, -125,
	-316, 11, 74, -316, 83, 161, -199, -201, 333, 330,
	336, -291, 89, -75, 209, 83, -270, -258, -310, 101,
	122, 28, 73, 292, 97, -308, 154, -309, 181, 115,
	116, 193, 22, 38, -251, 296, -246, -246, -253, 89,
	-253, 91, 91, 84, -42, -37, -38, 30, 77, -277,
	-265, 89, 36, -218, 84, -97, -132, 122, 73, -281,
	-281, -281, -223, 15, -187, 83, 84, -156, 235, 84,
	-218, 84, 82, -263, -263, -218, -314, 175, 28, 28,
	-51, -156, -247, -291, 505, 504, 84, 177, 233, -99,
	343, 89, 85, -132, -132, -132, -132, -132, 169, 166,
	218, 178, -125, -132, 83, -71, 194, 189, -228, -228,
	30, -132, 330, 482, 480, 121, 199, -114, -107, -91,
	376, -236, 155, 267, 198, 265, 261, 281, 272, 294,
	263, 295, -236, -234, -101, -101, -163, 129, -101, 127,
	-101, -101, -101, -315, -315, -90, -219, 176, 176, 176,
	-191, -202, 19, 11, 54, 54, -116, -137, 12, -117,
	-94, -218, -177, 466, -182, 43, -180, -181, 44, -178,
	45, 53, 146, -192, 73, -193, -197, -155, -150, -152,
	-151, -314, -186, -315, -218, -191, -193, -119, -120, -120,
	-119, -120, 63, 63, 63, 68, 63, 68, 63, -129,
	-223, -315, -315, -8, -226, 74, -117, -117, -134, -223,
	146, 330, 334, 335, 16, -270, 101, -314, -105, -113,
	-103, -102, -104, -108, 144, 145, 9, 89, 89, -291,
	116, 116, -132, 82, 84, 83, 84, 83, 84, 83,
	-212, 416, 122, -38, -37, -265, -265, 91, -291, 177,
	23, -132, 73, 73, 73, 16, -254, -155, 54, -280,
	-187, -284, -286, -132, -103, -314, -156, -132, -96, 224,
	232, 82, 86, -293, 74, 215, 292, 215, -132, -71,
	-42, -132, -208, -208, 30, -291, -114, -107, -314, -315,
	-244, -244, -244, -249, -244, 255, -244, 255, -315, -315,
	83, -315, 19, -315, -81, 372, -101, 83, 83, -315,
	-315, -314, -314, -314, -315, -132, -137, -161, 13, -101,
	-174, 48, 273, -184, -183, 52, 44, -181, 16, 46,
	16, 27, -192, 83, 130, 83, -315, -315, 83, 54,
	161, -315, -137, -123, -122, 73, 74, -124, 73, -122,
	63, 63, -188, -315, -190, -117, -137, -137, 161, -1,
	-2, 507, 508, 509, -101, -109, -109, -143, 82, -101,
	-246, 89, -246, 91, 91, 416, 28, 78, 79, 80,
	28, 75, 76, -132, -132, -132, -132, -187, 211, 84,
	-315, 83, -252, 379, 382, -101, -188, 84, -290, 379,
	-292, -218, -218, -218, -218, -106, -246, -291, -101, -101,
	-168, 89, -101, -101, -189, -315, -218, 181, -189, -189,
	-226, -161, -162, 14, 16, -175, 50, -173, 49, -173,
	-183, 16, 16, 89, 16, 89, 116, -197, -101, -152,
	54, -10, -218, -150, -218, -163, -101, 82, -101, -137,
	-137, 512, 116, -76, 82, 299, -315, -187, 84, 84,
	84, -188, 212, -309, -286, 383, 383, -315, 22, -289,
	-288, -219, 82, 74, -84, 140, 379, -315, -315, -315,
	-315, -315, 83, -315, -315, -315, -136, -162, -101, -148,
	-176, 51, 73, 104, 89, 89, 89, 9, -150, 161,
	-168, -187, -163, 82, -5, 77, -3, 506, -101, 82,
	84, -172, 22, -314, -10, 83, 130, -187, -132, -315,
	377, 70, 380, -218, 181, 73, 104, -193, -218, 84,
	-168, -101, 82, 130, -77, 510, 91, 84, -187, -300,
	-301, 73, -310, -307, 101, 122, 97, -308, 110, 111,
	-10, -101, 208, -69, 379, -288, -269, -219, 89, 91,
	84, 59, 378, 381, 84, -187, 91, -285, 82, 16,
	84, -301, 73, 10, 9, 101, 89, -69, -315, -315,
	-70, 223, 470, -293, 59, -3, 84, -284, -1, -299,
	194, 189, 192, 29, -299, 186, -290, 379, -77, -3,
	84, 512, 116, 188, 28, 101, 225, 380, -285, -77,
	82, -5, 381, -285, -101, 82, 84, -187, -4, 511,
	84, 91, -4,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 64, 66, 67, 660, 660, 0, 660, 0,
	0, 660, -2, -2, 660, 1067, 0, 660, 0, 0,
	-2, 593, 594, 0, 596, -2, 0, 0, 605, 1514,
	1514, 655, 0, 0, 0, 0, 0, 660, 931, 44,
	660, 0, 78, 79, 611, 612, 613, 59, 0, 1512,
	1, 3, 65, 69, 0, 0, 0, 52, 940, 0,
	72, 0, 0, 664, 0, 662, 1050, 660, 660, 0,
	109, 110, 0, 0, 0, -2, 113, -2, 137, 138,
	0, 142, 445, 405, 448, 403, 434, -2, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 408, 298, 298, 0, 0, -2, 396, 396, 396,
	0, 0, 0, 431, 1052, 351, 298, 298, 0, 298,
	298, 298, 298, 0, 0, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 298,
	957, 141, 1068, 1065, 1066, 34, 35, 36, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373,
	1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403,
	1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413,
	1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 0, 1044,
	0, 523, 750, 0, 584, 584, 0, 584, 584, 584,
	584, 0, 0, 0, 535, 0, 0, 0, 0, 581,
	0, 0, 554, 556, 0, 581, 0, 587, 0, 568,
	584, 1515, 1515, 1515, 1035, 0, 578, 576, 590, 591,
	573, 574, 592, 595, 0, 600, 603, 1061, 1062, 0,
	618, 43, 1292, 610, 623, 624, 0, 656, 657, 39,
	836, 0, 765, 769, 780, 793, 794, 795, 796, 797,
	799, 800, 0, 0, 0, 0, 805, 806, 0, 0,
	0, 0, 0, 817, 0, 0, 0, 0, 0, 912,
	0, 881, 881, 853, 881, 883, 883, 0, 0, 0,
	921, 0, 0, 0, 0, 0, 0, 209, 210, 835,
	1024, 883, 883, 883, 883, -2, -2, 193, 194, 195,
	196, 197, 198, 199, 0, 189, 0, 213, 214, 211,
	212, 819, 820, 205, 206, 207, 208, 1514, 0, 633,
	0, 0, 940, 0, 932, 931, 57, 0, 660, -2,
	0, 0, 0, 0, 41, 0, 46, 711, 71, 70,
	976, 0, 0, 0, 53, 941, 61, 63, 942, 0,
	665, 666, 0, 689, 693, 0, 661, 0, 1051, 1050,
	1050, 95, 0, 1457, 1028, -2, -2, 0, 0, 1063,
	1064, 1037, -2, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, -2, 0, 0, 151, 152, 0,
	37, 324, 0, 147, 0, 318, 270, 957, 0, 0,
	0, 0, 0, 660, 0, 1045, 132, 133, 139, 140,
	298, 298, 0, 141, 141, 412, 413, 414, 0, 0,
	-2, 322, 0, 397, 0, 0, 312, 312, 316, 314,
	315, 0, 0, 0, 0, 0, 0, 425, 0, 426,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 507,
	0, 299, 0, 443, 444, 352, 0, 0, 0, 0,
	423, 424, 0, 0, 1053, 1054, 0, 0, 298, 298,
	0, 0, 0, 0, 298, 298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 970, 0, 0, 0, -2, 0, 515,
	0, 0, 0, 1046, 1046, 522, 0, 524, 525, 0,
	0, 526, 0, 581, 581, 579, 580, 528, 529, 530,
	531, 584, 0, 0, 307, 308, 309, 581, 584, 0,
	584, 584, 584, 584, 581, 581, 581, 584, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1515, 1515, 1515,
	587, 584, 0, 564, 0, 565, 566, 569, 570, 1516,
	1517, 1082, 571, 572, 1036, 601, 604, 621, 619, 620,
	622, 614, 615, 616, 617, 0, 635, 636, 641, 0,
	0, 0, 0, 647, 648, 649, 0, 0, 652, 653,
	654, 0, 0, 0, 0, 763, 0, 0, 825, 826,
	827, 828, 829, 830, 831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 801, 802, 803, 804, 807,
	0, 0, 0, 812, 813, 0, 0, 0, 0, 0,
	670, 0, 913, 0, 851, 0, 852, 854, 855, 0,
	856, 0, 0, 0, 673, 0, 0, 673, 673, 0,
	0, 183, 184, 185, 186, 200, 201, 202, 203, 204,
	215, 921, 0, 835, 0, 0, 40, 625, 626, 0,
	733, 1056, 0, 51, 60, 62, 940, 55, 940, 0,
	675, 0, 0, -2, -2, 676, 682, 683, 684, 685,
	686, 48, 1513, 49, 0, 68, 0, 42, 0, 0,
	0, 0, 282, 979, 0, 0, 933, 934, 937, 0,
	690, 694, 0, 696, 697, 0, 663, 93, 0, 749,
	0, 0, 0, 1457, 1034, 0, 97, 98, 0, 0,
	0, 286, 1039, 1040, 1041, -2, 305, 0, -2, 277,
	221, 222, 223, 270, 225, 270, 270, 270, 270, 282,
	282, 282, 282, 253, 254, 255, 256, 257, 0, 0,
	240, 270, 270, 270, 270, 260, 261, 262, 263, 264,
	265, 266, 267, 226, 227, 228, 229, 230, 231, 232,
	233, 234, 272, 272, 272, 274, 274, 0, 38, 0,
	290, 0, 937, 0, 970, 1048, 1058, 0, 0, 0,
	1048, 115, 0, 0, 446, 406, 435, 447, 0, 409,
	410, -2, 0, 0, 396, 0, 398, 0, 306, 0,
	-2, 0, 316, 0, 312, 316, 313, 316, 304, 317,
	427, 428, 429, 0, 487, 719, 0, 0, 0, 0,
	0, 493, 494, 495, 0, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 436, 437, 438, 439, 440,
	441, 442, 0, 0, 398, 0, 432, 0, 353, 354,
	0, 0, 357, 358, 359, 360, 0, 0, 363, 364,
	365, 736, 737, 366, 390, 391, 392, 367, 368, 369,
	370, 371, 372, 373, 384, 385, 386, 387, 388, 389,
	374, 375, 376, 377, 378, 381, 0, 125, 961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 0, 0, 751, 1069, 1070, 585, 586,
	0, 310, 311, 584, 584, 532, 555, 0, 584, 536,
	557, 537, 539, 538, 540, 559, 560, 584, 543, 582,
	583, 544, 545, 546, 547, 548, 549, 550, 551, 552,
	553, 561, 562, 563, 588, 0, 0, 602, 606, 607,
	608, 609, 0, 0, 638, 89, 643, 644, 645, 646,
	658, 651, 837, 760, 761, 762, 764, 766, 0, 821,
	823, 768, 770, 832, 833, 834, 0, 0, 0, 0,
	0, 774, 778, 781, 782, 783, 784, 785, 786, 787,
	788, 789, 790, 791, 792, 798, 896, 897, 898, 815,
	816, 0, 687, 0, 0, 0, 814, 0, 0, 0,
	0, 671, 672, 919, 916, 0, 0, 882, 884, 0,
	0, 0, 0, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 0, 0, 0, 674, 922, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 1023, 0,
	628, 629, 631, 0, 753, 0, 734, 0, 0, 1057,
	634, 54, 56, 680, 681, 0, 698, 677, 50, 45,
	0, 0, 713, 977, 282, 999, 0, 943, 944, 0,
	936, 938, 939, 73, 695, 691, 0, 0, 0, 748,
	0, 701, 703, 704, 705, 731, 0, 0, 0, 0,
	91, 750, 1029, 96, 0, 0, 101, 102, 1030, 1031,
	1032, 1033, 0, 465, -2, 348, 153, 155, 156, 157,
	148, 330, 0, 0, 280, 278, 279, 224, 282, 282,
	247, 248, 249, 250, 251, 252, 0, 0, 241, 242,
	243, 244, 235, 0, 236, 237, 238, 0, 239, 323,
	0, 945, 291, 292, 294, 298, 0, 0, 0, 319,
	320, 0, 961, 0, 0, 0, 1059, 1058, 1058, 1058,
	0, 143, 144, 145, 146, 141, 0, 0, 149, 400,
	399, 0, 0, 321, 0, 0, 316, 316, 301, 302,
	430, 0, 0, 489, 490, 491, 492, 0, 0, 0,
	398, 400, 286, 0, 355, 356, 361, 362, 379, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 461, 462, 463, 464, 958, 959, 960, 0, 0,
	516, 0, 0, 340, 87, 1047, 521, 581, 542, 558,
	581, 534, 541, 567, 598, 642, 0, 0, 0, 0,
	650, 0, 767, 822, 824, 771, 0, 775, 779, 0,
	0, 0, 0, 0, 0, 0, 818, 842, 843, 0,
	0, 931, 0, 917, 0, 0, 850, 885, 0, 0,
	0, 838, 0, 0, 673, 0, 886, 887, 888, 889,
	890, 922, 627, 630, 632, 709, 0, 0, 0, 0,
	735, 1055, 0, 924, 0, 0, 698, 758, 699, 0,
	678, 47, 712, 0, 981, 980, 993, 1006, 283, 284,
	285, 935, 0, 1017, 0, 0, 1009, 0, 0, 0,
	0, 0, 0, 0, 0, 738, 0, 0, 741, 0,
	0, 0, 0, 732, 0, 0, 0, 0, -2, 0,
	0, 85, 86, 0, 0, 0, 99, 100, 0, 0,
	106, 287, 288, 134, 0, 141, 350, 154, 158, 163,
	0, 0, 0, 168, 0, 170, 0, 331, 0, 217,
	219, 0, 0, 161, 220, 281, 245, 246, 0, 268,
	0, 0, 0, 343, 111, 949, 948, 298, 298, 293,
	0, 296, 0, 1060, 271, 0, 124, 0, 0, 0,
	0, 0, 130, 0, 404, 0, 415, 416, 0, 486,
	0, 290, 0, 300, 303, 720, 0, 0, 417, 0,
	400, 421, 422, 433, 382, 383, 380, 0, 0, 971,
	972, 0, 975, 116, 453, 455, 454, 458, 0, 0,
	451, 0, 340, 945, 0, 520, 341, 342, 584, 584,
	637, 90, 0, 640, 0, 0, 0, 772, 776, 688,
	0, 0, 270, 270, 902, 270, 274, 905, 270, 907,
	270, 910, 0, 0, 0, 0, 914, 849, 920, 0,
	0, 0, 0, 839, 840, 0, 923, 0, 0, 0,
	0, 0, 1042, 1043, 925, 926, 758, 927, 0, 700,
	679, 714, 999, 0, 992, 0, -2, 1001, 0, 0,
	0, 1007, 692, 76, 0, 1017, 1025, 0, 1008, 1019,
	1021, 0, 0, 0, 1013, 0, 758, 702, 727, 729,
	0, 724, 739, 740, 742, 0, 744, 0, 746, 747,
	711, 707, 708, 0, 93, 0, 758, 758, 92, 0,
	752, 103, 104, 105, 474, 349, 164, 0, 166, 181,
	182, 187, 188, 190, 0, 0, 0, 169, 171, 172,
	216, 218, 0, 0, 282, 0, 282, 0, 275, 0,
	332, 344, 0, 946, 947, 0, 0, 295, 297, 0,
	1049, 126, 0, 0, 0, 0, 150, 401, 0, 289,
	0, 0, 511, 508, 418, 0, 420, 711, 962, 963,
	964, 0, 974, 119, 0, 0, 0, 0, 517, 518,
	519, 88, 527, 533, 639, 659, 773, 777, 0, 809,
	899, 282, 903, 904, 906, 908, 909, 911, 810, 811,
	0, 845, 0, 847, 940, 0, 918, 0, 0, 859,
	841, 0, 0, 0, 733, 58, 927, 929, 0, 759,
	986, 984, 984, 994, 995, 0, 0, 1002, 0, 0,
	0, 0, 77, 0, 0, 0, 1022, 0, 0, 0,
	0, 94, 931, 721, 728, 0, 0, 722, 0, 723,
	743, 745, 706, -2, 758, 758, 83, 84, 0, 0,
	0, 475, 478, 479, 0, 191, 192, 167, 0, 0,
	258, 269, 259, 0, 0, 345, 950, 951, 952, 953,
	954, 955, 956, 711, 127, 128, 129, 407, 0, 0,
	488, 0, 496, 0, 0, 0, 0, 973, 452, 0,
	117, 118, 0, 0, 457, 891, 900, 901, 0, 0,
	0, 915, 0, 0, 0, 755, 715, 716, 0, 0,
	753, 929, 75, 0, 0, 989, 0, 982, 985, 983,
	996, 0, 0, 1003, 0, 1005, 0, 1026, 1027, 1020,
	0, 1012, 1015, 1011, 1014, 940, 725, 0, 730, 931,
	82, 0, 476, 482, 0, 0, 165, 0, 175, 273,
	276, 0, 0, 325, 512, 509, 510, 419, 0, 120,
	121, 0, 0, 0, 0, 0, 0, 844, 846, 848,
	857, 858, 0, 754, 756, 757, 710, 74, 930, 928,
	978, 0, 987, 988, 997, 998, 1004, 0, 1010, 0,
	80, 0, 940, 0, 0, 0, 469, 0, 0, 0,
	326, 330, 0, 0, 965, 0, 0, 0, 459, 808,
	0, 0, 0, 717, 718, 990, 991, 1018, 1016, 726,
	81, 0, 0, 0, 472, 0, 483, 480, 0, 327,
	328, 0, 159, 176, 177, 0, 0, 180, 173, 174,
	965, 0, 0, 449, 967, 122, 123, 393, 394, 395,
	116, 892, 0, 895, 482, 0, 477, 468, 0, 474,
	481, 329, 0, 0, 0, 178, 179, 112, 513, 514,
	0, 968, 969, 119, 893, 469, 482, 0, 0, 333,
	335, 336, 0, 0, 334, 0, 456, 0, 472, 469,
	473, 0, 476, 337, 338, 339, 966, 0, 466, 472,
	0, 0, 894, 467, 0, 0, 484, 0, 470, 0,
	484, 485, 471,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 123, 3, 3, 3, 149, 141, 3,
	82, 84, 146, 144, 83, 145, 161, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 513,
	131, 130, 132, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 120, 121, 122, 124, 125, 126,
	127, 128, 129, 133, 134, 135, 136, 137, 138, 139,
	140, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:458
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:463
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:464
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:468
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:500
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:506
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:510
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:514
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:519
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:529
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:535
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:541
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:545
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:550
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:554
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:560
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:564
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:570
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:576
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:580
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:584
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:607
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:613
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:618
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:631
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:644
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:648
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:666
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:723
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:735
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:743
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:767
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:771
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:777
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:787
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:791
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:801
		{
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:805
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:809
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:815
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:825
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:838
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:860
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:864
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:870
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:874
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:878
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:884
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:888
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:892
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:896
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:902
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:906
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:912
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:918
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:945
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:949
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:954
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:958
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:969
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:974
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:980
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:985
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:997
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1004
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1011
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1016
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1021
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1026
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1033
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1040
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1051
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1062
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1068
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1072
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1086
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1090
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1096
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1106
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1110
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1117
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1121
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1127
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1131
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1137
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1142
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1151
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1160
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1170
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1176
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1184
		{
			yyVAL.str = ""
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.str = ""
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1197
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1201
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1207
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1213
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1218
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1223
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1228
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1233
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1238
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1247
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1254
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1258
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1272
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1278
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1289
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1296
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1303
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1307
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1311
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1315
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1326
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1333
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1337
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1343
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1347
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1351
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1355
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1359
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1363
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1367
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1372
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1376
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1395
		{
			yyLOCAL = UBinaryOp
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1399
		{
			yyLOCAL = Utf8Op
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1403
		{
			yyLOCAL = Utf8mb4Op
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1407
		{
			yyLOCAL = Latin1Op
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1428
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1432
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1436
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1442
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1446
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1450
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1454
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1460
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1476
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1526
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1544
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1556
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 242:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1560
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1564
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1594
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1598
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1602
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1626
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1631
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1657
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1661
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1676
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1685
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1690
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1694
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1702
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1712
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1720
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1724
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1728
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1733
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1737
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = ""
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = ""
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1774
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1783
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1789
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1793
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1799
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1803
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1808
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1812
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = ""
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1828
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1832
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1836
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1840
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1844
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1849
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = yyDollar[2].str
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = "key"
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = yyDollar[1].str
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = ""
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1912
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1916
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1922
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1928
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1932
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1938
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1942
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1948
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1954
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1958
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1962
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1966
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1975
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1981
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1987
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1993
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1999
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2003
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2007
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2011
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2015
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2033
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2037
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2041
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2050
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2056
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2060
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2070
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2080
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2084
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2088
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2092
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2096
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2100
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2104
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2108
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2112
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2116
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2120
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2124
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2128
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2132
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2136
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2140
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2144
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2148
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2152
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2156
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2160
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2164
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2168
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2172
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2176
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2180
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2184
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2188
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2193
		{
			yyVAL.str = ""
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2197
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2224
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2243
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2248
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2252
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2261
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2265
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2269
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2277
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2283
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2297
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2301
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2305
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2309
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2313
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2317
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2321
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2325
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2329
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2333
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2337
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2341
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2345
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2349
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2353
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2357
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2361
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2365
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2369
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2373
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2377
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2381
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2385
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2391
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2395
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2401
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2405
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2409
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2413
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2417
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2421
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2425
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2429
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2433
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2439
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2445
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2452
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2459
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2465
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2469
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2476
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2483
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2495
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2505
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2509
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2513
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2526
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2536
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2540
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2551
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2558
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2565
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2572
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2579
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2586
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2591
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2603
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2616
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2627
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2631
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2640
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2651
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2655
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2660
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2689
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2693
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2707
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2717
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2721
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2725
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2729
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2733
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2737
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2741
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2745
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2749
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2753
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2757
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2761
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2765
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2769
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2773
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2777
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2781
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2785
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2789
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2793
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2797
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2801
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2806
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2810
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2814
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2821
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 513:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2831
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2835
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2847
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2851
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 518:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2870
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2874
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2884
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2889
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2895
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2899
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2903
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2907
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2911
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2915
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2919
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2923
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2927
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2931
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2935
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2939
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2943
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2947
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2951
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2955
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2959
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2963
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2967
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2971
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2975
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2979
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2983
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2987
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2991
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2995
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2999
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3003
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3007
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3011
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3015
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3023
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3027
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3031
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3035
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3052
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3057
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3061
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3065
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3069
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3074
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3088
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3092
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3112
		{
			yyVAL.str = ""
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.str = "extended "
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3122
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3126
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3142
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3160
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3164
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3174
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3180
		{
			yyVAL.empty = struct{}{}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.empty = struct{}{}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.empty = struct{}{}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3224
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3229
		{
			yyVAL.empty = struct{}{}
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.empty = struct{}{}
		}
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3234
		{
			yyVAL.empty = struct{}{}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.empty = struct{}{}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3247
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3252
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3256
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3260
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3264
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3268
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3272
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.str = yyDollar[1].str
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.str = yyDollar[1].str
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.str = yyDollar[1].str
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = ""
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3333
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3337
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3343
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3349
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3359
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3365
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3369
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3373
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3377
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3383
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3389
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3395
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3399
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3403
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3407
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3411
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3415
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3421
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3425
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3435
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3439
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3463
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3467
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3475
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3480
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3488
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3493
		{
			yyVAL.str = ""
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3502
		{
			setAllowComments(yylex, true)
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3506
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3512
		{
			yyVAL.strs = nil
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3516
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3522
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3535
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = SQLCacheStr
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3548
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3552
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3556
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3565
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3570
		{
			yyVAL.strs = nil
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3578
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3582
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3586
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.str = SQLCacheStr
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3600
		{
			yyVAL.str = DistinctStr
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3604
		{
			yyVAL.str = DistinctStr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.str = StraightJoinHint
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3612
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3616
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3622
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3626
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3632
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3636
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3640
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3644
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3649
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3664
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3669
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3673
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3679
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3685
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3689
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3699
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3703
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3707
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3713
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3719
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3723
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3728
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3732
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3738
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3742
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3748
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3752
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3766
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3770
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3783
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3787
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3791
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3795
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3803
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3807
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3813
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3815
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3818
		{
			yyVAL.empty = struct{}{}
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3844
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3848
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3852
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3858
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3864
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3868
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3872
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3876
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3882
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3886
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3910
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3916
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3921
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3925
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3929
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3933
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3937
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3946
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3953
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3957
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3961
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3965
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3969
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3973
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3980
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3984
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3988
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3992
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3998
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4002
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4006
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4010
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4014
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4018
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4022
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4026
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4030
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4034
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4038
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4044
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4048
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4052
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4056
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4060
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4064
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4068
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4072
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4076
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4080
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4084
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4088
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4092
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4098
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4102
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4106
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4110
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4114
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4118
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4122
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4126
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4130
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4134
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4138
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4142
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4146
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4150
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4154
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4158
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4162
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4166
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4170
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4174
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4186
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4190
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4197
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4207
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4211
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4218
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4222
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4226
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4230
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4236
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4240
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4244
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4248
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4252
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4256
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4260
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4266
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4270
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4274
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4281
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4287
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4291
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 838:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4301
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4305
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4309
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4323
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4327
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4331
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4335
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4339
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4343
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4347
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4351
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4355
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4359
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4370
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4380
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4384
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4389
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4393
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4397
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4401
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4409
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4413
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4417
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4421
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4425
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4429
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4433
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4437
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4441
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4445
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4449
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4455
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4459
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4463
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4467
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4471
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4475
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4479
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4483
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4487
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4497
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4505
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4515
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4519
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4527
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4531
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4537
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4541
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4545
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4549
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4553
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4563
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 899:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4573
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4577
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4581
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4585
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4589
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4593
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4599
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4603
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4607
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4611
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4615
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4619
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4623
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = string("")
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4641
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4647
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4651
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 918:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4657
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4662
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4672
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4676
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4680
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4686
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4695
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4699
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4709
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4714
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4718
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4727
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4733
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4739
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4743
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4749
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4754
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4758
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4762
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4767
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4771
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4777
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4781
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4785
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4794
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4798
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4802
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4806
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4813
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4817
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4821
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4825
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4831
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4835
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4839
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4844
		{
			yyVAL.str = ""
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4848
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4852
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4856
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4861
		{
			yyVAL.str = ""
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = yyDollar[3].str
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4880
		{
			yyVAL.str = ""
		}
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = yyDollar[2].str
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4889
		{
			yyVAL.str = "cascaded"
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4902
		{
			yyVAL.str = ""
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4906
		{
			yyVAL.str = yyDollar[3].str
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4912
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4916
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4920
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4924
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4930
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4934
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4940
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4944
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4948
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4953
		{
			yyVAL.str = ""
		}
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4957
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4961
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4966
		{
			yyVAL.str = ""
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.str = " header"
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4975
		{
			yyVAL.str = ""
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4979
		{
			yyVAL.str = " manifest on"
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4983
		{
			yyVAL.str = " manifest off"
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4988
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4992
		{
			yyVAL.str = " overwrite on"
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4996
		{
			yyVAL.str = " overwrite off"
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5002
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 993:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5007
		{
			yyVAL.str = ""
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5011
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5017
		{
			yyVAL.str = yyDollar[1].str
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5021
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = ""
		}
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5040
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5056
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1004:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5060
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5064
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1006:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5069
		{
			yyVAL.str = ""
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5073
		{
			yyVAL.str = " optionally"
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5086
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5090
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5094
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5098
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5102
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5108
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5112
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5116
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1016:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5120
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5129
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5135
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5139
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5145
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5149
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5155
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5170
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5174
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5180
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5186
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5190
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5196
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5200
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5204
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5208
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5212
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5220
		{
			yyVAL.str = "charset"
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5230
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5234
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5238
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5247
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5252
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5254
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5257
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5259
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5262
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5264
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5267
		{
			yyVAL.empty = struct{}{}
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5269
		{
			yyVAL.empty = struct{}{}
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5271
		{
			yyVAL.empty = struct{}{}
		}
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5275
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5284
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5291
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5295
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5301
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5305
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5318
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5322
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5328
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5332
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5805
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5814
		{
			decNesting(yylex)
		}
	case 1514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5819
		{
			skipToEnd(yylex)
		}
	case 1515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5824
		{
			skipToEnd(yylex)
		}
	case 1516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5828
		{
			skipToEnd(yylex)
		}
	case 1517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5832
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
