// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const DISCARD = 57439
const IMPORT = 57440
const ENABLE = 57441
const DISABLE = 57442
const TABLESPACE = 57443
const OR = 57444
const XOR = 57445
const AND = 57446
const NOT = 57447
const BETWEEN = 57448
const CASE = 57449
const WHEN = 57450
const THEN = 57451
const ELSE = 57452
const END = 57453
const LE = 57454
const GE = 57455
const NE = 57456
const NULL_SAFE_EQUAL = 57457
const IS = 57458
const LIKE = 57459
const REGEXP = 57460
const IN = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_BINARY = 57469
const UNDERSCORE_UTF8MB4 = 57470
const UNDERSCORE_UTF8 = 57471
const UNDERSCORE_LATIN1 = 57472
const INTERVAL = 57473
const JSON_EXTRACT_OP = 57474
const JSON_UNQUOTE_EXTRACT_OP = 57475
const CREATE = 57476
const ALTER = 57477
const DROP = 57478
const RENAME = 57479
const ANALYZE = 57480
const ADD = 57481
const FLUSH = 57482
const CHANGE = 57483
const MODIFY = 57484
const SCHEMA = 57485
const TABLE = 57486
const INDEX = 57487
const VIEW = 57488
const TO = 57489
const IGNORE = 57490
const IF = 57491
const UNIQUE = 57492
const PRIMARY = 57493
const COLUMN = 57494
const SPATIAL = 57495
const FULLTEXT = 57496
const KEY_BLOCK_SIZE = 57497
const CHECK = 57498
const INDEXES = 57499
const ACTION = 57500
const CASCADE = 57501
const CONSTRAINT = 57502
const FOREIGN = 57503
const NO = 57504
const REFERENCES = 57505
const RESTRICT = 57506
const SHOW = 57507
const DESCRIBE = 57508
const EXPLAIN = 57509
const DATE = 57510
const ESCAPE = 57511
const REPAIR = 57512
const OPTIMIZE = 57513
const TRUNCATE = 57514
const MAXVALUE = 57515
const PARTITION = 57516
const REORGANIZE = 57517
const LESS = 57518
const THAN = 57519
const PROCEDURE = 57520
const TRIGGER = 57521
const VINDEX = 57522
const VINDEXES = 57523
const DIRECTORY = 57524
const NAME = 57525
const UPGRADE = 57526
const STATUS = 57527
const VARIABLES = 57528
const WARNINGS = 57529
const CASCADED = 57530
const DEFINER = 57531
const OPTION = 57532
const SQL = 57533
const UNDEFINED = 57534
const SEQUENCE = 57535
const MERGE = 57536
const TEMPTABLE = 57537
const INVOKER = 57538
const SECURITY = 57539
const FIRST = 57540
const AFTER = 57541
const BEGIN = 57542
const START = 57543
const TRANSACTION = 57544
const COMMIT = 57545
const ROLLBACK = 57546
const SAVEPOINT = 57547
const RELEASE = 57548
const WORK = 57549
const BIT = 57550
const TINYINT = 57551
const SMALLINT = 57552
const MEDIUMINT = 57553
const INT = 57554
const INTEGER = 57555
const BIGINT = 57556
const INTNUM = 57557
const REAL = 57558
const DOUBLE = 57559
const FLOAT_TYPE = 57560
const DECIMAL = 57561
const NUMERIC = 57562
const TIME = 57563
const TIMESTAMP = 57564
const DATETIME = 57565
const YEAR = 57566
const CHAR = 57567
const VARCHAR = 57568
const BOOL = 57569
const CHARACTER = 57570
const VARBINARY = 57571
const NCHAR = 57572
const TEXT = 57573
const TINYTEXT = 57574
const MEDIUMTEXT = 57575
const LONGTEXT = 57576
const BLOB = 57577
const TINYBLOB = 57578
const MEDIUMBLOB = 57579
const LONGBLOB = 57580
const JSON = 57581
const ENUM = 57582
const GEOMETRY = 57583
const POINT = 57584
const LINESTRING = 57585
const POLYGON = 57586
const GEOMETRYCOLLECTION = 57587
const MULTIPOINT = 57588
const MULTILINESTRING = 57589
const MULTIPOLYGON = 57590
const NULLX = 57591
const AUTO_INCREMENT = 57592
const APPROXNUM = 57593
const SIGNED = 57594
const UNSIGNED = 57595
const ZEROFILL = 57596
const COLLATION = 57597
const DATABASES = 57598
const SCHEMAS = 57599
const TABLES = 57600
const VITESS_METADATA = 57601
const VSCHEMA = 57602
const FULL = 57603
const PROCESSLIST = 57604
const COLUMNS = 57605
const FIELDS = 57606
const ENGINES = 57607
const PLUGINS = 57608
const EXTENDED = 57609
const KEYSPACES = 57610
const VITESS_KEYSPACES = 57611
const VITESS_SHARDS = 57612
const VITESS_TABLETS = 57613
const CODE = 57614
const PRIVILEGES = 57615
const FUNCTION = 57616
const NAMES = 57617
const CHARSET = 57618
const GLOBAL = 57619
const SESSION = 57620
const ISOLATION = 57621
const LEVEL = 57622
const READ = 57623
const WRITE = 57624
const ONLY = 57625
const REPEATABLE = 57626
const COMMITTED = 57627
const UNCOMMITTED = 57628
const SERIALIZABLE = 57629
const CURRENT_TIMESTAMP = 57630
const DATABASE = 57631
const CURRENT_DATE = 57632
const CURRENT_TIME = 57633
const LOCALTIME = 57634
const LOCALTIMESTAMP = 57635
const CURRENT_USER = 57636
const UTC_DATE = 57637
const UTC_TIME = 57638
const UTC_TIMESTAMP = 57639
const REPLACE = 57640
const CONVERT = 57641
const CAST = 57642
const SUBSTR = 57643
const SUBSTRING = 57644
const GROUP_CONCAT = 57645
const SEPARATOR = 57646
const TIMESTAMPADD = 57647
const TIMESTAMPDIFF = 57648
const MATCH = 57649
const AGAINST = 57650
const BOOLEAN = 57651
const LANGUAGE = 57652
const WITH = 57653
const QUERY = 57654
const EXPANSION = 57655
const WITHOUT = 57656
const VALIDATION = 57657
const UNUSED = 57658
const ARRAY = 57659
const CUME_DIST = 57660
const DESCRIPTION = 57661
const DENSE_RANK = 57662
const EMPTY = 57663
const EXCEPT = 57664
const FIRST_VALUE = 57665
const GROUPING = 57666
const GROUPS = 57667
const JSON_TABLE = 57668
const LAG = 57669
const LAST_VALUE = 57670
const LATERAL = 57671
const LEAD = 57672
const MEMBER = 57673
const NTH_VALUE = 57674
const NTILE = 57675
const OF = 57676
const OVER = 57677
const PERCENT_RANK = 57678
const RANK = 57679
const RECURSIVE = 57680
const ROW_NUMBER = 57681
const SYSTEM = 57682
const WINDOW = 57683
const ACTIVE = 57684
const ADMIN = 57685
const BUCKETS = 57686
const CLONE = 57687
const COMPONENT = 57688
const DEFINITION = 57689
const ENFORCED = 57690
const EXCLUDE = 57691
const FOLLOWING = 57692
const GEOMCOLLECTION = 57693
const GET_MASTER_PUBLIC_KEY = 57694
const HISTOGRAM = 57695
const HISTORY = 57696
const INACTIVE = 57697
const INVISIBLE = 57698
const LOCKED = 57699
const MASTER_COMPRESSION_ALGORITHMS = 57700
const MASTER_PUBLIC_KEY_PATH = 57701
const MASTER_TLS_CIPHERSUITES = 57702
const MASTER_ZSTD_COMPRESSION_LEVEL = 57703
const NESTED = 57704
const NETWORK_NAMESPACE = 57705
const NOWAIT = 57706
const NULLS = 57707
const OJ = 57708
const OLD = 57709
const OPTIONAL = 57710
const ORDINALITY = 57711
const ORGANIZATION = 57712
const OTHERS = 57713
const PATH = 57714
const PERSIST = 57715
const PERSIST_ONLY = 57716
const PRECEDING = 57717
const PRIVILEGE_CHECKS_USER = 57718
const PROCESS = 57719
const RANDOM = 57720
const REFERENCE = 57721
const REQUIRE_ROW_FORMAT = 57722
const RESOURCE = 57723
const RESPECT = 57724
const RESTART = 57725
const RETAIN = 57726
const REUSE = 57727
const ROLE = 57728
const SECONDARY = 57729
const SECONDARY_ENGINE = 57730
const SECONDARY_LOAD = 57731
const SECONDARY_UNLOAD = 57732
const SKIP = 57733
const SRID = 57734
const THREAD_PRIORITY = 57735
const TIES = 57736
const UNBOUNDED = 57737
const VCPU = 57738
const VISIBLE = 57739
const FORMAT = 57740
const TREE = 57741
const VITESS = 57742
const TRADITIONAL = 57743
const LOCAL = 57744
const LOW_PRIORITY = 57745

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	162, 852,
	-2, 87,
	-1, 43,
	141, 111,
	245, 111,
	-2, 105,
	-1, 44,
	245, 111,
	-2, 281,
	-1, 51,
	34, 399,
	162, 399,
	174, 399,
	202, 413,
	203, 413,
	-2, 401,
	-1, 56,
	164, 423,
	-2, 421,
	-1, 80,
	55, 466,
	-2, 474,
	-1, 104,
	141, 111,
	245, 111,
	-2, 106,
	-1, 112,
	167, 231,
	168, 231,
	-2, 275,
	-1, 478,
	148, 863,
	-2, 859,
	-1, 479,
	148, 864,
	-2, 860,
	-1, 496,
	55, 467,
	-2, 479,
	-1, 497,
	55, 468,
	-2, 480,
	-1, 517,
	116, 1164,
	-2, 80,
	-1, 518,
	116, 1062,
	-2, 81,
	-1, 523,
	116, 1017,
	-2, 823,
	-1, 525,
	116, 1105,
	-2, 825,
	-1, 686,
	173, 36,
	178, 36,
	-2, 242,
	-1, 725,
	141, 111,
	245, 111,
	-2, 319,
	-1, 1013,
	173, 37,
	178, 37,
	-2, 243,
	-1, 1143,
	148, 866,
	-2, 862,
	-1, 1233,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1615,
	5, 720,
	18, 720,
	20, 720,
	32, 720,
	82, 720,
	-2, 505,
	-1, 1823,
	45, 794,
	-2, 792,
}

const yyPrivate = 57344

const yyLast = 20777

var yyAct = [...]int{
	478, 1901, 1888, 1665, 1823, 1515, 1533, 1864, 1438, 1772,
	1749, 422, 1255, 79, 3, 1406, 1595, 1596, 1425, 451,
	1592, 437, 779, 1180, 893, 1439, 996, 1289, 1519, 420,
	1496, 1254, 842, 1251, 1497, 886, 1294, 738, 1607, 489,
	1580, 1553, 1137, 1366, 1011, 1489, 1296, 134, 1130, 1072,
	146, 930, 391, 146, 697, 1219, 77, 1058, 403, 1230,
	146, 777, 661, 1320, 923, 896, 1212, 891, 1182, 914,
	660, 916, 522, 1107, 913, 1163, 424, 498, 880, 483,
	31, 667, 687, 1018, 1285, 1274, 1297, 1195, 403, 664,
	1019, 403, 146, 403, 683, 684, 413, 668, 929, 903,
	927, 1235, 920, 75, 1075, 105, 133, 106, 410, 1093,
	519, 74, 107, 111, 1874, 80, 855, 1177, 1178, 135,
	136, 137, 1404, 1820, 8, 856, 7, 6, 1641, 1774,
	146, 1734, 146, 718, 717, 1907, 1861, 1900, 1842, 146,
	1890, 731, 1666, 1301, 146, 1860, 1841, 1570, 504, 508,
	82, 83, 84, 85, 86, 87, 484, 117, 76, 452,
	32, 1695, 676, 931, 1299, 932, 135, 136, 137, 33,
	411, 412, 68, 37, 38, 682, 1469, 1511, 382, 1468,
	712, 1510, 1470, 1622, 1623, 1245, 1405, 383, 516, 1246,
	1247, 463, 32, 469, 470, 467, 468, 380, 466, 465,
	464, 97, 1621, 694, 1007, 748, 482, 746, 471, 472,
	678, 481, 677, 1481, 709, 757, 758, 714, 108, 775,
	125, 102, 139, 140, 141, 1268, 1727, 1535, 1844, 680,
	1275, 377, 759, 882, 1032, 485, 760, 757, 758, 1179,
	389, 963, 1298, 67, 766, 702, 768, 102, 129, 1686,
	131, 135, 136, 137, 1684, 401, 102, 94, 1520, 124,
	1092, 405, 1140, 98, 113, 399, 99, 100, 1321, 1094,
	1095, 1096, 1507, 1650, 1308, 1895, 1309, 1310, 765, 767,
	1651, 368, 1306, 144, 999, 1047, 752, 753, 121, 122,
	120, 119, 749, 406, 747, 773, 774, 1536, 1538, 750,
	751, 754, 726, 1345, 1537, 1044, 1213, 1046, 370, 371,
	372, 1746, 387, 388, 394, 1908, 1886, 665, 384, 386,
	395, 373, 374, 397, 396, 666, 376, 375, 1875, 369,
	379, 392, 665, 679, 1048, 665, 689, 690, 1789, 663,
	114, 123, 126, 1045, 112, 730, 115, 116, 510, 1017,
	1016, 673, 951, 1539, 1337, 1905, 1052, 780, 703, 1506,
	1579, 1578, 1577, 719, 132, 720, 674, 101, 146, 771,
	367, 1191, 728, 696, 763, 138, 1344, 734, 1827, 1343,
	1716, 716, 1620, 761, 764, 1640, 1430, 696, 1385, 762,
	696, 1374, 403, 101, 1331, 964, 1330, 1241, 1300, 827,
	828, 907, 101, 1840, 1382, 1509, 403, 403, 741, 742,
	743, 744, 745, 1275, 696, 840, 735, 1252, 1663, 1407,
	1409, 786, 808, 809, 810, 811, 812, 805, 776, 1845,
	815, 729, 815, 1465, 104, 977, 980, 981, 982, 983,
	984, 985, 1089, 986, 987, 988, 989, 990, 965, 966,
	967, 968, 949, 950, 978, 393, 952, 90, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 969, 970,
	971, 972, 973, 974, 975, 976, 1790, 1788, 69, 795,
	724, 1856, 146, 1810, 804, 803, 813, 814, 806, 807,
	808, 809, 810, 811, 812, 805, 825, 770, 815, 884,
	1903, 91, 1802, 1904, 118, 1902, 695, 403, 883, 772,
	146, 755, 146, 146, 1408, 403, 127, 698, 1329, 128,
	695, 403, 715, 695, 1166, 827, 828, 1073, 805, 710,
	689, 815, 789, 843, 787, 788, 979, 519, 740, 711,
	1605, 827, 828, 1307, 135, 136, 137, 695, 1000, 1076,
	792, 778, 1554, 881, 689, 692, 693, 933, 665, 721,
	790, 722, 686, 690, 723, 1572, 795, 32, 725, 1164,
	1164, 912, 1392, 732, 733, 1002, 897, 707, 824, 826,
	706, 858, 860, 862, 864, 866, 868, 869, 1479, 878,
	859, 861, 1114, 865, 867, 1556, 870, 1830, 1102, 1104,
	1105, 736, 885, 1632, 492, 900, 1112, 1113, 1111, 839,
	1103, 1891, 1193, 844, 845, 846, 847, 848, 849, 850,
	851, 672, 854, 857, 857, 857, 863, 857, 857, 863,
	857, 871, 872, 873, 874, 875, 876, 877, 1892, 1265,
	1733, 1074, 1196, 1197, 1381, 32, 1558, 1732, 1562, 739,
	1557, 1266, 1555, 1909, 793, 794, 792, 1560, 1646, 1380,
	146, 1493, 1574, 1077, 992, 1494, 1559, 1379, 1492, 1304,
	1881, 918, 795, 146, 1192, 1003, 1004, 794, 792, 1561,
	1563, 1359, 1360, 1361, 1582, 1811, 403, 1013, 793, 794,
	792, 793, 794, 792, 795, 1022, 685, 1882, 793, 794,
	792, 1894, 403, 1893, 928, 67, 795, 1883, 1653, 795,
	1034, 1026, 1029, 1872, 146, 1042, 795, 1110, 675, 1910,
	1033, 403, 793, 794, 792, 146, 793, 794, 792, 1854,
	146, 1762, 1583, 146, 1057, 1006, 146, 1730, 1704, 1021,
	795, 1584, 1502, 911, 795, 1490, 922, 1356, 146, 1062,
	146, 1655, 1876, 793, 794, 792, 1010, 493, 895, 135,
	136, 137, 403, 403, 146, 403, 403, 146, 403, 403,
	991, 795, 1030, 1655, 1838, 1061, 1795, 1020, 509, 135,
	136, 137, 1043, 1800, 1064, 76, 1066, 1794, 1068, 1069,
	1070, 1071, 514, 1012, 117, 1008, 1744, 806, 807, 808,
	809, 810, 811, 812, 805, 1505, 1078, 815, 1060, 1655,
	1834, 699, 700, 701, 1655, 1828, 1131, 1263, 1108, 1593,
	708, 1655, 493, 1079, 1080, 1133, 1082, 1083, 1604, 1085,
	1086, 678, 1053, 677, 135, 136, 137, 1604, 1132, 403,
	804, 803, 813, 814, 806, 807, 808, 809, 810, 811,
	812, 805, 1703, 493, 815, 1714, 493, 1134, 1135, 1459,
	1152, 1155, 493, 1141, 511, 512, 1165, 1236, 1147, 1655,
	1659, 1426, 403, 403, 1087, 1109, 1711, 135, 136, 137,
	778, 1514, 1835, 146, 1638, 1637, 791, 440, 439, 442,
	443, 444, 445, 941, 1801, 403, 441, 446, 1142, 1367,
	1634, 1635, 146, 1634, 1633, 403, 1001, 843, 78, 146,
	1655, 146, 33, 1143, 1204, 493, 1426, 1171, 1172, 146,
	146, 778, 778, 1186, 778, 778, 403, 778, 778, 403,
	1141, 33, 1231, 1198, 135, 136, 137, 1433, 1472, 1216,
	403, 403, 135, 136, 137, 1144, 1316, 1041, 519, 995,
	1522, 519, 1517, 1518, 1216, 493, 791, 493, 1049, 1434,
	995, 994, 1256, 922, 1215, 1210, 1056, 940, 939, 1205,
	33, 1636, 1216, 1204, 1269, 1206, 1270, 1271, 1272, 1273,
	1143, 1065, 1237, 1067, 1604, 1735, 67, 486, 1473, 1237,
	1244, 1397, 1281, 1282, 1283, 1284, 403, 1081, 1396, 1204,
	1084, 1236, 1194, 1262, 1208, 67, 67, 1315, 1175, 1051,
	403, 1259, 925, 681, 1216, 403, 1751, 1779, 1291, 1022,
	1037, 1022, 1234, 1239, 1743, 1243, 1242, 1722, 997, 1290,
	403, 694, 1736, 1737, 1738, 1261, 1260, 1336, 1204, 1652,
	1276, 1277, 1278, 1238, 67, 146, 146, 146, 146, 146,
	1238, 1240, 146, 146, 1324, 1286, 146, 403, 1236, 1280,
	1314, 67, 1279, 1327, 1014, 1328, 993, 1038, 1039, 1040,
	1739, 92, 1287, 1288, 146, 146, 146, 1499, 1232, 671,
	1319, 1292, 1608, 1609, 1303, 1534, 1334, 1752, 146, 1301,
	1313, 146, 403, 1302, 1333, 1322, 1323, 1498, 1897, 1614,
	1332, 1326, 1292, 1023, 1889, 1627, 1611, 1148, 1149, 493,
	1350, 1154, 1157, 1158, 1740, 1741, 1354, 417, 1349, 479,
	803, 813, 814, 806, 807, 808, 809, 810, 811, 812,
	805, 1108, 1593, 815, 1613, 1207, 1170, 1447, 1512, 1173,
	1174, 1499, 1211, 1698, 1214, 1450, 1090, 1024, 1025, 1055,
	1451, 506, 1446, 1233, 804, 803, 813, 814, 806, 807,
	808, 809, 810, 811, 812, 805, 1448, 1878, 815, 147,
	1859, 1449, 147, 1585, 1415, 894, 146, 404, 1452, 147,
	1225, 1226, 1715, 1424, 146, 1362, 1423, 1376, 1109, 804,
	803, 813, 814, 806, 807, 808, 809, 810, 811, 812,
	805, 1850, 1847, 815, 1880, 1863, 146, 404, 1865, 1871,
	404, 147, 404, 1870, 1824, 414, 778, 146, 146, 146,
	146, 146, 1412, 96, 1375, 484, 1435, 1440, 1822, 146,
	1431, 1413, 1050, 146, 1419, 480, 146, 146, 1391, 1414,
	146, 146, 146, 1503, 705, 1160, 1457, 881, 704, 147,
	1498, 147, 1411, 1471, 1403, 403, 887, 1485, 147, 1161,
	1335, 1031, 1418, 147, 1005, 1428, 938, 1474, 888, 130,
	1427, 737, 142, 1526, 1525, 1478, 108, 1256, 1338, 1339,
	1340, 1341, 1342, 1453, 1429, 1346, 1347, 1442, 1443, 1348,
	1445, 1441, 1832, 1831, 1444, 1460, 1466, 1777, 1325, 1462,
	1458, 1373, 403, 1036, 485, 1463, 1035, 1015, 1484, 1353,
	1486, 1487, 1488, 1709, 1060, 1513, 1196, 1197, 403, 1189,
	1311, 1355, 1476, 1054, 1357, 403, 1491, 1022, 1796, 1229,
	1523, 487, 488, 1521, 490, 1131, 1131, 1885, 1532, 1884,
	1868, 1410, 1500, 1851, 1221, 1224, 1225, 1226, 1222, 403,
	1223, 1227, 1422, 1501, 1527, 1708, 1482, 1483, 1317, 491,
	1421, 78, 1529, 1707, 1588, 918, 1145, 1146, 1426, 1899,
	1898, 1524, 1436, 1437, 1386, 403, 918, 918, 918, 918,
	918, 1131, 1383, 1530, 1531, 908, 901, 1899, 1825, 1142,
	1728, 1190, 1232, 486, 76, 918, 1528, 1550, 81, 918,
	1551, 1371, 1372, 1541, 1143, 1542, 73, 1543, 1, 1187,
	1540, 403, 1552, 378, 1571, 1176, 1549, 879, 390, 1887,
	1667, 146, 1389, 1565, 1748, 1312, 1495, 1295, 688, 1564,
	1253, 403, 89, 658, 88, 691, 769, 403, 403, 1318,
	1787, 1480, 1594, 1267, 1726, 1440, 1662, 1626, 1477, 1829,
	946, 944, 945, 1550, 1597, 943, 948, 1603, 947, 942,
	146, 1091, 1221, 1224, 1225, 1226, 1222, 400, 1223, 1227,
	1461, 1591, 1608, 1609, 403, 1228, 403, 1616, 1602, 1618,
	934, 1619, 902, 1612, 713, 1639, 1631, 147, 1625, 1264,
	1088, 385, 756, 381, 823, 1420, 1256, 1467, 1256, 520,
	513, 1742, 1599, 95, 1647, 1624, 1869, 146, 778, 1848,
	1846, 404, 1821, 146, 1773, 1849, 1629, 1630, 403, 1617,
	1819, 1879, 1862, 1188, 890, 404, 404, 1706, 1643, 1587,
	1390, 1642, 1657, 852, 1162, 1668, 403, 403, 403, 917,
	146, 423, 1101, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 1644, 1645, 438, 1660, 1661, 435, 1658,
	436, 499, 1199, 1432, 797, 1664, 421, 415, 796, 499,
	909, 1220, 1218, 1217, 921, 500, 1610, 1606, 915, 1673,
	1674, 1679, 1680, 500, 1681, 1203, 1682, 1683, 1656, 1685,
	1508, 1677, 998, 1305, 1598, 1649, 32, 670, 898, 899,
	502, 147, 501, 495, 414, 93, 496, 497, 502, 1159,
	501, 1809, 1694, 853, 494, 1710, 1440, 59, 36, 918,
	407, 1873, 1855, 782, 503, 403, 404, 30, 1718, 147,
	1719, 147, 147, 29, 404, 28, 1725, 1474, 23, 22,
	404, 1724, 889, 892, 21, 20, 19, 1256, 25, 18,
	17, 16, 103, 46, 1586, 43, 403, 41, 1369, 109,
	110, 44, 1370, 40, 727, 27, 26, 403, 15, 1705,
	14, 13, 12, 1377, 1378, 11, 10, 9, 5, 1384,
	4, 1755, 1387, 1388, 785, 24, 841, 2, 0, 1750,
	1394, 0, 1395, 0, 0, 1398, 1399, 1400, 1401, 1402,
	403, 403, 403, 146, 403, 1765, 1767, 1768, 0, 0,
	0, 0, 0, 1753, 0, 403, 0, 403, 1747, 1729,
	0, 1731, 0, 403, 0, 0, 1769, 1780, 1785, 1778,
	1693, 1597, 1782, 0, 1761, 1597, 0, 1699, 1700, 1701,
	1648, 1776, 0, 0, 403, 0, 1654, 146, 1799, 1797,
	1791, 0, 403, 146, 0, 1455, 1456, 1803, 1784, 0,
	0, 0, 0, 1792, 1786, 1793, 1754, 0, 0, 0,
	0, 0, 0, 1672, 0, 0, 0, 0, 0, 147,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	1771, 0, 147, 0, 0, 0, 1826, 0, 0, 1597,
	0, 0, 403, 403, 0, 404, 0, 0, 0, 0,
	1833, 0, 1836, 0, 0, 1837, 0, 0, 0, 0,
	0, 404, 0, 0, 1750, 1256, 0, 0, 403, 1843,
	0, 0, 0, 147, 1852, 0, 403, 1440, 0, 0,
	404, 1857, 0, 0, 147, 1858, 0, 0, 0, 147,
	0, 1867, 147, 1866, 0, 147, 1697, 0, 0, 0,
	0, 0, 1877, 0, 0, 0, 0, 147, 0, 147,
	0, 1598, 0, 32, 0, 1598, 0, 0, 0, 0,
	0, 404, 404, 147, 404, 404, 147, 404, 404, 0,
	1896, 0, 1063, 0, 0, 0, 1547, 1548, 0, 0,
	0, 1906, 804, 803, 813, 814, 806, 807, 808, 809,
	810, 811, 812, 805, 0, 1106, 815, 0, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 0, 0, 0, 0, 0, 0, 1598,
	0, 0, 1544, 1097, 1098, 1099, 1100, 108, 0, 125,
	0, 0, 0, 0, 0, 0, 32, 0, 404, 0,
	0, 1600, 804, 803, 813, 814, 806, 807, 808, 809,
	810, 811, 812, 805, 0, 1167, 815, 0, 0, 0,
	1798, 0, 1615, 0, 0, 1692, 1804, 0, 124, 0,
	0, 404, 404, 113, 0, 0, 0, 0, 1150, 1151,
	0, 0, 147, 813, 814, 806, 807, 808, 809, 810,
	811, 812, 805, 0, 404, 815, 0, 121, 122, 120,
	119, 147, 0, 0, 404, 0, 0, 0, 147, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 147, 147,
	0, 0, 0, 0, 0, 404, 0, 0, 404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 404,
	404, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	123, 126, 0, 112, 1676, 115, 116, 0, 1678, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 0, 1687,
	1688, 0, 804, 803, 813, 814, 806, 807, 808, 809,
	810, 811, 812, 805, 0, 1702, 815, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 1712, 1713, 0, 0, 1717, 0, 404,
	0, 450, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1293, 0, 0, 0, 404,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 147, 147, 147, 147, 0,
	0, 147, 147, 0, 0, 147, 404, 0, 0, 0,
	0, 145, 0, 0, 398, 0, 0, 0, 0, 0,
	0, 145, 0, 147, 147, 147, 0, 1691, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 0,
	147, 404, 0, 0, 507, 507, 0, 0, 0, 0,
	0, 0, 0, 145, 1766, 0, 0, 0, 0, 0,
	1363, 1364, 1365, 118, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 0, 128, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 0, 145, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 1805, 1806, 1807, 1808, 0, 1812, 0, 1813, 1814,
	1815, 0, 1816, 1817, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 147, 804, 803, 813, 814, 806, 807,
	808, 809, 810, 811, 812, 805, 1393, 0, 815, 0,
	0, 0, 0, 0, 0, 147, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 147, 147, 147, 147,
	147, 0, 0, 0, 1416, 1417, 892, 0, 147, 0,
	0, 0, 147, 0, 0, 147, 147, 0, 0, 147,
	147, 147, 1690, 0, 0, 0, 0, 0, 0, 0,
	449, 0, 0, 0, 404, 1368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 33, 34,
	35, 68, 37, 38, 0, 804, 803, 813, 814, 806,
	807, 808, 809, 810, 811, 812, 805, 0, 72, 815,
	1689, 0, 0, 39, 65, 66, 0, 63, 0, 0,
	0, 404, 0, 64, 0, 0, 0, 0, 402, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	0, 0, 52, 0, 0, 0, 0, 0, 521, 0,
	0, 662, 67, 669, 0, 0, 0, 0, 404, 804,
	803, 813, 814, 806, 807, 808, 809, 810, 811, 812,
	805, 0, 0, 815, 0, 1545, 1546, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 145,
	1566, 1567, 0, 1568, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1576, 0, 804, 803, 813,
	814, 806, 807, 808, 809, 810, 811, 812, 805, 0,
	404, 815, 0, 42, 45, 48, 47, 50, 0, 62,
	147, 0, 0, 0, 1573, 0, 0, 0, 0, 0,
	404, 0, 0, 0, 0, 0, 404, 404, 0, 0,
	0, 0, 0, 0, 51, 71, 70, 0, 0, 60,
	61, 49, 0, 0, 0, 0, 0, 0, 1589, 147,
	804, 803, 813, 814, 806, 807, 808, 809, 810, 811,
	812, 805, 0, 404, 815, 404, 1628, 0, 0, 53,
	54, 0, 55, 56, 57, 58, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 507, 0, 0,
	0, 0, 147, 0, 0, 0, 0, 404, 0, 0,
	0, 145, 0, 145, 924, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 404, 404, 799, 147,
	802, 0, 1675, 0, 0, 0, 816, 817, 818, 819,
	820, 821, 822, 0, 800, 801, 798, 804, 803, 813,
	814, 806, 807, 808, 809, 810, 811, 812, 805, 0,
	0, 815, 0, 0, 0, 0, 0, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1696, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 0, 0, 0, 0,
	414, 0, 0, 0, 0, 0, 0, 1720, 0, 0,
	1721, 0, 521, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 404, 781, 783, 0, 0,
	0, 0, 0, 0, 0, 0, 404, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 145, 0, 0, 1756, 1757, 1758,
	1759, 1760, 0, 0, 0, 1763, 1764, 0, 0, 404,
	404, 404, 147, 404, 0, 0, 0, 0, 0, 0,
	0, 1028, 1028, 0, 404, 0, 404, 0, 0, 0,
	1028, 0, 404, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 0, 0, 1775,
	414, 145, 0, 404, 145, 0, 147, 1059, 0, 0,
	0, 404, 147, 0, 0, 0, 0, 905, 0, 145,
	0, 145, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 935, 0, 0, 0, 145, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 404, 404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 1059, 0, 0, 0, 507, 507, 0, 0,
	507, 507, 507, 0, 0, 0, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 507, 507, 507, 507,
	0, 0, 0, 0, 1184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 145, 0, 0, 0, 0, 0, 1059,
	145, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	145, 145, 0, 0, 0, 0, 662, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1027, 1027, 662, 0, 0, 0, 0, 0, 0, 1027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 521, 0, 521, 521, 0, 521, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 145, 145, 145,
	145, 0, 0, 145, 145, 0, 0, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1351, 1352, 145, 0, 1136,
	0, 521, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 145, 0, 0, 1027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1168, 1169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1200, 0, 0, 0, 0,
	507, 507, 0, 0, 0, 905, 0, 0, 521, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 507, 0, 0, 0, 0, 521, 0, 0, 521,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 0,
	521, 662, 0, 0, 0, 1184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 507, 145, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1028, 145, 145,
	145, 145, 145, 0, 0, 0, 0, 0, 0, 0,
	1454, 0, 0, 0, 145, 0, 669, 145, 145, 0,
	0, 145, 1464, 1059, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 1358, 1059, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1028, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 145, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	0, 0, 1028, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 145, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 0, 1027, 0, 0, 1516, 0, 0, 0, 0,
	0, 0, 521, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1581, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 0, 0, 1027, 0, 0, 1601, 1581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 521, 0, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 145, 0,
	0, 0, 0, 0, 145, 0, 0, 0, 662, 0,
	0, 1027, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1669, 1670, 1671, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1027, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 521, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 1516, 1516, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1781, 0, 1783, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1516, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 521, 521, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 1853, 0,
	0, 0, 0, 642, 629, 0, 1516, 581, 645, 552,
	570, 654, 572, 575, 613, 533, 594, 263, 567, 0,
	556, 529, 563, 530, 554, 583, 189, 587, 551, 631,
	597, 644, 226, 0, 557, 275, 615, 306, 177, 234,
	232, 328, 195, 191, 188, 176, 212, 239, 274, 323,
	268, 651, 229, 604, 0, 315, 248, 0, 0, 0,
	585, 634, 592, 625, 580, 614, 541, 603, 646, 568,
	611, 647, 217, 175, 153, 260, 316, 197, 0, 0,
	0, 135, 136, 137, 0, 1257, 1258, 0, 0, 0,
	0, 0, 171, 0, 608, 641, 565, 610, 186, 215,
	190, 185, 326, 612, 657, 528, 605, 0, 531, 534,
	653, 637, 560, 561, 1475, 0, 0, 0, 0, 0,
	0, 584, 593, 622, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 602, 0, 0, 0, 537,
	532, 0, 0, 0, 0, 582, 0, 0, 0, 540,
	0, 559, 623, 0, 526, 203, 535, 249, 627, 636,
	579, 353, 640, 577, 576, 643, 618, 538, 633, 571,
	225, 536, 222, 149, 162, 0, 569, 259, 293, 297,
	632, 555, 564, 178, 562, 295, 272, 341, 601, 276,
	294, 230, 330, 287, 340, 354, 355, 184, 253, 347,
	324, 351, 363, 163, 181, 266, 320, 344, 312, 247,
	327, 221, 311, 202, 152, 155, 322, 338, 172, 305,
	0, 0, 0, 157, 336, 319, 245, 218, 219, 156,
	0, 291, 187, 200, 180, 262, 333, 334, 179, 365,
	164, 350, 159, 165, 349, 255, 329, 337, 246, 238,
	158, 335, 244, 237, 224, 194, 208, 285, 233, 286,
	209, 251, 250, 252, 0, 154, 0, 317, 345, 366,
	169, 550, 628, 325, 359, 362, 0, 288, 170, 201,
	193, 284, 199, 227, 358, 360, 361, 168, 282, 206,
	254, 166, 211, 313, 223, 231, 620, 656, 271, 296,
	173, 343, 314, 545, 549, 543, 544, 595, 596, 546,
	648, 649, 650, 624, 539, 0, 547, 548, 0, 630,
	638, 639, 600, 148, 160, 228, 652, 289, 198, 364,
	348, 346, 527, 542, 183, 553, 0, 0, 566, 573,
	574, 586, 588, 589, 590, 591, 599, 606, 607, 609,
	616, 617, 619, 621, 626, 635, 655, 150, 151, 161,
	167, 174, 182, 192, 196, 204, 207, 210, 213, 214,
	216, 220, 236, 240, 241, 242, 243, 256, 257, 258,
	261, 264, 265, 267, 269, 270, 273, 277, 278, 279,
	280, 281, 283, 290, 292, 298, 299, 300, 301, 302,
	303, 304, 307, 308, 309, 310, 318, 321, 331, 332,
	342, 352, 356, 205, 339, 357, 0, 235, 598, 642,
	629, 0, 0, 581, 645, 552, 570, 654, 572, 575,
	613, 533, 594, 263, 567, 0, 556, 529, 563, 530,
	554, 583, 189, 587, 551, 631, 597, 644, 226, 0,
	557, 275, 615, 306, 177, 234, 232, 328, 195, 191,
	188, 176, 212, 239, 274, 323, 268, 651, 229, 604,
	0, 315, 248, 0, 0, 0, 585, 634, 592, 625,
	580, 614, 541, 603, 646, 568, 611, 647, 217, 175,
	153, 260, 316, 197, 0, 0, 0, 135, 136, 137,
	0, 1257, 1258, 0, 0, 0, 0, 0, 171, 0,
	608, 641, 565, 610, 186, 215, 190, 185, 326, 612,
	657, 528, 605, 0, 531, 534, 653, 637, 560, 561,
	0, 0, 0, 0, 0, 0, 0, 584, 593, 622,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 602, 0, 0, 0, 537, 532, 0, 0, 0,
	0, 582, 0, 0, 0, 540, 0, 559, 623, 0,
	526, 203, 535, 249, 627, 636, 579, 353, 640, 577,
	576, 643, 618, 538, 633, 571, 225, 536, 222, 149,
	162, 0, 569, 259, 293, 297, 632, 555, 564, 178,
	562, 295, 272, 341, 601, 276, 294, 230, 330, 287,
	340, 354, 355, 184, 253, 347, 324, 351, 363, 163,
	181, 266, 320, 344, 312, 247, 327, 221, 311, 202,
	152, 155, 322, 338, 172, 305, 0, 0, 0, 157,
	336, 319, 245, 218, 219, 156, 0, 291, 187, 200,
	180, 262, 333, 334, 179, 365, 164, 350, 159, 165,
	349, 255, 329, 337, 246, 238, 158, 335, 244, 237,
	224, 194, 208, 285, 233, 286, 209, 251, 250, 252,
	0, 154, 0, 317, 345, 366, 169, 550, 628, 325,
	359, 362, 0, 288, 170, 201, 193, 284, 199, 227,
	358, 360, 361, 168, 282, 206, 254, 166, 211, 313,
	223, 231, 620, 656, 271, 296, 173, 343, 314, 545,
	549, 543, 544, 595, 596, 546, 648, 649, 650, 624,
	539, 0, 547, 548, 0, 630, 638, 639, 600, 148,
	160, 228, 652, 289, 198, 364, 348, 346, 527, 542,
	183, 553, 0, 0, 566, 573, 574, 586, 588, 589,
	590, 591, 599, 606, 607, 609, 616, 617, 619, 621,
	626, 635, 655, 150, 151, 161, 167, 174, 182, 192,
	196, 204, 207, 210, 213, 214, 216, 220, 236, 240,
	241, 242, 243, 256, 257, 258, 261, 264, 265, 267,
	269, 270, 273, 277, 278, 279, 280, 281, 283, 290,
	292, 298, 299, 300, 301, 302, 303, 304, 307, 308,
	309, 310, 318, 321, 331, 332, 342, 352, 356, 205,
	339, 357, 0, 235, 598, 642, 629, 0, 0, 581,
	645, 552, 570, 654, 572, 575, 613, 533, 594, 263,
	567, 0, 556, 529, 563, 530, 554, 583, 189, 587,
	551, 631, 597, 644, 226, 0, 557, 275, 615, 306,
	177, 234, 232, 328, 195, 191, 188, 176, 212, 239,
	274, 323, 268, 651, 229, 604, 0, 315, 248, 0,
	0, 0, 585, 634, 592, 625, 580, 614, 541, 603,
	646, 568, 611, 647, 217, 175, 153, 260, 316, 197,
	0, 0, 0, 135, 136, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 608, 641, 565, 610,
	186, 215, 190, 185, 326, 612, 657, 528, 605, 0,
	531, 534, 653, 637, 560, 561, 0, 0, 0, 0,
	0, 0, 0, 584, 593, 622, 578, 0, 0, 0,
	0, 0, 0, 1590, 0, 558, 0, 602, 0, 0,
	0, 537, 532, 0, 0, 0, 0, 582, 0, 0,
	0, 540, 0, 559, 623, 0, 526, 203, 535, 249,
	627, 636, 579, 353, 640, 577, 576, 643, 618, 538,
	633, 571, 225, 536, 222, 149, 162, 0, 569, 259,
	293, 297, 632, 555, 564, 178, 562, 295, 272, 341,
	601, 276, 294, 230, 330, 287, 340, 354, 355, 184,
	253, 347, 324, 351, 363, 163, 181, 266, 320, 344,
	312, 247, 327, 221, 311, 202, 152, 155, 322, 338,
	172, 305, 0, 0, 0, 157, 336, 319, 245, 218,
	219, 156, 0, 291, 187, 200, 180, 262, 333, 334,
	179, 365, 164, 350, 159, 165, 349, 255, 329, 337,
	246, 238, 158, 335, 244, 237, 224, 194, 208, 285,
	233, 286, 209, 251, 250, 252, 0, 154, 0, 317,
	345, 366, 169, 550, 628, 325, 359, 362, 0, 288,
	170, 201, 193, 284, 199, 227, 358, 360, 361, 168,
	282, 206, 254, 166, 211, 313, 223, 231, 620, 656,
	271, 296, 173, 343, 314, 545, 549, 543, 544, 595,
	596, 546, 648, 649, 650, 624, 539, 0, 547, 548,
	0, 630, 638, 639, 600, 148, 160, 228, 652, 289,
	198, 364, 348, 346, 527, 542, 183, 553, 0, 0,
	566, 573, 574, 586, 588, 589, 590, 591, 599, 606,
	607, 609, 616, 617, 619, 621, 626, 635, 655, 150,
	151, 161, 167, 174, 182, 192, 196, 204, 207, 210,
	213, 214, 216, 220, 236, 240, 241, 242, 243, 256,
	257, 258, 261, 264, 265, 267, 269, 270, 273, 277,
	278, 279, 280, 281, 283, 290, 292, 298, 299, 300,
	301, 302, 303, 304, 307, 308, 309, 310, 318, 321,
	331, 332, 342, 352, 356, 205, 339, 357, 0, 235,
	598, 642, 629, 0, 0, 581, 645, 552, 570, 654,
	572, 575, 613, 533, 594, 263, 567, 0, 556, 529,
	563, 530, 554, 583, 189, 587, 551, 631, 597, 644,
	226, 0, 557, 275, 615, 306, 177, 234, 232, 328,
	195, 191, 188, 176, 212, 239, 274, 323, 268, 651,
	229, 604, 0, 315, 248, 0, 0, 0, 585, 634,
	592, 625, 580, 614, 541, 603, 646, 568, 611, 647,
	217, 175, 153, 260, 316, 197, 67, 0, 0, 135,
	136, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 608, 641, 565, 610, 186, 215, 190, 185,
	326, 612, 657, 528, 605, 0, 531, 534, 653, 637,
	560, 561, 0, 0, 0, 0, 0, 0, 0, 584,
	593, 622, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 602, 0, 0, 0, 537, 532, 0,
	0, 0, 0, 582, 0, 0, 0, 540, 0, 559,
	623, 0, 526, 203, 535, 249, 627, 636, 579, 353,
	640, 577, 576, 643, 618, 538, 633, 571, 225, 536,
	222, 149, 162, 0, 569, 259, 293, 297, 632, 555,
	564, 178, 562, 295, 272, 341, 601, 276, 294, 230,
	330, 287, 340, 354, 355, 184, 253, 347, 324, 351,
	363, 163, 181, 266, 320, 344, 312, 247, 327, 221,
	311, 202, 152, 155, 322, 338, 172, 305, 0, 0,
	0, 157, 336, 319, 245, 218, 219, 156, 0, 291,
	187, 200, 180, 262, 333, 334, 179, 365, 164, 350,
	159, 165, 349, 255, 329, 337, 246, 238, 158, 335,
	244, 237, 224, 194, 208, 285, 233, 286, 209, 251,
	250, 252, 0, 154, 0, 317, 345, 366, 169, 550,
	628, 325, 359, 362, 0, 288, 170, 201, 193, 284,
	199, 227, 358, 360, 361, 168, 282, 206, 254, 166,
	211, 313, 223, 231, 620, 656, 271, 296, 173, 343,
	314, 545, 549, 543, 544, 595, 596, 546, 648, 649,
	650, 624, 539, 0, 547, 548, 0, 630, 638, 639,
	600, 148, 160, 228, 652, 289, 198, 364, 348, 346,
	527, 542, 183, 553, 0, 0, 566, 573, 574, 586,
	588, 589, 590, 591, 599, 606, 607, 609, 616, 617,
	619, 621, 626, 635, 655, 150, 151, 161, 167, 174,
	182, 192, 196, 204, 207, 210, 213, 214, 216, 220,
	236, 240, 241, 242, 243, 256, 257, 258, 261, 264,
	265, 267, 269, 270, 273, 277, 278, 279, 280, 281,
	283, 290, 292, 298, 299, 300, 301, 302, 303, 304,
	307, 308, 309, 310, 318, 321, 331, 332, 342, 352,
	356, 205, 339, 357, 0, 235, 598, 642, 629, 0,
	0, 581, 645, 552, 570, 654, 572, 575, 613, 533,
	594, 263, 567, 0, 556, 529, 563, 530, 554, 583,
	189, 587, 551, 631, 597, 644, 226, 0, 557, 275,
	615, 306, 177, 234, 232, 328, 195, 191, 188, 176,
	212, 239, 274, 323, 268, 651, 229, 604, 0, 315,
	248, 0, 0, 0, 585, 634, 592, 625, 580, 614,
	541, 603, 646, 568, 611, 647, 217, 175, 153, 260,
	316, 197, 0, 0, 0, 135, 136, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 608, 641,
	565, 610, 186, 215, 190, 185, 326, 612, 657, 528,
	605, 0, 531, 534, 653, 637, 560, 561, 0, 0,
	0, 0, 0, 0, 0, 584, 593, 622, 578, 0,
	0, 0, 0, 0, 0, 1465, 0, 558, 0, 602,
	0, 0, 0, 537, 532, 0, 0, 0, 0, 582,
	0, 0, 0, 540, 0, 559, 623, 0, 526, 203,
	535, 249, 627, 636, 579, 353, 640, 577, 576, 643,
	618, 538, 633, 571, 225, 536, 222, 149, 162, 0,
	569, 259, 293, 297, 632, 555, 564, 178, 562, 295,
	272, 341, 601, 276, 294, 230, 330, 287, 340, 354,
	355, 184, 253, 347, 324, 351, 363, 163, 181, 266,
	320, 344, 312, 247, 327, 221, 311, 202, 152, 155,
	322, 338, 172, 305, 0, 0, 0, 157, 336, 319,
	245, 218, 219, 156, 0, 291, 187, 200, 180, 262,
	333, 334, 179, 365, 164, 350, 159, 165, 349, 255,
	329, 337, 246, 238, 158, 335, 244, 237, 224, 194,
	208, 285, 233, 286, 209, 251, 250, 252, 0, 154,
	0, 317, 345, 366, 169, 550, 628, 325, 359, 362,
	0, 288, 170, 201, 193, 284, 199, 227, 358, 360,
	361, 168, 282, 206, 254, 166, 211, 313, 223, 231,
	620, 656, 271, 296, 173, 343, 314, 545, 549, 543,
	544, 595, 596, 546, 648, 649, 650, 624, 539, 0,
	547, 548, 0, 630, 638, 639, 600, 148, 160, 228,
	652, 289, 198, 364, 348, 346, 527, 542, 183, 553,
	0, 0, 566, 573, 574, 586, 588, 589, 590, 591,
	599, 606, 607, 609, 616, 617, 619, 621, 626, 635,
	655, 150, 151, 161, 167, 174, 182, 192, 196, 204,
	207, 210, 213, 214, 216, 220, 236, 240, 241, 242,
	243, 256, 257, 258, 261, 264, 265, 267, 269, 270,
	273, 277, 278, 279, 280, 281, 283, 290, 292, 298,
	299, 300, 301, 302, 303, 304, 307, 308, 309, 310,
	318, 321, 331, 332, 342, 352, 356, 205, 339, 357,
	0, 235, 598, 642, 629, 0, 0, 581, 645, 552,
	570, 654, 572, 575, 613, 533, 594, 263, 567, 0,
	556, 529, 563, 530, 554, 583, 189, 587, 551, 631,
	597, 644, 226, 0, 557, 275, 615, 306, 177, 234,
	232, 328, 195, 191, 188, 176, 212, 239, 274, 323,
	268, 651, 229, 604, 0, 315, 248, 0, 0, 0,
	585, 634, 592, 625, 580, 614, 541, 603, 646, 568,
	611, 647, 217, 175, 153, 260, 316, 197, 0, 0,
	0, 135, 136, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 608, 641, 565, 610, 186, 215,
	190, 185, 326, 612, 657, 528, 605, 0, 531, 534,
	653, 637, 560, 561, 0, 0, 0, 0, 0, 0,
	0, 584, 593, 622, 578, 0, 0, 0, 0, 0,
	0, 1209, 0, 558, 0, 602, 0, 0, 0, 537,
	532, 0, 0, 0, 0, 582, 0, 0, 0, 540,
	0, 559, 623, 0, 526, 203, 535, 249, 627, 636,
	579, 353, 640, 577, 576, 643, 618, 538, 633, 571,
	225, 536, 222, 149, 162, 0, 569, 259, 293, 297,
	632, 555, 564, 178, 562, 295, 272, 341, 601, 276,
	294, 230, 330, 287, 340, 354, 355, 184, 253, 347,
	324, 351, 363, 163, 181, 266, 320, 344, 312, 247,
	327, 221, 311, 202, 152, 155, 322, 338, 172, 305,
	0, 0, 0, 157, 336, 319, 245, 218, 219, 156,
	0, 291, 187, 200, 180, 262, 333, 334, 179, 365,
	164, 350, 159, 165, 349, 255, 329, 337, 246, 238,
	158, 335, 244, 237, 224, 194, 208, 285, 233, 286,
	209, 251, 250, 252, 0, 154, 0, 317, 345, 366,
	169, 550, 628, 325, 359, 362, 0, 288, 170, 201,
	193, 284, 199, 227, 358, 360, 361, 168, 282, 206,
	254, 166, 211, 313, 223, 231, 620, 656, 271, 296,
	173, 343, 314, 545, 549, 543, 544, 595, 596, 546,
	648, 649, 650, 624, 539, 0, 547, 548, 0, 630,
	638, 639, 600, 148, 160, 228, 652, 289, 198, 364,
	348, 346, 527, 542, 183, 553, 0, 0, 566, 573,
	574, 586, 588, 589, 590, 591, 599, 606, 607, 609,
	616, 617, 619, 621, 626, 635, 655, 150, 151, 161,
	167, 174, 182, 192, 196, 204, 207, 210, 213, 214,
	216, 220, 236, 240, 241, 242, 243, 256, 257, 258,
	261, 264, 265, 267, 269, 270, 273, 277, 278, 279,
	280, 281, 283, 290, 292, 298, 299, 300, 301, 302,
	303, 304, 307, 308, 309, 310, 318, 321, 331, 332,
	342, 352, 356, 205, 339, 357, 0, 235, 598, 642,
	629, 0, 0, 581, 645, 552, 570, 654, 572, 575,
	613, 533, 594, 263, 567, 0, 556, 529, 563, 530,
	554, 583, 189, 587, 551, 631, 597, 644, 226, 0,
	557, 275, 615, 306, 177, 234, 232, 328, 195, 191,
	188, 176, 212, 239, 274, 323, 268, 651, 229, 604,
	0, 315, 248, 0, 0, 0, 585, 634, 592, 625,
	580, 614, 541, 603, 646, 568, 611, 647, 217, 175,
	153, 260, 316, 197, 0, 0, 0, 135, 136, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	608, 641, 565, 610, 186, 215, 190, 185, 326, 612,
	657, 528, 605, 0, 531, 534, 653, 637, 560, 561,
	0, 0, 0, 0, 0, 0, 0, 584, 593, 622,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	0, 602, 0, 0, 0, 537, 532, 0, 0, 0,
	0, 582, 0, 0, 0, 540, 0, 559, 623, 0,
	526, 203, 535, 249, 627, 636, 579, 353, 640, 577,
	576, 643, 618, 538, 633, 571, 225, 536, 222, 149,
	162, 0, 569, 259, 293, 297, 632, 555, 564, 178,
	562, 295, 272, 341, 601, 276, 294, 230, 330, 287,
	340, 354, 355, 184, 253, 347, 324, 351, 363, 163,
	181, 266, 320, 344, 312, 247, 327, 221, 311, 202,
	152, 155, 322, 338, 172, 305, 0, 0, 0, 157,
	336, 319, 245, 218, 219, 156, 0, 291, 187, 200,
	180, 262, 333, 334, 179, 365, 164, 350, 159, 165,
	349, 255, 329, 337, 246, 238, 158, 335, 244, 237,
	224, 194, 208, 285, 233, 286, 209, 251, 250, 252,
	0, 154, 0, 317, 345, 366, 169, 550, 628, 325,
	359, 362, 0, 288, 170, 201, 193, 284, 199, 227,
	358, 360, 361, 168, 282, 206, 254, 166, 211, 313,
	223, 231, 620, 656, 271, 296, 173, 343, 314, 545,
	549, 543, 544, 595, 596, 546, 648, 649, 650, 624,
	539, 0, 547, 548, 0, 630, 638, 639, 600, 148,
	160, 228, 652, 289, 198, 364, 348, 346, 527, 542,
	183, 553, 0, 0, 566, 573, 574, 586, 588, 589,
	590, 591, 599, 606, 607, 609, 616, 617, 619, 621,
	626, 635, 655, 150, 151, 161, 167, 174, 182, 192,
	196, 204, 207, 210, 213, 214, 216, 220, 236, 240,
	241, 242, 243, 256, 257, 258, 261, 264, 265, 267,
	269, 270, 273, 277, 278, 279, 280, 281, 283, 290,
	292, 298, 299, 300, 301, 302, 303, 304, 307, 308,
	309, 310, 318, 321, 331, 332, 342, 352, 356, 205,
	339, 357, 0, 235, 598, 642, 629, 0, 0, 581,
	645, 552, 570, 654, 572, 575, 613, 533, 594, 263,
	567, 0, 556, 529, 563, 530, 554, 583, 189, 587,
	551, 631, 597, 644, 226, 0, 557, 275, 615, 306,
	177, 234, 232, 328, 195, 191, 188, 176, 212, 239,
	274, 323, 268, 651, 229, 604, 0, 315, 248, 0,
	0, 0, 585, 634, 592, 625, 580, 614, 541, 603,
	646, 568, 611, 647, 217, 175, 153, 260, 316, 197,
	0, 0, 0, 135, 136, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 608, 641, 565, 610,
	186, 215, 190, 185, 326, 612, 657, 528, 605, 0,
	531, 534, 653, 637, 560, 561, 0, 0, 0, 0,
	0, 0, 0, 584, 593, 622, 578, 0, 0, 0,
	0, 0, 0, 0, 0, 558, 0, 602, 0, 0,
	0, 537, 532, 0, 0, 0, 0, 582, 0, 0,
	0, 540, 0, 559, 623, 0, 526, 203, 535, 249,
	627, 636, 579, 353, 640, 577, 576, 643, 618, 538,
	633, 571, 225, 536, 222, 149, 162, 0, 569, 259,
	293, 297, 632, 555, 564, 178, 562, 295, 272, 341,
	601, 276, 294, 230, 330, 287, 340, 354, 355, 184,
	253, 347, 324, 351, 363, 163, 181, 266, 320, 344,
	312, 247, 327, 221, 311, 202, 152, 155, 322, 338,
	172, 305, 0, 0, 0, 157, 336, 319, 245, 218,
	219, 156, 0, 291, 187, 200, 180, 262, 333, 334,
	179, 365, 164, 350, 159, 524, 349, 255, 329, 337,
	246, 238, 158, 335, 244, 237, 224, 194, 208, 285,
	233, 286, 209, 251, 250, 252, 0, 154, 0, 317,
	345, 366, 169, 550, 628, 325, 359, 362, 0, 288,
	170, 201, 193, 284, 199, 227, 358, 360, 361, 168,
	282, 206, 525, 523, 518, 517, 223, 231, 620, 656,
	271, 296, 173, 343, 314, 545, 549, 543, 544, 595,
	596, 546, 648, 649, 650, 624, 539, 0, 547, 548,
	0, 630, 638, 639, 600, 148, 160, 228, 652, 289,
	198, 364, 348, 346, 527, 542, 183, 553, 0, 0,
	566, 573, 574, 586, 588, 589, 590, 591, 599, 606,
	607, 609, 616, 617, 619, 621, 626, 635, 655, 150,
	151, 161, 167, 174, 182, 192, 196, 204, 207, 210,
	213, 214, 216, 220, 236, 240, 241, 242, 243, 256,
	257, 258, 261, 264, 265, 267, 269, 270, 273, 277,
	278, 279, 280, 281, 283, 290, 292, 298, 299, 300,
	301, 302, 303, 304, 307, 308, 309, 310, 318, 321,
	331, 332, 342, 352, 356, 205, 339, 357, 0, 235,
	598, 642, 629, 0, 0, 581, 645, 552, 570, 654,
	572, 575, 613, 533, 594, 263, 567, 0, 556, 529,
	563, 530, 554, 583, 189, 587, 551, 631, 597, 644,
	226, 0, 557, 275, 615, 306, 177, 234, 232, 328,
	195, 191, 188, 176, 212, 239, 274, 323, 268, 651,
	229, 604, 0, 315, 248, 0, 0, 0, 585, 634,
	592, 625, 580, 614, 541, 603, 646, 568, 611, 647,
	217, 175, 153, 260, 316, 197, 0, 0, 0, 135,
	136, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 608, 641, 565, 610, 186, 215, 190, 185,
	326, 612, 657, 528, 605, 0, 531, 534, 653, 637,
	560, 561, 0, 0, 0, 0, 0, 0, 0, 584,
	593, 622, 578, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 602, 0, 0, 0, 537, 532, 0,
	0, 0, 0, 582, 0, 0, 0, 540, 0, 559,
	623, 0, 526, 203, 535, 249, 627, 636, 579, 353,
	640, 577, 576, 643, 618, 538, 633, 571, 225, 536,
	222, 149, 162, 0, 569, 259, 293, 297, 632, 555,
	564, 178, 562, 295, 272, 341, 601, 276, 294, 230,
	330, 287, 340, 354, 355, 184, 253, 347, 324, 351,
	363, 163, 181, 266, 320, 344, 312, 247, 327, 221,
	311, 202, 152, 155, 322, 926, 172, 305, 0, 0,
	0, 157, 336, 319, 245, 218, 219, 156, 0, 291,
	187, 200, 180, 262, 333, 334, 179, 365, 164, 350,
	159, 524, 349, 255, 329, 337, 246, 238, 158, 335,
	244, 237, 224, 194, 208, 285, 233, 286, 209, 251,
	250, 252, 0, 154, 0, 317, 345, 366, 169, 550,
	628, 325, 359, 362, 0, 288, 170, 201, 193, 284,
	199, 227, 358, 360, 361, 168, 282, 206, 525, 523,
	518, 517, 223, 231, 620, 656, 271, 296, 173, 343,
	314, 545, 549, 543, 544, 595, 596, 546, 648, 649,
	650, 624, 539, 0, 547, 548, 0, 630, 638, 639,
	600, 148, 160, 228, 652, 289, 198, 364, 348, 346,
	527, 542, 183, 553, 0, 0, 566, 573, 574, 586,
	588, 589, 590, 591, 599, 606, 607, 609, 616, 617,
	619, 621, 626, 635, 655, 150, 151, 161, 167, 174,
	182, 192, 196, 204, 207, 210, 213, 214, 216, 220,
	236, 240, 241, 242, 243, 256, 257, 258, 261, 264,
	265, 267, 269, 270, 273, 277, 278, 279, 280, 281,
	283, 290, 292, 298, 299, 300, 301, 302, 303, 304,
	307, 308, 309, 310, 318, 321, 331, 332, 342, 352,
	356, 205, 339, 357, 0, 235, 598, 642, 629, 0,
	0, 581, 645, 552, 570, 654, 572, 575, 613, 533,
	594, 263, 567, 0, 556, 529, 563, 530, 554, 583,
	189, 587, 551, 631, 597, 644, 226, 0, 557, 275,
	615, 306, 177, 234, 232, 328, 195, 191, 188, 176,
	212, 239, 274, 323, 268, 651, 229, 604, 0, 315,
	248, 0, 0, 0, 585, 634, 592, 625, 580, 614,
	541, 603, 646, 568, 611, 647, 217, 175, 153, 260,
	316, 197, 0, 0, 0, 135, 136, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 608, 641,
	565, 610, 186, 215, 190, 185, 326, 612, 657, 528,
	605, 0, 531, 534, 653, 637, 560, 561, 0, 0,
	0, 0, 0, 0, 0, 584, 593, 622, 578, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 0, 602,
	0, 0, 0, 537, 532, 0, 0, 0, 0, 582,
	0, 0, 0, 540, 0, 559, 623, 0, 526, 203,
	535, 249, 627, 636, 579, 353, 640, 577, 576, 643,
	618, 538, 633, 571, 225, 536, 222, 149, 162, 0,
	569, 259, 293, 297, 632, 555, 564, 178, 562, 295,
	272, 341, 601, 276, 294, 230, 330, 287, 340, 354,
	355, 184, 253, 347, 324, 351, 363, 163, 181, 266,
	320, 344, 312, 247, 327, 221, 311, 202, 152, 155,
	322, 515, 172, 305, 0, 0, 0, 157, 336, 319,
	245, 218, 219, 156, 0, 291, 187, 200, 180, 262,
	333, 334, 179, 365, 164, 350, 159, 524, 349, 255,
	329, 337, 246, 238, 158, 335, 244, 237, 224, 194,
	208, 285, 233, 286, 209, 251, 250, 252, 0, 154,
	0, 317, 345, 366, 169, 550, 628, 325, 359, 362,
	0, 288, 170, 201, 193, 284, 199, 227, 358, 360,
	361, 168, 282, 206, 525, 523, 518, 517, 223, 231,
	620, 656, 271, 296, 173, 343, 314, 545, 549, 543,
	544, 595, 596, 546, 648, 649, 650, 624, 539, 0,
	547, 548, 0, 630, 638, 639, 600, 148, 160, 228,
	652, 289, 198, 364, 348, 346, 527, 542, 183, 553,
	0, 0, 566, 573, 574, 586, 588, 589, 590, 591,
	599, 606, 607, 609, 616, 617, 619, 621, 626, 635,
	655, 150, 151, 161, 167, 174, 182, 192, 196, 204,
	207, 210, 213, 214, 216, 220, 236, 240, 241, 242,
	243, 256, 257, 258, 261, 264, 265, 267, 269, 270,
	273, 277, 278, 279, 280, 281, 283, 290, 292, 298,
	299, 300, 301, 302, 303, 304, 307, 308, 309, 310,
	318, 321, 331, 332, 342, 352, 356, 205, 339, 357,
	263, 235, 598, 1138, 0, 419, 0, 0, 0, 189,
	0, 418, 0, 0, 0, 226, 0, 1139, 275, 0,
	306, 177, 234, 232, 328, 195, 191, 188, 176, 212,
	239, 274, 323, 268, 462, 229, 0, 0, 315, 248,
	0, 0, 0, 0, 0, 453, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 175, 153, 260, 316,
	197, 67, 0, 0, 135, 136, 137, 440, 439, 442,
	443, 444, 445, 0, 0, 171, 441, 446, 447, 448,
	0, 186, 215, 190, 185, 326, 0, 0, 0, 416,
	433, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 430, 431, 505, 0, 0, 0, 476, 0,
	432, 0, 0, 425, 426, 428, 427, 429, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	249, 475, 0, 0, 353, 0, 0, 473, 0, 0,
	0, 0, 0, 225, 0, 222, 149, 162, 0, 0,
	259, 293, 297, 0, 0, 0, 178, 0, 295, 272,
	341, 0, 276, 294, 230, 330, 287, 340, 354, 355,
	184, 253, 347, 324, 351, 363, 163, 181, 266, 320,
	344, 312, 247, 327, 221, 311, 202, 152, 155, 322,
	338, 172, 305, 0, 0, 0, 157, 336, 319, 245,
	218, 219, 156, 0, 291, 187, 200, 180, 262, 333,
	334, 179, 365, 164, 350, 159, 165, 349, 255, 329,
	337, 246, 238, 158, 335, 244, 237, 224, 194, 208,
	285, 233, 286, 209, 251, 250, 252, 0, 154, 0,
	317, 345, 366, 169, 0, 0, 325, 359, 362, 0,
	288, 170, 201, 193, 284, 199, 227, 358, 360, 361,
	168, 282, 206, 254, 166, 211, 313, 223, 231, 0,
	0, 271, 296, 173, 343, 314, 463, 474, 469, 470,
	467, 468, 0, 466, 465, 464, 477, 455, 456, 457,
	458, 460, 0, 471, 472, 459, 148, 160, 228, 0,
	289, 198, 364, 348, 346, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 151, 161, 167, 174, 182, 192, 196, 204, 207,
	210, 213, 214, 216, 220, 236, 240, 241, 242, 243,
	256, 257, 258, 261, 264, 265, 267, 269, 270, 273,
	277, 278, 279, 280, 281, 283, 290, 292, 298, 299,
	300, 301, 302, 303, 304, 307, 308, 309, 310, 318,
	321, 331, 332, 342, 352, 356, 205, 339, 357, 263,
	235, 0, 0, 0, 419, 0, 0, 0, 189, 0,
	418, 0, 0, 0, 226, 0, 0, 275, 0, 306,
	177, 234, 232, 328, 195, 191, 188, 176, 212, 239,
	274, 323, 268, 462, 229, 0, 0, 315, 248, 0,
	0, 0, 0, 0, 453, 454, 0, 0, 0, 0,
	0, 0, 1248, 0, 217, 175, 153, 260, 316, 197,
	67, 0, 0, 135, 136, 137, 440, 439, 442, 443,
	444, 445, 0, 0, 171, 441, 446, 447, 448, 1249,
	186, 215, 190, 185, 326, 0, 0, 0, 416, 433,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 430, 431, 0, 0, 0, 0, 476, 0, 432,
	0, 0, 425, 426, 428, 427, 429, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 249,
	475, 0, 0, 353, 0, 0, 473, 0, 0, 0,
	0, 0, 225, 0, 222, 149, 162, 0, 0, 259,
	293, 297, 0, 0, 0, 178, 0, 295, 272, 341,
	0, 276, 294, 230, 330, 287, 340, 354, 355, 184,
	253, 347, 324, 351, 363, 163, 181, 266, 320, 344,
	312, 247, 327, 221, 311, 202, 152, 155, 322, 338,
	172, 305, 0, 0, 0, 157, 336, 319, 245, 218,
	219, 156, 0, 291, 187, 200, 180, 262, 333, 334,
	179, 365, 164, 350, 159, 165, 349, 255, 329, 337,
	246, 238, 158, 335, 244, 237, 224, 194, 208, 285,
	233, 286, 209, 251, 250, 252, 0, 154, 0, 317,
	345, 366, 169, 0, 0, 325, 359, 362, 0, 288,
	170, 201, 193, 284, 199, 227, 358, 360, 361, 168,
	282, 206, 254, 166, 211, 313, 223, 231, 0, 0,
	271, 296, 173, 343, 314, 463, 474, 469, 470, 467,
	468, 0, 466, 465, 464, 477, 455, 456, 457, 458,
	460, 0, 471, 472, 459, 148, 160, 228, 0, 289,
	198, 364, 348, 346, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	151, 161, 167, 174, 182, 192, 196, 204, 207, 210,
	213, 214, 216, 220, 236, 240, 241, 242, 243, 256,
	257, 258, 261, 264, 265, 267, 269, 270, 273, 277,
	278, 279, 280, 281, 283, 290, 292, 298, 299, 300,
	301, 302, 303, 304, 307, 308, 309, 310, 318, 321,
	331, 332, 342, 352, 356, 205, 339, 357, 263, 235,
	0, 0, 0, 419, 0, 0, 0, 189, 0, 418,
	0, 0, 0, 226, 0, 0, 275, 0, 306, 177,
	234, 232, 328, 195, 191, 188, 176, 212, 239, 274,
	323, 268, 462, 229, 0, 0, 315, 248, 0, 0,
	0, 0, 0, 453, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 175, 153, 260, 316, 197, 67,
	0, 493, 135, 136, 137, 440, 439, 442, 443, 444,
	445, 0, 0, 171, 441, 446, 447, 448, 0, 186,
	215, 190, 185, 326, 0, 0, 0, 416, 433, 0,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	430, 431, 0, 0, 0, 0, 476, 0, 432, 0,
	0, 425, 426, 428, 427, 429, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 249, 475,
	0, 0, 353, 0, 0, 473, 0, 0, 0, 0,
	0, 225, 0, 222, 149, 162, 0, 0, 259, 293,
	297, 0, 0, 0, 178, 0, 295, 272, 341, 0,
	276, 294, 230, 330, 287, 340, 354, 355, 184, 253,
	347, 324, 351, 363, 163, 181, 266, 320, 344, 312,
	247, 327, 221, 311, 202, 152, 155, 322, 338, 172,
	305, 0, 0, 0, 157, 336, 319, 245, 218, 219,
	156, 0, 291, 187, 200, 180, 262, 333, 334, 179,
	365, 164, 350, 159, 165, 349, 255, 329, 337, 246,
	238, 158, 335, 244, 237, 224, 194, 208, 285, 233,
	286, 209, 251, 250, 252, 0, 154, 0, 317, 345,
	366, 169, 0, 0, 325, 359, 362, 0, 288, 170,
	201, 193, 284, 199, 227, 358, 360, 361, 168, 282,
	206, 254, 166, 211, 313, 223, 231, 0, 0, 271,
	296, 173, 343, 314, 463, 474, 469, 470, 467, 468,
	0, 466, 465, 464, 477, 455, 456, 457, 458, 460,
	0, 471, 472, 459, 148, 160, 228, 0, 289, 198,
	364, 348, 346, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 151,
	161, 167, 174, 182, 192, 196, 204, 207, 210, 213,
	214, 216, 220, 236, 240, 241, 242, 243, 256, 257,
	258, 261, 264, 265, 267, 269, 270, 273, 277, 278,
	279, 280, 281, 283, 290, 292, 298, 299, 300, 301,
	302, 303, 304, 307, 308, 309, 310, 318, 321, 331,
	332, 342, 352, 356, 205, 339, 357, 263, 235, 0,
	0, 0, 419, 0, 0, 0, 189, 0, 418, 0,
	0, 0, 226, 0, 0, 275, 0, 306, 177, 234,
	232, 328, 195, 191, 188, 176, 212, 239, 274, 323,
	268, 462, 229, 0, 0, 315, 248, 0, 0, 0,
	0, 0, 453, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 175, 153, 260, 316, 197, 67, 0,
	0, 135, 136, 137, 440, 439, 442, 443, 444, 445,
	0, 0, 171, 441, 446, 447, 448, 0, 186, 215,
	190, 185, 326, 0, 0, 0, 416, 433, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 505, 0, 0, 0, 476, 0, 432, 0, 0,
	425, 426, 428, 427, 429, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 249, 475, 0,
	0, 353, 0, 0, 473, 0, 0, 0, 0, 0,
	225, 0, 222, 149, 162, 0, 0, 259, 293, 297,
	0, 0, 0, 178, 0, 295, 272, 341, 0, 276,
	294, 230, 330, 287, 340, 354, 355, 184, 253, 347,
	324, 351, 363, 163, 181, 266, 320, 344, 312, 247,
	327, 221, 311, 202, 152, 155, 322, 338, 172, 305,
	0, 0, 0, 157, 336, 319, 245, 218, 219, 156,
	0, 291, 187, 200, 180, 262, 333, 334, 179, 365,
	164, 350, 159, 165, 349, 255, 329, 337, 246, 238,
	158, 335, 244, 237, 224, 194, 208, 285, 233, 286,
	209, 251, 250, 252, 0, 154, 0, 317, 345, 366,
	169, 0, 0, 325, 359, 362, 0, 288, 170, 201,
	193, 284, 199, 227, 358, 360, 361, 168, 282, 206,
	254, 166, 211, 313, 223, 231, 0, 0, 271, 296,
	173, 343, 314, 463, 474, 469, 470, 467, 468, 0,
	466, 465, 464, 477, 455, 456, 457, 458, 460, 0,
	471, 472, 459, 148, 160, 228, 0, 289, 198, 364,
	348, 346, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 151, 161,
	167, 174, 182, 192, 196, 204, 207, 210, 213, 214,
	216, 220, 236, 240, 241, 242, 243, 256, 257, 258,
	261, 264, 265, 267, 269, 270, 273, 277, 278, 279,
	280, 281, 283, 290, 292, 298, 299, 300, 301, 302,
	303, 304, 307, 308, 309, 310, 318, 321, 331, 332,
	342, 352, 356, 205, 339, 357, 263, 235, 0, 0,
	0, 419, 0, 0, 0, 189, 0, 418, 0, 0,
	0, 226, 0, 0, 275, 0, 306, 177, 234, 232,
	328, 195, 191, 188, 176, 212, 239, 274, 323, 268,
	462, 229, 0, 0, 315, 248, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 175, 153, 260, 316, 197, 67, 0, 0,
	135, 136, 137, 440, 1156, 442, 443, 444, 445, 0,
	0, 171, 441, 446, 447, 448, 0, 186, 215, 190,
	185, 326, 0, 0, 0, 416, 433, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	505, 0, 0, 0, 476, 0, 432, 0, 0, 425,
	426, 428, 427, 429, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 249, 475, 0, 0,
	353, 0, 0, 473, 0, 0, 0, 0, 0, 225,
	0, 222, 149, 162, 0, 0, 259, 293, 297, 0,
	0, 0, 178, 0, 295, 272, 341, 0, 276, 294,
	230, 330, 287, 340, 354, 355, 184, 253, 347, 324,
	351, 363, 163, 181, 266, 320, 344, 312, 247, 327,
	221, 311, 202, 152, 155, 322, 338, 172, 305, 0,
	0, 0, 157, 336, 319, 245, 218, 219, 156, 0,
	291, 187, 200, 180, 262, 333, 334, 179, 365, 164,
	350, 159, 165, 349, 255, 329, 337, 246, 238, 158,
	335, 244, 237, 224, 194, 208, 285, 233, 286, 209,
	251, 250, 252, 0, 154, 0, 317, 345, 366, 169,
	0, 0, 325, 359, 362, 0, 288, 170, 201, 193,
	284, 199, 227, 358, 360, 361, 168, 282, 206, 254,
	166, 211, 313, 223, 231, 0, 0, 271, 296, 173,
	343, 314, 463, 474, 469, 470, 467, 468, 0, 466,
	465, 464, 477, 455, 456, 457, 458, 460, 0, 471,
	472, 459, 148, 160, 228, 0, 289, 198, 364, 348,
	346, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 151, 161, 167,
	174, 182, 192, 196, 204, 207, 210, 213, 214, 216,
	220, 236, 240, 241, 242, 243, 256, 257, 258, 261,
	264, 265, 267, 269, 270, 273, 277, 278, 279, 280,
	281, 283, 290, 292, 298, 299, 300, 301, 302, 303,
	304, 307, 308, 309, 310, 318, 321, 331, 332, 342,
	352, 356, 205, 339, 357, 263, 235, 0, 0, 0,
	419, 0, 0, 0, 189, 0, 418, 0, 0, 0,
	226, 0, 0, 275, 0, 306, 177, 234, 232, 328,
	195, 191, 188, 176, 212, 239, 274, 323, 268, 462,
	229, 0, 0, 315, 248, 0, 0, 0, 0, 0,
	453, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 175, 153, 260, 316, 197, 67, 0, 0, 135,
	136, 137, 440, 1153, 442, 443, 444, 445, 0, 0,
	171, 441, 446, 447, 448, 0, 186, 215, 190, 185,
	326, 0, 0, 0, 416, 433, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 505,
	0, 0, 0, 476, 0, 432, 0, 0, 425, 426,
	428, 427, 429, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 249, 475, 0, 0, 353,
	0, 0, 473, 0, 0, 0, 0, 0, 225, 0,
	222, 149, 162, 0, 0, 259, 293, 297, 0, 0,
	0, 178, 0, 295, 272, 341, 0, 276, 294, 230,
	330, 287, 340, 354, 355, 184, 253, 347, 324, 351,
	363, 163, 181, 266, 320, 344, 312, 247, 327, 221,
	311, 202, 152, 155, 322, 338, 172, 305, 0, 0,
	0, 157, 336, 319, 245, 218, 219, 156, 0, 291,
	187, 200, 180, 262, 333, 334, 179, 365, 164, 350,
	159, 165, 349, 255, 329, 337, 246, 238, 158, 335,
	244, 237, 224, 194, 208, 285, 233, 286, 209, 251,
	250, 252, 0, 154, 0, 317, 345, 366, 169, 0,
	0, 325, 359, 362, 0, 288, 170, 201, 193, 284,
	199, 227, 358, 360, 361, 168, 282, 206, 254, 166,
	211, 313, 223, 231, 0, 0, 271, 296, 173, 343,
	314, 463, 474, 469, 470, 467, 468, 0, 466, 465,
	464, 477, 455, 456, 457, 458, 460, 0, 471, 472,
	459, 148, 160, 228, 0, 289, 198, 364, 348, 346,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 151, 161, 167, 174,
	182, 192, 196, 204, 207, 210, 213, 214, 216, 220,
	236, 240, 241, 242, 243, 256, 257, 258, 261, 264,
	265, 267, 269, 270, 273, 277, 278, 279, 280, 281,
	283, 290, 292, 298, 299, 300, 301, 302, 303, 304,
	307, 308, 309, 310, 318, 321, 331, 332, 342, 352,
	356, 205, 339, 357, 486, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	0, 0, 419, 0, 0, 0, 189, 0, 418, 0,
	0, 0, 226, 0, 0, 275, 0, 306, 177, 234,
	232, 328, 195, 191, 188, 176, 212, 239, 274, 323,
	268, 462, 229, 0, 0, 315, 248, 0, 0, 0,
	0, 0, 453, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 175, 153, 260, 316, 197, 67, 0,
	0, 135, 136, 137, 440, 439, 442, 443, 444, 445,
	0, 0, 171, 441, 446, 447, 448, 0, 186, 215,
	190, 185, 326, 0, 0, 0, 416, 433, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 430,
	431, 0, 0, 0, 0, 476, 0, 432, 0, 0,
	425, 426, 428, 427, 429, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 249, 475, 0,
	0, 353, 0, 0, 473, 0, 0, 0, 0, 0,
	225, 0, 222, 149, 162, 0, 0, 259, 293, 297,
	0, 0, 0, 178, 0, 295, 272, 341, 0, 276,
	294, 230, 330, 287, 340, 354, 355, 184, 253, 347,
	324, 351, 363, 163, 181, 266, 320, 344, 312, 247,
	327, 221, 311, 202, 152, 155, 322, 338, 172, 305,
	0, 0, 0, 157, 336, 319, 245, 218, 219, 156,
	0, 291, 187, 200, 180, 262, 333, 334, 179, 365,
	164, 350, 159, 165, 349, 255, 329, 337, 246, 238,
	158, 335, 244, 237, 224, 194, 208, 285, 233, 286,
	209, 251, 250, 252, 0, 154, 0, 317, 345, 366,
	169, 0, 0, 325, 359, 362, 0, 288, 170, 201,
	193, 284, 199, 227, 358, 360, 361, 168, 282, 206,
	254, 166, 211, 313, 223, 231, 0, 0, 271, 296,
	173, 343, 314, 463, 474, 469, 470, 467, 468, 0,
	466, 465, 464, 477, 455, 456, 457, 458, 460, 0,
	471, 472, 459, 148, 160, 228, 0, 289, 198, 364,
	348, 346, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 151, 161,
	167, 174, 182, 192, 196, 204, 207, 210, 213, 214,
	216, 220, 236, 240, 241, 242, 243, 256, 257, 258,
	261, 264, 265, 267, 269, 270, 273, 277, 278, 279,
	280, 281, 283, 290, 292, 298, 299, 300, 301, 302,
	303, 304, 307, 308, 309, 310, 318, 321, 331, 332,
	342, 352, 356, 205, 339, 357, 263, 235, 0, 0,
	0, 419, 0, 0, 0, 189, 0, 418, 0, 0,
	0, 226, 0, 0, 275, 0, 306, 177, 234, 232,
	328, 195, 191, 188, 176, 212, 239, 274, 323, 268,
	462, 229, 0, 0, 315, 248, 0, 0, 0, 0,
	0, 453, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 175, 153, 260, 316, 197, 67, 0, 0,
	135, 136, 137, 440, 439, 442, 443, 444, 445, 0,
	0, 171, 441, 446, 447, 448, 0, 186, 215, 190,
	185, 326, 0, 0, 0, 416, 433, 0, 461, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 430, 431,
	0, 0, 0, 0, 476, 0, 432, 0, 0, 425,
	426, 428, 427, 429, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 249, 475, 0, 0,
	353, 0, 0, 473, 0, 0, 0, 0, 0, 225,
	0, 222, 149, 162, 0, 0, 259, 293, 297, 0,
	0, 0, 178, 0, 295, 272, 341, 0, 276, 294,
	230, 330, 287, 340, 354, 355, 184, 253, 347, 324,
	351, 363, 163, 181, 266, 320, 344, 312, 247, 327,
	221, 311, 202, 152, 155, 322, 338, 172, 305, 0,
	0, 0, 157, 336, 319, 245, 218, 219, 156, 0,
	291, 187, 200, 180, 262, 333, 334, 179, 365, 164,
	350, 159, 165, 349, 255, 329, 337, 246, 238, 158,
	335, 244, 237, 224, 194, 208, 285, 233, 286, 209,
	251, 250, 252, 0, 154, 0, 317, 345, 366, 169,
	0, 0, 325, 359, 362, 0, 288, 170, 201, 193,
	284, 199, 227, 358, 360, 361, 168, 282, 206, 254,
	166, 211, 313, 223, 231, 0, 0, 271, 296, 173,
	343, 314, 463, 474, 469, 470, 467, 468, 0, 466,
	465, 464, 477, 455, 456, 457, 458, 460, 0, 471,
	472, 459, 148, 160, 228, 0, 289, 198, 364, 348,
	346, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 151, 161, 167,
	174, 182, 192, 196, 204, 207, 210, 213, 214, 216,
	220, 236, 240, 241, 242, 243, 256, 257, 258, 261,
	264, 265, 267, 269, 270, 273, 277, 278, 279, 280,
	281, 283, 290, 292, 298, 299, 300, 301, 302, 303,
	304, 307, 308, 309, 310, 318, 321, 331, 332, 342,
	352, 356, 205, 339, 357, 263, 235, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	226, 0, 0, 275, 0, 306, 177, 234, 232, 328,
	195, 191, 188, 176, 212, 239, 274, 323, 268, 462,
	229, 0, 0, 315, 248, 0, 0, 0, 0, 0,
	453, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 175, 153, 260, 316, 197, 67, 0, 493, 135,
	136, 137, 440, 439, 442, 443, 444, 445, 0, 0,
	171, 441, 446, 447, 448, 0, 186, 215, 190, 185,
	326, 0, 0, 0, 0, 433, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 431, 0,
	0, 0, 0, 476, 0, 432, 0, 0, 425, 426,
	428, 427, 429, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 249, 475, 0, 0, 353,
	0, 0, 473, 0, 0, 0, 0, 0, 225, 0,
	222, 149, 162, 0, 0, 259, 293, 297, 0, 0,
	0, 178, 0, 295, 272, 341, 0, 276, 294, 230,
	330, 287, 340, 354, 355, 184, 253, 347, 324, 351,
	363, 163, 181, 266, 320, 344, 312, 247, 327, 221,
	311, 202, 152, 155, 322, 338, 172, 305, 0, 0,
	0, 157, 336, 319, 245, 218, 219, 156, 0, 291,
	187, 200, 180, 262, 333, 334, 179, 365, 164, 350,
	159, 165, 349, 255, 329, 337, 246, 238, 158, 335,
	244, 237, 224, 194, 208, 285, 233, 286, 209, 251,
	250, 252, 0, 154, 0, 317, 345, 366, 169, 0,
	0, 325, 359, 362, 0, 288, 170, 201, 193, 284,
	199, 227, 358, 360, 361, 168, 282, 206, 254, 166,
	211, 313, 223, 231, 0, 0, 271, 296, 173, 343,
	314, 463, 474, 469, 470, 467, 468, 0, 466, 465,
	464, 477, 455, 456, 457, 458, 460, 0, 471, 472,
	459, 148, 160, 228, 0, 289, 198, 364, 348, 346,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 151, 161, 167, 174,
	182, 192, 196, 204, 207, 210, 213, 214, 216, 220,
	236, 240, 241, 242, 243, 256, 257, 258, 261, 264,
	265, 267, 269, 270, 273, 277, 278, 279, 280, 281,
	283, 290, 292, 298, 299, 300, 301, 302, 303, 304,
	307, 308, 309, 310, 318, 321, 331, 332, 342, 352,
	356, 205, 339, 357, 263, 235, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 226,
	0, 0, 275, 0, 306, 177, 234, 232, 328, 195,
	191, 188, 176, 212, 239, 274, 323, 268, 462, 229,
	0, 0, 315, 248, 0, 0, 0, 0, 0, 453,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	175, 153, 260, 316, 197, 67, 0, 0, 135, 136,
	137, 440, 439, 442, 443, 444, 445, 0, 0, 171,
	441, 446, 447, 448, 0, 186, 215, 190, 185, 326,
	0, 0, 0, 0, 433, 0, 461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 430, 431, 0, 0,
	0, 0, 476, 0, 432, 0, 0, 425, 426, 428,
	427, 429, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 203, 0, 249, 475, 0, 0, 353, 0,
	0, 473, 0, 0, 0, 0, 0, 225, 0, 222,
	149, 162, 0, 0, 259, 293, 297, 0, 0, 0,
	178, 0, 295, 272, 341, 0, 276, 294, 230, 330,
	287, 340, 354, 355, 184, 253, 347, 324, 351, 363,
	163, 181, 266, 320, 344, 312, 247, 327, 221, 311,
	202, 152, 155, 322, 338, 172, 305, 0, 0, 0,
	157, 336, 319, 245, 218, 219, 156, 0, 291, 187,
	200, 180, 262, 333, 334, 179, 365, 164, 350, 159,
	165, 349, 255, 329, 337, 246, 238, 158, 335, 244,
	237, 224, 194, 208, 285, 233, 286, 209, 251, 250,
	252, 0, 154, 0, 317, 345, 366, 169, 0, 0,
	325, 359, 362, 0, 288, 170, 201, 193, 284, 199,
	227, 358, 360, 361, 168, 282, 206, 254, 166, 211,
	313, 223, 231, 0, 0, 271, 296, 173, 343, 314,
	463, 474, 469, 470, 467, 468, 0, 466, 465, 464,
	477, 455, 456, 457, 458, 460, 0, 471, 472, 459,
	148, 160, 228, 0, 289, 198, 364, 348, 346, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 151, 161, 167, 174, 182,
	192, 196, 204, 207, 210, 213, 214, 216, 220, 236,
	240, 241, 242, 243, 256, 257, 258, 261, 264, 265,
	267, 269, 270, 273, 277, 278, 279, 280, 281, 283,
	290, 292, 298, 299, 300, 301, 302, 303, 304, 307,
	308, 309, 310, 318, 321, 331, 332, 342, 352, 356,
	205, 339, 357, 263, 235, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 226, 0,
	0, 275, 0, 306, 177, 234, 232, 328, 195, 191,
	188, 176, 212, 239, 274, 323, 268, 0, 229, 0,
	0, 315, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 175,
	153, 260, 316, 197, 0, 0, 0, 135, 136, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 186, 215, 190, 185, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 804, 803, 813, 814, 806, 807, 808, 809, 810,
	811, 812, 805, 0, 0, 815, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 249, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 222, 149,
	162, 0, 0, 259, 293, 297, 0, 0, 0, 178,
	0, 295, 272, 341, 0, 276, 294, 230, 330, 287,
	340, 354, 355, 184, 253, 347, 324, 351, 363, 163,
	181, 266, 320, 344, 312, 247, 327, 221, 311, 202,
	152, 155, 322, 338, 172, 305, 0, 0, 0, 157,
	336, 319, 245, 218, 219, 156, 0, 291, 187, 200,
	180, 262, 333, 334, 179, 365, 164, 350, 159, 165,
	349, 255, 329, 337, 246, 238, 158, 335, 244, 237,
	224, 194, 208, 285, 233, 286, 209, 251, 250, 252,
	0, 154, 0, 317, 345, 366, 169, 0, 0, 325,
	359, 362, 0, 288, 170, 201, 193, 284, 199, 227,
	358, 360, 361, 168, 282, 206, 254, 166, 211, 313,
	223, 231, 0, 0, 271, 296, 173, 343, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	160, 228, 0, 289, 198, 364, 348, 346, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 151, 161, 167, 174, 182, 192,
	196, 204, 207, 210, 213, 214, 216, 220, 236, 240,
	241, 242, 243, 256, 257, 258, 261, 264, 265, 267,
	269, 270, 273, 277, 278, 279, 280, 281, 283, 290,
	292, 298, 299, 300, 301, 302, 303, 304, 307, 308,
	309, 310, 318, 321, 331, 332, 342, 352, 356, 205,
	339, 357, 263, 235, 0, 0, 0, 0, 0, 0,
	0, 189, 696, 0, 0, 0, 0, 226, 0, 0,
	275, 0, 306, 177, 234, 232, 328, 195, 191, 188,
	176, 212, 239, 274, 323, 268, 0, 229, 0, 0,
	315, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 175, 153,
	260, 316, 197, 0, 0, 0, 135, 136, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 186, 215, 190, 185, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 249, 0, 0, 695, 353, 0, 0, 0,
	0, 0, 0, 692, 693, 225, 665, 222, 149, 162,
	686, 690, 259, 293, 297, 0, 0, 0, 178, 0,
	295, 272, 341, 0, 276, 294, 230, 330, 287, 340,
	354, 355, 184, 253, 347, 324, 351, 363, 163, 181,
	266, 320, 344, 312, 247, 327, 221, 311, 202, 152,
	155, 322, 338, 172, 305, 0, 0, 0, 157, 336,
	319, 245, 218, 219, 156, 0, 291, 187, 200, 180,
	262, 333, 334, 179, 365, 164, 350, 159, 165, 349,
	255, 329, 337, 246, 238, 158, 335, 244, 237, 224,
	194, 208, 285, 233, 286, 209, 251, 250, 252, 0,
	154, 0, 317, 345, 366, 169, 0, 0, 325, 359,
	362, 0, 288, 170, 201, 193, 284, 199, 227, 358,
	360, 361, 168, 282, 206, 254, 166, 211, 313, 223,
	231, 0, 0, 271, 296, 173, 343, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 160,
	228, 0, 289, 198, 364, 348, 346, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 151, 161, 167, 174, 182, 192, 196,
	204, 207, 210, 213, 214, 216, 220, 236, 240, 241,
	242, 243, 256, 257, 258, 261, 264, 265, 267, 269,
	270, 273, 277, 278, 279, 280, 281, 283, 290, 292,
	298, 299, 300, 301, 302, 303, 304, 307, 308, 309,
	310, 318, 321, 331, 332, 342, 352, 356, 205, 339,
	357, 263, 235, 0, 0, 904, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 226, 0, 0, 275,
	0, 306, 177, 234, 232, 328, 195, 191, 188, 176,
	212, 239, 274, 323, 268, 0, 229, 0, 0, 315,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 175, 153, 260,
	316, 197, 0, 0, 0, 135, 136, 137, 0, 906,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 186, 215, 190, 185, 326, 793, 794, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 249, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 222, 149, 162, 0,
	0, 259, 293, 297, 0, 0, 0, 178, 0, 295,
	272, 341, 0, 276, 294, 230, 330, 287, 340, 354,
	355, 184, 253, 347, 324, 351, 363, 163, 181, 266,
	320, 344, 312, 247, 327, 221, 311, 202, 152, 155,
	322, 338, 172, 305, 0, 0, 0, 157, 336, 319,
	245, 218, 219, 156, 0, 291, 187, 200, 180, 262,
	333, 334, 179, 365, 164, 350, 159, 165, 349, 255,
	329, 337, 246, 238, 158, 335, 244, 237, 224, 194,
	208, 285, 233, 286, 209, 251, 250, 252, 0, 154,
	0, 317, 345, 366, 169, 0, 0, 325, 359, 362,
	0, 288, 170, 201, 193, 284, 199, 227, 358, 360,
	361, 168, 282, 206, 254, 166, 211, 313, 223, 231,
	0, 0, 271, 296, 173, 343, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 160, 228,
	0, 289, 198, 364, 348, 346, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 151, 161, 167, 174, 182, 192, 196, 204,
	207, 210, 213, 214, 216, 220, 236, 240, 241, 242,
	243, 256, 257, 258, 261, 264, 265, 267, 269, 270,
	273, 277, 278, 279, 280, 281, 283, 290, 292, 298,
	299, 300, 301, 302, 303, 304, 307, 308, 309, 310,
	318, 321, 331, 332, 342, 352, 356, 205, 339, 357,
	33, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 226, 0,
	0, 275, 0, 306, 177, 234, 232, 328, 195, 191,
	188, 176, 212, 239, 274, 323, 268, 0, 229, 0,
	0, 315, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 175,
	153, 260, 316, 197, 67, 0, 493, 135, 136, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 186, 215, 190, 185, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 249, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 222, 149,
	162, 0, 0, 259, 293, 297, 0, 0, 0, 178,
	0, 295, 272, 341, 0, 276, 294, 230, 330, 287,
	340, 354, 355, 184, 253, 347, 324, 351, 363, 163,
	181, 266, 320, 344, 312, 247, 327, 221, 311, 202,
	152, 155, 322, 338, 172, 305, 0, 0, 0, 157,
	336, 319, 245, 218, 219, 156, 0, 291, 187, 200,
	180, 262, 333, 334, 179, 365, 164, 350, 159, 165,
	349, 255, 329, 337, 246, 238, 158, 335, 244, 237,
	224, 194, 208, 285, 233, 286, 209, 251, 250, 252,
	0, 154, 0, 317, 345, 366, 169, 0, 0, 325,
	359, 362, 0, 288, 170, 201, 193, 284, 199, 227,
	358, 360, 361, 168, 282, 206, 254, 166, 211, 313,
	223, 231, 0, 0, 271, 296, 173, 343, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	160, 228, 0, 289, 198, 364, 348, 346, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 151, 161, 167, 174, 182, 192,
	196, 204, 207, 210, 213, 214, 216, 220, 236, 240,
	241, 242, 243, 256, 257, 258, 261, 264, 265, 267,
	269, 270, 273, 277, 278, 279, 280, 281, 283, 290,
	292, 298, 299, 300, 301, 302, 303, 304, 307, 308,
	309, 310, 318, 321, 331, 332, 342, 352, 356, 205,
	339, 357, 263, 235, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 226, 0, 0,
	275, 0, 306, 177, 234, 232, 328, 195, 191, 188,
	176, 212, 239, 274, 323, 268, 0, 229, 0, 0,
	315, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 175, 153,
	260, 316, 197, 0, 0, 0, 135, 136, 137, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 186, 215, 190, 185, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 249, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 665, 222, 149, 162,
	663, 0, 259, 293, 297, 0, 0, 0, 178, 0,
	295, 272, 341, 0, 276, 294, 230, 330, 287, 340,
	354, 355, 184, 253, 347, 324, 351, 363, 163, 181,
	266, 320, 344, 312, 247, 327, 221, 311, 202, 152,
	155, 322, 338, 172, 305, 0, 0, 0, 157, 336,
	319, 245, 218, 219, 156, 0, 291, 187, 200, 180,
	262, 333, 334, 179, 365, 164, 350, 159, 165, 349,
	255, 329, 337, 246, 238, 158, 335, 244, 237, 224,
	194, 208, 285, 233, 286, 209, 251, 250, 252, 0,
	154, 0, 317, 345, 366, 169, 0, 0, 325, 359,
	362, 0, 288, 170, 201, 193, 284, 199, 227, 358,
	360, 361, 168, 282, 206, 254, 166, 211, 313, 223,
	231, 0, 0, 271, 296, 173, 343, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 160,
	228, 0, 289, 198, 364, 348, 346, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 151, 161, 167, 174, 182, 192, 196,
	204, 207, 210, 213, 214, 216, 220, 236, 240, 241,
	242, 243, 256, 257, 258, 261, 264, 265, 267, 269,
	270, 273, 277, 278, 279, 280, 281, 283, 290, 292,
	298, 299, 300, 301, 302, 303, 304, 307, 308, 309,
	310, 318, 321, 331, 332, 342, 352, 356, 205, 339,
	357, 263, 235, 0, 0, 1183, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 226, 0, 0, 275,
	0, 306, 177, 234, 232, 328, 195, 191, 188, 176,
	212, 239, 274, 323, 268, 0, 229, 0, 0, 315,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 175, 153, 260,
	316, 197, 0, 0, 0, 135, 136, 137, 0, 1185,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 186, 215, 190, 185, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 249, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 222, 149, 162, 0,
	0, 259, 293, 297, 0, 0, 0, 178, 0, 295,
	272, 341, 0, 276, 294, 230, 330, 287, 340, 354,
	355, 184, 253, 347, 324, 351, 363, 163, 181, 266,
	320, 344, 312, 247, 327, 221, 311, 202, 152, 155,
	322, 338, 172, 305, 0, 0, 0, 157, 336, 319,
	245, 218, 219, 156, 0, 291, 187, 200, 180, 262,
	333, 334, 179, 365, 164, 350, 159, 165, 349, 255,
	329, 337, 246, 238, 158, 335, 244, 237, 224, 194,
	208, 285, 233, 286, 209, 251, 250, 252, 0, 154,
	0, 317, 345, 366, 169, 0, 0, 325, 359, 362,
	0, 288, 170, 201, 193, 284, 199, 227, 358, 360,
	361, 168, 282, 206, 254, 166, 211, 313, 223, 231,
	0, 0, 271, 296, 173, 343, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 160, 228,
	0, 289, 198, 364, 348, 346, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 151, 161, 167, 174, 182, 192, 196, 204,
	207, 210, 213, 214, 216, 220, 236, 240, 241, 242,
	243, 256, 257, 258, 261, 264, 265, 267, 269, 270,
	273, 277, 278, 279, 280, 281, 283, 290, 292, 298,
	299, 300, 301, 302, 303, 304, 307, 308, 309, 310,
	318, 321, 331, 332, 342, 352, 356, 205, 339, 357,
	33, 235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 226, 0,
	0, 275, 0, 306, 177, 234, 232, 328, 195, 191,
	188, 176, 212, 239, 274, 323, 268, 0, 229, 0,
	0, 315, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 175,
	153, 260, 316, 197, 67, 0, 0, 135, 136, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 186, 215, 190, 185, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 203, 0, 249, 0, 0, 0, 353, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 222, 149,
	162, 0, 0, 259, 293, 297, 0, 0, 0, 178,
	0, 295, 272, 341, 0, 276, 294, 230, 330, 287,
	340, 354, 355, 184, 253, 347, 324, 351, 363, 163,
	181, 266, 320, 344, 312, 247, 327, 221, 311, 202,
	152, 155, 322, 338, 172, 305, 0, 0, 0, 157,
	336, 319, 245, 218, 219, 156, 0, 291, 187, 200,
	180, 262, 333, 334, 179, 365, 164, 350, 159, 165,
	349, 255, 329, 337, 246, 238, 158, 335, 244, 237,
	224, 194, 208, 285, 233, 286, 209, 251, 250, 252,
	0, 154, 0, 317, 345, 366, 169, 0, 0, 325,
	359, 362, 0, 288, 170, 201, 193, 284, 199, 227,
	358, 360, 361, 168, 282, 206, 254, 166, 211, 313,
	223, 231, 0, 0, 271, 296, 173, 343, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 148,
	160, 228, 0, 289, 198, 364, 348, 346, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 151, 161, 167, 174, 182, 192,
	196, 204, 207, 210, 213, 214, 216, 220, 236, 240,
	241, 242, 243, 256, 257, 258, 261, 264, 265, 267,
	269, 270, 273, 277, 278, 279, 280, 281, 283, 290,
	292, 298, 299, 300, 301, 302, 303, 304, 307, 308,
	309, 310, 318, 321, 331, 332, 342, 352, 356, 205,
	339, 357, 263, 235, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 226, 0, 0,
	275, 0, 306, 177, 234, 232, 328, 195, 191, 188,
	176, 212, 239, 274, 323, 268, 0, 229, 0, 0,
	315, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 175, 153,
	260, 316, 197, 0, 0, 0, 135, 136, 137, 0,
	0, 1201, 0, 0, 1202, 0, 0, 171, 0, 0,
	0, 0, 0, 186, 215, 190, 185, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	203, 0, 249, 0, 0, 0, 353, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 222, 149, 162,
	0, 0, 259, 293, 297, 0, 0, 0, 178, 0,
	295, 272, 341, 0, 276, 294, 230, 330, 287, 340,
	354, 355, 184, 253, 347, 324, 351, 363, 163, 181,
	266, 320, 344, 312, 247, 327, 221, 311, 202, 152,
	155, 322, 338, 172, 305, 0, 0, 0, 157, 336,
	319, 245, 218, 219, 156, 0, 291, 187, 200, 180,
	262, 333, 334, 179, 365, 164, 350, 159, 165, 349,
	255, 329, 337, 246, 238, 158, 335, 244, 237, 224,
	194, 208, 285, 233, 286, 209, 251, 250, 252, 0,
	154, 0, 317, 345, 366, 169, 0, 0, 325, 359,
	362, 0, 288, 170, 201, 193, 284, 199, 227, 358,
	360, 361, 168, 282, 206, 254, 166, 211, 313, 223,
	231, 0, 0, 271, 296, 173, 343, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 148, 160,
	228, 0, 289, 198, 364, 348, 346, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 150, 151, 161, 167, 174, 182, 192, 196,
	204, 207, 210, 213, 214, 216, 220, 236, 240, 241,
	242, 243, 256, 257, 258, 261, 264, 265, 267, 269,
	270, 273, 277, 278, 279, 280, 281, 283, 290, 292,
	298, 299, 300, 301, 302, 303, 304, 307, 308, 309,
	310, 318, 321, 331, 332, 342, 352, 356, 205, 339,
	357, 263, 235, 0, 0, 1183, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 226, 0, 0, 275,
	0, 306, 177, 234, 232, 328, 195, 191, 188, 176,
	212, 239, 274, 323, 268, 0, 229, 0, 0, 315,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 175, 153, 260,
	316, 197, 0, 0, 0, 135, 136, 137, 0, 1185,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 186, 215, 190, 185, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 249, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 222, 149, 162, 0,
	0, 259, 293, 297, 0, 0, 0, 178, 0, 295,
	272, 341, 0, 1181, 294, 230, 330, 287, 340, 354,
	355, 184, 253, 347, 324, 351, 363, 163, 181, 266,
	320, 344, 312, 247, 327, 221, 311, 202, 152, 155,
	322, 338, 172, 305, 0, 0, 0, 157, 336, 319,
	245, 218, 219, 156, 0, 291, 187, 200, 180, 262,
	333, 334, 179, 365, 164, 350, 159, 165, 349, 255,
	329, 337, 246, 238, 158, 335, 244, 237, 224, 194,
	208, 285, 233, 286, 209, 251, 250, 252, 0, 154,
	0, 317, 345, 366, 169, 0, 0, 325, 359, 362,
	0, 288, 170, 201, 193, 284, 199, 227, 358, 360,
	361, 168, 282, 206, 254, 166, 211, 313, 223, 231,
	0, 0, 271, 296, 173, 343, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 160, 228,
	0, 289, 198, 364, 348, 346, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 151, 161, 167, 174, 182, 192, 196, 204,
	207, 210, 213, 214, 216, 220, 236, 240, 241, 242,
	243, 256, 257, 258, 261, 264, 265, 267, 269, 270,
	273, 277, 278, 279, 280, 281, 283, 290, 292, 298,
	299, 300, 301, 302, 303, 304, 307, 308, 309, 310,
	318, 321, 331, 332, 342, 352, 356, 205, 339, 357,
	263, 235, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 937, 0, 0, 0, 226, 0, 0, 275, 0,
	306, 177, 234, 232, 328, 195, 191, 188, 176, 212,
	239, 274, 323, 268, 0, 229, 0, 0, 315, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 175, 153, 260, 316,
	197, 0, 0, 0, 135, 136, 137, 0, 936, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 186, 215, 190, 185, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	249, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 222, 149, 162, 0, 0,
	259, 293, 297, 0, 0, 0, 178, 0, 295, 272,
	341, 0, 276, 294, 230, 330, 287, 340, 354, 355,
	184, 253, 347, 324, 351, 363, 163, 181, 266, 320,
	344, 312, 247, 327, 221, 311, 202, 152, 155, 322,
	338, 172, 305, 0, 0, 0, 157, 336, 319, 245,
	218, 219, 156, 0, 291, 187, 200, 180, 262, 333,
	334, 179, 365, 164, 350, 159, 165, 349, 255, 329,
	337, 246, 238, 158, 335, 244, 237, 224, 194, 208,
	285, 233, 286, 209, 251, 250, 252, 0, 154, 0,
	317, 345, 366, 169, 0, 0, 325, 359, 362, 0,
	288, 170, 201, 193, 284, 199, 227, 358, 360, 361,
	168, 282, 206, 254, 166, 211, 313, 223, 231, 0,
	0, 271, 296, 173, 343, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 160, 228, 0,
	289, 198, 364, 348, 346, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 151, 161, 167, 174, 182, 192, 196, 204, 207,
	210, 213, 214, 216, 220, 236, 240, 241, 242, 243,
	256, 257, 258, 261, 264, 265, 267, 269, 270, 273,
	277, 278, 279, 280, 281, 283, 290, 292, 298, 299,
	300, 301, 302, 303, 304, 307, 308, 309, 310, 318,
	321, 331, 332, 342, 352, 356, 205, 339, 357, 263,
	235, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 226, 0, 0, 275, 0, 306,
	177, 234, 232, 328, 195, 191, 188, 176, 212, 239,
	274, 323, 268, 0, 229, 0, 0, 315, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 175, 153, 260, 316, 197,
	0, 0, 493, 135, 136, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	186, 215, 190, 185, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 249,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 222, 149, 162, 0, 0, 259,
	293, 297, 0, 0, 0, 178, 0, 295, 272, 341,
	0, 276, 294, 230, 330, 287, 340, 354, 355, 184,
	253, 347, 324, 351, 363, 163, 181, 266, 320, 344,
	312, 247, 327, 221, 311, 202, 152, 155, 322, 338,
	172, 305, 0, 0, 0, 157, 336, 319, 245, 218,
	219, 156, 0, 291, 187, 200, 180, 262, 333, 334,
	179, 365, 164, 350, 159, 165, 349, 255, 329, 337,
	246, 238, 158, 335, 244, 237, 224, 194, 208, 285,
	233, 286, 209, 251, 250, 252, 0, 154, 0, 317,
	345, 366, 169, 0, 0, 325, 359, 362, 0, 288,
	170, 201, 193, 284, 199, 227, 358, 360, 361, 168,
	282, 206, 254, 166, 211, 313, 223, 231, 0, 0,
	271, 296, 173, 343, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 160, 228, 0, 289,
	198, 364, 348, 346, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	151, 161, 167, 174, 182, 192, 196, 204, 207, 210,
	213, 214, 216, 220, 236, 240, 241, 242, 243, 256,
	257, 258, 261, 264, 265, 267, 269, 270, 273, 277,
	278, 279, 280, 281, 283, 290, 292, 298, 299, 300,
	301, 302, 303, 304, 307, 308, 309, 310, 318, 321,
	331, 332, 342, 352, 356, 205, 339, 357, 263, 235,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 226, 0, 0, 275, 0, 306, 177,
	234, 232, 328, 195, 191, 188, 176, 212, 239, 274,
	323, 268, 0, 229, 0, 0, 315, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 175, 153, 260, 316, 197, 67,
	0, 0, 135, 136, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 186,
	215, 190, 185, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 203, 0, 249, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 222, 149, 162, 0, 0, 259, 293,
	297, 0, 0, 0, 178, 0, 295, 272, 341, 0,
	276, 294, 230, 330, 287, 340, 354, 355, 184, 253,
	347, 324, 351, 363, 163, 181, 266, 320, 344, 312,
	247, 327, 221, 311, 202, 152, 155, 322, 338, 172,
	305, 0, 0, 0, 157, 336, 319, 245, 218, 219,
	156, 0, 291, 187, 200, 180, 262, 333, 334, 179,
	365, 164, 350, 159, 165, 349, 255, 329, 337, 246,
	238, 158, 335, 244, 237, 224, 194, 208, 285, 233,
	286, 209, 251, 250, 252, 0, 154, 0, 317, 345,
	366, 169, 0, 0, 325, 359, 362, 0, 288, 170,
	201, 193, 284, 199, 227, 358, 360, 361, 168, 282,
	206, 254, 166, 211, 313, 223, 231, 0, 0, 271,
	296, 173, 343, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 160, 228, 0, 289, 198,
	364, 348, 346, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 151,
	161, 167, 174, 182, 192, 196, 204, 207, 210, 213,
	214, 216, 220, 236, 240, 241, 242, 243, 256, 257,
	258, 261, 264, 265, 267, 269, 270, 273, 277, 278,
	279, 280, 281, 283, 290, 292, 298, 299, 300, 301,
	302, 303, 304, 307, 308, 309, 310, 318, 321, 331,
	332, 342, 352, 356, 205, 339, 357, 263, 235, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 226, 0, 0, 275, 0, 306, 177, 234,
	232, 328, 195, 191, 188, 176, 212, 239, 274, 323,
	268, 0, 229, 0, 0, 315, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 175, 153, 260, 316, 197, 0, 0,
	0, 135, 136, 137, 0, 1185, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 186, 215,
	190, 185, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 249, 0, 0,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 222, 149, 162, 0, 0, 259, 293, 297,
	0, 0, 0, 178, 0, 295, 272, 341, 0, 276,
	294, 230, 330, 287, 340, 354, 355, 184, 253, 347,
	324, 351, 363, 163, 181, 266, 320, 344, 312, 247,
	327, 221, 311, 202, 152, 155, 322, 338, 172, 305,
	0, 0, 0, 157, 336, 319, 245, 218, 219, 156,
	0, 291, 187, 200, 180, 262, 333, 334, 179, 365,
	164, 350, 159, 165, 349, 255, 329, 337, 246, 238,
	158, 335, 244, 237, 224, 194, 208, 285, 233, 286,
	209, 251, 250, 252, 0, 154, 0, 317, 345, 366,
	169, 0, 0, 325, 359, 362, 0, 288, 170, 201,
	193, 284, 199, 227, 358, 360, 361, 168, 282, 206,
	254, 166, 211, 313, 223, 231, 0, 0, 271, 296,
	173, 343, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 160, 228, 0, 289, 198, 364,
	348, 346, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 151, 161,
	167, 174, 182, 192, 196, 204, 207, 210, 213, 214,
	216, 220, 236, 240, 241, 242, 243, 256, 257, 258,
	261, 264, 265, 267, 269, 270, 273, 277, 278, 279,
	280, 281, 283, 290, 292, 298, 299, 300, 301, 302,
	303, 304, 307, 308, 309, 310, 318, 321, 331, 332,
	342, 352, 356, 205, 339, 357, 263, 235, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 226, 0, 0, 275, 0, 306, 177, 234, 232,
	328, 195, 191, 188, 176, 212, 239, 274, 323, 268,
	0, 229, 0, 0, 315, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 175, 153, 260, 316, 197, 0, 0, 0,
	135, 136, 137, 0, 906, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 186, 215, 190,
	185, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 249, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 222, 149, 162, 0, 0, 259, 293, 297, 0,
	0, 0, 178, 0, 295, 272, 341, 0, 276, 294,
	230, 330, 287, 340, 354, 355, 184, 253, 347, 324,
	351, 363, 163, 181, 266, 320, 344, 312, 247, 327,
	221, 311, 202, 152, 155, 322, 338, 172, 305, 0,
	0, 0, 157, 336, 319, 245, 218, 219, 156, 0,
	291, 187, 200, 180, 262, 333, 334, 179, 365, 164,
	350, 159, 165, 349, 255, 329, 337, 246, 238, 158,
	335, 244, 237, 224, 194, 208, 285, 233, 286, 209,
	251, 250, 252, 0, 154, 0, 317, 345, 366, 169,
	0, 0, 325, 359, 362, 0, 288, 170, 201, 193,
	284, 199, 227, 358, 360, 361, 168, 282, 206, 254,
	166, 211, 313, 223, 231, 0, 0, 271, 296, 173,
	343, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 160, 228, 0, 289, 198, 364, 348,
	346, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 151, 161, 167,
	174, 182, 192, 196, 204, 207, 210, 213, 214, 216,
	220, 236, 240, 241, 242, 243, 256, 257, 258, 261,
	264, 265, 267, 269, 270, 273, 277, 278, 279, 280,
	281, 283, 290, 292, 298, 299, 300, 301, 302, 303,
	304, 307, 308, 309, 310, 318, 321, 331, 332, 342,
	352, 356, 205, 339, 357, 263, 235, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	226, 0, 0, 275, 0, 306, 177, 234, 232, 328,
	195, 191, 188, 176, 212, 239, 274, 323, 268, 0,
	229, 0, 0, 315, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 175, 153, 260, 316, 197, 1009, 0, 0, 135,
	136, 137, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 186, 215, 190, 185,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 203, 0, 249, 0, 0, 0, 353,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	222, 149, 162, 0, 0, 259, 293, 297, 0, 0,
	0, 178, 0, 295, 272, 341, 0, 276, 294, 230,
	330, 287, 340, 354, 355, 184, 253, 347, 324, 351,
	363, 163, 181, 266, 320, 344, 312, 247, 327, 221,
	311, 202, 152, 155, 322, 338, 172, 305, 0, 0,
	0, 157, 336, 319, 245, 218, 219, 156, 0, 291,
	187, 200, 180, 262, 333, 334, 179, 365, 164, 350,
	159, 165, 349, 255, 329, 337, 246, 238, 158, 335,
	244, 237, 224, 194, 208, 285, 233, 286, 209, 251,
	250, 252, 0, 154, 0, 317, 345, 366, 169, 0,
	0, 325, 359, 362, 0, 288, 170, 201, 193, 284,
	199, 227, 358, 360, 361, 168, 282, 206, 254, 166,
	211, 313, 223, 231, 0, 0, 271, 296, 173, 343,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 148, 160, 228, 0, 289, 198, 364, 348, 346,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 151, 161, 167, 174,
	182, 192, 196, 204, 207, 210, 213, 214, 216, 220,
	236, 240, 241, 242, 243, 256, 257, 258, 261, 264,
	265, 267, 269, 270, 273, 277, 278, 279, 280, 281,
	283, 290, 292, 298, 299, 300, 301, 302, 303, 304,
	307, 308, 309, 310, 318, 321, 331, 332, 342, 352,
	356, 205, 339, 357, 919, 235, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 226, 0, 0, 275,
	0, 306, 177, 234, 232, 328, 195, 191, 188, 176,
	212, 239, 274, 323, 268, 0, 229, 0, 0, 315,
	248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 175, 153, 260,
	316, 197, 0, 0, 0, 135, 136, 137, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 186, 215, 190, 185, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 203,
	0, 249, 0, 0, 0, 353, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 222, 149, 162, 0,
	0, 259, 293, 297, 0, 0, 0, 178, 0, 295,
	272, 341, 0, 276, 294, 230, 330, 287, 340, 354,
	355, 184, 253, 347, 324, 351, 363, 163, 181, 266,
	320, 344, 312, 247, 327, 221, 311, 202, 152, 155,
	322, 338, 172, 305, 0, 0, 0, 157, 336, 319,
	245, 218, 219, 156, 0, 291, 187, 200, 180, 262,
	333, 334, 179, 365, 164, 350, 159, 165, 349, 255,
	329, 337, 246, 238, 158, 335, 244, 237, 224, 194,
	208, 285, 233, 286, 209, 251, 250, 252, 0, 154,
	0, 317, 345, 366, 169, 0, 0, 325, 359, 362,
	0, 288, 170, 201, 193, 284, 199, 227, 358, 360,
	361, 168, 282, 206, 254, 166, 211, 313, 223, 231,
	0, 0, 271, 296, 173, 343, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 160, 228,
	0, 289, 198, 364, 348, 346, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 151, 161, 167, 174, 182, 192, 196, 204,
	207, 210, 213, 214, 216, 220, 236, 240, 241, 242,
	243, 256, 257, 258, 261, 264, 265, 267, 269, 270,
	273, 277, 278, 279, 280, 281, 283, 290, 292, 298,
	299, 300, 301, 302, 303, 304, 307, 308, 309, 310,
	318, 321, 331, 332, 342, 352, 356, 205, 339, 357,
	263, 235, 0, 0, 0, 0, 0, 0, 910, 189,
	0, 0, 0, 0, 0, 226, 0, 0, 275, 0,
	306, 177, 234, 232, 328, 195, 191, 188, 176, 212,
	239, 274, 323, 268, 0, 229, 0, 0, 315, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 175, 153, 260, 316,
	197, 0, 0, 0, 135, 136, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 186, 215, 190, 185, 326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 203, 0,
	249, 0, 0, 0, 353, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 222, 149, 162, 0, 0,
	259, 293, 297, 0, 0, 0, 178, 0, 295, 272,
	341, 0, 276, 294, 230, 330, 287, 340, 354, 355,
	184, 253, 347, 324, 351, 363, 163, 181, 266, 320,
	344, 312, 247, 327, 221, 311, 202, 152, 155, 322,
	338, 172, 305, 0, 0, 0, 157, 336, 319, 245,
	218, 219, 156, 0, 291, 187, 200, 180, 262, 333,
	334, 179, 365, 164, 350, 159, 165, 349, 255, 329,
	337, 246, 238, 158, 335, 244, 237, 224, 194, 208,
	285, 233, 286, 209, 251, 250, 252, 0, 154, 0,
	317, 345, 366, 169, 0, 0, 325, 359, 362, 0,
	288, 170, 201, 193, 284, 199, 227, 358, 360, 361,
	168, 282, 206, 254, 166, 211, 313, 223, 231, 0,
	0, 271, 296, 173, 343, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 160, 228, 0,
	289, 198, 364, 348, 346, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 151, 161, 167, 174, 182, 192, 196, 204, 207,
	210, 213, 214, 216, 220, 236, 240, 241, 242, 243,
	256, 257, 258, 261, 264, 265, 267, 269, 270, 273,
	277, 278, 279, 280, 281, 283, 290, 292, 298, 299,
	300, 301, 302, 303, 304, 307, 308, 309, 310, 318,
	321, 331, 332, 342, 352, 356, 205, 339, 357, 263,
	235, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 226, 0, 0, 275, 0, 306,
	177, 234, 232, 328, 195, 191, 188, 176, 212, 239,
	274, 323, 268, 0, 229, 0, 0, 315, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 175, 153, 260, 316, 197,
	0, 0, 0, 135, 136, 137, 0, 784, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	186, 215, 190, 185, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 203, 0, 249,
	0, 0, 0, 353, 0, 0, 0, 0, 0, 0,
	0, 0, 225, 0, 222, 149, 162, 0, 0, 259,
	293, 297, 0, 0, 0, 178, 0, 295, 272, 341,
	0, 276, 294, 230, 330, 287, 340, 354, 355, 184,
	253, 347, 324, 351, 363, 163, 181, 266, 320, 344,
	312, 247, 327, 221, 311, 202, 152, 155, 322, 338,
	172, 305, 0, 0, 0, 157, 336, 319, 245, 218,
	219, 156, 0, 291, 187, 200, 180, 262, 333, 334,
	179, 365, 164, 350, 159, 165, 349, 255, 329, 337,
	246, 238, 158, 335, 244, 237, 224, 194, 208, 285,
	233, 286, 209, 251, 250, 252, 0, 154, 0, 317,
	345, 366, 169, 0, 0, 325, 359, 362, 0, 288,
	170, 201, 193, 284, 199, 227, 358, 360, 361, 168,
	282, 206, 254, 166, 211, 313, 223, 231, 0, 0,
	271, 296, 173, 343, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 160, 228, 0, 289,
	198, 364, 348, 346, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	151, 161, 167, 174, 182, 192, 196, 204, 207, 210,
	213, 214, 216, 220, 236, 240, 241, 242, 243, 256,
	257, 258, 261, 264, 265, 267, 269, 270, 273, 277,
	278, 279, 280, 281, 283, 290, 292, 298, 299, 300,
	301, 302, 303, 304, 307, 308, 309, 310, 318, 321,
	331, 332, 342, 352, 356, 205, 339, 357, 263, 235,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 226, 0, 0, 275, 0, 306, 177,
	234, 232, 328, 195, 191, 188, 176, 212, 239, 274,
	323, 268, 0, 229, 0, 0, 315, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 175, 153, 260, 316, 197, 0,
	0, 0, 135, 136, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 186,
	215, 190, 185, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 0, 203, 0, 249, 0,
	0, 0, 353, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 222, 149, 162, 0, 0, 259, 293,
	297, 0, 0, 0, 178, 0, 295, 272, 341, 0,
	276, 294, 230, 330, 287, 340, 354, 355, 184, 253,
	347, 324, 351, 363, 163, 181, 266, 320, 344, 312,
	247, 327, 221, 311, 202, 152, 155, 322, 338, 172,
	305, 0, 0, 0, 157, 336, 319, 245, 218, 219,
	156, 0, 291, 187, 200, 180, 262, 333, 334, 179,
	365, 164, 350, 159, 165, 349, 255, 329, 337, 246,
	238, 158, 335, 244, 237, 224, 194, 208, 285, 233,
	286, 209, 251, 250, 252, 0, 154, 0, 317, 345,
	366, 169, 0, 0, 325, 359, 362, 0, 288, 170,
	201, 193, 284, 199, 227, 358, 360, 361, 168, 282,
	206, 254, 166, 211, 313, 223, 231, 0, 0, 271,
	296, 173, 343, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 148, 160, 228, 0, 289, 198,
	364, 348, 346, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 151,
	161, 167, 174, 182, 192, 196, 204, 207, 210, 213,
	214, 216, 220, 236, 240, 241, 242, 243, 256, 257,
	258, 261, 264, 265, 267, 269, 270, 273, 277, 278,
	279, 280, 281, 283, 290, 292, 298, 299, 300, 301,
	302, 303, 304, 307, 308, 309, 310, 318, 321, 331,
	332, 342, 352, 356, 408, 339, 357, 263, 235, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 226, 0, 0, 275, 0, 306, 177, 234,
	232, 328, 195, 191, 188, 176, 212, 239, 274, 323,
	268, 0, 229, 0, 0, 315, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 175, 153, 260, 316, 197, 0, 0,
	0, 135, 136, 137, 0, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 186, 215,
	190, 185, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 0, 249, 0, 143,
	0, 353, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 222, 149, 162, 0, 0, 259, 293, 297,
	0, 0, 0, 178, 0, 295, 272, 341, 0, 276,
	294, 230, 330, 287, 340, 354, 355, 184, 253, 347,
	324, 351, 363, 163, 181, 266, 320, 344, 312, 247,
	327, 221, 311, 202, 152, 155, 322, 338, 172, 305,
	0, 0, 0, 157, 336, 319, 245, 218, 219, 156,
	0, 291, 187, 200, 180, 262, 333, 334, 179, 365,
	164, 350, 159, 165, 349, 255, 329, 337, 246, 238,
	158, 335, 244, 237, 224, 194, 208, 285, 233, 286,
	209, 251, 250, 252, 0, 154, 0, 317, 345, 366,
	169, 0, 0, 325, 359, 362, 0, 288, 170, 201,
	193, 284, 199, 227, 358, 360, 361, 168, 282, 206,
	254, 166, 211, 313, 223, 231, 0, 0, 271, 296,
	173, 343, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 160, 228, 0, 289, 198, 364,
	348, 346, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 151, 161,
	167, 174, 182, 192, 196, 204, 207, 210, 213, 214,
	216, 220, 236, 240, 241, 242, 243, 256, 257, 258,
	261, 264, 265, 267, 269, 270, 273, 277, 278, 279,
	280, 281, 283, 290, 292, 298, 299, 300, 301, 302,
	303, 304, 307, 308, 309, 310, 318, 321, 331, 332,
	342, 352, 356, 205, 339, 357, 263, 235, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 226, 0, 0, 275, 0, 306, 177, 234, 232,
	328, 195, 191, 188, 176, 212, 239, 274, 323, 268,
	0, 229, 0, 0, 315, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 175, 153, 260, 316, 197, 0, 0, 0,
	135, 136, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 186, 215, 190,
	185, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 203, 0, 249, 0, 0, 0,
	353, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 222, 149, 162, 0, 0, 259, 293, 297, 0,
	0, 0, 178, 0, 295, 272, 341, 0, 276, 294,
	230, 330, 287, 340, 354, 355, 184, 253, 347, 324,
	351, 363, 163, 181, 266, 320, 344, 312, 247, 327,
	221, 311, 202, 152, 155, 322, 338, 172, 305, 0,
	0, 0, 157, 336, 319, 245, 218, 219, 156, 0,
	291, 187, 200, 180, 262, 333, 334, 179, 365, 164,
	350, 159, 165, 349, 255, 329, 337, 246, 238, 158,
	335, 244, 237, 224, 194, 208, 285, 233, 286, 209,
	251, 250, 252, 0, 154, 0, 317, 345, 366, 169,
	0, 0, 325, 359, 362, 0, 288, 170, 201, 193,
	284, 199, 227, 358, 360, 361, 168, 282, 206, 254,
	166, 211, 313, 223, 231, 0, 0, 271, 296, 173,
	343, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 148, 160, 228, 0, 289, 198, 364, 348,
	346, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 151, 161, 167,
	174, 182, 192, 196, 204, 207, 210, 213, 214, 216,
	220, 236, 240, 241, 242, 243, 256, 257, 258, 261,
	264, 265, 267, 269, 270, 273, 277, 278, 279, 280,
	281, 283, 290, 292, 298, 299, 300, 301, 302, 303,
	304, 307, 308, 309, 310, 318, 321, 331, 332, 342,
	352, 356, 205, 339, 357, 0, 235,
}

var yyPact = [...]int{
	2382, -1000, -310, 1389, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1345, 925, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	377, 991, 96, 1246, 1917, 87, 676, 214, 61, 19958,
	209, 36, 20357, -1000, 46, -1000, 31, 20357, 39, 19559,
	-1000, -1000, -1000, 11147, 1195, -64, -69, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 981, 1310, 1316, 1342, 780,
	1547, -1000, 9538, 9538, 183, 183, 183, 7942, -1000, -1000,
	13953, 20357, 20357, 1003, 185, 204, 185, -153, -1000, -1000,
	-1000, -1000, -1000, -1000, 1246, -1000, -1000, 88, -1000, -1000,
	932, -1000, 385, 401, 167, 167, 167, 0, 194, 1214,
	1210, 476, 473, 361, -1000, 401, 358, -198, -199, 20357,
	-1000, 20357, 408, 1246, 101, -1000, -1000, -1000, 20357, 179,
	676, 179, 179, 20357, -1000, 268, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 20357, 1240, 525,
	525, 525, 525, 525, 525, 5, -1000, 3, 97, 84,
	99, -43, 676, 83, -1000, 335, -1000, 92, 21, -1000,
	525, 5446, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	193, -1000, -1000, -1000, -1000, 20357, 19160, 163, 444, -1000,
	-1000, -1000, -1000, 805, 648, -1000, 11147, 2550, 926, 926,
	-1000, -1000, 250, -1000, -1000, 11945, 11945, 11945, 11945, 11945,
	11945, 11945, 11945, 11945, 11945, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 926,
	267, -1000, 10748, 926, 926, 926, 926, 926, 926, 926,
	926, 11147, 926, 926, 926, 926, 926, 926, 926, 926,
	926, 926, 926, 926, 926, 926, 926, 926, -1000, -1000,
	-1000, 20357, -1000, 1345, -1000, 925, -1000, -1000, -1000, 1236,
	11147, 11147, 1345, -1000, 1120, 9538, -1000, -1000, 1539, -1000,
	-1000, -1000, -1000, 512, 1374, -1000, 13142, 253, 1373, 18761,
	-1000, 16759, 18362, 931, 7526, -133, -1000, -1000, -1000, 441,
	15961, -1000, -1000, -1000, 1235, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 886, 20357,
	-1000, -1000, 210, 676, -1000, 986, -1000, 879, -1000, 948,
	78, 432, 20357, 467, 676, 676, -1000, -1000, -1000, 1233,
	401, 188, -1000, -1000, -1000, 17956, 676, -1000, 984, -1000,
	1278, 182, 344, 344, 676, -1000, -1000, 1073, -1000, 20357,
	20357, 20357, 1230, -11, -1000, -1000, -1000, -1000, 20357, 676,
	1277, 1274, 990, 20357, 676, -1000, -1000, -1000, -1000, -1000,
	5446, 108, 146, 124, 20357, 1246, 1192, 928, 192, 20357,
	1299, 1077, 20357, 676, -1000, 6694, -1000, 525, -1000, 662,
	11147, -1000, -1000, -1000, -1000, -1000, 525, 20357, 525, 20357,
	525, 525, 525, 525, 515, 537, 515, -1000, -1000, -1000,
	-1000, 5446, 5446, 20357, 5446, 5446, 20357, 5446, 5446, 537,
	-1000, -1000, -1000, 318, -1000, 1074, -1000, -1000, -1000, -1000,
	38, -1000, -1000, -1000, -1000, -1000, 1389, -1000, -1000, -1000,
	-147, 11147, 11147, 11147, 11147, 502, 356, 11945, 625, 482,
	11945, 11945, 11945, 11945, 11945, 11945, 11945, 11945, 11945, 11945,
	11945, 11945, 11945, 11945, 11945, 751, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 676, -1000, 1387, 801, 801, 291,
	291, 291, 291, 291, 291, 291, 291, 291, 12344, 8341,
	6694, 780, 875, 1345, 9538, 9538, 11147, 11147, 10336, 9937,
	9538, 1223, 457, 648, 20357, -1000, -1000, 11546, -1000, -1000,
	-1000, -1000, -1000, 675, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 20357, 20357, 9538, 9538, 9538, 9538, 9538, -1000, 927,
	-1000, -181, 15562, 1316, 780, 1539, 1292, 1381, 245, 593,
	921, -1000, 617, 1316, 15163, 957, -1000, 1539, -1000, -1000,
	-1000, 20357, -1000, -1000, 17557, -1000, -1000, 6278, 20357, 115,
	20357, -1000, 933, 1282, -1000, -1000, -1000, 1306, 14764, 20357,
	977, 970, -1000, -1000, 249, 7110, -133, -1000, 7110, 909,
	-1000, -112, -110, 8740, 276, -1000, -1000, -1000, -1000, 4614,
	12743, 735, 543, -45, -1000, -1000, -1000, 948, -1000, 948,
	948, 948, 948, -15, -15, -15, -15, -1000, -1000, -1000,
	-1000, -1000, 982, 979, -1000, 948, 948, 948, 948, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 975, 975, 975, 949,
	949, 144, -1000, 11147, 70, 20357, 1291, 581, 74, 427,
	65, -1000, 1296, 1016, -1000, 401, 859, 1341, -1000, 20357,
	53, -1000, 159, -1000, 20357, 974, 1269, 344, 676, -1000,
	676, -1000, -1000, -1000, -1000, -1000, 365, -1000, 246, 20357,
	53, 401, 1229, -1000, -1000, -1000, 676, -1000, -1000, -1000,
	-1000, -1000, 190, -1000, 20357, 20357, 20357, 20357, 20357, 223,
	104, 20357, 20357, 920, -1000, 20357, 5446, -1000, -1000, -1000,
	-1000, -1000, -1000, 648, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 525, 20357, 20357, 20357, -1000, -1000, 525, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 20357, -1000, 660,
	20357, 20357, -1000, -1000, -1000, -1000, -1000, 648, 356, 571,
	443, -1000, -1000, 585, -1000, -1000, 2453, -1000, -1000, -1000,
	-1000, 625, 11945, 11945, 11945, 713, 2453, 2268, 1874, 992,
	291, 289, 289, 390, 390, 390, 390, 390, 666, 666,
	-1000, -1000, -1000, 675, -1000, -1000, -1000, 675, 9538, 9538,
	918, 926, 243, -1000, 981, -1000, -1000, 1316, 833, 833,
	586, 621, 392, 1370, 833, 376, 1362, 833, 833, 9538,
	-1000, -1000, 458, -1000, 11147, 675, -1000, 1027, 917, 910,
	833, 675, 675, 833, 833, 20357, -1000, -297, -1000, -113,
	349, 926, -1000, 17158, -1000, -1000, 1236, -1000, -1000, 1193,
	-1000, 1117, 11147, 11147, 11147, -1000, -1000, -1000, 1236, 1340,
	-1000, 1133, 1130, 1355, 9538, 16759, 1539, -1000, -1000, -1000,
	238, 1355, 906, 926, -1000, 20357, 16759, 16759, 16759, 16759,
	16759, -1000, 1090, 1075, -1000, 1104, 1083, 1116, 20357, -1000,
	873, 780, 14764, 115, 786, 16759, 20357, -1000, -1000, 16759,
	20357, 5862, -1000, 909, -133, -122, -1000, -1000, -1000, -1000,
	648, -1000, 851, 907, 4198, -1000, -1000, -1000, -1000, 162,
	-1000, -1000, -1000, -1000, 1245, -1000, 492, -58, -1000, -1000,
	-15, -15, -1000, -1000, 276, 1226, 276, 276, 276, 658,
	658, -1000, -1000, -1000, -1000, -1000, 580, -1000, -1000, -1000,
	573, -1000, -1000, 583, 1065, 70, -1000, -1000, 401, 655,
	1206, 20357, -1000, -1000, 723, 196, 58, 94, -1000, -1000,
	-1000, -1000, 1066, -1000, 794, -1000, -1000, 20357, 871, -1000,
	42, 20357, -1000, 868, 20357, -1000, 676, -1000, -1000, 1244,
	1243, 6694, 53, 42, 751, 751, -1000, 676, 1012, -1000,
	-1000, -1000, -1000, 30, 107, 98, 189, -1000, 5446, -1000,
	-1000, -1000, -1000, 515, -1000, 515, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 713, 2453, 1835, -1000, 11945, 11945, -1000,
	-1000, 833, 833, 9538, 6694, 1345, 1236, -1000, -1000, 410,
	751, 410, 11945, 11945, -1000, 11945, 11945, -1000, -178, 892,
	450, -1000, 11147, 549, -1000, -1000, 11945, 11945, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 200, 199, 198,
	20357, -1000, -1000, 645, 654, 1115, 648, 648, -1000, -1000,
	20357, -1000, -1000, -1000, -1000, 1350, 11147, -1000, 891, -1000,
	5030, 1316, 1060, 20357, 926, 1389, 13554, 20357, 903, -1000,
	424, 1282, 1010, 1034, 1400, -1000, -1000, -1000, -1000, 1072,
	-1000, 1037, -1000, -1000, -1000, -1000, -1000, 780, 1355, 16759,
	858, -1000, 858, -1000, 234, -1000, -1000, -1000, -96, -119,
	-1000, -1000, -1000, 4614, -1000, 4614, -1000, 1033, 11945, -1000,
	-1000, -1000, 276, 276, -1000, 461, -1000, -1000, -1000, 822,
	-1000, 819, 890, 803, 20, -1000, 1001, 1218, 401, 401,
	-1000, 570, -1000, 676, -1000, -1000, 20357, 67, -1000, 959,
	624, -1000, 20357, -1000, -1000, 829, -1000, 20357, -1000, -1000,
	20357, -1000, 70, 788, -1000, -1000, 801, -1000, 42, -1000,
	277, 276, -1000, -186, 676, 20357, 20357, 20357, -1000, 20357,
	-1000, 525, 525, -1000, 11945, 2453, 2453, -1000, -1000, 675,
	-1000, 1316, -1000, 675, 948, 948, -1000, 948, 949, -1000,
	948, 24, 948, 19, 675, 675, 2390, 2342, 2177, 1965,
	926, -160, -1000, 648, 11147, 1775, 1062, 926, 926, 926,
	771, -1000, 651, -15, -1000, -1000, -1000, 1348, 1338, 648,
	-1000, -1000, -1000, 1285, 747, 795, -1000, -1000, 9139, 774,
	1129, 232, 771, 1345, 20357, 11147, -1000, -1000, 11147, 947,
	-1000, 11147, -1000, -1000, -1000, 1345, 1345, 858, -1000, -1000,
	300, -1000, -1000, -1000, 4198, -1000, -41, 1380, 2453, -1000,
	-1000, -1000, -1000, -15, 650, -15, 559, -1000, 552, -1000,
	-1000, -234, -1000, -1000, 955, 1040, -1000, -1000, 944, -1000,
	-1000, -1000, 714, -1000, -1000, 20357, -1000, -1000, -1000, 131,
	-1000, -1000, -1000, 401, -1000, -1000, 6694, -1000, -1000, 936,
	1014, -1000, -1000, -1000, -1000, 2453, -1000, 1236, -1000, -1000,
	168, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11945,
	11945, 11945, 11945, 11945, 1316, 644, 648, 11945, 11945, 16360,
	20357, 20357, 14352, 20357, -15, -65, -1000, 11147, 11147, 1268,
	-1000, 926, -1000, 964, 20357, 926, 20357, -1000, 1316, -1000,
	648, 648, 20357, 648, 1316, -1000, 309, -1000, -114, 276,
	-1000, 276, 705, 694, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1305, 20357, -1000, -1000, 20357, 696, 813, -1000,
	386, 20357, 20357, -1000, -1000, -1000, 1027, 1027, 1027, 1027,
	357, 675, -1000, 1027, 1027, 740, -1000, 740, 740, 349,
	-1000, -292, -1000, 1186, 1171, 648, 805, 1378, -1000, 926,
	1389, 230, 795, -1000, -1000, 733, -1000, 503, 1264, -1000,
	1263, -1000, -1000, -1000, -1000, -1000, 925, 728, 802, -1000,
	-1000, 6694, 4614, 692, -1000, -1000, -1000, -1000, -1000, 675,
	77, -191, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -65,
	181, -1000, 1151, 1149, 1326, 20357, 795, 20357, -1000, -1000,
	642, -1000, -1000, 153, -1000, 20357, -1000, -1000, 1012, -1000,
	1112, -182, -194, 1156, 1160, 1160, 1171, 1323, 1169, 1164,
	-1000, 626, 756, -1000, -1000, -1000, -91, 670, -186, -1000,
	1109, -1000, 1154, 598, -1000, -1000, -1000, -1000, 620, -1000,
	1322, 1320, -1000, 143, -1000, -1000, 1032, -1000, -188, -1000,
	539, -1000, -1000, -1000, 616, 614, 68, 1026, -1000, 1359,
	-192, -1000, -1000, -1000, -1000, -1000, -1000, 1377, 324, 324,
	-195, -1000, -1000, -1000, 140, 623, -1000, -1000, -1000, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 1687, 1686, 13, 80, 79, 1685, 1684, 1680, 1678,
	127, 126, 124, 1677, 1676, 1675, 1672, 1671, 1670, 1668,
	1666, 1665, 1664, 1663, 1661, 113, 1660, 1659, 1657, 1655,
	1653, 107, 105, 434, 1652, 112, 1651, 1650, 1649, 1648,
	1646, 1645, 1644, 1639, 1638, 1635, 1633, 1627, 115, 1624,
	1623, 1622, 1621, 1620, 1618, 1617, 1614, 1612, 1611, 1609,
	103, 1605, 43, 262, 42, 65, 1603, 77, 1597, 1595,
	1593, 1592, 1590, 1151, 1585, 59, 74, 69, 1578, 38,
	1577, 1576, 102, 1574, 1573, 55, 1572, 1571, 233, 1570,
	64, 71, 15, 18, 1567, 1566, 1564, 1563, 29, 1117,
	1562, 1560, 21, 1558, 1555, 125, 1542, 73, 32, 16,
	19, 17, 1541, 76, 1539, 11, 63, 28, 1534, 75,
	1533, 1530, 1529, 1527, 24, 1524, 67, 87, 39, 1523,
	7, 9, 1522, 1521, 1520, 1515, 1514, 1512, 4, 1510,
	1509, 1506, 1503, 35, 1502, 5, 1501, 66, 40, 20,
	8, 1500, 1499, 25, 100, 51, 98, 1497, 1495, 1494,
	778, 1493, 49, 1492, 129, 1491, 37, 1490, 431, 621,
	1489, 1485, 1485, 1484, 1484, 72, 1119, 2370, 22, 99,
	1482, 1480, 2131, 57, 68, 23, 1475, 1467, 1461, 108,
	61, 48, 704, 41, 1459, 1458, 1456, 1455, 1452, 1451,
	1450, 26, 1449, 1448, 1447, 85, 33, 1446, 84, 27,
	1444, 1443, 1441, 1440, 45, 70, 1439, 95, 94, 62,
	90, 1436, 104, 83, 44, 1435, 54, 1434, 1433, 1432,
	1430, 31, 12, 1428, 97, 81, 46, 30, 34, 86,
	1427, 36, 1426, 1425, 82, 89, 1425, 1425, 1425, 10,
	1424, 3, 0, 1420, 6, 106, 1420, 1223, 696, 1,
	1419, 2, 1418, 1417, 78, 1415, 1413, 1408, 1406, 159,
	524, 101, 1398, 116,
}

var yyR1 = [...]int{
	0, 267, 268, 268, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 252, 252, 252, 255, 255, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	271, 271, 82, 82, 83, 83, 147, 147, 13, 14,
	14, 156, 156, 155, 155, 155, 157, 157, 157, 157,
	192, 192, 15, 15, 15, 15, 15, 61, 61, 254,
	254, 253, 251, 251, 250, 250, 249, 23, 24, 28,
	29, 30, 257, 257, 227, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 229, 229, 216,
	216, 228, 228, 228, 228, 228, 228, 228, 215, 194,
	194, 194, 194, 197, 197, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 196, 196, 196, 196, 196, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 214, 214, 201,
	201, 208, 208, 209, 209, 209, 211, 211, 212, 212,
	170, 170, 170, 203, 203, 204, 204, 210, 210, 205,
	205, 205, 206, 206, 206, 207, 207, 207, 213, 213,
	213, 213, 213, 202, 202, 217, 241, 241, 240, 240,
	236, 236, 236, 236, 226, 226, 233, 233, 233, 233,
	233, 225, 225, 221, 221, 221, 222, 222, 223, 223,
	220, 220, 224, 224, 235, 235, 234, 218, 218, 219,
	219, 244, 244, 244, 244, 245, 260, 261, 259, 259,
	259, 259, 259, 171, 171, 171, 230, 230, 230, 231,
	231, 231, 232, 232, 232, 258, 258, 116, 116, 117,
	117, 27, 27, 27, 26, 26, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 248, 246, 246, 247, 247, 17, 22,
	22, 18, 18, 18, 18, 19, 19, 36, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 163, 163, 262, 262, 165,
	165, 161, 161, 164, 164, 162, 162, 162, 166, 166,
	166, 167, 167, 266, 266, 266, 38, 38, 40, 40,
	41, 42, 42, 187, 187, 188, 188, 43, 44, 53,
	53, 53, 53, 53, 53, 55, 55, 55, 7, 7,
	7, 7, 50, 50, 50, 6, 6, 39, 39, 46,
	263, 263, 264, 265, 265, 265, 265, 47, 20, 272,
	48, 49, 49, 60, 60, 60, 56, 56, 56, 59,
	59, 59, 64, 64, 66, 66, 66, 66, 66, 67,
	67, 67, 67, 67, 67, 63, 63, 65, 65, 65,
	65, 180, 180, 180, 179, 179, 74, 74, 75, 75,
	76, 76, 77, 77, 77, 114, 91, 91, 146, 146,
	145, 145, 148, 148, 78, 78, 78, 78, 79, 79,
	80, 80, 81, 81, 186, 186, 185, 185, 185, 184,
	184, 84, 84, 84, 86, 85, 85, 85, 85, 87,
	87, 89, 89, 88, 88, 90, 92, 92, 92, 92,
	92, 93, 93, 73, 73, 73, 73, 73, 73, 73,
	73, 159, 159, 95, 95, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 106, 106, 106, 106, 106,
	106, 96, 96, 96, 96, 96, 96, 96, 62, 62,
	107, 107, 107, 113, 108, 108, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	103, 103, 103, 103, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 273, 273, 105, 104, 104, 104, 104,
	104, 104, 104, 58, 58, 58, 58, 58, 191, 191,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 120, 120, 57, 57, 118, 118, 119,
	121, 121, 115, 115, 115, 98, 98, 98, 98, 98,
	98, 98, 98, 100, 100, 100, 122, 122, 123, 123,
	124, 124, 125, 125, 126, 127, 127, 127, 128, 128,
	128, 128, 242, 242, 242, 242, 242, 237, 237, 237,
	237, 238, 238, 238, 68, 68, 68, 68, 70, 70,
	69, 69, 51, 51, 52, 52, 52, 71, 71, 72,
	72, 72, 72, 143, 143, 143, 129, 129, 129, 129,
	134, 134, 134, 130, 130, 132, 132, 132, 133, 133,
	133, 131, 137, 137, 139, 139, 138, 138, 136, 136,
	141, 141, 140, 140, 135, 135, 97, 97, 97, 97,
	97, 144, 144, 144, 144, 149, 149, 109, 109, 111,
	111, 110, 112, 150, 150, 153, 151, 151, 154, 154,
	154, 154, 154, 152, 152, 152, 181, 181, 181, 158,
	158, 168, 168, 169, 169, 160, 160, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 173, 173, 173,
	174, 174, 142, 142, 142, 142, 243, 243, 239, 177,
	177, 178, 178, 182, 182, 183, 183, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 269, 270,
	189, 190, 190, 190,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 3, 3, 0, 2,
	1, 2, 1, 0, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 1, 0, 2, 0,
	2, 0, 1, 5, 1, 3, 2, 2, 2, 5,
	5, 3, 3, 3, 5, 6, 6, 5, 6, 6,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	3, 3, 3, 3, 5, 2, 2, 2, 4, 3,
	6, 7, 5, 5, 5, 12, 7, 5, 9, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 3, 8, 8, 3, 3,
	5, 4, 6, 5, 4, 3, 2, 3, 4, 3,
	3, 3, 3, 3, 3, 4, 2, 4, 4, 4,
	4, 4, 5, 7, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 4, 7, 2, 4, 5, 4, 3,
	3, 5, 2, 3, 3, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 5, 6, 4, 4, 6, 6, 6, 8,
	8, 8, 8, 9, 8, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 4, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -267, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -269, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 151, -29, -24, 152, -30, 154, 153, 189,
	155, 182, 70, 217, 218, 220, 221, 222, 223, -55,
	187, 188, 157, 35, 41, 32, 33, 80, 9, 315,
	184, 183, 26, -268, 421, -60, 5, -124, 16, -3,
	-48, -272, -48, -48, -48, -48, -48, -48, -227, -229,
	80, 124, 80, -61, 161, -142, -257, 105, 167, 170,
	171, 306, 160, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 156, 76, 152, 158, 159, -35, 316, 103,
	102, 100, 101, 153, 71, 32, 154, 328, 331, 161,
	-257, 163, 277, -255, -252, 83, 84, 85, 161, 161,
	162, 163, -257, 161, -88, -182, -252, -176, 325, 175,
	359, 360, 216, 76, 267, 217, 231, 225, 252, 244,
	326, 361, 176, 205, 242, 245, 293, 362, 289, 272,
	280, 94, 220, 302, 363, 75, 47, 40, 185, 240,
	236, 206, 364, 336, 199, 103, 100, 234, 46, 28,
	102, 45, 365, 282, 257, 44, 366, 79, 330, 284,
	235, 281, 215, 157, 367, 415, 291, 368, 258, 262,
	369, 294, 48, 370, 371, 101, 372, 74, 229, 230,
	373, 213, 174, 296, 256, 172, 34, 285, 327, 54,
	193, 297, 42, 260, 41, 419, 374, 255, 251, 49,
	375, 376, 377, 378, 254, 228, 250, 211, 58, 159,
	264, 263, 265, 200, 292, 247, 379, 380, 381, 179,
	77, 382, 237, 19, 383, 384, 207, 385, 52, 386,
	387, 300, 188, 388, 50, 37, 191, 389, 390, 391,
	392, 393, 290, 394, 283, 259, 261, 195, 279, 329,
	395, 233, 396, 180, 192, 187, 301, 181, 397, 398,
	399, 400, 401, 402, 403, 221, 39, 404, 405, 406,
	407, 214, 210, 295, 304, 57, 78, 269, 408, 227,
	208, 409, 218, 51, 202, 275, 104, 212, 43, 248,
	194, 410, 411, 238, 239, 253, 226, 249, 219, 416,
	196, 189, 412, 303, 209, 270, 333, 201, 332, 246,
	243, 203, 413, 163, 197, 198, 414, 417, 286, 276,
	287, 288, 277, 204, 331, 241, 271, 161, 245, 293,
	272, 273, 274, 285, 286, 291, 290, 195, -266, 294,
	161, -161, 142, 151, 282, -165, 283, 276, 277, 204,
	-262, -252, 295, 419, 278, 284, 288, 287, -182, 219,
	-187, 224, -177, -252, -176, 222, -88, -53, 415, 155,
	-189, -189, -189, -108, -73, -94, 108, -99, 30, 24,
	-98, -95, -115, -112, -113, 142, 143, 145, 144, 146,
	131, 132, 139, 109, 147, -103, -101, -102, -104, 87,
	86, 95, 88, 89, 90, 91, 96, 97, 98, -177,
	-182, -110, -269, 64, 65, 316, 317, 318, 319, 324,
	320, 111, 53, 305, 314, 313, 312, 309, 310, 307,
	308, 322, 323, 166, 306, 160, 137, 315, -252, -176,
	40, 275, 275, -5, -4, -269, 6, 21, 22, -128,
	18, 17, -270, 82, -56, -66, 59, 60, -67, 22,
	36, 63, 61, -49, -65, 133, -73, -182, -65, -160,
	165, -160, -160, -151, -192, 219, -154, 295, 294, -178,
	-152, -177, -175, 293, 245, 292, 156, 334, 107, 23,
	25, 110, 142, 17, 111, 158, 173, 141, 169, 316,
	151, 68, 335, 307, 308, 305, 311, 318, 319, 306,
	273, 30, 11, 337, 26, 183, 22, 36, 135, 153,
	114, 115, 186, 24, 184, 98, 340, 20, 71, 178,
	12, 171, 14, 341, 342, 15, 166, 165, 126, 162,
	66, 9, 147, 27, 123, 62, 343, 29, 344, 345,
	346, 347, 64, 124, 18, 309, 310, 32, 420, 348,
	324, 190, 137, 69, 55, 108, 349, 350, 96, 351,
	99, 72, 105, 16, 67, 38, 352, 353, 168, 354,
	298, 355, 125, 154, 315, 65, 356, 160, 274, 6,
	321, 31, 182, 170, 63, 357, 161, 113, 322, 323,
	164, 97, 5, 167, 33, 10, 70, 73, 312, 313,
	314, 53, 328, 112, 13, 358, 299, 106, -228, 124,
	-215, -219, -177, 177, -245, 173, -88, -235, -234, -177,
	-68, 76, -169, 166, 162, -169, 315, -31, -32, 245,
	141, 81, -219, -218, -217, -258, 177, -244, -233, 169,
	178, -225, 170, 171, -220, 162, 29, -226, 116, -258,
	-258, -258, 245, 164, 34, 34, 104, 104, -258, -220,
	168, 178, -226, -173, -220, 164, 23, 332, 332, -88,
	-88, 151, 153, 156, 72, -33, 201, -22, -88, -168,
	166, -252, -168, -168, -88, 148, -88, 31, -166, 124,
	13, -166, -166, -166, -166, -166, 202, 289, 202, 289,
	202, 203, 202, 203, 202, -164, -163, 280, 281, 275,
	279, -252, 306, 291, -252, 195, 161, 196, 163, -221,
	162, 34, 174, 203, 275, 198, -166, -190, -269, -178,
	164, -177, -50, -177, 87, -7, -3, -11, -10, -12,
	116, 81, 107, 105, 106, 123, -73, -96, 126, 108,
	124, 125, 110, 128, 127, 138, 131, 132, 133, 134,
	135, 136, 137, 129, 130, 141, 116, 117, 118, 119,
	120, 121, 122, -159, -269, -113, -269, 149, 150, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -269,
	148, -2, -108, -4, -269, -269, -269, -269, -269, -269,
	-269, -269, -120, -73, -269, -273, -105, -269, -273, -105,
	-273, -105, -273, -269, -273, -105, -273, -105, -273, -273,
	-105, -269, -269, -269, -269, -269, -269, -269, -189, -263,
	-264, -91, -88, -124, -3, -48, -143, 20, 32, -73,
	-125, -126, -73, -124, 55, -63, -65, -67, 59, 60,
	93, 12, -180, -179, 23, -177, 87, 148, 12, -89,
	27, -88, -75, -76, -77, -78, -91, -114, -269, 12,
	-82, -83, -88, -90, -182, 81, 219, -154, -192, -156,
	-155, 296, 298, 116, -181, -177, 87, 30, 31, 82,
	81, -88, -194, -197, -199, -198, -200, -195, -196, 242,
	243, 142, 246, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 31, 185, 238, 239, 240, 241, 258,
	259, 260, 261, 262, 263, 264, 265, 225, 244, 326,
	226, 227, 228, 229, 230, 231, 233, 234, 235, 236,
	237, -255, -252, 80, 82, 81, -201, 80, -71, 206,
	116, -88, 108, -252, -252, 31, -226, 16, -25, 80,
	-215, -224, -255, -252, 80, 29, 168, 167, -223, -220,
	-223, -224, -252, 30, 74, 75, -115, -177, -182, -115,
	-215, 31, 245, -115, -252, 29, 29, 30, 77, 78,
	79, -88, -252, -190, 197, 197, 161, 161, 210, -88,
	40, 81, 164, -82, 24, 72, -88, -252, -183, -182,
	-175, -166, 87, -73, -166, -88, -166, -88, -166, -166,
	-166, -166, -162, 12, 126, -222, 12, 126, -162, -190,
	-190, -88, -190, -190, -88, -190, -190, -222, -167, 124,
	72, -188, 222, 256, 416, 417, 418, -73, -73, -73,
	-73, -106, 96, 108, 97, 98, -99, -107, -110, -113,
	92, 126, 124, 125, 110, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-191, -252, 87, -252, -98, -98, -177, -64, 22, 36,
	-63, -178, -183, -175, -60, -270, -270, -124, -63, -63,
	-73, -73, -115, 87, -63, -115, 87, -63, -63, -59,
	22, 36, -118, -119, 112, -115, -270, -99, -177, -177,
	-63, -64, -64, -63, -63, 81, -265, 298, 299, 420,
	-185, 191, -184, 23, -182, 87, -128, -270, -129, 27,
	10, 126, 81, 19, 81, -127, 25, 26, -128, -100,
	-177, 88, 91, -74, 81, 12, -67, -88, -179, 133,
	-183, -88, -147, 191, -88, 31, 81, -84, -86, -85,
	-87, 62, 66, 68, 63, 64, 65, 69, -186, 23,
	-75, -3, -269, -88, -82, -271, 81, 12, 73, -271,
	81, 148, -154, -156, 81, 297, 299, 300, 72, 99,
	-73, -206, 141, -230, -231, -232, -178, 87, 88, -215,
	-217, -218, -219, 82, -170, 96, 108, -211, 270, -201,
	-201, -201, -201, -201, -205, 245, -205, -205, -205, 80,
	80, -201, -201, -201, -201, -208, 80, -208, -208, -209,
	80, -209, -245, -73, -241, -240, -236, -239, 172, 94,
	328, 73, -234, -127, 88, -70, 208, 116, 209, 211,
	212, 24, -243, -239, -226, -252, 87, 17, -216, -215,
	-116, 215, -244, -235, 80, 29, -223, -224, -224, 153,
	31, 148, -215, -116, -226, 31, -252, 164, -88, -88,
	-88, -88, -88, 156, 153, 199, -88, -88, -88, -190,
	-166, -182, -182, -88, -166, -88, 87, -88, -177, 96,
	97, 98, -107, -99, -99, -99, -62, 186, 107, -270,
	-270, -63, -63, -269, 148, -5, -128, -270, -270, 81,
	73, 23, 12, 12, -270, 12, 12, -270, -270, -63,
	-121, -119, 114, -73, -270, -270, 81, 81, -270, -270,
	-270, -270, -270, -264, 419, 299, -92, 70, 165, 71,
	-269, -184, -143, 38, 46, 57, -73, -73, -126, -143,
	-158, 20, 12, 53, 53, -93, 13, -65, -75, -67,
	148, -93, -97, 31, 53, -3, -269, -269, -150, -153,
	-115, -76, -77, -77, -76, -77, 62, 62, 62, 67,
	62, 67, 62, -85, -182, -270, -270, -3, -147, 73,
	-75, -88, -75, -90, -182, 133, -155, -157, 301, 298,
	304, -252, 87, 81, -232, 116, -219, -203, 30, 96,
	-212, 271, -205, -205, -206, 31, -206, -206, -206, -214,
	87, -214, 88, 88, 82, -242, -237, -238, 32, 76,
	-236, -226, 87, 37, -177, 82, 163, 214, -72, 311,
	87, 83, 72, -252, 87, -145, -177, 81, 82, -117,
	216, -115, 82, -145, -224, 30, 30, -178, -116, -117,
	-191, -191, -252, -254, 73, 197, 267, 197, 200, 164,
	-190, -162, -162, -62, 107, -99, -99, -270, -270, -64,
	-178, -124, -143, -193, 142, 242, 185, 240, 236, 256,
	247, 269, 238, 270, -191, -193, -99, -99, -99, -99,
	325, -124, 115, -73, 113, -99, -99, 162, 162, 162,
	-148, -177, 39, 87, 87, 58, -88, -122, 14, -73,
	133, -128, -149, 72, -150, -109, -111, -110, -269, -144,
	-270, -177, -148, -93, 81, 116, -80, -79, 72, 73,
	-81, 72, -79, 62, 62, -270, -93, -75, -93, -93,
	148, 298, 302, 303, -231, -232, -204, 72, -99, -206,
	-206, -252, 142, 82, 81, 82, 81, 82, 81, -171,
	365, 108, -238, -237, -226, -226, 88, -252, -88, -69,
	206, 213, 80, 84, -88, 81, -215, -115, -241, 82,
	-98, -117, -207, 141, -206, -251, 328, -253, -252, -177,
	-177, -177, -88, -166, -166, -99, -270, -128, -270, -201,
	-201, -201, -209, -201, 230, -201, 230, -270, -270, 20,
	20, 20, 20, -269, -57, 321, -73, 81, 81, -269,
	-269, -269, -270, 81, 87, -205, -123, 15, 17, 28,
	-149, 81, -270, -270, 81, 53, 148, -270, -124, -153,
	-73, -73, 80, -73, -124, -93, -210, 267, 10, -205,
	87, -205, 88, 88, 365, 30, 77, 78, 79, 30,
	74, 75, -146, 80, 82, -177, 180, -226, -250, -249,
	-178, 80, 73, -143, -205, -252, -99, -99, -99, -99,
	-99, -128, 87, -99, -99, -145, -270, -145, -145, -185,
	-177, -205, -131, -136, -164, -73, -108, 29, -111, 53,
	-3, -177, -109, -177, -128, -145, -128, -213, 168, 29,
	167, -102, -206, -206, 82, 82, 23, -145, -88, -252,
	87, 81, 116, -145, -88, -270, -270, -270, -270, -58,
	126, 328, -270, -270, -270, -270, -270, -270, -92, -134,
	415, -137, 42, -138, 43, 10, -109, 148, 82, -202,
	94, 29, 29, -3, 82, 80, -249, -232, 82, -270,
	326, 69, 329, -131, 47, 248, -139, 51, -140, -135,
	52, 17, -150, -177, 87, -51, 328, -145, -254, 58,
	327, 330, -132, 49, -130, 48, -130, -138, 17, -141,
	44, 45, 87, -52, 205, 419, 82, -251, 58, -133,
	50, 72, 99, 87, 17, 17, 173, -260, -261, 72,
	328, 72, 99, 87, 87, 207, -261, 72, 11, 10,
	329, -259, 181, 176, 179, 31, -259, 330, 175, 30,
	96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 720, 0, 459, 459, 459, 459, 459, 459, 459,
	0, 0, -2, -2, -2, 0, 36, 0, 0, 0,
	0, -2, 417, 418, 0, 420, -2, 0, 0, 429,
	1220, 1220, 1220, 0, 0, 0, 0, 1218, 53, 54,
	435, 436, 437, 1, 3, 0, 463, 728, 0, 0,
	-2, 461, 0, 0, 835, 835, 835, 0, 82, 83,
	0, 0, 0, 744, 833, 0, 833, 0, 853, 854,
	855, 102, 103, 86, -2, 107, 108, 0, 112, 317,
	282, 284, -2, 224, 275, 275, 275, 0, 0, 0,
	0, 0, 0, 275, 308, 224, 847, 0, 0, 0,
	101, 0, 0, 111, 37, 33, 34, 35, 0, 831,
	0, 831, 831, 0, 356, 543, 863, 864, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 0, 0, 408,
	408, 408, 408, 408, 408, 0, 366, 0, 0, 0,
	0, 0, 0, 0, 382, 0, 385, 0, 0, 392,
	408, 1221, 414, 415, 402, 400, 397, 398, 416, 419,
	0, 424, 427, 859, 860, 0, 442, 0, 1056, 434,
	447, 448, 458, 38, 594, 553, 0, 559, 561, 0,
	596, 597, 598, 599, 600, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 626, 627, 628, 629, 705,
	706, 707, 708, 709, 710, 711, 712, 563, 564, 702,
	0, 812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 693, 0, 663, 663, 663, 663, 663, 663, 663,
	663, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	1220, 0, 457, 720, 49, 0, 459, 464, 465, 763,
	0, 0, 720, 1219, 0, 0, -2, -2, 475, 481,
	482, 483, 484, 460, 0, 487, 491, 0, 0, 0,
	836, 0, 0, 68, 0, 1189, 816, -2, -2, 0,
	0, 861, 862, -2, 1016, -2, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 0, 0,
	121, 122, 0, 36, 250, 0, 117, 0, 244, 179,
	757, 0, 0, 0, 0, 0, 88, 109, 110, 0,
	224, 111, 286, 287, 288, 0, -2, 248, 0, 276,
	0, 0, 238, 238, 242, 240, 241, 0, 225, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 0,
	0, 0, 0, 0, 0, 848, 849, 315, 316, 98,
	1221, 0, 0, 0, 0, -2, 0, 348, 0, 0,
	0, 0, 0, 0, 355, 0, 357, 408, 359, 0,
	0, 360, 361, 362, 363, 364, 408, 0, 408, 0,
	408, 408, 408, 408, 405, 0, 405, 403, 404, 395,
	396, 1221, 1221, 0, 1221, 1221, 0, 1221, 1221, 0,
	233, 234, 235, 411, 389, 390, 393, 394, 1222, 1223,
	425, 428, 445, 443, 444, 446, 438, 439, 440, 441,
	0, 0, 0, 0, 0, 0, 557, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 582, 583, 584,
	585, 586, 587, 560, 0, 574, 0, 0, 0, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 0, 472,
	0, 0, 0, 720, 0, 0, 0, 0, 0, 0,
	0, 469, 0, 694, 0, 647, 655, 0, 648, 656,
	649, 657, 650, 0, 651, 658, 652, 659, 653, 654,
	660, 0, 0, 0, 472, 472, 0, 0, 39, 449,
	450, 0, 526, 728, 0, 474, 766, 0, 0, 729,
	721, 722, 725, 728, 0, 496, 485, 476, 479, 480,
	462, 0, 488, 492, 0, 494, 495, 0, 0, 66,
	0, 542, 0, 498, 500, 501, 502, 524, 0, 0,
	0, 0, 62, 64, 543, 0, 1189, 822, 0, 70,
	71, 0, 0, 0, 202, 826, 827, 828, 824, 266,
	231, 0, 190, 186, 130, 131, 132, 179, 134, 179,
	179, 179, 179, 199, 199, 199, 199, 162, 163, 164,
	165, 166, 0, 0, 149, 179, 179, 179, 179, 169,
	170, 171, 172, 173, 174, 175, 176, 135, 136, 137,
	138, 139, 140, 141, 142, 143, 181, 181, 181, 183,
	183, 0, 37, 0, 216, 0, 725, 0, 748, 0,
	0, 97, 0, 856, 100, 224, 0, 0, 285, 0,
	277, 232, 0, -2, 0, 0, 0, 238, 242, 239,
	242, 230, 243, 291, 292, 293, 0, 702, 0, 0,
	277, 224, 0, 304, 305, 306, 0, 309, 310, 311,
	312, 313, 0, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 351, 832, 0, 1221, 354, 544, 865,
	866, 358, 409, 410, 365, 383, 367, 386, 368, 370,
	369, 371, 408, 0, 0, 0, 236, 237, 408, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 388, 0,
	0, 0, 426, 430, 431, 432, 433, 595, 554, 555,
	556, 558, 575, 0, 577, 579, 565, 566, 590, 591,
	592, 0, 0, 0, 0, 588, 570, 0, 601, 602,
	603, 604, 605, 606, 607, 608, 609, 610, 611, 612,
	615, 678, 679, 0, 613, 614, 625, 0, 0, 0,
	473, 703, 0, -2, 0, 593, 811, 728, 0, 0,
	0, 0, 598, 705, 0, 598, 705, 0, 0, 0,
	470, 471, 700, 697, 0, 0, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 452, 453, 455, 0,
	546, 1127, 527, 0, 529, 530, 763, 50, 40, 0,
	764, 0, 0, 0, 0, 724, 726, 727, 763, 0,
	713, 0, 0, 551, 0, 0, 477, 46, 493, 489,
	0, 551, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 531, 0, 0, 534, 0, 0, 0, 0, 525,
	0, 0, 0, -2, 0, 0, 0, 60, 61, 0,
	0, 0, 817, 69, 0, 0, 74, 75, 818, 819,
	820, 821, 0, 104, 267, 269, 272, 273, 274, 123,
	125, 126, 127, 118, 193, 191, 0, 188, 187, 133,
	199, 199, 156, 157, 202, 0, 202, 202, 202, 0,
	0, 150, 151, 152, 153, 144, 0, 145, 146, 147,
	0, 148, 249, 0, 732, 217, 218, 220, 224, 0,
	0, 0, 245, 246, 0, 0, 0, 0, 745, 746,
	747, 834, 0, 857, 0, 115, 116, 0, 0, 119,
	279, 0, 247, 0, 0, 226, 242, 227, 228, 0,
	0, 0, 277, 279, 0, 0, 307, 0, 89, 322,
	324, 323, 327, 0, 0, 0, 0, 349, 1221, 353,
	372, 406, 407, 405, 387, 405, 412, 391, 422, 576,
	578, 580, 567, 588, 571, 0, 568, 0, 0, 562,
	630, 0, 0, 472, 0, 720, 763, 634, 635, 0,
	0, 0, 0, 0, 671, 0, 0, 672, 0, 720,
	0, 698, 0, 0, 646, 665, 0, 0, 666, 667,
	668, 669, 670, 451, 454, 456, 506, 0, 0, 0,
	0, 528, 42, 0, 0, 0, 730, 731, 723, 41,
	0, 829, 830, 714, 715, 716, 0, 486, 497, 478,
	0, 728, 805, 0, 0, 797, 0, 0, 551, 813,
	0, 499, 520, 522, 0, 517, 532, 533, 535, 0,
	537, 0, 539, 540, 503, 504, 505, 0, 551, 0,
	551, 63, 551, 65, 0, 545, 72, 73, 0, 0,
	79, 203, 204, 0, 270, 0, 124, 195, 0, 192,
	129, 189, 202, 202, 158, 0, 159, 160, 161, 0,
	177, 0, 0, 0, 263, 84, 736, 735, 224, 224,
	219, 0, 222, 0, 858, 180, 0, 0, 758, 759,
	0, 762, 0, 113, 114, 283, 510, 0, 289, 290,
	0, 278, 216, 0, 229, 294, 0, 703, 279, 297,
	205, 202, 314, 92, 0, 0, 0, 0, 320, 0,
	352, 408, 408, 569, 0, 589, 572, 631, 632, 0,
	704, 728, 44, 0, 179, 179, 683, 179, 183, 686,
	179, 688, 179, 691, 0, 0, 0, 0, 0, 0,
	0, 695, 645, 701, 0, 0, 0, 0, 0, 0,
	0, 512, 0, 199, 768, 765, 43, 718, 0, 552,
	490, 47, 51, 0, 805, 796, 807, 809, 0, 0,
	0, 801, 0, 720, 0, 0, 514, 521, 0, 0,
	515, 0, 516, 536, 538, -2, 720, 551, 58, 59,
	0, 76, 77, 78, 268, 271, 197, 0, 194, 154,
	155, 200, 201, 199, 0, 199, 0, 184, 0, 255,
	264, 0, 733, 734, 0, 0, 221, 223, 508, 749,
	750, 751, 0, 761, 99, 0, 120, 280, 215, 0,
	295, 296, 298, 224, 299, 321, 0, 90, 91, 0,
	0, 326, 350, 373, 384, 573, 633, 763, 636, 680,
	199, 684, 685, 687, 689, 690, 692, 638, 637, 0,
	0, 0, 0, 0, 728, 0, 699, 0, 0, 0,
	0, 0, 526, 0, 199, 788, 48, 0, 0, 0,
	52, 0, 810, 0, 0, 0, 0, 67, 728, 814,
	815, 518, 0, 523, 728, 57, 208, 198, 0, 202,
	178, 202, 0, 0, 265, 737, 738, 739, 740, 741,
	742, 743, 0, 0, 760, 511, 0, 0, 93, 94,
	0, 0, 0, 45, 681, 682, 0, 0, 0, 0,
	673, 0, 696, 0, 0, 0, 548, 0, 0, 546,
	513, 770, 769, 782, 786, 719, 717, 0, 808, 0,
	800, 803, 799, 802, 55, 0, 56, 213, 0, 210,
	212, 196, 167, 168, 182, 185, 0, 0, 0, 206,
	207, 0, 0, 0, 328, 639, 641, 640, 642, 0,
	0, 0, 644, 661, 662, 547, 549, 550, 507, 788,
	0, 781, 784, -2, 0, 0, 798, 0, 519, 128,
	0, 209, 211, 752, 509, 0, 95, 96, 89, 643,
	0, 0, 0, 775, 773, 773, 786, 0, 790, 0,
	795, 0, 806, 804, 214, 85, 754, 0, 92, 674,
	0, 677, 778, 0, 771, 774, 772, 783, 0, 789,
	0, 0, 787, 0, 755, 756, 251, 325, 675, 767,
	0, 776, 777, 785, 0, 0, 0, 252, 253, 0,
	0, 779, 780, 791, 793, 753, 254, 0, 0, 0,
	0, 256, 258, 259, 0, 0, 257, 676, 260, 261,
	262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 109, 3, 3, 3, 136, 128, 3,
	80, 82, 133, 131, 81, 132, 148, 134, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 421,
	117, 116, 118, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 139,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 110, 111, 112, 113, 114, 115,
	119, 120, 121, 122, 123, 124, 125, 126, 129, 130,
	135, 137, 140, 141, 142, 143, 144, 145, 146, 147,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:398
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:403
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:404
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:408
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:439
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:445
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:449
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:458
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:468
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:474
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:480
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:489
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:493
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:497
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:520
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:534
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:540
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:558
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:565
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:577
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:605
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:609
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:613
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:650
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:662
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:666
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:686
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:690
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:700
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:730
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:737
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:745
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:756
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:765
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:775
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:780
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:785
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:802
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:808
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:822
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:829
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:847
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:871
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:875
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:890
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:894
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:900
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:904
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:915
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:921
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:945
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:958
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:964
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:975
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1209
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1217
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1227
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1235
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1239
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1267
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1276
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1307
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1333
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.colKeyOpt = colKey
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.literal = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1364
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1373
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1430
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1546
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1550
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1562
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1595
		{
			yyVAL.boolean = true
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.boolean = true
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.boolean = false
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = yyDollar[1].str
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1651
		{
			yyVAL.bytes = []byte("")
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1657
		{
			yyVAL.colName = nil
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1666
		{
			yyVAL.colName = nil
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1675
		{
			yyVAL.alterOptions = nil
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1683
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1707
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1711
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1715
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1723
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1727
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1731
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1735
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1739
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1743
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 298:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1747
		{
			yyVAL.alterOption = &AlterCharset{IsDefault: true, CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 299:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1751
		{
			yyVAL.alterOption = &AlterCharset{IsDefault: false, CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1775
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1779
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1783
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.alterOption = &Force{}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1791
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1795
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1799
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1803
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			yyVAL.alterOption = &RenameTable{Table: yyDollar[3].tableName}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1811
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1815
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1825
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1857
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1861
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 320:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1868
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 321:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1887
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1897
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1901
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 325:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1905
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 326:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1918
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 328:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1961
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 346:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1977
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 347:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1981
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1997
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 352:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2009
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2014
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2024
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2028
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.statement = &OtherRead{}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2039
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2043
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2063
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2079
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2087
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2091
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2095
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2099
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2103
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2107
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 378:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2140
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2144
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2153
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2157
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2167
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2180
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2203
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.str = "extended "
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = "full "
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2253
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2263
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2273
		{
			yyVAL.showFilter = nil
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2281
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2287
		{
			yyVAL.showFilter = nil
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2291
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2297
		{
			yyVAL.empty = struct{}{}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.empty = struct{}{}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.empty = struct{}{}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.statement = &Begin{}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.statement = &Begin{}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.statement = &Commit{}
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.statement = &Rollback{}
		}
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2341
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2346
		{
			yyVAL.empty = struct{}{}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2348
		{
			yyVAL.empty = struct{}{}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.empty = struct{}{}
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.empty = struct{}{}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2369
		{
			yyVAL.explainType = EmptyType
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.explainType = JSONType
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yyVAL.explainType = TreeType
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			yyVAL.explainType = VitessType
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yyVAL.explainType = TraditionalType
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.explainType = AnalyzeType
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.str = ""
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2440
		{
			yyVAL.statement = &OtherRead{}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2444
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2466
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.lockType = Read
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.lockType = ReadLocal
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.lockType = Write
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2500
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2510
		{
			setAllowComments(yylex, true)
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2520
		{
			yyVAL.bytes2 = nil
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2524
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.boolean = true
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.boolean = false
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.boolean = true
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = SQLCacheStr
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2556
		{
			yyVAL.boolean = false
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.boolean = true
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.boolean = true
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2569
		{
			yyVAL.selectExprs = nil
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2578
		{
			yyVAL.strs = nil
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2586
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2594
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2604
		{
			yyVAL.str = SQLCacheStr
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2608
		{
			yyVAL.str = DistinctStr
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = DistinctStr
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.str = StraightJoinHint
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2626
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2630
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2636
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2648
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2657
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2661
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2673
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2701
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2705
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2711
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 507:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2721
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2726
		{
			yyVAL.columns = nil
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2730
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2740
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2750
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2763
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2767
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2771
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2775
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2781
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2783
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2787
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2793
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2798
		{
			yyVAL.empty = struct{}{}
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.empty = struct{}{}
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2803
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2807
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2811
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.joinType = NormalJoinType
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2828
		{
			yyVAL.joinType = NormalJoinType
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.joinType = NormalJoinType
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.joinType = StraightJoinType
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2844
		{
			yyVAL.joinType = LeftJoinType
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.joinType = LeftJoinType
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.joinType = RightJoinType
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2856
		{
			yyVAL.joinType = RightJoinType
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2876
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2890
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2901
		{
			yyVAL.indexHints = nil
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2905
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2909
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2913
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2917
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.expr = nil
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2936
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2940
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2944
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2948
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2952
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2960
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2966
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2990
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2994
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2998
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3002
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3010
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3014
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3022
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3032
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3036
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3044
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3048
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3054
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3058
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3078
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = nil
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3093
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3097
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3117
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3127
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3131
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3135
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3151
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3159
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3171
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3175
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3179
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3187
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3195
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3199
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3203
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3231
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3245
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3253
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3271
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 633:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3297
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 636:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3301
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 637:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3305
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 638:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3309
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 639:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3313
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 640:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3317
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 641:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3321
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 642:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3325
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 643:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 644:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3333
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3337
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3341
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3364
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3390
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3394
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3398
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3403
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 661:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 662:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3441
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3445
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3449
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3453
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3457
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3461
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3465
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3471
		{
			yyVAL.matchExprOption = NoOption
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3479
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 676:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3483
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3503
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3507
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3515
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3519
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3529
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3533
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3537
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3545
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3553
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = nil
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3567
		{
			yyVAL.str = string("")
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3577
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3581
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3587
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = nil
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3596
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3602
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3610
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3624
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.expr = &NullVal{}
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3650
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3663
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3668
		{
			yyVAL.exprs = nil
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3672
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = nil
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3681
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3686
		{
			yyVAL.orderBy = nil
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3690
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3700
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3706
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3711
		{
			yyVAL.orderDirection = AscOrder
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.orderDirection = AscOrder
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3719
		{
			yyVAL.orderDirection = DescOrder
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3724
		{
			yyVAL.limit = nil
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3728
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3732
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3736
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3741
		{
			yyVAL.indexOptions = nil
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3745
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3764
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3776
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3782
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3786
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3790
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = ""
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.str = yyDollar[3].str
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3835
		{
			yyVAL.str = yyDollar[2].str
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = "cascaded"
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3853
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = yyDollar[3].str
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			yyVAL.lock = NoLock
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3884
		{
			yyVAL.lock = ForUpdateLock
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3888
		{
			yyVAL.lock = ShareModeLock
		}
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3893
		{
			yyVAL.selectInto = nil
		}
	case 767:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3897
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3901
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 769:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3905
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3910
		{
			yyVAL.str = ""
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3918
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3923
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.str = " header"
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3932
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3936
		{
			yyVAL.str = " manifest on"
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.str = " manifest off"
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3949
		{
			yyVAL.str = " overwrite on"
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = " overwrite off"
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3977
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = ""
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = ""
		}
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4009
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4013
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = ""
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = " optionally"
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4035
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 798:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4043
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4047
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4051
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4065
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4069
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4074
		{
			yyVAL.updateExprs = nil
		}
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4078
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4088
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4098
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4104
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4130
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4136
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4140
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4150
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4154
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4158
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4162
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4170
		{
			yyVAL.bytes = []byte("charset")
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4177
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.expr = &Default{}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4194
		{
			yyVAL.boolean = false
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.boolean = true
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4199
		{
			yyVAL.boolean = false
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4201
		{
			yyVAL.boolean = true
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.ignore = false
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.ignore = true
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.empty = struct{}{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.empty = struct{}{}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.empty = struct{}{}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4216
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.empty = struct{}{}
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4220
		{
			yyVAL.empty = struct{}{}
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.empty = struct{}{}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4224
		{
			yyVAL.empty = struct{}{}
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.empty = struct{}{}
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4228
		{
			yyVAL.empty = struct{}{}
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4232
		{
			yyVAL.empty = struct{}{}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.empty = struct{}{}
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			yyVAL.empty = struct{}{}
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.empty = struct{}{}
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4242
		{
			yyVAL.empty = struct{}{}
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4254
		{
			yyVAL.indexOptions = nil
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4256
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4260
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4266
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4287
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4679
		{
			decNesting(yylex)
		}
	case 1220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4684
		{
			skipToEnd(yylex)
		}
	case 1221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4689
		{
			skipToEnd(yylex)
		}
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4693
		{
			skipToEnd(yylex)
		}
	case 1223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4697
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
