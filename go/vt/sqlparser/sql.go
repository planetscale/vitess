// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const BEGIN = 57533
const START = 57534
const TRANSACTION = 57535
const COMMIT = 57536
const ROLLBACK = 57537
const SAVEPOINT = 57538
const RELEASE = 57539
const WORK = 57540
const BIT = 57541
const TINYINT = 57542
const SMALLINT = 57543
const MEDIUMINT = 57544
const INT = 57545
const INTEGER = 57546
const BIGINT = 57547
const INTNUM = 57548
const REAL = 57549
const DOUBLE = 57550
const FLOAT_TYPE = 57551
const DECIMAL = 57552
const NUMERIC = 57553
const TIME = 57554
const TIMESTAMP = 57555
const DATETIME = 57556
const YEAR = 57557
const CHAR = 57558
const VARCHAR = 57559
const BOOL = 57560
const CHARACTER = 57561
const VARBINARY = 57562
const NCHAR = 57563
const TEXT = 57564
const TINYTEXT = 57565
const MEDIUMTEXT = 57566
const LONGTEXT = 57567
const BLOB = 57568
const TINYBLOB = 57569
const MEDIUMBLOB = 57570
const LONGBLOB = 57571
const JSON = 57572
const ENUM = 57573
const GEOMETRY = 57574
const POINT = 57575
const LINESTRING = 57576
const POLYGON = 57577
const GEOMETRYCOLLECTION = 57578
const MULTIPOINT = 57579
const MULTILINESTRING = 57580
const MULTIPOLYGON = 57581
const NULLX = 57582
const AUTO_INCREMENT = 57583
const APPROXNUM = 57584
const SIGNED = 57585
const UNSIGNED = 57586
const ZEROFILL = 57587
const COLLATION = 57588
const DATABASES = 57589
const SCHEMAS = 57590
const TABLES = 57591
const VITESS_METADATA = 57592
const VSCHEMA = 57593
const FULL = 57594
const PROCESSLIST = 57595
const COLUMNS = 57596
const FIELDS = 57597
const ENGINES = 57598
const PLUGINS = 57599
const EXTENDED = 57600
const KEYSPACES = 57601
const VITESS_KEYSPACES = 57602
const VITESS_SHARDS = 57603
const VITESS_TABLETS = 57604
const CODE = 57605
const PRIVILEGES = 57606
const FUNCTION = 57607
const NAMES = 57608
const CHARSET = 57609
const GLOBAL = 57610
const SESSION = 57611
const ISOLATION = 57612
const LEVEL = 57613
const READ = 57614
const WRITE = 57615
const ONLY = 57616
const REPEATABLE = 57617
const COMMITTED = 57618
const UNCOMMITTED = 57619
const SERIALIZABLE = 57620
const CURRENT_TIMESTAMP = 57621
const DATABASE = 57622
const CURRENT_DATE = 57623
const CURRENT_TIME = 57624
const LOCALTIME = 57625
const LOCALTIMESTAMP = 57626
const CURRENT_USER = 57627
const UTC_DATE = 57628
const UTC_TIME = 57629
const UTC_TIMESTAMP = 57630
const REPLACE = 57631
const CONVERT = 57632
const CAST = 57633
const SUBSTR = 57634
const SUBSTRING = 57635
const GROUP_CONCAT = 57636
const SEPARATOR = 57637
const TIMESTAMPADD = 57638
const TIMESTAMPDIFF = 57639
const MATCH = 57640
const AGAINST = 57641
const BOOLEAN = 57642
const LANGUAGE = 57643
const WITH = 57644
const QUERY = 57645
const EXPANSION = 57646
const UNUSED = 57647
const ARRAY = 57648
const CUME_DIST = 57649
const DESCRIPTION = 57650
const DENSE_RANK = 57651
const EMPTY = 57652
const EXCEPT = 57653
const FIRST_VALUE = 57654
const GROUPING = 57655
const GROUPS = 57656
const JSON_TABLE = 57657
const LAG = 57658
const LAST_VALUE = 57659
const LATERAL = 57660
const LEAD = 57661
const MEMBER = 57662
const NTH_VALUE = 57663
const NTILE = 57664
const OF = 57665
const OVER = 57666
const PERCENT_RANK = 57667
const RANK = 57668
const RECURSIVE = 57669
const ROW_NUMBER = 57670
const SYSTEM = 57671
const WINDOW = 57672
const ACTIVE = 57673
const ADMIN = 57674
const BUCKETS = 57675
const CLONE = 57676
const COMPONENT = 57677
const DEFINITION = 57678
const ENFORCED = 57679
const EXCLUDE = 57680
const FOLLOWING = 57681
const GEOMCOLLECTION = 57682
const GET_MASTER_PUBLIC_KEY = 57683
const HISTOGRAM = 57684
const HISTORY = 57685
const INACTIVE = 57686
const INVISIBLE = 57687
const LOCKED = 57688
const MASTER_COMPRESSION_ALGORITHMS = 57689
const MASTER_PUBLIC_KEY_PATH = 57690
const MASTER_TLS_CIPHERSUITES = 57691
const MASTER_ZSTD_COMPRESSION_LEVEL = 57692
const NESTED = 57693
const NETWORK_NAMESPACE = 57694
const NOWAIT = 57695
const NULLS = 57696
const OJ = 57697
const OLD = 57698
const OPTIONAL = 57699
const ORDINALITY = 57700
const ORGANIZATION = 57701
const OTHERS = 57702
const PATH = 57703
const PERSIST = 57704
const PERSIST_ONLY = 57705
const PRECEDING = 57706
const PRIVILEGE_CHECKS_USER = 57707
const PROCESS = 57708
const RANDOM = 57709
const REFERENCE = 57710
const REQUIRE_ROW_FORMAT = 57711
const RESOURCE = 57712
const RESPECT = 57713
const RESTART = 57714
const RETAIN = 57715
const REUSE = 57716
const ROLE = 57717
const SECONDARY = 57718
const SECONDARY_ENGINE = 57719
const SECONDARY_LOAD = 57720
const SECONDARY_UNLOAD = 57721
const SKIP = 57722
const SRID = 57723
const THREAD_PRIORITY = 57724
const TIES = 57725
const UNBOUNDED = 57726
const VCPU = 57727
const VISIBLE = 57728
const FORMAT = 57729
const TREE = 57730
const VITESS = 57731
const TRADITIONAL = 57732
const LOCAL = 57733
const LOW_PRIORITY = 57734

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 811,
	-2, 89,
	-1, 43,
	136, 112,
	236, 112,
	-2, 106,
	-1, 50,
	34, 358,
	155, 358,
	167, 358,
	195, 372,
	196, 372,
	-2, 360,
	-1, 55,
	157, 382,
	-2, 380,
	-1, 79,
	55, 425,
	-2, 433,
	-1, 103,
	136, 112,
	236, 112,
	-2, 107,
	-1, 453,
	143, 822,
	-2, 818,
	-1, 454,
	143, 823,
	-2, 819,
	-1, 471,
	55, 426,
	-2, 438,
	-1, 472,
	55, 427,
	-2, 439,
	-1, 492,
	111, 1113,
	-2, 82,
	-1, 493,
	111, 1012,
	-2, 83,
	-1, 498,
	111, 968,
	-2, 782,
	-1, 500,
	111, 1053,
	-2, 784,
	-1, 656,
	136, 112,
	236, 112,
	-2, 278,
	-1, 1058,
	143, 825,
	-2, 821,
	-1, 1150,
	73, 64,
	81, 64,
	-2, 68,
	-1, 1553,
	5, 679,
	18, 679,
	20, 679,
	32, 679,
	82, 679,
	-2, 464,
	-1, 1762,
	45, 753,
	-2, 751,
}

const yyPrivate = 57344

const yyLast = 20411

var yyAct = [...]int{
	453, 1856, 1845, 1599, 1762, 1469, 1812, 1736, 1778, 1707,
	1172, 397, 1376, 1223, 1684, 1202, 1533, 412, 1344, 426,
	1530, 1097, 1596, 464, 1534, 1377, 632, 817, 1217, 1444,
	1421, 1363, 773, 1445, 1171, 1168, 1181, 669, 635, 1147,
	1545, 497, 1518, 1490, 934, 1045, 114, 973, 1225, 126,
	1303, 366, 126, 1437, 987, 1052, 629, 378, 861, 126,
	1186, 708, 1129, 854, 926, 473, 1136, 844, 827, 1078,
	811, 385, 427, 32, 1099, 847, 822, 824, 399, 458,
	1022, 31, 78, 3, 1281, 1242, 1226, 378, 845, 1112,
	378, 126, 378, 1661, 952, 388, 636, 628, 858, 1152,
	1213, 1055, 851, 834, 395, 32, 74, 860, 990, 76,
	126, 649, 786, 115, 116, 117, 104, 105, 1008, 126,
	787, 662, 79, 73, 126, 1094, 1095, 1804, 1342, 1759,
	1671, 1849, 386, 387, 1709, 1809, 1843, 1586, 75, 1786,
	1836, 1600, 1808, 1785, 1230, 8, 7, 460, 6, 1507,
	479, 483, 1629, 643, 1343, 946, 459, 81, 82, 83,
	84, 85, 86, 1560, 1561, 1228, 862, 357, 863, 945,
	33, 1559, 710, 67, 37, 38, 358, 1270, 115, 116,
	117, 1269, 1163, 1164, 355, 491, 101, 119, 120, 121,
	1162, 1749, 735, 734, 744, 745, 737, 738, 739, 740,
	741, 742, 743, 736, 96, 1196, 746, 679, 438, 457,
	444, 445, 442, 443, 706, 441, 440, 439, 352, 456,
	645, 644, 115, 116, 117, 446, 447, 364, 1407, 688,
	689, 1406, 677, 944, 1408, 1429, 1227, 1664, 1203, 1491,
	1620, 112, 690, 1788, 66, 1096, 691, 688, 689, 697,
	647, 699, 1471, 1618, 376, 1007, 380, 101, 93, 494,
	115, 116, 117, 374, 97, 1465, 343, 98, 99, 953,
	1266, 961, 1466, 962, 963, 1835, 1009, 1010, 1011, 958,
	1493, 650, 704, 696, 698, 685, 941, 938, 939, 705,
	937, 657, 680, 345, 346, 347, 1474, 362, 363, 369,
	683, 684, 1278, 359, 361, 370, 348, 349, 372, 371,
	957, 351, 350, 1473, 344, 354, 367, 678, 101, 109,
	1472, 681, 682, 948, 951, 955, 1737, 1834, 959, 1495,
	100, 1499, 1822, 1494, 1130, 1492, 1264, 1805, 702, 1768,
	1497, 1221, 1221, 126, 1823, 631, 956, 1566, 1285, 1496,
	646, 1860, 1862, 1221, 1153, 1345, 1347, 661, 692, 695,
	1190, 640, 1498, 1500, 485, 1475, 966, 378, 1727, 711,
	1454, 1265, 1190, 1517, 1516, 943, 1515, 694, 641, 342,
	118, 378, 378, 672, 673, 674, 675, 676, 1585, 1750,
	1229, 1784, 693, 758, 759, 1766, 1268, 942, 654, 1277,
	1650, 100, 1276, 707, 1558, 33, 34, 35, 67, 37,
	38, 1368, 1332, 1203, 115, 116, 117, 737, 738, 739,
	740, 741, 742, 743, 736, 71, 1311, 746, 1169, 1158,
	39, 64, 65, 111, 62, 1789, 1283, 1322, 368, 709,
	63, 1282, 1283, 1346, 838, 1319, 947, 1282, 771, 666,
	736, 746, 1779, 746, 1261, 32, 1403, 126, 988, 701,
	1263, 949, 100, 1108, 991, 717, 755, 757, 723, 51,
	68, 703, 651, 756, 652, 1004, 671, 653, 726, 66,
	1741, 935, 378, 1543, 726, 126, 1189, 126, 126, 1858,
	378, 686, 1859, 954, 1857, 103, 378, 770, 1189, 1728,
	1726, 775, 776, 777, 778, 779, 780, 781, 782, 774,
	785, 788, 788, 788, 794, 788, 788, 794, 788, 802,
	803, 804, 805, 806, 807, 808, 843, 809, 720, 718,
	864, 719, 812, 32, 660, 721, 814, 655, 1509, 828,
	930, 1079, 1771, 815, 89, 42, 44, 47, 46, 49,
	1427, 61, 789, 791, 793, 795, 797, 799, 800, 849,
	790, 792, 831, 796, 798, 1670, 801, 989, 1669, 758,
	759, 1591, 826, 992, 50, 70, 69, 758, 759, 59,
	60, 48, 670, 90, 816, 1079, 1262, 1329, 1260, 1029,
	739, 740, 741, 742, 743, 736, 1318, 1252, 746, 1193,
	115, 116, 117, 1027, 1028, 1026, 1194, 52, 53, 656,
	54, 55, 56, 57, 1837, 735, 734, 744, 745, 737,
	738, 739, 740, 741, 742, 743, 736, 1441, 126, 746,
	639, 1317, 922, 66, 1113, 1114, 1296, 1297, 1298, 1316,
	126, 1838, 931, 932, 1440, 1025, 1863, 110, 1233, 950,
	1840, 1248, 1249, 1250, 1577, 126, 663, 664, 724, 725,
	723, 126, 494, 1110, 126, 972, 1442, 126, 1520, 724,
	725, 723, 1304, 724, 725, 723, 726, 1511, 1839, 126,
	1828, 126, 1830, 1820, 724, 725, 723, 726, 115, 116,
	117, 726, 1047, 378, 378, 126, 378, 378, 126, 378,
	378, 1799, 726, 859, 1697, 68, 976, 1829, 975, 724,
	725, 723, 1864, 1667, 1638, 979, 1521, 981, 1522, 983,
	984, 985, 986, 1251, 1450, 1109, 642, 726, 1256, 1253,
	1244, 1254, 1247, 1438, 1243, 468, 725, 723, 1245, 1246,
	638, 1293, 993, 977, 724, 725, 723, 1046, 1468, 1023,
	928, 468, 1255, 726, 994, 995, 1048, 997, 998, 1733,
	1000, 1001, 726, 967, 75, 709, 709, 1732, 709, 709,
	378, 709, 709, 645, 644, 735, 734, 744, 745, 737,
	738, 739, 740, 741, 742, 743, 736, 1531, 484, 746,
	489, 1067, 1070, 724, 725, 723, 1542, 1080, 1598, 1017,
	1019, 1020, 1364, 378, 378, 1083, 1018, 1453, 1024, 1002,
	1397, 726, 1191, 1058, 126, 115, 116, 117, 1153, 1057,
	415, 414, 417, 418, 419, 420, 378, 1724, 1841, 416,
	421, 1724, 1782, 126, 1776, 468, 378, 1542, 1103, 774,
	126, 468, 126, 115, 116, 117, 1645, 1457, 1115, 722,
	126, 126, 1062, 1740, 115, 116, 117, 378, 1410, 1581,
	378, 1088, 1089, 1049, 1050, 115, 116, 117, 33, 1240,
	1133, 378, 378, 486, 487, 1724, 1767, 1063, 1064, 1059,
	1058, 1069, 1072, 1073, 467, 1133, 1127, 1724, 468, 1724,
	1739, 1724, 1723, 1411, 1123, 925, 1660, 1161, 1188, 1637,
	468, 1204, 1205, 1206, 1648, 468, 1087, 1583, 1582, 1090,
	1091, 734, 744, 745, 737, 738, 739, 740, 741, 742,
	743, 736, 1149, 1154, 746, 1154, 378, 1579, 1580, 1579,
	1578, 1364, 1148, 1121, 468, 1239, 1133, 468, 33, 1125,
	722, 468, 66, 1197, 1056, 1198, 1199, 1200, 1201, 1220,
	1219, 1335, 1156, 1151, 33, 1159, 126, 126, 126, 126,
	126, 1209, 1210, 1211, 1212, 1160, 126, 126, 1334, 1176,
	126, 925, 924, 871, 870, 1122, 1132, 461, 1238, 1371,
	1121, 1111, 77, 1092, 1155, 1714, 1155, 965, 856, 126,
	126, 126, 1157, 1470, 1153, 66, 1821, 1686, 1851, 1542,
	454, 1372, 1597, 126, 1656, 927, 126, 378, 1241, 1218,
	1570, 1056, 66, 1467, 923, 1415, 1232, 1214, 1237, 1215,
	1216, 1632, 1231, 1234, 1257, 1287, 1133, 1208, 66, 494,
	1672, 1291, 494, 744, 745, 737, 738, 739, 740, 741,
	742, 743, 736, 1173, 1121, 746, 1023, 1121, 1207, 127,
	91, 66, 127, 1676, 1447, 1286, 1446, 379, 112, 127,
	1546, 1547, 735, 734, 744, 745, 737, 738, 739, 740,
	741, 742, 743, 736, 1687, 1230, 746, 1673, 1674, 1675,
	1846, 1572, 1549, 1531, 1455, 1005, 1313, 379, 969, 1388,
	379, 127, 379, 126, 1389, 1552, 1551, 1677, 1678, 1386,
	1447, 126, 1385, 1384, 1387, 1024, 1390, 1299, 1142, 1143,
	127, 1138, 1141, 1142, 1143, 1139, 1825, 1140, 1144, 127,
	1807, 1546, 1547, 126, 127, 1523, 1353, 825, 474, 1310,
	1802, 1350, 460, 1649, 126, 126, 126, 126, 126, 1312,
	1362, 459, 475, 1357, 1378, 1361, 126, 1328, 1794, 1791,
	126, 1827, 1811, 126, 126, 1308, 1309, 126, 126, 126,
	1369, 1813, 1366, 1341, 1819, 829, 830, 477, 812, 476,
	1409, 1348, 378, 1818, 1763, 1349, 1326, 1351, 1761, 1451,
	964, 1416, 1412, 455, 1075, 1352, 1422, 1422, 1356, 1367,
	1365, 1446, 1398, 818, 1433, 849, 1400, 1426, 1076, 933,
	975, 1379, 1374, 1375, 1382, 819, 849, 849, 849, 849,
	849, 1391, 1373, 1396, 1430, 1431, 95, 1423, 869, 668,
	1404, 1401, 1149, 1380, 1381, 849, 1383, 107, 1773, 849,
	1772, 378, 1395, 1414, 1712, 1424, 1417, 1643, 1432, 1456,
	1434, 1435, 1436, 474, 1418, 1419, 1420, 1631, 1138, 1141,
	1142, 1143, 1139, 1595, 1140, 1144, 1106, 475, 1235, 126,
	968, 108, 1439, 1734, 122, 378, 126, 1113, 1114, 1681,
	1146, 1360, 1449, 1448, 462, 463, 465, 1832, 1831, 1359,
	471, 472, 477, 1816, 476, 378, 126, 1795, 735, 734,
	744, 745, 737, 738, 739, 740, 741, 742, 743, 736,
	1642, 466, 746, 77, 1641, 392, 1526, 1364, 1853, 1852,
	1853, 1323, 378, 1320, 1458, 839, 832, 1764, 1046, 1665,
	1107, 461, 75, 80, 72, 1, 353, 1093, 810, 1459,
	365, 1461, 1844, 113, 1601, 1683, 940, 1735, 1236, 1443,
	1224, 1489, 1179, 127, 1173, 1478, 1476, 1479, 1170, 378,
	88, 1480, 626, 87, 481, 700, 1178, 709, 1177, 126,
	1725, 1428, 1502, 1501, 1195, 1663, 1486, 379, 1571, 378,
	1425, 1770, 877, 875, 1058, 378, 378, 876, 874, 879,
	1057, 379, 379, 1378, 1532, 878, 873, 1006, 375, 1145,
	1488, 865, 1535, 1529, 833, 1259, 1258, 936, 126, 1584,
	1192, 1003, 360, 687, 1508, 356, 754, 1358, 1541, 1405,
	495, 488, 378, 1537, 378, 94, 378, 389, 1540, 1422,
	1422, 1422, 1817, 1550, 1563, 1792, 1790, 1760, 1554, 1708,
	1556, 1793, 1557, 1758, 1576, 1826, 1810, 1555, 1105, 821,
	1640, 1525, 1327, 1188, 783, 1536, 1562, 32, 1077, 1567,
	1568, 1569, 1592, 1565, 1564, 126, 126, 127, 848, 398,
	1016, 413, 410, 411, 1116, 1370, 1574, 1575, 728, 396,
	849, 1602, 378, 378, 378, 1588, 126, 390, 1587, 840,
	1137, 1135, 379, 1134, 1487, 127, 970, 127, 127, 852,
	379, 1589, 1590, 1548, 1544, 846, 379, 1120, 1267, 1464,
	470, 92, 1074, 1748, 1628, 1512, 469, 58, 36, 382,
	1803, 713, 1611, 478, 30, 29, 1607, 1608, 28, 23,
	22, 21, 20, 813, 1616, 735, 734, 744, 745, 737,
	738, 739, 740, 741, 742, 743, 736, 1639, 19, 746,
	25, 1487, 18, 17, 16, 106, 102, 45, 43, 41,
	40, 658, 27, 1644, 1378, 26, 1613, 1614, 15, 1615,
	14, 13, 1617, 378, 1619, 12, 11, 10, 1653, 9,
	5, 378, 124, 1412, 4, 716, 24, 772, 1060, 1061,
	1627, 2, 381, 0, 1173, 0, 1173, 1659, 1633, 1634,
	1635, 0, 0, 0, 1666, 0, 1668, 0, 378, 0,
	0, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 634, 1690, 1679, 0, 0, 1652,
	0, 1104, 0, 0, 0, 0, 0, 0, 127, 0,
	1689, 0, 1658, 648, 378, 378, 378, 126, 378, 1688,
	127, 0, 659, 0, 0, 0, 0, 665, 0, 378,
	0, 378, 1696, 0, 1706, 127, 0, 378, 1704, 0,
	0, 127, 0, 0, 127, 1535, 1717, 127, 1680, 1535,
	1713, 0, 0, 0, 1722, 1711, 1719, 0, 0, 127,
	0, 127, 1721, 1729, 0, 0, 0, 378, 126, 0,
	0, 1682, 0, 379, 379, 127, 379, 379, 127, 379,
	379, 0, 1730, 0, 1731, 0, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 0, 0, 1536, 0,
	32, 0, 1536, 1757, 0, 378, 0, 1700, 1702, 1703,
	1715, 1765, 0, 0, 1535, 1173, 0, 0, 378, 0,
	0, 378, 378, 0, 0, 0, 727, 0, 0, 0,
	1720, 0, 1781, 0, 32, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 1738, 0, 0, 378, 1787, 126,
	379, 0, 0, 1685, 0, 0, 1378, 1796, 0, 0,
	1742, 0, 389, 1800, 1801, 0, 0, 1536, 1806, 0,
	0, 784, 0, 0, 0, 1815, 1814, 0, 0, 0,
	0, 0, 0, 379, 379, 0, 0, 32, 0, 0,
	1824, 0, 0, 0, 127, 0, 0, 1774, 0, 0,
	820, 823, 378, 0, 0, 1626, 379, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 379, 0, 0, 0,
	127, 0, 127, 0, 0, 0, 0, 1850, 0, 0,
	127, 127, 0, 0, 1306, 1861, 0, 379, 1307, 0,
	379, 0, 0, 0, 0, 0, 667, 0, 0, 1314,
	1315, 379, 379, 0, 0, 1321, 0, 0, 1324, 1325,
	0, 0, 0, 0, 0, 0, 1331, 0, 424, 0,
	1333, 0, 0, 1336, 1337, 1338, 1339, 1340, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1842, 0, 0,
	0, 1625, 0, 1685, 1173, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 379, 735, 734, 744,
	745, 737, 738, 739, 740, 741, 742, 743, 736, 0,
	0, 746, 0, 0, 0, 377, 0, 0, 0, 0,
	1624, 0, 0, 1393, 1394, 0, 127, 127, 127, 127,
	127, 0, 0, 0, 0, 0, 127, 127, 0, 0,
	127, 0, 0, 0, 0, 496, 0, 0, 630, 1623,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	127, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 127, 379, 842, 0,
	0, 853, 0, 735, 734, 744, 745, 737, 738, 739,
	740, 741, 742, 743, 736, 0, 978, 746, 0, 0,
	0, 0, 0, 0, 1021, 0, 0, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 735, 734, 744, 745, 737, 738, 739, 740,
	741, 742, 743, 736, 0, 0, 746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1012, 1013, 1014,
	1015, 735, 734, 744, 745, 737, 738, 739, 740, 741,
	742, 743, 736, 127, 1084, 746, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1484, 1485, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 1065, 1066, 127, 127, 127, 127, 127, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	127, 872, 0, 127, 127, 0, 0, 127, 127, 127,
	0, 0, 0, 929, 0, 0, 0, 0, 0, 1481,
	0, 0, 379, 0, 0, 0, 0, 0, 960, 0,
	1538, 0, 0, 0, 853, 0, 1305, 971, 0, 735,
	734, 744, 745, 737, 738, 739, 740, 741, 742, 743,
	736, 1553, 980, 746, 982, 0, 735, 734, 744, 745,
	737, 738, 739, 740, 741, 742, 743, 736, 996, 1167,
	746, 999, 0, 0, 730, 0, 733, 0, 0, 0,
	0, 379, 747, 748, 749, 750, 751, 752, 753, 0,
	731, 732, 729, 735, 734, 744, 745, 737, 738, 739,
	740, 741, 742, 743, 736, 496, 0, 746, 0, 127,
	0, 0, 0, 0, 0, 379, 127, 0, 0, 712,
	714, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 379, 127, 0, 0, 0,
	0, 0, 1610, 0, 0, 0, 1612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1621, 1622, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 1300, 1301, 1302, 0, 0, 0, 0,
	0, 0, 1646, 1647, 0, 0, 1651, 0, 0, 379,
	0, 0, 0, 0, 0, 0, 1124, 0, 0, 127,
	0, 0, 0, 1128, 0, 1131, 0, 0, 0, 379,
	836, 0, 0, 0, 1150, 379, 379, 0, 496, 0,
	0, 0, 0, 0, 866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 379, 0, 379, 0, 379, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1330, 0, 0, 0, 0, 1701,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 127, 0, 0, 0,
	0, 0, 0, 0, 1354, 1355, 823, 0, 0, 0,
	0, 0, 379, 379, 379, 0, 127, 0, 0, 1271,
	1272, 1273, 1274, 1275, 0, 0, 0, 0, 0, 1279,
	1280, 0, 0, 1284, 0, 0, 0, 1744, 1745, 1746,
	1747, 0, 1751, 0, 1752, 1753, 1754, 0, 1755, 1756,
	0, 0, 0, 0, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1292, 0, 0, 1294,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 379, 0, 0, 0, 0, 0, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 496, 0, 496, 496, 0, 496, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 379, 0,
	0, 379, 0, 0, 0, 0, 0, 0, 0, 0,
	1482, 1483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1503, 1504, 0, 1505, 1506,
	425, 0, 0, 0, 379, 379, 379, 127, 379, 0,
	1513, 1514, 0, 0, 0, 0, 0, 0, 0, 379,
	0, 379, 0, 1854, 1855, 0, 0, 379, 1051, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1081, 0, 0, 1399, 0, 125,
	0, 0, 373, 0, 1510, 0, 0, 379, 127, 125,
	0, 1085, 1086, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 482, 1117, 0, 0, 0, 0, 1527,
	0, 125, 0, 0, 836, 379, 0, 496, 0, 0,
	0, 0, 1573, 0, 0, 0, 0, 0, 379, 0,
	125, 379, 379, 0, 0, 496, 0, 0, 496, 125,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 496,
	630, 0, 0, 0, 0, 0, 0, 379, 0, 127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1460, 0, 0, 0, 0, 1609, 0, 1463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 637, 0, 894, 0, 0, 0,
	0, 0, 379, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1524, 0, 0, 0, 0, 0, 0, 0,
	0, 389, 0, 0, 0, 1295, 0, 0, 1654, 0,
	0, 1655, 0, 0, 1657, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 0, 0, 0, 0, 0, 1691,
	1692, 1693, 1694, 1695, 0, 0, 0, 1698, 1699, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 895, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 1593, 1594,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1710, 389, 0, 1606,
	0, 908, 911, 912, 913, 914, 915, 916, 0, 917,
	918, 919, 920, 921, 896, 897, 898, 899, 880, 881,
	909, 1081, 883, 0, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 900, 901, 902, 903, 904, 905,
	906, 907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 125, 855, 1452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1847, 0,
	0, 0, 0, 1462, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1743, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 496, 125, 0,
	1081, 0, 0, 1539, 1519, 0, 0, 0, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 125, 1798, 0, 125, 0, 0, 974, 0, 0,
	496, 0, 496, 0, 637, 0, 0, 0, 0, 125,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1603, 1604, 1605, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 974, 0, 0, 0, 482, 482, 0, 0,
	482, 482, 482, 0, 0, 0, 1082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 0, 0, 482, 482, 482, 482, 482,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 496, 0, 0, 0, 0, 0, 0, 0, 1662,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 974,
	125, 0, 125, 0, 0, 0, 0, 0, 0, 0,
	125, 125, 0, 0, 0, 0, 1662, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1662, 1662, 1662, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1716, 0, 1718,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 125, 125, 125,
	125, 0, 0, 0, 0, 0, 125, 125, 0, 0,
	125, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1769, 0, 0, 0, 0, 0, 1288,
	1289, 125, 0, 0, 0, 0, 1777, 0, 0, 496,
	496, 0, 0, 125, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 482, 482, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 482, 0, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 482, 125, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 125, 125, 125, 125, 125, 0,
	0, 0, 0, 0, 0, 0, 1392, 0, 0, 0,
	125, 0, 0, 125, 125, 0, 0, 125, 1402, 974,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 598,
	0, 0, 551, 613, 524, 541, 622, 542, 545, 583,
	508, 564, 239, 539, 0, 528, 504, 535, 505, 526,
	553, 167, 557, 523, 600, 567, 612, 203, 125, 529,
	251, 585, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 619, 206, 574, 0,
	292, 225, 0, 0, 0, 555, 602, 562, 594, 550,
	584, 513, 573, 614, 540, 581, 615, 194, 155, 132,
	236, 293, 174, 0, 0, 0, 115, 116, 117, 0,
	1174, 1175, 0, 0, 0, 0, 0, 151, 0, 578,
	609, 537, 580, 582, 625, 503, 575, 0, 506, 509,
	621, 605, 532, 533, 1413, 1082, 0, 0, 0, 125,
	0, 554, 563, 591, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 572, 0, 0, 0, 510,
	507, 0, 0, 0, 0, 552, 0, 0, 0, 512,
	0, 531, 592, 0, 501, 179, 596, 604, 549, 329,
	608, 547, 546, 611, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 601, 527,
	536, 158, 534, 272, 248, 318, 571, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 522, 597, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 589, 624, 247, 273, 153, 320, 291, 517,
	521, 515, 516, 565, 566, 518, 616, 617, 618, 593,
	511, 0, 519, 520, 0, 599, 606, 607, 570, 128,
	139, 205, 620, 266, 175, 323, 502, 514, 163, 525,
	0, 0, 538, 543, 544, 556, 558, 559, 560, 561,
	569, 576, 577, 579, 586, 587, 588, 590, 595, 603,
	623, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	0, 212, 568, 610, 598, 0, 0, 551, 613, 524,
	541, 622, 542, 545, 583, 508, 564, 239, 539, 0,
	528, 504, 535, 505, 526, 553, 167, 557, 523, 600,
	567, 612, 203, 0, 529, 251, 585, 283, 157, 211,
	209, 305, 172, 168, 166, 156, 190, 216, 250, 301,
	244, 619, 206, 574, 0, 292, 225, 0, 0, 0,
	555, 602, 562, 594, 550, 584, 513, 573, 614, 540,
	581, 615, 194, 155, 132, 236, 293, 174, 0, 0,
	0, 115, 116, 117, 0, 1174, 1175, 0, 0, 0,
	0, 0, 151, 0, 578, 609, 537, 580, 582, 625,
	503, 575, 0, 506, 509, 621, 605, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 554, 563, 591, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	572, 0, 0, 0, 510, 507, 0, 0, 0, 0,
	552, 0, 0, 0, 512, 0, 531, 592, 0, 501,
	179, 596, 604, 549, 329, 608, 547, 546, 611, 263,
	0, 297, 183, 202, 146, 199, 129, 141, 0, 181,
	235, 270, 274, 601, 527, 536, 158, 534, 272, 248,
	318, 571, 252, 271, 207, 307, 264, 317, 330, 331,
	164, 229, 324, 302, 327, 339, 142, 161, 242, 298,
	321, 289, 224, 304, 198, 288, 134, 300, 315, 152,
	282, 0, 0, 0, 136, 313, 296, 222, 195, 196,
	135, 0, 268, 165, 177, 160, 238, 310, 311, 159,
	340, 143, 326, 138, 144, 325, 231, 306, 314, 223,
	215, 137, 312, 221, 214, 201, 171, 186, 261, 210,
	262, 187, 227, 226, 228, 0, 133, 0, 294, 322,
	341, 149, 522, 597, 303, 335, 338, 0, 265, 150,
	178, 170, 260, 176, 204, 334, 336, 337, 148, 258,
	184, 230, 145, 189, 290, 200, 208, 589, 624, 247,
	273, 153, 320, 291, 517, 521, 515, 516, 565, 566,
	518, 616, 617, 618, 593, 511, 0, 519, 520, 0,
	599, 606, 607, 570, 128, 139, 205, 620, 266, 175,
	323, 502, 514, 163, 525, 0, 0, 538, 543, 544,
	556, 558, 559, 560, 561, 569, 576, 577, 579, 586,
	587, 588, 590, 595, 603, 623, 130, 131, 140, 147,
	154, 162, 169, 173, 180, 185, 188, 191, 192, 193,
	197, 213, 217, 218, 219, 220, 232, 233, 234, 237,
	240, 241, 243, 245, 246, 249, 253, 254, 255, 256,
	257, 259, 267, 269, 275, 276, 277, 278, 279, 280,
	281, 284, 285, 286, 287, 295, 299, 308, 309, 319,
	328, 332, 182, 316, 333, 0, 212, 568, 610, 598,
	0, 0, 551, 613, 524, 541, 622, 542, 545, 583,
	508, 564, 239, 539, 0, 528, 504, 535, 505, 526,
	553, 167, 557, 523, 600, 567, 612, 203, 0, 529,
	251, 585, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 619, 206, 574, 0,
	292, 225, 0, 0, 0, 555, 602, 562, 594, 550,
	584, 513, 573, 614, 540, 581, 615, 194, 155, 132,
	236, 293, 174, 0, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 578,
	609, 537, 580, 582, 625, 503, 575, 0, 506, 509,
	621, 605, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 554, 563, 591, 548, 0, 0, 0, 0, 0,
	0, 1528, 0, 530, 0, 572, 0, 0, 0, 510,
	507, 0, 0, 0, 0, 552, 0, 0, 0, 512,
	0, 531, 592, 0, 501, 179, 596, 604, 549, 329,
	608, 547, 546, 611, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 601, 527,
	536, 158, 534, 272, 248, 318, 571, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 522, 597, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 589, 624, 247, 273, 153, 320, 291, 517,
	521, 515, 516, 565, 566, 518, 616, 617, 618, 593,
	511, 0, 519, 520, 0, 599, 606, 607, 570, 128,
	139, 205, 620, 266, 175, 323, 502, 514, 163, 525,
	0, 0, 538, 543, 544, 556, 558, 559, 560, 561,
	569, 576, 577, 579, 586, 587, 588, 590, 595, 603,
	623, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	0, 212, 568, 610, 598, 0, 0, 551, 613, 524,
	541, 622, 542, 545, 583, 508, 564, 239, 539, 0,
	528, 504, 535, 505, 526, 553, 167, 557, 523, 600,
	567, 612, 203, 0, 529, 251, 585, 283, 157, 211,
	209, 305, 172, 168, 166, 156, 190, 216, 250, 301,
	244, 619, 206, 574, 0, 292, 225, 0, 0, 0,
	555, 602, 562, 594, 550, 584, 513, 573, 614, 540,
	581, 615, 194, 155, 132, 236, 293, 174, 66, 0,
	0, 115, 116, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 578, 609, 537, 580, 582, 625,
	503, 575, 0, 506, 509, 621, 605, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 554, 563, 591, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	572, 0, 0, 0, 510, 507, 0, 0, 0, 0,
	552, 0, 0, 0, 512, 0, 531, 592, 0, 501,
	179, 596, 604, 549, 329, 608, 547, 546, 611, 263,
	0, 297, 183, 202, 146, 199, 129, 141, 0, 181,
	235, 270, 274, 601, 527, 536, 158, 534, 272, 248,
	318, 571, 252, 271, 207, 307, 264, 317, 330, 331,
	164, 229, 324, 302, 327, 339, 142, 161, 242, 298,
	321, 289, 224, 304, 198, 288, 134, 300, 315, 152,
	282, 0, 0, 0, 136, 313, 296, 222, 195, 196,
	135, 0, 268, 165, 177, 160, 238, 310, 311, 159,
	340, 143, 326, 138, 144, 325, 231, 306, 314, 223,
	215, 137, 312, 221, 214, 201, 171, 186, 261, 210,
	262, 187, 227, 226, 228, 0, 133, 0, 294, 322,
	341, 149, 522, 597, 303, 335, 338, 0, 265, 150,
	178, 170, 260, 176, 204, 334, 336, 337, 148, 258,
	184, 230, 145, 189, 290, 200, 208, 589, 624, 247,
	273, 153, 320, 291, 517, 521, 515, 516, 565, 566,
	518, 616, 617, 618, 593, 511, 0, 519, 520, 0,
	599, 606, 607, 570, 128, 139, 205, 620, 266, 175,
	323, 502, 514, 163, 525, 0, 0, 538, 543, 544,
	556, 558, 559, 560, 561, 569, 576, 577, 579, 586,
	587, 588, 590, 595, 603, 623, 130, 131, 140, 147,
	154, 162, 169, 173, 180, 185, 188, 191, 192, 193,
	197, 213, 217, 218, 219, 220, 232, 233, 234, 237,
	240, 241, 243, 245, 246, 249, 253, 254, 255, 256,
	257, 259, 267, 269, 275, 276, 277, 278, 279, 280,
	281, 284, 285, 286, 287, 295, 299, 308, 309, 319,
	328, 332, 182, 316, 333, 0, 212, 568, 610, 598,
	0, 0, 551, 613, 524, 541, 622, 542, 545, 583,
	508, 564, 239, 539, 0, 528, 504, 535, 505, 526,
	553, 167, 557, 523, 600, 567, 612, 203, 0, 529,
	251, 585, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 619, 206, 574, 0,
	292, 225, 0, 0, 0, 555, 602, 562, 594, 550,
	584, 513, 573, 614, 540, 581, 615, 194, 155, 132,
	236, 293, 174, 0, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 578,
	609, 537, 580, 582, 625, 503, 575, 0, 506, 509,
	621, 605, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 554, 563, 591, 548, 0, 0, 0, 0, 0,
	0, 1403, 0, 530, 0, 572, 0, 0, 0, 510,
	507, 0, 0, 0, 0, 552, 0, 0, 0, 512,
	0, 531, 592, 0, 501, 179, 596, 604, 549, 329,
	608, 547, 546, 611, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 601, 527,
	536, 158, 534, 272, 248, 318, 571, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 522, 597, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 589, 624, 247, 273, 153, 320, 291, 517,
	521, 515, 516, 565, 566, 518, 616, 617, 618, 593,
	511, 0, 519, 520, 0, 599, 606, 607, 570, 128,
	139, 205, 620, 266, 175, 323, 502, 514, 163, 525,
	0, 0, 538, 543, 544, 556, 558, 559, 560, 561,
	569, 576, 577, 579, 586, 587, 588, 590, 595, 603,
	623, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	0, 212, 568, 610, 598, 0, 0, 551, 613, 524,
	541, 622, 542, 545, 583, 508, 564, 239, 539, 0,
	528, 504, 535, 505, 526, 553, 167, 557, 523, 600,
	567, 612, 203, 0, 529, 251, 585, 283, 157, 211,
	209, 305, 172, 168, 166, 156, 190, 216, 250, 301,
	244, 619, 206, 574, 0, 292, 225, 0, 0, 0,
	555, 602, 562, 594, 550, 584, 513, 573, 614, 540,
	581, 615, 194, 155, 132, 236, 293, 174, 0, 0,
	0, 115, 116, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 578, 609, 537, 580, 582, 625,
	503, 575, 0, 506, 509, 621, 605, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 554, 563, 591, 548,
	0, 0, 0, 0, 0, 0, 1126, 0, 530, 0,
	572, 0, 0, 0, 510, 507, 0, 0, 0, 0,
	552, 0, 0, 0, 512, 0, 531, 592, 0, 501,
	179, 596, 604, 549, 329, 608, 547, 546, 611, 263,
	0, 297, 183, 202, 146, 199, 129, 141, 0, 181,
	235, 270, 274, 601, 527, 536, 158, 534, 272, 248,
	318, 571, 252, 271, 207, 307, 264, 317, 330, 331,
	164, 229, 324, 302, 327, 339, 142, 161, 242, 298,
	321, 289, 224, 304, 198, 288, 134, 300, 315, 152,
	282, 0, 0, 0, 136, 313, 296, 222, 195, 196,
	135, 0, 268, 165, 177, 160, 238, 310, 311, 159,
	340, 143, 326, 138, 144, 325, 231, 306, 314, 223,
	215, 137, 312, 221, 214, 201, 171, 186, 261, 210,
	262, 187, 227, 226, 228, 0, 133, 0, 294, 322,
	341, 149, 522, 597, 303, 335, 338, 0, 265, 150,
	178, 170, 260, 176, 204, 334, 336, 337, 148, 258,
	184, 230, 145, 189, 290, 200, 208, 589, 624, 247,
	273, 153, 320, 291, 517, 521, 515, 516, 565, 566,
	518, 616, 617, 618, 593, 511, 0, 519, 520, 0,
	599, 606, 607, 570, 128, 139, 205, 620, 266, 175,
	323, 502, 514, 163, 525, 0, 0, 538, 543, 544,
	556, 558, 559, 560, 561, 569, 576, 577, 579, 586,
	587, 588, 590, 595, 603, 623, 130, 131, 140, 147,
	154, 162, 169, 173, 180, 185, 188, 191, 192, 193,
	197, 213, 217, 218, 219, 220, 232, 233, 234, 237,
	240, 241, 243, 245, 246, 249, 253, 254, 255, 256,
	257, 259, 267, 269, 275, 276, 277, 278, 279, 280,
	281, 284, 285, 286, 287, 295, 299, 308, 309, 319,
	328, 332, 182, 316, 333, 0, 212, 568, 610, 598,
	0, 0, 551, 613, 524, 541, 622, 542, 545, 583,
	508, 564, 239, 539, 0, 528, 504, 535, 505, 526,
	553, 167, 557, 523, 600, 567, 612, 203, 0, 529,
	251, 585, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 619, 206, 574, 0,
	292, 225, 0, 0, 0, 555, 602, 562, 594, 550,
	584, 513, 573, 614, 540, 581, 615, 194, 155, 132,
	236, 293, 174, 0, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 578,
	609, 537, 580, 582, 625, 503, 575, 0, 506, 509,
	621, 605, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 554, 563, 591, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 572, 0, 0, 0, 510,
	507, 0, 0, 0, 0, 552, 0, 0, 0, 512,
	0, 531, 592, 0, 501, 179, 596, 604, 549, 329,
	608, 547, 546, 611, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 601, 527,
	536, 158, 534, 272, 248, 318, 571, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 522, 597, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 589, 624, 247, 273, 153, 320, 291, 517,
	521, 515, 516, 565, 566, 518, 616, 617, 618, 593,
	511, 0, 519, 520, 0, 599, 606, 607, 570, 128,
	139, 205, 620, 266, 175, 323, 502, 514, 163, 525,
	0, 0, 538, 543, 544, 556, 558, 559, 560, 561,
	569, 576, 577, 579, 586, 587, 588, 590, 595, 603,
	623, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	0, 212, 568, 610, 598, 0, 0, 551, 613, 524,
	541, 622, 542, 545, 583, 508, 564, 239, 539, 0,
	528, 504, 535, 505, 526, 553, 167, 557, 523, 600,
	567, 612, 203, 0, 529, 251, 585, 283, 157, 211,
	209, 305, 172, 168, 166, 156, 190, 216, 250, 301,
	244, 619, 206, 574, 0, 292, 225, 0, 0, 0,
	555, 602, 562, 594, 550, 584, 513, 573, 614, 540,
	581, 615, 194, 155, 132, 236, 293, 174, 0, 0,
	0, 115, 116, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 578, 609, 537, 580, 582, 625,
	503, 575, 0, 506, 509, 621, 605, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 554, 563, 591, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	572, 0, 0, 0, 510, 507, 0, 0, 0, 0,
	552, 0, 0, 0, 512, 0, 531, 592, 0, 501,
	179, 596, 604, 549, 329, 608, 547, 546, 611, 263,
	0, 297, 183, 202, 146, 199, 129, 141, 0, 181,
	235, 270, 274, 601, 527, 536, 158, 534, 272, 248,
	318, 571, 252, 271, 207, 307, 264, 317, 330, 331,
	164, 229, 324, 302, 327, 339, 142, 161, 242, 298,
	321, 289, 224, 304, 198, 288, 134, 300, 315, 152,
	282, 0, 0, 0, 136, 313, 296, 222, 195, 196,
	135, 0, 268, 165, 177, 160, 238, 310, 311, 159,
	340, 143, 326, 138, 499, 325, 231, 306, 314, 223,
	215, 137, 312, 221, 214, 201, 171, 186, 261, 210,
	262, 187, 227, 226, 228, 0, 133, 0, 294, 322,
	341, 149, 522, 597, 303, 335, 338, 0, 265, 150,
	178, 170, 260, 176, 204, 334, 336, 337, 148, 258,
	184, 500, 498, 493, 492, 200, 208, 589, 624, 247,
	273, 153, 320, 291, 517, 521, 515, 516, 565, 566,
	518, 616, 617, 618, 593, 511, 0, 519, 520, 0,
	599, 606, 607, 570, 128, 139, 205, 620, 266, 175,
	323, 502, 514, 163, 525, 0, 0, 538, 543, 544,
	556, 558, 559, 560, 561, 569, 576, 577, 579, 586,
	587, 588, 590, 595, 603, 623, 130, 131, 140, 147,
	154, 162, 169, 173, 180, 185, 188, 191, 192, 193,
	197, 213, 217, 218, 219, 220, 232, 233, 234, 237,
	240, 241, 243, 245, 246, 249, 253, 254, 255, 256,
	257, 259, 267, 269, 275, 276, 277, 278, 279, 280,
	281, 284, 285, 286, 287, 295, 299, 308, 309, 319,
	328, 332, 182, 316, 333, 0, 212, 568, 610, 598,
	0, 0, 551, 613, 524, 541, 622, 542, 545, 583,
	508, 564, 239, 539, 0, 528, 504, 535, 505, 526,
	553, 167, 557, 523, 600, 567, 612, 203, 0, 529,
	251, 585, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 619, 206, 574, 0,
	292, 225, 0, 0, 0, 555, 602, 562, 594, 550,
	584, 513, 573, 614, 540, 581, 615, 194, 155, 132,
	236, 293, 174, 0, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 578,
	609, 537, 580, 582, 625, 503, 575, 0, 506, 509,
	621, 605, 532, 533, 0, 0, 0, 0, 0, 0,
	0, 554, 563, 591, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 530, 0, 572, 0, 0, 0, 510,
	507, 0, 0, 0, 0, 552, 0, 0, 0, 512,
	0, 531, 592, 0, 501, 179, 596, 604, 549, 329,
	608, 547, 546, 611, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 601, 527,
	536, 158, 534, 272, 248, 318, 571, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 857, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 499,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 522, 597, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 500, 498, 493, 492,
	200, 208, 589, 624, 247, 273, 153, 320, 291, 517,
	521, 515, 516, 565, 566, 518, 616, 617, 618, 593,
	511, 0, 519, 520, 0, 599, 606, 607, 570, 128,
	139, 205, 620, 266, 175, 323, 502, 514, 163, 525,
	0, 0, 538, 543, 544, 556, 558, 559, 560, 561,
	569, 576, 577, 579, 586, 587, 588, 590, 595, 603,
	623, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	0, 212, 568, 610, 598, 0, 0, 551, 613, 524,
	541, 622, 542, 545, 583, 508, 564, 239, 539, 0,
	528, 504, 535, 505, 526, 553, 167, 557, 523, 600,
	567, 612, 203, 0, 529, 251, 585, 283, 157, 211,
	209, 305, 172, 168, 166, 156, 190, 216, 250, 301,
	244, 619, 206, 574, 0, 292, 225, 0, 0, 0,
	555, 602, 562, 594, 550, 584, 513, 573, 614, 540,
	581, 615, 194, 155, 132, 236, 293, 174, 0, 0,
	0, 115, 116, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 151, 0, 578, 609, 537, 580, 582, 625,
	503, 575, 0, 506, 509, 621, 605, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 554, 563, 591, 548,
	0, 0, 0, 0, 0, 0, 0, 0, 530, 0,
	572, 0, 0, 0, 510, 507, 0, 0, 0, 0,
	552, 0, 0, 0, 512, 0, 531, 592, 0, 501,
	179, 596, 604, 549, 329, 608, 547, 546, 611, 263,
	0, 297, 183, 202, 146, 199, 129, 141, 0, 181,
	235, 270, 274, 601, 527, 536, 158, 534, 272, 248,
	318, 571, 252, 271, 207, 307, 264, 317, 330, 331,
	164, 229, 324, 302, 327, 339, 142, 161, 242, 298,
	321, 289, 224, 304, 198, 288, 134, 300, 490, 152,
	282, 0, 0, 0, 136, 313, 296, 222, 195, 196,
	135, 0, 268, 165, 177, 160, 238, 310, 311, 159,
	340, 143, 326, 138, 499, 325, 231, 306, 314, 223,
	215, 137, 312, 221, 214, 201, 171, 186, 261, 210,
	262, 187, 227, 226, 228, 0, 133, 0, 294, 322,
	341, 149, 522, 597, 303, 335, 338, 0, 265, 150,
	178, 170, 260, 176, 204, 334, 336, 337, 148, 258,
	184, 500, 498, 493, 492, 200, 208, 589, 624, 247,
	273, 153, 320, 291, 517, 521, 515, 516, 565, 566,
	518, 616, 617, 618, 593, 511, 0, 519, 520, 0,
	599, 606, 607, 570, 128, 139, 205, 620, 266, 175,
	323, 502, 514, 163, 525, 0, 0, 538, 543, 544,
	556, 558, 559, 560, 561, 569, 576, 577, 579, 586,
	587, 588, 590, 595, 603, 623, 130, 131, 140, 147,
	154, 162, 169, 173, 180, 185, 188, 191, 192, 193,
	197, 213, 217, 218, 219, 220, 232, 233, 234, 237,
	240, 241, 243, 245, 246, 249, 253, 254, 255, 256,
	257, 259, 267, 269, 275, 276, 277, 278, 279, 280,
	281, 284, 285, 286, 287, 295, 299, 308, 309, 319,
	328, 332, 182, 316, 333, 239, 212, 568, 1053, 0,
	394, 0, 0, 0, 167, 0, 393, 0, 0, 0,
	203, 0, 1054, 251, 0, 283, 157, 211, 209, 305,
	172, 168, 166, 156, 190, 216, 250, 301, 244, 437,
	206, 0, 0, 292, 225, 0, 0, 0, 0, 0,
	428, 429, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 155, 132, 236, 293, 174, 66, 0, 0, 115,
	116, 117, 415, 414, 417, 418, 419, 420, 0, 0,
	151, 416, 421, 422, 423, 0, 0, 0, 0, 391,
	408, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 480, 0, 0, 0, 451, 0,
	407, 0, 0, 400, 401, 403, 402, 404, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 450,
	0, 0, 329, 0, 0, 448, 0, 263, 0, 297,
	183, 202, 146, 199, 129, 141, 0, 181, 235, 270,
	274, 0, 0, 0, 158, 0, 272, 248, 318, 0,
	252, 271, 207, 307, 264, 317, 330, 331, 164, 229,
	324, 302, 327, 339, 142, 161, 242, 298, 321, 289,
	224, 304, 198, 288, 134, 300, 315, 152, 282, 0,
	0, 0, 136, 313, 296, 222, 195, 196, 135, 0,
	268, 165, 177, 160, 238, 310, 311, 159, 340, 143,
	326, 138, 144, 325, 231, 306, 314, 223, 215, 137,
	312, 221, 214, 201, 171, 186, 261, 210, 262, 187,
	227, 226, 228, 0, 133, 0, 294, 322, 341, 149,
	0, 0, 303, 335, 338, 0, 265, 150, 178, 170,
	260, 176, 204, 334, 336, 337, 148, 258, 184, 230,
	145, 189, 290, 200, 208, 0, 0, 247, 273, 153,
	320, 291, 438, 449, 444, 445, 442, 443, 0, 441,
	440, 439, 452, 430, 431, 432, 433, 435, 0, 446,
	447, 434, 128, 139, 205, 0, 266, 175, 323, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 131, 140, 147, 154, 162,
	169, 173, 180, 185, 188, 191, 192, 193, 197, 213,
	217, 218, 219, 220, 232, 233, 234, 237, 240, 241,
	243, 245, 246, 249, 253, 254, 255, 256, 257, 259,
	267, 269, 275, 276, 277, 278, 279, 280, 281, 284,
	285, 286, 287, 295, 299, 308, 309, 319, 328, 332,
	182, 316, 333, 239, 212, 0, 0, 0, 394, 0,
	0, 0, 167, 0, 393, 0, 0, 0, 203, 0,
	0, 251, 0, 283, 157, 211, 209, 305, 172, 168,
	166, 156, 190, 216, 250, 301, 244, 437, 206, 0,
	0, 292, 225, 0, 0, 0, 0, 0, 428, 429,
	0, 0, 0, 0, 0, 0, 1165, 0, 194, 155,
	132, 236, 293, 174, 66, 0, 0, 115, 116, 117,
	415, 414, 417, 418, 419, 420, 0, 0, 151, 416,
	421, 422, 423, 1166, 0, 0, 0, 391, 408, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	405, 406, 0, 0, 0, 0, 451, 0, 407, 0,
	0, 400, 401, 403, 402, 404, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 450, 0, 0,
	329, 0, 0, 448, 0, 263, 0, 297, 183, 202,
	146, 199, 129, 141, 0, 181, 235, 270, 274, 0,
	0, 0, 158, 0, 272, 248, 318, 0, 252, 271,
	207, 307, 264, 317, 330, 331, 164, 229, 324, 302,
	327, 339, 142, 161, 242, 298, 321, 289, 224, 304,
	198, 288, 134, 300, 315, 152, 282, 0, 0, 0,
	136, 313, 296, 222, 195, 196, 135, 0, 268, 165,
	177, 160, 238, 310, 311, 159, 340, 143, 326, 138,
	144, 325, 231, 306, 314, 223, 215, 137, 312, 221,
	214, 201, 171, 186, 261, 210, 262, 187, 227, 226,
	228, 0, 133, 0, 294, 322, 341, 149, 0, 0,
	303, 335, 338, 0, 265, 150, 178, 170, 260, 176,
	204, 334, 336, 337, 148, 258, 184, 230, 145, 189,
	290, 200, 208, 0, 0, 247, 273, 153, 320, 291,
	438, 449, 444, 445, 442, 443, 0, 441, 440, 439,
	452, 430, 431, 432, 433, 435, 0, 446, 447, 434,
	128, 139, 205, 0, 266, 175, 323, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 154, 162, 169, 173,
	180, 185, 188, 191, 192, 193, 197, 213, 217, 218,
	219, 220, 232, 233, 234, 237, 240, 241, 243, 245,
	246, 249, 253, 254, 255, 256, 257, 259, 267, 269,
	275, 276, 277, 278, 279, 280, 281, 284, 285, 286,
	287, 295, 299, 308, 309, 319, 328, 332, 182, 316,
	333, 239, 212, 0, 0, 0, 394, 0, 0, 0,
	167, 0, 393, 0, 0, 0, 203, 0, 0, 251,
	0, 283, 157, 211, 209, 305, 172, 168, 166, 156,
	190, 216, 250, 301, 244, 437, 206, 0, 0, 292,
	225, 0, 0, 0, 0, 0, 428, 429, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 155, 132, 236,
	293, 174, 66, 0, 468, 115, 116, 117, 415, 414,
	417, 418, 419, 420, 0, 0, 151, 416, 421, 422,
	423, 0, 0, 0, 0, 391, 408, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 405, 406,
	0, 0, 0, 0, 451, 0, 407, 0, 0, 400,
	401, 403, 402, 404, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 450, 0, 0, 329, 0,
	0, 448, 0, 263, 0, 297, 183, 202, 146, 199,
	129, 141, 0, 181, 235, 270, 274, 0, 0, 0,
	158, 0, 272, 248, 318, 0, 252, 271, 207, 307,
	264, 317, 330, 331, 164, 229, 324, 302, 327, 339,
	142, 161, 242, 298, 321, 289, 224, 304, 198, 288,
	134, 300, 315, 152, 282, 0, 0, 0, 136, 313,
	296, 222, 195, 196, 135, 0, 268, 165, 177, 160,
	238, 310, 311, 159, 340, 143, 326, 138, 144, 325,
	231, 306, 314, 223, 215, 137, 312, 221, 214, 201,
	171, 186, 261, 210, 262, 187, 227, 226, 228, 0,
	133, 0, 294, 322, 341, 149, 0, 0, 303, 335,
	338, 0, 265, 150, 178, 170, 260, 176, 204, 334,
	336, 337, 148, 258, 184, 230, 145, 189, 290, 200,
	208, 0, 0, 247, 273, 153, 320, 291, 438, 449,
	444, 445, 442, 443, 0, 441, 440, 439, 452, 430,
	431, 432, 433, 435, 0, 446, 447, 434, 128, 139,
	205, 0, 266, 175, 323, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 131, 140, 147, 154, 162, 169, 173, 180, 185,
	188, 191, 192, 193, 197, 213, 217, 218, 219, 220,
	232, 233, 234, 237, 240, 241, 243, 245, 246, 249,
	253, 254, 255, 256, 257, 259, 267, 269, 275, 276,
	277, 278, 279, 280, 281, 284, 285, 286, 287, 295,
	299, 308, 309, 319, 328, 332, 182, 316, 333, 239,
	212, 0, 0, 0, 394, 0, 0, 0, 167, 0,
	393, 0, 0, 0, 203, 0, 0, 251, 0, 283,
	157, 211, 209, 305, 172, 168, 166, 156, 190, 216,
	250, 301, 244, 437, 206, 0, 0, 292, 225, 0,
	0, 0, 0, 0, 428, 429, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 155, 132, 236, 293, 174,
	66, 0, 0, 115, 116, 117, 415, 414, 417, 418,
	419, 420, 0, 0, 151, 416, 421, 422, 423, 0,
	0, 0, 0, 391, 408, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 480, 0,
	0, 0, 451, 0, 407, 0, 0, 400, 401, 403,
	402, 404, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 450, 0, 0, 329, 0, 0, 448,
	0, 263, 0, 297, 183, 202, 146, 199, 129, 141,
	0, 181, 235, 270, 274, 0, 0, 0, 158, 0,
	272, 248, 318, 0, 252, 271, 207, 307, 264, 317,
	330, 331, 164, 229, 324, 302, 327, 339, 142, 161,
	242, 298, 321, 289, 224, 304, 198, 288, 134, 300,
	315, 152, 282, 0, 0, 0, 136, 313, 296, 222,
	195, 196, 135, 0, 268, 165, 177, 160, 238, 310,
	311, 159, 340, 143, 326, 138, 144, 325, 231, 306,
	314, 223, 215, 137, 312, 221, 214, 201, 171, 186,
	261, 210, 262, 187, 227, 226, 228, 0, 133, 0,
	294, 322, 341, 149, 0, 0, 303, 335, 338, 0,
	265, 150, 178, 170, 260, 176, 204, 334, 336, 337,
	148, 258, 184, 230, 145, 189, 290, 200, 208, 0,
	0, 247, 273, 153, 320, 291, 438, 449, 444, 445,
	442, 443, 0, 441, 440, 439, 452, 430, 431, 432,
	433, 435, 0, 446, 447, 434, 128, 139, 205, 0,
	266, 175, 323, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 131,
	140, 147, 154, 162, 169, 173, 180, 185, 188, 191,
	192, 193, 197, 213, 217, 218, 219, 220, 232, 233,
	234, 237, 240, 241, 243, 245, 246, 249, 253, 254,
	255, 256, 257, 259, 267, 269, 275, 276, 277, 278,
	279, 280, 281, 284, 285, 286, 287, 295, 299, 308,
	309, 319, 328, 332, 182, 316, 333, 239, 212, 0,
	0, 0, 394, 0, 0, 0, 167, 0, 393, 0,
	0, 0, 203, 0, 0, 251, 0, 283, 157, 211,
	209, 305, 172, 168, 166, 156, 190, 216, 250, 301,
	244, 437, 206, 0, 0, 292, 225, 0, 0, 0,
	0, 0, 428, 429, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 155, 132, 236, 293, 174, 66, 0,
	0, 115, 116, 117, 415, 1071, 417, 418, 419, 420,
	0, 0, 151, 416, 421, 422, 423, 0, 0, 0,
	0, 391, 408, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 405, 406, 480, 0, 0, 0,
	451, 0, 407, 0, 0, 400, 401, 403, 402, 404,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 450, 0, 0, 329, 0, 0, 448, 0, 263,
	0, 297, 183, 202, 146, 199, 129, 141, 0, 181,
	235, 270, 274, 0, 0, 0, 158, 0, 272, 248,
	318, 0, 252, 271, 207, 307, 264, 317, 330, 331,
	164, 229, 324, 302, 327, 339, 142, 161, 242, 298,
	321, 289, 224, 304, 198, 288, 134, 300, 315, 152,
	282, 0, 0, 0, 136, 313, 296, 222, 195, 196,
	135, 0, 268, 165, 177, 160, 238, 310, 311, 159,
	340, 143, 326, 138, 144, 325, 231, 306, 314, 223,
	215, 137, 312, 221, 214, 201, 171, 186, 261, 210,
	262, 187, 227, 226, 228, 0, 133, 0, 294, 322,
	341, 149, 0, 0, 303, 335, 338, 0, 265, 150,
	178, 170, 260, 176, 204, 334, 336, 337, 148, 258,
	184, 230, 145, 189, 290, 200, 208, 0, 0, 247,
	273, 153, 320, 291, 438, 449, 444, 445, 442, 443,
	0, 441, 440, 439, 452, 430, 431, 432, 433, 435,
	0, 446, 447, 434, 128, 139, 205, 0, 266, 175,
	323, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 131, 140, 147,
	154, 162, 169, 173, 180, 185, 188, 191, 192, 193,
	197, 213, 217, 218, 219, 220, 232, 233, 234, 237,
	240, 241, 243, 245, 246, 249, 253, 254, 255, 256,
	257, 259, 267, 269, 275, 276, 277, 278, 279, 280,
	281, 284, 285, 286, 287, 295, 299, 308, 309, 319,
	328, 332, 182, 316, 333, 239, 212, 0, 0, 0,
	394, 0, 0, 0, 167, 0, 393, 0, 0, 0,
	203, 0, 0, 251, 0, 283, 157, 211, 209, 305,
	172, 168, 166, 156, 190, 216, 250, 301, 244, 437,
	206, 0, 0, 292, 225, 0, 0, 0, 0, 0,
	428, 429, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 155, 132, 236, 293, 174, 66, 0, 0, 115,
	116, 117, 415, 1068, 417, 418, 419, 420, 0, 0,
	151, 416, 421, 422, 423, 0, 0, 0, 0, 391,
	408, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 405, 406, 480, 0, 0, 0, 451, 0,
	407, 0, 0, 400, 401, 403, 402, 404, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 450,
	0, 0, 329, 0, 0, 448, 0, 263, 0, 297,
	183, 202, 146, 199, 129, 141, 0, 181, 235, 270,
	274, 0, 0, 0, 158, 0, 272, 248, 318, 0,
	252, 271, 207, 307, 264, 317, 330, 331, 164, 229,
	324, 302, 327, 339, 142, 161, 242, 298, 321, 289,
	224, 304, 198, 288, 134, 300, 315, 152, 282, 0,
	0, 0, 136, 313, 296, 222, 195, 196, 135, 0,
	268, 165, 177, 160, 238, 310, 311, 159, 340, 143,
	326, 138, 144, 325, 231, 306, 314, 223, 215, 137,
	312, 221, 214, 201, 171, 186, 261, 210, 262, 187,
	227, 226, 228, 0, 133, 0, 294, 322, 341, 149,
	0, 0, 303, 335, 338, 0, 265, 150, 178, 170,
	260, 176, 204, 334, 336, 337, 148, 258, 184, 230,
	145, 189, 290, 200, 208, 0, 0, 247, 273, 153,
	320, 291, 438, 449, 444, 445, 442, 443, 0, 441,
	440, 439, 452, 430, 431, 432, 433, 435, 0, 446,
	447, 434, 128, 139, 205, 0, 266, 175, 323, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 131, 140, 147, 154, 162,
	169, 173, 180, 185, 188, 191, 192, 193, 197, 213,
	217, 218, 219, 220, 232, 233, 234, 237, 240, 241,
	243, 245, 246, 249, 253, 254, 255, 256, 257, 259,
	267, 269, 275, 276, 277, 278, 279, 280, 281, 284,
	285, 286, 287, 295, 299, 308, 309, 319, 328, 332,
	182, 316, 333, 461, 212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 394, 0, 0, 0, 167, 0, 393, 0, 0,
	0, 203, 0, 0, 251, 0, 283, 157, 211, 209,
	305, 172, 168, 166, 156, 190, 216, 250, 301, 244,
	437, 206, 0, 0, 292, 225, 0, 0, 0, 0,
	0, 428, 429, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 155, 132, 236, 293, 174, 66, 0, 0,
	115, 116, 117, 415, 414, 417, 418, 419, 420, 0,
	0, 151, 416, 421, 422, 423, 0, 0, 0, 0,
	391, 408, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 405, 406, 0, 0, 0, 0, 451,
	0, 407, 0, 0, 400, 401, 403, 402, 404, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	450, 0, 0, 329, 0, 0, 448, 0, 263, 0,
	297, 183, 202, 146, 199, 129, 141, 0, 181, 235,
	270, 274, 0, 0, 0, 158, 0, 272, 248, 318,
	0, 252, 271, 207, 307, 264, 317, 330, 331, 164,
	229, 324, 302, 327, 339, 142, 161, 242, 298, 321,
	289, 224, 304, 198, 288, 134, 300, 315, 152, 282,
	0, 0, 0, 136, 313, 296, 222, 195, 196, 135,
	0, 268, 165, 177, 160, 238, 310, 311, 159, 340,
	143, 326, 138, 144, 325, 231, 306, 314, 223, 215,
	137, 312, 221, 214, 201, 171, 186, 261, 210, 262,
	187, 227, 226, 228, 0, 133, 0, 294, 322, 341,
	149, 0, 0, 303, 335, 338, 0, 265, 150, 178,
	170, 260, 176, 204, 334, 336, 337, 148, 258, 184,
	230, 145, 189, 290, 200, 208, 0, 0, 247, 273,
	153, 320, 291, 438, 449, 444, 445, 442, 443, 0,
	441, 440, 439, 452, 430, 431, 432, 433, 435, 0,
	446, 447, 434, 128, 139, 205, 0, 266, 175, 323,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 140, 147, 154,
	162, 169, 173, 180, 185, 188, 191, 192, 193, 197,
	213, 217, 218, 219, 220, 232, 233, 234, 237, 240,
	241, 243, 245, 246, 249, 253, 254, 255, 256, 257,
	259, 267, 269, 275, 276, 277, 278, 279, 280, 281,
	284, 285, 286, 287, 295, 299, 308, 309, 319, 328,
	332, 182, 316, 333, 239, 212, 0, 0, 0, 394,
	0, 0, 0, 167, 0, 393, 0, 0, 0, 203,
	0, 0, 251, 0, 283, 157, 211, 209, 305, 172,
	168, 166, 156, 190, 216, 250, 301, 244, 437, 206,
	0, 0, 292, 225, 0, 0, 0, 0, 0, 428,
	429, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	155, 132, 236, 293, 174, 66, 0, 0, 115, 116,
	117, 415, 414, 417, 418, 419, 420, 0, 0, 151,
	416, 421, 422, 423, 0, 0, 0, 0, 391, 408,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 405, 406, 0, 0, 0, 0, 451, 0, 407,
	0, 0, 400, 401, 403, 402, 404, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 450, 0,
	0, 329, 0, 0, 448, 0, 263, 0, 297, 183,
	202, 146, 199, 129, 141, 0, 181, 235, 270, 274,
	0, 0, 0, 158, 0, 272, 248, 318, 0, 252,
	271, 207, 307, 264, 317, 330, 331, 164, 229, 324,
	302, 327, 339, 142, 161, 242, 298, 321, 289, 224,
	304, 198, 288, 134, 300, 315, 152, 282, 0, 0,
	0, 136, 313, 296, 222, 195, 196, 135, 0, 268,
	165, 177, 160, 238, 310, 311, 159, 340, 143, 326,
	138, 144, 325, 231, 306, 314, 223, 215, 137, 312,
	221, 214, 201, 171, 186, 261, 210, 262, 187, 227,
	226, 228, 0, 133, 0, 294, 322, 341, 149, 0,
	0, 303, 335, 338, 0, 265, 150, 178, 170, 260,
	176, 204, 334, 336, 337, 148, 258, 184, 230, 145,
	189, 290, 200, 208, 0, 0, 247, 273, 153, 320,
	291, 438, 449, 444, 445, 442, 443, 0, 441, 440,
	439, 452, 430, 431, 432, 433, 435, 0, 446, 447,
	434, 128, 139, 205, 0, 266, 175, 323, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 140, 147, 154, 162, 169,
	173, 180, 185, 188, 191, 192, 193, 197, 213, 217,
	218, 219, 220, 232, 233, 234, 237, 240, 241, 243,
	245, 246, 249, 253, 254, 255, 256, 257, 259, 267,
	269, 275, 276, 277, 278, 279, 280, 281, 284, 285,
	286, 287, 295, 299, 308, 309, 319, 328, 332, 182,
	316, 333, 239, 212, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 203, 0, 0,
	251, 0, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 437, 206, 0, 0,
	292, 225, 0, 0, 0, 0, 0, 428, 429, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 155, 132,
	236, 293, 174, 66, 0, 0, 115, 116, 117, 415,
	414, 417, 418, 419, 420, 0, 0, 151, 416, 421,
	422, 423, 0, 0, 0, 0, 0, 408, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 405,
	406, 0, 0, 0, 0, 451, 0, 407, 0, 0,
	400, 401, 403, 402, 404, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 450, 0, 0, 329,
	0, 0, 448, 0, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 0, 0,
	0, 158, 0, 272, 248, 318, 1848, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 0, 0, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 0, 0, 247, 273, 153, 320, 291, 438,
	449, 444, 445, 442, 443, 0, 441, 440, 439, 452,
	430, 431, 432, 433, 435, 0, 446, 447, 434, 128,
	139, 205, 0, 266, 175, 323, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	239, 212, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 203, 0, 0, 251, 0,
	283, 157, 211, 209, 305, 172, 168, 166, 156, 190,
	216, 250, 301, 244, 437, 206, 0, 0, 292, 225,
	0, 0, 0, 0, 0, 428, 429, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 155, 132, 236, 293,
	174, 66, 0, 468, 115, 116, 117, 415, 414, 417,
	418, 419, 420, 0, 0, 151, 416, 421, 422, 423,
	0, 0, 0, 0, 0, 408, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 405, 406, 0,
	0, 0, 0, 451, 0, 407, 0, 0, 400, 401,
	403, 402, 404, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 450, 0, 0, 329, 0, 0,
	448, 0, 263, 0, 297, 183, 202, 146, 199, 129,
	141, 0, 181, 235, 270, 274, 0, 0, 0, 158,
	0, 272, 248, 318, 0, 252, 271, 207, 307, 264,
	317, 330, 331, 164, 229, 324, 302, 327, 339, 142,
	161, 242, 298, 321, 289, 224, 304, 198, 288, 134,
	300, 315, 152, 282, 0, 0, 0, 136, 313, 296,
	222, 195, 196, 135, 0, 268, 165, 177, 160, 238,
	310, 311, 159, 340, 143, 326, 138, 144, 325, 231,
	306, 314, 223, 215, 137, 312, 221, 214, 201, 171,
	186, 261, 210, 262, 187, 227, 226, 228, 0, 133,
	0, 294, 322, 341, 149, 0, 0, 303, 335, 338,
	0, 265, 150, 178, 170, 260, 176, 204, 334, 336,
	337, 148, 258, 184, 230, 145, 189, 290, 200, 208,
	0, 0, 247, 273, 153, 320, 291, 438, 449, 444,
	445, 442, 443, 0, 441, 440, 439, 452, 430, 431,
	432, 433, 435, 0, 446, 447, 434, 128, 139, 205,
	0, 266, 175, 323, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	131, 140, 147, 154, 162, 169, 173, 180, 185, 188,
	191, 192, 193, 197, 213, 217, 218, 219, 220, 232,
	233, 234, 237, 240, 241, 243, 245, 246, 249, 253,
	254, 255, 256, 257, 259, 267, 269, 275, 276, 277,
	278, 279, 280, 281, 284, 285, 286, 287, 295, 299,
	308, 309, 319, 328, 332, 182, 316, 333, 239, 212,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 203, 0, 0, 251, 0, 283, 157,
	211, 209, 305, 172, 168, 166, 156, 190, 216, 250,
	301, 244, 437, 206, 0, 0, 292, 225, 0, 0,
	0, 0, 0, 428, 429, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 155, 132, 236, 293, 174, 66,
	0, 0, 115, 116, 117, 415, 414, 417, 418, 419,
	420, 0, 0, 151, 416, 421, 422, 423, 0, 0,
	0, 0, 0, 408, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 405, 406, 0, 0, 0,
	0, 451, 0, 407, 0, 0, 400, 401, 403, 402,
	404, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 450, 0, 0, 329, 0, 0, 448, 0,
	263, 0, 297, 183, 202, 146, 199, 129, 141, 0,
	181, 235, 270, 274, 0, 0, 0, 158, 0, 272,
	248, 318, 0, 252, 271, 207, 307, 264, 317, 330,
	331, 164, 229, 324, 302, 327, 339, 142, 161, 242,
	298, 321, 289, 224, 304, 198, 288, 134, 300, 315,
	152, 282, 0, 0, 0, 136, 313, 296, 222, 195,
	196, 135, 0, 268, 165, 177, 160, 238, 310, 311,
	159, 340, 143, 326, 138, 144, 325, 231, 306, 314,
	223, 215, 137, 312, 221, 214, 201, 171, 186, 261,
	210, 262, 187, 227, 226, 228, 0, 133, 0, 294,
	322, 341, 149, 0, 0, 303, 335, 338, 0, 265,
	150, 178, 170, 260, 176, 204, 334, 336, 337, 148,
	258, 184, 230, 145, 189, 290, 200, 208, 0, 0,
	247, 273, 153, 320, 291, 438, 449, 444, 445, 442,
	443, 0, 441, 440, 439, 452, 430, 431, 432, 433,
	435, 0, 446, 447, 434, 128, 139, 205, 0, 266,
	175, 323, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 140,
	147, 154, 162, 169, 173, 180, 185, 188, 191, 192,
	193, 197, 213, 217, 218, 219, 220, 232, 233, 234,
	237, 240, 241, 243, 245, 246, 249, 253, 254, 255,
	256, 257, 259, 267, 269, 275, 276, 277, 278, 279,
	280, 281, 284, 285, 286, 287, 295, 299, 308, 309,
	319, 328, 332, 182, 316, 333, 239, 212, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 203, 0, 0, 251, 0, 283, 157, 211, 209,
	305, 172, 168, 166, 156, 190, 216, 250, 301, 244,
	0, 206, 0, 0, 292, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 155, 132, 236, 293, 174, 0, 0, 0,
	115, 116, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 735,
	734, 744, 745, 737, 738, 739, 740, 741, 742, 743,
	736, 0, 0, 746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 329, 0, 0, 0, 0, 263, 0,
	297, 183, 202, 146, 199, 129, 141, 0, 181, 235,
	270, 274, 0, 0, 0, 158, 0, 272, 248, 318,
	0, 252, 271, 207, 307, 264, 317, 330, 331, 164,
	229, 324, 302, 327, 339, 142, 161, 242, 298, 321,
	289, 224, 304, 198, 288, 134, 300, 315, 152, 282,
	0, 0, 0, 136, 313, 296, 222, 195, 196, 135,
	0, 268, 165, 177, 160, 238, 310, 311, 159, 340,
	143, 326, 138, 144, 325, 231, 306, 314, 223, 215,
	137, 312, 221, 214, 201, 171, 186, 261, 210, 262,
	187, 227, 226, 228, 0, 133, 0, 294, 322, 341,
	149, 0, 0, 303, 335, 338, 0, 265, 150, 178,
	170, 260, 176, 204, 334, 336, 337, 148, 258, 184,
	230, 145, 189, 290, 200, 208, 0, 0, 247, 273,
	153, 320, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 139, 205, 0, 266, 175, 323,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 140, 147, 154,
	162, 169, 173, 180, 185, 188, 191, 192, 193, 197,
	213, 217, 218, 219, 220, 232, 233, 234, 237, 240,
	241, 243, 245, 246, 249, 253, 254, 255, 256, 257,
	259, 267, 269, 275, 276, 277, 278, 279, 280, 281,
	284, 285, 286, 287, 295, 299, 308, 309, 319, 328,
	332, 182, 316, 333, 239, 212, 0, 0, 835, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 203,
	0, 0, 251, 0, 283, 157, 211, 209, 305, 172,
	168, 166, 156, 190, 216, 250, 301, 244, 0, 206,
	0, 0, 292, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	155, 132, 236, 293, 174, 0, 0, 0, 115, 116,
	117, 0, 837, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 724, 725, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 726, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 329, 0, 0, 0, 0, 263, 0, 297, 183,
	202, 146, 199, 129, 141, 0, 181, 235, 270, 274,
	0, 0, 0, 158, 0, 272, 248, 318, 0, 252,
	271, 207, 307, 264, 317, 330, 331, 164, 229, 324,
	302, 327, 339, 142, 161, 242, 298, 321, 289, 224,
	304, 198, 288, 134, 300, 315, 152, 282, 0, 0,
	0, 136, 313, 296, 222, 195, 196, 135, 0, 268,
	165, 177, 160, 238, 310, 311, 159, 340, 143, 326,
	138, 144, 325, 231, 306, 314, 223, 215, 137, 312,
	221, 214, 201, 171, 186, 261, 210, 262, 187, 227,
	226, 228, 0, 133, 0, 294, 322, 341, 149, 0,
	0, 303, 335, 338, 0, 265, 150, 178, 170, 260,
	176, 204, 334, 336, 337, 148, 258, 184, 230, 145,
	189, 290, 200, 208, 0, 0, 247, 273, 153, 320,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 139, 205, 0, 266, 175, 323, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 140, 147, 154, 162, 169,
	173, 180, 185, 188, 191, 192, 193, 197, 213, 217,
	218, 219, 220, 232, 233, 234, 237, 240, 241, 243,
	245, 246, 249, 253, 254, 255, 256, 257, 259, 267,
	269, 275, 276, 277, 278, 279, 280, 281, 284, 285,
	286, 287, 295, 299, 308, 309, 319, 328, 332, 182,
	316, 333, 239, 212, 0, 0, 0, 0, 0, 0,
	0, 167, 1190, 0, 0, 0, 0, 203, 0, 0,
	251, 0, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 0, 206, 0, 0,
	292, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 155, 132,
	236, 293, 174, 0, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 1189, 329,
	0, 0, 0, 1185, 1182, 0, 1183, 1184, 202, 633,
	199, 129, 141, 1180, 1187, 235, 270, 274, 0, 0,
	0, 158, 0, 272, 248, 318, 0, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 0, 0, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 0, 0, 247, 273, 153, 320, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	139, 205, 0, 266, 175, 323, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	33, 212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 203, 0,
	0, 251, 0, 283, 157, 211, 209, 305, 172, 168,
	166, 156, 190, 216, 250, 301, 244, 0, 206, 0,
	0, 292, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 155,
	132, 236, 293, 174, 66, 0, 468, 115, 116, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	329, 0, 0, 0, 0, 263, 0, 297, 183, 202,
	146, 199, 129, 141, 0, 181, 235, 270, 274, 0,
	0, 0, 158, 0, 272, 248, 318, 0, 252, 271,
	207, 307, 264, 317, 330, 331, 164, 229, 324, 302,
	327, 339, 142, 161, 242, 298, 321, 289, 224, 304,
	198, 288, 134, 300, 315, 152, 282, 0, 0, 0,
	136, 313, 296, 222, 195, 196, 135, 0, 268, 165,
	177, 160, 238, 310, 311, 159, 340, 143, 326, 138,
	144, 325, 231, 306, 314, 223, 215, 137, 312, 221,
	214, 201, 171, 186, 261, 210, 262, 187, 227, 226,
	228, 0, 133, 0, 294, 322, 341, 149, 0, 0,
	303, 335, 338, 0, 265, 150, 178, 170, 260, 176,
	204, 334, 336, 337, 148, 258, 184, 230, 145, 189,
	290, 200, 208, 0, 0, 247, 273, 153, 320, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 139, 205, 0, 266, 175, 323, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 154, 162, 169, 173,
	180, 185, 188, 191, 192, 193, 197, 213, 217, 218,
	219, 220, 232, 233, 234, 237, 240, 241, 243, 245,
	246, 249, 253, 254, 255, 256, 257, 259, 267, 269,
	275, 276, 277, 278, 279, 280, 281, 284, 285, 286,
	287, 295, 299, 308, 309, 319, 328, 332, 182, 316,
	333, 239, 212, 0, 0, 1100, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 203, 0, 0, 251,
	0, 283, 157, 211, 209, 305, 172, 168, 166, 156,
	190, 216, 250, 301, 244, 0, 206, 0, 0, 292,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 155, 132, 236,
	293, 174, 0, 0, 0, 115, 116, 117, 0, 1102,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 329, 0,
	0, 0, 0, 263, 0, 297, 183, 202, 146, 199,
	129, 141, 0, 181, 235, 270, 274, 0, 0, 0,
	158, 0, 272, 248, 318, 0, 252, 271, 207, 307,
	264, 317, 330, 331, 164, 229, 324, 302, 327, 339,
	142, 161, 242, 298, 321, 289, 224, 304, 198, 288,
	134, 300, 315, 152, 282, 0, 0, 0, 136, 313,
	296, 222, 195, 196, 135, 0, 268, 165, 177, 160,
	238, 310, 311, 159, 340, 143, 326, 138, 144, 325,
	231, 306, 314, 223, 215, 137, 312, 221, 214, 201,
	171, 186, 261, 210, 262, 187, 227, 226, 228, 0,
	133, 0, 294, 322, 341, 149, 0, 0, 303, 335,
	338, 0, 265, 150, 178, 170, 260, 176, 204, 334,
	336, 337, 148, 258, 184, 230, 145, 189, 290, 200,
	208, 0, 0, 247, 273, 153, 320, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 139,
	205, 0, 266, 175, 323, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 131, 140, 147, 154, 162, 169, 173, 180, 185,
	188, 191, 192, 193, 197, 213, 217, 218, 219, 220,
	232, 233, 234, 237, 240, 241, 243, 245, 246, 249,
	253, 254, 255, 256, 257, 259, 267, 269, 275, 276,
	277, 278, 279, 280, 281, 284, 285, 286, 287, 295,
	299, 308, 309, 319, 328, 332, 182, 316, 333, 33,
	212, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 203, 0, 0,
	251, 0, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 0, 206, 0, 0,
	292, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 155, 132,
	236, 293, 174, 66, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 329,
	0, 0, 0, 0, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 0, 0,
	0, 158, 0, 272, 248, 318, 0, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 0, 0, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 0, 0, 247, 273, 153, 320, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	139, 205, 0, 266, 175, 323, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	239, 212, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 203, 0, 0, 251, 0,
	283, 157, 211, 209, 305, 172, 168, 166, 156, 190,
	216, 250, 301, 244, 0, 206, 0, 0, 292, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 155, 132, 236, 293,
	174, 0, 0, 0, 115, 116, 117, 0, 0, 1118,
	0, 0, 1119, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 329, 0, 0,
	0, 0, 263, 0, 297, 183, 202, 146, 199, 129,
	141, 0, 181, 235, 270, 274, 0, 0, 0, 158,
	0, 272, 248, 318, 0, 252, 271, 207, 307, 264,
	317, 330, 331, 164, 229, 324, 302, 327, 339, 142,
	161, 242, 298, 321, 289, 224, 304, 198, 288, 134,
	300, 315, 152, 282, 0, 0, 0, 136, 313, 296,
	222, 195, 196, 135, 0, 268, 165, 177, 160, 238,
	310, 311, 159, 340, 143, 326, 138, 144, 325, 231,
	306, 314, 223, 215, 137, 312, 221, 214, 201, 171,
	186, 261, 210, 262, 187, 227, 226, 228, 0, 133,
	0, 294, 322, 341, 149, 0, 0, 303, 335, 338,
	0, 265, 150, 178, 170, 260, 176, 204, 334, 336,
	337, 148, 258, 184, 230, 145, 189, 290, 200, 208,
	0, 0, 247, 273, 153, 320, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 139, 205,
	0, 266, 175, 323, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	131, 140, 147, 154, 162, 169, 173, 180, 185, 188,
	191, 192, 193, 197, 213, 217, 218, 219, 220, 232,
	233, 234, 237, 240, 241, 243, 245, 246, 249, 253,
	254, 255, 256, 257, 259, 267, 269, 275, 276, 277,
	278, 279, 280, 281, 284, 285, 286, 287, 295, 299,
	308, 309, 319, 328, 332, 182, 316, 333, 239, 212,
	0, 0, 1100, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 203, 0, 0, 251, 0, 283, 157,
	211, 209, 305, 172, 168, 166, 156, 190, 216, 250,
	301, 244, 0, 206, 0, 0, 292, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 155, 132, 236, 293, 174, 0,
	0, 0, 115, 116, 117, 0, 1102, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 329, 0, 0, 0, 0,
	263, 0, 297, 183, 202, 146, 199, 129, 141, 0,
	181, 235, 270, 274, 0, 0, 0, 158, 0, 272,
	248, 318, 0, 1098, 271, 207, 307, 264, 317, 330,
	331, 164, 229, 324, 302, 327, 339, 142, 161, 242,
	298, 321, 289, 224, 304, 198, 288, 134, 300, 315,
	152, 282, 0, 0, 0, 136, 313, 296, 222, 195,
	196, 135, 0, 268, 165, 177, 160, 238, 310, 311,
	159, 340, 143, 326, 138, 144, 325, 231, 306, 314,
	223, 215, 137, 312, 221, 214, 201, 171, 186, 261,
	210, 262, 187, 227, 226, 228, 0, 133, 0, 294,
	322, 341, 149, 0, 0, 303, 335, 338, 0, 265,
	150, 178, 170, 260, 176, 204, 334, 336, 337, 148,
	258, 184, 230, 145, 189, 290, 200, 208, 0, 0,
	247, 273, 153, 320, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 139, 205, 0, 266,
	175, 323, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 140,
	147, 154, 162, 169, 173, 180, 185, 188, 191, 192,
	193, 197, 213, 217, 218, 219, 220, 232, 233, 234,
	237, 240, 241, 243, 245, 246, 249, 253, 254, 255,
	256, 257, 259, 267, 269, 275, 276, 277, 278, 279,
	280, 281, 284, 285, 286, 287, 295, 299, 308, 309,
	319, 328, 332, 182, 316, 333, 239, 212, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 868, 0, 0,
	0, 203, 0, 0, 251, 0, 283, 157, 211, 209,
	305, 172, 168, 166, 156, 190, 216, 250, 301, 244,
	0, 206, 0, 0, 292, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 155, 132, 236, 293, 174, 0, 0, 0,
	115, 116, 117, 0, 867, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 329, 0, 0, 0, 0, 263, 0,
	297, 183, 202, 146, 199, 129, 141, 0, 181, 235,
	270, 274, 0, 0, 0, 158, 0, 272, 248, 318,
	0, 252, 271, 207, 307, 264, 317, 330, 331, 164,
	229, 324, 302, 327, 339, 142, 161, 242, 298, 321,
	289, 224, 304, 198, 288, 134, 300, 315, 152, 282,
	0, 0, 0, 136, 313, 296, 222, 195, 196, 135,
	0, 268, 165, 177, 160, 238, 310, 311, 159, 340,
	143, 326, 138, 144, 325, 231, 306, 314, 223, 215,
	137, 312, 221, 214, 201, 171, 186, 261, 210, 262,
	187, 227, 226, 228, 0, 133, 0, 294, 322, 341,
	149, 0, 0, 303, 335, 338, 0, 265, 150, 178,
	170, 260, 176, 204, 334, 336, 337, 148, 258, 184,
	230, 145, 189, 290, 200, 208, 0, 0, 247, 273,
	153, 320, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 139, 205, 0, 266, 175, 323,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 140, 147, 154,
	162, 169, 173, 180, 185, 188, 191, 192, 193, 197,
	213, 217, 218, 219, 220, 232, 233, 234, 237, 240,
	241, 243, 245, 246, 249, 253, 254, 255, 256, 257,
	259, 267, 269, 275, 276, 277, 278, 279, 280, 281,
	284, 285, 286, 287, 295, 299, 308, 309, 319, 328,
	332, 182, 316, 333, 239, 212, 0, 0, 0, 0,
	0, 0, 0, 167, 0, 0, 0, 0, 0, 203,
	0, 0, 251, 0, 283, 157, 211, 209, 305, 172,
	168, 166, 156, 190, 216, 250, 301, 244, 0, 206,
	0, 0, 292, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	155, 132, 236, 293, 174, 0, 0, 0, 115, 116,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 0, 0,
	0, 329, 0, 0, 0, 0, 263, 0, 297, 183,
	202, 633, 199, 129, 141, 631, 181, 235, 270, 274,
	0, 0, 0, 158, 0, 272, 248, 318, 0, 252,
	271, 207, 307, 264, 317, 330, 331, 164, 229, 324,
	302, 327, 339, 142, 161, 242, 298, 321, 289, 224,
	304, 198, 288, 134, 300, 315, 152, 282, 0, 0,
	0, 136, 313, 296, 222, 195, 196, 135, 0, 268,
	165, 177, 160, 238, 310, 311, 159, 340, 143, 326,
	138, 144, 325, 231, 306, 314, 223, 215, 137, 312,
	221, 214, 201, 171, 186, 261, 210, 262, 187, 227,
	226, 228, 0, 133, 0, 294, 322, 341, 149, 0,
	0, 303, 335, 338, 0, 265, 150, 178, 170, 260,
	176, 204, 334, 336, 337, 148, 258, 184, 230, 145,
	189, 290, 200, 208, 0, 0, 247, 273, 153, 320,
	291, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 139, 205, 0, 266, 175, 323, 0, 0,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 140, 147, 154, 162, 169,
	173, 180, 185, 188, 191, 192, 193, 197, 213, 217,
	218, 219, 220, 232, 233, 234, 237, 240, 241, 243,
	245, 246, 249, 253, 254, 255, 256, 257, 259, 267,
	269, 275, 276, 277, 278, 279, 280, 281, 284, 285,
	286, 287, 295, 299, 308, 309, 319, 328, 332, 182,
	316, 333, 239, 212, 0, 0, 0, 0, 0, 0,
	0, 167, 0, 0, 0, 0, 0, 203, 0, 0,
	251, 0, 283, 157, 211, 209, 305, 172, 168, 166,
	156, 190, 216, 250, 301, 244, 0, 206, 0, 0,
	292, 225, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 155, 132,
	236, 293, 174, 0, 0, 468, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 329,
	0, 0, 0, 0, 263, 0, 297, 183, 202, 146,
	199, 129, 141, 0, 181, 235, 270, 274, 0, 0,
	0, 158, 0, 272, 248, 318, 0, 252, 271, 207,
	307, 264, 317, 330, 331, 164, 229, 324, 302, 327,
	339, 142, 161, 242, 298, 321, 289, 224, 304, 198,
	288, 134, 300, 315, 152, 282, 0, 0, 0, 136,
	313, 296, 222, 195, 196, 135, 0, 268, 165, 177,
	160, 238, 310, 311, 159, 340, 143, 326, 138, 144,
	325, 231, 306, 314, 223, 215, 137, 312, 221, 214,
	201, 171, 186, 261, 210, 262, 187, 227, 226, 228,
	0, 133, 0, 294, 322, 341, 149, 0, 0, 303,
	335, 338, 0, 265, 150, 178, 170, 260, 176, 204,
	334, 336, 337, 148, 258, 184, 230, 145, 189, 290,
	200, 208, 0, 0, 247, 273, 153, 320, 291, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	139, 205, 0, 266, 175, 323, 0, 0, 163, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 154, 162, 169, 173, 180,
	185, 188, 191, 192, 193, 197, 213, 217, 218, 219,
	220, 232, 233, 234, 237, 240, 241, 243, 245, 246,
	249, 253, 254, 255, 256, 257, 259, 267, 269, 275,
	276, 277, 278, 279, 280, 281, 284, 285, 286, 287,
	295, 299, 308, 309, 319, 328, 332, 182, 316, 333,
	239, 212, 0, 0, 0, 0, 0, 0, 0, 167,
	0, 0, 0, 0, 0, 203, 0, 0, 251, 0,
	283, 157, 211, 209, 305, 172, 168, 166, 156, 190,
	216, 250, 301, 244, 0, 206, 0, 0, 292, 225,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 155, 132, 236, 293,
	174, 66, 0, 0, 115, 116, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 151, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 329, 0, 0,
	0, 0, 263, 0, 297, 183, 202, 146, 199, 129,
	141, 0, 181, 235, 270, 274, 0, 0, 0, 158,
	0, 272, 248, 318, 0, 252, 271, 207, 307, 264,
	317, 330, 331, 164, 229, 324, 302, 327, 339, 142,
	161, 242, 298, 321, 289, 224, 304, 198, 288, 134,
	300, 315, 152, 282, 0, 0, 0, 136, 313, 296,
	222, 195, 196, 135, 0, 268, 165, 177, 160, 238,
	310, 311, 159, 340, 143, 326, 138, 144, 325, 231,
	306, 314, 223, 215, 137, 312, 221, 214, 201, 171,
	186, 261, 210, 262, 187, 227, 226, 228, 0, 133,
	0, 294, 322, 341, 149, 0, 0, 303, 335, 338,
	0, 265, 150, 178, 170, 260, 176, 204, 334, 336,
	337, 148, 258, 184, 230, 145, 189, 290, 200, 208,
	0, 0, 247, 273, 153, 320, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 139, 205,
	0, 266, 175, 323, 0, 0, 163, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	131, 140, 147, 154, 162, 169, 173, 180, 185, 188,
	191, 192, 193, 197, 213, 217, 218, 219, 220, 232,
	233, 234, 237, 240, 241, 243, 245, 246, 249, 253,
	254, 255, 256, 257, 259, 267, 269, 275, 276, 277,
	278, 279, 280, 281, 284, 285, 286, 287, 295, 299,
	308, 309, 319, 328, 332, 182, 316, 333, 239, 212,
	0, 0, 0, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 203, 0, 0, 251, 0, 283, 157,
	211, 209, 305, 172, 168, 166, 156, 190, 216, 250,
	301, 244, 0, 206, 0, 0, 292, 225, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 155, 132, 236, 293, 174, 0,
	0, 0, 115, 116, 117, 0, 1102, 0, 0, 0,
	0, 0, 0, 151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 0, 0, 0, 329, 0, 0, 0, 0,
	263, 0, 297, 183, 202, 146, 199, 129, 141, 0,
	181, 235, 270, 274, 0, 0, 0, 158, 0, 272,
	248, 318, 0, 252, 271, 207, 307, 264, 317, 330,
	331, 164, 229, 324, 302, 327, 339, 142, 161, 242,
	298, 321, 289, 224, 304, 198, 288, 134, 300, 315,
	152, 282, 0, 0, 0, 136, 313, 296, 222, 195,
	196, 135, 0, 268, 165, 177, 160, 238, 310, 311,
	159, 340, 143, 326, 138, 144, 325, 231, 306, 314,
	223, 215, 137, 312, 221, 214, 201, 171, 186, 261,
	210, 262, 187, 227, 226, 228, 0, 133, 0, 294,
	322, 341, 149, 0, 0, 303, 335, 338, 0, 265,
	150, 178, 170, 260, 176, 204, 334, 336, 337, 148,
	258, 184, 230, 145, 189, 290, 200, 208, 0, 0,
	247, 273, 153, 320, 291, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 139, 205, 0, 266,
	175, 323, 0, 0, 163, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 140,
	147, 154, 162, 169, 173, 180, 185, 188, 191, 192,
	193, 197, 213, 217, 218, 219, 220, 232, 233, 234,
	237, 240, 241, 243, 245, 246, 249, 253, 254, 255,
	256, 257, 259, 267, 269, 275, 276, 277, 278, 279,
	280, 281, 284, 285, 286, 287, 295, 299, 308, 309,
	319, 328, 332, 182, 316, 333, 239, 212, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 203, 0, 0, 251, 0, 283, 157, 211, 209,
	305, 172, 168, 166, 156, 190, 216, 250, 301, 244,
	0, 206, 0, 0, 292, 225, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 155, 132, 236, 293, 174, 0, 0, 0,
	115, 116, 117, 0, 837, 0, 0, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 329, 0, 0, 0, 0, 263, 0,
	297, 183, 202, 146, 199, 129, 141, 0, 181, 235,
	270, 274, 0, 0, 0, 158, 0, 272, 248, 318,
	0, 252, 271, 207, 307, 264, 317, 330, 331, 164,
	229, 324, 302, 327, 339, 142, 161, 242, 298, 321,
	289, 224, 304, 198, 288, 134, 300, 315, 152, 282,
	0, 0, 0, 136, 313, 296, 222, 195, 196, 135,
	0, 268, 165, 177, 160, 238, 310, 311, 159, 340,
	143, 326, 138, 144, 325, 231, 306, 314, 223, 215,
	137, 312, 221, 214, 201, 171, 186, 261, 210, 262,
	187, 227, 226, 228, 0, 133, 0, 294, 322, 341,
	149, 0, 0, 303, 335, 338, 0, 265, 150, 178,
	170, 260, 176, 204, 334, 336, 337, 148, 258, 184,
	230, 145, 189, 290, 200, 208, 0, 0, 247, 273,
	153, 320, 291, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 128, 139, 205, 0, 266, 175, 323,
	0, 0, 163, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 130, 131, 140, 147, 154,
	162, 169, 173, 180, 185, 188, 191, 192, 193, 197,
	213, 217, 218, 219, 220, 232, 233, 234, 237, 240,
	241, 243, 245, 246, 249, 253, 254, 255, 256, 257,
	259, 267, 269, 275, 276, 277, 278, 279, 280, 281,
	284, 285, 286, 287, 295, 299, 308, 309, 319, 328,
	332, 182, 316, 333, 850, 212, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 203, 0, 0, 251,
	0, 283, 157, 211, 209, 305, 172, 168, 166, 156,
	190, 216, 250, 301, 244, 0, 206, 0, 0, 292,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 155, 132, 236,
	293, 174, 0, 0, 0, 115, 116, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 329, 0,
	0, 0, 0, 263, 0, 297, 183, 202, 146, 199,
	129, 141, 0, 181, 235, 270, 274, 0, 0, 0,
	158, 0, 272, 248, 318, 0, 252, 271, 207, 307,
	264, 317, 330, 331, 164, 229, 324, 302, 327, 339,
	142, 161, 242, 298, 321, 289, 224, 304, 198, 288,
	134, 300, 315, 152, 282, 0, 0, 0, 136, 313,
	296, 222, 195, 196, 135, 0, 268, 165, 177, 160,
	238, 310, 311, 159, 340, 143, 326, 138, 144, 325,
	231, 306, 314, 223, 215, 137, 312, 221, 214, 201,
	171, 186, 261, 210, 262, 187, 227, 226, 228, 0,
	133, 0, 294, 322, 341, 149, 0, 0, 303, 335,
	338, 0, 265, 150, 178, 170, 260, 176, 204, 334,
	336, 337, 148, 258, 184, 230, 145, 189, 290, 200,
	208, 0, 0, 247, 273, 153, 320, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 139,
	205, 0, 266, 175, 323, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 131, 140, 147, 154, 162, 169, 173, 180, 185,
	188, 191, 192, 193, 197, 213, 217, 218, 219, 220,
	232, 233, 234, 237, 240, 241, 243, 245, 246, 249,
	253, 254, 255, 256, 257, 259, 267, 269, 275, 276,
	277, 278, 279, 280, 281, 284, 285, 286, 287, 295,
	299, 308, 309, 319, 328, 332, 182, 316, 333, 239,
	212, 0, 0, 0, 0, 0, 0, 841, 167, 0,
	0, 0, 0, 0, 203, 0, 0, 251, 0, 283,
	157, 211, 209, 305, 172, 168, 166, 156, 190, 216,
	250, 301, 244, 0, 206, 0, 0, 292, 225, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 155, 132, 236, 293, 174,
	0, 0, 0, 115, 116, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 0, 0, 0, 329, 0, 0, 0,
	0, 263, 0, 297, 183, 202, 146, 199, 129, 141,
	0, 181, 235, 270, 274, 0, 0, 0, 158, 0,
	272, 248, 318, 0, 252, 271, 207, 307, 264, 317,
	330, 331, 164, 229, 324, 302, 327, 339, 142, 161,
	242, 298, 321, 289, 224, 304, 198, 288, 134, 300,
	315, 152, 282, 0, 0, 0, 136, 313, 296, 222,
	195, 196, 135, 0, 268, 165, 177, 160, 238, 310,
	311, 159, 340, 143, 326, 138, 144, 325, 231, 306,
	314, 223, 215, 137, 312, 221, 214, 201, 171, 186,
	261, 210, 262, 187, 227, 226, 228, 0, 133, 0,
	294, 322, 341, 149, 0, 0, 303, 335, 338, 0,
	265, 150, 178, 170, 260, 176, 204, 334, 336, 337,
	148, 258, 184, 230, 145, 189, 290, 200, 208, 0,
	0, 247, 273, 153, 320, 291, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 139, 205, 0,
	266, 175, 323, 0, 0, 163, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 131,
	140, 147, 154, 162, 169, 173, 180, 185, 188, 191,
	192, 193, 197, 213, 217, 218, 219, 220, 232, 233,
	234, 237, 240, 241, 243, 245, 246, 249, 253, 254,
	255, 256, 257, 259, 267, 269, 275, 276, 277, 278,
	279, 280, 281, 284, 285, 286, 287, 295, 299, 308,
	309, 319, 328, 332, 182, 316, 333, 239, 212, 0,
	0, 0, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 203, 0, 0, 251, 0, 283, 157, 211,
	209, 305, 172, 168, 166, 156, 190, 216, 250, 301,
	244, 0, 206, 0, 0, 292, 225, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 155, 132, 236, 293, 174, 0, 0,
	0, 115, 116, 117, 0, 715, 0, 0, 0, 0,
	0, 0, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 0, 0, 0, 329, 0, 0, 0, 0, 263,
	0, 297, 183, 202, 146, 199, 129, 141, 0, 181,
	235, 270, 274, 0, 0, 0, 158, 0, 272, 248,
	318, 0, 252, 271, 207, 307, 264, 317, 330, 331,
	164, 229, 324, 302, 327, 339, 142, 161, 242, 298,
	321, 289, 224, 304, 198, 288, 134, 300, 315, 152,
	282, 0, 0, 0, 136, 313, 296, 222, 195, 196,
	135, 0, 268, 165, 177, 160, 238, 310, 311, 159,
	340, 143, 326, 138, 144, 325, 231, 306, 314, 223,
	215, 137, 312, 221, 214, 201, 171, 186, 261, 210,
	262, 187, 227, 226, 228, 0, 133, 0, 294, 322,
	341, 149, 0, 0, 303, 335, 338, 0, 265, 150,
	178, 170, 260, 176, 204, 334, 336, 337, 148, 258,
	184, 230, 145, 189, 290, 200, 208, 0, 0, 247,
	273, 153, 320, 291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 139, 205, 0, 266, 175,
	323, 0, 0, 163, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 131, 140, 147,
	154, 162, 169, 173, 180, 185, 188, 191, 192, 193,
	197, 213, 217, 218, 219, 220, 232, 233, 234, 237,
	240, 241, 243, 245, 246, 249, 253, 254, 255, 256,
	257, 259, 267, 269, 275, 276, 277, 278, 279, 280,
	281, 284, 285, 286, 287, 295, 299, 308, 309, 319,
	328, 332, 182, 316, 333, 239, 212, 0, 0, 0,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	203, 0, 0, 251, 0, 283, 157, 211, 209, 305,
	172, 168, 166, 156, 190, 216, 250, 301, 244, 0,
	206, 0, 0, 292, 225, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 155, 132, 236, 293, 174, 0, 0, 0, 115,
	116, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 384, 0, 179, 0,
	0, 0, 329, 0, 0, 0, 0, 263, 0, 297,
	183, 202, 146, 199, 129, 141, 0, 181, 235, 270,
	274, 0, 0, 0, 158, 0, 272, 248, 318, 0,
	252, 271, 207, 307, 264, 317, 330, 331, 164, 229,
	324, 302, 327, 339, 142, 161, 242, 298, 321, 289,
	224, 304, 198, 288, 134, 300, 315, 152, 282, 0,
	0, 0, 136, 313, 296, 222, 195, 196, 135, 0,
	268, 165, 177, 160, 238, 310, 311, 159, 340, 143,
	326, 138, 144, 325, 231, 306, 314, 223, 215, 137,
	312, 221, 214, 201, 171, 186, 261, 210, 262, 187,
	227, 226, 228, 0, 133, 0, 294, 322, 341, 149,
	0, 0, 303, 335, 338, 0, 265, 150, 178, 170,
	260, 176, 204, 334, 336, 337, 148, 258, 184, 230,
	145, 189, 290, 200, 208, 0, 0, 247, 273, 153,
	320, 291, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 139, 205, 0, 266, 175, 323, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 131, 140, 147, 154, 162,
	169, 173, 180, 185, 188, 191, 192, 193, 197, 213,
	217, 218, 219, 220, 232, 233, 234, 237, 240, 241,
	243, 245, 246, 249, 253, 254, 255, 256, 257, 259,
	267, 269, 275, 276, 277, 278, 279, 280, 281, 284,
	285, 286, 287, 295, 299, 308, 309, 319, 328, 332,
	383, 316, 333, 239, 212, 0, 0, 0, 0, 0,
	0, 0, 167, 0, 0, 0, 0, 0, 203, 0,
	0, 251, 0, 283, 157, 211, 209, 305, 172, 168,
	166, 156, 190, 216, 250, 301, 244, 0, 206, 0,
	0, 292, 225, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 155,
	132, 236, 293, 174, 0, 0, 0, 115, 116, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 0, 123, 0,
	329, 0, 0, 0, 0, 263, 0, 297, 183, 202,
	146, 199, 129, 141, 0, 181, 235, 270, 274, 0,
	0, 0, 158, 0, 272, 248, 318, 0, 252, 271,
	207, 307, 264, 317, 330, 331, 164, 229, 324, 302,
	327, 339, 142, 161, 242, 298, 321, 289, 224, 304,
	198, 288, 134, 300, 315, 152, 282, 0, 0, 0,
	136, 313, 296, 222, 195, 196, 135, 0, 268, 165,
	177, 160, 238, 310, 311, 159, 340, 143, 326, 138,
	144, 325, 231, 306, 314, 223, 215, 137, 312, 221,
	214, 201, 171, 186, 261, 210, 262, 187, 227, 226,
	228, 0, 133, 0, 294, 322, 341, 149, 0, 0,
	303, 335, 338, 0, 265, 150, 178, 170, 260, 176,
	204, 334, 336, 337, 148, 258, 184, 230, 145, 189,
	290, 200, 208, 0, 0, 247, 273, 153, 320, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 139, 205, 0, 266, 175, 323, 0, 0, 163,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 154, 162, 169, 173,
	180, 185, 188, 191, 192, 193, 197, 213, 217, 218,
	219, 220, 232, 233, 234, 237, 240, 241, 243, 245,
	246, 249, 253, 254, 255, 256, 257, 259, 267, 269,
	275, 276, 277, 278, 279, 280, 281, 284, 285, 286,
	287, 295, 299, 308, 309, 319, 328, 332, 182, 316,
	333, 239, 212, 0, 0, 0, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 203, 0, 0, 251,
	0, 283, 157, 211, 209, 305, 172, 168, 166, 156,
	190, 216, 250, 301, 244, 0, 206, 0, 0, 292,
	225, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 155, 132, 236,
	293, 174, 0, 0, 0, 115, 116, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 0, 0, 0, 329, 0,
	0, 0, 0, 263, 0, 297, 183, 202, 146, 199,
	129, 141, 0, 181, 235, 270, 274, 0, 0, 0,
	158, 0, 272, 248, 318, 0, 252, 271, 207, 307,
	264, 317, 330, 331, 164, 229, 324, 302, 327, 339,
	142, 161, 242, 298, 321, 289, 224, 304, 198, 288,
	134, 300, 315, 152, 282, 0, 0, 0, 136, 313,
	296, 222, 195, 196, 135, 0, 268, 165, 177, 160,
	238, 310, 311, 159, 340, 143, 326, 138, 144, 325,
	231, 306, 314, 223, 215, 137, 312, 221, 214, 201,
	171, 186, 261, 210, 262, 187, 227, 226, 228, 0,
	133, 0, 294, 322, 341, 149, 0, 0, 303, 335,
	338, 0, 265, 150, 178, 170, 260, 176, 204, 334,
	336, 337, 148, 258, 184, 230, 145, 189, 290, 200,
	208, 0, 0, 247, 273, 153, 320, 291, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 128, 139,
	205, 0, 266, 175, 323, 0, 0, 163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	130, 131, 140, 147, 154, 162, 169, 173, 180, 185,
	188, 191, 192, 193, 197, 213, 217, 218, 219, 220,
	232, 233, 234, 237, 240, 241, 243, 245, 246, 249,
	253, 254, 255, 256, 257, 259, 267, 269, 275, 276,
	277, 278, 279, 280, 281, 284, 285, 286, 287, 295,
	299, 308, 309, 319, 328, 332, 182, 316, 333, 0,
	212,
}

var yyPact = [...]int{
	399, -1000, -287, 1317, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1287, 862, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	464, 970, 104, 1197, 165, 732, 226, 33, 19614, 225,
	30, 20002, -1000, 53, -1000, 39, 20002, 43, 19226, -1000,
	-1000, -1000, 11045, 1143, -47, -57, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 971, 1253, 1258, 1284, 759, 1221,
	-1000, 9480, 9480, 206, 206, 206, 7928, -1000, -1000, 16115,
	20002, 20002, 982, 202, 223, 202, -153, -1000, -1000, -1000,
	-1000, -1000, -1000, 1197, -1000, -1000, 114, -1000, -1000, 20002,
	82, 326, 426, 1197, 97, -1000, -1000, -1000, 20002, 198,
	732, 198, 198, 20002, -1000, 306, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20002, 1188, 463, 463, 463, 463, 463, 463,
	37, -1000, 12, 126, 105, 90, -24, 732, 95, -1000,
	304, -1000, 86, 23, -1000, 463, 5498, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 212, -1000, -1000, -1000, -1000,
	20002, 18838, 164, 424, -1000, -1000, -1000, -1000, 768, 693,
	-1000, 11045, 2121, 915, 915, -1000, -1000, 249, -1000, -1000,
	12209, 12209, 12209, 12209, 12209, 12209, 12209, 12209, 12209, 12209,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 915, 305, -1000, 10657, 915, 915,
	915, 915, 915, 915, 915, 915, 11045, 915, 915, 915,
	915, 915, 915, 915, 915, 915, 915, 915, 915, 915,
	915, 915, 915, -1000, -1000, -1000, 20002, -1000, 1287, -1000,
	862, -1000, -1000, -1000, 1173, 11045, 11045, 1287, -1000, 1072,
	9480, -1000, -1000, 1106, -1000, -1000, -1000, -1000, 469, 1304,
	-1000, 12985, 301, 1303, 18450, -1000, 16891, 18062, 907, 7523,
	-121, -1000, -1000, -1000, 419, 15727, -1000, -1000, -1000, 1187,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 892, 20002, -1000, -1000,
	2785, 732, -1000, 934, -1000, 890, -1000, 925, 82, 20002,
	437, 732, 732, -1000, -1000, -1000, 1168, 370, 139, 68,
	382, 135, 156, 125, 20002, 69, 1197, 1140, 906, 209,
	20002, 1236, 1016, 20002, 732, -1000, 6713, -1000, 463, -1000,
	656, 11045, -1000, -1000, -1000, -1000, -1000, 463, 20002, 463,
	20002, 463, 463, 463, 463, 446, 452, 446, -1000, -1000,
	-1000, -1000, 5498, 5498, 20002, 5498, 5498, 20002, 5498, 5498,
	452, -1000, -1000, -1000, 356, -1000, 1013, -1000, -1000, -1000,
	-1000, 42, -1000, -1000, -1000, -1000, -1000, 1317, -1000, -1000,
	-1000, -129, 11045, 11045, 11045, 11045, 703, 360, 12209, 553,
	484, 12209, 12209, 12209, 12209, 12209, 12209, 12209, 12209, 12209,
	12209, 12209, 12209, 12209, 12209, 12209, 605, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 732, -1000, 1315, 734, 734,
	315, 315, 315, 315, 315, 315, 315, 315, 315, 12597,
	8316, 6713, 759, 859, 1287, 9480, 9480, 11045, 11045, 10256,
	9868, 9480, 1162, 434, 693, 20002, -1000, -1000, 11821, -1000,
	-1000, -1000, -1000, -1000, 669, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20002, 20002, 9480, 9480, 9480, 9480, 9480, -1000,
	902, -1000, -164, 15339, 1258, 759, 1106, 1229, 1310, 342,
	644, 900, -1000, 609, 1258, 14951, 963, -1000, 1106, -1000,
	-1000, -1000, 20002, -1000, -1000, 17667, -1000, -1000, 6308, 20002,
	150, 20002, -1000, 945, 1186, -1000, -1000, -1000, 1247, 14563,
	20002, 913, 911, -1000, -1000, 286, 7118, -121, -1000, 7118,
	816, -1000, -98, -108, 8704, 292, -1000, -1000, -1000, -1000,
	4688, 13373, 730, 503, -56, -1000, -1000, -1000, 925, -1000,
	925, 925, 925, 925, 2, 2, 2, 2, -1000, -1000,
	-1000, -1000, -1000, 968, 947, -1000, 925, 925, 925, 925,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 937, 937, 937,
	929, 929, 187, 11045, 71, 20002, 1242, 560, 68, -1000,
	1234, 1002, -1000, 370, 782, -1000, -1000, 568, 568, 431,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 152, 215, 63, 94, 20002, 20002, 20002, 20002, 20002,
	251, -1000, -1000, -1000, 110, 20002, 20002, 273, -1000, 20002,
	267, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 693, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 463, 20002, 20002,
	20002, -1000, -1000, 463, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20002, -1000, 654, 20002, 20002, -1000, -1000, -1000,
	-1000, -1000, 693, 360, 635, 366, -1000, -1000, 540, -1000,
	-1000, 1403, -1000, -1000, -1000, -1000, 553, 12209, 12209, 12209,
	493, 1403, 2084, 909, 788, 315, 462, 462, 317, 317,
	317, 317, 317, 291, 291, -1000, -1000, -1000, 669, -1000,
	-1000, -1000, 669, 9480, 9480, 899, 915, 283, -1000, 971,
	-1000, -1000, 1258, 852, 852, 558, 573, 433, 1301, 852,
	425, 1299, 852, 852, 9480, -1000, -1000, 478, -1000, 11045,
	669, -1000, 269, -1000, 653, 887, 870, 852, 669, 669,
	852, 852, 20002, -1000, -280, -1000, -136, 285, 915, -1000,
	17279, -1000, -1000, 1173, -1000, -1000, 1139, -1000, 1069, 11045,
	11045, 11045, -1000, -1000, -1000, 1173, 1259, -1000, 1092, 1087,
	1294, 9480, 16891, 1106, -1000, -1000, -1000, 268, 1294, 948,
	915, -1000, 20002, 16891, 16891, 16891, 16891, 16891, -1000, 1041,
	1040, -1000, 1037, 1027, 1044, 20002, -1000, 855, 759, 14563,
	150, 737, 16891, 20002, -1000, -1000, 16891, 20002, 5903, -1000,
	816, -121, -61, -1000, -1000, -1000, -1000, 693, -1000, 771,
	812, 4283, -1000, -1000, -1000, -1000, 175, -1000, -1000, 935,
	732, -1000, 1207, 343, 343, 331, 732, 1206, -1000, -1000,
	-1000, -1000, 1167, -1000, 454, -27, -1000, -1000, 2, 2,
	-1000, -1000, 292, 1163, 292, 292, 292, 646, 646, -1000,
	-1000, -1000, -1000, -1000, 556, -1000, -1000, -1000, 539, -1000,
	-1000, 934, 584, 1024, 71, -1000, -1000, 370, 637, 1142,
	20002, -1000, -1000, 725, 214, -1000, 1012, -1000, 760, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20002, -1000,
	-1000, -1000, -1000, -1000, 20002, 20002, 66, -1000, 933, 664,
	-1000, 920, -1000, -1000, -1000, -1000, 62, 123, 103, 208,
	-1000, -1000, -1000, -1000, 5498, 20002, -1000, -1000, -1000, -1000,
	446, -1000, 446, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	493, 1403, 2067, -1000, 12209, 12209, -1000, -1000, 852, 852,
	9480, 6713, 1287, 1173, -1000, -1000, 102, 605, 102, 12209,
	12209, -1000, 12209, 12209, -1000, -167, 966, 428, -1000, 11045,
	569, -1000, 6713, -1000, 12209, 12209, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 221, 219, 218, 20002, -1000,
	-1000, 629, 631, 1067, 693, 693, -1000, -1000, 20002, -1000,
	-1000, -1000, -1000, 1292, 11045, -1000, 804, -1000, 5093, 1258,
	1011, 20002, 915, 1317, 13774, 20002, 918, -1000, 372, 1186,
	988, 1010, 1049, -1000, -1000, -1000, -1000, 1034, -1000, 1033,
	-1000, -1000, -1000, -1000, -1000, 759, 1294, 16891, 789, -1000,
	789, -1000, 261, -1000, -1000, -1000, -118, -130, -1000, -1000,
	-1000, 4688, -1000, 4688, -1000, 20002, 176, -1000, 732, 732,
	732, -1000, -1000, -1000, 930, 1009, 12209, -1000, -1000, -1000,
	292, 292, -1000, 517, -1000, -1000, -1000, 848, -1000, 846,
	778, 826, 34, -1000, 978, 1159, 370, 370, -1000, 483,
	-1000, 732, -1000, -1000, 20002, 20002, -1000, -1000, -1000, -1000,
	-1000, -1000, 1226, 922, -1000, -1000, -1000, 716, -1000, -178,
	732, 20002, 20002, 20002, -1000, 20002, -1000, -1000, 463, 463,
	-1000, 12209, 1403, 1403, -1000, -1000, 669, -1000, 1258, -1000,
	669, 925, 925, -1000, 925, 929, -1000, 925, 32, 925,
	19, 669, 669, 1959, 1930, 1891, 1805, 915, -160, -1000,
	693, 11045, -1000, 1166, 940, 915, 915, 915, 818, -1000,
	627, 2, -1000, -1000, -1000, 1289, 1283, 693, -1000, -1000,
	-1000, 1209, 715, 765, -1000, -1000, 9092, 823, 1080, 257,
	818, 1287, 20002, 11045, -1000, -1000, 11045, 924, -1000, 11045,
	-1000, -1000, -1000, 1287, 1287, 789, -1000, -1000, 328, -1000,
	-1000, -1000, 4283, -1000, 814, -1000, 1206, -1000, -1000, -1000,
	20002, -21, 1309, 1403, -1000, -1000, -1000, -1000, 2, 626,
	2, 480, -1000, 477, -1000, -1000, -224, -1000, -1000, 1000,
	1023, -1000, -1000, 922, -1000, 915, 1246, 20002, -1000, -1000,
	6713, -1000, -1000, 917, 1001, -1000, -1000, -1000, -1000, 1403,
	-1000, 1173, -1000, -1000, 177, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 12209, 12209, 12209, 12209, 12209, 1258, 617,
	693, 12209, 12209, 16503, 20002, 20002, 14162, 20002, 2, -42,
	-1000, 11045, 11045, 1205, -1000, 915, -1000, 932, 20002, 915,
	20002, -1000, 1258, -1000, 693, 693, 20002, 693, 1258, -1000,
	71, 810, -1000, 339, -1000, -88, 292, -1000, 292, 685,
	677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1240,
	142, 862, 808, 772, -1000, 369, 20002, 20002, -1000, -1000,
	-1000, 653, 653, 653, 653, 70, 669, -1000, 653, 653,
	806, -1000, 806, 806, 285, -1000, -275, -1000, 1136, 1131,
	693, 768, 1307, -1000, 915, 1317, 252, 765, -1000, -1000,
	794, -1000, -1000, 166, 20002, 448, 1201, -1000, 1199, -1000,
	-1000, -1000, -1000, -1000, 862, 753, -1000, 20002, 133, -1000,
	6713, 4688, 750, -1000, -1000, -1000, -1000, -1000, 669, 74,
	-181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -42, 196,
	-1000, 1098, 1096, 1270, 20002, 765, 20002, -1000, 20002, -1000,
	-1000, 614, -1000, -1000, 133, -1000, 142, 1077, -1000, -71,
	-1000, -1000, 920, -1000, 1062, -176, -186, 1103, 1113, 1113,
	1131, 1266, 1129, 1119, -1000, 596, 756, -1000, 916, -1000,
	-1000, -1000, 146, 178, -1000, -1000, -178, -1000, 1058, -1000,
	1101, 608, -1000, -1000, -1000, -1000, 595, -1000, 1261, 1260,
	-1000, 20002, 140, 75, -1000, -179, -1000, 542, -1000, -1000,
	-1000, 591, 563, 746, 915, -1000, -184, -1000, -1000, -1000,
	-1000, 1008, 11433, -190, 926, -1000, 1298, 653, 669, -1000,
	-1000, 1300, 320, 320, -1000, -1000, -1000, -1000, -1000, 184,
	616, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1581, 1577, 82, 81, 79, 1576, 1575, 1574, 1570,
	148, 146, 145, 1569, 1567, 1566, 1565, 1561, 1560, 1558,
	1555, 1552, 1551, 1550, 1549, 1548, 1547, 117, 116, 495,
	1546, 1545, 1544, 1543, 1542, 1540, 1538, 1522, 1521, 1520,
	1519, 1518, 1515, 1514, 122, 1513, 1511, 8, 1510, 84,
	1509, 1508, 1507, 1506, 1504, 1503, 1502, 106, 1501, 50,
	101, 55, 68, 1500, 65, 647, 1499, 94, 111, 1498,
	1354, 1497, 39, 67, 88, 1495, 40, 1494, 1493, 102,
	1489, 1486, 1483, 66, 1481, 1480, 1523, 1479, 63, 75,
	18, 31, 1477, 1469, 1468, 1465, 104, 1305, 1464, 1463,
	17, 1462, 1461, 120, 1460, 80, 32, 16, 19, 24,
	1459, 78, 1458, 11, 1448, 69, 1444, 1442, 1441, 1440,
	77, 1439, 76, 89, 23, 1438, 6, 9, 1436, 1435,
	1433, 1431, 1429, 1427, 4, 1426, 1425, 1422, 1415, 27,
	1413, 93, 22, 62, 42, 20, 12, 1411, 1410, 25,
	98, 58, 107, 1409, 1407, 1406, 788, 1405, 54, 1403,
	134, 1402, 37, 1401, 534, 630, 1400, 1399, 1397, 1396,
	1395, 41, 1000, 1888, 172, 103, 1394, 1391, 2630, 47,
	74, 21, 1389, 1388, 1387, 71, 61, 45, 703, 43,
	1386, 1385, 1379, 1378, 1377, 1373, 1372, 64, 1371, 1370,
	1368, 15, 35, 100, 28, 1365, 1364, 1361, 1360, 53,
	97, 1358, 1356, 56, 60, 1355, 108, 30, 44, 1353,
	1352, 1350, 1348, 34, 10, 1342, 96, 38, 48, 29,
	33, 86, 1340, 13, 1339, 1338, 36, 26, 1337, 7,
	1336, 14, 1335, 3, 0, 1334, 5, 1333, 85, 1216,
	1, 1332, 2, 1330, 1328, 70, 1327, 1326, 1325, 1324,
	72, 805, 99, 1323, 112,
}

var yyR1 = [...]int{
	0, 258, 259, 259, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 244, 244, 244, 247, 247, 21, 41,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 51, 51, 11, 12, 12, 12, 12,
	262, 262, 81, 81, 79, 79, 80, 80, 143, 143,
	13, 14, 14, 152, 152, 151, 151, 151, 153, 153,
	153, 153, 188, 188, 15, 15, 15, 15, 15, 58,
	58, 246, 246, 245, 243, 243, 242, 242, 241, 23,
	24, 25, 26, 249, 249, 219, 30, 30, 29, 29,
	29, 29, 31, 31, 28, 28, 27, 27, 221, 221,
	220, 220, 220, 220, 220, 220, 210, 190, 190, 190,
	190, 193, 193, 191, 191, 191, 191, 191, 191, 191,
	191, 191, 192, 192, 192, 192, 192, 194, 194, 194,
	194, 194, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 195, 195, 195, 196, 196, 196,
	196, 196, 196, 196, 196, 209, 209, 197, 197, 203,
	203, 204, 204, 204, 206, 206, 207, 207, 166, 166,
	166, 199, 199, 200, 200, 205, 205, 201, 201, 201,
	202, 202, 202, 208, 208, 208, 208, 208, 198, 198,
	211, 233, 233, 232, 232, 228, 228, 228, 228, 218,
	218, 225, 225, 225, 225, 225, 225, 215, 215, 215,
	216, 216, 214, 214, 217, 217, 227, 227, 226, 212,
	212, 213, 213, 236, 236, 236, 236, 236, 237, 251,
	252, 250, 250, 250, 250, 250, 49, 49, 49, 167,
	167, 167, 222, 222, 222, 223, 223, 223, 224, 224,
	224, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 248, 248,
	248, 248, 248, 248, 248, 248, 248, 248, 248, 248,
	248, 248, 240, 238, 238, 239, 239, 17, 22, 22,
	18, 18, 18, 18, 19, 19, 32, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 159, 159, 253, 253, 161, 161,
	157, 157, 160, 160, 158, 158, 158, 162, 162, 162,
	163, 163, 257, 257, 257, 34, 34, 36, 36, 37,
	38, 38, 183, 183, 184, 184, 39, 40, 50, 50,
	50, 50, 50, 50, 52, 52, 52, 7, 7, 7,
	7, 46, 46, 46, 6, 6, 35, 35, 42, 254,
	254, 255, 256, 256, 256, 256, 43, 20, 263, 44,
	45, 45, 57, 57, 57, 53, 53, 53, 56, 56,
	56, 61, 61, 63, 63, 63, 63, 63, 64, 64,
	64, 64, 64, 64, 60, 60, 62, 62, 62, 62,
	176, 176, 176, 175, 175, 71, 71, 72, 72, 73,
	73, 74, 74, 74, 112, 89, 89, 142, 142, 141,
	141, 144, 144, 75, 75, 75, 75, 76, 76, 77,
	77, 78, 78, 182, 182, 181, 181, 181, 180, 180,
	82, 82, 82, 84, 83, 83, 83, 83, 85, 85,
	87, 87, 86, 86, 88, 90, 90, 90, 90, 90,
	91, 91, 70, 70, 70, 70, 70, 70, 70, 70,
	155, 155, 93, 93, 92, 92, 92, 92, 92, 92,
	92, 92, 92, 92, 104, 104, 104, 104, 104, 104,
	94, 94, 94, 94, 94, 94, 94, 59, 59, 105,
	105, 105, 111, 106, 106, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 101,
	101, 101, 101, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 264, 264, 103, 102, 102, 102, 102, 102,
	102, 102, 55, 55, 55, 55, 55, 187, 187, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 116, 116, 54, 54, 114, 114, 115, 117,
	117, 113, 113, 113, 96, 96, 96, 96, 96, 96,
	96, 96, 98, 98, 98, 118, 118, 119, 119, 120,
	120, 121, 121, 122, 123, 123, 123, 124, 124, 124,
	124, 234, 234, 234, 234, 234, 229, 229, 229, 229,
	230, 230, 230, 65, 65, 65, 65, 67, 67, 66,
	66, 47, 47, 48, 48, 48, 68, 68, 69, 69,
	69, 69, 139, 139, 139, 125, 125, 125, 125, 130,
	130, 130, 126, 126, 128, 128, 128, 129, 129, 129,
	127, 133, 133, 135, 135, 134, 134, 132, 132, 137,
	137, 136, 136, 131, 131, 95, 95, 95, 95, 95,
	140, 140, 140, 140, 145, 145, 107, 107, 109, 109,
	108, 110, 146, 146, 149, 147, 147, 150, 150, 150,
	150, 150, 148, 148, 148, 177, 177, 177, 154, 154,
	164, 164, 165, 165, 156, 156, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 169, 169, 169, 170,
	170, 138, 138, 138, 138, 235, 235, 231, 173, 173,
	174, 174, 178, 178, 179, 179, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 260, 261, 185, 186, 186,
	186,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 11, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 4,
	7, 4, 2, 1, 1, 4, 0, 1, 1, 1,
	2, 2, 0, 1, 5, 5, 4, 4, 2, 4,
	1, 1, 3, 4, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 3, 0,
	1, 2, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 10, 11, 11, 12, 1, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 5, 6, 6, 6, 6, 10, 4, 3, 6,
	7, 5, 5, 5, 12, 7, 5, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	5, 6, 5, 4, 3, 2, 3, 4, 3, 3,
	3, 3, 3, 3, 4, 2, 4, 4, 4, 4,
	4, 5, 7, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 7, 2, 4, 5, 4, 3, 3,
	5, 2, 3, 3, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 0, 2, 4, 0, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 4, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -258, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -32, -33, -34, -36,
	-37, -38, -39, -40, -6, -35, -20, -21, -41, -42,
	-43, -4, -260, 6, 7, 8, -51, 10, 11, 31,
	-23, -24, 146, -25, 147, -26, 149, 148, 182, 150,
	175, 70, 208, 209, 211, 212, 213, 214, -52, 180,
	181, 152, 35, 41, 32, 33, 80, 9, 306, 177,
	176, 26, -259, 410, -57, 5, -120, 16, -3, -44,
	-263, -44, -44, -44, -44, -44, -44, -219, -221, 80,
	119, 80, -58, 154, -138, -249, 100, 160, 163, 164,
	297, 153, -30, -29, -28, -27, -31, 30, -249, 154,
	-65, 268, 76, -247, -244, 83, 84, 85, 154, 154,
	155, 156, -249, 154, -86, -178, -244, -172, 316, 168,
	348, 349, 76, 258, 208, 222, 216, 243, 235, 317,
	350, 169, 198, 233, 236, 284, 166, 351, 280, 263,
	271, 94, 211, 293, 352, 75, 47, 40, 178, 231,
	227, 199, 353, 325, 192, 225, 46, 28, 45, 354,
	273, 248, 44, 355, 79, 321, 275, 226, 272, 152,
	356, 171, 404, 164, 282, 357, 249, 253, 358, 285,
	48, 359, 360, 361, 74, 220, 221, 362, 206, 167,
	287, 247, 165, 34, 276, 318, 54, 186, 288, 42,
	251, 41, 408, 363, 246, 242, 49, 364, 365, 366,
	367, 245, 219, 241, 204, 58, 255, 254, 256, 193,
	283, 238, 368, 369, 370, 172, 77, 371, 228, 19,
	372, 373, 200, 374, 52, 375, 376, 291, 181, 377,
	50, 37, 184, 378, 379, 380, 381, 382, 281, 383,
	274, 250, 252, 161, 188, 270, 320, 384, 224, 385,
	173, 185, 180, 292, 174, 386, 387, 388, 389, 390,
	391, 392, 212, 39, 393, 394, 395, 396, 207, 203,
	286, 295, 57, 78, 260, 397, 218, 163, 201, 398,
	209, 51, 195, 266, 205, 43, 239, 187, 399, 400,
	229, 230, 244, 217, 240, 210, 405, 189, 182, 401,
	294, 202, 261, 322, 194, 237, 234, 196, 402, 156,
	190, 191, 403, 406, 277, 267, 278, 279, 268, 197,
	232, 262, 154, 236, 284, 263, 264, 265, 276, 277,
	282, 281, 188, -257, 285, 154, -157, 137, 146, 273,
	-161, 274, 267, 268, 197, -253, -244, 286, 408, 269,
	275, 279, 278, -178, 210, -183, 215, -173, -244, -172,
	213, -86, -50, 404, 150, -185, -185, -185, -106, -70,
	-92, 103, -97, 30, 24, -96, -93, -113, -110, -111,
	137, 138, 140, 139, 141, 126, 127, 134, 104, 142,
	-101, -99, -100, -102, 87, 86, 95, 88, 89, 90,
	91, 96, 97, 98, -173, -178, -108, -260, 64, 65,
	307, 308, 309, 310, 315, 311, 106, 53, 296, 305,
	304, 303, 300, 301, 298, 299, 313, 314, 159, 297,
	153, 132, 306, -244, -172, 40, 266, 266, -5, -4,
	-260, 6, 21, 22, -124, 18, 17, -261, 82, -53,
	-63, 59, 60, -64, 22, 36, 63, 61, -45, -62,
	128, -70, -178, -62, -156, 158, -156, -156, -147, -188,
	210, -150, 286, 285, -174, -148, -173, -171, 284, 236,
	283, 151, 323, 102, 23, 25, 105, 137, 17, 106,
	136, 307, 146, 68, 324, 298, 299, 296, 302, 309,
	310, 297, 264, 30, 11, 326, 26, 176, 22, 36,
	130, 148, 109, 110, 179, 24, 177, 98, 329, 20,
	71, 12, 14, 330, 331, 15, 159, 158, 121, 155,
	66, 9, 142, 27, 118, 62, 332, 29, 333, 334,
	335, 336, 64, 119, 18, 300, 301, 32, 409, 337,
	315, 183, 132, 69, 55, 103, 338, 339, 96, 340,
	99, 72, 100, 16, 67, 38, 341, 342, 343, 289,
	344, 120, 149, 306, 65, 345, 153, 265, 6, 312,
	31, 175, 63, 346, 154, 108, 313, 314, 157, 97,
	5, 160, 33, 10, 70, 73, 303, 304, 305, 53,
	319, 107, 13, 347, 290, 101, -220, 119, -210, -213,
	-173, 170, -237, 166, -86, -227, -226, -173, -65, -165,
	159, 155, -165, 306, -27, -28, 236, 136, -86, -68,
	199, 146, 148, 151, 72, 111, -29, 194, -22, -86,
	-164, 159, -244, -164, -164, -86, 143, -86, 31, -162,
	119, 13, -162, -162, -162, -162, -162, 195, 280, 195,
	280, 195, 196, 195, 196, 195, -160, -159, 271, 272,
	266, 270, -244, 297, 282, -244, 188, 154, 189, 156,
	-215, 155, 34, 167, 196, 266, 191, -162, -186, -260,
	-174, 157, -173, -46, -173, 87, -7, -3, -11, -10,
	-12, 111, 81, 102, 100, 101, 118, -70, -94, 121,
	103, 119, 120, 105, 123, 122, 133, 126, 127, 128,
	129, 130, 131, 132, 124, 125, 136, 111, 112, 113,
	114, 115, 116, 117, -155, -260, -111, -260, 144, 145,
	-97, -97, -97, -97, -97, -97, -97, -97, -97, -97,
	-260, 143, -2, -106, -4, -260, -260, -260, -260, -260,
	-260, -260, -260, -116, -70, -260, -264, -103, -260, -264,
	-103, -264, -103, -264, -260, -264, -103, -264, -103, -264,
	-264, -103, -260, -260, -260, -260, -260, -260, -260, -185,
	-254, -255, -89, -86, -120, -3, -44, -139, 20, 32,
	-70, -121, -122, -70, -120, 55, -60, -62, -64, 59,
	60, 93, 12, -176, -175, 23, -173, 87, 143, 12,
	-87, 27, -86, -72, -73, -74, -75, -89, -112, -260,
	12, -79, -80, -86, -88, -178, 81, 210, -150, -188,
	-152, -151, 287, 289, 111, -177, -173, 87, 30, 31,
	82, 81, -86, -190, -193, -195, -194, -196, -191, -192,
	233, 234, 137, 237, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 31, 178, 229, 230, 231, 232,
	249, 250, 251, 252, 253, 254, 255, 256, 216, 235,
	317, 217, 218, 219, 220, 221, 222, 224, 225, 226,
	227, 228, -244, 80, 82, 81, -197, 80, -68, -86,
	103, -244, -244, 31, -218, 111, -168, 151, 148, 149,
	-240, 147, 258, 236, 94, 30, 16, 307, 184, 322,
	-244, 185, -67, 201, 111, 190, 190, 154, 154, 203,
	-86, 202, 204, 205, 40, 81, 157, -79, 24, 72,
	-81, -86, -244, -179, -178, -171, -162, 87, -70, -162,
	-86, -162, -86, -162, -162, -162, -162, -158, 12, 121,
	-216, 12, 121, -158, -186, -186, -86, -186, -186, -86,
	-186, -186, -216, -163, 119, 72, -184, 213, 247, 405,
	406, 407, -70, -70, -70, -70, -104, 96, 103, 97,
	98, -97, -105, -108, -111, 92, 121, 119, 120, 105,
	-97, -97, -97, -97, -97, -97, -97, -97, -97, -97,
	-97, -97, -97, -97, -97, -187, -244, 87, -244, -96,
	-96, -173, -61, 22, 36, -60, -174, -179, -171, -57,
	-261, -261, -120, -60, -60, -70, -70, -113, 87, -60,
	-113, 87, -60, -60, -56, 22, 36, -114, -115, 107,
	-113, -173, -178, -261, -97, -173, -173, -60, -61, -61,
	-60, -60, 81, -256, 289, 290, 409, -181, 184, -180,
	23, -178, 87, -124, -261, -125, 27, 10, 121, 81,
	19, 81, -123, 25, 26, -124, -98, -173, 88, 91,
	-71, 81, 12, -64, -86, -175, 128, -179, -86, -143,
	184, -86, 31, 81, -82, -84, -83, -85, 62, 66,
	68, 63, 64, 65, 69, -182, 23, -72, -3, -260,
	-86, -79, -262, 81, 12, 73, -262, 81, 143, -150,
	-152, 81, 288, 290, 291, 72, 99, -70, -202, 136,
	-222, -223, -224, -174, 87, 88, -210, -211, -212, -225,
	170, -236, 161, 163, 164, 160, -214, 171, -237, 155,
	29, 82, -166, 96, 103, -206, 261, -197, -197, -197,
	-197, -197, -201, 236, -201, -201, -201, 80, 80, -197,
	-197, -197, -197, -203, 80, -203, -203, -204, 80, -204,
	-237, 166, -70, -233, -232, -228, -231, 165, 94, 319,
	73, -226, -123, 88, -67, 24, -235, -231, -218, -244,
	87, -185, -248, 166, 162, 170, 171, 164, 83, 84,
	85, 155, 29, 161, 163, 184, 160, -248, -169, -170,
	157, 23, 155, 29, 184, 156, 207, -69, 302, 87,
	83, -86, -86, -86, -86, -86, 151, 148, 192, -86,
	-86, -49, 174, 169, -86, 81, -49, -162, -178, -178,
	-86, -162, -86, 87, -86, -173, 96, 97, 98, -105,
	-97, -97, -97, -59, 179, 102, -261, -261, -60, -60,
	-260, 143, -5, -124, -261, -261, 81, 73, 23, 12,
	12, -261, 12, 12, -261, -261, -60, -117, -115, 109,
	-70, -261, 143, -261, 81, 81, -261, -261, -261, -261,
	-261, -255, 408, 290, -90, 70, 158, 71, -260, -180,
	-139, 38, 46, 57, -70, -70, -122, -139, -154, 20,
	12, 53, 53, -91, 13, -62, -72, -64, 143, -91,
	-95, 31, 53, -3, -260, -260, -146, -149, -113, -73,
	-74, -74, -73, -74, 62, 62, 62, 67, 62, 67,
	62, -83, -178, -261, -261, -3, -143, 73, -72, -86,
	-72, -88, -178, 128, -151, -153, 292, 289, 295, -244,
	87, 81, -224, 111, -213, 80, -244, 29, -214, -214,
	-214, -217, -244, -217, 29, -199, 30, 96, -207, 262,
	-201, -201, -202, 31, -202, -202, -202, -209, 87, -209,
	88, 88, 82, -234, -229, -230, 32, 76, -228, -218,
	87, 37, -173, 82, 156, 72, -244, 87, -185, -185,
	-86, -185, -173, -86, -66, 199, 206, 80, 84, -246,
	73, 190, 258, 190, 193, 157, -186, -86, -158, -158,
	-59, 102, -97, -97, -261, -261, -61, -174, -120, -139,
	-189, 137, 233, 178, 231, 227, 247, 238, 260, 229,
	261, -187, -189, -97, -97, -97, -97, 316, -120, 110,
	-70, 108, -174, -97, -97, 155, 155, 155, -144, -173,
	39, 87, 87, 58, -86, -118, 14, -70, 128, -124,
	-145, 72, -146, -107, -109, -108, -260, -140, -261, -173,
	-144, -91, 81, 111, -77, -76, 72, 73, -78, 72,
	-76, 62, 62, -261, -91, -72, -91, -91, 143, 289,
	293, 294, -223, -224, -227, -236, 171, -217, -217, -217,
	80, -200, 72, -97, -202, -202, -244, 137, 82, 81,
	82, 81, 82, 81, -167, 354, 103, -230, -229, -218,
	-218, 88, -244, -86, -86, 27, -142, 80, 82, -243,
	319, -245, -244, -173, -173, -173, -86, -162, -162, -97,
	-261, -124, -261, -197, -197, -197, -204, -197, 221, -197,
	221, -261, -261, 20, 20, 20, 20, -260, -54, 312,
	-70, 81, 81, -260, -260, -260, -261, 81, 87, -201,
	-119, 15, 17, 28, -145, 81, -261, -261, 81, 53,
	143, -261, -120, -149, -70, -70, 80, -70, -120, -91,
	82, -141, -173, -205, 258, 10, -201, 87, -201, 88,
	88, 354, 30, 77, 78, 79, 30, 74, 75, -142,
	-260, 23, -141, -242, -241, -174, 80, 73, -139, -201,
	-244, -97, -97, -97, -97, -97, -124, 87, -97, -97,
	-141, -261, -141, -141, -181, -173, -201, -127, -132, -160,
	-70, -106, 29, -109, 53, -3, -173, -107, -173, -124,
	-141, -124, -233, 82, 81, -208, 161, 29, 160, -100,
	-202, -202, 82, 82, 23, -238, -239, 184, -3, 82,
	81, 111, -141, -86, -261, -261, -261, -261, -55, 121,
	319, -261, -261, -261, -261, -261, -261, -90, -130, 404,
	-133, 42, -134, 43, 10, -107, 143, 82, 173, -173,
	-198, 94, 29, 29, -3, -261, 81, -173, -47, 319,
	-241, -224, 82, -261, 317, 69, 320, -127, 47, 239,
	-135, 51, -136, -131, 52, 17, -146, -173, -86, 87,
	-47, -239, 53, -48, 198, 408, -246, 58, 318, 321,
	-128, 49, -126, 48, -126, -134, 17, -137, 44, 45,
	87, 80, 186, 166, -243, 58, -129, 50, 72, 99,
	87, 17, 17, -141, 187, 200, 319, 72, 99, 87,
	87, 82, -260, 320, -251, -252, 72, -97, 183, 321,
	-252, 72, 11, 10, -261, -261, -250, 174, 169, 172,
	31, -250, 168, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 679, 0, 418, 418, 418, 418, 418, 418, 418,
	0, 0, -2, -2, 703, 36, 0, 0, 0, 0,
	-2, 376, 377, 0, 379, -2, 0, 0, 388, 1167,
	1167, 1167, 0, 0, 0, 0, 1165, 53, 54, 394,
	395, 396, 1, 3, 0, 422, 687, 0, 0, -2,
	420, 0, 0, 794, 794, 794, 0, 84, 85, 0,
	0, 0, 703, 792, 0, 792, 0, 812, 813, 814,
	103, 104, 88, -2, 108, 109, 0, 113, 102, 0,
	716, 0, 0, 112, 37, 33, 34, 35, 0, 790,
	0, 790, 790, 0, 315, 502, 822, 823, 951, 952,
	953, 954, 955, 956, 957, 958, 959, 960, 961, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 977, 978, 979, 980, 981, 982,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 0, 0, 367, 367, 367, 367, 367, 367,
	0, 325, 0, 0, 0, 0, 0, 0, 0, 341,
	0, 344, 0, 0, 351, 367, 1168, 373, 374, 361,
	359, 356, 357, 375, 378, 0, 383, 386, 818, 819,
	0, 401, 0, 1005, 393, 406, 407, 417, 38, 553,
	512, 0, 518, 520, 0, 555, 556, 557, 558, 559,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	585, 586, 587, 588, 664, 665, 666, 667, 668, 669,
	670, 671, 522, 523, 661, 0, 771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 652, 0, 622, 622,
	622, 622, 622, 622, 622, 622, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 1167, 0, 416, 679, 49,
	0, 418, 423, 424, 722, 0, 0, 679, 1166, 0,
	0, -2, -2, 434, 440, 441, 442, 443, 419, 0,
	446, 450, 0, 0, 0, 795, 0, 0, 70, 0,
	1138, 775, -2, -2, 0, 0, 820, 821, -2, 967,
	-2, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 0, 0, 120, 121,
	0, 0, 242, 969, 118, 0, 236, 177, 716, 0,
	0, 0, 0, 90, 110, 111, 0, 219, 0, 707,
	0, 0, 0, 0, 0, 0, -2, 0, 307, 0,
	0, 0, 0, 0, 0, 314, 0, 316, 367, 318,
	0, 0, 319, 320, 321, 322, 323, 367, 0, 367,
	0, 367, 367, 367, 367, 364, 0, 364, 362, 363,
	354, 355, 1168, 1168, 0, 1168, 1168, 0, 1168, 1168,
	0, 227, 228, 229, 370, 348, 349, 352, 353, 1169,
	1170, 384, 387, 404, 402, 403, 405, 397, 398, 399,
	400, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 541, 542,
	543, 544, 545, 546, 519, 0, 533, 0, 0, 0,
	575, 576, 577, 578, 579, 580, 581, 582, 583, 0,
	431, 0, 0, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 428, 0, 653, 0, 606, 614, 0, 607,
	615, 608, 616, 609, 0, 610, 617, 611, 618, 612,
	613, 619, 0, 0, 0, 431, 431, 0, 0, 39,
	408, 409, 0, 485, 687, 0, 433, 725, 0, 0,
	688, 680, 681, 684, 687, 0, 455, 444, 435, 438,
	439, 421, 0, 447, 451, 0, 453, 454, 0, 0,
	68, 0, 501, 0, 457, 459, 460, 461, 483, 0,
	0, 0, 0, 64, 66, 502, 0, 1138, 781, 0,
	72, 73, 0, 0, 0, 200, 785, 786, 787, 783,
	262, 0, 0, 188, 184, 128, 129, 130, 177, 132,
	177, 177, 177, 177, 197, 197, 197, 197, 160, 161,
	162, 163, 164, 0, 0, 147, 177, 177, 177, 177,
	167, 168, 169, 170, 171, 172, 173, 174, 133, 134,
	135, 136, 137, 138, 139, 140, 141, 179, 179, 179,
	181, 181, 0, 0, 211, 0, 684, 0, 707, 99,
	0, 815, 101, 219, 0, 220, 1167, 0, 0, 806,
	277, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 704, 705, 706, 0, 0, 0, 256, 791, 0,
	256, 62, 313, 503, 824, 825, 317, 368, 369, 324,
	342, 326, 345, 327, 329, 328, 330, 367, 0, 0,
	0, 230, 231, 367, 333, 334, 335, 336, 337, 338,
	339, 340, 0, 347, 0, 0, 0, 385, 389, 390,
	391, 392, 554, 513, 514, 515, 517, 534, 0, 536,
	538, 524, 525, 549, 550, 551, 0, 0, 0, 0,
	547, 529, 0, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 574, 637, 638, 0, 572,
	573, 584, 0, 0, 0, 432, 662, 0, -2, 0,
	552, 770, 687, 0, 0, 0, 0, 557, 664, 0,
	557, 664, 0, 0, 0, 429, 430, 659, 656, 0,
	0, 661, 0, 623, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 411, 412, 414, 0, 505, 1075, 486,
	0, 488, 489, 722, 50, 40, 0, 723, 0, 0,
	0, 0, 683, 685, 686, 722, 0, 672, 0, 0,
	510, 0, 0, 436, 46, 452, 448, 0, 510, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 490, 0,
	0, 493, 0, 0, 0, 0, 484, 0, 0, 0,
	-2, 0, 0, 0, 60, 61, 0, 0, 0, 776,
	71, 0, 0, 76, 77, 777, 778, 779, 780, 0,
	105, 263, 265, 268, 269, 270, 122, 124, 125, 0,
	0, 240, 1086, 1120, 1006, 234, 234, 1004, 247, 232,
	233, 119, 191, 189, 0, 186, 185, 131, 197, 197,
	154, 155, 200, 0, 200, 200, 200, 0, 0, 148,
	149, 150, 151, 142, 0, 143, 144, 145, 0, 146,
	241, 0, 0, 691, 212, 213, 215, 219, 0, 0,
	0, 237, 238, 0, 0, 793, 0, 816, 0, 116,
	117, 271, 1167, 288, 289, 290, 291, 292, 293, 294,
	295, 296, 297, 298, 299, 300, 301, 1167, 0, 1167,
	807, 808, 809, 810, 0, 0, 0, 717, 718, 0,
	721, 91, 281, 283, 282, 286, 0, 0, 0, 0,
	308, 310, 257, 258, 1168, 0, 312, 331, 365, 366,
	364, 346, 364, 371, 350, 381, 535, 537, 539, 526,
	547, 530, 0, 527, 0, 0, 521, 589, 0, 0,
	431, 0, 679, 722, 593, 594, 0, 0, 0, 0,
	0, 630, 0, 0, 631, 0, 679, 0, 657, 0,
	0, 605, 0, 624, 0, 0, 625, 626, 627, 628,
	629, 410, 413, 415, 465, 0, 0, 0, 0, 487,
	42, 0, 0, 0, 689, 690, 682, 41, 0, 788,
	789, 673, 674, 675, 0, 445, 456, 437, 0, 687,
	764, 0, 0, 756, 0, 0, 510, 772, 0, 458,
	479, 481, 0, 476, 491, 492, 494, 0, 496, 0,
	498, 499, 462, 463, 464, 0, 510, 0, 510, 65,
	510, 67, 0, 504, 74, 75, 0, 0, 81, 201,
	202, 0, 266, 0, 123, 0, 0, 221, 234, 234,
	234, 225, 235, 226, 0, 193, 0, 190, 127, 187,
	200, 200, 156, 0, 157, 158, 159, 0, 175, 0,
	0, 0, 259, 86, 695, 694, 219, 219, 214, 0,
	217, 0, 817, 178, 0, 0, 114, 115, 272, 273,
	274, 275, 0, 467, 708, 709, 710, 0, 720, 94,
	0, 0, 0, 0, 279, 0, 311, 63, 367, 367,
	528, 0, 548, 531, 590, 591, 0, 663, 687, 44,
	0, 177, 177, 642, 177, 181, 645, 177, 647, 177,
	650, 0, 0, 0, 0, 0, 0, 0, 654, 604,
	660, 0, 662, 0, 0, 0, 0, 0, 0, 471,
	0, 197, 727, 724, 43, 677, 0, 511, 449, 47,
	51, 0, 764, 755, 766, 768, 0, 0, 0, 760,
	0, 679, 0, 0, 473, 480, 0, 0, 474, 0,
	475, 495, 497, -2, 679, 510, 58, 59, 0, 78,
	79, 80, 264, 267, 0, 239, 0, 222, 223, 224,
	0, 195, 0, 192, 152, 153, 198, 199, 197, 0,
	197, 0, 182, 0, 248, 260, 0, 692, 693, 0,
	0, 216, 218, 467, 100, 0, 0, 0, 719, 280,
	0, 92, 93, 0, 0, 285, 309, 332, 343, 532,
	592, 722, 595, 639, 197, 643, 644, 646, 648, 649,
	651, 597, 596, 0, 0, 0, 0, 0, 687, 0,
	658, 0, 0, 0, 0, 0, 485, 0, 197, 747,
	48, 0, 0, 0, 52, 0, 769, 0, 0, 0,
	0, 69, 687, 773, 774, 477, 0, 482, 687, 57,
	211, 0, 469, 203, 196, 0, 200, 176, 200, 0,
	0, 261, 696, 697, 698, 699, 700, 701, 702, 0,
	0, 0, 0, 95, 96, 0, 0, 0, 45, 640,
	641, 0, 0, 0, 0, 632, 0, 655, 0, 0,
	0, 507, 0, 0, 505, 472, 729, 728, 741, 745,
	678, 676, 0, 767, 0, 759, 762, 758, 761, 55,
	0, 56, 210, 0, 0, 208, 0, 205, 207, 194,
	165, 166, 180, 183, 0, 0, 303, 0, 711, 468,
	0, 0, 0, 287, 598, 600, 599, 601, 0, 0,
	0, 603, 620, 621, 506, 508, 509, 466, 747, 0,
	740, 743, -2, 0, 0, 757, 0, 478, 0, 470,
	126, 0, 204, 206, 711, 302, 0, 0, 276, 713,
	97, 98, 91, 602, 0, 0, 0, 734, 732, 732,
	745, 0, 749, 0, 754, 0, 765, 763, 0, 209,
	87, 304, 0, 0, 714, 715, 94, 633, 0, 636,
	737, 0, 730, 733, 731, 742, 0, 748, 0, 0,
	746, 0, 0, 0, 284, 634, 726, 0, 735, 736,
	744, 0, 0, 0, 0, 712, 0, 738, 739, 750,
	752, 243, 0, 0, 244, 245, 0, 0, 0, 635,
	246, 0, 0, 0, 305, 306, 249, 251, 252, 0,
	0, 250, 253, 254, 255,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 410,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:389
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:394
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:395
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:399
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:430
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:436
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:440
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:444
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:449
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:459
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:465
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:471
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:480
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:484
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:511
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:519
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:539
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:549
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:556
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:568
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:580
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:584
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:600
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:614
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:618
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:622
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:632
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:638
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:642
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:647
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:651
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:657
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:663
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:667
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:677
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:683
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyVAL.characteristic = ReadWrite
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:691
		{
			yyVAL.characteristic = ReadOnly
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:697
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:701
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:705
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:709
		{
			yyVAL.isolationLevel = Serializable
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.scope = SessionScope
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:719
		{
			yyVAL.scope = GlobalScope
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:725
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:731
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:738
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:746
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:750
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:757
		{
			yyVAL.boolean = false
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:761
		{
			yyVAL.boolean = true
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:766
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:770
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:776
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:781
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:786
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:797
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:803
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:809
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 100:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:816
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:823
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:841
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:847
		{
			yyVAL.collateAndCharsets = nil
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:865
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:869
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:874
		{
			yyVAL.boolean = false
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:878
		{
			yyVAL.boolean = true
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:884
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:888
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:898
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:905
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:909
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:915
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:929
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:938
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:944
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:966
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:971
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1027
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1077
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1144
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1148
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1166
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1176
		{
			yyVAL.literal = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1180
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1185
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1189
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1197
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1207
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.boolean = false
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1219
		{
			yyVAL.boolean = true
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1224
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1228
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.boolean = false
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.boolean = true
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1247
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1251
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1256
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1260
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1265
		{
			yyVAL.boolean = false
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.boolean = true
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1274
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1282
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1287
		{
			yyVAL.str = ""
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1300
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1304
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1308
		{
			yyVAL.colKeyOpt = colKey
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1321
		{
			yyVAL.literal = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1331
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1336
		{
			yyVAL.indexOptions = nil
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1340
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1346
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1356
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1360
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1375
		{
			yyVAL.str = ""
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1405
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1411
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = ""
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1459
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1465
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1481
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 243:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1491
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 244:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1495
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 245:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1499
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 246:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1503
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1513
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1539
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1543
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = ""
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1565
		{
			yyVAL.boolean = true
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1573
		{
			yyVAL.boolean = false
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1622
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1626
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1630
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1634
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1639
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1644
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1648
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1652
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1659
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1666
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1678
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1688
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1692
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 284:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1696
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 285:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1709
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1719
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1723
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1752
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 305:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1768
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 306:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1772
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1778
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1784
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1788
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1796
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1800
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1805
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1809
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1815
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1819
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.statement = &OtherRead{}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1850
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1854
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1858
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1862
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1866
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1870
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1874
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1878
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1882
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1886
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 332:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1890
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1894
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1898
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1902
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1907
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1911
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1915
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1919
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1935
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1948
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1958
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1971
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2000
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2024
		{
			yyVAL.str = "extended "
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = "full "
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = ""
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2064
		{
			yyVAL.showFilter = nil
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2068
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2078
		{
			yyVAL.showFilter = nil
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2088
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2092
		{
			yyVAL.empty = struct{}{}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.empty = struct{}{}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Begin{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Begin{}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &Commit{}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Rollback{}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.empty = struct{}{}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.empty = struct{}{}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2142
		{
			yyVAL.empty = struct{}{}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.empty = struct{}{}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2160
		{
			yyVAL.explainType = EmptyType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.explainType = JSONType
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2168
		{
			yyVAL.explainType = TreeType
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.explainType = VitessType
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.explainType = TraditionalType
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2180
		{
			yyVAL.explainType = AnalyzeType
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2200
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2204
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2208
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.str = ""
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2231
		{
			yyVAL.statement = &OtherRead{}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.lockType = Read
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yyVAL.lockType = ReadLocal
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.lockType = Write
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2285
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2301
		{
			setAllowComments(yylex, true)
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2311
		{
			yyVAL.bytes2 = nil
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.boolean = true
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2325
		{
			yyVAL.boolean = false
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2329
		{
			yyVAL.boolean = true
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2334
		{
			yyVAL.str = ""
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2342
		{
			yyVAL.str = SQLCacheStr
		}
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2347
		{
			yyVAL.boolean = false
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.boolean = true
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.boolean = true
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2360
		{
			yyVAL.selectExprs = nil
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2369
		{
			yyVAL.strs = nil
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2377
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2385
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2391
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2395
		{
			yyVAL.str = SQLCacheStr
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = DistinctStr
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = DistinctStr
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2407
		{
			yyVAL.str = StraightJoinHint
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2411
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2421
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2427
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2431
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2435
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2439
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2444
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2452
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2459
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2464
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2468
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2492
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2496
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 466:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2512
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2517
		{
			yyVAL.columns = nil
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2527
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2537
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2554
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2558
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2562
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2566
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2572
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2574
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2578
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2584
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2586
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2589
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.empty = struct{}{}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2594
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2598
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.joinType = NormalJoinType
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.joinType = NormalJoinType
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yyVAL.joinType = NormalJoinType
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.joinType = StraightJoinType
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.joinType = LeftJoinType
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2639
		{
			yyVAL.joinType = LeftJoinType
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.joinType = RightJoinType
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2647
		{
			yyVAL.joinType = RightJoinType
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2653
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2657
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2681
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2687
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2692
		{
			yyVAL.indexHints = nil
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2696
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2700
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2704
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2708
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2713
		{
			yyVAL.expr = nil
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2717
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2735
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2743
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2761
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2771
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2777
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2793
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2797
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2801
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2805
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2809
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2813
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2819
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2823
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2831
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2839
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2845
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2869
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2874
		{
			yyVAL.expr = nil
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2878
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2898
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2930
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2934
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2938
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2946
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2950
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2954
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2958
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2970
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2974
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2978
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2982
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2990
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2994
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2998
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3002
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3006
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3014
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3022
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3036
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3040
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3062
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 590:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3066
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3070
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 592:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3074
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3084
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3088
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3092
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3096
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3100
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3104
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3108
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3112
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3116
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 602:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3120
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 603:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3124
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 604:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3128
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3132
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3146
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3160
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3185
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3189
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3194
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3204
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 620:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3208
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 621:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3212
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3232
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3236
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3240
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3244
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3248
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3252
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3256
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3262
		{
			yyVAL.matchExprOption = NoOption
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3266
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3270
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 635:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3274
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3284
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3294
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3306
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3332
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3349
		{
			yyVAL.expr = nil
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3358
		{
			yyVAL.str = string("")
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3372
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3378
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = nil
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3397
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 663:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3401
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = &NullVal{}
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3450
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3454
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3459
		{
			yyVAL.exprs = nil
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3468
		{
			yyVAL.expr = nil
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3472
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3477
		{
			yyVAL.orderBy = nil
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3481
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3487
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3502
		{
			yyVAL.orderDirection = AscOrder
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.orderDirection = AscOrder
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.orderDirection = DescOrder
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3515
		{
			yyVAL.limit = nil
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3519
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3523
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3527
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3532
		{
			yyVAL.indexOptions = nil
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3536
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3540
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3544
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3573
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3577
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3581
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3586
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = yyDollar[3].str
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3622
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3626
		{
			yyVAL.str = yyDollar[2].str
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = "cascaded"
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = yyDollar[3].str
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3654
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3671
		{
			yyVAL.lock = NoLock
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3675
		{
			yyVAL.lock = ForUpdateLock
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3679
		{
			yyVAL.lock = ShareModeLock
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3684
		{
			yyVAL.selectInto = nil
		}
	case 726:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3688
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3692
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 728:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3696
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = " header"
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3723
		{
			yyVAL.str = ""
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = " manifest on"
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = " manifest off"
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = " overwrite on"
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3744
		{
			yyVAL.str = " overwrite off"
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3786
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = ""
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = ""
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3804
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = " optionally"
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3834
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3838
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3842
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3860
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3865
		{
			yyVAL.updateExprs = nil
		}
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3869
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3879
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3889
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3895
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3901
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3915
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3921
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3931
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3941
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3945
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3949
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3953
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3961
		{
			yyVAL.bytes = []byte("charset")
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3968
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3976
		{
			yyVAL.expr = &Default{}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3985
		{
			yyVAL.boolean = false
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3987
		{
			yyVAL.boolean = true
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3990
		{
			yyVAL.boolean = false
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3992
		{
			yyVAL.boolean = true
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3995
		{
			yyVAL.ignore = false
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.ignore = true
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.empty = struct{}{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.empty = struct{}{}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4023
		{
			yyVAL.empty = struct{}{}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4033
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4036
		{
			yyVAL.str = ""
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4045
		{
			yyVAL.indexOptions = nil
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4051
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4061
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4068
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4458
		{
			decNesting(yylex)
		}
	case 1167:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4463
		{
			skipToEnd(yylex)
		}
	case 1168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4468
		{
			skipToEnd(yylex)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			skipToEnd(yylex)
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
