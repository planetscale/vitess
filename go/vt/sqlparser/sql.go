// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const EXPRESSION_PREC_SETTER = 57457
const OR = 57458
const XOR = 57459
const AND = 57460
const NOT = 57461
const BETWEEN = 57462
const CASE = 57463
const WHEN = 57464
const THEN = 57465
const ELSE = 57466
const END = 57467
const LE = 57468
const GE = 57469
const NE = 57470
const NULL_SAFE_EQUAL = 57471
const IS = 57472
const LIKE = 57473
const REGEXP = 57474
const IN = 57475
const SHIFT_LEFT = 57476
const SHIFT_RIGHT = 57477
const DIV = 57478
const MOD = 57479
const UNARY = 57480
const COLLATE = 57481
const BINARY = 57482
const UNDERSCORE_BINARY = 57483
const UNDERSCORE_UTF8MB4 = 57484
const UNDERSCORE_UTF8 = 57485
const UNDERSCORE_LATIN1 = 57486
const INTERVAL = 57487
const JSON_EXTRACT_OP = 57488
const JSON_UNQUOTE_EXTRACT_OP = 57489
const CREATE = 57490
const ALTER = 57491
const DROP = 57492
const RENAME = 57493
const ANALYZE = 57494
const ADD = 57495
const FLUSH = 57496
const CHANGE = 57497
const MODIFY = 57498
const REVERT = 57499
const SCHEMA = 57500
const TABLE = 57501
const INDEX = 57502
const VIEW = 57503
const TO = 57504
const IGNORE = 57505
const IF = 57506
const PRIMARY = 57507
const COLUMN = 57508
const SPATIAL = 57509
const FULLTEXT = 57510
const KEY_BLOCK_SIZE = 57511
const CHECK = 57512
const INDEXES = 57513
const ACTION = 57514
const CASCADE = 57515
const CONSTRAINT = 57516
const FOREIGN = 57517
const NO = 57518
const REFERENCES = 57519
const RESTRICT = 57520
const SHOW = 57521
const DESCRIBE = 57522
const EXPLAIN = 57523
const DATE = 57524
const ESCAPE = 57525
const REPAIR = 57526
const OPTIMIZE = 57527
const TRUNCATE = 57528
const COALESCE = 57529
const EXCHANGE = 57530
const REBUILD = 57531
const PARTITIONING = 57532
const REMOVE = 57533
const MAXVALUE = 57534
const PARTITION = 57535
const REORGANIZE = 57536
const LESS = 57537
const THAN = 57538
const PROCEDURE = 57539
const TRIGGER = 57540
const VINDEX = 57541
const VINDEXES = 57542
const DIRECTORY = 57543
const NAME = 57544
const UPGRADE = 57545
const STATUS = 57546
const VARIABLES = 57547
const WARNINGS = 57548
const CASCADED = 57549
const DEFINER = 57550
const OPTION = 57551
const SQL = 57552
const UNDEFINED = 57553
const SEQUENCE = 57554
const MERGE = 57555
const TEMPORARY = 57556
const TEMPTABLE = 57557
const INVOKER = 57558
const SECURITY = 57559
const FIRST = 57560
const AFTER = 57561
const LAST = 57562
const VITESS_MIGRATION = 57563
const CANCEL = 57564
const RETRY = 57565
const COMPLETE = 57566
const BEGIN = 57567
const START = 57568
const TRANSACTION = 57569
const COMMIT = 57570
const ROLLBACK = 57571
const SAVEPOINT = 57572
const RELEASE = 57573
const WORK = 57574
const BIT = 57575
const TINYINT = 57576
const SMALLINT = 57577
const MEDIUMINT = 57578
const INT = 57579
const INTEGER = 57580
const BIGINT = 57581
const INTNUM = 57582
const REAL = 57583
const DOUBLE = 57584
const FLOAT_TYPE = 57585
const DECIMAL = 57586
const NUMERIC = 57587
const TIME = 57588
const TIMESTAMP = 57589
const DATETIME = 57590
const YEAR = 57591
const CHAR = 57592
const VARCHAR = 57593
const BOOL = 57594
const CHARACTER = 57595
const VARBINARY = 57596
const NCHAR = 57597
const TEXT = 57598
const TINYTEXT = 57599
const MEDIUMTEXT = 57600
const LONGTEXT = 57601
const BLOB = 57602
const TINYBLOB = 57603
const MEDIUMBLOB = 57604
const LONGBLOB = 57605
const JSON = 57606
const ENUM = 57607
const GEOMETRY = 57608
const POINT = 57609
const LINESTRING = 57610
const POLYGON = 57611
const GEOMETRYCOLLECTION = 57612
const MULTIPOINT = 57613
const MULTILINESTRING = 57614
const MULTIPOLYGON = 57615
const NULLX = 57616
const AUTO_INCREMENT = 57617
const APPROXNUM = 57618
const SIGNED = 57619
const UNSIGNED = 57620
const ZEROFILL = 57621
const CODE = 57622
const COLLATION = 57623
const COLUMNS = 57624
const DATABASES = 57625
const ENGINES = 57626
const EVENT = 57627
const EXTENDED = 57628
const FIELDS = 57629
const FULL = 57630
const FUNCTION = 57631
const GTID_EXECUTED = 57632
const KEYSPACES = 57633
const OPEN = 57634
const PLUGINS = 57635
const PRIVILEGES = 57636
const PROCESSLIST = 57637
const SCHEMAS = 57638
const TABLES = 57639
const TRIGGERS = 57640
const USER = 57641
const VGTID_EXECUTED = 57642
const VITESS_KEYSPACES = 57643
const VITESS_METADATA = 57644
const VITESS_MIGRATIONS = 57645
const VITESS_REPLICATION_STATUS = 57646
const VITESS_SHARDS = 57647
const VITESS_TABLETS = 57648
const VSCHEMA = 57649
const NAMES = 57650
const GLOBAL = 57651
const SESSION = 57652
const ISOLATION = 57653
const LEVEL = 57654
const READ = 57655
const WRITE = 57656
const ONLY = 57657
const REPEATABLE = 57658
const COMMITTED = 57659
const UNCOMMITTED = 57660
const SERIALIZABLE = 57661
const CURRENT_TIMESTAMP = 57662
const DATABASE = 57663
const CURRENT_DATE = 57664
const CURRENT_TIME = 57665
const LOCALTIME = 57666
const LOCALTIMESTAMP = 57667
const CURRENT_USER = 57668
const UTC_DATE = 57669
const UTC_TIME = 57670
const UTC_TIMESTAMP = 57671
const DAY = 57672
const DAY_HOUR = 57673
const DAY_MICROSECOND = 57674
const DAY_MINUTE = 57675
const DAY_SECOND = 57676
const HOUR = 57677
const HOUR_MICROSECOND = 57678
const HOUR_MINUTE = 57679
const HOUR_SECOND = 57680
const MICROSECOND = 57681
const MINUTE = 57682
const MINUTE_MICROSECOND = 57683
const MINUTE_SECOND = 57684
const MONTH = 57685
const QUARTER = 57686
const SECOND = 57687
const SECOND_MICROSECOND = 57688
const YEAR_MONTH = 57689
const WEEK = 57690
const REPLACE = 57691
const CONVERT = 57692
const CAST = 57693
const SUBSTR = 57694
const SUBSTRING = 57695
const GROUP_CONCAT = 57696
const SEPARATOR = 57697
const TIMESTAMPADD = 57698
const TIMESTAMPDIFF = 57699
const MATCH = 57700
const AGAINST = 57701
const BOOLEAN = 57702
const LANGUAGE = 57703
const WITH = 57704
const QUERY = 57705
const EXPANSION = 57706
const WITHOUT = 57707
const VALIDATION = 57708
const UNUSED = 57709
const ARRAY = 57710
const CUME_DIST = 57711
const DESCRIPTION = 57712
const DENSE_RANK = 57713
const EMPTY = 57714
const EXCEPT = 57715
const FIRST_VALUE = 57716
const GROUPING = 57717
const GROUPS = 57718
const JSON_TABLE = 57719
const LAG = 57720
const LAST_VALUE = 57721
const LATERAL = 57722
const LEAD = 57723
const MEMBER = 57724
const NTH_VALUE = 57725
const NTILE = 57726
const OF = 57727
const OVER = 57728
const PERCENT_RANK = 57729
const RANK = 57730
const RECURSIVE = 57731
const ROW_NUMBER = 57732
const SYSTEM = 57733
const WINDOW = 57734
const ACTIVE = 57735
const ADMIN = 57736
const BUCKETS = 57737
const CLONE = 57738
const COMPONENT = 57739
const DEFINITION = 57740
const ENFORCED = 57741
const EXCLUDE = 57742
const FOLLOWING = 57743
const GEOMCOLLECTION = 57744
const GET_MASTER_PUBLIC_KEY = 57745
const HISTOGRAM = 57746
const HISTORY = 57747
const INACTIVE = 57748
const INVISIBLE = 57749
const LOCKED = 57750
const MASTER_COMPRESSION_ALGORITHMS = 57751
const MASTER_PUBLIC_KEY_PATH = 57752
const MASTER_TLS_CIPHERSUITES = 57753
const MASTER_ZSTD_COMPRESSION_LEVEL = 57754
const NESTED = 57755
const NETWORK_NAMESPACE = 57756
const NOWAIT = 57757
const NULLS = 57758
const OJ = 57759
const OLD = 57760
const OPTIONAL = 57761
const ORDINALITY = 57762
const ORGANIZATION = 57763
const OTHERS = 57764
const PATH = 57765
const PERSIST = 57766
const PERSIST_ONLY = 57767
const PRECEDING = 57768
const PRIVILEGE_CHECKS_USER = 57769
const PROCESS = 57770
const RANDOM = 57771
const REFERENCE = 57772
const REQUIRE_ROW_FORMAT = 57773
const RESOURCE = 57774
const RESPECT = 57775
const RESTART = 57776
const RETAIN = 57777
const REUSE = 57778
const ROLE = 57779
const SECONDARY = 57780
const SECONDARY_ENGINE = 57781
const SECONDARY_LOAD = 57782
const SECONDARY_UNLOAD = 57783
const SKIP = 57784
const SRID = 57785
const THREAD_PRIORITY = 57786
const TIES = 57787
const UNBOUNDED = 57788
const VCPU = 57789
const VISIBLE = 57790
const FORMAT = 57791
const TREE = 57792
const VITESS = 57793
const TRADITIONAL = 57794
const LOCAL = 57795
const LOW_PRIORITY = 57796
const NO_WRITE_TO_BINLOG = 57797
const LOGS = 57798
const ERROR = 57799
const GENERAL = 57800
const HOSTS = 57801
const OPTIMIZER_COSTS = 57802
const USER_RESOURCES = 57803
const SLOW = 57804
const CHANNEL = 57805
const RELAY = 57806
const EXPORT = 57807
const AVG_ROW_LENGTH = 57808
const CONNECTION = 57809
const CHECKSUM = 57810
const DELAY_KEY_WRITE = 57811
const ENCRYPTION = 57812
const ENGINE = 57813
const INSERT_METHOD = 57814
const MAX_ROWS = 57815
const MIN_ROWS = 57816
const PACK_KEYS = 57817
const PASSWORD = 57818
const FIXED = 57819
const DYNAMIC = 57820
const COMPRESSED = 57821
const REDUNDANT = 57822
const COMPACT = 57823
const ROW_FORMAT = 57824
const STATS_AUTO_RECALC = 57825
const STATS_PERSISTENT = 57826
const STATS_SAMPLE_PAGES = 57827
const STORAGE = 57828
const MEMORY = 57829
const DISK = 57830

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	506, 137,
	-2, 143,
	-1, 45,
	115, 143,
	155, 143,
	270, 143,
	-2, 410,
	-1, 52,
	33, 561,
	177, 561,
	188, 561,
	221, 575,
	222, 575,
	-2, 563,
	-1, 57,
	179, 585,
	-2, 583,
	-1, 108,
	176, 1030,
	-2, 116,
	-1, 110,
	1, 138,
	506, 138,
	-2, 143,
	-1, 120,
	116, 313,
	182, 313,
	-2, 404,
	-1, 139,
	115, 143,
	155, 143,
	270, 143,
	-2, 419,
	-1, 592,
	162, 1051,
	-2, 1047,
	-1, 593,
	162, 1052,
	-2, 1048,
	-1, 625,
	57, 653,
	-2, 661,
	-1, 662,
	131, 1403,
	-2, 109,
	-1, 663,
	131, 1283,
	-2, 110,
	-1, 669,
	131, 1335,
	-2, 1024,
	-1, 809,
	131, 1217,
	-2, 1021,
	-1, 845,
	187, 38,
	192, 38,
	-2, 324,
	-1, 922,
	1, 458,
	506, 458,
	-2, 143,
	-1, 1126,
	57, 654,
	-2, 666,
	-1, 1127,
	57, 655,
	-2, 667,
	-1, 1179,
	1, 354,
	506, 354,
	-2, 143,
	-1, 1182,
	23, 162,
	-2, 164,
	-1, 1255,
	116, 313,
	182, 313,
	-2, 404,
	-1, 1264,
	187, 39,
	192, 39,
	-2, 325,
	-1, 1516,
	162, 1056,
	-2, 1050,
	-1, 1590,
	1, 355,
	506, 355,
	-2, 143,
	-1, 1825,
	75, 91,
	84, 91,
	-2, 95,
	-1, 1991,
	47, 992,
	-2, 986,
	-1, 2178,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 694,
}

const yyPrivate = 57344

const yyLast = 30866

var yyAct = [...]int{
	592, 2218, 2377, 2099, 2352, 2339, 3, 2285, 1843, 1850,
	2002, 1108, 2005, 586, 34, 985, 640, 2242, 587, 1770,
	1852, 1141, 2003, 2006, 1657, 2149, 1529, 650, 2143, 2169,
	2247, 1550, 544, 2234, 1821, 2000, 1992, 933, 548, 1790,
	540, 1869, 90, 1622, 1546, 595, 1931, 618, 176, 542,
	1892, 176, 2046, 508, 176, 584, 1798, 1642, 585, 524,
	570, 176, 1870, 1563, 1576, 1627, 1871, 1810, 1567, 176,
	148, 1280, 812, 1568, 1128, 33, 536, 1782, 1468, 962,
	1461, 176, 35, 1947, 1587, 622, 875, 626, 1510, 1655,
	1641, 1236, 537, 1420, 134, 840, 667, 1629, 1371, 1688,
	1863, 1827, 1150, 524, 1171, 643, 524, 176, 524, 641,
	1480, 1531, 1438, 620, 553, 1003, 1570, 1111, 664, 819,
	85, 644, 1368, 816, 1262, 846, 1269, 1639, 1354, 1618,
	841, 1555, 842, 1154, 820, 1170, 1231, 632, 1376, 918,
	843, 1168, 983, 978, 89, 853, 1254, 654, 630, 627,
	117, 541, 151, 111, 70, 92, 628, 112, 1551, 91,
	118, 531, 8, 1073, 629, 71, 7, 6, 1069, 1911,
	1910, 1686, 83, 1340, 1522, 648, 1939, 653, 79, 1792,
	1940, 828, 823, 178, 179, 180, 1427, 1526, 1527, 1426,
	1425, 1424, 119, 1423, 1422, 1409, 534, 113, 535, 2373,
	1768, 813, 1414, 1988, 2068, 634, 2195, 2281, 84, 2280,
	880, 481, 576, 2213, 879, 878, 2214, 2391, 2362, 72,
	72, 1725, 74, 877, 532, 2390, 621, 2330, 2385, 1004,
	619, 72, 2219, 2353, 1674, 2329, 891, 892, 1513, 895,
	896, 897, 898, 2361, 661, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	635, 668, 856, 113, 834, 96, 1004, 857, 833, 2260,
	642, 1946, 835, 2131, 72, 1245, 1918, 2039, 2040, 1769,
	1917, 881, 882, 883, 921, 1723, 1836, 2038, 1938, 1835,
	1582, 1583, 1837, 888, 1014, 1722, 81, 81, 1801, 1581,
	1172, 1634, 1173, 98, 99, 952, 102, 615, 81, 108,
	893, 1509, 173, 614, 1860, 476, 2146, 832, 1035, 927,
	928, 981, 1948, 1802, 1632, 940, 2123, 113, 1528, 2121,
	941, 1014, 969, 511, 971, 617, 1602, 1601, 625, 2290,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1043, 1045,
	1046, 81, 953, 1413, 827, 917, 946, 829, 522, 940,
	526, 2101, 520, 1360, 941, 1950, 656, 657, 957, 958,
	968, 970, 939, 830, 938, 1115, 511, 511, 1699, 1697,
	1698, 832, 916, 1656, 1010, 1893, 1914, 1002, 1415, 1416,
	1417, 2389, 1501, 1490, 1491, 1492, 1493, 1503, 1494, 1495,
	1496, 1508, 1504, 1497, 1498, 1505, 1506, 1507, 1499, 1500,
	1502, 2095, 1631, 832, 1689, 824, 894, 836, 980, 2096,
	1694, 1010, 826, 825, 1330, 1355, 975, 1952, 954, 1956,
	961, 1951, 947, 1949, 178, 179, 180, 2102, 1954, 1701,
	923, 1702, 1926, 1703, 920, 2374, 1704, 1953, 588, 2103,
	571, 573, 589, 590, 959, 569, 572, 591, 966, 900,
	1955, 1957, 967, 511, 960, 899, 1331, 1693, 1332, 830,
	955, 956, 972, 1695, 1691, 2208, 176, 2277, 176, 1658,
	831, 176, 1564, 837, 574, 575, 873, 872, 512, 871,
	864, 870, 869, 868, 965, 862, 867, 2067, 866, 973,
	861, 1248, 874, 855, 1856, 2386, 2383, 1692, 1047, 524,
	524, 524, 1361, 1047, 2381, 817, 817, 817, 848, 815,
	936, 849, 942, 943, 944, 945, 1369, 524, 524, 655,
	919, 512, 512, 1916, 2075, 996, 1640, 950, 1771, 1773,
	2147, 2328, 34, 1927, 831, 982, 1009, 1006, 1007, 1008,
	1013, 1015, 1012, 1942, 1011, 1680, 855, 1365, 1736, 1268,
	990, 1005, 884, 854, 1975, 1723, 1020, 890, 858, 848,
	974, 1913, 1930, 1974, 1973, 1243, 831, 2291, 859, 75,
	1724, 1242, 976, 1009, 1006, 1007, 1008, 1013, 1015, 1012,
	865, 1011, 80, 80, 1067, 863, 860, 855, 1005, 1050,
	1051, 1052, 1053, 1241, 80, 1633, 1903, 1366, 1239, 1058,
	480, 1061, 475, 110, 2314, 176, 854, 1846, 512, 1676,
	1106, 2183, 848, 851, 852, 1267, 817, 1048, 1049, 2165,
	845, 849, 176, 1118, 537, 1116, 1832, 1122, 1342, 1341,
	1343, 1344, 1345, 622, 1797, 1761, 1772, 80, 1359, 844,
	855, 524, 987, 988, 1666, 176, 1158, 854, 929, 926,
	524, 855, 1847, 937, 620, 1121, 524, 1080, 931, 1119,
	1054, 1933, 1046, 1151, 2379, 664, 1932, 2380, 1933, 2378,
	1047, 949, 1107, 1932, 1925, 1588, 1849, 1924, 2037, 637,
	1844, 999, 951, 71, 2345, 997, 998, 963, 2343, 1107,
	1377, 855, 979, 2324, 1854, 1855, 935, 2347, 2348, 105,
	854, 1845, 1854, 1855, 2159, 1963, 848, 851, 852, 2344,
	817, 854, 876, 889, 845, 849, 172, 1481, 1690, 1362,
	1174, 1112, 1120, 1000, 1882, 1019, 89, 1075, 1071, 1356,
	1072, 1357, 2256, 1851, 1358, 2057, 1481, 92, 1750, 2128,
	114, 2056, 1086, 1087, 1088, 1089, 1675, 1443, 178, 179,
	180, 854, 1463, 156, 1673, 106, 858, 848, 1018, 1019,
	1853, 1444, 1445, 1442, 1662, 1109, 859, 1279, 1853, 1278,
	1140, 619, 1856, 1266, 621, 178, 179, 180, 922, 1794,
	1856, 1041, 1042, 1044, 1043, 1045, 1046, 1017, 1117, 1018,
	1019, 1159, 1137, 1746, 1164, 1165, 1965, 1671, 864, 1556,
	1557, 1035, 176, 1941, 1135, 862, 1232, 2367, 668, 153,
	2042, 154, 2126, 1135, 2194, 1240, 964, 1148, 1464, 1378,
	2368, 171, 934, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1044, 1043, 1045, 1046, 524, 1135, 1264, 1741, 1017, 2273,
	1018, 1019, 2387, 2193, 1273, 1795, 1740, 1017, 1277, 1018,
	1019, 524, 524, 2073, 524, 1868, 524, 524, 1867, 524,
	524, 524, 524, 524, 524, 1745, 1433, 1435, 1436, 1017,
	1848, 1018, 1019, 1017, 524, 1018, 1019, 2333, 176, 1313,
	1123, 1017, 1147, 1018, 1019, 1274, 1866, 1434, 157, 1017,
	1668, 1018, 1019, 1017, 176, 1018, 1019, 162, 2311, 2307,
	1017, 1637, 1018, 1019, 2134, 524, 1260, 176, 2334, 1350,
	1308, 1309, 1246, 1247, 1668, 2388, 1672, 1017, 1367, 1018,
	1019, 1169, 176, 1282, 1253, 1283, 1335, 1285, 1287, 1739,
	2308, 1291, 1293, 1295, 1297, 1299, 609, 610, 176, 1017,
	1670, 1018, 1019, 1349, 1135, 176, 1310, 1017, 1334, 1018,
	1019, 1485, 1238, 1375, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 524, 524, 524, 1333, 81, 1272, 1271,
	1316, 1317, 1263, 1324, 1381, 1250, 1322, 1323, 1318, 1251,
	1441, 1385, 1315, 1387, 1388, 1389, 1390, 1270, 1270, 1249,
	1394, 1314, 1289, 176, 1039, 1040, 1041, 1042, 1044, 1043,
	1045, 1046, 2098, 149, 1408, 1326, 1348, 1135, 1379, 1380,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1021, 1373, 1728,
	1729, 1730, 1384, 1144, 659, 1017, 2310, 1018, 1019, 1391,
	1392, 1393, 1035, 1311, 1428, 1429, 1430, 1431, 1462, 1439,
	2309, 593, 1370, 2133, 178, 179, 180, 2255, 2054, 1347,
	2253, 1471, 524, 1437, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1044, 1043, 1045, 1046, 113, 834, 524, 524, 2231,
	833, 1337, 1145, 1447, 1469, 1470, 2191, 1383, 1017, 2053,
	1018, 1019, 1475, 1876, 1244, 1864, 1514, 1684, 1683, 177,
	1549, 1535, 177, 1102, 1105, 177, 1466, 1482, 1103, 1465,
	525, 1410, 177, 1104, 176, 1404, 1405, 1406, 1374, 1407,
	177, 1338, 1346, 1098, 1101, 1325, 1534, 1321, 1099, 1094,
	1097, 1320, 177, 1100, 1095, 1319, 1536, 1146, 1537, 1096,
	176, 977, 537, 524, 1336, 1440, 178, 179, 180, 2275,
	1090, 1093, 1828, 176, 525, 1091, 524, 525, 177, 525,
	1092, 176, 2274, 176, 2217, 176, 176, 524, 1784, 86,
	524, 1518, 1519, 1894, 1514, 1552, 1553, 1516, 1879, 1515,
	87, 524, 664, 88, 1446, 664, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1566,
	1788, 2359, 1586, 1542, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 1829, 89, 1788, 2337, 1203,
	167, 168, 169, 170, 1831, 1608, 1609, 1610, 1611, 178,
	179, 180, 89, 1839, 1135, 1596, 524, 178, 179, 180,
	1737, 1650, 1643, 1644, 1645, 1788, 2318, 1647, 1649, 88,
	1591, 95, 2158, 1592, 2032, 1516, 1799, 1561, 634, 1574,
	524, 1626, 94, 1723, 93, 2160, 524, 1273, 2297, 1135,
	1273, 1016, 1273, 88, 1624, 81, 1595, 1544, 2323, 1603,
	1667, 1604, 1605, 1606, 1607, 1799, 178, 179, 180, 1559,
	1648, 1828, 1630, 95, 1467, 2211, 1135, 1614, 1615, 1616,
	1617, 1473, 1474, 1579, 94, 1788, 93, 1135, 1578, 2001,
	524, 1594, 1462, 1593, 1807, 86, 2063, 1462, 1462, 2158,
	1517, 1580, 88, 1520, 1521, 668, 87, 1807, 668, 1788,
	2209, 1135, 1654, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1044, 1043, 1045, 1046, 1737, 1191, 1668, 1135, 2163, 1135,
	2065, 2064, 1755, 176, 1829, 1625, 2158, 1620, 1621, 94,
	176, 2061, 2062, 1723, 1541, 176, 176, 1638, 1636, 176,
	1635, 176, 1646, 1135, 2061, 2060, 1806, 176, 1807, 1135,
	1135, 1669, 1677, 1754, 176, 1660, 1668, 1625, 1204, 1659,
	1651, 1661, 1679, 1554, 1664, 1663, 1665, 1681, 1682, 856,
	1678, 1737, 1135, 1139, 857, 1723, 1912, 1235, 1896, 1890,
	1891, 1524, 176, 524, 1270, 1788, 1787, 1714, 1715, 1016,
	1135, 1418, 1717, 1235, 1234, 1180, 1179, 1737, 1364, 1166,
	1807, 1718, 2196, 624, 839, 1304, 838, 1873, 1668, 1217,
	1220, 1221, 1222, 1223, 1224, 1225, 1687, 1226, 1227, 1228,
	1229, 1230, 1205, 1206, 1207, 1208, 1189, 1190, 1218, 2287,
	1192, 1439, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216,
	1142, 2267, 2197, 2198, 2199, 1305, 1306, 1307, 2188, 1707,
	1237, 1623, 1035, 2097, 1733, 1031, 2059, 1032, 1037, 1038,
	1039, 1040, 1041, 1042, 1044, 1043, 1045, 1046, 1897, 1751,
	81, 1033, 1034, 1030, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1044, 1043, 1045, 1046, 176, 1619, 177, 1613, 177,
	1612, 1352, 177, 176, 1721, 1265, 1812, 1815, 1816, 1817,
	1813, 524, 1814, 1818, 1261, 1233, 2170, 2171, 107, 1872,
	2100, 2200, 1793, 1301, 921, 1731, 2288, 1440, 2170, 2171,
	525, 525, 525, 1634, 2364, 2340, 1219, 2173, 2080, 2079,
	1803, 2078, 2001, 176, 176, 1883, 1708, 34, 525, 525,
	1411, 1789, 1151, 1035, 2176, 1735, 1823, 1133, 1129, 1838,
	1749, 2025, 2175, 1816, 1817, 1732, 1873, 1734, 2201, 2202,
	1302, 1303, 1130, 2020, 2019, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1044, 1043, 1045, 1046, 2376, 1785, 1812, 1815,
	1816, 1817, 1813, 2360, 1814, 1818, 1143, 1538, 1539, 1132,
	1540, 1131, 1548, 2023, 2021, 524, 1861, 1862, 2024, 2022,
	176, 1112, 1767, 2164, 1775, 1993, 1995, 176, 1822, 2084,
	1981, 1980, 2246, 524, 1996, 2306, 2248, 1796, 2154, 524,
	1786, 1841, 1781, 1273, 1273, 2151, 177, 1826, 638, 524,
	1990, 1363, 613, 2150, 1858, 1599, 639, 1830, 1877, 886,
	885, 1909, 1900, 177, 1477, 1833, 1630, 2110, 1842, 86,
	1872, 1936, 176, 176, 176, 176, 176, 1889, 1478, 1905,
	87, 989, 525, 1904, 114, 2156, 177, 88, 176, 176,
	2076, 525, 1133, 1129, 1865, 1747, 1711, 525, 1875, 1556,
	1557, 86, 2320, 2283, 176, 1857, 1874, 1130, 88, 1907,
	1820, 1545, 87, 1979, 1884, 1885, 1886, 1700, 1880, 646,
	647, 1978, 1462, 1727, 95, 93, 1253, 95, 2254, 2252,
	1758, 1759, 1126, 1127, 1132, 94, 1131, 93, 94, 94,
	93, 2251, 524, 1516, 1908, 1515, 88, 1906, 2244, 2155,
	2153, 2081, 1652, 1960, 1961, 524, 1943, 1972, 1964, 645,
	95, 2243, 1966, 1967, 1968, 176, 1944, 1898, 1899, 524,
	620, 94, 2144, 1934, 1799, 1962, 1935, 1784, 524, 2366,
	2365, 1928, 1756, 1160, 1152, 524, 524, 2366, 176, 176,
	176, 176, 176, 1972, 2312, 1998, 1945, 2013, 626, 1984,
	176, 2007, 1959, 2052, 1958, 176, 636, 1999, 176, 100,
	101, 176, 176, 176, 97, 82, 1, 2342, 1122, 1983,
	2004, 493, 1525, 1110, 507, 2004, 1976, 2338, 1339, 1971,
	1329, 2220, 2055, 2284, 2087, 1628, 847, 176, 139, 1982,
	1985, 1589, 2033, 177, 1590, 2034, 2355, 104, 810, 103,
	850, 948, 1653, 2212, 1859, 1600, 2014, 2012, 2074, 2017,
	627, 1186, 2015, 2016, 176, 2018, 2026, 628, 1184, 2031,
	1185, 524, 1183, 1188, 1187, 525, 2035, 1182, 524, 1134,
	2030, 1412, 2049, 521, 176, 2048, 1819, 2045, 174, 1175,
	1153, 2041, 525, 525, 176, 525, 887, 525, 525, 483,
	525, 525, 525, 525, 525, 525, 2066, 2088, 176, 1373,
	1685, 176, 2083, 89, 2070, 525, 489, 2069, 1059, 177,
	1977, 2111, 2086, 1834, 665, 658, 2009, 2148, 1989, 1991,
	1791, 1994, 1987, 2305, 1630, 177, 2245, 2092, 2090, 2071,
	2072, 2049, 2085, 2082, 2048, 2319, 525, 1597, 177, 1149,
	1748, 2106, 2108, 2109, 1066, 2105, 1479, 1571, 176, 1533,
	1432, 546, 2112, 177, 545, 543, 1777, 1800, 1022, 596,
	1161, 1811, 2113, 2132, 1809, 1808, 2119, 1709, 1575, 177,
	2172, 2168, 1569, 1783, 554, 547, 177, 539, 594, 2044,
	2047, 1598, 1915, 2094, 1001, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 525, 525, 525, 2145, 2152, 1125,
	533, 822, 1476, 176, 2289, 1726, 537, 2130, 2157, 2142,
	2116, 2117, 1124, 2118, 1488, 1489, 2120, 2174, 2122, 2177,
	60, 38, 528, 2372, 177, 992, 652, 32, 31, 30,
	29, 28, 23, 22, 21, 20, 19, 2180, 25, 18,
	2167, 2184, 17, 16, 109, 47, 176, 44, 42, 176,
	176, 176, 524, 116, 115, 2187, 45, 2189, 2179, 41,
	2181, 2182, 2190, 924, 2192, 39, 2185, 2186, 27, 26,
	15, 2221, 524, 524, 524, 14, 13, 12, 11, 10,
	9, 5, 4, 525, 995, 2216, 24, 2, 2227, 2215,
	0, 0, 0, 0, 0, 0, 2207, 0, 525, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 524, 524,
	524, 176, 578, 0, 0, 0, 0, 2230, 0, 2226,
	0, 0, 0, 0, 2228, 0, 2229, 0, 0, 0,
	0, 2232, 2233, 0, 524, 177, 524, 2240, 0, 2261,
	0, 2241, 2238, 2239, 2250, 0, 34, 2263, 2249, 2007,
	0, 2257, 0, 2007, 2259, 0, 0, 2258, 0, 524,
	175, 177, 0, 479, 525, 0, 519, 2004, 2266, 0,
	0, 2268, 0, 479, 177, 0, 0, 525, 0, 0,
	620, 479, 177, 0, 177, 2265, 177, 177, 525, 0,
	524, 525, 620, 633, 0, 2276, 0, 2269, 0, 0,
	2278, 0, 525, 2272, 0, 2286, 2279, 2270, 0, 651,
	0, 651, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 0, 0, 0, 0, 2304, 0, 0, 2302,
	2301, 0, 0, 0, 0, 0, 2225, 0, 524, 0,
	0, 2303, 537, 2313, 0, 0, 0, 0, 0, 2007,
	0, 0, 2315, 0, 0, 0, 2317, 525, 524, 176,
	2322, 0, 0, 0, 0, 0, 0, 34, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 2316, 0, 0, 524, 0, 525, 0, 178,
	179, 180, 0, 2335, 524, 524, 0, 2349, 2341, 2346,
	0, 2354, 2325, 0, 34, 0, 0, 0, 0, 2286,
	2356, 0, 0, 0, 2363, 0, 0, 0, 511, 2350,
	0, 2004, 0, 0, 2369, 0, 0, 0, 0, 0,
	0, 525, 0, 2375, 0, 0, 0, 0, 0, 2382,
	0, 0, 0, 0, 81, 0, 0, 2384, 0, 0,
	597, 607, 608, 609, 610, 598, 604, 0, 0, 498,
	599, 0, 0, 605, 611, 612, 0, 0, 497, 0,
	0, 0, 0, 0, 177, 0, 0, 172, 0, 495,
	0, 177, 0, 0, 0, 0, 177, 177, 0, 0,
	177, 0, 177, 0, 0, 0, 0, 0, 177, 0,
	0, 114, 0, 136, 0, 177, 2050, 2051, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 492, 600, 602,
	601, 603, 0, 0, 0, 0, 506, 0, 0, 0,
	0, 0, 0, 177, 525, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 0, 146, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 154, 512, 0, 0, 0, 0, 123, 124,
	145, 144, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1136, 1138, 0,
	0, 482, 0, 484, 499, 0, 514, 0, 513, 488,
	0, 486, 490, 500, 491, 0, 485, 0, 496, 0,
	0, 487, 501, 502, 504, 518, 517, 505, 0, 494,
	515, 0, 0, 0, 0, 0, 0, 0, 140, 121,
	147, 128, 120, 0, 141, 142, 177, 0, 0, 157,
	0, 0, 0, 0, 177, 0, 0, 0, 162, 129,
	0, 0, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 130, 125, 126, 127, 131, 577,
	0, 0, 0, 122, 0, 0, 0, 0, 479, 0,
	479, 0, 133, 479, 177, 177, 0, 0, 588, 0,
	0, 0, 589, 590, 0, 0, 0, 591, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 597, 607, 608,
	609, 610, 598, 604, 0, 0, 0, 599, 523, 0,
	605, 611, 612, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 177, 0, 0, 149, 0, 0, 0, 177, 0,
	0, 0, 0, 516, 525, 0, 0, 0, 0, 0,
	525, 0, 666, 2050, 2051, 814, 0, 821, 0, 0,
	525, 509, 0, 0, 0, 600, 602, 601, 603, 0,
	0, 0, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 177, 177, 177, 177, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 177,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 0, 0, 633, 177, 0, 0, 0, 0,
	0, 137, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 525, 525, 0, 177,
	177, 177, 177, 177, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 177, 0, 0, 177,
	0, 0, 177, 177, 177, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 0, 0, 0, 0,
	0, 167, 168, 169, 170, 0, 0, 0, 177, 0,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 114, 177, 136, 0, 0, 0,
	0, 0, 525, 0, 0, 0, 0, 156, 0, 525,
	0, 0, 0, 0, 479, 177, 0, 0, 0, 0,
	0, 0, 0, 172, 0, 177, 0, 0, 0, 0,
	1483, 0, 0, 0, 1484, 0, 0, 0, 146, 177,
	0, 0, 177, 135, 0, 0, 0, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1276,
	156, 0, 0, 153, 0, 154, 0, 1136, 1523, 0,
	0, 1256, 1257, 145, 144, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 1276, 0, 0, 0, 177,
	479, 0, 0, 0, 0, 0, 0, 1543, 0, 0,
	0, 0, 1840, 0, 0, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 154, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 140, 1258, 147, 1372, 1255, 0, 141, 142, 0,
	0, 0, 157, 0, 177, 0, 0, 0, 0, 0,
	479, 162, 0, 0, 0, 0, 0, 479, 0, 0,
	0, 0, 0, 0, 0, 0, 1395, 1396, 479, 479,
	479, 479, 479, 479, 479, 0, 0, 0, 666, 666,
	666, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	177, 177, 177, 525, 0, 157, 991, 993, 0, 0,
	0, 0, 0, 0, 162, 479, 0, 0, 0, 0,
	0, 0, 0, 525, 525, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	525, 525, 177, 0, 0, 0, 0, 149, 651, 0,
	0, 0, 0, 0, 0, 651, 651, 0, 0, 0,
	0, 1276, 0, 0, 0, 525, 0, 525, 0, 0,
	0, 0, 651, 1372, 651, 651, 651, 651, 651, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 1327, 0, 0, 0,
	1156, 0, 0, 0, 0, 0, 0, 0, 651, 666,
	0, 525, 143, 0, 0, 1176, 0, 0, 0, 0,
	0, 0, 633, 0, 137, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 479, 0, 0, 0, 0,
	0, 1372, 0, 479, 0, 479, 0, 479, 1577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 525, 1738, 0, 0,
	0, 1742, 0, 1743, 1744, 525, 525, 0, 0, 0,
	0, 0, 1752, 0, 0, 1753, 0, 0, 150, 155,
	152, 158, 159, 160, 161, 163, 164, 165, 166, 0,
	0, 0, 0, 0, 167, 168, 169, 170, 0, 0,
	1757, 0, 0, 0, 0, 0, 0, 1762, 1763, 1764,
	1765, 1766, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1776, 0, 0, 0, 0, 0, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 814, 0, 0, 0, 167, 168, 169,
	170, 0, 0, 0, 0, 0, 1275, 0, 0, 0,
	1281, 1281, 0, 1281, 0, 1281, 1281, 0, 1290, 1281,
	1281, 1281, 1281, 1281, 0, 0, 0, 0, 0, 0,
	0, 1275, 1275, 814, 0, 479, 0, 0, 0, 0,
	0, 0, 479, 0, 0, 0, 0, 479, 479, 0,
	0, 479, 0, 1712, 0, 0, 0, 0, 0, 479,
	0, 0, 0, 0, 1351, 0, 479, 0, 0, 0,
	0, 0, 0, 72, 36, 37, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 78, 479, 0, 0, 40, 66, 67,
	0, 64, 68, 0, 0, 0, 0, 0, 0, 0,
	65, 0, 0, 0, 0, 0, 1113, 0, 0, 0,
	0, 0, 666, 666, 666, 0, 0, 0, 0, 0,
	606, 73, 0, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 651,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 0, 0, 0,
	0, 0, 0, 0, 651, 651, 0, 0, 1969, 1970,
	0, 0, 623, 0, 73, 0, 0, 479, 0, 0,
	0, 1472, 0, 0, 0, 1327, 0, 0, 1275, 0,
	0, 0, 623, 818, 0, 0, 1486, 1487, 0, 0,
	666, 0, 43, 46, 49, 48, 51, 0, 63, 0,
	0, 69, 0, 0, 2010, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 479, 479, 0, 0, 0,
	0, 2028, 2029, 52, 77, 76, 0, 0, 61, 62,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1156, 0, 0, 666, 54,
	55, 0, 56, 57, 58, 59, 666, 0, 0, 666,
	0, 0, 479, 0, 0, 0, 0, 0, 0, 1887,
	814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 479, 479, 479, 479, 0,
	0, 0, 0, 0, 0, 821, 0, 2115, 0, 0,
	479, 479, 0, 0, 0, 0, 0, 0, 2124, 2125,
	2127, 2129, 0, 0, 0, 0, 479, 0, 2135, 814,
	0, 2136, 0, 0, 0, 821, 2140, 0, 0, 0,
	651, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 651, 0, 0, 80, 0, 2161, 2162,
	0, 0, 2166, 0, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 0, 0, 0, 0, 479, 0, 0,
	2178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1276, 0, 0, 0, 0, 1276,
	479, 479, 479, 479, 479, 0, 0, 0, 0, 0,
	0, 0, 2027, 0, 0, 0, 0, 479, 0, 0,
	479, 0, 0, 479, 2036, 1372, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1720, 0, 0, 0, 479, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1276, 2235, 0, 0,
	0, 0, 0, 0, 0, 0, 479, 0, 0, 0,
	0, 0, 925, 0, 930, 0, 479, 932, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	479, 0, 0, 479, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	984, 984, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2282, 0, 0, 0, 73,
	479, 0, 0, 0, 0, 0, 0, 0, 2292, 2293,
	2294, 0, 2295, 2296, 2298, 0, 0, 0, 2299, 2300,
	0, 0, 0, 0, 0, 0, 623, 1055, 1056, 1057,
	1778, 1060, 0, 1062, 1063, 1064, 1065, 0, 1068, 1070,
	1070, 0, 1070, 1074, 1074, 1076, 1077, 1078, 1079, 0,
	1081, 1082, 1083, 1084, 1085, 479, 0, 0, 0, 1074,
	1074, 1074, 1074, 0, 0, 0, 0, 0, 0, 2327,
	0, 0, 0, 172, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1252, 0, 0, 1114, 0, 0,
	623, 0, 0, 0, 623, 0, 0, 114, 479, 136,
	623, 479, 479, 479, 0, 0, 0, 0, 0, 0,
	156, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1878, 0, 0, 0, 0, 0,
	2370, 2371, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 1547, 0, 0, 0, 135, 0, 1895, 0,
	0, 0, 0, 0, 0, 0, 666, 0, 1901, 0,
	0, 0, 0, 1327, 0, 0, 153, 0, 154, 0,
	0, 0, 0, 0, 1256, 1257, 145, 144, 171, 0,
	0, 1276, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 1258, 147, 0, 1255, 0,
	141, 142, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 666, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1281, 0, 0, 0, 1181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1986, 0,
	0, 0, 0, 0, 0, 0, 0, 666, 0, 0,
	0, 1275, 0, 0, 2011, 1281, 1275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 0, 0, 0, 0,
	0, 0, 0, 0, 1312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 0, 0, 0,
	814, 0, 0, 1275, 0, 0, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1382, 0, 0, 0, 0, 0,
	0, 1386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 0, 0,
	0, 0, 0, 984, 984, 984, 0, 137, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 1421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 0, 0, 0, 0, 0, 167, 168, 169,
	170, 1547, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2222, 2223, 2224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1558,
	0, 0, 0, 0, 0, 0, 0, 1562, 0, 1565,
	0, 0, 1421, 0, 0, 0, 0, 2236, 2236, 2236,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1275, 0,
	0, 0, 0, 2262, 0, 2264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 666,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1547, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1275, 0, 2336, 0, 0, 0, 0, 1421,
	0, 0, 0, 666, 666, 0, 1696, 0, 0, 0,
	0, 1705, 1706, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	1716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1760, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1774, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 1804, 1805, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1902, 0, 0, 0, 0, 0, 0, 0, 1919, 1920,
	1921, 1922, 1923, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1421, 1929, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1937, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2008, 0, 73, 0, 0, 1572, 1572,
	1572, 1572, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 1572, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2058, 0, 0, 0, 2043, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2077, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2093, 0, 0, 0, 0, 0, 2091, 0, 0, 0,
	0, 0, 0, 0, 2104, 0, 0, 2107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2137, 2138, 2139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2203, 0, 0, 2204, 2205, 2206, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 73, 0, 2008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2326, 0, 0, 2321, 0,
	0, 0, 0, 0, 73, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 792, 778, 405, 0, 728,
	795, 698, 716, 805, 719, 722, 761, 677, 741, 329,
	713, 73, 702, 673, 708, 674, 700, 730, 235, 697,
	780, 744, 794, 286, 232, 679, 703, 343, 718, 187,
	763, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 801, 290, 750, 0, 390,
	314, 0, 0, 0, 732, 784, 739, 774, 727, 762,
	687, 749, 796, 714, 758, 797, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	2357, 0, 2358, 0, 0, 0, 0, 0, 209, 0,
	216, 710, 755, 791, 711, 757, 230, 274, 237, 229,
	407, 802, 783, 0, 0, 202, 793, 734, 0, 760,
	0, 808, 672, 752, 0, 675, 678, 804, 787, 706,
	240, 0, 0, 0, 0, 0, 0, 0, 731, 740,
	771, 725, 0, 0, 0, 0, 0, 0, 0, 704,
	0, 748, 0, 0, 0, 683, 676, 0, 0, 0,
	0, 729, 0, 0, 0, 686, 0, 705, 772, 0,
	670, 258, 680, 315, 0, 776, 786, 726, 439, 790,
	724, 723, 767, 684, 782, 717, 285, 682, 282, 182,
	198, 0, 715, 325, 364, 370, 781, 701, 709, 221,
	707, 368, 339, 424, 205, 248, 361, 344, 366, 747,
	765, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	986, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	696, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 777, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	769, 807, 338, 369, 211, 426, 389, 691, 695, 689,
	690, 742, 743, 692, 798, 799, 800, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 773, 685, 0, 693,
	694, 0, 779, 788, 789, 746, 181, 195, 288, 803,
	358, 251, 453, 433, 429, 671, 688, 227, 699, 0,
	0, 712, 720, 721, 733, 735, 736, 737, 738, 311,
	753, 754, 756, 764, 766, 768, 770, 775, 785, 806,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 745, 751, 298, 245, 263, 273, 759, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 792, 778, 405, 0,
	728, 795, 698, 716, 805, 719, 722, 761, 677, 741,
	329, 713, 0, 702, 673, 708, 674, 700, 730, 235,
	697, 780, 744, 794, 286, 232, 679, 703, 343, 718,
	187, 763, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 801, 290, 750, 0,
	390, 314, 0, 0, 0, 732, 784, 739, 774, 727,
	762, 687, 749, 796, 714, 758, 797, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 710, 755, 791, 711, 757, 230, 274, 237,
	229, 407, 802, 783, 0, 0, 202, 793, 734, 0,
	760, 0, 808, 672, 752, 0, 675, 678, 804, 787,
	706, 240, 0, 0, 0, 0, 0, 0, 0, 731,
	740, 771, 725, 0, 0, 0, 0, 0, 2037, 0,
	704, 0, 748, 0, 0, 0, 683, 676, 0, 0,
	0, 0, 729, 0, 0, 0, 686, 0, 705, 772,
	0, 670, 258, 680, 315, 0, 776, 786, 726, 439,
	790, 724, 723, 767, 684, 782, 717, 285, 682, 282,
	182, 198, 0, 715, 325, 364, 370, 781, 701, 709,
	221, 707, 368, 339, 424, 205, 248, 361, 344, 366,
	747, 765, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 986, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 696, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 777, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 769, 807, 338, 369, 211, 426, 389, 691, 695,
	689, 690, 742, 743, 692, 798, 799, 800, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 773, 685, 0,
	693, 694, 0, 779, 788, 789, 746, 181, 195, 288,
	803, 358, 251, 453, 433, 429, 671, 688, 227, 699,
	0, 0, 712, 720, 721, 733, 735, 736, 737, 738,
	311, 753, 754, 756, 764, 766, 768, 770, 775, 785,
	806, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 745, 751, 298, 245, 263, 273, 759, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 792, 778, 405,
	0, 728, 795, 698, 716, 805, 719, 722, 761, 677,
	741, 329, 713, 0, 702, 673, 708, 674, 700, 730,
	235, 697, 780, 744, 794, 286, 232, 679, 703, 343,
	718, 187, 763, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 801, 290, 750,
	0, 390, 314, 0, 0, 0, 732, 784, 739, 774,
	727, 762, 687, 749, 796, 714, 758, 797, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 710, 755, 791, 711, 757, 230, 274,
	237, 229, 407, 802, 783, 0, 0, 202, 793, 734,
	0, 760, 0, 808, 672, 752, 0, 675, 678, 804,
	787, 706, 240, 0, 0, 0, 0, 0, 0, 0,
	731, 740, 771, 725, 0, 0, 0, 0, 0, 1997,
	0, 704, 0, 748, 0, 0, 0, 683, 676, 0,
	0, 0, 0, 729, 0, 0, 0, 686, 0, 705,
	772, 0, 670, 258, 680, 315, 0, 776, 786, 726,
	439, 790, 724, 723, 767, 684, 782, 717, 285, 682,
	282, 182, 198, 0, 715, 325, 364, 370, 781, 701,
	709, 221, 707, 368, 339, 424, 205, 248, 361, 344,
	366, 747, 765, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 986, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 696, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 777, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 769, 807, 338, 369, 211, 426, 389, 691,
	695, 689, 690, 742, 743, 692, 798, 799, 800, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 773, 685,
	0, 693, 694, 0, 779, 788, 789, 746, 181, 195,
	288, 803, 358, 251, 453, 433, 429, 671, 688, 227,
	699, 0, 0, 712, 720, 721, 733, 735, 736, 737,
	738, 311, 753, 754, 756, 764, 766, 768, 770, 775,
	785, 806, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 745, 751, 298, 245, 263, 273, 759,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 792, 778,
	405, 0, 728, 795, 698, 716, 805, 719, 722, 761,
	677, 741, 329, 713, 0, 702, 673, 708, 674, 700,
	730, 235, 697, 780, 744, 794, 286, 232, 679, 703,
	343, 718, 187, 763, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 801, 290,
	750, 0, 390, 314, 0, 0, 0, 732, 784, 739,
	774, 727, 762, 687, 749, 796, 714, 758, 797, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 710, 755, 791, 711, 757, 230,
	274, 237, 229, 407, 802, 783, 0, 0, 202, 793,
	734, 0, 760, 0, 808, 672, 752, 0, 675, 678,
	804, 787, 706, 240, 0, 0, 0, 0, 0, 0,
	0, 731, 740, 771, 725, 0, 0, 0, 0, 0,
	1560, 0, 704, 0, 748, 0, 0, 0, 683, 676,
	0, 0, 0, 0, 729, 0, 0, 0, 686, 0,
	705, 772, 0, 670, 258, 680, 315, 0, 776, 786,
	726, 439, 790, 724, 723, 767, 684, 782, 717, 285,
	682, 282, 182, 198, 0, 715, 325, 364, 370, 781,
	701, 709, 221, 707, 368, 339, 424, 205, 248, 361,
	344, 366, 747, 765, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 986, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 696, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 777, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 769, 807, 338, 369, 211, 426, 389,
	691, 695, 689, 690, 742, 743, 692, 798, 799, 800,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 773,
	685, 0, 693, 694, 0, 779, 788, 789, 746, 181,
	195, 288, 803, 358, 251, 453, 433, 429, 671, 688,
	227, 699, 0, 0, 712, 720, 721, 733, 735, 736,
	737, 738, 311, 753, 754, 756, 764, 766, 768, 770,
	775, 785, 806, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 745, 751, 298, 245, 263, 273,
	759, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 792,
	778, 405, 0, 728, 795, 698, 716, 805, 719, 722,
	761, 677, 741, 329, 713, 0, 702, 673, 708, 674,
	700, 730, 235, 697, 780, 744, 794, 286, 232, 679,
	703, 343, 718, 187, 763, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 801,
	290, 750, 0, 390, 314, 0, 0, 0, 732, 784,
	739, 774, 727, 762, 687, 749, 796, 714, 758, 797,
	276, 218, 186, 326, 391, 250, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 710, 755, 791, 711, 757,
	230, 274, 237, 229, 407, 802, 783, 0, 0, 202,
	793, 734, 0, 760, 0, 808, 672, 752, 0, 675,
	678, 804, 787, 706, 240, 0, 0, 0, 0, 0,
	0, 0, 731, 740, 771, 725, 0, 0, 0, 0,
	0, 0, 0, 704, 0, 748, 0, 0, 0, 683,
	676, 0, 0, 0, 0, 729, 0, 0, 0, 686,
	0, 705, 772, 0, 670, 258, 680, 315, 0, 776,
	786, 726, 439, 790, 724, 723, 767, 684, 782, 717,
	285, 682, 282, 182, 198, 0, 715, 325, 364, 370,
	781, 701, 709, 221, 707, 368, 339, 424, 205, 248,
	361, 344, 366, 747, 765, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 986, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 696, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 777, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 769, 807, 338, 369, 211, 426,
	389, 691, 695, 689, 690, 742, 743, 692, 798, 799,
	800, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	773, 685, 0, 693, 694, 0, 779, 788, 789, 746,
	181, 195, 288, 803, 358, 251, 453, 433, 429, 671,
	688, 227, 699, 0, 0, 712, 720, 721, 733, 735,
	736, 737, 738, 311, 753, 754, 756, 764, 766, 768,
	770, 775, 785, 806, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 745, 751, 298, 245, 263,
	273, 759, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	792, 778, 405, 0, 728, 795, 698, 716, 805, 719,
	722, 761, 677, 741, 329, 713, 0, 702, 673, 708,
	674, 700, 730, 235, 697, 780, 744, 794, 286, 232,
	679, 703, 343, 718, 187, 763, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	801, 290, 750, 0, 390, 314, 0, 0, 0, 732,
	784, 739, 774, 727, 762, 687, 749, 796, 714, 758,
	797, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 710, 755, 791, 711,
	757, 230, 274, 237, 229, 407, 802, 783, 0, 0,
	202, 793, 734, 0, 760, 0, 808, 672, 752, 0,
	675, 678, 804, 787, 706, 240, 0, 0, 0, 0,
	0, 0, 0, 731, 740, 771, 725, 0, 0, 0,
	0, 0, 0, 0, 704, 0, 748, 0, 0, 0,
	683, 676, 0, 0, 0, 0, 729, 0, 0, 0,
	686, 0, 705, 772, 0, 670, 258, 680, 315, 0,
	776, 786, 726, 439, 790, 724, 723, 767, 684, 782,
	717, 285, 682, 282, 182, 198, 0, 715, 325, 364,
	370, 781, 701, 709, 221, 707, 368, 339, 424, 205,
	248, 361, 344, 366, 747, 765, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 986, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 696, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 777, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 769, 807, 338, 369, 211,
	426, 389, 691, 695, 689, 690, 742, 743, 692, 798,
	799, 800, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 773, 685, 0, 693, 694, 0, 779, 788, 789,
	746, 181, 195, 288, 803, 358, 251, 453, 433, 429,
	671, 688, 227, 699, 0, 0, 712, 720, 721, 733,
	735, 736, 737, 738, 311, 753, 754, 756, 764, 766,
	768, 770, 775, 785, 806, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 745, 751, 298, 245,
	263, 273, 759, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 792, 778, 405, 0, 728, 795, 698, 716, 805,
	719, 722, 761, 677, 741, 329, 713, 0, 702, 673,
	708, 674, 700, 730, 235, 697, 780, 744, 794, 286,
	232, 679, 703, 343, 718, 187, 763, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 801, 290, 750, 0, 390, 314, 0, 0, 0,
	732, 784, 739, 774, 727, 762, 687, 749, 796, 714,
	758, 797, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 710, 755, 791,
	711, 757, 230, 274, 237, 229, 407, 802, 783, 0,
	0, 809, 793, 734, 0, 760, 0, 808, 672, 752,
	0, 675, 678, 804, 787, 706, 240, 0, 0, 0,
	0, 0, 0, 0, 731, 740, 771, 725, 0, 0,
	0, 0, 0, 0, 0, 704, 0, 748, 0, 0,
	0, 683, 676, 0, 0, 0, 0, 729, 0, 0,
	0, 686, 0, 705, 772, 0, 670, 258, 680, 315,
	0, 776, 786, 726, 439, 790, 724, 723, 767, 684,
	782, 717, 285, 682, 282, 182, 198, 0, 715, 325,
	364, 370, 781, 701, 709, 221, 707, 368, 339, 424,
	205, 248, 361, 344, 366, 747, 765, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 681, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 696, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 777,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 669, 663, 662, 283, 292, 769, 807, 338, 369,
	211, 426, 389, 691, 695, 689, 690, 742, 743, 692,
	798, 799, 800, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 773, 685, 0, 693, 694, 0, 779, 788,
	789, 746, 181, 195, 288, 803, 358, 251, 453, 433,
	429, 671, 688, 227, 699, 0, 0, 712, 720, 721,
	733, 735, 736, 737, 738, 311, 753, 754, 756, 764,
	766, 768, 770, 775, 785, 806, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 745, 751, 298,
	245, 263, 273, 759, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 792, 778, 405, 0, 728, 795, 698, 716,
	805, 719, 722, 761, 677, 741, 329, 713, 0, 702,
	673, 708, 674, 700, 730, 235, 697, 780, 744, 794,
	286, 232, 679, 703, 343, 718, 187, 763, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 801, 290, 750, 0, 390, 314, 0, 0,
	0, 732, 784, 739, 774, 727, 762, 687, 749, 796,
	714, 758, 797, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 710, 755,
	791, 711, 757, 230, 274, 237, 229, 407, 802, 783,
	0, 0, 809, 793, 734, 0, 760, 0, 808, 672,
	752, 0, 675, 678, 804, 787, 706, 240, 0, 0,
	0, 0, 0, 0, 0, 731, 740, 771, 725, 0,
	0, 0, 0, 0, 0, 0, 704, 0, 748, 0,
	0, 0, 683, 676, 0, 0, 0, 0, 729, 0,
	0, 0, 686, 0, 705, 772, 0, 670, 258, 680,
	315, 0, 776, 786, 726, 439, 790, 724, 723, 767,
	684, 782, 717, 285, 682, 282, 182, 198, 0, 715,
	325, 364, 370, 781, 701, 709, 221, 707, 368, 339,
	424, 205, 248, 361, 344, 366, 747, 765, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 1167, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 681, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 696, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	777, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 669, 663, 662, 283, 292, 769, 807, 338,
	369, 211, 426, 389, 691, 695, 689, 690, 742, 743,
	692, 798, 799, 800, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 773, 685, 0, 693, 694, 0, 779,
	788, 789, 746, 181, 195, 288, 803, 358, 251, 453,
	433, 429, 671, 688, 227, 699, 0, 0, 712, 720,
	721, 733, 735, 736, 737, 738, 311, 753, 754, 756,
	764, 766, 768, 770, 775, 785, 806, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 745, 751,
	298, 245, 263, 273, 759, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 792, 778, 405, 0, 728, 795, 698,
	716, 805, 719, 722, 761, 677, 741, 329, 713, 0,
	702, 673, 708, 674, 700, 730, 235, 697, 780, 744,
	794, 286, 232, 679, 703, 343, 718, 187, 763, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 801, 290, 750, 0, 390, 314, 0,
	0, 0, 732, 784, 739, 774, 727, 762, 687, 749,
	796, 714, 758, 797, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 710,
	755, 791, 711, 757, 230, 274, 237, 229, 407, 802,
	783, 0, 0, 809, 793, 734, 0, 760, 0, 808,
	672, 752, 0, 675, 678, 804, 787, 706, 240, 0,
	0, 0, 0, 0, 0, 0, 731, 740, 771, 725,
	0, 0, 0, 0, 0, 0, 0, 704, 0, 748,
	0, 0, 0, 683, 676, 0, 0, 0, 0, 729,
	0, 0, 0, 686, 0, 705, 772, 0, 670, 258,
	680, 315, 0, 776, 786, 726, 439, 790, 724, 723,
	767, 684, 782, 717, 285, 682, 282, 182, 198, 0,
	715, 325, 364, 370, 781, 701, 709, 221, 707, 368,
	339, 424, 205, 248, 361, 344, 366, 747, 765, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 660, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 681, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 696, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 777, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 669, 663, 662, 283, 292, 769, 807,
	338, 369, 211, 426, 389, 691, 695, 689, 690, 742,
	743, 692, 798, 799, 800, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 773, 685, 0, 693, 694, 0,
	779, 788, 789, 746, 181, 195, 288, 803, 358, 251,
	453, 433, 429, 671, 688, 227, 699, 0, 0, 712,
	720, 721, 733, 735, 736, 737, 738, 311, 753, 754,
	756, 764, 766, 768, 770, 775, 785, 806, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 745,
	751, 298, 245, 263, 273, 759, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 1511,
	0, 555, 0, 0, 0, 235, 560, 0, 0, 0,
	286, 232, 0, 1512, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 567, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 562, 563, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	81, 0, 0, 178, 179, 180, 597, 607, 608, 609,
	610, 598, 604, 0, 0, 209, 599, 216, 576, 605,
	611, 612, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	538, 552, 0, 566, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 550, 649, 0, 0, 0, 582, 0,
	551, 0, 0, 559, 600, 602, 601, 603, 561, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 581, 0, 0, 439, 0, 0, 579, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 588, 580, 571, 573, 589, 590,
	568, 569, 572, 591, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 583, 558, 557, 0, 564, 565, 0,
	574, 575, 556, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	555, 0, 0, 0, 235, 560, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 567, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 0, 0,
	1584, 0, 276, 218, 186, 326, 391, 250, 0, 81,
	0, 0, 178, 179, 180, 597, 607, 608, 609, 610,
	598, 604, 0, 0, 209, 599, 216, 576, 605, 611,
	612, 1585, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 538,
	552, 0, 566, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 550, 0, 0, 0, 0, 582, 0, 551,
	0, 0, 559, 600, 602, 601, 603, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 581, 0, 0, 439, 0, 0, 579, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 588, 580, 571, 573, 589, 590, 568,
	569, 572, 591, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 583, 558, 557, 0, 564, 565, 0, 574,
	575, 556, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 72, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	555, 0, 0, 0, 235, 560, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 567, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 81,
	0, 0, 178, 179, 180, 597, 607, 608, 609, 610,
	598, 604, 0, 0, 209, 599, 216, 576, 605, 611,
	612, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 538,
	552, 0, 566, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 550, 0, 0, 0, 0, 582, 0, 551,
	0, 0, 559, 600, 602, 601, 603, 561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 581, 0, 0, 439, 0, 0, 579, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 588, 580, 571, 573, 589, 590, 568,
	569, 572, 591, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 583, 558, 557, 0, 564, 565, 0, 574,
	575, 556, 181, 195, 288, 80, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 555,
	0, 0, 0, 235, 560, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	567, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 562, 563, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 81, 0,
	0, 178, 179, 180, 597, 607, 608, 609, 610, 598,
	604, 0, 0, 209, 599, 216, 576, 605, 611, 612,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 538, 552,
	0, 566, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 550, 0, 0, 0, 0, 582, 0, 551, 0,
	0, 559, 600, 602, 601, 603, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	581, 0, 0, 439, 0, 0, 579, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 2351, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 588, 580, 571, 573, 589, 590, 568, 569,
	572, 591, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 583, 558, 557, 0, 564, 565, 0, 574, 575,
	556, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 555, 0,
	0, 0, 235, 560, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 567,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	562, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 81, 0, 1135,
	178, 179, 180, 597, 607, 608, 609, 610, 598, 604,
	0, 0, 209, 599, 216, 576, 605, 611, 612, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 538, 552, 0,
	566, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	550, 0, 0, 0, 0, 582, 0, 551, 0, 0,
	559, 600, 602, 601, 603, 561, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 581,
	0, 0, 439, 0, 0, 579, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 588, 580, 571, 573, 589, 590, 568, 569, 572,
	591, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	583, 558, 557, 0, 564, 565, 0, 574, 575, 556,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 555, 0, 0,
	0, 235, 560, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 567, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 562,
	563, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 81, 0, 0, 178,
	179, 180, 597, 607, 608, 609, 610, 598, 604, 0,
	0, 209, 599, 216, 576, 605, 611, 612, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 538, 552, 0, 566,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 550,
	649, 0, 0, 0, 582, 0, 551, 0, 0, 559,
	600, 602, 601, 603, 561, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 581, 0,
	0, 439, 0, 0, 579, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	588, 580, 571, 573, 589, 590, 568, 569, 572, 591,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 583,
	558, 557, 0, 564, 565, 0, 574, 575, 556, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 555, 0, 0, 0,
	235, 560, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 567, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 562, 563,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 81, 0, 0, 178, 179,
	180, 597, 607, 608, 609, 610, 598, 604, 0, 0,
	209, 599, 216, 576, 605, 611, 612, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 538, 552, 0, 566, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 550, 0,
	0, 0, 0, 582, 0, 551, 0, 0, 559, 600,
	602, 601, 603, 561, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 581, 0, 0,
	439, 0, 0, 579, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 588,
	580, 571, 573, 589, 590, 568, 569, 572, 591, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 583, 558,
	557, 0, 564, 565, 0, 574, 575, 556, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 555, 0, 0, 0, 235,
	560, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 567, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 81, 0, 0, 178, 179, 180,
	597, 607, 608, 609, 610, 598, 604, 0, 0, 209,
	599, 216, 576, 605, 611, 612, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 552, 0, 566, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 582, 0, 551, 0, 0, 559, 600, 602,
	601, 603, 561, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 581, 0, 0, 439,
	0, 0, 579, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 588, 580,
	571, 573, 589, 590, 568, 569, 572, 591, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 583, 558, 557,
	0, 564, 565, 0, 574, 575, 556, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 854, 439, 0,
	0, 0, 0, 0, 851, 852, 285, 817, 282, 182,
	198, 845, 849, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 1155, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 1017, 0,
	1018, 1019, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 72, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 81, 0, 1135, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 80, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 72, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 81, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 80, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 1532, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 1328, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 1530, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 817, 282, 182, 198, 815, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 1532,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	1135, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 2237, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 1779, 0, 0, 1780,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 1178, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 1177, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 2332, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 2237, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 81, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 1328,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	1573, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 1157, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1047, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 1419, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 1300, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 1298, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 1296, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 1294, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 1292, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	1288, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 457, 458, 459, 460,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 1286,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 457, 458, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 1284, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 457, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 1259,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 1162, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 457, 458, 459, 460, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 994, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 457, 458, 459, 460, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	457, 458, 459, 460, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 530, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 457,
	458, 459, 460, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 529, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 477, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 457, 458,
	459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231,
}

var yyPact = [...]int{
	3527, -1000, -334, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1701, 1739, -1000, -1000, -1000, -1000, 1819,
	-1000, 626, 1465, -1000, 1675, 2402, -1000, 30360, 436, -1000,
	29861, 434, 2233, 30360, -1000, 118, -1000, 109, 30360, 113,
	29362, -1000, -1000, -274, 13392, 1630, -1, -7, 30360, -1000,
	1775, 1427, -1000, 225, -1000, -1000, -1000, -1000, -1000, -1000,
	28863, -1000, -1000, -1000, 1680, 1669, 1816, 548, 1628, -1000,
	1727, 1427, -1000, 13392, 1762, 1718, 12893, -1000, 12893, 349,
	-1000, -1000, 9898, -1000, -1000, 16887, 30360, 30360, 238, -1000,
	1675, -1000, -1000, 262, -1000, 275, 1352, -1000, 1350, -1000,
	439, 386, 290, 385, 380, 288, 286, 283, 282, 281,
	279, 277, 276, 295, -1000, 591, 591, -168, -169, 721,
	335, 335, 335, 383, 1647, 1646, -1000, 544, -1000, 591,
	591, 261, 591, 591, 591, 591, 247, 241, 591, 591,
	591, 591, 591, 591, 591, 591, 591, 591, 591, 591,
	591, 591, 591, 206, 1675, 220, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 30360, 142, 30360, -1000, 506,
	30360, 693, 693, 60, 693, 693, 693, 693, 135, 504,
	-9, -1000, 131, 249, 147, 209, 685, 156, 97, -1000,
	-1000, 204, 685, 1051, 563, 104, -1000, 693, 7894, 7894,
	7894, -1000, 1671, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 381, -1000, -1000, -1000, -1000, 30360, 28364, 213, 602,
	-1000, -1000, -1000, 73, -1000, -1000, 1187, 838, 13392, 889,
	-1000, 1372, 525, -1000, -1000, -1000, -1000, -1000, 464, 13891,
	13891, 13891, 13891, -1000, -1000, 1192, 1192, 1192, 1192, 13891,
	1192, 13891, 1192, 1192, 1192, 1192, 13392, 1192, 1192, 1192,
	-1000, 1192, 1192, 1192, 1192, 1192, 1192, 1192, 505, 1192,
	1192, 1192, 1192, 1192, -1000, -1000, -1000, -1000, 1192, 1192,
	1192, 1192, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1061, 1040, 1034, 1014, -1000, -1000, 11396, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30360, -1000, 1192, 137, 1727, 1427,
	-1000, 1775, 1742, 225, -1000, 1691, 1246, 1295, 932, 1427,
	1319, 30360, -1000, 1397, -1000, -1000, -1000, 1567, 992, 1047,
	-1000, -1000, -1000, -1000, 808, 13392, -1000, -1000, 1792, -1000,
	14889, 494, 704, 1791, 27865, -1000, 349, 349, 1345, 9397,
	-28, -1000, -1000, -1000, 599, 18883, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1671, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1341, 30360, -1000, -1000, 1189, 1060, -1000, 1462, -1000, 1339,
	-1000, 1407, 1476, 432, 1060, 426, 404, 398, -1000, -91,
	-1000, -1000, -1000, -1000, -1000, 591, 591, 294, 2402, 4188,
	-1000, -1000, -1000, 27366, 1461, 1060, -1000, 1452, -1000, 666,
	443, 480, 480, 1060, -1000, -1000, 30360, 1060, 662, 660,
	30360, 30360, -1000, 26867, -1000, 26368, 25869, 910, 30360, 25370,
	24871, 24372, 23873, 23374, -1000, 1524, -1000, 1406, -1000, -1000,
	-1000, 30360, 30360, 30360, 218, -1000, -1000, 30360, 1060, -1000,
	-1000, 909, 900, 591, 591, 896, 1045, 1041, 1037, 591,
	591, 891, 1035, 20879, 231, 884, 866, 844, 1052, 1031,
	144, 1030, 924, 827, 30360, 1448, 30360, -1000, 200, 574,
	273, 598, 1675, 1629, 1344, 378, 431, 1060, 345, 345,
	-1000, 8395, -1000, -1000, 1028, 13392, -1000, 688, 685, 685,
	-1000, -1000, -1000, -1000, -1000, -1000, 693, 30360, 688, -1000,
	-1000, -1000, 685, 693, 30360, 693, 693, 693, 693, 685,
	685, 685, 693, 30360, 30360, 30360, 30360, 30360, 30360, 30360,
	30360, 30360, 7894, 7894, 7894, 563, 693, -278, -1000, 1021,
	-1000, 1506, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	106, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-79, 1337, 22875, -1000, -279, -280, -282, -283, -1000, -1000,
	-1000, -284, -287, -1000, -1000, -1000, 13392, 13392, 13392, 13392,
	-1000, 774, 13891, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	894, 632, 13891, 13891, 13891, 13891, 13891, 13891, 13891, 13891,
	13891, 13891, 13891, 13891, 13891, 13891, 13891, 672, 1019, 1016,
	525, 525, 525, 525, -1000, 12893, 13392, 13392, 525, -1000,
	1060, 22376, 12893, 12893, 13392, 1662, 600, 838, 30360, -1000,
	932, -1000, -1000, -1000, 869, -1000, 30360, 30360, 45, 10397,
	8395, 12893, 12893, 12893, 12893, 12893, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1288, 1149, 1335, -1000,
	1327, -1000, -143, 16388, 13392, 1011, -1000, -1000, -1000, 1727,
	-1000, 1727, 1288, 1566, 1573, 12893, -1000, -1000, 1566, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1222, -1000, 30360,
	1319, 1708, 30360, 1572, 1010, 218, -1000, 13392, 13392, 1309,
	-1000, 784, 30360, -1000, -1000, 21877, -1000, -1000, 7393, -1000,
	30360, 272, 30360, -1000, 20380, 21378, 8896, -28, -1000, 8896,
	1237, -1000, -30, -41, 10896, 530, -1000, -1000, -1000, 721,
	14390, 1150, 1637, 42, -1000, -1000, -1000, 1407, -1000, 1407,
	1407, 1407, 1407, 218, 218, 218, 218, -1000, -1000, -1000,
	-1000, -1000, 1447, 1445, -1000, 1407, 1407, 1407, 1407, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1443, 1443, 1443, 1408,
	1408, 330, -1000, 13392, 226, 30360, 1694, 819, 200, 355,
	1488, 1060, 1060, 1060, 355, -1000, 1200, 1151, -1000, 1306,
	-1000, -1000, 1755, -1000, -1000, 533, 705, 698, 584, 30360,
	148, 269, -1000, 329, -1000, 30360, 1060, 657, 480, 1060,
	-1000, 1060, -1000, -1000, -1000, -1000, 492, -1000, -1000, 1060,
	1302, -1000, 1354, 840, 697, 816, 654, 1302, -1000, -1000,
	-145, 1302, -1000, 1302, -1000, 1302, -1000, 1302, -1000, 1302,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 589, 30360,
	148, 672, -1000, 376, -1000, -1000, 672, 672, -1000, -1000,
	-1000, -1000, 1008, 1007, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -332, 30360, -1000, 187, 597, 258, 291, 244, 30360,
	139, 1716, 211, 228, 30360, 30360, 345, 1502, 30360, 1692,
	30360, -1000, -1000, -1000, -1000, 838, 30360, -1000, -1000, 693,
	693, -1000, -1000, 30360, 693, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 693, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30360, 30360, -1000, -1000, -1000, -1000, -1000, 110, -35,
	201, -1000, -1000, -1000, -1000, -1000, 1723, -1000, 838, 647,
	613, -1000, -1000, -1000, 927, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 894, 13891, 13891, 13891, 1463, 358, 922, 1191,
	1355, 859, 859, 644, 644, 520, 520, 520, 520, 520,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1317, -1000, 916,
	772, 932, -1000, 1317, 1317, 791, 12893, -1000, -1000, 619,
	-1000, 13392, 932, -1000, -1000, 932, 1299, 1268, 1790, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	932, 12893, 12893, 1260, 1192, 483, -1000, 1317, 932, 932,
	1317, 1317, 932, -1000, 30360, -1000, -270, -1000, -52, 466,
	1192, -1000, 20879, 932, 1187, -1000, -1000, -1000, -1000, -1000,
	18384, 1156, 1566, -1000, -1000, 1192, 1331, -1000, -1000, 218,
	26, 699, 838, 838, 13392, -1000, -1000, -1000, -1000, -1000,
	-1000, 482, 1781, 268, 1192, -1000, 1346, 1554, -1000, -1000,
	-1000, 1707, 15889, 30360, 1279, 1140, -1000, 474, -1000, 1237,
	-28, -44, -1000, -1000, -1000, -1000, 838, -1000, 1143, -1000,
	2958, -1000, 328, -1000, -1000, -1000, -1000, 588, 1702, 1635,
	18, -1000, -1000, -1000, 218, 218, -1000, -1000, -1000, -1000,
	-1000, -1000, 1005, 1005, -1000, -1000, -1000, -1000, -1000, 804,
	-1000, -1000, -1000, 776, -1000, -1000, 780, 1518, 226, -1000,
	-1000, 591, 1003, 1641, 30360, -1000, -1000, 1093, 187, 30360,
	611, 1501, -1000, 1488, 1488, 1488, 30360, -1000, -1000, -1000,
	-1000, 2905, 30360, 1325, -1000, 149, -1000, 1088, 30360, -1000,
	1323, 1425, 1060, 1060, -1000, -1000, 8395, -1000, 30360, 1192,
	-1000, -1000, -1000, -1000, 430, 1674, 1670, 148, 149, 530,
	1060, -1000, -1000, -1000, -1000, -1000, -335, 1321, 393, 152,
	190, 30360, 30360, 30360, 30360, 30360, 517, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 223, 364, -1000, 30360, 30360, 488,
	-1000, -1000, -1000, 685, -1000, -1000, 685, -1000, -1000, -1000,
	-1000, -1000, 1660, 30360, -42, -306, -1000, -300, -1000, -1000,
	-1000, -1000, 691, 353, 922, 13891, 13891, 12893, -105, 166,
	166, 672, -1000, -1000, -1000, 13392, 13392, 1343, 585, -1000,
	13392, 678, -1000, -1000, 13392, 13392, 13392, -1000, 1317, 1317,
	12893, 8395, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 397, 396, 387, 30360, -1000, -1000, 1721, -1000, 1596,
	1595, 1785, 1781, -1000, 20380, 1566, -1000, -1000, 30360, -263,
	-1000, 1626, 1600, -1000, -1000, -1000, -1000, 6892, 1727, 13392,
	1498, 30360, 1192, -1000, 15389, 30360, 30360, 20380, 20380, 20380,
	20380, 20380, -1000, 1540, 1539, -1000, 1570, 1569, 1527, 30360,
	-1000, 1294, 932, 1742, 15889, 272, 1179, 20380, -1000, -1000,
	20380, 30360, 6391, -1000, -1000, -43, -57, -1000, -1000, -1000,
	721, -1000, -1000, -1000, -1000, 718, 2291, 1813, -1000, 999,
	-1000, 968, -1000, 634, 628, -1000, 30360, 1413, -1000, -1000,
	-1000, -1000, -1000, 1290, -1000, 1277, 1232, 1266, 81, -1000,
	1359, 1659, 591, 591, -1000, 771, -1000, 1060, -1000, -1000,
	356, -1000, 1686, 30360, 1497, 1495, 1494, -1000, 1754, 1221,
	30360, -1000, -1000, 30360, -1000, 1594, 226, 30360, -1000, -1000,
	-1000, -1000, 269, 30360, -1000, 2568, 149, -1000, -1000, -1000,
	-1000, -1000, -1000, 30360, 186, -1000, 1410, 925, -1000, 1475,
	-1000, -1000, -1000, -1000, 145, 233, -1000, 30360, 481, 1518,
	30360, -1000, -1000, -1000, 693, 693, -1000, -1000, 1656, -1000,
	1060, 13891, 13891, -1000, 525, -1000, 1192, 932, 1407, 1407,
	-1000, 1407, 1408, -1000, 1407, 74, 1407, 71, 932, 932,
	738, 729, -99, -1000, 838, 13392, 969, 830, 760, -1000,
	-1000, 932, -1000, 1192, 1192, 1192, 1262, 30360, -1000, -1000,
	-1000, -1000, 1781, 1778, 1230, -1000, -1000, 26, 267, -1000,
	1620, 1600, -1000, 1753, 1611, 1752, -1000, -1000, -1000, 838,
	-1000, 1677, 1235, -1000, 583, 1181, -1000, -1000, 12394, 1264,
	1588, 467, 1262, 1272, 1554, 1484, 1493, 1472, -1000, -1000,
	-1000, -1000, 1528, -1000, 1520, -1000, -1000, 1397, -1000, -1000,
	1149, 1781, 20380, 1243, 1243, -1000, 459, -1000, -1000, -1000,
	-1000, -1000, -1000, 13392, -1000, -1000, -1000, -1000, -1000, -1000,
	854, 854, 111, -1000, -1000, -1000, -1000, -1000, 1405, 13392,
	218, 996, 218, 761, -1000, 732, -1000, -1000, -210, -1000,
	-1000, 1403, 1522, -1000, -1000, 30360, -1000, -1000, 30360, 30360,
	30360, 30360, -1000, -1000, 263, -1000, 1245, 1211, -1000, -166,
	-1000, 13392, -1000, 1397, -1000, -1000, -1000, 1079, -1000, -147,
	1060, 30360, 30360, 30360, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 525, 13891, -1000, -1000, 348, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13392, -1000, 13392, -1000,
	1727, 989, 838, 13392, 13392, -1000, -1000, 17885, 19881, 19881,
	17386, -1000, 1778, 1766, 1751, 1601, 1606, 1606, 1620, -1000,
	1744, 1732, -1000, 970, 1731, 967, 625, -1000, 30360, 13392,
	1192, -1000, 214, 30360, 1192, 30360, -1000, 1743, -1000, -1000,
	13392, 1398, -1000, 13392, -1000, -1000, -1000, -1000, -1000, 1743,
	1243, -1000, -1000, 541, 760, -1000, -1000, -1000, 30360, 764,
	-1000, -1000, -1000, 1077, 1064, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1397, -1000, -1000, -1000, 1221, 264, 310,
	-1000, 269, -1000, -174, -176, 760, 1700, -1000, -1000, 8395,
	-1000, -1000, 1376, 1481, -1000, 198, -1000, -1000, 760, 760,
	932, -1000, 760, 760, 1184, -1000, -1000, -1000, 1184, 1184,
	466, 1766, -1000, 13392, 13392, 1603, 835, -1000, -1000, -1000,
	-1000, 960, 946, -1000, 818, -1000, 1804, -1000, 838, -1000,
	1192, -1000, 452, 1181, -1000, 1727, 838, 30360, 838, 1727,
	-1000, -1000, 1161, -1000, -1000, -1000, 1699, 1192, -1000, -1000,
	-1000, -1000, -1000, 225, 1194, -1000, 572, 30360, 30360, 932,
	164, -153, -1000, -1000, -1000, -1000, -1000, 19382, -1000, -1000,
	-1000, -1000, -1000, 838, 1187, -1000, 813, -1000, -1000, -1000,
	-1000, -1000, 30360, 1181, 30360, -1000, 1133, -1000, 1491, 596,
	225, 11895, -146, 8395, 5890, 1116, -1000, -1000, 1563, -135,
	-163, -1000, -1000, -1000, -1000, 1168, -1000, -1000, 1490, -1000,
	1789, -1000, -1000, -1000, 715, 740, -1000, -1000, -1000, -146,
	760, 932, -1000, -25, -1000, -1000, -1000, -1000, -1000, 1475,
	-1000, 1556, -1000, -1000, 1797, 484, 484, -1000, -1000, -1000,
	-1000, -1000, 319, -1000, -1000, -147, -151, -1000, -1000, -1000,
	316, 823, -1000, 165, -1000, -155, -1000, -1000, -1000, -1000,
	-164, -1000,
}

var yyPgo = [...]int{
	0, 2117, 13, 75, 154, 6, 178, 82, 2116, 2114,
	2112, 2111, 167, 166, 162, 2110, 2109, 2108, 2107, 2106,
	2105, 2100, 2099, 2098, 2095, 164, 137, 148, 2093, 2089,
	2086, 94, 146, 62, 66, 160, 2084, 2083, 41, 2078,
	2077, 2075, 157, 153, 613, 2074, 152, 89, 2073, 2072,
	2069, 2068, 2066, 2065, 2064, 2063, 2062, 2061, 2060, 2059,
	2058, 2057, 265, 2056, 2055, 4, 2053, 46, 2052, 2051,
	2050, 2045, 2044, 2042, 2037, 115, 2035, 2034, 2032, 159,
	2031, 2030, 238, 88, 78, 2029, 2014, 74, 139, 2013,
	99, 128, 2012, 2011, 27, 2010, 52, 58, 2009, 151,
	49, 55, 45, 2008, 2007, 2005, 60, 40, 2004, 77,
	34, 2003, 68, 73, 2002, 29, 2001, 2000, 93, 1998,
	1997, 1995, 67, 1994, 1991, 3576, 1990, 64, 116, 19,
	56, 1989, 1988, 1987, 1986, 1985, 32, 1984, 1981, 1980,
	112, 11, 1979, 12, 18, 23, 114, 1977, 38, 50,
	1976, 110, 1974, 1970, 28, 17, 47, 1969, 42, 102,
	131, 16, 109, 120, 1967, 1965, 30, 39, 1956, 1953,
	1952, 1951, 1950, 1949, 36, 1948, 25, 1947, 174, 1946,
	44, 21, 33, 63, 71, 35, 10, 1945, 158, 1944,
	22, 141, 104, 135, 1943, 1940, 1938, 147, 179, 1936,
	1930, 37, 143, 122, 127, 1926, 182, 1919, 1916, 96,
	1051, 2609, 15, 133, 1910, 1909, 2142, 98, 111, 26,
	1908, 79, 1906, 1903, 1901, 161, 142, 80, 931, 83,
	1897, 1894, 1893, 1892, 1890, 1888, 1881, 91, 163, 31,
	84, 129, 43, 1875, 1874, 1873, 100, 72, 1872, 132,
	130, 95, 145, 1871, 138, 126, 124, 1870, 86, 1869,
	1868, 1867, 1866, 70, 1864, 1861, 1858, 1856, 134, 119,
	97, 57, 1855, 65, 90, 125, 123, 1854, 24, 150,
	7, 1853, 1, 0, 1851, 3, 136, 181, 140, 1850,
	1848, 2, 1847, 5, 1844, 1843, 117, 1842, 1841, 1837,
	9, 20, 8, 1836, 1835, 3590, 1899, 101, 1834, 168,
}

//line sql.y:5736
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 303, 304, 304, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 283, 283, 283, 286, 286,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 307, 307, 120,
	120, 118, 118, 119, 119, 183, 183, 15, 16, 16,
	193, 193, 192, 192, 192, 194, 194, 194, 194, 228,
	228, 17, 17, 17, 17, 17, 80, 80, 285, 285,
	284, 282, 282, 281, 281, 280, 29, 30, 39, 39,
	39, 39, 40, 41, 287, 287, 259, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 261,
	261, 248, 248, 260, 260, 260, 260, 260, 260, 260,
	247, 247, 93, 93, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 299, 299, 165, 165, 165,
	165, 165, 165, 98, 98, 106, 106, 106, 106, 96,
	96, 97, 95, 95, 95, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 105, 105, 102, 102, 103, 103,
	103, 103, 103, 103, 300, 300, 300, 300, 230, 230,
	230, 230, 233, 233, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 232, 232, 232, 232, 232, 234, 234,
	234, 234, 234, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 236, 236,
	236, 236, 236, 236, 236, 236, 246, 246, 237, 237,
	241, 241, 242, 242, 242, 243, 243, 243, 244, 244,
	239, 239, 239, 239, 240, 240, 240, 249, 273, 273,
	272, 272, 270, 270, 270, 270, 258, 258, 267, 267,
	267, 267, 267, 257, 257, 253, 253, 253, 254, 254,
	255, 255, 252, 252, 256, 256, 269, 269, 268, 250,
	250, 251, 251, 275, 301, 301, 301, 301, 302, 302,
	276, 292, 293, 291, 291, 291, 291, 291, 67, 67,
	67, 205, 205, 205, 265, 265, 264, 264, 264, 266,
	266, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 263, 263, 263, 263, 200,
	200, 200, 290, 290, 290, 290, 290, 290, 289, 289,
	289, 262, 262, 262, 288, 288, 47, 47, 149, 149,
	36, 36, 36, 36, 36, 36, 35, 35, 35, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 37, 37, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 245, 245, 245, 277, 277, 278,
	278, 19, 28, 28, 20, 20, 20, 20, 21, 21,
	48, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 294,
	294, 199, 199, 207, 207, 198, 198, 221, 221, 221,
	201, 201, 201, 202, 202, 298, 298, 298, 50, 50,
	52, 52, 53, 54, 54, 223, 223, 224, 224, 55,
	56, 68, 68, 68, 68, 68, 68, 70, 70, 70,
	9, 9, 9, 9, 64, 64, 64, 8, 8, 51,
	51, 58, 295, 295, 296, 297, 297, 297, 297, 59,
	61, 22, 22, 22, 22, 22, 22, 86, 86, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 81, 81, 81, 76, 76, 308, 62, 63, 63,
	79, 79, 79, 73, 73, 73, 78, 78, 78, 83,
	83, 85, 85, 85, 85, 85, 87, 87, 87, 87,
	87, 87, 87, 82, 82, 84, 84, 84, 84, 214,
	214, 214, 213, 213, 109, 109, 111, 110, 110, 112,
	112, 113, 113, 113, 147, 128, 128, 181, 181, 180,
	180, 182, 182, 182, 182, 184, 184, 114, 114, 114,
	114, 115, 115, 116, 116, 117, 117, 222, 222, 219,
	219, 219, 218, 218, 121, 121, 121, 123, 122, 122,
	122, 122, 124, 124, 126, 126, 125, 125, 127, 129,
	129, 129, 129, 129, 130, 130, 94, 94, 94, 94,
	94, 94, 104, 104, 104, 104, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 107, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 196, 196, 131, 131, 139, 139, 139,
	139, 132, 132, 132, 132, 132, 132, 132, 140, 140,
	140, 146, 141, 141, 137, 137, 137, 137, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 136, 136,
	136, 136, 136, 136, 136, 136, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 72, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 309, 309, 238,
	238, 238, 138, 138, 138, 138, 138, 77, 77, 77,
	77, 77, 227, 227, 227, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 152, 152,
	74, 74, 150, 150, 151, 153, 153, 148, 148, 148,
	134, 134, 134, 154, 154, 155, 155, 156, 156, 158,
	157, 157, 159, 160, 160, 160, 161, 161, 162, 162,
	162, 38, 38, 38, 38, 38, 33, 33, 33, 33,
	34, 34, 34, 88, 88, 88, 88, 90, 90, 89,
	89, 65, 65, 66, 66, 66, 91, 91, 92, 92,
	92, 92, 178, 178, 163, 163, 163, 170, 170, 170,
	166, 166, 168, 168, 168, 169, 169, 169, 167, 175,
	175, 177, 177, 176, 176, 172, 172, 173, 173, 174,
	174, 174, 171, 171, 133, 133, 133, 133, 133, 179,
	179, 179, 179, 185, 185, 143, 143, 145, 145, 144,
	108, 186, 186, 190, 187, 187, 191, 191, 191, 191,
	191, 188, 188, 189, 189, 215, 215, 215, 195, 195,
	206, 206, 203, 203, 204, 204, 197, 197, 208, 208,
	208, 60, 142, 142, 274, 274, 271, 211, 211, 212,
	212, 216, 216, 220, 220, 217, 217, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	305, 306, 225, 226, 226, 226,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 3, 0, 1, 4, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 7, 5, 6, 6, 7, 0, 1,
	5, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	1, 0, 1, 2, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 6, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 5, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 8,
	8, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 2, 4, 5, 4, 4, 4, 4, 4,
	3, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 5, 5, 6, 4, 4,
	8, 6, 8, 6, 8, 5, 4, 2, 2, 1,
	2, 2, 2, 8, 8, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 0,
	2, 3, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 2, 4, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	2, 1, 2, 3, 3, 0, 2, 1, 2, 3,
	4, 3, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 5, 0, 1, 0, 1, 2, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -303, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 165, -40, -30, 166, -41, 168, 167,
	203, 169, 196, 72, 242, 243, 245, 246, 247, 248,
	-70, 201, 202, 171, 34, 43, 31, 32, 35, 174,
	-4, -25, 6, -305, 9, 366, 198, 197, 26, -6,
	379, 83, -304, 506, -178, -163, 20, 31, 27, -162,
	-158, -79, -163, 18, 16, 5, -62, -308, -62, -62,
	10, 11, -62, -259, -261, 83, 139, 83, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -279, -35, -32,
	170, 167, 211, 106, 107, 203, 204, 205, 169, 187,
	202, 206, 201, 220, -31, 78, 31, 379, 382, -266,
	166, 172, 173, 367, 109, 108, 73, 168, -263, 292,
	483, -46, 485, 98, 100, 484, 42, 177, 486, 487,
	488, 489, 186, 490, 491, 492, 493, 499, 500, 501,
	502, 110, 5, -62, -220, -216, -283, -210, 86, 87,
	88, 376, 189, 410, 411, 236, 78, 39, 292, 483,
	242, 256, 250, 277, 269, 377, 412, 239, 190, 224,
	480, 267, 115, 485, 413, 204, 297, 298, 299, 98,
	245, 334, 498, 241, 414, 496, 100, 484, 77, 49,
	42, 199, 265, 261, 486, 225, 415, 387, 218, 109,
	106, 505, 34, 259, 48, 28, 495, 108, 47, 487,
	130, 416, 488, 301, 282, 474, 46, 302, 205, 417,
	81, 381, 482, 303, 260, 304, 235, 494, 171, 418,
	466, 305, 306, 475, 419, 283, 287, 420, 326, 307,
	50, 421, 422, 476, 107, 423, 76, 489, 254, 255,
	424, 233, 188, 328, 281, 186, 33, 308, 378, 237,
	56, 212, 329, 44, 285, 43, 470, 425, 473, 280,
	276, 51, 426, 427, 428, 429, 490, 279, 253, 275,
	504, 399, 230, 491, 60, 173, 289, 288, 290, 219,
	325, 272, 430, 431, 432, 193, 79, 433, 262, 19,
	434, 435, 309, 226, 436, 54, 437, 438, 332, 202,
	439, 52, 492, 37, 207, 493, 440, 441, 442, 443,
	444, 311, 445, 310, 284, 286, 214, 312, 380, 446,
	258, 206, 497, 447, 194, 481, 208, 211, 201, 333,
	195, 448, 449, 450, 451, 452, 240, 453, 454, 246,
	499, 41, 455, 456, 457, 458, 234, 229, 327, 336,
	59, 80, 294, 459, 479, 252, 227, 460, 243, 53,
	500, 501, 502, 221, 503, 7, 314, 110, 231, 232,
	45, 273, 213, 461, 462, 263, 264, 278, 251, 274,
	244, 467, 215, 315, 203, 463, 335, 228, 295, 384,
	220, 316, 478, 383, 271, 268, 222, 464, 317, 178,
	216, 217, 465, 468, 318, 319, 238, 320, 321, 322,
	323, 324, 223, 382, 249, 266, 296, 347, 348, 349,
	350, 351, 352, 353, 354, 355, 356, 357, 358, 359,
	360, 361, 362, 363, 364, 176, -62, 176, -125, -216,
	176, -188, 298, -207, 300, 313, 308, 318, 306, -199,
	309, 311, 214, -298, 326, 176, 315, 165, 156, 301,
	310, 319, 320, 238, 321, 324, 223, -294, -283, 488,
	503, 115, 270, 305, 303, 327, 470, 323, 322, -216,
	244, -223, 249, -211, -283, -210, 247, -125, -68, 466,
	169, -225, -225, -81, 470, 472, -141, -94, 123, -104,
	-107, -99, -100, -135, -136, -137, -138, -105, -148, 145,
	146, 153, 124, -146, -108, 24, 375, 368, 367, 156,
	29, 161, 66, 67, 370, 371, 126, 55, 343, 344,
	-106, 339, 345, 340, 373, 374, 101, -211, -216, 181,
	338, 175, 151, 366, -101, -97, -2, -144, 337, 341,
	342, 346, -283, -210, -103, -102, -131, 89, 94, 99,
	157, 159, 158, 160, 95, 102, -305, 90, 91, 92,
	93, 103, 104, 42, 314, 314, -125, -62, -156, -79,
	-158, -4, -2, -305, 6, -62, -2, -3, -7, -25,
	-27, 406, -26, -216, -163, -178, 10, 141, 40, 48,
	-161, -162, -6, -2, -94, 17, 21, 22, -84, 147,
	-94, -216, -63, -84, -197, 180, -62, -62, -187, -228,
	244, -191, 327, 326, -212, -189, -211, -209, -188, 325,
	170, 385, 122, 23, 25, 125, 156, 17, 126, 35,
	172, 270, 187, 155, 183, 367, 165, 70, 386, 339,
	340, 337, 343, 369, 370, 338, 300, 29, 11, 388,
	26, 197, 22, 36, 149, 167, 129, 200, 24, 198,
	101, 104, 391, 20, 73, 192, 12, 185, 38, 14,
	392, 393, 15, 181, 180, 141, 177, 68, 9, 161,
	27, 138, 64, 394, 117, 395, 396, 397, 398, 66,
	139, 18, 341, 342, 31, 471, 375, 209, 151, 71,
	57, 472, 123, 400, 401, 102, 402, 105, 74, 477,
	119, 16, 69, 40, 403, 210, 404, 182, 405, 330,
	406, 140, 168, 366, 67, 407, 175, 313, 6, 372,
	30, 196, 184, 112, 65, 408, 176, 128, 373, 374,
	179, 103, 5, 116, 32, 10, 72, 75, 344, 345,
	346, 55, 111, 379, 127, 13, 409, 331, 121, 115,
	-260, 139, -247, -251, -211, 191, -276, 187, -125, -269,
	-268, -211, -80, -206, 177, 185, 184, 116, -287, 119,
	231, 338, 175, -42, -43, -188, 155, 208, 84, 84,
	-251, -250, -249, -288, 210, 191, -275, -267, 183, 192,
	-257, 184, 185, -252, 177, 117, -288, -252, 182, 192,
	210, 210, 110, 210, 110, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 207, -258, 131, -258, 383, 383,
	-263, -288, -288, -288, 179, 33, 33, -208, -252, 179,
	23, -258, -258, -188, 155, -258, -258, -258, -258, 218,
	218, -258, -258, -258, -258, -258, -258, -258, -258, -258,
	-258, -258, -258, -258, -258, -258, 176, -287, -88, 324,
	238, 78, -44, 220, -28, -125, -206, 177, 178, -287,
	-125, 162, -125, -201, 139, 13, -201, -198, 314, 312,
	299, 304, -201, -201, -201, -201, 221, 297, -253, 177,
	33, 188, 314, 221, 297, 221, 222, 221, 222, 307,
	317, 221, -221, 12, 141, 338, 302, 306, 214, 176,
	215, 178, 316, -283, 473, 222, -221, 90, -202, 139,
	314, 217, -201, -226, -305, -212, 270, -226, -226, 30,
	179, -211, -64, -211, 90, -9, -5, -13, -12, -14,
	131, -86, 314, -75, 156, 488, 474, 475, 476, 473,
	311, 481, 479, 477, 221, 478, 84, 119, 121, 122,
	-94, 138, -132, 131, 132, 133, 134, 135, 136, 137,
	141, 123, 125, 139, 140, 120, 142, 143, 144, 145,
	146, 147, 148, 150, 149, 151, 152, 155, 163, 164,
	-100, -100, -100, -100, -146, -305, -305, -305, -100, -196,
	-305, -100, -305, -305, -305, -305, -152, -94, -305, -309,
	-305, -309, -309, -238, -305, -238, -305, -305, -305, -305,
	162, -305, -305, -305, -305, -305, -238, -238, -238, -238,
	89, 94, 99, 90, 89, 94, 99, 90, 89, 94,
	99, 90, 89, 94, 99, 90, -2, -3, -141, -225,
	-295, -296, -128, -125, -305, 238, -161, -6, -2, -156,
	-162, -158, -2, -62, -73, -85, 61, 62, -87, 22,
	36, 65, 63, 21, -306, 85, -306, -178, -306, 84,
	-27, -181, 83, 59, 41, 90, 90, 84, 19, -157,
	-159, -94, 12, -214, -213, 23, -211, 90, 162, 97,
	12, -126, 27, -125, -197, -197, 84, 244, -191, -228,
	-193, -192, 328, 330, 131, -215, -211, 90, 29, 85,
	84, -125, -230, -233, -235, -234, -236, -231, -232, 267,
	268, 156, 271, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 30, 199, 263, 264, 265, 266, 283,
	284, 285, 286, 287, 288, 289, 290, 250, 269, 377,
	251, 252, 253, 254, 255, 256, 258, 259, 260, 261,
	262, -286, -283, 83, 85, 84, -237, 83, -88, 176,
	-283, 177, 177, 177, -62, 366, -258, -258, 207, -35,
	-32, -279, 16, -31, -32, 170, 106, 107, 167, 83,
	-247, 83, -256, -286, -283, 83, 117, 182, 116, -255,
	-252, -255, -256, -283, -148, -211, -216, -283, 117, 117,
	-184, -211, -184, -184, 21, -184, 21, -184, 21, 92,
	-211, -184, 21, -184, 21, -184, 21, -184, 21, -184,
	21, 29, 76, 77, 29, 79, 80, 81, -148, -148,
	-247, -188, -125, -283, 92, 92, -258, -258, 92, 90,
	90, 90, -258, -258, 92, 90, -218, -216, 90, -289,
	193, 235, 237, 92, 92, 92, 92, 29, 90, -290,
	29, 495, 494, 496, 497, 498, 92, 29, 92, 29,
	92, -211, 83, -125, -91, 225, 165, 167, 170, 74,
	90, 239, 131, 42, 84, 179, 176, -283, -203, 181,
	-203, -217, -216, -209, 90, -94, -254, 12, 141, -221,
	-221, -201, -125, -254, -221, -201, -125, -201, -201, -201,
	-201, -221, -221, -221, -201, -216, -216, -125, -125, -125,
	-125, -125, -125, -125, -226, -226, -226, -202, -201, 473,
	90, 74, -224, 247, 281, 467, 468, 469, 84, 379,
	-118, -125, 473, 473, 473, 473, 473, 473, -94, -94,
	-94, -94, -139, 102, 123, 103, 104, -107, -140, -144,
	-146, 96, 141, 125, 139, 140, -99, -100, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -227, -283, 90, 156, 90, 90, -82, -84, -94,
	-94, -283, -211, -82, -82, -94, -78, 22, 36, -150,
	-151, 127, -148, -306, -306, 92, -211, -211, -72, -71,
	348, 349, 350, 351, 353, 354, 355, 358, 359, 363,
	364, 347, 365, 352, 357, 360, 361, 362, 356, 266,
	-83, 22, 36, -82, -212, -217, -209, -82, -83, -83,
	-82, -82, -178, -306, 84, -297, 330, 331, 471, -219,
	210, -218, 23, -142, -141, 90, -161, -161, 61, 62,
	57, -82, -87, -306, -26, 23, -180, -211, 60, 90,
	-239, -188, -94, -94, 84, -160, 25, 26, -125, -213,
	147, -217, -125, -183, 210, -125, -110, -112, -113, -114,
	-128, -147, -305, 12, -118, -119, -127, -216, -191, -193,
	84, 329, 331, 332, 74, 105, -94, -240, 155, -265,
	-264, -263, -247, -249, -250, -251, 85, -164, -93, 38,
	-243, 295, 294, -237, -237, -237, -237, -237, -239, -239,
	-239, -239, 83, 83, -237, -237, -237, -237, -241, 83,
	-241, -241, -242, 83, -242, -276, -94, -273, -272, -270,
	-271, 186, 98, 379, 75, -268, -160, 92, -91, -204,
	181, -274, -271, -283, -283, -283, -204, -283, 90, -283,
	90, 84, 17, -248, -247, -47, 235, -278, 210, -275,
	-269, -256, 117, -255, -256, -256, 162, -283, 84, 27,
	110, 110, 110, 110, 379, 167, 30, -247, -47, -227,
	179, -227, -227, 90, 90, -200, 503, -118, -90, 227,
	131, 216, 216, 176, 176, 229, -125, 240, 241, 239,
	21, 228, 230, 232, 218, -125, -125, -203, 74, -120,
	-125, 24, -216, -125, -201, -201, -125, -201, -201, -125,
	-211, -75, 330, 84, 379, 20, -76, 20, 102, 103,
	104, -140, -99, -100, -99, 122, 200, 84, -306, 23,
	84, 75, -306, -306, -306, 84, 12, -82, -153, -151,
	129, -94, -306, -306, 84, 84, 12, -306, -82, -82,
	-305, 162, -306, -306, -306, -306, -306, -296, 470, 331,
	-129, 72, 180, 73, -305, -218, -306, -134, -211, 92,
	95, -163, -109, -111, 12, -87, -146, 85, 84, -239,
	-167, -172, -198, -283, 90, 156, -159, 162, -130, 13,
	-133, 30, 55, -5, -305, -305, 30, 84, -121, -123,
	-122, -124, 64, 68, 70, 65, 66, 67, 71, -222,
	23, -110, -3, -2, -305, -125, -118, -307, 12, 75,
	-307, 84, 162, -192, -194, 333, 330, 336, -283, 90,
	84, -263, -251, -302, 102, 123, 29, 74, 292, 98,
	-300, 155, -301, 182, 116, 117, 194, 23, 39, -244,
	296, -239, -239, -246, 90, -246, 92, 92, 85, -38,
	-33, -34, 31, 78, -270, -258, 90, 37, -211, 85,
	-90, -125, 123, 74, -274, -274, -274, -216, 16, -180,
	84, 85, -149, 236, 85, -211, 85, 83, -256, -256,
	-212, -211, -305, 176, 29, 29, -47, -149, -240, -283,
	505, 504, 85, 178, 234, -92, 343, 90, 86, -125,
	-125, -125, -125, -125, 170, 167, 219, 179, -118, -125,
	84, -67, 195, 190, -221, -221, 31, -125, 330, 482,
	480, 122, 200, -107, -100, -84, 376, -229, 156, 267,
	199, 265, 261, 281, 272, 294, 263, 295, -229, -227,
	-94, -94, -156, 130, -94, 128, -94, -94, -94, -306,
	-306, -83, -212, 177, 177, 177, -184, -195, 20, 12,
	55, 55, -109, -130, -110, -87, -211, -170, 466, -175,
	44, -173, -174, 45, -171, 46, 54, 147, -161, -94,
	-185, 74, -186, -190, -148, -143, -145, -144, -305, -179,
	-306, -211, -184, -186, -112, -113, -113, -112, -113, 64,
	64, 64, 69, 64, 69, 64, -122, -216, -306, -306,
	-3, -183, 75, -110, -110, -127, -216, 147, 330, 334,
	335, -263, 102, -305, -98, -106, -96, -95, -97, -101,
	145, 146, 10, 90, 90, -283, 117, 117, -125, 83,
	85, 84, 85, 84, 85, 84, -205, 416, 123, -34,
	-33, -258, -258, 92, -283, 178, 24, -125, 74, 74,
	74, 17, -247, -148, 55, -273, -180, -277, -278, -125,
	-96, -305, -149, -125, -89, 225, 233, 83, 87, -285,
	75, 216, 292, 216, -125, -67, -38, -125, -201, -201,
	31, -283, -107, -100, -305, -306, -237, -237, -237, -242,
	-237, 255, -237, 255, -306, -306, 84, -306, 20, -306,
	-74, 372, -94, 84, 84, -306, -306, -305, -305, -305,
	-306, -125, -130, -154, 14, -167, 49, 273, -177, -176,
	53, 45, -174, 17, 47, 17, 28, -185, 84, 131,
	84, -306, -306, 84, 55, 162, -306, -130, -116, -115,
	74, 75, -117, 74, -115, 64, 64, -181, -306, -130,
	-110, -130, -130, 162, -94, -102, -102, -136, 83, -94,
	-239, 90, -239, 92, 92, 416, 29, 79, 80, 81,
	29, 76, 77, -125, -125, -125, -125, -180, 212, 85,
	-306, 84, -245, 379, 382, -94, -181, 85, -282, 379,
	-284, -283, -211, -211, -211, -99, -239, -283, -94, -94,
	-161, 90, -94, -94, -182, -306, -211, 182, -182, -182,
	-219, -154, -155, 15, 17, -168, 51, -166, 50, -166,
	-176, 17, 17, 90, 17, 90, 117, -190, -94, -145,
	55, -5, -211, -143, -211, -156, -94, 83, -94, -156,
	-130, -306, -180, 85, 85, 85, -181, 213, -301, -278,
	383, 383, -306, 23, -281, -280, -212, 83, 75, -77,
	141, 379, -306, -306, -306, -306, -306, 84, -306, -306,
	-306, -129, -155, -94, -141, -169, 52, 74, 105, 90,
	90, 90, 10, -143, 162, -161, -180, -161, 85, -165,
	23, -305, -5, 84, 131, -180, -125, -306, 377, 71,
	380, -211, 182, 74, 105, -186, -211, 85, -292, -293,
	74, -302, -299, 102, 123, 98, -300, 111, 112, -5,
	-94, 209, -65, 379, -280, -262, -212, 90, 92, 85,
	60, 378, 381, -293, 74, 11, 10, 102, 90, -65,
	-306, -306, -66, 224, 470, -285, 60, -291, 195, 190,
	193, 30, -291, 187, -282, 379, 189, 29, 102, 226,
	380, 381,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 646, 646, 646, 0,
	646, 0, 0, 646, -2, -2, 646, 1053, 0, 646,
	0, 0, -2, 579, 580, 0, 582, -2, 0, 0,
	591, 1492, 1492, 641, 0, 0, 0, 0, 0, 646,
	917, 45, 646, 0, 80, 81, 597, 598, 599, 60,
	0, 1490, 1, 3, 66, 70, 0, 0, 0, 53,
	926, 0, 73, 0, 0, 650, 0, 648, 0, 1036,
	646, 646, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 453, 413, 456, 411, 442,
	-2, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 306, 306, 0, 0, -2,
	404, 404, 404, 0, 0, 0, 439, 1038, 359, 306,
	306, 0, 306, 306, 306, 306, 0, 0, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 943, 143, 1054, 1051, 1052, 35, 36,
	37, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 0, 1030, 0, 509, 736,
	0, 570, 570, 0, 570, 570, 570, 570, 0, 0,
	0, 521, 0, 0, 0, 0, 567, 0, 0, 540,
	542, 0, 567, 0, 573, 0, 554, 570, 1493, 1493,
	1493, 1021, 0, 564, 562, 576, 577, 559, 560, 578,
	581, 0, 586, 589, 1047, 1048, 0, 604, 44, 1275,
	596, 609, 610, 0, 642, 643, 40, 822, 0, 751,
	755, 766, 779, 780, 781, 782, 783, 785, 786, 0,
	0, 0, 0, 791, 792, 0, 0, 0, 0, 0,
	803, 0, 0, 0, 0, 0, 898, 0, 867, 867,
	839, 867, 869, 869, 0, 0, 0, 907, 0, 0,
	0, 0, 0, 0, 214, 215, 821, 1010, 869, 869,
	869, 869, -2, -2, 195, 196, 197, 198, 199, 200,
	0, 0, 0, 0, 213, 191, 0, 218, 219, 216,
	217, 805, 806, 1492, 0, 619, 0, 0, 926, 0,
	918, 917, 58, 0, 646, -2, 0, 0, 0, 0,
	42, 0, 47, 697, 72, 71, 962, 0, 0, 0,
	54, 927, 62, 64, 928, 0, 651, 652, 0, 675,
	679, 0, 647, 0, 0, 1037, 1036, 1036, 97, 0,
	1435, 1014, -2, -2, 0, 0, 1049, 1050, 1023, -2,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166,
	1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176,
	1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186,
	1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, -2,
	0, 0, 153, 154, 0, 38, 332, 0, 149, 0,
	326, 278, 943, 0, 0, 0, 0, 0, 646, 0,
	1031, 134, 135, 141, 142, 306, 306, 0, 143, 143,
	420, 421, 422, 0, 0, -2, 330, 0, 405, 0,
	0, 320, 320, 324, 322, 323, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 307, 0, 451, 452,
	360, 0, 0, 0, 0, 431, 432, 0, 0, 1039,
	1040, 0, 0, 306, 306, 0, 0, 0, 0, 306,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 956, 0,
	0, 0, -2, 0, 501, 0, 0, 0, 1032, 1032,
	508, 0, 510, 511, 0, 0, 512, 0, 567, 567,
	565, 566, 514, 515, 516, 517, 570, 0, 0, 315,
	316, 317, 567, 570, 0, 570, 570, 570, 570, 567,
	567, 567, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1493, 1493, 1493, 573, 570, 0, 550, 0,
	551, 552, 555, 556, 1494, 1495, 1068, 557, 558, 1022,
	587, 590, 607, 605, 606, 608, 600, 601, 602, 603,
	0, 621, 622, 627, 0, 0, 0, 0, 633, 634,
	635, 0, 0, 638, 639, 640, 0, 0, 0, 0,
	749, 0, 0, 811, 812, 813, 814, 815, 816, 817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 788, 789, 790, 793, 0, 0, 0, 798, 799,
	0, 0, 0, 0, 0, 656, 0, 899, 0, 837,
	0, 838, 840, 841, 0, 842, 0, 0, 0, 659,
	0, 0, 659, 659, 0, 0, 185, 186, 187, 188,
	201, 205, 209, 220, 202, 206, 210, 221, 203, 207,
	211, 222, 204, 208, 212, 223, 821, 0, 0, 41,
	611, 612, 0, 719, 1042, 0, 52, 61, 63, 926,
	56, 926, 0, 661, 0, 0, -2, -2, 662, 668,
	669, 670, 671, 672, 49, 1491, 50, 0, 69, 0,
	43, 0, 0, 0, 0, 290, 965, 0, 0, 919,
	920, 923, 0, 676, 680, 0, 682, 683, 0, 649,
	0, 95, 0, 735, 0, 0, 0, 1435, 1020, 0,
	99, 100, 0, 0, 0, 294, 1025, 1026, 1027, -2,
	313, 0, -2, 285, 229, 230, 231, 278, 233, 278,
	278, 278, 278, 290, 290, 290, 290, 261, 262, 263,
	264, 265, 0, 0, 248, 278, 278, 278, 278, 268,
	269, 270, 271, 272, 273, 274, 275, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 280, 280, 280, 282,
	282, 0, 39, 0, 298, 0, 923, 0, 956, 1034,
	1044, 0, 0, 0, 1034, 117, 0, 0, 454, 414,
	443, 455, 0, 417, 418, -2, 0, 0, 404, 0,
	406, 0, 314, 0, -2, 0, 324, 0, 320, 324,
	321, 324, 312, 325, 435, 907, 0, 436, 437, 0,
	473, 705, 0, 0, 0, 0, 0, 479, 480, 481,
	0, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	492, 444, 445, 446, 447, 448, 449, 450, 0, 0,
	406, 0, 440, 0, 361, 362, 0, 0, 365, 366,
	367, 368, 0, 0, 371, 372, 373, 722, 723, 374,
	398, 399, 400, 375, 376, 377, 378, 379, 380, 381,
	392, 393, 394, 395, 396, 397, 382, 383, 384, 385,
	386, 389, 0, 127, 947, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1032, 0, 0, 0,
	0, 737, 1055, 1056, 571, 572, 0, 318, 319, 570,
	570, 518, 541, 0, 570, 522, 543, 523, 525, 524,
	526, 545, 546, 570, 529, 568, 569, 530, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 547, 548, 549,
	574, 0, 0, 588, 592, 593, 594, 595, 0, 0,
	624, 91, 629, 630, 631, 632, 644, 637, 823, 746,
	747, 748, 750, 752, 0, 807, 809, 754, 756, 818,
	819, 820, 0, 0, 0, 0, 0, 760, 764, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 784, 882, 883, 884, 801, 802, 0, 673, 0,
	0, 0, 800, 0, 0, 0, 0, 657, 658, 905,
	902, 0, 0, 868, 870, 0, 0, 0, 0, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	0, 0, 0, 660, 908, 0, -2, 0, 0, 0,
	0, 0, 0, 1009, 0, 614, 615, 617, 0, 739,
	0, 720, 0, 0, 1043, 620, 55, 57, 666, 667,
	0, 684, 663, 51, 46, 0, 0, 699, 963, 290,
	985, 0, 929, 930, 0, 922, 924, 925, 74, 681,
	677, 0, 744, 0, 0, 734, 0, 687, 689, 690,
	691, 717, 0, 0, 0, 0, 93, 736, 1015, 98,
	0, 0, 103, 104, 1016, 1017, 1018, 1019, 0, 136,
	-2, 356, 155, 157, 158, 159, 150, 338, 0, 0,
	288, 286, 287, 232, 290, 290, 255, 256, 257, 258,
	259, 260, 0, 0, 249, 250, 251, 252, 243, 0,
	244, 245, 246, 0, 247, 331, 0, 931, 299, 300,
	302, 306, 0, 0, 0, 327, 328, 0, 947, 0,
	0, 0, 1045, 1044, 1044, 1044, 0, 145, 146, 147,
	148, 143, 0, 0, 151, 408, 407, 0, 0, 329,
	0, 0, 324, 324, 309, 310, 0, 438, 0, 0,
	475, 476, 477, 478, 0, 0, 0, 406, 408, 294,
	0, 363, 364, 369, 370, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 468, 469, 470,
	471, 944, 945, 946, 0, 0, 502, 0, 0, 348,
	89, 1033, 507, 567, 528, 544, 567, 520, 527, 553,
	584, 628, 0, 0, 0, 0, 636, 0, 753, 808,
	810, 757, 0, 761, 765, 0, 0, 0, 0, 0,
	0, 0, 804, 828, 829, 0, 0, 917, 0, 903,
	0, 0, 836, 871, 0, 0, 0, 824, 0, 0,
	659, 0, 872, 873, 874, 875, 876, 613, 616, 618,
	695, 0, 0, 0, 0, 721, 1041, 0, 910, 0,
	0, 684, 744, 685, 0, 664, 48, 698, 0, 967,
	966, 979, 992, 291, 292, 293, 921, 0, 926, 0,
	1003, 0, 0, 995, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 727, 0, 0, 0, 0,
	718, 0, 0, 0, 0, -2, 0, 0, 87, 88,
	0, 0, 0, 101, 102, 0, 0, 108, 295, 296,
	143, 358, 156, 160, 165, 0, 0, 0, 170, 0,
	172, 0, 339, 0, 225, 227, 0, 0, 163, 228,
	289, 253, 254, 0, 276, 0, 0, 0, 351, 113,
	935, 934, 306, 306, 301, 0, 304, 0, 1046, 279,
	0, 126, 0, 0, 0, 0, 0, 132, 0, 412,
	0, 423, 424, 0, 472, 0, 298, 0, 308, 311,
	908, 706, 0, 0, 425, 0, 408, 429, 430, 441,
	390, 391, 388, 0, 0, 957, 958, 0, 961, 118,
	461, 463, 462, 466, 0, 0, 459, 0, 348, 931,
	0, 506, 349, 350, 570, 570, 623, 92, 0, 626,
	0, 0, 0, 758, 762, 674, 0, 0, 278, 278,
	888, 278, 282, 891, 278, 893, 278, 896, 0, 0,
	0, 0, 900, 835, 906, 0, 0, 0, 0, 825,
	826, 0, 909, 0, 0, 0, 0, 0, 1028, 1029,
	911, 912, 744, 913, 686, 665, 700, 985, 0, 978,
	0, -2, 987, 0, 0, 0, 993, 678, 75, 745,
	78, 0, 1003, 1011, 0, 994, 1005, 1007, 0, 0,
	0, 999, 0, 744, 688, 713, 715, 0, 710, 725,
	726, 728, 0, 730, 0, 732, 733, 697, 693, 694,
	0, 744, 0, 744, 744, 94, 0, 738, 105, 106,
	107, 357, 166, 0, 168, 183, 184, 189, 190, 192,
	0, 0, 0, 171, 173, 174, 224, 226, 0, 0,
	290, 0, 290, 0, 283, 0, 340, 352, 0, 932,
	933, 0, 0, 303, 305, 0, 1035, 128, 0, 0,
	0, 0, 152, 409, 0, 297, 0, 0, 497, 494,
	426, 0, 428, 697, 948, 949, 950, 0, 960, 121,
	0, 0, 0, 0, 503, 504, 505, 90, 513, 519,
	625, 645, 759, 763, 0, 795, 885, 290, 889, 890,
	892, 894, 895, 897, 796, 797, 0, 831, 0, 833,
	926, 0, 904, 0, 0, 845, 827, 0, 0, 0,
	719, 59, 913, 915, 0, 972, 970, 970, 980, 981,
	0, 0, 988, 0, 0, 0, 0, 79, 0, 0,
	0, 1008, 0, 0, 0, 0, 96, 917, 707, 714,
	0, 0, 708, 0, 709, 729, 731, 692, -2, 917,
	744, 85, 86, 0, 0, 193, 194, 169, 0, 0,
	266, 277, 267, 0, 0, 353, 936, 937, 938, 939,
	940, 941, 942, 697, 129, 130, 131, 415, 0, 0,
	474, 0, 482, 0, 0, 0, 0, 959, 460, 0,
	119, 120, 0, 0, 465, 877, 886, 887, 0, 0,
	0, 901, 0, 0, 0, 741, 701, 702, 0, 0,
	739, 915, 77, 0, 0, 975, 0, 968, 971, 969,
	982, 0, 0, 989, 0, 991, 0, 1012, 1013, 1006,
	0, 998, 1001, 997, 1000, 926, 711, 0, 716, 926,
	84, 167, 0, 177, 281, 284, 0, 0, 333, 498,
	495, 496, 427, 0, 122, 123, 0, 0, 0, 0,
	0, 0, 830, 832, 834, 843, 844, 0, 740, 742,
	743, 696, 76, 916, 914, 964, 0, 973, 974, 983,
	984, 990, 0, 996, 0, 82, 0, 83, 334, 338,
	0, 0, 951, 0, 0, 0, 467, 794, 0, 0,
	0, 703, 704, 976, 977, 1004, 1002, 712, 335, 336,
	0, 161, 178, 179, 0, 0, 182, 175, 176, 951,
	0, 0, 457, 953, 124, 125, 401, 402, 403, 118,
	878, 0, 881, 337, 0, 0, 0, 180, 181, 114,
	499, 500, 0, 954, 955, 121, 879, 341, 343, 344,
	0, 0, 342, 0, 464, 0, 345, 346, 347, 952,
	0, 880,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 124, 3, 3, 3, 150, 142, 3,
	83, 85, 147, 145, 84, 146, 162, 148, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 506,
	132, 131, 133, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 152, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 153,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 121, 122, 123, 125, 126,
	127, 128, 129, 130, 134, 135, 136, 137, 138, 139,
	140, 141, 143, 144, 149, 151, 154, 155, 156, 157,
	158, 159, 160, 161, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:446
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:456
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:489
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:495
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:499
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:503
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:508
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:518
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:524
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:530
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:534
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:539
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:543
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:549
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:553
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:559
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:565
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:569
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:573
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:602
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:607
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:613
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:620
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:626
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:633
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:693
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:699
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:712
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:718
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:738
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:750
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:762
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:766
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:772
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:778
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:795
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:796
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:800
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:810
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:820
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:833
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:839
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:855
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:865
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:869
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:873
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:879
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:883
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:887
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:891
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:897
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:901
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:907
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:933
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:940
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:944
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:949
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:964
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:969
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:975
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:986
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:992
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:999
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1006
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1011
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1016
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1021
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1028
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1035
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1046
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1052
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1056
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1062
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1066
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1080
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1084
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1090
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1094
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1104
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1111
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1115
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1121
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1131
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1136
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1141
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1145
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1164
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1170
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1178
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1191
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1195
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1201
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1207
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1212
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1217
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1222
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1227
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1237
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1241
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1247
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1251
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1256
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1260
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1265
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1271
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1277
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1282
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1296
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1300
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1304
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1308
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1319
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1326
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1330
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1340
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1364
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1368
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1372
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1376
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1434
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1438
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1450
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1456
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1460
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1464
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1468
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1474
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1485
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1534
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1540
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1552
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1558
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1645
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1695
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1699
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1704
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1708
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1716
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1726
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1734
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1738
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1742
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1747
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1751
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = ""
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = ""
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1788
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1797
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1803
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1813
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1817
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1822
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1826
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = ""
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1842
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1846
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1850
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1854
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1858
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = ""
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = yyDollar[2].str
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = "key"
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = yyDollar[1].str
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1926
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1930
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1936
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1942
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1946
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1952
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1956
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1962
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1968
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1972
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1976
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1980
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1985
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1989
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1995
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2001
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2007
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2013
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2017
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2021
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2025
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2029
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2051
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2055
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2064
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2070
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2084
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2094
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2098
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2102
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2106
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2110
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2114
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2118
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2122
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2126
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2130
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2134
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2138
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2142
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2146
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2150
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2154
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2158
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2162
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2166
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2170
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2174
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2178
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2182
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2186
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2190
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2194
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2198
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2202
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2247
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2253
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2257
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2266
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2271
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2275
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2279
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2283
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2291
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2297
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2305
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2311
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2315
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2319
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2323
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2327
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2331
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2335
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2339
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2343
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2347
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2351
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2355
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2359
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2363
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2367
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2371
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2375
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2379
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2383
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2387
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2391
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2395
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2399
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2405
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2409
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2415
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2419
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2423
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2427
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2431
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2435
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2439
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2443
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2447
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2453
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2459
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2466
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2473
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2479
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2483
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2490
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2497
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2509
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2519
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2523
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2527
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2540
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2550
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2554
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2565
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2572
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2579
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2586
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2594
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2598
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2602
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2606
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2610
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2614
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2618
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2622
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2626
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2630
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2634
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2638
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2642
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2646
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2650
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2654
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2658
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2662
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2666
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2670
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2674
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2678
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2683
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2687
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2691
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2698
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2708
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2712
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2718
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2724
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2728
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 504:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2751
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2766
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2804
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2824
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2828
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2832
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2884
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2888
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2892
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2896
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2900
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2908
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2912
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2916
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2921
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2925
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2929
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2938
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2942
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2946
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2951
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2965
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2969
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2973
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
			yyVAL.str = "extended "
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3019
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3037
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3041
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3047
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3051
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3057
		{
			yyVAL.empty = struct{}{}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.empty = struct{}{}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.empty = struct{}{}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3106
		{
			yyVAL.empty = struct{}{}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3108
		{
			yyVAL.empty = struct{}{}
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3111
		{
			yyVAL.empty = struct{}{}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.empty = struct{}{}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3118
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3124
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3129
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3133
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3137
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3141
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3145
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3149
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = yyDollar[1].str
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = yyDollar[1].str
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = yyDollar[1].str
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = ""
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3194
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3220
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3226
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3230
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3236
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3242
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3246
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3250
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3254
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3298
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3340
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3365
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = ""
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3379
		{
			setAllowComments(yylex, true)
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3389
		{
			yyVAL.strs = nil
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3393
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3399
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3403
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3407
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3412
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3416
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3420
		{
			yyVAL.str = SQLCacheStr
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3425
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3433
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3438
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3442
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3447
		{
			yyVAL.strs = nil
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3463
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = SQLCacheStr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = DistinctStr
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = DistinctStr
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = StraightJoinHint
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3499
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3503
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3509
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3513
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3517
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3521
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3526
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3534
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3541
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3546
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3550
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3556
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3562
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3576
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3580
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3584
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3590
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3596
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3600
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3609
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3615
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3625
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3629
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3643
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3647
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3660
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3664
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3668
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3672
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3680
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3684
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3690
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3695
		{
			yyVAL.empty = struct{}{}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.empty = struct{}{}
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3700
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3708
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3715
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3721
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3725
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3729
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3735
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3741
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3745
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3749
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3753
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3759
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3763
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3787
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3793
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3798
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3802
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3806
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3810
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3814
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3823
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3830
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3834
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3838
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3842
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3850
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3857
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3861
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3865
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3869
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3883
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3887
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3891
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3895
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3899
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3903
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3907
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3911
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3915
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3921
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3925
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3929
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3933
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3937
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3941
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3945
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3949
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3953
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3957
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3961
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3965
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3969
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3975
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3979
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3983
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3987
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3991
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3999
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4003
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4007
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4011
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4015
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4019
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4023
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4027
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4031
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4035
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4039
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4043
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4047
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4051
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4055
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4063
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4067
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4074
		{
			yyVAL.str = ""
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4084
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4088
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4095
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4099
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4103
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4107
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4113
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4117
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4121
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4125
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4129
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4133
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4137
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4143
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4147
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4151
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4158
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4164
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4168
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4182
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4186
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4190
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4200
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4204
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4208
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4212
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4216
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4220
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4247
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4251
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4257
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4261
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4286
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4290
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4294
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4298
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4302
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4306
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4310
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4314
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4318
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4322
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4326
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4332
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4336
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4340
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4344
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4348
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4352
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4356
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4360
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4364
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4374
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4378
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4382
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4392
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4400
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4446
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4450
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4454
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4458
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4462
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4482
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4486
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4490
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4494
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4498
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4502
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4508
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4512
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4516
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4520
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4524
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4528
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4532
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4537
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4541
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4546
		{
			yyVAL.str = string("")
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4556
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4560
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4566
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4581
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4585
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4589
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4595
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4604
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4608
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4614
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4618
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4627
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4636
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4642
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4648
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4652
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4658
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4663
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4667
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4671
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4680
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4686
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4690
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4694
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4703
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4707
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4711
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4715
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4722
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4726
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4730
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4734
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4740
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4744
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4748
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4753
		{
			yyVAL.str = ""
		}
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4761
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4765
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4770
		{
			yyVAL.str = ""
		}
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4774
		{
			yyVAL.str = yyDollar[3].str
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4780
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4784
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4789
		{
			yyVAL.str = ""
		}
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4793
		{
			yyVAL.str = yyDollar[2].str
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4798
		{
			yyVAL.str = "cascaded"
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4802
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = ""
		}
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4815
		{
			yyVAL.str = yyDollar[3].str
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4821
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4825
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4829
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4839
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4843
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4849
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4853
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4857
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4862
		{
			yyVAL.str = ""
		}
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4866
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4870
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = ""
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = " header"
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = " manifest on"
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4892
		{
			yyVAL.str = " manifest off"
		}
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4897
		{
			yyVAL.str = ""
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4901
		{
			yyVAL.str = " overwrite on"
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4905
		{
			yyVAL.str = " overwrite off"
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4911
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4916
		{
			yyVAL.str = ""
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4920
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4926
		{
			yyVAL.str = yyDollar[1].str
		}
	case 982:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4930
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 983:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4936
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4940
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4945
		{
			yyVAL.str = ""
		}
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4949
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4955
		{
			yyVAL.str = yyDollar[1].str
		}
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4959
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 989:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4969
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4973
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4978
		{
			yyVAL.str = ""
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4982
		{
			yyVAL.str = " optionally"
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4995
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4999
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5003
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5007
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5011
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5017
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5021
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5025
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1002:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5029
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5034
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5038
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5044
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5048
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5054
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5058
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5064
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5069
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5079
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5083
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5089
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5095
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5099
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5105
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5109
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5113
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5117
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5121
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5129
		{
			yyVAL.str = "charset"
		}
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5156
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5158
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5163
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5166
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5168
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5171
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5173
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5176
		{
			yyVAL.empty = struct{}{}
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5178
		{
			yyVAL.empty = struct{}{}
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5180
		{
			yyVAL.empty = struct{}{}
		}
	case 1041:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5184
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5189
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5193
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5200
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5204
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5214
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5227
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1053:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5237
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5241
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5248
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5706
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5715
		{
			decNesting(yylex)
		}
	case 1492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5720
		{
			skipToEnd(yylex)
		}
	case 1493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5725
		{
			skipToEnd(yylex)
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5729
		{
			skipToEnd(yylex)
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5733
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
