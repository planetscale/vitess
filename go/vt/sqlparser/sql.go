// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const SCHEMA = 57487
const TABLE = 57488
const INDEX = 57489
const VIEW = 57490
const TO = 57491
const IGNORE = 57492
const IF = 57493
const UNIQUE = 57494
const PRIMARY = 57495
const COLUMN = 57496
const SPATIAL = 57497
const FULLTEXT = 57498
const KEY_BLOCK_SIZE = 57499
const CHECK = 57500
const INDEXES = 57501
const ACTION = 57502
const CASCADE = 57503
const CONSTRAINT = 57504
const FOREIGN = 57505
const NO = 57506
const REFERENCES = 57507
const RESTRICT = 57508
const SHOW = 57509
const DESCRIBE = 57510
const EXPLAIN = 57511
const DATE = 57512
const ESCAPE = 57513
const REPAIR = 57514
const OPTIMIZE = 57515
const TRUNCATE = 57516
const COALESCE = 57517
const EXCHANGE = 57518
const REBUILD = 57519
const PARTITIONING = 57520
const REMOVE = 57521
const MAXVALUE = 57522
const PARTITION = 57523
const REORGANIZE = 57524
const LESS = 57525
const THAN = 57526
const PROCEDURE = 57527
const TRIGGER = 57528
const VINDEX = 57529
const VINDEXES = 57530
const DIRECTORY = 57531
const NAME = 57532
const UPGRADE = 57533
const STATUS = 57534
const VARIABLES = 57535
const WARNINGS = 57536
const CASCADED = 57537
const DEFINER = 57538
const OPTION = 57539
const SQL = 57540
const UNDEFINED = 57541
const SEQUENCE = 57542
const MERGE = 57543
const TEMPTABLE = 57544
const INVOKER = 57545
const SECURITY = 57546
const FIRST = 57547
const AFTER = 57548
const LAST = 57549
const BEGIN = 57550
const START = 57551
const TRANSACTION = 57552
const COMMIT = 57553
const ROLLBACK = 57554
const SAVEPOINT = 57555
const RELEASE = 57556
const WORK = 57557
const BIT = 57558
const TINYINT = 57559
const SMALLINT = 57560
const MEDIUMINT = 57561
const INT = 57562
const INTEGER = 57563
const BIGINT = 57564
const INTNUM = 57565
const REAL = 57566
const DOUBLE = 57567
const FLOAT_TYPE = 57568
const DECIMAL = 57569
const NUMERIC = 57570
const TIME = 57571
const TIMESTAMP = 57572
const DATETIME = 57573
const YEAR = 57574
const CHAR = 57575
const VARCHAR = 57576
const BOOL = 57577
const CHARACTER = 57578
const VARBINARY = 57579
const NCHAR = 57580
const TEXT = 57581
const TINYTEXT = 57582
const MEDIUMTEXT = 57583
const LONGTEXT = 57584
const BLOB = 57585
const TINYBLOB = 57586
const MEDIUMBLOB = 57587
const LONGBLOB = 57588
const JSON = 57589
const ENUM = 57590
const GEOMETRY = 57591
const POINT = 57592
const LINESTRING = 57593
const POLYGON = 57594
const GEOMETRYCOLLECTION = 57595
const MULTIPOINT = 57596
const MULTILINESTRING = 57597
const MULTIPOLYGON = 57598
const NULLX = 57599
const AUTO_INCREMENT = 57600
const APPROXNUM = 57601
const SIGNED = 57602
const UNSIGNED = 57603
const ZEROFILL = 57604
const COLLATION = 57605
const DATABASES = 57606
const SCHEMAS = 57607
const TABLES = 57608
const VITESS_METADATA = 57609
const VSCHEMA = 57610
const FULL = 57611
const PROCESSLIST = 57612
const COLUMNS = 57613
const FIELDS = 57614
const ENGINES = 57615
const PLUGINS = 57616
const EXTENDED = 57617
const KEYSPACES = 57618
const VITESS_KEYSPACES = 57619
const VITESS_SHARDS = 57620
const VITESS_TABLETS = 57621
const CODE = 57622
const PRIVILEGES = 57623
const FUNCTION = 57624
const OPEN = 57625
const TRIGGERS = 57626
const NAMES = 57627
const CHARSET = 57628
const GLOBAL = 57629
const SESSION = 57630
const ISOLATION = 57631
const LEVEL = 57632
const READ = 57633
const WRITE = 57634
const ONLY = 57635
const REPEATABLE = 57636
const COMMITTED = 57637
const UNCOMMITTED = 57638
const SERIALIZABLE = 57639
const CURRENT_TIMESTAMP = 57640
const DATABASE = 57641
const CURRENT_DATE = 57642
const CURRENT_TIME = 57643
const LOCALTIME = 57644
const LOCALTIMESTAMP = 57645
const CURRENT_USER = 57646
const UTC_DATE = 57647
const UTC_TIME = 57648
const UTC_TIMESTAMP = 57649
const REPLACE = 57650
const CONVERT = 57651
const CAST = 57652
const SUBSTR = 57653
const SUBSTRING = 57654
const GROUP_CONCAT = 57655
const SEPARATOR = 57656
const TIMESTAMPADD = 57657
const TIMESTAMPDIFF = 57658
const MATCH = 57659
const AGAINST = 57660
const BOOLEAN = 57661
const LANGUAGE = 57662
const WITH = 57663
const QUERY = 57664
const EXPANSION = 57665
const WITHOUT = 57666
const VALIDATION = 57667
const UNUSED = 57668
const ARRAY = 57669
const CUME_DIST = 57670
const DESCRIPTION = 57671
const DENSE_RANK = 57672
const EMPTY = 57673
const EXCEPT = 57674
const FIRST_VALUE = 57675
const GROUPING = 57676
const GROUPS = 57677
const JSON_TABLE = 57678
const LAG = 57679
const LAST_VALUE = 57680
const LATERAL = 57681
const LEAD = 57682
const MEMBER = 57683
const NTH_VALUE = 57684
const NTILE = 57685
const OF = 57686
const OVER = 57687
const PERCENT_RANK = 57688
const RANK = 57689
const RECURSIVE = 57690
const ROW_NUMBER = 57691
const SYSTEM = 57692
const WINDOW = 57693
const ACTIVE = 57694
const ADMIN = 57695
const BUCKETS = 57696
const CLONE = 57697
const COMPONENT = 57698
const DEFINITION = 57699
const ENFORCED = 57700
const EXCLUDE = 57701
const FOLLOWING = 57702
const GEOMCOLLECTION = 57703
const GET_MASTER_PUBLIC_KEY = 57704
const HISTOGRAM = 57705
const HISTORY = 57706
const INACTIVE = 57707
const INVISIBLE = 57708
const LOCKED = 57709
const MASTER_COMPRESSION_ALGORITHMS = 57710
const MASTER_PUBLIC_KEY_PATH = 57711
const MASTER_TLS_CIPHERSUITES = 57712
const MASTER_ZSTD_COMPRESSION_LEVEL = 57713
const NESTED = 57714
const NETWORK_NAMESPACE = 57715
const NOWAIT = 57716
const NULLS = 57717
const OJ = 57718
const OLD = 57719
const OPTIONAL = 57720
const ORDINALITY = 57721
const ORGANIZATION = 57722
const OTHERS = 57723
const PATH = 57724
const PERSIST = 57725
const PERSIST_ONLY = 57726
const PRECEDING = 57727
const PRIVILEGE_CHECKS_USER = 57728
const PROCESS = 57729
const RANDOM = 57730
const REFERENCE = 57731
const REQUIRE_ROW_FORMAT = 57732
const RESOURCE = 57733
const RESPECT = 57734
const RESTART = 57735
const RETAIN = 57736
const REUSE = 57737
const ROLE = 57738
const SECONDARY = 57739
const SECONDARY_ENGINE = 57740
const SECONDARY_LOAD = 57741
const SECONDARY_UNLOAD = 57742
const SKIP = 57743
const SRID = 57744
const THREAD_PRIORITY = 57745
const TIES = 57746
const UNBOUNDED = 57747
const VCPU = 57748
const VISIBLE = 57749
const FORMAT = 57750
const TREE = 57751
const VITESS = 57752
const TRADITIONAL = 57753
const LOCAL = 57754
const LOW_PRIORITY = 57755
const NO_WRITE_TO_BINLOG = 57756
const LOGS = 57757
const ERROR = 57758
const GENERAL = 57759
const HOSTS = 57760
const OPTIMIZER_COSTS = 57761
const USER_RESOURCES = 57762
const SLOW = 57763
const CHANNEL = 57764
const RELAY = 57765
const EXPORT = 57766
const AVG_ROW_LENGTH = 57767
const CONNECTION = 57768
const CHECKSUM = 57769
const DELAY_KEY_WRITE = 57770
const ENCRYPTION = 57771
const ENGINE = 57772
const INSERT_METHOD = 57773
const MAX_ROWS = 57774
const MIN_ROWS = 57775
const PACK_KEYS = 57776
const PASSWORD = 57777
const FIXED = 57778
const DYNAMIC = 57779
const COMPRESSED = 57780
const REDUNDANT = 57781
const COMPACT = 57782
const ROW_FORMAT = 57783
const STATS_AUTO_RECALC = 57784
const STATS_PERSISTENT = 57785
const STATS_SAMPLE_PAGES = 57786
const STORAGE = 57787
const MEMORY = 57788
const DISK = 57789

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 111,
	465, 111,
	-2, 117,
	-1, 45,
	143, 117,
	253, 117,
	303, 117,
	-2, 329,
	-1, 52,
	209, 484,
	210, 484,
	287, 472,
	288, 472,
	289, 472,
	-2, 470,
	-1, 57,
	166, 494,
	-2, 492,
	-1, 82,
	56, 561,
	-2, 569,
	-1, 106,
	1, 112,
	465, 112,
	-2, 117,
	-1, 116,
	169, 234,
	170, 234,
	-2, 323,
	-1, 135,
	143, 117,
	253, 117,
	303, 117,
	-2, 338,
	-1, 567,
	150, 947,
	-2, 943,
	-1, 568,
	150, 948,
	-2, 944,
	-1, 586,
	56, 562,
	-2, 574,
	-1, 587,
	56, 563,
	-2, 575,
	-1, 607,
	118, 1285,
	-2, 83,
	-1, 608,
	118, 1168,
	-2, 84,
	-1, 614,
	118, 1218,
	-2, 922,
	-1, 751,
	118, 1107,
	-2, 919,
	-1, 786,
	175, 37,
	180, 37,
	-2, 245,
	-1, 865,
	1, 376,
	465, 376,
	-2, 117,
	-1, 1101,
	1, 272,
	465, 272,
	-2, 117,
	-1, 1179,
	169, 234,
	170, 234,
	-2, 323,
	-1, 1188,
	175, 38,
	180, 38,
	-2, 246,
	-1, 1396,
	150, 950,
	-2, 946,
	-1, 1488,
	74, 65,
	82, 65,
	-2, 69,
	-1, 1509,
	1, 273,
	465, 273,
	-2, 117,
	-1, 1911,
	5, 816,
	18, 816,
	20, 816,
	32, 816,
	83, 816,
	-2, 600,
	-1, 2127,
	46, 890,
	-2, 888,
}

const yyPrivate = 57344

const yyLast = 27802

var yyAct = [...]int{
	567, 2213, 2200, 1960, 2140, 1825, 1721, 2073, 2051, 1794,
	540, 526, 2127, 1891, 2177, 1688, 1506, 1433, 1892, 1722,
	1708, 1888, 1957, 1798, 755, 1056, 1049, 923, 1573, 1541,
	1546, 81, 3, 509, 1526, 1004, 1779, 579, 1780, 144,
	1164, 1485, 511, 1903, 1850, 877, 1648, 1158, 175, 1390,
	1548, 187, 1571, 475, 187, 1186, 1382, 1297, 79, 490,
	130, 187, 1778, 1772, 895, 781, 612, 1093, 1086, 187,
	1059, 1467, 588, 1474, 1054, 1435, 1079, 1042, 1416, 573,
	816, 1204, 513, 1359, 32, 940, 1620, 1083, 762, 759,
	490, 787, 1077, 490, 187, 490, 1163, 1450, 768, 1076,
	502, 1276, 763, 782, 783, 1092, 794, 1193, 1490, 1090,
	77, 1317, 858, 1066, 147, 107, 1537, 609, 108, 1017,
	497, 8, 1178, 113, 114, 7, 1018, 6, 2075, 1817,
	1816, 1263, 174, 784, 76, 1602, 1838, 1839, 176, 177,
	178, 1430, 1431, 1527, 1348, 1347, 1346, 1345, 1344, 1343,
	82, 500, 1336, 501, 2169, 594, 598, 1686, 756, 109,
	2124, 2030, 574, 1934, 2102, 2101, 2046, 820, 115, 2047,
	187, 819, 2219, 1165, 2174, 821, 2212, 2151, 2203, 1961,
	187, 1590, 871, 498, 78, 187, 84, 85, 86, 87,
	88, 89, 2173, 2150, 1551, 1638, 449, 1867, 552, 606,
	558, 559, 556, 557, 1992, 555, 554, 553, 1609, 773,
	1687, 1752, 1608, 818, 1751, 560, 561, 1753, 941, 1918,
	1919, 109, 775, 173, 798, 774, 832, 833, 1917, 836,
	837, 838, 839, 613, 1837, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	829, 797, 1636, 776, 168, 1501, 1502, 1491, 1094, 898,
	1095, 34, 1500, 1432, 70, 38, 39, 479, 888, 887,
	822, 823, 824, 1550, 885, 168, 835, 902, 903, 110,
	919, 132, 571, 951, 176, 177, 178, 777, 570, 109,
	152, 834, 104, 180, 181, 182, 1763, 168, 1520, 2023,
	110, 1983, 1827, 488, 921, 901, 902, 903, 104, 169,
	2153, 152, 1335, 102, 1337, 1338, 1339, 478, 1981, 492,
	486, 142, 110, 1253, 1821, 1799, 131, 1572, 1605, 1282,
	1277, 1822, 1285, 152, 1286, 1287, 69, 892, 893, 2202,
	859, 890, 891, 894, 149, 917, 150, 1393, 866, 1281,
	1830, 119, 120, 141, 140, 167, 889, 939, 918, 1617,
	841, 941, 886, 840, 1254, 149, 1255, 150, 104, 96,
	97, 2170, 947, 1828, 1756, 100, 167, 1829, 99, 98,
	1279, 2098, 2041, 1283, 778, 1574, 479, 149, 805, 150,
	1280, 803, 1468, 814, 813, 812, 796, 479, 167, 811,
	810, 809, 808, 136, 117, 143, 124, 116, 807, 137,
	138, 802, 869, 153, 1172, 815, 2042, 760, 2220, 2189,
	760, 758, 2217, 158, 125, 790, 951, 1624, 1933, 760,
	1851, 172, 789, 106, 153, 796, 478, 1552, 128, 126,
	121, 122, 123, 127, 158, 1607, 103, 478, 118, 187,
	1192, 1191, 1491, 479, 1831, 870, 153, 129, 767, 2149,
	600, 1596, 103, 1689, 1691, 1290, 158, 904, 908, 831,
	176, 177, 178, 1853, 927, 796, 490, 490, 490, 915,
	806, 825, 796, 804, 1788, 1604, 905, 1876, 1875, 1874,
	796, 771, 770, 490, 490, 796, 880, 881, 882, 883,
	884, 769, 1809, 478, 448, 179, 946, 943, 944, 945,
	950, 952, 949, 1637, 948, 947, 1592, 2141, 2154, 2090,
	920, 942, 103, 1622, 145, 2131, 933, 1667, 1621, 899,
	1855, 795, 1859, 863, 1854, 2012, 1852, 799, 789, 1616,
	1916, 1857, 1615, 1713, 1656, 145, 1419, 800, 1622, 910,
	1856, 912, 1582, 1621, 1265, 1264, 1266, 1267, 1268, 1690,
	989, 990, 1496, 1858, 1860, 801, 1070, 145, 1002, 2215,
	795, 187, 2216, 875, 2214, 139, 1507, 789, 792, 793,
	71, 760, 977, 1748, 1664, 786, 790, 133, 909, 911,
	134, 987, 1446, 879, 900, 872, 873, 490, 596, 1046,
	187, 1332, 187, 187, 785, 490, 957, 1047, 865, 914,
	795, 490, 830, 860, 2106, 861, 936, 795, 862, 954,
	934, 916, 935, 799, 789, 795, 1005, 817, 582, 896,
	795, 967, 609, 800, 977, 957, 1901, 789, 792, 793,
	1591, 760, 1318, 1075, 1278, 786, 790, 1043, 1096, 946,
	943, 944, 945, 950, 952, 949, 1366, 948, 92, 2091,
	2089, 1060, 1869, 503, 942, 937, 989, 990, 864, 1417,
	1364, 1365, 1363, 1020, 1022, 1024, 1026, 1028, 1030, 1031,
	1021, 1023, 1589, 1027, 1029, 907, 1032, 176, 177, 178,
	1040, 146, 151, 148, 154, 155, 156, 157, 159, 160,
	161, 162, 906, 93, 1162, 506, 878, 163, 164, 165,
	166, 1587, 146, 151, 148, 154, 155, 156, 157, 159,
	160, 161, 162, 989, 990, 805, 803, 1048, 163, 164,
	165, 166, 956, 954, 146, 151, 148, 154, 155, 156,
	157, 159, 160, 161, 162, 897, 766, 1768, 613, 957,
	163, 164, 165, 166, 1417, 187, 1674, 1761, 1319, 1154,
	970, 971, 972, 973, 974, 967, 2134, 187, 977, 1663,
	1166, 1167, 1168, 1169, 176, 177, 178, 1584, 1384, 1448,
	1063, 924, 925, 2221, 171, 490, 1517, 1188, 955, 956,
	954, 1091, 1354, 1356, 1357, 1197, 1871, 2029, 1518, 1201,
	1584, 1588, 490, 490, 1355, 490, 957, 490, 490, 1184,
	490, 490, 490, 490, 490, 490, 968, 969, 970, 971,
	972, 973, 974, 967, 1586, 490, 977, 2028, 1662, 187,
	1237, 2204, 2194, 1939, 1385, 1878, 1661, 1641, 1642, 1643,
	1198, 1177, 1447, 1451, 1452, 1250, 1776, 1824, 772, 1234,
	1196, 2222, 1775, 955, 956, 954, 490, 1170, 1171, 2205,
	2195, 955, 956, 954, 187, 1232, 1233, 955, 956, 954,
	187, 957, 1555, 187, 1296, 1273, 187, 1258, 1160, 957,
	765, 604, 1257, 1879, 1206, 957, 1207, 187, 1209, 1211,
	187, 1153, 1215, 1217, 1219, 1221, 1223, 187, 187, 1194,
	1194, 1195, 1174, 1175, 1173, 490, 490, 490, 187, 490,
	490, 187, 490, 490, 1256, 1240, 1241, 1248, 1242, 1187,
	69, 1246, 1247, 1777, 1272, 955, 956, 954, 955, 956,
	954, 1302, 1362, 1058, 1305, 1239, 1307, 1308, 1309, 1310,
	187, 1312, 1299, 957, 599, 1316, 957, 955, 956, 954,
	1238, 1213, 1304, 2207, 176, 177, 178, 1291, 1755, 1311,
	176, 177, 178, 1315, 1566, 957, 1320, 1270, 2206, 1235,
	1260, 1360, 176, 177, 178, 2196, 1564, 2185, 1383, 2163,
	109, 775, 583, 1271, 774, 2064, 2026, 1386, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 2000, 1880,
	977, 490, 2114, 966, 965, 975, 976, 968, 969, 970,
	971, 972, 973, 974, 967, 1785, 1773, 977, 176, 177,
	178, 1632, 1251, 1387, 1388, 1330, 1269, 1342, 2096, 1259,
	1394, 1400, 601, 602, 490, 490, 1600, 529, 528, 531,
	532, 533, 534, 1361, 1599, 187, 530, 1300, 535, 176,
	177, 178, 1261, 1405, 1408, 1249, 1245, 1244, 490, 1418,
	1395, 1243, 1946, 2188, 78, 187, 1946, 2147, 490, 1396,
	1946, 2132, 187, 1005, 187, 1946, 583, 1946, 2104, 2044,
	583, 1440, 187, 187, 1441, 1492, 1424, 1425, 2095, 490,
	1584, 583, 490, 1959, 1453, 2010, 583, 1801, 1394, 1946,
	1951, 1931, 1930, 490, 958, 1927, 1928, 1927, 1926, 1459,
	583, 1491, 1818, 1486, 1397, 2031, 609, 1157, 1803, 609,
	1796, 1797, 1471, 583, 1787, 34, 34, 1511, 1465, 1492,
	953, 583, 1585, 1461, 1157, 1156, 1709, 1396, 1102, 1101,
	503, 1510, 583, 1515, 1900, 1889, 1709, 1493, 1742, 1015,
	1716, 1528, 1529, 1530, 1900, 1495, 1491, 1521, 490, 1522,
	1523, 1524, 1525, 2032, 2033, 2034, 490, 80, 1514, 1460,
	1489, 1563, 1565, 1717, 2080, 1533, 1534, 1535, 1536, 1052,
	1055, 1463, 1543, 2007, 490, 953, 1470, 1584, 2105, 1946,
	490, 1493, 1929, 1494, 1197, 1498, 1197, 1549, 1497, 1491,
	69, 69, 1782, 1471, 1583, 1471, 1513, 1512, 1570, 1321,
	1322, 1323, 2115, 1325, 1326, 1900, 1328, 1329, 34, 1499,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1679, 1678, 613, 1459, 490, 613, 1383, 1471, 1459, 1459,
	1584, 1383, 1383, 1544, 576, 1567, 1449, 1428, 1340, 1580,
	1289, 1581, 1088, 1228, 568, 780, 1554, 779, 1593, 2139,
	1553, 69, 1556, 1560, 1561, 1562, 1539, 1540, 2053, 1958,
	2018, 1159, 1542, 1823, 1577, 1538, 187, 1544, 1576, 1575,
	187, 187, 187, 187, 187, 1532, 1531, 1594, 1275, 798,
	187, 187, 1595, 69, 187, 1189, 1185, 1597, 1598, 1194,
	1579, 1229, 1230, 1231, 173, 188, 1155, 94, 188, 1904,
	1905, 1826, 2209, 491, 2054, 188, 797, 1165, 187, 69,
	1781, 2201, 2035, 188, 1225, 1922, 1476, 1479, 1480, 1481,
	1477, 187, 1478, 1482, 187, 490, 1904, 1905, 1907, 1476,
	1479, 1480, 1481, 1477, 491, 1478, 1482, 491, 188, 491,
	1626, 1889, 1910, 1792, 1401, 1402, 1791, 1627, 1407, 1410,
	1411, 1628, 583, 1603, 1790, 1782, 1630, 2036, 2037, 1226,
	1227, 1558, 1333, 1293, 1360, 1733, 1735, 1731, 1480, 1481,
	1734, 1625, 1732, 1423, 1909, 1730, 1426, 1427, 1729, 966,
	965, 975, 976, 968, 969, 970, 971, 972, 973, 974,
	967, 2191, 1995, 977, 2172, 1881, 1698, 1057, 966, 965,
	975, 976, 968, 969, 970, 971, 972, 973, 974, 967,
	2011, 1949, 977, 1707, 188, 1706, 1635, 589, 2159, 187,
	2156, 2193, 2176, 2178, 188, 2184, 1696, 187, 1658, 188,
	2183, 2126, 590, 101, 1697, 2128, 1361, 1644, 1649, 966,
	965, 975, 976, 968, 969, 970, 971, 972, 973, 974,
	967, 187, 1288, 977, 569, 1061, 1062, 592, 1695, 591,
	1786, 1413, 187, 187, 187, 187, 187, 1657, 1301, 827,
	1702, 826, 574, 589, 187, 1970, 1414, 1714, 187, 1050,
	170, 187, 187, 183, 1673, 187, 187, 187, 590, 1718,
	1781, 1051, 1711, 1836, 926, 1043, 1685, 1811, 1754, 1810,
	1760, 110, 1693, 1723, 2136, 2135, 2078, 1578, 1203, 1740,
	1202, 586, 587, 592, 1701, 591, 1190, 2005, 1767, 1444,
	1710, 1557, 1743, 1292, 1712, 1640, 1745, 1451, 1452, 2097,
	2048, 1484, 580, 1766, 2198, 1769, 1770, 1771, 2197, 1757,
	1398, 1399, 1349, 1350, 1351, 1352, 1736, 1764, 1765, 187,
	1741, 577, 578, 1299, 1746, 1725, 1726, 1749, 1728, 490,
	2181, 1724, 2160, 1705, 1727, 490, 2004, 1758, 490, 1945,
	1197, 1704, 1568, 581, 80, 490, 2003, 1804, 1549, 1884,
	1709, 2211, 2210, 83, 1442, 1668, 1774, 1815, 1783, 1665,
	1071, 1064, 2211, 2129, 2024, 187, 1445, 1403, 1404, 576,
	1806, 78, 1814, 75, 1, 1800, 459, 1429, 1813, 1041,
	474, 2199, 1262, 1252, 1962, 187, 2050, 1952, 1177, 1547,
	788, 1784, 135, 1508, 1509, 1805, 2143, 91, 753, 90,
	1395, 791, 913, 1569, 503, 2088, 1812, 2045, 1762, 1396,
	1519, 2022, 1921, 1759, 2133, 1108, 1106, 490, 1107, 1105,
	1110, 1109, 1104, 1383, 1334, 1358, 487, 1483, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1848, 1847, 1849, 1832, 1097, 1065, 828,
	1932, 1516, 1840, 490, 1834, 1505, 1835, 1868, 1331, 1601,
	469, 465, 985, 188, 187, 1846, 1703, 1750, 1862, 610,
	603, 1895, 2182, 2157, 490, 2155, 2125, 2074, 2158, 1861,
	490, 490, 2123, 1890, 2192, 1420, 2175, 1443, 1893, 1053,
	491, 491, 491, 2002, 1883, 1672, 1014, 1415, 1080, 1653,
	1654, 1847, 1899, 187, 512, 1439, 1353, 491, 491, 527,
	524, 525, 1887, 1454, 1545, 1715, 959, 510, 504, 1723,
	1671, 1072, 1912, 1475, 1914, 1473, 1915, 1472, 1294, 1084,
	1906, 1908, 1902, 1078, 1877, 1458, 1606, 1820, 1989, 938,
	585, 1924, 1925, 499, 1913, 95, 1412, 1940, 2113, 187,
	1639, 187, 187, 187, 1991, 584, 1920, 490, 60, 37,
	494, 2168, 1898, 929, 593, 31, 30, 29, 28, 23,
	187, 22, 21, 20, 19, 25, 18, 1936, 1935, 17,
	16, 1947, 105, 47, 44, 188, 42, 1963, 490, 490,
	490, 112, 187, 111, 1950, 45, 1956, 1953, 41, 867,
	1971, 27, 1948, 26, 1549, 1955, 15, 14, 1841, 13,
	12, 491, 11, 10, 188, 9, 188, 188, 5, 491,
	4, 932, 1937, 1938, 24, 491, 1003, 2, 966, 965,
	975, 976, 968, 969, 970, 971, 972, 973, 974, 967,
	1968, 1969, 977, 0, 0, 1979, 1974, 966, 965, 975,
	976, 968, 969, 970, 971, 972, 973, 974, 967, 1976,
	1977, 977, 1978, 0, 0, 1980, 0, 1982, 0, 0,
	0, 0, 2006, 0, 2001, 0, 0, 0, 0, 0,
	2015, 0, 0, 0, 0, 2014, 0, 0, 0, 0,
	0, 0, 0, 1651, 2021, 0, 0, 1652, 2020, 0,
	0, 0, 0, 1723, 0, 0, 490, 490, 1659, 1660,
	0, 0, 0, 0, 1666, 2039, 0, 1669, 1670, 490,
	0, 2025, 490, 2027, 2038, 1676, 0, 1677, 2049, 0,
	1680, 1681, 1682, 1683, 1684, 0, 0, 0, 2057, 0,
	0, 0, 0, 0, 0, 0, 1694, 0, 0, 2052,
	0, 0, 0, 0, 0, 0, 0, 490, 490, 490,
	187, 2055, 0, 0, 0, 0, 2067, 2069, 2070, 188,
	0, 490, 2056, 490, 0, 0, 1675, 2071, 1893, 490,
	0, 188, 1893, 539, 0, 2083, 2079, 0, 2086, 2063,
	0, 0, 1738, 1739, 0, 2072, 2092, 0, 0, 491,
	2077, 2081, 2093, 187, 2094, 0, 1699, 1700, 1055, 0,
	0, 0, 2085, 0, 490, 187, 491, 491, 2087, 491,
	0, 491, 491, 2107, 491, 491, 491, 491, 491, 491,
	1645, 1646, 1647, 2100, 186, 0, 0, 485, 0, 491,
	2103, 0, 0, 188, 186, 0, 0, 2122, 0, 0,
	0, 1893, 186, 0, 2130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 490, 597, 597,
	491, 0, 0, 0, 2142, 0, 0, 186, 188, 0,
	0, 0, 0, 0, 188, 0, 0, 188, 0, 2137,
	188, 2152, 490, 2052, 2144, 0, 2161, 0, 0, 0,
	490, 188, 2164, 0, 188, 0, 0, 0, 0, 2167,
	0, 188, 188, 2171, 0, 0, 1650, 0, 0, 491,
	491, 491, 188, 491, 491, 188, 491, 491, 2180, 2179,
	0, 0, 1723, 0, 0, 2190, 966, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 0, 0,
	977, 0, 0, 186, 188, 1994, 0, 0, 0, 0,
	1844, 1845, 2208, 186, 0, 0, 0, 961, 186, 964,
	0, 0, 0, 2218, 0, 978, 979, 980, 981, 982,
	983, 984, 0, 962, 963, 960, 966, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 0, 0,
	977, 0, 966, 965, 975, 976, 968, 969, 970, 971,
	972, 973, 974, 967, 0, 491, 977, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1896, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1911, 491, 491,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 1885, 0,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 491, 0, 0, 0, 188, 0, 188, 0,
	0, 0, 0, 0, 0, 0, 188, 188, 1988, 0,
	0, 0, 0, 491, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 1842, 1843, 491, 0, 0,
	0, 0, 0, 0, 1987, 0, 0, 0, 0, 0,
	1863, 1864, 0, 1865, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 1873, 0, 0, 0, 0,
	0, 0, 0, 1973, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 1986, 0, 0, 0, 0, 1984, 1985,
	0, 0, 491, 0, 0, 0, 0, 0, 0, 0,
	491, 0, 0, 0, 1999, 0, 0, 0, 0, 0,
	0, 0, 176, 177, 178, 0, 0, 0, 491, 0,
	0, 2008, 2009, 0, 491, 2013, 0, 966, 965, 975,
	976, 968, 969, 970, 971, 972, 973, 974, 967, 0,
	0, 977, 0, 0, 0, 0, 1923, 0, 0, 0,
	1993, 0, 186, 966, 965, 975, 976, 968, 969, 970,
	971, 972, 973, 974, 967, 0, 0, 977, 491, 0,
	0, 0, 466, 503, 0, 0, 0, 0, 0, 2043,
	2016, 467, 0, 2017, 0, 0, 2019, 0, 0, 0,
	0, 461, 966, 965, 975, 976, 968, 969, 970, 971,
	972, 973, 974, 967, 0, 0, 977, 0, 0, 0,
	188, 0, 0, 0, 188, 188, 188, 188, 188, 0,
	0, 0, 0, 2068, 188, 188, 0, 1972, 188, 0,
	458, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	966, 965, 975, 976, 968, 969, 970, 971, 972, 973,
	974, 967, 188, 0, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 0, 0, 188, 491,
	0, 0, 0, 0, 186, 0, 0, 0, 0, 0,
	0, 479, 2076, 503, 0, 2109, 2110, 2111, 2112, 597,
	2116, 0, 2117, 2118, 2119, 0, 2120, 2121, 0, 0,
	0, 0, 0, 186, 0, 186, 1087, 0, 450, 451,
	452, 462, 471, 472, 463, 0, 0, 0, 468, 470,
	482, 453, 454, 484, 483, 0, 457, 455, 456, 464,
	0, 478, 460, 480, 0, 0, 0, 0, 0, 0,
	2148, 0, 0, 0, 0, 0, 538, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 0, 0,
	977, 0, 0, 188, 0, 0, 0, 0, 0, 0,
	0, 188, 2058, 2059, 2060, 2061, 2062, 0, 0, 0,
	2065, 2066, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2186, 2187, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 188, 188, 188, 188,
	188, 0, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 188, 0, 0, 188, 188, 0, 0, 188,
	188, 188, 0, 0, 0, 0, 611, 0, 0, 757,
	0, 764, 0, 0, 0, 0, 1044, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 481, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 0, 0, 0, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	477, 0, 0, 188, 0, 0, 0, 185, 0, 0,
	0, 1200, 0, 491, 0, 0, 0, 493, 0, 491,
	0, 0, 491, 0, 0, 572, 0, 0, 0, 491,
	0, 0, 0, 0, 2165, 0, 1200, 1200, 0, 0,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 188,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 186, 0, 0, 186, 0, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 491, 0, 186, 0, 0, 0, 0, 0, 0,
	1313, 1314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 186, 0, 857, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 868, 491, 0, 0,
	0, 874, 0, 0, 0, 0, 0, 0, 188, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 491, 0,
	0, 0, 0, 0, 491, 491, 0, 0, 0, 0,
	0, 0, 0, 34, 35, 36, 70, 38, 39, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 74, 0, 0, 0, 0, 40, 66,
	67, 0, 64, 68, 0, 0, 0, 0, 0, 65,
	0, 0, 0, 0, 0, 597, 1298, 0, 0, 0,
	597, 597, 0, 0, 597, 597, 597, 0, 0, 0,
	1200, 0, 0, 188, 0, 188, 188, 188, 53, 0,
	0, 491, 0, 0, 0, 0, 0, 0, 69, 597,
	597, 597, 597, 597, 188, 0, 0, 0, 1437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 491, 491, 491, 0, 188, 0, 186, 0,
	0, 0, 0, 0, 1298, 186, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 186, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 46, 49, 48, 51, 0, 63, 0, 0, 0,
	0, 0, 611, 611, 611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 928,
	930, 52, 73, 72, 0, 0, 61, 62, 50, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	491, 491, 54, 55, 0, 56, 57, 58, 59, 0,
	0, 0, 0, 491, 0, 876, 491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 33, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 491, 491, 491, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 1068, 0, 491, 0, 491, 33, 0,
	0, 611, 0, 491, 0, 0, 0, 1098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 0, 186,
	0, 0, 71, 186, 186, 186, 186, 186, 491, 188,
	0, 0, 575, 186, 186, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 186, 0, 0,
	491, 491, 0, 0, 0, 0, 1074, 0, 0, 1085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 491, 0, 0, 0,
	0, 0, 0, 0, 491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 597, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 597, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 186, 0, 0, 0, 0, 0, 0, 0,
	1437, 0, 0, 0, 1199, 0, 0, 0, 1205, 1205,
	0, 1205, 0, 1205, 1205, 0, 1214, 1205, 1205, 1205,
	1205, 1205, 0, 597, 186, 0, 0, 0, 0, 1199,
	1199, 757, 0, 0, 1200, 186, 186, 186, 186, 186,
	0, 0, 0, 0, 0, 0, 0, 1737, 0, 0,
	0, 186, 0, 0, 186, 186, 0, 0, 186, 1747,
	1298, 1103, 1274, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 611, 611, 0, 611, 611, 0, 611, 611,
	0, 0, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1236, 1200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	1284, 0, 0, 0, 0, 0, 1085, 0, 0, 1295,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 1303, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1389, 0, 611,
	0, 0, 0, 0, 1324, 0, 0, 1327, 0, 597,
	0, 0, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1421, 1422, 0, 0, 0, 0, 1085, 0, 0, 0,
	922, 922, 922, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1455, 0, 0, 186, 0, 33,
	0, 0, 0, 0, 1068, 0, 0, 611, 0, 0,
	1200, 0, 986, 988, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 0, 0, 611, 0,
	0, 0, 0, 0, 0, 0, 186, 0, 0, 757,
	0, 0, 0, 1001, 0, 0, 0, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 0, 1016, 1019, 1019, 1019,
	1025, 1019, 1019, 1025, 1019, 1033, 1034, 1035, 1036, 1037,
	1038, 1039, 0, 0, 0, 0, 0, 1045, 0, 0,
	33, 0, 186, 0, 186, 186, 186, 0, 0, 0,
	0, 0, 0, 1200, 764, 0, 0, 0, 0, 0,
	0, 1462, 1559, 186, 0, 168, 1081, 0, 1466, 0,
	1469, 0, 0, 0, 0, 0, 1793, 0, 0, 1488,
	757, 0, 0, 0, 0, 186, 764, 0, 0, 168,
	110, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	1176, 152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 152, 0, 0, 0, 0,
	757, 0, 142, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1200, 149, 142, 150, 0, 0,
	0, 131, 1180, 1181, 141, 140, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 150, 0, 0, 0, 0, 1180, 1181, 141, 140,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 136, 1182, 143, 0, 1179, 0,
	137, 138, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 1634, 0, 0, 158, 0, 0, 0, 136, 1182,
	143, 0, 1179, 0, 137, 138, 0, 0, 153, 0,
	0, 0, 0, 1437, 0, 0, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1085, 0, 0, 0, 1610, 1611, 1612, 1613,
	1614, 0, 0, 0, 0, 0, 1618, 1619, 0, 0,
	1623, 0, 0, 0, 0, 0, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 1629, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1631, 0, 0,
	1633, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 922,
	922, 922, 0, 922, 922, 0, 922, 922, 0, 0,
	0, 0, 0, 1200, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 133, 0, 1125, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 1199,
	0, 1802, 0, 0, 1795, 0, 0, 0, 0, 611,
	0, 1807, 0, 0, 0, 0, 0, 0, 1744, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 151, 148, 154, 155, 156, 157, 159,
	160, 161, 162, 0, 0, 0, 0, 0, 163, 164,
	165, 166, 0, 0, 0, 0, 146, 151, 148, 154,
	155, 156, 157, 159, 160, 161, 162, 1113, 0, 0,
	0, 0, 163, 164, 165, 166, 1487, 0, 0, 0,
	0, 0, 0, 611, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1126, 0, 0, 0, 0, 0, 0, 0, 0, 1205,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 0, 0, 1199, 0, 0, 1897, 1205, 0, 0,
	0, 1833, 0, 0, 0, 0, 1139, 1142, 1143, 1144,
	1145, 1146, 1147, 0, 1148, 1149, 1150, 1151, 1152, 1127,
	1128, 1129, 1130, 1111, 1112, 1140, 0, 1114, 0, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 0, 1199, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1964, 1965, 1966, 0, 0, 1141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1941, 0, 1942, 1943, 1944,
	0, 0, 0, 0, 0, 0, 0, 1199, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1967, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1795, 2040, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1795, 0, 0, 611, 1655,
	0, 0, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1795, 1795, 1795, 0, 0, 0, 1692,
	0, 0, 0, 0, 0, 0, 0, 2082, 0, 2084,
	0, 0, 0, 0, 0, 1795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1081, 0, 0, 0, 0,
	0, 0, 1719, 1720, 0, 0, 1081, 1081, 1081, 1081,
	1081, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1795, 0, 1487, 0, 0, 1081, 0, 0, 0, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 2162, 0,
	0, 0, 0, 0, 0, 0, 1795, 0, 0, 2099,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 2108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 0, 33, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1990, 0, 0, 0, 0, 0, 0, 1996,
	1997, 1998, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1894, 0, 33, 0, 1894, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 33, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1894, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 722, 33, 2138, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 2145, 2146, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	1886, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	1748, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	1464, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 69, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 752, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 614, 751, 608,
	607, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 1089, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 752, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 614, 751, 608,
	607, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	735, 722, 0, 0, 671, 738, 642, 660, 747, 662,
	665, 705, 622, 684, 329, 657, 0, 646, 618, 653,
	619, 644, 673, 240, 677, 641, 724, 687, 737, 287,
	0, 624, 647, 343, 707, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 744,
	291, 694, 0, 389, 314, 0, 0, 0, 675, 727,
	682, 718, 670, 706, 631, 693, 739, 658, 702, 740,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 699, 734, 655, 701, 236, 275, 242,
	235, 405, 704, 750, 617, 696, 0, 620, 623, 746,
	730, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	674, 683, 715, 668, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 692, 0, 0, 0, 627, 621,
	0, 0, 0, 0, 672, 0, 0, 0, 630, 0,
	649, 716, 0, 615, 261, 625, 315, 720, 729, 669,
	434, 733, 667, 666, 736, 711, 628, 726, 661, 286,
	626, 283, 190, 204, 0, 659, 325, 364, 370, 725,
	645, 654, 227, 652, 368, 339, 421, 212, 251, 361,
	344, 366, 691, 709, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 605, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 752, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 640, 721, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 614, 751, 608,
	607, 284, 293, 713, 749, 338, 369, 218, 423, 388,
	635, 639, 633, 634, 685, 686, 636, 741, 742, 743,
	717, 629, 0, 637, 638, 0, 723, 731, 732, 690,
	189, 202, 289, 745, 358, 254, 445, 429, 426, 616,
	632, 233, 643, 0, 0, 656, 663, 664, 676, 678,
	679, 680, 681, 689, 697, 698, 700, 708, 710, 712,
	714, 719, 728, 748, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 688, 695, 299, 249, 265,
	274, 703, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	329, 0, 0, 1391, 0, 508, 0, 0, 0, 240,
	0, 507, 0, 0, 0, 287, 0, 0, 1392, 343,
	0, 380, 226, 296, 294, 407, 250, 243, 239, 225,
	271, 302, 341, 398, 335, 551, 291, 0, 0, 389,
	314, 0, 0, 0, 0, 0, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 224, 194, 326,
	390, 253, 69, 0, 0, 176, 177, 178, 529, 528,
	531, 532, 533, 534, 0, 0, 216, 530, 222, 535,
	536, 537, 0, 236, 275, 242, 235, 405, 0, 0,
	0, 505, 522, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 595, 0, 0, 0,
	565, 0, 521, 0, 0, 514, 515, 517, 516, 518,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 315, 564, 0, 0, 434, 0, 0, 562,
	0, 0, 0, 0, 0, 286, 0, 283, 190, 204,
	0, 0, 325, 364, 370, 0, 0, 0, 227, 0,
	368, 339, 421, 212, 251, 361, 344, 366, 0, 0,
	367, 292, 409, 356, 419, 435, 436, 234, 319, 427,
	402, 432, 444, 205, 231, 333, 395, 424, 386, 312,
	406, 282, 385, 259, 193, 290, 197, 397, 417, 217,
	378, 0, 0, 0, 199, 415, 394, 309, 279, 280,
	198, 0, 360, 238, 257, 229, 328, 412, 413, 228,
	446, 207, 431, 201, 208, 430, 321, 408, 416, 310,
	301, 200, 414, 308, 300, 285, 248, 267, 354, 295,
	355, 268, 317, 316, 318, 0, 195, 0, 391, 425,
	447, 214, 0, 0, 404, 440, 443, 0, 357, 215,
	258, 247, 353, 256, 288, 439, 441, 442, 213, 351,
	264, 332, 420, 320, 209, 270, 387, 284, 293, 0,
	0, 338, 369, 218, 423, 388, 552, 563, 558, 559,
	556, 557, 0, 555, 554, 553, 566, 544, 545, 546,
	547, 549, 0, 560, 561, 548, 189, 202, 289, 0,
	358, 254, 445, 429, 426, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 410, 411, 422, 433, 437, 263, 418, 438, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 428, 393,
	206, 365, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 342, 345, 260, 241, 221, 362, 219, 379,
	399, 400, 401, 403, 311, 237, 329, 0, 0, 0,
	0, 508, 0, 0, 0, 240, 0, 507, 0, 0,
	0, 287, 0, 0, 0, 343, 0, 380, 226, 296,
	294, 407, 250, 243, 239, 225, 271, 302, 341, 398,
	335, 551, 291, 0, 0, 389, 314, 0, 0, 0,
	0, 0, 542, 543, 0, 0, 0, 0, 0, 0,
	1503, 0, 277, 224, 194, 326, 390, 253, 69, 0,
	0, 176, 177, 178, 529, 528, 531, 532, 533, 534,
	0, 0, 216, 530, 222, 535, 536, 537, 1504, 236,
	275, 242, 235, 405, 0, 0, 0, 505, 522, 0,
	550, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 520, 0, 0, 0, 0, 565, 0, 521, 0,
	0, 514, 515, 517, 516, 518, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 315, 564,
	0, 0, 434, 0, 0, 562, 0, 0, 0, 0,
	0, 286, 0, 283, 190, 204, 0, 0, 325, 364,
	370, 0, 0, 0, 227, 0, 368, 339, 421, 212,
	251, 361, 344, 366, 0, 0, 367, 292, 409, 356,
	419, 435, 436, 234, 319, 427, 402, 432, 444, 205,
	231, 333, 395, 424, 386, 312, 406, 282, 385, 259,
	193, 290, 197, 397, 417, 217, 378, 0, 0, 0,
	199, 415, 394, 309, 279, 280, 198, 0, 360, 238,
	257, 229, 328, 412, 413, 228, 446, 207, 431, 201,
	208, 430, 321, 408, 416, 310, 301, 200, 414, 308,
	300, 285, 248, 267, 354, 295, 355, 268, 317, 316,
	318, 0, 195, 0, 391, 425, 447, 214, 0, 0,
	404, 440, 443, 0, 357, 215, 258, 247, 353, 256,
	288, 439, 441, 442, 213, 351, 264, 332, 420, 320,
	209, 270, 387, 284, 293, 0, 0, 338, 369, 218,
	423, 388, 552, 563, 558, 559, 556, 557, 0, 555,
	554, 553, 566, 544, 545, 546, 547, 549, 0, 560,
	561, 548, 189, 202, 289, 0, 358, 254, 445, 429,
	426, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 410, 411, 422,
	433, 437, 263, 418, 438, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 428, 393, 206, 365, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 342, 345,
	260, 241, 221, 362, 219, 379, 399, 400, 401, 403,
	311, 237, 329, 0, 0, 0, 0, 508, 0, 0,
	0, 240, 0, 507, 0, 0, 0, 287, 0, 0,
	0, 343, 0, 380, 226, 296, 294, 407, 250, 243,
	239, 225, 271, 302, 341, 398, 335, 551, 291, 0,
	0, 389, 314, 0, 0, 0, 0, 0, 542, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 224,
	194, 326, 390, 253, 69, 0, 583, 176, 177, 178,
	529, 528, 531, 532, 533, 534, 0, 0, 216, 530,
	222, 535, 536, 537, 0, 236, 275, 242, 235, 405,
	0, 0, 0, 505, 522, 0, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 519, 520, 0, 0,
	0, 0, 565, 0, 521, 0, 0, 514, 515, 517,
	516, 518, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 315, 564, 0, 0, 434, 0,
	0, 562, 0, 0, 0, 0, 0, 286, 0, 283,
	190, 204, 0, 0, 325, 364, 370, 0, 0, 0,
	227, 0, 368, 339, 421, 212, 251, 361, 344, 366,
	0, 0, 367, 292, 409, 356, 419, 435, 436, 234,
	319, 427, 402, 432, 444, 205, 231, 333, 395, 424,
	386, 312, 406, 282, 385, 259, 193, 290, 197, 397,
	417, 217, 378, 0, 0, 0, 199, 415, 394, 309,
	279, 280, 198, 0, 360, 238, 257, 229, 328, 412,
	413, 228, 446, 207, 431, 201, 208, 430, 321, 408,
	416, 310, 301, 200, 414, 308, 300, 285, 248, 267,
	354, 295, 355, 268, 317, 316, 318, 0, 195, 0,
	391, 425, 447, 214, 0, 0, 404, 440, 443, 0,
	357, 215, 258, 247, 353, 256, 288, 439, 441, 442,
	213, 351, 264, 332, 420, 320, 209, 270, 387, 284,
	293, 0, 0, 338, 369, 218, 423, 388, 552, 563,
	558, 559, 556, 557, 0, 555, 554, 553, 566, 544,
	545, 546, 547, 549, 0, 560, 561, 548, 189, 202,
	289, 0, 358, 254, 445, 429, 426, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 376, 377, 381, 382, 383,
	384, 392, 396, 410, 411, 422, 433, 437, 263, 418,
	438, 0, 297, 0, 0, 299, 249, 265, 274, 0,
	428, 393, 206, 365, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 342, 345, 260, 241, 221, 362,
	219, 379, 399, 400, 401, 403, 311, 237, 329, 0,
	0, 0, 0, 508, 0, 0, 0, 240, 0, 507,
	0, 0, 0, 287, 0, 0, 0, 343, 0, 380,
	226, 296, 294, 407, 250, 243, 239, 225, 271, 302,
	341, 398, 335, 551, 291, 0, 0, 389, 314, 0,
	0, 0, 0, 0, 542, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 224, 194, 326, 390, 253,
	69, 0, 0, 176, 177, 178, 529, 528, 531, 532,
	533, 534, 0, 0, 216, 530, 222, 535, 536, 537,
	0, 236, 275, 242, 235, 405, 0, 0, 0, 505,
	522, 0, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 595, 0, 0, 0, 565, 0,
	521, 0, 0, 514, 515, 517, 516, 518, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	315, 564, 0, 0, 434, 0, 0, 562, 0, 0,
	0, 0, 0, 286, 0, 283, 190, 204, 0, 0,
	325, 364, 370, 0, 0, 0, 227, 0, 368, 339,
	421, 212, 251, 361, 344, 366, 0, 0, 367, 292,
	409, 356, 419, 435, 436, 234, 319, 427, 402, 432,
	444, 205, 231, 333, 395, 424, 386, 312, 406, 282,
	385, 259, 193, 290, 197, 397, 417, 217, 378, 0,
	0, 0, 199, 415, 394, 309, 279, 280, 198, 0,
	360, 238, 257, 229, 328, 412, 413, 228, 446, 207,
	431, 201, 208, 430, 321, 408, 416, 310, 301, 200,
	414, 308, 300, 285, 248, 267, 354, 295, 355, 268,
	317, 316, 318, 0, 195, 0, 391, 425, 447, 214,
	0, 0, 404, 440, 443, 0, 357, 215, 258, 247,
	353, 256, 288, 439, 441, 442, 213, 351, 264, 332,
	420, 320, 209, 270, 387, 284, 293, 0, 0, 338,
	369, 218, 423, 388, 552, 563, 558, 559, 556, 557,
	0, 555, 554, 553, 566, 544, 545, 546, 547, 549,
	0, 560, 561, 548, 189, 202, 289, 0, 358, 254,
	445, 429, 426, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 192,
	203, 211, 220, 232, 245, 252, 262, 266, 269, 272,
	273, 276, 281, 298, 303, 304, 305, 306, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 410,
	411, 422, 433, 437, 263, 418, 438, 0, 297, 0,
	0, 299, 249, 265, 274, 0, 428, 393, 206, 365,
	255, 196, 223, 210, 230, 244, 246, 278, 307, 313,
	342, 345, 260, 241, 221, 362, 219, 379, 399, 400,
	401, 403, 311, 237, 329, 0, 0, 0, 0, 508,
	0, 0, 0, 240, 0, 507, 0, 0, 0, 287,
	0, 0, 0, 343, 0, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 551,
	291, 0, 0, 389, 314, 0, 0, 0, 0, 0,
	542, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 224, 194, 326, 390, 253, 69, 0, 0, 176,
	177, 178, 529, 1409, 531, 532, 533, 534, 0, 0,
	216, 530, 222, 535, 536, 537, 0, 236, 275, 242,
	235, 405, 0, 0, 0, 505, 522, 0, 550, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 519, 520,
	595, 0, 0, 0, 565, 0, 521, 0, 0, 514,
	515, 517, 516, 518, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 315, 564, 0, 0,
	434, 0, 0, 562, 0, 0, 0, 0, 0, 286,
	0, 283, 190, 204, 0, 0, 325, 364, 370, 0,
	0, 0, 227, 0, 368, 339, 421, 212, 251, 361,
	344, 366, 0, 0, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 0, 0, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 0, 0, 338, 369, 218, 423, 388,
	552, 563, 558, 559, 556, 557, 0, 555, 554, 553,
	566, 544, 545, 546, 547, 549, 0, 560, 561, 548,
	189, 202, 289, 0, 358, 254, 445, 429, 426, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	263, 418, 438, 0, 297, 0, 0, 299, 249, 265,
	274, 0, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	329, 0, 0, 0, 0, 508, 0, 0, 0, 240,
	0, 507, 0, 0, 0, 287, 0, 0, 0, 343,
	0, 380, 226, 296, 294, 407, 250, 243, 239, 225,
	271, 302, 341, 398, 335, 551, 291, 0, 0, 389,
	314, 0, 0, 0, 0, 0, 542, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 224, 194, 326,
	390, 253, 69, 0, 0, 176, 177, 178, 529, 1406,
	531, 532, 533, 534, 0, 0, 216, 530, 222, 535,
	536, 537, 0, 236, 275, 242, 235, 405, 0, 0,
	0, 505, 522, 0, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 519, 520, 595, 0, 0, 0,
	565, 0, 521, 0, 0, 514, 515, 517, 516, 518,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 315, 564, 0, 0, 434, 0, 0, 562,
	0, 0, 0, 0, 0, 286, 0, 283, 190, 204,
	0, 0, 325, 364, 370, 0, 0, 0, 227, 0,
	368, 339, 421, 212, 251, 361, 344, 366, 0, 0,
	367, 292, 409, 356, 419, 435, 436, 234, 319, 427,
	402, 432, 444, 205, 231, 333, 395, 424, 386, 312,
	406, 282, 385, 259, 193, 290, 197, 397, 417, 217,
	378, 0, 0, 0, 199, 415, 394, 309, 279, 280,
	198, 0, 360, 238, 257, 229, 328, 412, 413, 228,
	446, 207, 431, 201, 208, 430, 321, 408, 416, 310,
	301, 200, 414, 308, 300, 285, 248, 267, 354, 295,
	355, 268, 317, 316, 318, 0, 195, 0, 391, 425,
	447, 214, 0, 0, 404, 440, 443, 0, 357, 215,
	258, 247, 353, 256, 288, 439, 441, 442, 213, 351,
	264, 332, 420, 320, 209, 270, 387, 284, 293, 0,
	0, 338, 369, 218, 423, 388, 552, 563, 558, 559,
	556, 557, 0, 555, 554, 553, 566, 544, 545, 546,
	547, 549, 0, 560, 561, 548, 189, 202, 289, 0,
	358, 254, 445, 429, 426, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 410, 411, 422, 433, 437, 263, 418, 438, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 428, 393,
	206, 365, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 342, 345, 260, 241, 221, 362, 219, 379,
	399, 400, 401, 403, 311, 237, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 508, 0, 0, 0, 240, 0,
	507, 0, 0, 0, 287, 0, 0, 0, 343, 0,
	380, 226, 296, 294, 407, 250, 243, 239, 225, 271,
	302, 341, 398, 335, 551, 291, 0, 0, 389, 314,
	0, 0, 0, 0, 0, 542, 543, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 390,
	253, 69, 0, 0, 176, 177, 178, 529, 528, 531,
	532, 533, 534, 0, 0, 216, 530, 222, 535, 536,
	537, 0, 236, 275, 242, 235, 405, 0, 0, 0,
	505, 522, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 519, 520, 0, 0, 0, 0, 565,
	0, 521, 0, 0, 514, 515, 517, 516, 518, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 564, 0, 0, 434, 0, 0, 562, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 364, 370, 0, 0, 0, 227, 0, 368,
	339, 421, 212, 251, 361, 344, 366, 0, 0, 367,
	292, 409, 356, 419, 435, 436, 234, 319, 427, 402,
	432, 444, 205, 231, 333, 395, 424, 386, 312, 406,
	282, 385, 259, 193, 290, 197, 397, 417, 217, 378,
	0, 0, 0, 199, 415, 394, 309, 279, 280, 198,
	0, 360, 238, 257, 229, 328, 412, 413, 228, 446,
	207, 431, 201, 208, 430, 321, 408, 416, 310, 301,
	200, 414, 308, 300, 285, 248, 267, 354, 295, 355,
	268, 317, 316, 318, 0, 195, 0, 391, 425, 447,
	214, 0, 0, 404, 440, 443, 0, 357, 215, 258,
	247, 353, 256, 288, 439, 441, 442, 213, 351, 264,
	332, 420, 320, 209, 270, 387, 284, 293, 0, 0,
	338, 369, 218, 423, 388, 552, 563, 558, 559, 556,
	557, 0, 555, 554, 553, 566, 544, 545, 546, 547,
	549, 0, 560, 561, 548, 189, 202, 289, 0, 358,
	254, 445, 429, 426, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 376, 377, 381, 382, 383, 384, 392, 396,
	410, 411, 422, 433, 437, 263, 418, 438, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 428, 393, 206,
	365, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 342, 345, 260, 241, 221, 362, 219, 379, 399,
	400, 401, 403, 311, 237, 329, 0, 0, 0, 0,
	508, 0, 0, 0, 240, 0, 507, 0, 0, 0,
	287, 0, 0, 0, 343, 0, 380, 226, 296, 294,
	407, 250, 243, 239, 225, 271, 302, 341, 398, 335,
	551, 291, 0, 0, 389, 314, 0, 0, 0, 0,
	0, 542, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 390, 253, 69, 0, 0,
	176, 177, 178, 529, 528, 531, 532, 533, 534, 0,
	0, 216, 530, 222, 535, 536, 537, 0, 236, 275,
	242, 235, 405, 0, 0, 0, 505, 522, 0, 550,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	520, 0, 0, 0, 0, 565, 0, 521, 0, 0,
	514, 515, 517, 516, 518, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 564, 0,
	0, 434, 0, 0, 562, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 364, 370,
	0, 0, 0, 227, 0, 368, 339, 421, 212, 251,
	361, 344, 366, 0, 0, 367, 292, 409, 356, 419,
	435, 436, 234, 319, 427, 402, 432, 444, 205, 231,
	333, 395, 424, 386, 312, 406, 282, 385, 259, 193,
	290, 197, 397, 417, 217, 378, 0, 0, 0, 199,
	415, 394, 309, 279, 280, 198, 0, 360, 238, 257,
	229, 328, 412, 413, 228, 446, 207, 431, 201, 208,
	430, 321, 408, 416, 310, 301, 200, 414, 308, 300,
	285, 248, 267, 354, 295, 355, 268, 317, 316, 318,
	0, 195, 0, 391, 425, 447, 214, 0, 0, 404,
	440, 443, 0, 357, 215, 258, 247, 353, 256, 288,
	439, 441, 442, 213, 351, 264, 332, 420, 320, 209,
	270, 387, 284, 293, 0, 0, 338, 369, 218, 423,
	388, 552, 563, 558, 559, 556, 557, 0, 555, 554,
	553, 566, 544, 545, 546, 547, 549, 0, 560, 561,
	548, 189, 202, 289, 0, 358, 254, 445, 429, 426,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 410, 411, 422, 433,
	437, 263, 418, 438, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 428, 393, 206, 365, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 342, 345, 260,
	241, 221, 362, 219, 379, 399, 400, 401, 403, 311,
	237, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	343, 0, 380, 226, 296, 294, 407, 250, 243, 239,
	225, 271, 302, 341, 398, 335, 551, 291, 0, 0,
	389, 314, 0, 0, 0, 0, 0, 542, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 390, 253, 69, 0, 0, 176, 177, 178, 529,
	528, 531, 532, 533, 534, 0, 0, 216, 530, 222,
	535, 536, 537, 0, 236, 275, 242, 235, 405, 0,
	0, 0, 0, 522, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 520, 0, 0, 0,
	0, 565, 0, 521, 0, 0, 514, 515, 517, 516,
	518, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 564, 0, 0, 434, 0, 0,
	562, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 364, 370, 0, 0, 0, 227,
	0, 368, 339, 421, 212, 251, 361, 344, 366, 2166,
	0, 367, 292, 409, 356, 419, 435, 436, 234, 319,
	427, 402, 432, 444, 205, 231, 333, 395, 424, 386,
	312, 406, 282, 385, 259, 193, 290, 197, 397, 417,
	217, 378, 0, 0, 0, 199, 415, 394, 309, 279,
	280, 198, 0, 360, 238, 257, 229, 328, 412, 413,
	228, 446, 207, 431, 201, 208, 430, 321, 408, 416,
	310, 301, 200, 414, 308, 300, 285, 248, 267, 354,
	295, 355, 268, 317, 316, 318, 0, 195, 0, 391,
	425, 447, 214, 0, 0, 404, 440, 443, 0, 357,
	215, 258, 247, 353, 256, 288, 439, 441, 442, 213,
	351, 264, 332, 420, 320, 209, 270, 387, 284, 293,
	0, 0, 338, 369, 218, 423, 388, 552, 563, 558,
	559, 556, 557, 0, 555, 554, 553, 566, 544, 545,
	546, 547, 549, 0, 560, 561, 548, 189, 202, 289,
	0, 358, 254, 445, 429, 426, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 410, 411, 422, 433, 437, 263, 418, 438,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 428,
	393, 206, 365, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 342, 345, 260, 241, 221, 362, 219,
	379, 399, 400, 401, 403, 311, 237, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 343, 0, 380, 226,
	296, 294, 407, 250, 243, 239, 225, 271, 302, 341,
	398, 335, 551, 291, 0, 0, 389, 314, 0, 0,
	0, 0, 0, 542, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 390, 253, 69,
	0, 583, 176, 177, 178, 529, 528, 531, 532, 533,
	534, 0, 0, 216, 530, 222, 535, 536, 537, 0,
	236, 275, 242, 235, 405, 0, 0, 0, 0, 522,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 519, 520, 0, 0, 0, 0, 565, 0, 521,
	0, 0, 514, 515, 517, 516, 518, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	564, 0, 0, 434, 0, 0, 562, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	364, 370, 0, 0, 0, 227, 0, 368, 339, 421,
	212, 251, 361, 344, 366, 0, 0, 367, 292, 409,
	356, 419, 435, 436, 234, 319, 427, 402, 432, 444,
	205, 231, 333, 395, 424, 386, 312, 406, 282, 385,
	259, 193, 290, 197, 397, 417, 217, 378, 0, 0,
	0, 199, 415, 394, 309, 279, 280, 198, 0, 360,
	238, 257, 229, 328, 412, 413, 228, 446, 207, 431,
	201, 208, 430, 321, 408, 416, 310, 301, 200, 414,
	308, 300, 285, 248, 267, 354, 295, 355, 268, 317,
	316, 318, 0, 195, 0, 391, 425, 447, 214, 0,
	0, 404, 440, 443, 0, 357, 215, 258, 247, 353,
	256, 288, 439, 441, 442, 213, 351, 264, 332, 420,
	320, 209, 270, 387, 284, 293, 0, 0, 338, 369,
	218, 423, 388, 552, 563, 558, 559, 556, 557, 0,
	555, 554, 553, 566, 544, 545, 546, 547, 549, 0,
	560, 561, 548, 189, 202, 289, 0, 358, 254, 445,
	429, 426, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 410, 411,
	422, 433, 437, 263, 418, 438, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 428, 393, 206, 365, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 342,
	345, 260, 241, 221, 362, 219, 379, 399, 400, 401,
	403, 311, 237, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 343, 0, 380, 226, 296, 294, 407, 250,
	243, 239, 225, 271, 302, 341, 398, 335, 551, 291,
	0, 0, 389, 314, 0, 0, 0, 0, 0, 542,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 390, 253, 69, 0, 0, 176, 177,
	178, 529, 528, 531, 532, 533, 534, 0, 0, 216,
	530, 222, 535, 536, 537, 0, 236, 275, 242, 235,
	405, 0, 0, 0, 0, 522, 0, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 519, 520, 0,
	0, 0, 0, 565, 0, 521, 0, 0, 514, 515,
	517, 516, 518, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 564, 0, 0, 434,
	0, 0, 562, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 364, 370, 0, 0,
	0, 227, 0, 368, 339, 421, 212, 251, 361, 344,
	366, 0, 0, 367, 292, 409, 356, 419, 435, 436,
	234, 319, 427, 402, 432, 444, 205, 231, 333, 395,
	424, 386, 312, 406, 282, 385, 259, 193, 290, 197,
	397, 417, 217, 378, 0, 0, 0, 199, 415, 394,
	309, 279, 280, 198, 0, 360, 238, 257, 229, 328,
	412, 413, 228, 446, 207, 431, 201, 208, 430, 321,
	408, 416, 310, 301, 200, 414, 308, 300, 285, 248,
	267, 354, 295, 355, 268, 317, 316, 318, 0, 195,
	0, 391, 425, 447, 214, 0, 0, 404, 440, 443,
	0, 357, 215, 258, 247, 353, 256, 288, 439, 441,
	442, 213, 351, 264, 332, 420, 320, 209, 270, 387,
	284, 293, 0, 0, 338, 369, 218, 423, 388, 552,
	563, 558, 559, 556, 557, 0, 555, 554, 553, 566,
	544, 545, 546, 547, 549, 0, 560, 561, 548, 189,
	202, 289, 0, 358, 254, 445, 429, 426, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 410, 411, 422, 433, 437, 263,
	418, 438, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 428, 393, 206, 365, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 342, 345, 260, 241, 221,
	362, 219, 379, 399, 400, 401, 403, 311, 237, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 343, 0,
	380, 226, 296, 294, 407, 250, 243, 239, 225, 271,
	302, 341, 398, 335, 0, 291, 0, 0, 389, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 390,
	253, 0, 0, 0, 176, 177, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 966,
	965, 975, 976, 968, 969, 970, 971, 972, 973, 974,
	967, 0, 0, 977, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 364, 370, 0, 0, 0, 227, 0, 368,
	339, 421, 212, 251, 361, 344, 366, 0, 0, 367,
	292, 409, 356, 419, 435, 436, 234, 319, 427, 402,
	432, 444, 205, 231, 333, 395, 424, 386, 312, 406,
	282, 385, 259, 193, 290, 197, 397, 417, 217, 378,
	0, 0, 0, 199, 415, 394, 309, 279, 280, 198,
	0, 360, 238, 257, 229, 328, 412, 413, 228, 446,
	207, 431, 201, 208, 430, 321, 408, 416, 310, 301,
	200, 414, 308, 300, 285, 248, 267, 354, 295, 355,
	268, 317, 316, 318, 0, 195, 0, 391, 425, 447,
	214, 0, 0, 404, 440, 443, 0, 357, 215, 258,
	247, 353, 256, 288, 439, 441, 442, 213, 351, 264,
	332, 420, 320, 209, 270, 387, 284, 293, 0, 0,
	338, 369, 218, 423, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 202, 289, 0, 358,
	254, 445, 429, 426, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 376, 377, 381, 382, 383, 384, 392, 396,
	410, 411, 422, 433, 437, 263, 418, 438, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 428, 393, 206,
	365, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 342, 345, 260, 241, 221, 362, 219, 379, 399,
	400, 401, 403, 311, 237, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 796, 0, 0, 0, 0,
	287, 0, 0, 0, 343, 0, 380, 226, 296, 294,
	407, 250, 243, 239, 225, 271, 302, 341, 398, 335,
	0, 291, 0, 0, 389, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 390, 253, 0, 0, 0,
	176, 177, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 222, 0, 0, 0, 0, 236, 275,
	242, 235, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 0, 0,
	795, 434, 0, 0, 0, 0, 0, 0, 792, 793,
	286, 760, 283, 190, 204, 786, 790, 325, 364, 370,
	0, 0, 0, 227, 0, 368, 339, 421, 212, 251,
	361, 344, 366, 0, 0, 367, 292, 409, 356, 419,
	435, 436, 234, 319, 427, 402, 432, 444, 205, 231,
	333, 395, 424, 386, 312, 406, 282, 385, 259, 193,
	290, 197, 397, 417, 217, 378, 0, 0, 0, 199,
	415, 394, 309, 279, 280, 198, 0, 360, 238, 257,
	229, 328, 412, 413, 228, 446, 207, 431, 201, 208,
	430, 321, 408, 416, 310, 301, 200, 414, 308, 300,
	285, 248, 267, 354, 295, 355, 268, 317, 316, 318,
	0, 195, 0, 391, 425, 447, 214, 0, 0, 404,
	440, 443, 0, 357, 215, 258, 247, 353, 256, 288,
	439, 441, 442, 213, 351, 264, 332, 420, 320, 209,
	270, 387, 284, 293, 0, 0, 338, 369, 218, 423,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 358, 254, 445, 429, 426,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 410, 411, 422, 433,
	437, 263, 418, 438, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 428, 393, 206, 365, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 342, 345, 260,
	241, 221, 362, 219, 379, 399, 400, 401, 403, 311,
	237, 329, 0, 0, 0, 1067, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	343, 0, 380, 226, 296, 294, 407, 250, 243, 239,
	225, 271, 302, 341, 398, 335, 0, 291, 0, 0,
	389, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 390, 253, 0, 0, 0, 176, 177, 178, 0,
	1069, 0, 0, 0, 0, 0, 0, 216, 0, 222,
	0, 0, 0, 0, 236, 275, 242, 235, 405, 955,
	956, 954, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 364, 370, 0, 0, 0, 227,
	0, 368, 339, 421, 212, 251, 361, 344, 366, 0,
	0, 367, 292, 409, 356, 419, 435, 436, 234, 319,
	427, 402, 432, 444, 205, 231, 333, 395, 424, 386,
	312, 406, 282, 385, 259, 193, 290, 197, 397, 417,
	217, 378, 0, 0, 0, 199, 415, 394, 309, 279,
	280, 198, 0, 360, 238, 257, 229, 328, 412, 413,
	228, 446, 207, 431, 201, 208, 430, 321, 408, 416,
	310, 301, 200, 414, 308, 300, 285, 248, 267, 354,
	295, 355, 268, 317, 316, 318, 0, 195, 0, 391,
	425, 447, 214, 0, 0, 404, 440, 443, 0, 357,
	215, 258, 247, 353, 256, 288, 439, 441, 442, 213,
	351, 264, 332, 420, 320, 209, 270, 387, 284, 293,
	0, 0, 338, 369, 218, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 358, 254, 445, 429, 426, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 410, 411, 422, 433, 437, 263, 418, 438,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 428,
	393, 206, 365, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 342, 345, 260, 241, 221, 362, 219,
	379, 399, 400, 401, 403, 311, 237, 34, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 343,
	0, 380, 226, 296, 294, 407, 250, 243, 239, 225,
	271, 302, 341, 398, 335, 0, 291, 0, 0, 389,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 224, 194, 326,
	390, 253, 69, 0, 583, 176, 177, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 222, 0,
	0, 0, 0, 236, 275, 242, 235, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 315, 0, 0, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 283, 190, 204,
	0, 0, 325, 364, 370, 0, 0, 0, 227, 0,
	368, 339, 421, 212, 251, 361, 344, 366, 0, 0,
	367, 292, 409, 356, 419, 435, 436, 234, 319, 427,
	402, 432, 444, 205, 231, 333, 395, 424, 386, 312,
	406, 282, 385, 259, 193, 290, 197, 397, 417, 217,
	378, 0, 0, 0, 199, 415, 394, 309, 279, 280,
	198, 0, 360, 238, 257, 229, 328, 412, 413, 228,
	446, 207, 431, 201, 208, 430, 321, 408, 416, 310,
	301, 200, 414, 308, 300, 285, 248, 267, 354, 295,
	355, 268, 317, 316, 318, 0, 195, 0, 391, 425,
	447, 214, 0, 0, 404, 440, 443, 0, 357, 215,
	258, 247, 353, 256, 288, 439, 441, 442, 213, 351,
	264, 332, 420, 320, 209, 270, 387, 284, 293, 0,
	0, 338, 369, 218, 423, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 202, 289, 0,
	358, 254, 445, 429, 426, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 410, 411, 422, 433, 437, 263, 418, 438, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 428, 393,
	206, 365, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 342, 345, 260, 241, 221, 362, 219, 379,
	399, 400, 401, 403, 311, 237, 329, 0, 0, 0,
	1436, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 343, 0, 380, 226, 296,
	294, 407, 250, 243, 239, 225, 271, 302, 341, 398,
	335, 0, 291, 0, 0, 389, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 224, 194, 326, 390, 253, 0, 0,
	0, 176, 177, 178, 0, 1438, 0, 0, 0, 0,
	0, 0, 216, 0, 222, 0, 0, 0, 0, 236,
	275, 242, 235, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 315, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 190, 204, 0, 0, 325, 364,
	370, 0, 0, 0, 227, 0, 368, 339, 421, 212,
	251, 361, 344, 366, 0, 1434, 367, 292, 409, 356,
	419, 435, 436, 234, 319, 427, 402, 432, 444, 205,
	231, 333, 395, 424, 386, 312, 406, 282, 385, 259,
	193, 290, 197, 397, 417, 217, 378, 0, 0, 0,
	199, 415, 394, 309, 279, 280, 198, 0, 360, 238,
	257, 229, 328, 412, 413, 228, 446, 207, 431, 201,
	208, 430, 321, 408, 416, 310, 301, 200, 414, 308,
	300, 285, 248, 267, 354, 295, 355, 268, 317, 316,
	318, 0, 195, 0, 391, 425, 447, 214, 0, 0,
	404, 440, 443, 0, 357, 215, 258, 247, 353, 256,
	288, 439, 441, 442, 213, 351, 264, 332, 420, 320,
	209, 270, 387, 284, 293, 0, 0, 338, 369, 218,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 202, 289, 0, 358, 254, 445, 429,
	426, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 410, 411, 422,
	433, 437, 263, 418, 438, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 428, 393, 206, 365, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 342, 345,
	260, 241, 221, 362, 219, 379, 399, 400, 401, 403,
	311, 237, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 343, 0, 380, 226, 296, 294, 407, 250, 243,
	239, 225, 271, 302, 341, 398, 335, 0, 291, 0,
	0, 389, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 224,
	194, 326, 390, 253, 0, 0, 0, 176, 177, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	222, 0, 0, 0, 0, 236, 275, 242, 235, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 315, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 760, 283,
	190, 204, 758, 0, 325, 364, 370, 0, 0, 0,
	227, 0, 368, 339, 421, 212, 251, 361, 344, 366,
	0, 0, 367, 292, 409, 356, 419, 435, 436, 234,
	319, 427, 402, 432, 444, 205, 231, 333, 395, 424,
	386, 312, 406, 282, 385, 259, 193, 290, 197, 397,
	417, 217, 378, 0, 0, 0, 199, 415, 394, 309,
	279, 280, 198, 0, 360, 238, 257, 229, 328, 412,
	413, 228, 446, 207, 431, 201, 208, 430, 321, 408,
	416, 310, 301, 200, 414, 308, 300, 285, 248, 267,
	354, 295, 355, 268, 317, 316, 318, 0, 195, 0,
	391, 425, 447, 214, 0, 0, 404, 440, 443, 0,
	357, 215, 258, 247, 353, 256, 288, 439, 441, 442,
	213, 351, 264, 332, 420, 320, 209, 270, 387, 284,
	293, 0, 0, 338, 369, 218, 423, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 202,
	289, 0, 358, 254, 445, 429, 426, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 376, 377, 381, 382, 383,
	384, 392, 396, 410, 411, 422, 433, 437, 263, 418,
	438, 0, 297, 0, 0, 299, 249, 265, 274, 0,
	428, 393, 206, 365, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 342, 345, 260, 241, 221, 362,
	219, 379, 399, 400, 401, 403, 311, 237, 329, 0,
	0, 0, 1436, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 343, 0, 380,
	226, 296, 294, 407, 250, 243, 239, 225, 271, 302,
	341, 398, 335, 0, 291, 0, 0, 389, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 224, 194, 326, 390, 253,
	0, 0, 0, 176, 177, 178, 0, 1438, 0, 0,
	0, 0, 0, 0, 216, 0, 222, 0, 0, 0,
	0, 236, 275, 242, 235, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	315, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 283, 190, 204, 0, 0,
	325, 364, 370, 0, 0, 0, 227, 0, 368, 339,
	421, 212, 251, 361, 344, 366, 0, 0, 367, 292,
	409, 356, 419, 435, 436, 234, 319, 427, 402, 432,
	444, 205, 231, 333, 395, 424, 386, 312, 406, 282,
	385, 259, 193, 290, 197, 397, 417, 217, 378, 0,
	0, 0, 199, 415, 394, 309, 279, 280, 198, 0,
	360, 238, 257, 229, 328, 412, 413, 228, 446, 207,
	431, 201, 208, 430, 321, 408, 416, 310, 301, 200,
	414, 308, 300, 285, 248, 267, 354, 295, 355, 268,
	317, 316, 318, 0, 195, 0, 391, 425, 447, 214,
	0, 0, 404, 440, 443, 0, 357, 215, 258, 247,
	353, 256, 288, 439, 441, 442, 213, 351, 264, 332,
	420, 320, 209, 270, 387, 284, 293, 0, 0, 338,
	369, 218, 423, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 202, 289, 0, 358, 254,
	445, 429, 426, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 192,
	203, 211, 220, 232, 245, 252, 262, 266, 269, 272,
	273, 276, 281, 298, 303, 304, 305, 306, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 410,
	411, 422, 433, 437, 263, 418, 438, 0, 297, 0,
	0, 299, 249, 265, 274, 0, 428, 393, 206, 365,
	255, 196, 223, 210, 230, 244, 246, 278, 307, 313,
	342, 345, 260, 241, 221, 362, 219, 379, 399, 400,
	401, 403, 311, 237, 34, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 343, 0, 380, 226,
	296, 294, 407, 250, 243, 239, 225, 271, 302, 341,
	398, 335, 0, 291, 0, 0, 389, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 390, 253, 69,
	0, 0, 176, 177, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	364, 370, 0, 0, 0, 227, 0, 368, 339, 421,
	212, 251, 361, 344, 366, 0, 0, 367, 292, 409,
	356, 419, 435, 436, 234, 319, 427, 402, 432, 444,
	205, 231, 333, 395, 424, 386, 312, 406, 282, 385,
	259, 193, 290, 197, 397, 417, 217, 378, 0, 0,
	0, 199, 415, 394, 309, 279, 280, 198, 0, 360,
	238, 257, 229, 328, 412, 413, 228, 446, 207, 431,
	201, 208, 430, 321, 408, 416, 310, 301, 200, 414,
	308, 300, 285, 248, 267, 354, 295, 355, 268, 317,
	316, 318, 0, 195, 0, 391, 425, 447, 214, 0,
	0, 404, 440, 443, 0, 357, 215, 258, 247, 353,
	256, 288, 439, 441, 442, 213, 351, 264, 332, 420,
	320, 209, 270, 387, 284, 293, 0, 0, 338, 369,
	218, 423, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 358, 254, 445,
	429, 426, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 410, 411,
	422, 433, 437, 263, 418, 438, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 428, 393, 206, 365, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 342,
	345, 260, 241, 221, 362, 219, 379, 399, 400, 401,
	403, 311, 237, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 343, 0, 380, 226, 296, 294, 407, 250,
	243, 239, 225, 271, 302, 341, 398, 335, 0, 291,
	0, 0, 389, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 390, 253, 0, 0, 0, 176, 177,
	178, 0, 0, 1456, 0, 0, 1457, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 364, 370, 0, 0,
	0, 227, 0, 368, 339, 421, 212, 251, 361, 344,
	366, 0, 0, 367, 292, 409, 356, 419, 435, 436,
	234, 319, 427, 402, 432, 444, 205, 231, 333, 395,
	424, 386, 312, 406, 282, 385, 259, 193, 290, 197,
	397, 417, 217, 378, 0, 0, 0, 199, 415, 394,
	309, 279, 280, 198, 0, 360, 238, 257, 229, 328,
	412, 413, 228, 446, 207, 431, 201, 208, 430, 321,
	408, 416, 310, 301, 200, 414, 308, 300, 285, 248,
	267, 354, 295, 355, 268, 317, 316, 318, 0, 195,
	0, 391, 425, 447, 214, 0, 0, 404, 440, 443,
	0, 357, 215, 258, 247, 353, 256, 288, 439, 441,
	442, 213, 351, 264, 332, 420, 320, 209, 270, 387,
	284, 293, 0, 0, 338, 369, 218, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	202, 289, 0, 358, 254, 445, 429, 426, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 410, 411, 422, 433, 437, 263,
	418, 438, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 428, 393, 206, 365, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 342, 345, 260, 241, 221,
	362, 219, 379, 399, 400, 401, 403, 311, 237, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	1100, 0, 0, 0, 287, 0, 0, 0, 343, 0,
	380, 226, 296, 294, 407, 250, 243, 239, 225, 271,
	302, 341, 398, 335, 0, 291, 0, 0, 389, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 390,
	253, 0, 0, 0, 176, 177, 178, 0, 1099, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 364, 370, 0, 0, 0, 227, 0, 368,
	339, 421, 212, 251, 361, 344, 366, 0, 0, 367,
	292, 409, 356, 419, 435, 436, 234, 319, 427, 402,
	432, 444, 205, 231, 333, 395, 424, 386, 312, 406,
	282, 385, 259, 193, 290, 197, 397, 417, 217, 378,
	0, 0, 0, 199, 415, 394, 309, 279, 280, 198,
	0, 360, 238, 257, 229, 328, 412, 413, 228, 446,
	207, 431, 201, 208, 430, 321, 408, 416, 310, 301,
	200, 414, 308, 300, 285, 248, 267, 354, 295, 355,
	268, 317, 316, 318, 0, 195, 0, 391, 425, 447,
	214, 0, 0, 404, 440, 443, 0, 357, 215, 258,
	247, 353, 256, 288, 439, 441, 442, 213, 351, 264,
	332, 420, 320, 209, 270, 387, 284, 293, 0, 0,
	338, 369, 218, 423, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 202, 289, 0, 358,
	254, 445, 429, 426, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 376, 377, 381, 382, 383, 384, 392, 396,
	410, 411, 422, 433, 437, 263, 418, 438, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 428, 393, 206,
	365, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 342, 345, 260, 241, 221, 362, 219, 379, 399,
	400, 401, 403, 311, 237, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 343, 0, 380, 226, 296, 294,
	407, 250, 243, 239, 225, 271, 302, 341, 398, 335,
	0, 291, 0, 0, 389, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 390, 253, 0, 0, 583,
	176, 177, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 222, 0, 0, 0, 0, 236, 275,
	242, 235, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 364, 370,
	0, 0, 0, 227, 0, 368, 339, 421, 212, 251,
	361, 344, 366, 0, 0, 367, 292, 409, 356, 419,
	435, 436, 234, 319, 427, 402, 432, 444, 205, 231,
	333, 395, 424, 386, 312, 406, 282, 385, 259, 193,
	290, 197, 397, 417, 217, 378, 0, 0, 0, 199,
	415, 394, 309, 279, 280, 198, 0, 360, 238, 257,
	229, 328, 412, 413, 228, 446, 207, 431, 201, 208,
	430, 321, 408, 416, 310, 301, 200, 414, 308, 300,
	285, 248, 267, 354, 295, 355, 268, 317, 316, 318,
	0, 195, 0, 391, 425, 447, 214, 0, 0, 404,
	440, 443, 0, 357, 215, 258, 247, 353, 256, 288,
	439, 441, 442, 213, 351, 264, 332, 420, 320, 209,
	270, 387, 284, 293, 0, 0, 338, 369, 218, 423,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 358, 254, 445, 429, 426,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 410, 411, 422, 433,
	437, 263, 418, 438, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 428, 393, 206, 365, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 342, 345, 260,
	241, 221, 362, 219, 379, 399, 400, 401, 403, 311,
	237, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	343, 0, 380, 226, 296, 294, 407, 250, 243, 239,
	225, 271, 302, 341, 398, 335, 0, 291, 0, 0,
	389, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 390, 253, 69, 0, 0, 176, 177, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 222,
	0, 0, 0, 0, 236, 275, 242, 235, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 364, 370, 0, 0, 0, 227,
	0, 368, 339, 421, 212, 251, 361, 344, 366, 0,
	0, 367, 292, 409, 356, 419, 435, 436, 234, 319,
	427, 402, 432, 444, 205, 231, 333, 395, 424, 386,
	312, 406, 282, 385, 259, 193, 290, 197, 397, 417,
	217, 378, 0, 0, 0, 199, 415, 394, 309, 279,
	280, 198, 0, 360, 238, 257, 229, 328, 412, 413,
	228, 446, 207, 431, 201, 208, 430, 321, 408, 416,
	310, 301, 200, 414, 308, 300, 285, 248, 267, 354,
	295, 355, 268, 317, 316, 318, 0, 195, 0, 391,
	425, 447, 214, 0, 0, 404, 440, 443, 0, 357,
	215, 258, 247, 353, 256, 288, 439, 441, 442, 213,
	351, 264, 332, 420, 320, 209, 270, 387, 284, 293,
	0, 0, 338, 369, 218, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 358, 254, 445, 429, 426, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 410, 411, 422, 433, 437, 263, 418, 438,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 428,
	393, 206, 365, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 342, 345, 260, 241, 221, 362, 219,
	379, 399, 400, 401, 403, 311, 237, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 343, 0, 380, 226,
	296, 294, 407, 250, 243, 239, 225, 271, 302, 341,
	398, 335, 0, 291, 0, 0, 389, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 390, 253, 0,
	0, 0, 176, 177, 178, 0, 1438, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	364, 370, 0, 0, 0, 227, 0, 368, 339, 421,
	212, 251, 361, 344, 366, 0, 0, 367, 292, 409,
	356, 419, 435, 436, 234, 319, 427, 402, 432, 444,
	205, 231, 333, 395, 424, 386, 312, 406, 282, 385,
	259, 193, 290, 197, 397, 417, 217, 378, 0, 0,
	0, 199, 415, 394, 309, 279, 280, 198, 0, 360,
	238, 257, 229, 328, 412, 413, 228, 446, 207, 431,
	201, 208, 430, 321, 408, 416, 310, 301, 200, 414,
	308, 300, 285, 248, 267, 354, 295, 355, 268, 317,
	316, 318, 0, 195, 0, 391, 425, 447, 214, 0,
	0, 404, 440, 443, 0, 357, 215, 258, 247, 353,
	256, 288, 439, 441, 442, 213, 351, 264, 332, 420,
	320, 209, 270, 387, 284, 293, 0, 0, 338, 369,
	218, 423, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 358, 254, 445,
	429, 426, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 410, 411,
	422, 433, 437, 263, 418, 438, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 428, 393, 206, 365, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 342,
	345, 260, 241, 221, 362, 219, 379, 399, 400, 401,
	403, 311, 237, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 343, 0, 380, 226, 296, 294, 407, 250,
	243, 239, 225, 271, 302, 341, 398, 335, 0, 291,
	0, 0, 389, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 390, 253, 0, 0, 0, 176, 177,
	178, 0, 1069, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 364, 370, 0, 0,
	0, 227, 0, 368, 339, 421, 212, 251, 361, 344,
	366, 0, 0, 367, 292, 409, 356, 419, 435, 436,
	234, 319, 427, 402, 432, 444, 205, 231, 333, 395,
	424, 386, 312, 406, 282, 385, 259, 193, 290, 197,
	397, 417, 217, 378, 0, 0, 0, 199, 415, 394,
	309, 279, 280, 198, 0, 360, 238, 257, 229, 328,
	412, 413, 228, 446, 207, 431, 201, 208, 430, 321,
	408, 416, 310, 301, 200, 414, 308, 300, 285, 248,
	267, 354, 295, 355, 268, 317, 316, 318, 0, 195,
	0, 391, 425, 447, 214, 0, 0, 404, 440, 443,
	0, 357, 215, 258, 247, 353, 256, 288, 439, 441,
	442, 213, 351, 264, 332, 420, 320, 209, 270, 387,
	284, 293, 0, 0, 338, 369, 218, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	202, 289, 0, 358, 254, 445, 429, 426, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 410, 411, 422, 433, 437, 263,
	418, 438, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 428, 393, 206, 365, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 342, 345, 260, 241, 221,
	362, 219, 379, 399, 400, 401, 403, 311, 237, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 343, 0,
	380, 226, 296, 294, 407, 250, 243, 239, 225, 271,
	302, 341, 398, 335, 0, 291, 0, 0, 389, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 390,
	253, 0, 0, 0, 176, 177, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 364, 370, 0, 0, 0, 227, 0, 368,
	339, 421, 212, 251, 361, 344, 366, 0, 0, 367,
	292, 409, 356, 419, 435, 436, 234, 319, 427, 402,
	432, 444, 205, 231, 333, 395, 424, 386, 312, 406,
	282, 385, 259, 193, 290, 197, 397, 417, 217, 378,
	0, 0, 0, 199, 415, 394, 309, 279, 280, 198,
	0, 360, 238, 257, 229, 328, 412, 413, 228, 446,
	207, 431, 201, 208, 430, 321, 408, 416, 310, 301,
	200, 414, 308, 300, 285, 248, 267, 354, 295, 355,
	268, 317, 316, 318, 0, 195, 0, 391, 425, 447,
	214, 0, 0, 404, 440, 443, 0, 357, 215, 258,
	247, 353, 256, 288, 439, 441, 442, 213, 351, 264,
	332, 420, 320, 209, 270, 387, 284, 293, 0, 0,
	338, 369, 218, 423, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 202, 289, 1341, 358,
	254, 445, 429, 426, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 376, 377, 381, 382, 383, 384, 392, 396,
	410, 411, 422, 433, 437, 263, 418, 438, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 428, 393, 206,
	365, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 342, 345, 260, 241, 221, 362, 219, 379, 399,
	400, 401, 403, 311, 237, 329, 0, 1224, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 343, 0, 380, 226, 296, 294,
	407, 250, 243, 239, 225, 271, 302, 341, 398, 335,
	0, 291, 0, 0, 389, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 390, 253, 0, 0, 0,
	176, 177, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 222, 0, 0, 0, 0, 236, 275,
	242, 235, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 364, 370,
	0, 0, 0, 227, 0, 368, 339, 421, 212, 251,
	361, 344, 366, 0, 0, 367, 292, 409, 356, 419,
	435, 436, 234, 319, 427, 402, 432, 444, 205, 231,
	333, 395, 424, 386, 312, 406, 282, 385, 259, 193,
	290, 197, 397, 417, 217, 378, 0, 0, 0, 199,
	415, 394, 309, 279, 280, 198, 0, 360, 238, 257,
	229, 328, 412, 413, 228, 446, 207, 431, 201, 208,
	430, 321, 408, 416, 310, 301, 200, 414, 308, 300,
	285, 248, 267, 354, 295, 355, 268, 317, 316, 318,
	0, 195, 0, 391, 425, 447, 214, 0, 0, 404,
	440, 443, 0, 357, 215, 258, 247, 353, 256, 288,
	439, 441, 442, 213, 351, 264, 332, 420, 320, 209,
	270, 387, 284, 293, 0, 0, 338, 369, 218, 423,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 358, 254, 445, 429, 426,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 410, 411, 422, 433,
	437, 263, 418, 438, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 428, 393, 206, 365, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 342, 345, 260,
	241, 221, 362, 219, 379, 399, 400, 401, 403, 311,
	237, 329, 0, 1222, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	343, 0, 380, 226, 296, 294, 407, 250, 243, 239,
	225, 271, 302, 341, 398, 335, 0, 291, 0, 0,
	389, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 390, 253, 0, 0, 0, 176, 177, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 222,
	0, 0, 0, 0, 236, 275, 242, 235, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 364, 370, 0, 0, 0, 227,
	0, 368, 339, 421, 212, 251, 361, 344, 366, 0,
	0, 367, 292, 409, 356, 419, 435, 436, 234, 319,
	427, 402, 432, 444, 205, 231, 333, 395, 424, 386,
	312, 406, 282, 385, 259, 193, 290, 197, 397, 417,
	217, 378, 0, 0, 0, 199, 415, 394, 309, 279,
	280, 198, 0, 360, 238, 257, 229, 328, 412, 413,
	228, 446, 207, 431, 201, 208, 430, 321, 408, 416,
	310, 301, 200, 414, 308, 300, 285, 248, 267, 354,
	295, 355, 268, 317, 316, 318, 0, 195, 0, 391,
	425, 447, 214, 0, 0, 404, 440, 443, 0, 357,
	215, 258, 247, 353, 256, 288, 439, 441, 442, 213,
	351, 264, 332, 420, 320, 209, 270, 387, 284, 293,
	0, 0, 338, 369, 218, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 358, 254, 445, 429, 426, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 410, 411, 422, 433, 437, 263, 418, 438,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 428,
	393, 206, 365, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 342, 345, 260, 241, 221, 362, 219,
	379, 399, 400, 401, 403, 311, 237, 329, 0, 1220,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 343, 0, 380, 226,
	296, 294, 407, 250, 243, 239, 225, 271, 302, 341,
	398, 335, 0, 291, 0, 0, 389, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 390, 253, 0,
	0, 0, 176, 177, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	364, 370, 0, 0, 0, 227, 0, 368, 339, 421,
	212, 251, 361, 344, 366, 0, 0, 367, 292, 409,
	356, 419, 435, 436, 234, 319, 427, 402, 432, 444,
	205, 231, 333, 395, 424, 386, 312, 406, 282, 385,
	259, 193, 290, 197, 397, 417, 217, 378, 0, 0,
	0, 199, 415, 394, 309, 279, 280, 198, 0, 360,
	238, 257, 229, 328, 412, 413, 228, 446, 207, 431,
	201, 208, 430, 321, 408, 416, 310, 301, 200, 414,
	308, 300, 285, 248, 267, 354, 295, 355, 268, 317,
	316, 318, 0, 195, 0, 391, 425, 447, 214, 0,
	0, 404, 440, 443, 0, 357, 215, 258, 247, 353,
	256, 288, 439, 441, 442, 213, 351, 264, 332, 420,
	320, 209, 270, 387, 284, 293, 0, 0, 338, 369,
	218, 423, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 358, 254, 445,
	429, 426, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 410, 411,
	422, 433, 437, 263, 418, 438, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 428, 393, 206, 365, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 342,
	345, 260, 241, 221, 362, 219, 379, 399, 400, 401,
	403, 311, 237, 329, 0, 1218, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 343, 0, 380, 226, 296, 294, 407, 250,
	243, 239, 225, 271, 302, 341, 398, 335, 0, 291,
	0, 0, 389, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 390, 253, 0, 0, 0, 176, 177,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 364, 370, 0, 0,
	0, 227, 0, 368, 339, 421, 212, 251, 361, 344,
	366, 0, 0, 367, 292, 409, 356, 419, 435, 436,
	234, 319, 427, 402, 432, 444, 205, 231, 333, 395,
	424, 386, 312, 406, 282, 385, 259, 193, 290, 197,
	397, 417, 217, 378, 0, 0, 0, 199, 415, 394,
	309, 279, 280, 198, 0, 360, 238, 257, 229, 328,
	412, 413, 228, 446, 207, 431, 201, 208, 430, 321,
	408, 416, 310, 301, 200, 414, 308, 300, 285, 248,
	267, 354, 295, 355, 268, 317, 316, 318, 0, 195,
	0, 391, 425, 447, 214, 0, 0, 404, 440, 443,
	0, 357, 215, 258, 247, 353, 256, 288, 439, 441,
	442, 213, 351, 264, 332, 420, 320, 209, 270, 387,
	284, 293, 0, 0, 338, 369, 218, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	202, 289, 0, 358, 254, 445, 429, 426, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 410, 411, 422, 433, 437, 263,
	418, 438, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 428, 393, 206, 365, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 342, 345, 260, 241, 221,
	362, 219, 379, 399, 400, 401, 403, 311, 237, 329,
	0, 1216, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 343, 0,
	380, 226, 296, 294, 407, 250, 243, 239, 225, 271,
	302, 341, 398, 335, 0, 291, 0, 0, 389, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 224, 194, 326, 390,
	253, 0, 0, 0, 176, 177, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 222, 0, 0,
	0, 0, 236, 275, 242, 235, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 315, 0, 0, 0, 434, 0, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 190, 204, 0,
	0, 325, 364, 370, 0, 0, 0, 227, 0, 368,
	339, 421, 212, 251, 361, 344, 366, 0, 0, 367,
	292, 409, 356, 419, 435, 436, 234, 319, 427, 402,
	432, 444, 205, 231, 333, 395, 424, 386, 312, 406,
	282, 385, 259, 193, 290, 197, 397, 417, 217, 378,
	0, 0, 0, 199, 415, 394, 309, 279, 280, 198,
	0, 360, 238, 257, 229, 328, 412, 413, 228, 446,
	207, 431, 201, 208, 430, 321, 408, 416, 310, 301,
	200, 414, 308, 300, 285, 248, 267, 354, 295, 355,
	268, 317, 316, 318, 0, 195, 0, 391, 425, 447,
	214, 0, 0, 404, 440, 443, 0, 357, 215, 258,
	247, 353, 256, 288, 439, 441, 442, 213, 351, 264,
	332, 420, 320, 209, 270, 387, 284, 293, 0, 0,
	338, 369, 218, 423, 388, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 202, 289, 0, 358,
	254, 445, 429, 426, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	192, 203, 211, 220, 232, 245, 252, 262, 266, 269,
	272, 273, 276, 281, 298, 303, 304, 305, 306, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 376, 377, 381, 382, 383, 384, 392, 396,
	410, 411, 422, 433, 437, 263, 418, 438, 0, 297,
	0, 0, 299, 249, 265, 274, 0, 428, 393, 206,
	365, 255, 196, 223, 210, 230, 244, 246, 278, 307,
	313, 342, 345, 260, 241, 221, 362, 219, 379, 399,
	400, 401, 403, 311, 237, 329, 0, 1212, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	287, 0, 0, 0, 343, 0, 380, 226, 296, 294,
	407, 250, 243, 239, 225, 271, 302, 341, 398, 335,
	0, 291, 0, 0, 389, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 224, 194, 326, 390, 253, 0, 0, 0,
	176, 177, 178, 0, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 222, 0, 0, 0, 0, 236, 275,
	242, 235, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 315, 0, 0,
	0, 434, 0, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 190, 204, 0, 0, 325, 364, 370,
	0, 0, 0, 227, 0, 368, 339, 421, 212, 251,
	361, 344, 366, 0, 0, 367, 292, 409, 356, 419,
	435, 436, 234, 319, 427, 402, 432, 444, 205, 231,
	333, 395, 424, 386, 312, 406, 282, 385, 259, 193,
	290, 197, 397, 417, 217, 378, 0, 0, 0, 199,
	415, 394, 309, 279, 280, 198, 0, 360, 238, 257,
	229, 328, 412, 413, 228, 446, 207, 431, 201, 208,
	430, 321, 408, 416, 310, 301, 200, 414, 308, 300,
	285, 248, 267, 354, 295, 355, 268, 317, 316, 318,
	0, 195, 0, 391, 425, 447, 214, 0, 0, 404,
	440, 443, 0, 357, 215, 258, 247, 353, 256, 288,
	439, 441, 442, 213, 351, 264, 332, 420, 320, 209,
	270, 387, 284, 293, 0, 0, 338, 369, 218, 423,
	388, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 202, 289, 0, 358, 254, 445, 429, 426,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 203, 211, 220,
	232, 245, 252, 262, 266, 269, 272, 273, 276, 281,
	298, 303, 304, 305, 306, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 376, 377,
	381, 382, 383, 384, 392, 396, 410, 411, 422, 433,
	437, 263, 418, 438, 0, 297, 0, 0, 299, 249,
	265, 274, 0, 428, 393, 206, 365, 255, 196, 223,
	210, 230, 244, 246, 278, 307, 313, 342, 345, 260,
	241, 221, 362, 219, 379, 399, 400, 401, 403, 311,
	237, 329, 0, 1210, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 287, 0, 0, 0,
	343, 0, 380, 226, 296, 294, 407, 250, 243, 239,
	225, 271, 302, 341, 398, 335, 0, 291, 0, 0,
	389, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 224, 194,
	326, 390, 253, 0, 0, 0, 176, 177, 178, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 222,
	0, 0, 0, 0, 236, 275, 242, 235, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 315, 0, 0, 0, 434, 0, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 190,
	204, 0, 0, 325, 364, 370, 0, 0, 0, 227,
	0, 368, 339, 421, 212, 251, 361, 344, 366, 0,
	0, 367, 292, 409, 356, 419, 435, 436, 234, 319,
	427, 402, 432, 444, 205, 231, 333, 395, 424, 386,
	312, 406, 282, 385, 259, 193, 290, 197, 397, 417,
	217, 378, 0, 0, 0, 199, 415, 394, 309, 279,
	280, 198, 0, 360, 238, 257, 229, 328, 412, 413,
	228, 446, 207, 431, 201, 208, 430, 321, 408, 416,
	310, 301, 200, 414, 308, 300, 285, 248, 267, 354,
	295, 355, 268, 317, 316, 318, 0, 195, 0, 391,
	425, 447, 214, 0, 0, 404, 440, 443, 0, 357,
	215, 258, 247, 353, 256, 288, 439, 441, 442, 213,
	351, 264, 332, 420, 320, 209, 270, 387, 284, 293,
	0, 0, 338, 369, 218, 423, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 202, 289,
	0, 358, 254, 445, 429, 426, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 192, 203, 211, 220, 232, 245, 252, 262,
	266, 269, 272, 273, 276, 281, 298, 303, 304, 305,
	306, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 376, 377, 381, 382, 383, 384,
	392, 396, 410, 411, 422, 433, 437, 263, 418, 438,
	0, 297, 0, 0, 299, 249, 265, 274, 0, 428,
	393, 206, 365, 255, 196, 223, 210, 230, 244, 246,
	278, 307, 313, 342, 345, 260, 241, 221, 362, 219,
	379, 399, 400, 401, 403, 311, 237, 329, 0, 1208,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 287, 0, 0, 0, 343, 0, 380, 226,
	296, 294, 407, 250, 243, 239, 225, 271, 302, 341,
	398, 335, 0, 291, 0, 0, 389, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 224, 194, 326, 390, 253, 0,
	0, 0, 176, 177, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 222, 0, 0, 0, 0,
	236, 275, 242, 235, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 315,
	0, 0, 0, 434, 0, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 190, 204, 0, 0, 325,
	364, 370, 0, 0, 0, 227, 0, 368, 339, 421,
	212, 251, 361, 344, 366, 0, 0, 367, 292, 409,
	356, 419, 435, 436, 234, 319, 427, 402, 432, 444,
	205, 231, 333, 395, 424, 386, 312, 406, 282, 385,
	259, 193, 290, 197, 397, 417, 217, 378, 0, 0,
	0, 199, 415, 394, 309, 279, 280, 198, 0, 360,
	238, 257, 229, 328, 412, 413, 228, 446, 207, 431,
	201, 208, 430, 321, 408, 416, 310, 301, 200, 414,
	308, 300, 285, 248, 267, 354, 295, 355, 268, 317,
	316, 318, 0, 195, 0, 391, 425, 447, 214, 0,
	0, 404, 440, 443, 0, 357, 215, 258, 247, 353,
	256, 288, 439, 441, 442, 213, 351, 264, 332, 420,
	320, 209, 270, 387, 284, 293, 0, 0, 338, 369,
	218, 423, 388, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 202, 289, 0, 358, 254, 445,
	429, 426, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 191, 192, 203,
	211, 220, 232, 245, 252, 262, 266, 269, 272, 273,
	276, 281, 298, 303, 304, 305, 306, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	376, 377, 381, 382, 383, 384, 392, 396, 410, 411,
	422, 433, 437, 263, 418, 438, 0, 297, 0, 0,
	299, 249, 265, 274, 0, 428, 393, 206, 365, 255,
	196, 223, 210, 230, 244, 246, 278, 307, 313, 342,
	345, 260, 241, 221, 362, 219, 379, 399, 400, 401,
	403, 311, 237, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 287, 0,
	0, 0, 343, 0, 380, 226, 296, 294, 407, 250,
	243, 239, 225, 271, 302, 341, 398, 335, 0, 291,
	0, 0, 389, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	224, 194, 326, 390, 253, 1183, 0, 0, 176, 177,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 222, 0, 0, 0, 0, 236, 275, 242, 235,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 315, 0, 0, 0, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 190, 204, 0, 0, 325, 364, 370, 0, 0,
	0, 227, 0, 368, 339, 421, 212, 251, 361, 344,
	366, 0, 0, 367, 292, 409, 356, 419, 435, 436,
	234, 319, 427, 402, 432, 444, 205, 231, 333, 395,
	424, 386, 312, 406, 282, 385, 259, 193, 290, 197,
	397, 417, 217, 378, 0, 0, 0, 199, 415, 394,
	309, 279, 280, 198, 0, 360, 238, 257, 229, 328,
	412, 413, 228, 446, 207, 431, 201, 208, 430, 321,
	408, 416, 310, 301, 200, 414, 308, 300, 285, 248,
	267, 354, 295, 355, 268, 317, 316, 318, 0, 195,
	0, 391, 425, 447, 214, 0, 0, 404, 440, 443,
	0, 357, 215, 258, 247, 353, 256, 288, 439, 441,
	442, 213, 351, 264, 332, 420, 320, 209, 270, 387,
	284, 293, 0, 0, 338, 369, 218, 423, 388, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	202, 289, 0, 358, 254, 445, 429, 426, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 192, 203, 211, 220, 232, 245,
	252, 262, 266, 269, 272, 273, 276, 281, 298, 303,
	304, 305, 306, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 376, 377, 381, 382,
	383, 384, 392, 396, 410, 411, 422, 433, 437, 263,
	418, 438, 0, 297, 0, 0, 299, 249, 265, 274,
	0, 428, 393, 206, 365, 255, 196, 223, 210, 230,
	244, 246, 278, 307, 313, 342, 345, 260, 241, 221,
	362, 219, 379, 399, 400, 401, 403, 311, 237, 1082,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 343, 0, 380, 226, 296,
	294, 407, 250, 243, 239, 225, 271, 302, 341, 398,
	335, 0, 291, 0, 0, 389, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 224, 194, 326, 390, 253, 0, 0,
	0, 176, 177, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 222, 0, 0, 0, 0, 236,
	275, 242, 235, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 315, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 190, 204, 0, 0, 325, 364,
	370, 0, 0, 0, 227, 0, 368, 339, 421, 212,
	251, 361, 344, 366, 0, 0, 367, 292, 409, 356,
	419, 435, 436, 234, 319, 427, 402, 432, 444, 205,
	231, 333, 395, 424, 386, 312, 406, 282, 385, 259,
	193, 290, 197, 397, 417, 217, 378, 0, 0, 0,
	199, 415, 394, 309, 279, 280, 198, 0, 360, 238,
	257, 229, 328, 412, 413, 228, 446, 207, 431, 201,
	208, 430, 321, 408, 416, 310, 301, 200, 414, 308,
	300, 285, 248, 267, 354, 295, 355, 268, 317, 316,
	318, 0, 195, 0, 391, 425, 447, 214, 0, 0,
	404, 440, 443, 0, 357, 215, 258, 247, 353, 256,
	288, 439, 441, 442, 213, 351, 264, 332, 420, 320,
	209, 270, 387, 284, 293, 0, 0, 338, 369, 218,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 202, 289, 0, 358, 254, 445, 429,
	426, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 410, 411, 422,
	433, 437, 263, 418, 438, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 428, 393, 206, 365, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 342, 345,
	260, 241, 221, 362, 219, 379, 399, 400, 401, 403,
	311, 237, 329, 0, 0, 0, 0, 0, 0, 0,
	1073, 240, 0, 0, 0, 0, 0, 287, 0, 0,
	0, 343, 0, 380, 226, 296, 294, 407, 250, 243,
	239, 225, 271, 302, 341, 398, 335, 0, 291, 0,
	0, 389, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 224,
	194, 326, 390, 253, 0, 0, 0, 176, 177, 178,
	0, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	222, 0, 0, 0, 0, 236, 275, 242, 235, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 315, 0, 0, 0, 434, 0,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 283,
	190, 204, 0, 0, 325, 364, 370, 0, 0, 0,
	227, 0, 368, 339, 421, 212, 251, 361, 344, 366,
	0, 0, 367, 292, 409, 356, 419, 435, 436, 234,
	319, 427, 402, 432, 444, 205, 231, 333, 395, 424,
	386, 312, 406, 282, 385, 259, 193, 290, 197, 397,
	417, 217, 378, 0, 0, 0, 199, 415, 394, 309,
	279, 280, 198, 0, 360, 238, 257, 229, 328, 412,
	413, 228, 446, 207, 431, 201, 208, 430, 321, 408,
	416, 310, 301, 200, 414, 308, 300, 285, 248, 267,
	354, 295, 355, 268, 317, 316, 318, 0, 195, 0,
	391, 425, 447, 214, 0, 0, 404, 440, 443, 0,
	357, 215, 258, 247, 353, 256, 288, 439, 441, 442,
	213, 351, 264, 332, 420, 320, 209, 270, 387, 284,
	293, 0, 0, 338, 369, 218, 423, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 202,
	289, 0, 358, 254, 445, 429, 426, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 191, 192, 203, 211, 220, 232, 245, 252,
	262, 266, 269, 272, 273, 276, 281, 298, 303, 304,
	305, 306, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 376, 377, 381, 382, 383,
	384, 392, 396, 410, 411, 422, 433, 437, 263, 418,
	438, 0, 297, 0, 0, 299, 249, 265, 274, 0,
	428, 393, 206, 365, 255, 196, 223, 210, 230, 244,
	246, 278, 307, 313, 342, 345, 260, 241, 221, 362,
	219, 379, 399, 400, 401, 403, 311, 237, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 287, 0, 0, 0, 343, 0, 380,
	226, 296, 294, 407, 250, 243, 239, 225, 271, 302,
	341, 398, 335, 0, 291, 0, 0, 389, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 224, 194, 326, 390, 253,
	0, 0, 0, 176, 177, 178, 0, 931, 0, 0,
	0, 0, 0, 0, 216, 0, 222, 0, 0, 0,
	0, 236, 275, 242, 235, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	315, 0, 0, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 283, 190, 204, 0, 0,
	325, 364, 370, 0, 0, 0, 227, 0, 368, 339,
	421, 212, 251, 361, 344, 366, 0, 0, 367, 292,
	409, 356, 419, 435, 436, 234, 319, 427, 402, 432,
	444, 205, 231, 333, 395, 424, 386, 312, 406, 282,
	385, 259, 193, 290, 197, 397, 417, 217, 378, 0,
	0, 0, 199, 415, 394, 309, 279, 280, 198, 0,
	360, 238, 257, 229, 328, 412, 413, 228, 446, 207,
	431, 201, 208, 430, 321, 408, 416, 310, 301, 200,
	414, 308, 300, 285, 248, 267, 354, 295, 355, 268,
	317, 316, 318, 0, 195, 0, 391, 425, 447, 214,
	0, 0, 404, 440, 443, 0, 357, 215, 258, 247,
	353, 256, 288, 439, 441, 442, 213, 351, 264, 332,
	420, 320, 209, 270, 387, 284, 293, 0, 0, 338,
	369, 218, 423, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 202, 289, 0, 358, 254,
	445, 429, 426, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 191, 192,
	203, 211, 220, 232, 245, 252, 262, 266, 269, 272,
	273, 276, 281, 298, 303, 304, 305, 306, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 376, 377, 381, 382, 383, 384, 392, 396, 410,
	411, 422, 433, 437, 263, 418, 438, 0, 297, 0,
	0, 299, 249, 265, 274, 0, 428, 393, 206, 365,
	255, 196, 223, 210, 230, 244, 246, 278, 307, 313,
	342, 345, 260, 241, 221, 362, 219, 379, 399, 400,
	401, 403, 311, 237, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 287,
	0, 0, 0, 343, 0, 380, 226, 296, 294, 407,
	250, 243, 239, 225, 271, 302, 341, 398, 335, 0,
	291, 0, 0, 389, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 224, 194, 326, 390, 253, 0, 0, 0, 176,
	177, 178, 0, 0, 0, 0, 0, 0, 0, 0,
	216, 0, 222, 0, 0, 0, 0, 236, 275, 242,
	235, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 496, 0, 261, 0, 315, 0, 0, 0,
	434, 0, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 283, 190, 204, 0, 0, 325, 364, 370, 0,
	0, 0, 227, 0, 368, 339, 421, 212, 251, 361,
	344, 366, 0, 0, 367, 292, 409, 356, 419, 435,
	436, 234, 319, 427, 402, 432, 444, 205, 231, 333,
	395, 424, 386, 312, 406, 282, 385, 259, 193, 290,
	197, 397, 417, 217, 378, 0, 0, 0, 199, 415,
	394, 309, 279, 280, 198, 0, 360, 238, 257, 229,
	328, 412, 413, 228, 446, 207, 431, 201, 208, 430,
	321, 408, 416, 310, 301, 200, 414, 308, 300, 285,
	248, 267, 354, 295, 355, 268, 317, 316, 318, 0,
	195, 0, 391, 425, 447, 214, 0, 0, 404, 440,
	443, 0, 357, 215, 258, 247, 353, 256, 288, 439,
	441, 442, 213, 351, 264, 332, 420, 320, 209, 270,
	387, 284, 293, 0, 0, 338, 369, 218, 423, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 202, 289, 0, 358, 254, 445, 429, 426, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 203, 211, 220, 232,
	245, 252, 262, 266, 269, 272, 273, 276, 281, 298,
	303, 304, 305, 306, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 376, 377, 381,
	382, 383, 384, 392, 396, 410, 411, 422, 433, 437,
	495, 418, 438, 0, 297, 0, 0, 299, 249, 265,
	274, 0, 428, 393, 206, 365, 255, 196, 223, 210,
	230, 244, 246, 278, 307, 313, 342, 345, 260, 241,
	221, 362, 219, 379, 399, 400, 401, 403, 311, 237,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 287, 0, 0, 0, 343,
	0, 380, 226, 296, 294, 407, 250, 243, 239, 225,
	271, 302, 341, 398, 335, 0, 291, 0, 0, 389,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 224, 194, 326,
	390, 253, 0, 0, 0, 176, 177, 178, 0, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 222, 0,
	0, 0, 0, 236, 275, 242, 235, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 315, 0, 184, 0, 434, 0, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 283, 190, 204,
	0, 0, 325, 364, 370, 0, 0, 0, 227, 0,
	368, 339, 421, 212, 251, 361, 344, 366, 0, 0,
	367, 292, 409, 356, 419, 435, 436, 234, 319, 427,
	402, 432, 444, 205, 231, 333, 395, 424, 386, 312,
	406, 282, 385, 259, 193, 290, 197, 397, 417, 217,
	378, 0, 0, 0, 199, 415, 394, 309, 279, 280,
	198, 0, 360, 238, 257, 229, 328, 412, 413, 228,
	446, 207, 431, 201, 208, 430, 321, 408, 416, 310,
	301, 200, 414, 308, 300, 285, 248, 267, 354, 295,
	355, 268, 317, 316, 318, 0, 195, 0, 391, 425,
	447, 214, 0, 0, 404, 440, 443, 0, 357, 215,
	258, 247, 353, 256, 288, 439, 441, 442, 213, 351,
	264, 332, 420, 320, 209, 270, 387, 284, 293, 0,
	0, 338, 369, 218, 423, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 202, 289, 0,
	358, 254, 445, 429, 426, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 192, 203, 211, 220, 232, 245, 252, 262, 266,
	269, 272, 273, 276, 281, 298, 303, 304, 305, 306,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 376, 377, 381, 382, 383, 384, 392,
	396, 410, 411, 422, 433, 437, 263, 418, 438, 0,
	297, 0, 0, 299, 249, 265, 274, 0, 428, 393,
	206, 365, 255, 196, 223, 210, 230, 244, 246, 278,
	307, 313, 342, 345, 260, 241, 221, 362, 219, 379,
	399, 400, 401, 403, 311, 237, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 287, 0, 0, 0, 343, 0, 380, 226, 296,
	294, 407, 250, 243, 239, 225, 271, 302, 341, 398,
	335, 0, 291, 0, 0, 389, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 224, 194, 326, 390, 253, 0, 0,
	0, 176, 177, 178, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 222, 0, 0, 0, 0, 236,
	275, 242, 235, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 261, 0, 315, 0,
	0, 0, 434, 0, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 190, 204, 0, 0, 325, 364,
	370, 0, 0, 0, 227, 0, 368, 339, 421, 212,
	251, 361, 344, 366, 0, 0, 367, 292, 409, 356,
	419, 435, 436, 234, 319, 427, 402, 432, 444, 205,
	231, 333, 395, 424, 386, 312, 406, 282, 385, 259,
	193, 290, 197, 397, 417, 217, 378, 0, 0, 0,
	199, 415, 394, 309, 279, 280, 198, 0, 360, 238,
	257, 229, 328, 412, 413, 228, 446, 207, 431, 201,
	208, 430, 321, 408, 416, 310, 301, 200, 414, 308,
	300, 285, 248, 267, 354, 295, 355, 268, 317, 316,
	318, 0, 195, 0, 391, 425, 447, 214, 0, 0,
	404, 440, 443, 0, 357, 215, 258, 247, 353, 256,
	288, 439, 441, 442, 213, 351, 264, 332, 420, 320,
	209, 270, 387, 284, 293, 0, 0, 338, 369, 218,
	423, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 202, 289, 0, 358, 254, 445, 429,
	426, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 203, 211,
	220, 232, 245, 252, 262, 266, 269, 272, 273, 276,
	281, 298, 303, 304, 305, 306, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 376,
	377, 381, 382, 383, 384, 392, 396, 410, 411, 422,
	433, 437, 263, 418, 438, 0, 297, 0, 0, 299,
	249, 265, 274, 0, 428, 393, 206, 365, 255, 196,
	223, 210, 230, 244, 246, 278, 307, 313, 342, 345,
	260, 241, 221, 362, 219, 379, 399, 400, 401, 403,
	311, 237,
}

var yyPact = [...]int{
	2977, -1000, -331, 1606, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1568, 1212, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 577, 1226, 206, 1481, 249, 146, 965, 342, 130,
	26891, 341, 2348, 27337, -1000, 93, -1000, 71, 27337, 89,
	26445, -1000, -1000, -278, 12586, 1423, 5, -1, 27337, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1238, 1540, 1524,
	1566, 1059, 1461, -1000, 10789, 10789, 293, 293, 293, 9005,
	-1000, -1000, 16613, 27337, 27337, 1227, 290, 965, 337, 328,
	327, 290, -116, -1000, -1000, -1000, 1481, -1000, -1000, 144,
	-1000, 188, 1175, -1000, 1173, -1000, 406, 367, 213, 285,
	282, 210, 204, 203, 202, 201, 197, 196, 195, 220,
	-1000, 509, 509, -171, -175, 270, 261, 261, 261, 315,
	1447, 1445, -1000, 446, -1000, 509, 509, 133, 509, 509,
	509, 509, 157, 154, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 27337,
	-1000, 127, 460, 550, 1481, 140, -1000, -1000, -1000, 27337,
	287, 965, 287, 287, 27337, -1000, 423, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27337, 580,
	580, 580, 580, 580, 580, 65, -14, -1000, 59, 132,
	128, 134, 617, -24, 617, 18, 54, 386, -1000, 445,
	-1000, 135, 75, -1000, 580, 7165, 7165, 7165, -1000, 1473,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 308, -1000, -1000,
	-1000, -1000, 27337, 25999, 255, 547, -1000, -1000, -1000, 74,
	-1000, -1000, 1103, 821, -1000, 12586, 2097, 1180, 1180, -1000,
	-1000, 409, -1000, -1000, 13924, 13924, 13924, 13924, 13924, 13924,
	13924, 13924, 13924, 13924, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1180, 418,
	-1000, 12140, 1180, 1180, 1180, 1180, 1180, 1180, 1180, 1180,
	12586, 1180, 1180, 1180, 1180, 1180, 1180, 1180, 1180, 1180,
	1180, 1180, 1180, 1180, 1180, 1180, 1180, -1000, -1000, -1000,
	27337, -1000, 1180, 1568, -1000, 1212, -1000, -1000, -1000, 1469,
	12586, 12586, 1568, -1000, 1351, 10789, -1000, -1000, 1405, -1000,
	-1000, -1000, -1000, 686, 1589, -1000, 15262, 416, 1588, 25553,
	-1000, 19302, 25107, 1170, 8545, -48, -1000, -1000, -1000, 530,
	18410, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1473, 1056, 27337, -1000, -1000, 4163, 965, -1000,
	1225, -1000, 1052, -1000, 1190, 127, 27337, 594, 1243, 965,
	965, 965, 965, -1000, -1000, -1000, 509, 509, 219, 249,
	3854, -1000, -1000, -1000, 24654, 1215, 965, -1000, 1214, -1000,
	1497, 281, 461, 461, 965, -1000, -1000, 27337, 965, 1491,
	1489, 27337, 27337, -1000, 24208, -1000, 23762, 23316, 862, 27337,
	22870, 22424, 21978, 21532, 21086, -1000, 1294, -1000, 1223, -1000,
	-1000, -1000, 27337, 27337, 27337, 14, -1000, -1000, 27337, 965,
	-1000, -1000, 861, 846, 509, 509, 829, 973, 969, 968,
	509, 509, 828, 967, 934, 142, 825, 793, 788, 940,
	964, 101, 937, 894, 786, 27337, 1207, -1000, 115, 526,
	176, 186, 166, 27337, 116, 1481, 1421, 1168, 299, 27337,
	1509, 1300, 27337, 965, -1000, 7625, -1000, -1000, 959, 12586,
	-1000, -1000, -1000, -1000, -1000, 580, 27337, 617, 580, 27337,
	580, 580, 580, 580, 617, 580, 27337, 27337, 617, 580,
	630, 617, -1000, -1000, 7165, 7165, 7165, 27337, 7165, 7165,
	27337, 7165, 7165, 630, -1000, -1000, -1000, 475, -1000, 1299,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 82, -1000, -1000,
	-1000, -1000, -1000, 1606, -1000, -1000, -1000, -112, 1166, 20640,
	-1000, -283, -284, -285, -286, -1000, -1000, -1000, -287, -288,
	-1000, -1000, -1000, 12586, 12586, 12586, 12586, 694, 481, 13924,
	839, 544, 13924, 13924, 13924, 13924, 13924, 13924, 13924, 13924,
	13924, 13924, 13924, 13924, 13924, 13924, 13924, 690, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 965, -1000, 1603, 950,
	950, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	14370, 9451, 7625, 1059, 1048, 1568, 10789, 10789, 12586, 12586,
	11681, 11235, 10789, 1449, 555, 821, 27337, -1000, -1000, 13478,
	-1000, -1000, -1000, -1000, -1000, 899, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27337, 27337, 10789, 10789, 10789, 10789, 10789,
	-1000, 1165, -1000, -167, 16167, 12586, 1524, 1059, 1405, 1502,
	1596, 464, 760, 1164, -1000, 818, 1524, 17964, 1157, -1000,
	1405, -1000, -1000, -1000, 27337, -1000, -1000, 20194, -1000, -1000,
	6705, 27337, 194, 27337, -1000, 1155, 1276, -1000, -1000, -1000,
	1518, 17518, 27337, 1117, 1073, -1000, -1000, 412, 8085, -48,
	-1000, 8085, 1137, -1000, -45, -54, 9897, 433, -1000, -1000,
	-1000, 270, 14816, 1060, 688, 20, -1000, -1000, -1000, 1190,
	-1000, 1190, 1190, 1190, 1190, 14, 14, 14, 14, -1000,
	-1000, -1000, -1000, -1000, 1205, 1204, -1000, 1190, 1190, 1190,
	1190, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1194, 1194,
	1194, 1191, 1191, 254, -1000, 12586, 99, 27337, 1512, 783,
	115, -1000, 1507, 1298, -1000, 27337, 1243, 1243, 1243, -1000,
	888, 876, -1000, 1163, -1000, -1000, 1565, -1000, -1000, 466,
	620, 619, 453, 27337, 105, 187, -1000, 245, -1000, 27337,
	1193, 1488, 461, 965, -1000, 965, -1000, -1000, -1000, -1000,
	402, -1000, -1000, 965, 1158, -1000, 1105, 718, 605, 695,
	576, 1158, -1000, -1000, -157, 1158, -1000, 1158, -1000, 1158,
	-1000, 1158, -1000, 1158, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 485, 27337, 105, 690, -1000, 295, -1000, -1000,
	690, 690, -1000, -1000, -1000, -1000, 956, 948, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -327, 27337, 320, 107, 124, 27337,
	27337, 27337, 27337, 27337, 384, -1000, -1000, -1000, 153, 27337,
	27337, 370, -1000, 27337, 345, -1000, -1000, -1000, -1000, -1000,
	-1000, 821, -1000, -1000, 580, -1000, -1000, -1000, -1000, -1000,
	-1000, 580, -1000, -1000, -1000, 580, -1000, 27337, -1000, -1000,
	580, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27337, -1000, 933, 27337, 27337, -1000, -1000, -1000, -1000, -1000,
	217, -56, 175, -1000, -1000, -1000, -1000, 1515, -1000, 821,
	481, 624, 510, -1000, -1000, 739, -1000, -1000, 2431, -1000,
	-1000, -1000, -1000, 839, 13924, 13924, 13924, 1260, 2431, 2047,
	857, 2537, 439, 625, 625, 491, 491, 491, 491, 491,
	683, 683, -1000, -1000, -1000, -1000, 899, -1000, -1000, -1000,
	899, 10789, 10789, 1156, 1180, 394, -1000, 1238, -1000, -1000,
	1524, 1027, 1027, 754, 746, 572, 1587, 1027, 515, 1583,
	1027, 1027, 10789, -1000, -1000, 640, -1000, 12586, 899, -1000,
	1279, 1149, 1148, 1027, 899, 899, 1027, 1027, 27337, -1000,
	-272, -1000, -99, 392, 1180, -1000, 19748, -1000, -1000, 899,
	1103, 1469, -1000, -1000, 1397, -1000, 1348, 12586, 12586, 12586,
	-1000, -1000, -1000, 1469, 1561, -1000, 1371, 1369, 1577, 10789,
	19302, 1405, -1000, -1000, -1000, 393, 1577, 1119, 1180, -1000,
	27337, 19302, 19302, 19302, 19302, 19302, -1000, 1325, 1322, -1000,
	1314, 1312, 1313, 27337, -1000, 1040, 1059, 17518, 194, 1074,
	19302, 27337, -1000, -1000, 19302, 27337, 6245, -1000, 1137, -48,
	-97, -1000, -1000, -1000, -1000, 821, -1000, 870, -1000, 292,
	-1000, 242, -1000, -1000, -1000, -1000, 1480, -1000, 659, 17,
	-1000, -1000, 14, 14, -1000, -1000, 433, 603, 433, 433,
	433, 928, 928, -1000, -1000, -1000, -1000, -1000, 763, -1000,
	-1000, -1000, 757, -1000, -1000, 840, 1288, 99, -1000, -1000,
	509, 927, 1432, -1000, -1000, 1041, 319, -1000, 27337, -1000,
	1291, 1283, 1280, -1000, -1000, -1000, -1000, 3830, 27337, 1038,
	-1000, 102, 27337, 1014, 27337, -1000, 1035, 27337, -1000, 965,
	-1000, -1000, 7625, -1000, 27337, 1180, -1000, -1000, -1000, -1000,
	339, 1479, 1477, 105, 102, 433, 965, -1000, -1000, -1000,
	-1000, -1000, -334, 1029, 27337, 111, -1000, 1192, 762, -1000,
	1237, -1000, -1000, -1000, -1000, 98, 173, 143, 288, -1000,
	-1000, -1000, -1000, 1288, 27337, -1000, -1000, -1000, -1000, 617,
	-1000, 617, -1000, -1000, -1000, -1000, 1471, -74, -305, -1000,
	-302, -1000, -1000, -1000, -1000, 1260, 2431, 1739, -1000, 13924,
	13924, -1000, -1000, 1027, 1027, 10789, 7625, 1568, 1469, -1000,
	-1000, 286, 690, 286, 13924, 13924, -1000, 13924, 13924, -1000,
	-138, 1151, 545, -1000, 12586, 681, -1000, -1000, 13924, 13924,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 325,
	324, 323, 27337, -1000, -1000, -1000, 795, 911, 1346, 821,
	821, -1000, -1000, 27337, -1000, -1000, -1000, -1000, 1575, 12586,
	-1000, 1121, -1000, 5785, 1524, 1278, 27337, 1180, 1606, 15721,
	27337, 1133, -1000, 518, 1276, 1236, 1265, 1263, -1000, -1000,
	-1000, -1000, 1321, -1000, 1289, -1000, -1000, -1000, -1000, -1000,
	1059, 1577, 19302, 1123, -1000, 1123, -1000, 390, -1000, -1000,
	-1000, -80, -93, -1000, -1000, -1000, 270, -1000, -1000, 1252,
	13924, -1000, -1000, -1000, 433, 433, -1000, -1000, -1000, -1000,
	-1000, -1000, 1025, -1000, 1023, 1110, 1019, 53, -1000, 1125,
	1468, 509, 509, -1000, 744, -1000, 965, -1000, 27337, -1000,
	27337, 27337, 27337, 1562, 1107, -1000, 27337, -1000, -1000, 27337,
	-1000, -1000, 1367, 99, 1017, -1000, -1000, -1000, 187, 27337,
	-1000, 950, 102, -1000, -1000, -1000, -1000, -1000, -1000, 1188,
	-1000, -1000, -1000, 1010, -1000, -159, 965, 27337, 27337, 27337,
	-1000, 27337, -1000, -1000, 580, 580, -1000, 1453, -1000, 965,
	-1000, 13924, 2431, 2431, -1000, -1000, 899, -1000, 1524, -1000,
	899, 1190, 1190, -1000, 1190, 1191, -1000, 1190, 80, 1190,
	63, 899, 899, 2383, 2344, 2318, 1758, 1180, -127, -1000,
	821, 12586, 2113, 1320, 1180, 1180, 1180, 1008, 910, 14,
	-1000, -1000, -1000, 1571, 1559, 821, -1000, -1000, -1000, 1499,
	1072, 1101, -1000, -1000, 10343, 1013, 1366, 385, 1008, 1568,
	27337, 12586, -1000, -1000, 12586, 1189, -1000, 12586, -1000, -1000,
	-1000, 1568, 1568, 1123, -1000, -1000, 448, -1000, -1000, -1000,
	-1000, 24, 1594, 2431, -1000, -1000, 14, 898, 14, 738,
	-1000, 708, -1000, -1000, -214, -1000, -1000, 1085, 1292, -1000,
	-1000, 1188, -1000, -1000, -1000, 27337, 27337, -1000, -1000, 182,
	-1000, 234, 997, -1000, -172, -1000, -1000, 1517, 27337, -1000,
	-1000, 7625, -1000, -1000, 1187, 1240, -1000, -1000, -1000, -1000,
	-1000, -1000, 2431, -1000, 1469, -1000, -1000, 200, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13924, 13924, 13924, 13924,
	13924, 1524, 897, 821, 13924, 13924, 18856, 27337, 27337, 17059,
	14, -11, -1000, 12586, 12586, 1487, -1000, 1180, -1000, 1120,
	27337, 1180, 27337, -1000, 1524, -1000, 821, 821, 27337, 821,
	1524, -1000, 490, -1000, -117, 433, -1000, 433, 1005, 945,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1516, 1107,
	-1000, 180, 27337, -1000, 187, -1000, -177, -178, 1212, 995,
	1106, -1000, 496, 27337, 27337, -1000, -1000, -1000, 1279, 1279,
	1279, 1279, 874, 899, -1000, 1279, 1279, 993, -1000, 993,
	993, 392, -265, -1000, 1398, 1401, 821, 1103, 1593, -1000,
	1180, 1606, 375, 1101, -1000, -1000, 988, -1000, 671, 1486,
	-1000, 1485, -1000, -1000, -1000, -1000, -1000, 1212, 1180, 1178,
	-1000, -1000, -1000, 179, -1000, 7625, 5325, 984, -1000, -1000,
	-1000, -1000, -1000, 899, 123, -162, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -11, 262, -1000, 1378, 1375, 1555, 27337,
	1101, 27337, -1000, -1000, 891, -1000, -1000, 179, 13032, 27337,
	-1000, -58, -1000, -1000, -1000, -1000, -1000, 1237, -1000, 1345,
	-145, -166, 1382, 1384, 1384, 1401, 1553, 1395, 1389, -1000,
	889, 1062, -1000, -1000, -1000, 1279, 899, 980, 244, -1000,
	-1000, -159, -1000, 1342, -1000, 1380, 759, -1000, -1000, -1000,
	-1000, 887, -1000, 1531, 1527, -1000, -1000, -1000, 1248, 125,
	-1000, -160, -1000, 758, -1000, -1000, -1000, 880, 865, 1239,
	-1000, 1581, -1000, -163, -1000, -1000, -1000, -1000, -1000, 1592,
	391, 391, -168, -1000, -1000, -1000, 241, 753, -1000, -1000,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1867, 1866, 31, 84, 79, 1864, 1861, 1860, 1858,
	127, 125, 121, 1855, 1853, 1852, 1850, 1849, 1847, 1846,
	1843, 1841, 1839, 1838, 1835, 60, 122, 36, 38, 124,
	1833, 1831, 62, 1826, 1824, 1823, 118, 115, 433, 1822,
	114, 1820, 1819, 1816, 1815, 1814, 1813, 1812, 1811, 1809,
	1808, 1807, 1806, 1805, 150, 1804, 1803, 4, 1801, 86,
	1800, 1799, 1798, 1795, 1794, 85, 1790, 1788, 1786, 110,
	1785, 1783, 46, 347, 49, 70, 1780, 1779, 72, 784,
	1777, 101, 112, 1776, 598, 1775, 41, 99, 92, 1773,
	43, 1772, 1770, 87, 1769, 1768, 1767, 73, 1765, 1763,
	2766, 1761, 68, 76, 15, 20, 1758, 1757, 1756, 1755,
	33, 705, 1753, 1751, 11, 1750, 1749, 126, 1746, 83,
	35, 1745, 13, 10, 18, 1744, 82, 1738, 42, 52,
	23, 1737, 78, 1736, 1735, 1734, 1733, 25, 1729, 74,
	97, 37, 1727, 14, 7, 1726, 1724, 1722, 1718, 1717,
	1716, 12, 1715, 1713, 1712, 26, 1711, 9, 22, 71,
	81, 21, 6, 1710, 143, 1709, 19, 109, 67, 105,
	1707, 1706, 1702, 944, 1701, 64, 128, 1700, 1699, 45,
	1698, 412, 746, 1691, 1690, 1689, 66, 1254, 2666, 27,
	113, 1688, 1687, 2023, 57, 75, 17, 1667, 1666, 1664,
	120, 304, 56, 791, 44, 1662, 1661, 1660, 1659, 1658,
	1656, 1655, 47, 1654, 1653, 1652, 34, 16, 116, 29,
	1651, 1650, 1648, 1647, 1645, 63, 24, 1643, 104, 103,
	65, 106, 1642, 111, 107, 55, 1641, 80, 1639, 1638,
	1637, 1636, 39, 1634, 1633, 1632, 1630, 102, 88, 50,
	40, 1629, 30, 96, 91, 89, 1627, 28, 123, 8,
	1626, 3, 0, 1624, 5, 132, 1443, 133, 1623, 1622,
	1, 1621, 2, 1620, 1619, 77, 1617, 1616, 1614, 1613,
	3234, 546, 108, 1593, 119,
}

var yyR1 = [...]int{
	0, 278, 279, 279, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 262, 262, 262, 265, 265, 21,
	50, 3, 3, 3, 3, 2, 2, 8, 9, 4,
	5, 5, 10, 10, 61, 61, 11, 12, 12, 12,
	12, 282, 282, 95, 95, 93, 93, 94, 94, 159,
	159, 13, 14, 14, 169, 169, 168, 168, 168, 170,
	170, 170, 170, 203, 203, 15, 15, 15, 15, 15,
	70, 70, 264, 264, 263, 261, 261, 260, 260, 259,
	23, 24, 33, 33, 33, 33, 34, 35, 266, 266,
	238, 39, 39, 38, 38, 38, 38, 40, 40, 37,
	37, 36, 36, 240, 240, 227, 227, 239, 239, 239,
	239, 239, 239, 239, 226, 205, 205, 205, 205, 208,
	208, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	207, 207, 207, 207, 207, 209, 209, 209, 209, 209,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 211, 211, 211, 211, 211,
	211, 211, 211, 225, 225, 212, 212, 218, 218, 219,
	219, 219, 221, 221, 222, 222, 183, 183, 183, 214,
	214, 215, 215, 220, 220, 216, 216, 216, 217, 217,
	217, 224, 224, 224, 224, 224, 213, 213, 228, 252,
	252, 251, 251, 249, 249, 249, 249, 237, 237, 246,
	246, 246, 246, 246, 236, 236, 232, 232, 232, 233,
	233, 234, 234, 231, 231, 235, 235, 248, 248, 247,
	229, 229, 230, 230, 254, 254, 254, 254, 255, 271,
	272, 270, 270, 270, 270, 270, 59, 59, 59, 184,
	184, 184, 244, 244, 243, 243, 243, 245, 245, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 242, 242,
	242, 242, 242, 242, 242, 242, 242, 242, 178, 178,
	178, 269, 269, 269, 269, 269, 269, 268, 268, 268,
	241, 241, 241, 267, 267, 129, 129, 130, 130, 30,
	30, 30, 30, 30, 30, 29, 29, 29, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	31, 31, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 223, 223,
	223, 256, 256, 257, 257, 17, 22, 22, 18, 18,
	18, 18, 19, 19, 41, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 273, 273,
	177, 177, 174, 174, 176, 176, 175, 175, 175, 179,
	179, 179, 180, 180, 277, 277, 277, 43, 43, 45,
	45, 46, 47, 47, 198, 198, 199, 199, 48, 49,
	60, 60, 60, 60, 60, 60, 62, 62, 62, 7,
	7, 7, 7, 56, 56, 56, 6, 6, 44, 44,
	51, 274, 274, 275, 276, 276, 276, 276, 52, 20,
	20, 20, 20, 20, 20, 77, 77, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 71,
	71, 71, 66, 66, 283, 54, 55, 55, 69, 69,
	69, 63, 63, 63, 68, 68, 68, 74, 74, 76,
	76, 76, 76, 76, 78, 78, 78, 78, 78, 78,
	73, 73, 75, 75, 75, 75, 191, 191, 191, 190,
	190, 85, 85, 86, 86, 87, 87, 88, 88, 88,
	127, 103, 103, 158, 158, 157, 157, 160, 160, 89,
	89, 89, 89, 90, 90, 91, 91, 92, 92, 197,
	197, 196, 196, 196, 195, 195, 96, 96, 96, 98,
	97, 97, 97, 97, 99, 99, 101, 101, 100, 100,
	102, 104, 104, 104, 104, 104, 105, 105, 84, 84,
	84, 84, 84, 84, 84, 84, 172, 172, 107, 107,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	118, 118, 118, 118, 118, 118, 108, 108, 108, 108,
	108, 108, 108, 72, 72, 119, 119, 119, 126, 120,
	120, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 115, 115, 115, 115, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 284, 284,
	117, 116, 116, 116, 116, 116, 116, 116, 67, 67,
	67, 67, 67, 202, 202, 202, 204, 204, 204, 204,
	204, 204, 204, 204, 204, 204, 204, 204, 204, 133,
	133, 64, 64, 131, 131, 132, 134, 134, 128, 128,
	128, 110, 110, 110, 110, 110, 110, 110, 110, 112,
	112, 112, 135, 135, 136, 136, 137, 137, 138, 138,
	139, 140, 140, 140, 141, 141, 141, 141, 32, 32,
	32, 32, 32, 27, 27, 27, 27, 28, 28, 28,
	79, 79, 79, 79, 81, 81, 80, 80, 57, 57,
	58, 58, 58, 82, 82, 83, 83, 83, 83, 155,
	155, 155, 142, 142, 142, 142, 147, 147, 147, 143,
	143, 145, 145, 145, 146, 146, 146, 144, 150, 150,
	152, 152, 151, 151, 149, 149, 154, 154, 153, 153,
	148, 148, 109, 109, 109, 109, 109, 156, 156, 156,
	156, 161, 161, 122, 122, 124, 124, 123, 125, 162,
	162, 166, 163, 163, 167, 167, 167, 167, 167, 164,
	164, 165, 165, 192, 192, 192, 171, 171, 181, 181,
	182, 182, 173, 173, 185, 185, 185, 53, 121, 121,
	253, 253, 250, 188, 188, 189, 189, 193, 193, 194,
	194, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 186, 186, 186, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 280, 281, 200, 201,
	201, 201,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 5, 6, 6, 7, 4, 6, 5, 7, 8,
	1, 3, 7, 8, 1, 1, 9, 9, 8, 7,
	7, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 6, 11, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 3, 6, 7, 7, 7, 4, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 8, 3, 1, 1, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	4, 4, 2, 2, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 6, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 0, 1, 0, 1, 2, 0,
	2, 0, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 1, 2, 1, 0, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 3,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 10, 11, 11, 12, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 4, 4, 2, 10, 3, 6, 7, 5,
	5, 5, 12, 7, 5, 9, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 5, 6,
	5, 4, 3, 2, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 2, 4, 4, 4, 4, 4, 5,
	4, 5, 4, 7, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 2, 4, 7, 2, 4, 5, 4,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 1,
	2, 1, 1, 5, 0, 1, 0, 1, 2, 3,
	0, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 3, 3, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 3,
	3, 6, 4, 7, 6, 1, 3, 2, 2, 2,
	2, 1, 1, 1, 3, 2, 1, 1, 1, 0,
	1, 1, 0, 3, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 2, 1, 3, 1, 1, 1, 3, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 5, 4, 5, 5, 0, 2, 1, 3,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 4, 5, 5, 6, 4,
	4, 6, 6, 6, 8, 8, 8, 8, 9, 8,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 0,
	2, 4, 0, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 3, 0, 4,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -278, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -4, -280, 6, 7, 8, -61, 10, 11,
	31, -23, -33, 153, -34, -24, 154, -35, 156, 155,
	191, 157, 184, 71, 225, 226, 228, 229, 230, 231,
	-62, 189, 190, 159, 35, 42, 32, 33, 36, 81,
	9, 325, 186, 185, 26, -279, 465, -69, 5, -137,
	16, -3, -54, -283, -54, -54, -54, -54, -54, -54,
	-238, -240, 81, 126, 81, -70, 163, 164, 173, 172,
	169, -266, 107, 316, 162, -39, -38, -37, -36, -40,
	30, -30, -31, -258, -29, -26, 158, 155, 199, 102,
	103, 191, 192, 193, 157, 175, 190, 194, 189, 208,
	-25, 77, 32, 338, 341, -245, 154, 160, 161, 326,
	105, 104, 72, 156, -242, 275, 442, -40, 444, 95,
	97, 443, 41, 164, 445, 446, 447, 448, 174, 449,
	450, 451, 452, 458, 459, 460, 461, 106, 5, 163,
	-266, -79, 285, 77, -265, -262, 84, 85, 86, 163,
	163, 164, 165, -266, 163, -100, -193, -262, -187, 335,
	177, 369, 370, 223, 77, 275, 442, 225, 239, 233,
	260, 252, 336, 371, 178, 212, 439, 250, 253, 303,
	444, 372, 192, 297, 280, 288, 95, 228, 312, 457,
	373, 455, 97, 443, 76, 48, 41, 187, 248, 244,
	445, 213, 374, 346, 206, 105, 102, 464, 242, 47,
	28, 454, 104, 46, 446, 375, 447, 290, 265, 433,
	45, 193, 376, 80, 340, 441, 292, 243, 289, 222,
	453, 159, 377, 425, 299, 434, 378, 266, 270, 379,
	304, 49, 380, 381, 435, 103, 382, 75, 448, 237,
	238, 383, 220, 176, 306, 264, 174, 34, 293, 337,
	224, 55, 200, 307, 43, 268, 42, 429, 384, 432,
	263, 259, 50, 385, 386, 387, 388, 449, 262, 236,
	258, 463, 218, 450, 59, 161, 272, 271, 273, 207,
	302, 255, 389, 390, 391, 181, 78, 392, 245, 19,
	393, 394, 300, 214, 395, 53, 396, 397, 310, 190,
	398, 51, 451, 38, 195, 452, 399, 400, 401, 402,
	403, 298, 404, 291, 267, 269, 202, 287, 339, 405,
	241, 194, 456, 406, 182, 440, 196, 199, 189, 311,
	183, 407, 408, 409, 410, 411, 412, 413, 229, 458,
	40, 414, 415, 416, 417, 221, 217, 305, 314, 58,
	79, 277, 418, 438, 235, 215, 419, 226, 52, 459,
	460, 461, 209, 462, 283, 106, 219, 44, 256, 201,
	420, 421, 246, 247, 261, 234, 257, 227, 426, 203,
	301, 191, 422, 313, 216, 278, 343, 208, 437, 342,
	254, 251, 210, 423, 165, 204, 205, 424, 427, 294,
	284, 295, 296, 285, 211, 341, 249, 279, 163, -164,
	280, 281, 282, 293, 294, 299, 300, 298, 202, -277,
	304, 163, 283, 286, 301, -174, 144, 153, 290, -177,
	291, 284, 285, 211, -273, -262, 447, 462, 303, 253,
	305, 429, 292, 296, 295, -193, 227, -198, 232, -188,
	-262, -187, 230, -100, -60, 425, 157, -200, -200, -71,
	429, 431, -120, -84, -106, 110, -111, 30, 24, -110,
	-107, -128, -125, -126, 144, 145, 147, 146, 148, 133,
	134, 141, 111, 149, -115, -113, -114, -116, 88, 87,
	96, 89, 90, 91, 92, 98, 99, 100, -188, -193,
	-123, -280, 65, 66, 326, 327, 328, 329, 334, 330,
	113, 54, 315, 324, 323, 322, 319, 320, 317, 318,
	332, 333, 168, 316, 162, 139, 325, -262, -187, 41,
	283, 283, -100, -5, -4, -280, 6, 21, 22, -141,
	18, 17, -281, 83, -63, -76, 60, 61, -78, 22,
	37, 64, 62, -55, -75, 135, -84, -193, -75, -173,
	167, -173, -173, -163, -203, 227, -167, 305, 304, -189,
	-165, -188, -186, -164, 302, 158, 344, 109, 23, 25,
	112, 144, 17, 113, 36, 160, 175, 143, 171, 326,
	153, 69, 345, 317, 318, 315, 321, 328, 329, 316,
	281, 30, 11, 347, 26, 185, 22, 37, 137, 155,
	116, 117, 188, 24, 186, 100, 350, 20, 72, 180,
	12, 173, 14, 351, 352, 15, 168, 167, 128, 164,
	67, 9, 149, 27, 125, 63, 353, 29, 354, 355,
	356, 357, 65, 126, 18, 319, 320, 32, 430, 358,
	334, 197, 139, 70, 56, 431, 110, 359, 360, 98,
	361, 101, 73, 436, 107, 16, 68, 39, 362, 198,
	363, 170, 364, 308, 365, 127, 156, 325, 66, 366,
	162, 282, 6, 331, 31, 184, 172, 64, 367, 163,
	115, 332, 333, 166, 99, 5, 169, 33, 10, 71,
	74, 322, 323, 324, 54, 338, 114, 13, 368, 309,
	108, 303, 253, -239, 126, -226, -230, -188, 179, -255,
	175, -100, -248, -247, -188, -79, -182, 168, -262, 164,
	164, 164, -182, 325, -36, -37, -164, 143, 196, 82,
	82, -230, -229, -228, -267, 198, 179, -254, -246, 171,
	180, -236, 172, 173, -231, 164, 29, -267, -231, 170,
	180, 198, 198, 106, 198, 106, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 195, -237, 118, -237, 342,
	342, -242, -267, -267, -267, 166, 34, 34, -185, -231,
	166, 23, -237, -237, -164, 143, -237, -237, -237, -237,
	206, 206, -237, -237, -237, -237, -237, -237, -237, -237,
	-237, -237, -237, -237, -237, -237, -237, -100, -82, 213,
	153, 155, 158, 73, 118, -38, 208, -22, -100, -181,
	168, -262, -181, -181, -100, 150, -100, -179, 126, 13,
	-179, -179, -179, -179, -179, 209, 297, 283, 209, 297,
	209, 210, 209, 210, 209, -175, 12, 128, 283, -175,
	-176, 287, 288, 289, -262, 432, 316, 299, -262, 202,
	163, 203, 165, -232, 164, 34, 176, 210, 283, 205,
	-179, -201, -280, -189, -201, -201, 31, 166, -188, -56,
	-188, 88, -7, -3, -11, -10, -12, 118, -77, 283,
	-65, 144, 447, 433, 434, 435, 432, 298, 440, 438,
	436, 209, 437, 82, 109, 107, 108, 125, -84, -108,
	128, 110, 126, 127, 112, 130, 129, 140, 133, 134,
	135, 136, 137, 138, 139, 131, 132, 143, 118, 119,
	120, 121, 122, 123, 124, -172, -280, -126, -280, 151,
	152, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -280, 150, -2, -120, -4, -280, -280, -280, -280,
	-280, -280, -280, -280, -133, -84, -280, -284, -117, -280,
	-284, -117, -284, -117, -284, -280, -284, -117, -284, -117,
	-284, -284, -117, -280, -280, -280, -280, -280, -280, -280,
	-200, -274, -275, -103, -100, -280, -137, -3, -54, -155,
	20, 32, -84, -138, -139, -84, -137, 56, -73, -75,
	-78, 60, 61, 94, 12, -191, -190, 23, -188, 88,
	150, 12, -101, 27, -100, -86, -87, -88, -89, -103,
	-127, -280, 12, -93, -94, -100, -102, -193, 82, 227,
	-167, -203, -169, -168, 306, 308, 118, -192, -188, 88,
	30, 83, 82, -100, -205, -208, -210, -209, -211, -206,
	-207, 250, 251, 144, 254, 256, 257, 258, 259, 260,
	261, 262, 263, 264, 265, 31, 187, 246, 247, 248,
	249, 266, 267, 268, 269, 270, 271, 272, 273, 233,
	252, 336, 234, 235, 236, 237, 238, 239, 241, 242,
	243, 244, 245, -265, -262, 81, 83, 82, -212, 81,
	-82, -100, 110, -253, -250, 74, -262, -262, -262, -262,
	-237, -237, 195, -29, -26, -258, 16, -25, -26, 158,
	102, 103, 155, 81, -226, 81, -235, -265, -262, 81,
	29, 170, 169, -234, -231, -234, -235, -262, -128, -188,
	-193, -262, 29, 29, -160, -188, -160, -160, 21, -160,
	21, -160, 21, 89, -188, -160, 21, -160, 21, -160,
	21, -160, 21, -160, 21, 30, 75, 76, 30, 78,
	79, 80, -128, -128, -226, -164, -100, -262, 89, 89,
	-237, -237, 89, 88, 88, 88, -237, -237, 89, 88,
	-262, 88, -268, 181, 222, 224, 89, 89, 89, 89,
	30, 88, -269, 30, 454, 453, 455, 456, 457, 89,
	30, 89, 30, 89, -188, 81, -81, 215, 118, 204,
	204, 163, 163, 217, -100, 216, 218, 219, 41, 82,
	166, -93, 24, 73, -95, -100, -262, -194, -193, -186,
	88, -84, -179, -100, -175, -179, -100, -179, -179, -179,
	-179, -175, -179, -193, -193, -175, -179, -233, 12, 128,
	-175, -201, -201, -201, -100, -201, -201, -100, -201, -201,
	-233, -180, 126, 73, -199, 230, 264, 426, 427, 428,
	82, 338, -93, 432, 432, 432, 432, 432, 432, -84,
	-84, -84, -84, -118, 98, 110, 99, 100, -111, -119,
	-123, -126, 93, 128, 126, 127, 112, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -111, -202, -262, 88, 144, -262, -110, -110, -188,
	-74, 22, 37, -73, -189, -194, -186, -69, -281, -281,
	-137, -73, -73, -84, -84, -128, 88, -73, -128, 88,
	-73, -73, -68, 22, 37, -131, -132, 114, -128, -281,
	-111, -188, -188, -73, -74, -74, -73, -73, 82, -276,
	308, 309, 430, -196, 198, -195, 23, -193, 88, -121,
	-120, -141, -281, -142, 27, 10, 128, 82, 19, 82,
	-140, 25, 26, -141, -112, -188, 89, 92, -85, 82,
	12, -78, -100, -190, 135, -194, -100, -159, 198, -100,
	31, 82, -96, -98, -97, -99, 63, 67, 69, 64,
	65, 66, 70, -197, 23, -86, -3, -280, -100, -93,
	-282, 82, 12, 74, -282, 82, 150, -167, -169, 82,
	307, 309, 310, 73, 101, -84, -217, 143, -244, -243,
	-242, -226, -228, -229, -230, 83, -183, 98, 110, -221,
	278, -212, -212, -212, -212, -212, -216, -164, -216, -216,
	-216, 81, 81, -212, -212, -212, -212, -218, 81, -218,
	-218, -219, 81, -219, -255, -84, -252, -251, -249, -250,
	174, 95, 338, -247, -140, 89, -81, 24, 73, -188,
	-253, -253, -253, -262, 88, -262, 88, 82, 17, -227,
	-226, -129, 222, -257, 198, -254, -248, 81, 29, -234,
	-235, -235, 150, -262, 82, 27, 106, 106, 106, 106,
	338, 155, 31, -226, -129, -202, 166, -202, -202, 88,
	88, -178, 462, -93, 165, 221, -83, 321, 88, 84,
	-100, -100, -100, -100, -100, 158, 155, 206, -100, -100,
	-59, 183, 178, -100, 82, -59, -179, -179, -179, -100,
	-179, -100, 88, -100, -188, -65, 308, 338, 20, -66,
	20, 98, 99, 100, -119, -111, -111, -111, -72, 188,
	109, -281, -281, -73, -73, -280, 150, -5, -141, -281,
	-281, 82, 74, 23, 12, 12, -281, 12, 12, -281,
	-281, -73, -134, -132, 116, -84, -281, -281, 82, 82,
	-281, -281, -281, -281, -281, -275, 429, 309, -104, 71,
	167, 72, -280, -195, -281, -155, 39, 47, 58, -84,
	-84, -139, -155, -171, 20, 12, 54, 54, -105, 13,
	-75, -86, -78, 150, -105, -109, 31, 54, -3, -280,
	-280, -162, -166, -128, -87, -88, -88, -87, -88, 63,
	63, 63, 68, 63, 68, 63, -97, -193, -281, -281,
	-3, -159, 74, -86, -100, -86, -102, -193, 135, -168,
	-170, 311, 308, 314, -262, 88, 82, -242, -230, -214,
	30, 98, -222, 279, -216, -216, -217, -262, 144, -217,
	-217, -217, -225, 88, -225, 89, 89, 83, -32, -27,
	-28, 32, 77, -249, -237, 88, 38, 83, 165, -100,
	73, 73, 73, 16, -157, -188, 82, 83, -130, 223,
	-128, 83, -188, 83, -157, -235, -189, -188, -280, 163,
	30, 30, -129, -130, -217, -262, 464, 463, 83, -100,
	-80, 213, 220, 81, 85, -264, 74, 204, 275, 204,
	207, 166, -32, -100, -175, -175, 32, 308, 441, 439,
	-72, 109, -111, -111, -281, -281, -74, -189, -137, -155,
	-204, 144, 250, 187, 248, 244, 264, 255, 277, 246,
	278, -202, -204, -111, -111, -111, -111, 335, -137, 117,
	-84, 115, -111, -111, 164, 164, 164, -160, 40, 88,
	88, 59, -100, -135, 14, -84, 135, -141, -161, 73,
	-162, -122, -124, -123, -280, -156, -281, -188, -160, -105,
	82, 118, -91, -90, 73, 74, -92, 73, -90, 63,
	63, -281, -105, -86, -105, -105, 150, 308, 312, 313,
	-242, -215, 73, -111, -217, -217, 83, 82, 83, 82,
	83, 82, -184, 375, 110, -28, -27, -237, -237, 89,
	-262, -100, -100, -100, -100, 17, 82, -226, -128, 54,
	-252, 83, -256, -257, -100, -110, -130, -158, 81, 83,
	-261, 338, -263, -262, -188, -188, -188, -100, -179, -179,
	32, -262, -111, -281, -141, -281, -212, -212, -212, -219,
	-212, 238, -212, 238, -281, -281, 20, 20, 20, 20,
	-280, -64, 331, -84, 82, 82, -280, -280, -280, -281,
	88, -216, -136, 15, 17, 28, -161, 82, -281, -281,
	82, 54, 150, -281, -137, -166, -84, -84, 81, -84,
	-137, -105, -220, 275, 10, -216, 88, -216, 89, 89,
	375, 30, 78, 79, 80, 30, 75, 76, -158, -157,
	-188, 200, 182, -281, 82, -223, 338, 341, 23, -157,
	-260, -259, -189, 81, 74, -155, -216, -262, -111, -111,
	-111, -111, -111, -141, 88, -111, -111, -157, -281, -157,
	-157, -196, -216, -144, -149, -176, -84, -120, 29, -124,
	54, -3, -188, -122, -188, -141, -157, -141, -224, 170,
	29, 169, -114, -217, -217, 83, 83, 23, 201, -100,
	-257, 342, 342, -3, 83, 82, 118, -157, -100, -281,
	-281, -281, -281, -67, 128, 338, -281, -281, -281, -281,
	-281, -281, -104, -147, 425, -150, 43, -151, 44, 10,
	-122, 150, 83, -213, 95, 29, 29, -3, -280, 81,
	-57, 338, -259, -241, -189, 88, 89, 83, -281, 336,
	70, 339, -144, 48, 256, -152, 52, -153, -148, 53,
	17, -162, -188, 88, -57, -111, 197, -157, -58, 212,
	429, -264, 59, 337, 340, -145, 50, -143, 49, -143,
	-151, 17, -154, 45, 46, 88, -281, -281, 83, 175,
	-261, 59, -146, 51, 73, 101, 88, 17, 17, -271,
	-272, 73, 214, 338, 73, 101, 88, 88, -272, 73,
	11, 10, 339, -270, 183, 178, 181, 31, -270, 340,
	177, 30, 98,
}

var yyDef = [...]int{
	33, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 816, 0, 554, 554, 554, 554, 554, 554,
	554, 0, 0, 90, -2, -2, 840, 37, 0, 0,
	0, 0, -2, 488, 489, 0, 491, -2, 0, 0,
	500, 1348, 1348, 549, 0, 0, 0, 0, 0, 1346,
	54, 55, 506, 507, 508, 1, 3, 0, 558, 824,
	0, 0, -2, 556, 0, 0, 932, 932, 932, 0,
	85, 86, 0, 0, 0, 840, 930, 0, 0, 0,
	0, 930, 0, 108, 109, 89, -2, 113, 114, 0,
	118, 371, 332, 374, 330, 360, -2, 323, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 227, 227, 0, 0, -2, 323, 323, 323, 0,
	0, 0, 357, 934, 277, 227, 227, 0, 227, 227,
	227, 227, 0, 0, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 0,
	107, 853, 0, 0, 117, 38, 34, 35, 36, 0,
	928, 0, 928, 928, 0, 423, 638, 947, 948, 1087,
	1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 0, 479,
	479, 479, 479, 479, 479, 0, 0, 433, 0, 0,
	0, 0, 476, 473, 476, 0, 0, 0, 453, 0,
	456, 0, 0, 463, 479, 1349, 1349, 1349, 919, 0,
	485, 486, 471, 468, 469, 487, 490, 0, 495, 498,
	943, 944, 0, 513, 0, 1161, 505, 518, 519, 0,
	550, 551, 39, 689, 648, 0, 654, 656, 0, 691,
	692, 693, 694, 695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 721, 722, 723, 724, 801, 802,
	803, 804, 805, 806, 807, 808, 658, 659, 798, 0,
	908, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	789, 0, 758, 758, 758, 758, 758, 758, 758, 758,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 1348,
	0, 528, 0, 816, 50, 0, 554, 559, 560, 859,
	0, 0, 816, 1347, 0, 0, -2, -2, 570, 576,
	577, 578, 579, 555, 0, 582, 586, 0, 0, 0,
	933, 0, 0, 71, 0, 1315, 912, -2, -2, 0,
	0, 945, 946, 921, -2, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, -2, 1106, 0, 0, 127, 128, 0, 37, 253,
	0, 123, 0, 247, 185, 853, 0, 0, 940, 0,
	0, 0, 0, 91, 115, 116, 227, 227, 0, 117,
	117, 339, 340, 341, 0, 0, -2, 251, 0, 324,
	0, 0, 241, 241, 245, 243, 244, 0, 0, 0,
	0, 0, 0, 351, 0, 352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 228, 0, 369,
	370, 278, 0, 0, 0, 0, 349, 350, 0, 0,
	935, 936, 0, 0, 227, 227, 0, 0, 0, 0,
	227, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 844, 0,
	0, 0, 0, 0, 0, -2, 0, 415, 0, 0,
	0, 0, 0, 0, 422, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 479, 0, 476, 479, 0,
	479, 479, 479, 479, 476, 479, 0, 0, 476, 479,
	0, 476, 474, 475, 1349, 1349, 1349, 0, 1349, 1349,
	0, 1349, 1349, 0, 236, 237, 238, 482, 460, 461,
	464, 465, 1350, 1351, 466, 467, 920, 496, 499, 516,
	514, 515, 517, 509, 510, 511, 512, 0, 529, 530,
	535, 0, 0, 0, 0, 541, 542, 543, 0, 0,
	546, 547, 548, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 676, 677,
	678, 679, 680, 681, 682, 655, 0, 669, 0, 0,
	0, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	0, 567, 0, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 790, 0, 742, 750, 0,
	743, 751, 744, 752, 745, 0, 746, 753, 747, 754,
	748, 749, 755, 0, 0, 0, 567, 567, 0, 0,
	40, 520, 521, 0, 621, 938, 824, 0, 569, 862,
	0, 0, 825, 817, 818, 821, 824, 0, 591, 580,
	571, 574, 575, 557, 0, 583, 587, 0, 589, 590,
	0, 0, 69, 0, 637, 0, 593, 595, 596, 597,
	619, 0, 0, 0, 0, 65, 67, 638, 0, 1315,
	918, 0, 73, 74, 0, 0, 0, 208, 923, 924,
	925, -2, 234, 0, 196, 192, 136, 137, 138, 185,
	140, 185, 185, 185, 185, 205, 205, 205, 205, 168,
	169, 170, 171, 172, 0, 0, 155, 185, 185, 185,
	185, 175, 176, 177, 178, 179, 180, 181, 182, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 187, 187,
	187, 189, 189, 0, 38, 0, 219, 0, 821, 0,
	844, 100, 0, 0, 941, 0, 940, 940, 940, 106,
	0, 0, 372, 333, 361, 373, 0, 336, 337, -2,
	0, 0, 323, 0, 325, 0, 235, 0, -2, 0,
	0, 0, 241, 245, 242, 245, 233, 246, 353, 798,
	0, 354, 355, 0, 387, 607, 0, 0, 0, 0,
	0, 393, 394, 395, 0, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 362, 363, 364, 365, 366,
	367, 368, 0, 0, 325, 0, 358, 0, 279, 280,
	0, 0, 283, 284, 285, 286, 0, 0, 289, 290,
	291, 292, 293, 317, 318, 319, 294, 295, 296, 297,
	298, 299, 300, 311, 312, 313, 314, 315, 316, 301,
	302, 303, 304, 305, 308, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 841, 842, 843, 0, 0,
	0, 266, 929, 0, 266, 63, 421, 639, 949, 950,
	480, 481, 431, 454, 479, 434, 457, 435, 437, 436,
	438, 479, 440, 477, 478, 479, 442, 0, 239, 240,
	479, 444, 445, 446, 447, 448, 449, 450, 451, 452,
	0, 459, 0, 0, 0, 497, 501, 502, 503, 504,
	0, 0, 532, 537, 538, 539, 540, 552, 545, 690,
	649, 650, 651, 653, 670, 0, 672, 674, 660, 661,
	685, 686, 687, 0, 0, 0, 0, 683, 665, 0,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 710, 773, 774, 775, 0, 708, 709, 720,
	0, 0, 0, 568, 799, 0, -2, 0, 688, 907,
	824, 0, 0, 0, 0, 693, 801, 0, 693, 801,
	0, 0, 0, 565, 566, 796, 793, 0, 0, 759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 523,
	524, 526, 0, 641, 0, 622, 0, 624, 625, 0,
	939, 859, 51, 41, 0, 860, 0, 0, 0, 0,
	820, 822, 823, 859, 0, 809, 0, 0, 646, 0,
	0, 572, 47, 588, 584, 0, 646, 0, 0, 636,
	0, 0, 0, 0, 0, 0, 626, 0, 0, 629,
	0, 0, 0, 0, 620, 0, 0, 0, -2, 0,
	0, 0, 61, 62, 0, 0, 0, 913, 72, 0,
	0, 77, 78, 914, 915, 916, 917, 0, 110, -2,
	274, 129, 131, 132, 133, 124, 199, 197, 0, 194,
	193, 139, 205, 205, 162, 163, 208, 0, 208, 208,
	208, 0, 0, 156, 157, 158, 159, 150, 0, 151,
	152, 153, 0, 154, 252, 0, 828, 220, 221, 223,
	227, 0, 0, 248, 249, 0, 0, 931, 0, 942,
	0, 0, 0, 119, 120, 121, 122, 117, 0, 0,
	125, 327, 0, 0, 0, 250, 0, 0, 229, 245,
	230, 231, 0, 356, 0, 0, 389, 390, 391, 392,
	0, 0, 0, 325, 327, 208, 0, 281, 282, 287,
	288, 306, 0, 0, 0, 0, 854, 855, 0, 858,
	92, 379, 381, 380, 384, 0, 0, 0, 0, 416,
	418, 267, 268, 828, 0, 420, 432, 439, 441, 476,
	458, 476, 483, 462, 493, 536, 0, 0, 0, 544,
	0, 671, 673, 675, 662, 683, 666, 0, 663, 0,
	0, 657, 725, 0, 0, 567, 0, 816, 859, 729,
	730, 0, 0, 0, 0, 0, 766, 0, 0, 767,
	0, 816, 0, 794, 0, 0, 741, 760, 0, 0,
	761, 762, 763, 764, 765, 522, 525, 527, 601, 0,
	0, 0, 0, 623, 937, 43, 0, 0, 0, 826,
	827, 819, 42, 0, 926, 927, 810, 811, 812, 0,
	581, 592, 573, 0, 824, 901, 0, 0, 893, 0,
	0, 646, 909, 0, 594, 615, 617, 0, 612, 627,
	628, 630, 0, 632, 0, 634, 635, 598, 599, 600,
	0, 646, 0, 646, 66, 646, 68, 0, 640, 75,
	76, 0, 0, 82, 209, 210, 117, 276, 130, 201,
	0, 198, 135, 195, 208, 208, 164, 206, 207, 165,
	166, 167, 0, 183, 0, 0, 0, 269, 87, 832,
	831, 227, 227, 222, 0, 225, 0, 186, 0, 102,
	0, 0, 0, 0, 331, 605, 0, 342, 343, 0,
	326, 386, 0, 219, 0, 232, 799, 608, 0, 0,
	344, 0, 327, 347, 348, 359, 309, 310, 307, 603,
	845, 846, 847, 0, 857, 95, 0, 0, 0, 0,
	377, 0, 419, 64, 479, 479, 531, 0, 534, 0,
	664, 0, 684, 667, 726, 727, 0, 800, 824, 45,
	0, 185, 185, 779, 185, 189, 782, 185, 784, 185,
	787, 0, 0, 0, 0, 0, 0, 0, 791, 740,
	797, 0, 0, 0, 0, 0, 0, 0, 0, 205,
	864, 861, 44, 814, 0, 647, 585, 48, 52, 0,
	901, 892, 903, 905, 0, 0, 0, 897, 0, 816,
	0, 0, 609, 616, 0, 0, 610, 0, 611, 631,
	633, -2, 816, 646, 59, 60, 0, 79, 80, 81,
	275, 203, 0, 200, 160, 161, 205, 0, 205, 0,
	190, 0, 258, 270, 0, 829, 830, 0, 0, 224,
	226, 603, 103, 104, 105, 0, 0, 126, 328, 0,
	218, 0, 0, 411, 408, 345, 346, 0, 0, 856,
	378, 0, 93, 94, 0, 0, 383, 417, 443, 455,
	533, 553, 668, 728, 859, 731, 776, 205, 780, 781,
	783, 785, 786, 788, 733, 732, 0, 0, 0, 0,
	0, 824, 0, 795, 0, 0, 0, 0, 0, 621,
	205, 884, 49, 0, 0, 0, 53, 0, 906, 0,
	0, 0, 0, 70, 824, 910, 911, 613, 0, 618,
	824, 58, 211, 204, 0, 208, 184, 208, 0, 0,
	271, 833, 834, 835, 836, 837, 838, 839, 0, 334,
	606, 0, 0, 388, 0, 396, 0, 0, 0, 0,
	96, 97, 0, 0, 0, 46, 777, 778, 0, 0,
	0, 0, 768, 0, 792, 0, 0, 0, 643, 0,
	0, 641, 866, 865, 878, 882, 815, 813, 0, 904,
	0, 896, 899, 895, 898, 56, 0, 57, 216, 0,
	213, 215, 202, 173, 174, 188, 191, 0, 0, 0,
	412, 409, 410, 848, 604, 0, 0, 0, 385, 734,
	736, 735, 737, 0, 0, 0, 739, 756, 757, 642,
	644, 645, 602, 884, 0, 877, 880, -2, 0, 0,
	894, 0, 614, 134, 0, 212, 214, 848, 0, 0,
	375, 850, 98, 99, 320, 321, 322, 92, 738, 0,
	0, 0, 871, 869, 869, 882, 0, 886, 0, 891,
	0, 902, 900, 217, 88, 0, 0, 0, 0, 851,
	852, 95, 769, 0, 772, 874, 0, 867, 870, 868,
	879, 0, 885, 0, 0, 883, 413, 414, 254, 0,
	382, 770, 863, 0, 872, 873, 881, 0, 0, 255,
	256, 0, 849, 0, 875, 876, 887, 889, 257, 0,
	0, 0, 0, 259, 261, 262, 0, 0, 260, 771,
	263, 264, 265,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 465,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:409
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:414
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:415
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:486
		{
			yyVAL.statement = &Load{}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:492
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:532
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:540
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:546
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:577
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:589
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.insertAction = InsertAct
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:643
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:663
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:672
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:688
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.characteristic = ReadWrite
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.characteristic = ReadOnly
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.isolationLevel = Serializable
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.scope = SessionScope
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.scope = GlobalScope
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:752
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:759
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:768
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			yyVAL.boolean = false
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.boolean = true
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:803
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:831
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:845
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].bytes)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:850
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:855
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:860
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:867
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharsets = nil
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:905
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:918
		{
			yyVAL.boolean = false
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.boolean = true
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:928
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:938
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:942
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:953
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:983
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1002
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 174:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1224
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.literal = nil
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1238
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1243
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 188:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1247
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 191:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1265
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1273
		{
			yyVAL.boolean = false
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.boolean = true
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1282
		{
			yyVAL.boolean = false
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.boolean = true
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1292
		{
			yyVAL.boolean = false
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1296
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1300
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1305
		{
			yyVAL.optVal = nil
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1314
		{
			yyVAL.optVal = nil
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1323
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1332
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1345
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1358
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.colKeyOpt = colKey
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.literal = nil
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1394
		{
			yyVAL.indexOptions = nil
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1423
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1427
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = ""
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1455
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1459
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = ""
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = yyDollar[2].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = "key"
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = yyDollar[1].str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1537
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1557
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 254:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1563
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 255:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1567
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 256:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1571
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 257:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1575
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1581
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1587
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1615
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = ""
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1633
		{
			yyVAL.boolean = true
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.boolean = true
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1641
		{
			yyVAL.boolean = false
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1646
		{
			yyVAL.tableOptions = nil
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1680
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1684
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1688
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1692
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1708
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1712
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1716
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1724
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1728
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1732
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1740
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1748
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1768
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1784
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1788
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1792
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = ""
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.bytes = []byte("")
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1843
		{
			yyVAL.colName = nil
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1847
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1852
		{
			yyVAL.colName = nil
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1861
		{
			yyVAL.alterOptions = nil
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1869
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 334:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1881
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1895
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1921
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 345:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1929
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1933
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1937
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1941
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1969
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1973
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1977
		{
			yyVAL.alterOption = &Force{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1981
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1985
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1991
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2033
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2039
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2045
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2052
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 375:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2069
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2076
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2083
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2095
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 382:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2113
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2126
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 385:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2140
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2153
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2157
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 388:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2161
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2165
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2169
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2173
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2177
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2185
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 396:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2193
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2237
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2242
		{
			yyVAL.boolean = false
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.boolean = false
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.boolean = true
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2267
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2271
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2277
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2287
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2293
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2297
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2325
		{
			yyVAL.statement = &OtherRead{}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2343
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2359
		{
			yyVAL.statement = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2363
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2371
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2379
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2383
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2391
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Table, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilter}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2395
		{
			yyVAL.statement = &Show{&ShowBasic{Command: TableFull, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2399
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilter}}
		}
	case 443:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2403
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2407
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2411
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2415
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2419
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2436
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2440
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2444
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2448
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2452
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2461
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2465
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2469
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2482
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2491
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2505
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2509
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = "extended "
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = "full "
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2573
		{
			yyVAL.showFilter = nil
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2581
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2587
		{
			yyVAL.showFilter = nil
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2597
		{
			yyVAL.empty = struct{}{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.empty = struct{}{}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.empty = struct{}{}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2611
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2621
		{
			yyVAL.statement = &Begin{}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.statement = &Begin{}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.statement = &Commit{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.statement = &Rollback{}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2641
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.empty = struct{}{}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.empty = struct{}{}
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2651
		{
			yyVAL.empty = struct{}{}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.empty = struct{}{}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2664
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2669
		{
			yyVAL.explainType = EmptyType
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.explainType = JSONType
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2677
		{
			yyVAL.explainType = TreeType
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2681
		{
			yyVAL.explainType = VitessType
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2685
		{
			yyVAL.explainType = TraditionalType
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.explainType = AnalyzeType
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2699
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2717
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2740
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2760
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2770
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.lockType = Read
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.lockType = ReadLocal
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2790
		{
			yyVAL.lockType = Write
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2810
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2814
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2818
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2822
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2826
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2836
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2891
		{
			yyVAL.boolean = false
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.boolean = true
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.boolean = true
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = ""
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].colIdent.String()
		}
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2913
		{
			setAllowComments(yylex, true)
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2917
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2923
		{
			yyVAL.bytes2 = nil
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2927
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.boolean = true
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2937
		{
			yyVAL.boolean = false
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.boolean = true
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = SQLCacheStr
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2959
		{
			yyVAL.boolean = false
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.boolean = true
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.boolean = true
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2972
		{
			yyVAL.selectExprs = nil
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2981
		{
			yyVAL.strs = nil
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2985
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2997
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3007
		{
			yyVAL.str = SQLCacheStr
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = DistinctStr
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = DistinctStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = StraightJoinHint
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3023
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3051
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3056
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3060
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3064
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3076
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3090
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3120
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3124
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3129
		{
			yyVAL.columns = nil
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3153
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3166
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3170
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3174
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3178
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3184
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3186
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3190
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3196
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3198
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3201
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3206
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3214
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3227
		{
			yyVAL.joinType = NormalJoinType
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3231
		{
			yyVAL.joinType = NormalJoinType
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.joinType = NormalJoinType
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.joinType = StraightJoinType
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3247
		{
			yyVAL.joinType = LeftJoinType
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3251
		{
			yyVAL.joinType = LeftJoinType
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3255
		{
			yyVAL.joinType = RightJoinType
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3259
		{
			yyVAL.joinType = RightJoinType
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3265
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3299
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3304
		{
			yyVAL.indexHints = nil
		}
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3308
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3312
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3316
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3320
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3325
		{
			yyVAL.expr = nil
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3369
		{
			yyVAL.str = ""
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3379
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3393
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3409
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 668:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3435
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3486
		{
			yyVAL.expr = nil
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3490
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3504
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3614
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3618
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3622
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3626
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3634
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3648
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3652
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3674
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 735:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3728
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 738:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3732
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3736
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3740
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3744
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3758
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3767
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3772
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3777
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3788
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3816
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 756:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3820
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 757:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3834
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3860
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3864
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3868
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3874
		{
			yyVAL.matchExprOption = NoOption
		}
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3878
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3882
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3886
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3890
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3910
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3914
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3918
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3926
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3930
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3948
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3952
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3960
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.expr = nil
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = string("")
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3994
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3999
		{
			yyVAL.expr = nil
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4003
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4013
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4017
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4035
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4047
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4051
		{
			yyVAL.expr = &NullVal{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4057
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4066
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4070
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4075
		{
			yyVAL.exprs = nil
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4084
		{
			yyVAL.expr = nil
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4088
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.orderBy = nil
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4097
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4107
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4113
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4118
		{
			yyVAL.orderDirection = AscOrder
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.orderDirection = AscOrder
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.orderDirection = DescOrder
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4131
		{
			yyVAL.limit = nil
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4135
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4139
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4143
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4148
		{
			yyVAL.alterOptions = nil
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4156
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4171
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4175
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4183
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4189
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4193
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = yyDollar[3].str
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = yyDollar[2].str
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = "cascaded"
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = yyDollar[3].str
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4287
		{
			yyVAL.lock = NoLock
		}
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4291
		{
			yyVAL.lock = ForUpdateLock
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4295
		{
			yyVAL.lock = ShareModeLock
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4300
		{
			yyVAL.selectInto = nil
		}
	case 863:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4304
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4308
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4312
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.str = " header"
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4339
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = " manifest on"
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4347
		{
			yyVAL.str = " manifest off"
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = " overwrite on"
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = " overwrite off"
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4366
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = ""
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4416
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4420
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4429
		{
			yyVAL.str = " optionally"
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4442
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4446
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4450
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4454
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4458
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4468
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4476
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4481
		{
			yyVAL.updateExprs = nil
		}
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4485
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4491
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4495
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4505
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4511
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4531
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4547
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4557
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4561
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4569
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4577
		{
			yyVAL.bytes = []byte("charset")
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4587
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4591
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4595
		{
			yyVAL.expr = &Default{}
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4604
		{
			yyVAL.boolean = false
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4606
		{
			yyVAL.boolean = true
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4609
		{
			yyVAL.boolean = false
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4611
		{
			yyVAL.boolean = true
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4614
		{
			yyVAL.ignore = false
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			yyVAL.ignore = true
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4619
		{
			yyVAL.empty = struct{}{}
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.empty = struct{}{}
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4627
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4632
		{
			yyVAL.exprs = nil
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4636
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4641
		{
			yyVAL.indexOptions = nil
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4653
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4657
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4670
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4674
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5101
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			decNesting(yylex)
		}
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5115
		{
			skipToEnd(yylex)
		}
	case 1349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5120
		{
			skipToEnd(yylex)
		}
	case 1350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5124
		{
			skipToEnd(yylex)
		}
	case 1351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5128
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
