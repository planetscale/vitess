// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMCOLLECTION = 57679
const GEOMETRYCOLLECTION = 57680
const MULTIPOINT = 57681
const MULTILINESTRING = 57682
const MULTIPOLYGON = 57683
const ASCII = 57684
const UNICODE = 57685
const NULLX = 57686
const AUTO_INCREMENT = 57687
const APPROXNUM = 57688
const SIGNED = 57689
const UNSIGNED = 57690
const ZEROFILL = 57691
const CODE = 57692
const COLLATION = 57693
const COLUMNS = 57694
const DATABASES = 57695
const ENGINES = 57696
const EVENT = 57697
const EXTENDED = 57698
const FIELDS = 57699
const FULL = 57700
const FUNCTION = 57701
const GTID_EXECUTED = 57702
const KEYSPACES = 57703
const OPEN = 57704
const PLUGINS = 57705
const PRIVILEGES = 57706
const PROCESSLIST = 57707
const SCHEMAS = 57708
const TABLES = 57709
const TRIGGERS = 57710
const USER = 57711
const VGTID_EXECUTED = 57712
const VITESS_KEYSPACES = 57713
const VITESS_METADATA = 57714
const VITESS_MIGRATIONS = 57715
const VITESS_REPLICATION_STATUS = 57716
const VITESS_SHARDS = 57717
const VITESS_TABLETS = 57718
const VITESS_TARGET = 57719
const VSCHEMA = 57720
const VITESS_THROTTLED_APPS = 57721
const NAMES = 57722
const GLOBAL = 57723
const SESSION = 57724
const ISOLATION = 57725
const LEVEL = 57726
const READ = 57727
const WRITE = 57728
const ONLY = 57729
const REPEATABLE = 57730
const COMMITTED = 57731
const UNCOMMITTED = 57732
const SERIALIZABLE = 57733
const CURRENT_TIMESTAMP = 57734
const DATABASE = 57735
const CURRENT_DATE = 57736
const NOW = 57737
const CURRENT_TIME = 57738
const LOCALTIME = 57739
const LOCALTIMESTAMP = 57740
const CURRENT_USER = 57741
const UTC_DATE = 57742
const UTC_TIME = 57743
const UTC_TIMESTAMP = 57744
const DAY = 57745
const DAY_HOUR = 57746
const DAY_MICROSECOND = 57747
const DAY_MINUTE = 57748
const DAY_SECOND = 57749
const HOUR = 57750
const HOUR_MICROSECOND = 57751
const HOUR_MINUTE = 57752
const HOUR_SECOND = 57753
const MICROSECOND = 57754
const MINUTE = 57755
const MINUTE_MICROSECOND = 57756
const MINUTE_SECOND = 57757
const MONTH = 57758
const QUARTER = 57759
const SECOND = 57760
const SECOND_MICROSECOND = 57761
const YEAR_MONTH = 57762
const WEEK = 57763
const REPLACE = 57764
const CONVERT = 57765
const CAST = 57766
const SUBSTR = 57767
const SUBSTRING = 57768
const GROUP_CONCAT = 57769
const SEPARATOR = 57770
const TIMESTAMPADD = 57771
const TIMESTAMPDIFF = 57772
const WEIGHT_STRING = 57773
const LTRIM = 57774
const RTRIM = 57775
const TRIM = 57776
const JSON_ARRAY = 57777
const JSON_OBJECT = 57778
const JSON_QUOTE = 57779
const JSON_DEPTH = 57780
const JSON_TYPE = 57781
const JSON_LENGTH = 57782
const JSON_VALID = 57783
const JSON_ARRAY_APPEND = 57784
const JSON_ARRAY_INSERT = 57785
const JSON_INSERT = 57786
const JSON_MERGE = 57787
const JSON_MERGE_PATCH = 57788
const JSON_MERGE_PRESERVE = 57789
const JSON_REMOVE = 57790
const JSON_REPLACE = 57791
const JSON_SET = 57792
const JSON_UNQUOTE = 57793
const REGEXP_INSTR = 57794
const REGEXP_LIKE = 57795
const REGEXP_REPLACE = 57796
const REGEXP_SUBSTR = 57797
const ExtractValue = 57798
const UpdateXML = 57799
const GET_LOCK = 57800
const RELEASE_LOCK = 57801
const RELEASE_ALL_LOCKS = 57802
const IS_FREE_LOCK = 57803
const IS_USED_LOCK = 57804
const LOCATE = 57805
const POSITION = 57806
const MATCH = 57807
const AGAINST = 57808
const BOOLEAN = 57809
const LANGUAGE = 57810
const WITH = 57811
const QUERY = 57812
const EXPANSION = 57813
const WITHOUT = 57814
const VALIDATION = 57815
const UNUSED = 57816
const ARRAY = 57817
const BYTE = 57818
const CUME_DIST = 57819
const DESCRIPTION = 57820
const DENSE_RANK = 57821
const EMPTY = 57822
const EXCEPT = 57823
const FIRST_VALUE = 57824
const GROUPING = 57825
const GROUPS = 57826
const JSON_TABLE = 57827
const LAG = 57828
const LAST_VALUE = 57829
const LATERAL = 57830
const LEAD = 57831
const NTH_VALUE = 57832
const NTILE = 57833
const OF = 57834
const OVER = 57835
const PERCENT_RANK = 57836
const RANK = 57837
const RECURSIVE = 57838
const ROW_NUMBER = 57839
const SYSTEM = 57840
const WINDOW = 57841
const ACTIVE = 57842
const ADMIN = 57843
const AUTOEXTEND_SIZE = 57844
const BUCKETS = 57845
const CLONE = 57846
const COLUMN_FORMAT = 57847
const COMPONENT = 57848
const DEFINITION = 57849
const ENFORCED = 57850
const ENGINE_ATTRIBUTE = 57851
const EXCLUDE = 57852
const FOLLOWING = 57853
const GET_MASTER_PUBLIC_KEY = 57854
const HISTOGRAM = 57855
const HISTORY = 57856
const INACTIVE = 57857
const INVISIBLE = 57858
const LOCKED = 57859
const MASTER_COMPRESSION_ALGORITHMS = 57860
const MASTER_PUBLIC_KEY_PATH = 57861
const MASTER_TLS_CIPHERSUITES = 57862
const MASTER_ZSTD_COMPRESSION_LEVEL = 57863
const NESTED = 57864
const NETWORK_NAMESPACE = 57865
const NOWAIT = 57866
const NULLS = 57867
const OJ = 57868
const OLD = 57869
const OPTIONAL = 57870
const ORDINALITY = 57871
const ORGANIZATION = 57872
const OTHERS = 57873
const PARTIAL = 57874
const PATH = 57875
const PERSIST = 57876
const PERSIST_ONLY = 57877
const PRECEDING = 57878
const PRIVILEGE_CHECKS_USER = 57879
const PROCESS = 57880
const RANDOM = 57881
const REFERENCE = 57882
const REQUIRE_ROW_FORMAT = 57883
const RESOURCE = 57884
const RESPECT = 57885
const RESTART = 57886
const RETAIN = 57887
const REUSE = 57888
const ROLE = 57889
const SECONDARY = 57890
const SECONDARY_ENGINE = 57891
const SECONDARY_ENGINE_ATTRIBUTE = 57892
const SECONDARY_LOAD = 57893
const SECONDARY_UNLOAD = 57894
const SIMPLE = 57895
const SKIP = 57896
const SRID = 57897
const THREAD_PRIORITY = 57898
const TIES = 57899
const UNBOUNDED = 57900
const VCPU = 57901
const VISIBLE = 57902
const RETURNING = 57903
const FORMAT = 57904
const TREE = 57905
const VITESS = 57906
const TRADITIONAL = 57907
const LOCAL = 57908
const LOW_PRIORITY = 57909
const NO_WRITE_TO_BINLOG = 57910
const LOGS = 57911
const ERROR = 57912
const GENERAL = 57913
const HOSTS = 57914
const OPTIMIZER_COSTS = 57915
const USER_RESOURCES = 57916
const SLOW = 57917
const CHANNEL = 57918
const RELAY = 57919
const EXPORT = 57920
const CURRENT = 57921
const ROW = 57922
const ROWS = 57923
const AVG_ROW_LENGTH = 57924
const CONNECTION = 57925
const CHECKSUM = 57926
const DELAY_KEY_WRITE = 57927
const ENCRYPTION = 57928
const ENGINE = 57929
const INSERT_METHOD = 57930
const MAX_ROWS = 57931
const MIN_ROWS = 57932
const PACK_KEYS = 57933
const PASSWORD = 57934
const FIXED = 57935
const DYNAMIC = 57936
const COMPRESSED = 57937
const REDUNDANT = 57938
const COMPACT = 57939
const ROW_FORMAT = 57940
const STATS_AUTO_RECALC = 57941
const STATS_PERSISTENT = 57942
const STATS_SAMPLE_PAGES = 57943
const STORAGE = 57944
const MEMORY = 57945
const DISK = 57946
const PARTITIONS = 57947
const LINEAR = 57948
const RANGE = 57949
const LIST = 57950
const SUBPARTITION = 57951
const SUBPARTITIONS = 57952
const HASH = 57953

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	12, 47,
	13, 47,
	-2, 37,
	-1, 49,
	1, 145,
	629, 145,
	-2, 153,
	-1, 50,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 57,
	35, 741,
	235, 741,
	246, 741,
	281, 755,
	282, 755,
	-2, 743,
	-1, 62,
	237, 768,
	-2, 766,
	-1, 116,
	234, 1393,
	-2, 119,
	-1, 118,
	1, 146,
	629, 146,
	-2, 153,
	-1, 129,
	133, 384,
	240, 384,
	-2, 487,
	-1, 148,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 744,
	218, 1414,
	-2, 1410,
	-1, 745,
	218, 1415,
	-2, 1411,
	-1, 821,
	59, 836,
	-2, 851,
	-1, 858,
	148, 1838,
	-2, 112,
	-1, 859,
	148, 1669,
	-2, 113,
	-1, 865,
	148, 1756,
	-2, 1387,
	-1, 1015,
	148, 1594,
	-2, 1384,
	-1, 1056,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1141,
	1, 555,
	629, 555,
	-2, 153,
	-1, 1405,
	59, 837,
	-2, 856,
	-1, 1406,
	59, 838,
	-2, 857,
	-1, 1458,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1537,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1546,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1879,
	218, 1419,
	-2, 1413,
	-1, 1969,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 1976,
	25, 174,
	-2, 176,
	-1, 2253,
	87, 39,
	-2, 893,
	-1, 2310,
	77, 94,
	87, 94,
	-2, 913,
	-1, 2378,
	604, 668,
	-2, 642,
	-1, 2541,
	49, 1354,
	-2, 1348,
	-1, 2792,
	87, 39,
	-2, 894,
	-1, 2830,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 885,
	-1, 3164,
	604, 668,
	-2, 656,
	-1, 3252,
	22, 1758,
	32, 1758,
	174, 1758,
	257, 1758,
	315, 1758,
	316, 1758,
	317, 1758,
	318, 1758,
	319, 1758,
	320, 1758,
	321, 1758,
	323, 1758,
	324, 1758,
	325, 1758,
	326, 1758,
	327, 1758,
	328, 1758,
	329, 1758,
	330, 1758,
	331, 1758,
	332, 1758,
	333, 1758,
	334, 1758,
	336, 1758,
	338, 1758,
	339, 1758,
	340, 1758,
	341, 1758,
	342, 1758,
	343, 1758,
	344, 1758,
	345, 1758,
	346, 1758,
	349, 1758,
	350, 1758,
	351, 1758,
	352, 1758,
	353, 1758,
	355, 1758,
	356, 1758,
	357, 1758,
	358, 1758,
	484, 1758,
	-2, 600,
}

const yyPrivate = 57344

const yyLast = 46148

var yyAct = [...]int{
	744, 753, 2938, 2483, 2940, 746, 3324, 3335, 3145, 2939,
	647, 3229, 3293, 3250, 2767, 747, 3294, 2907, 1966, 1461,
	3195, 1919, 2690, 3218, 628, 2596, 2603, 1899, 3129, 1204,
	837, 2644, 2194, 3078, 2653, 2554, 3127, 2894, 2214, 2967,
	5, 2241, 2658, 634, 2655, 723, 2557, 3117, 2654, 722,
	2502, 2652, 39, 188, 2657, 2656, 188, 2036, 595, 188,
	2672, 1420, 2673, 630, 610, 1383, 188, 2555, 814, 2558,
	2611, 2801, 2481, 1901, 188, 2795, 2438, 2972, 2281, 658,
	721, 2675, 1939, 1923, 720, 2821, 2482, 2552, 2542, 188,
	626, 2304, 1999, 2268, 2787, 2343, 2695, 2422, 2375, 2024,
	2004, 1018, 2344, 2067, 2345, 863, 838, 157, 1955, 816,
	2293, 610, 40, 2260, 610, 188, 610, 1943, 38, 1757,
	2243, 2274, 1515, 1873, 1407, 1866, 1840, 143, 2414, 818,
	1776, 822, 1544, 1715, 2045, 622, 1944, 1931, 2084, 2023,
	860, 2337, 2006, 1182, 1562, 1046, 98, 1450, 2312, 99,
	840, 1064, 1429, 639, 1946, 1153, 1297, 1387, 94, 1783,
	1734, 1839, 1664, 1025, 1225, 1660, 1057, 1051, 1022, 1551,
	2021, 1643, 1054, 1026, 1052, 1053, 1281, 828, 1836, 1257,
	1196, 1510, 1924, 1449, 1202, 1669, 1995, 1447, 161, 126,
	127, 850, 1137, 121, 824, 119, 1434, 120, 101, 2,
	823, 826, 1536, 617, 78, 87, 100, 1891, 1305, 3154,
	92, 2368, 3325, 1301, 190, 191, 192, 2038, 2039, 2040,
	2038, 2895, 2641, 3180, 1876, 2398, 2397, 2082, 2366, 825,
	2887, 2663, 79, 3277, 10, 9, 845, 849, 122, 8,
	566, 105, 106, 107, 2660, 110, 93, 2850, 116, 3181,
	1628, 185, 831, 128, 561, 89, 1093, 599, 89, 2663,
	599, 89, 1226, 759, 760, 761, 759, 760, 761, 2430,
	2431, 618, 1737, 89, 810, 811, 812, 813, 3176, 2943,
	821, 1019, 1068, 2943, 817, 815, 3175, 1722, 1721, 2661,
	190, 191, 192, 864, 1896, 1897, 1720, 184, 857, 596,
	1719, 1044, 832, 1067, 1101, 1043, 839, 122, 852, 853,
	3230, 2667, 1042, 1718, 1041, 1717, 1040, 2661, 1700, 1709,
	1226, 123, 1094, 1097, 1098, 620, 2239, 621, 2538, 3260,
	2756, 2270, 2506, 3297, 166, 2388, 1414, 2071, 3281, 2667,
	1035, 1030, 3345, 3258, 1110, 3271, 3279, 582, 3292, 184,
	2772, 3315, 3264, 3265, 2771, 2391, 627, 2069, 3130, 580,
	2613, 2614, 2215, 3280, 2942, 1727, 2714, 3259, 2942, 1236,
	3074, 3278, 3073, 123, 1092, 122, 3176, 2326, 599, 2900,
	1091, 2070, 2901, 3306, 3084, 3236, 166, 3274, 3236, 2127,
	2919, 2908, 163, 3219, 164, 3226, 2064, 3083, 1766, 577,
	80, 3255, 2732, 2918, 1525, 2593, 2594, 1189, 591, 1191,
	2321, 2015, 2240, 2320, 183, 2592, 2322, 1961, 1962, 1451,
	1927, 1452, 2664, 587, 2284, 2406, 2429, 1236, 2124, 2405,
	1960, 1199, 1172, 808, 80, 807, 2009, 2369, 3159, 3146,
	2333, 1140, 1034, 1173, 163, 1036, 164, 1188, 1190, 2285,
	2664, 1166, 80, 80, 2125, 82, 1088, 2722, 1258, 2720,
	600, 1979, 1978, 600, 1177, 1178, 183, 2612, 1160, 1232,
	2798, 2692, 1224, 1161, 2277, 2278, 1898, 608, 89, 2615,
	2711, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1266,
	1268, 1269, 2467, 567, 599, 569, 583, 1708, 602, 606,
	601, 573, 2985, 571, 575, 584, 576, 3298, 570, 612,
	581, 2696, 89, 572, 585, 586, 589, 592, 593, 594,
	590, 588, 1391, 579, 603, 167, 1136, 1232, 3299, 1174,
	89, 89, 2376, 1039, 173, 1146, 1147, 1167, 1198, 2415,
	2046, 2401, 1039, 1160, 1031, 1186, 2090, 2085, 1161, 1187,
	599, 1033, 1032, 1710, 1711, 1712, 1159, 2693, 1158, 1192,
	1179, 188, 599, 188, 1618, 1649, 188, 1149, 3327, 1644,
	1180, 2096, 2093, 2095, 2094, 2097, 2098, 167, 2008, 2685,
	3106, 600, 3107, 1185, 1175, 1176, 173, 2686, 1193, 1181,
	1142, 1037, 1927, 1039, 1135, 2417, 610, 1206, 610, 610,
	1037, 2091, 1090, 1111, 2889, 1925, 1926, 2103, 1619, 2104,
	1620, 2105, 3058, 610, 610, 1107, 1108, 1109, 2888, 1112,
	1113, 1114, 1115, 2106, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1116, 2089, 3272, 2694, 2087, 1047, 2885, 2049,
	2468, 1048, 158, 1077, 2505, 1218, 1075, 2947, 1139, 1940,
	1275, 1276, 1277, 1278, 39, 1048, 1086, 1085, 1084, 1083,
	1288, 1082, 1081, 1292, 1231, 1228, 1229, 1230, 1235, 1237,
	1234, 1080, 1233, 1079, 1074, 2088, 1283, 1394, 1529, 1087,
	2615, 1023, 1227, 3304, 1272, 1272, 1060, 600, 1023, 3339,
	1023, 3346, 1021, 3153, 158, 2367, 1096, 1059, 604, 1661,
	1038, 2125, 1059, 1170, 2022, 851, 1095, 1550, 2421, 1038,
	2370, 2418, 2075, 1156, 2074, 1162, 1163, 1164, 1165, 597,
	1194, 1045, 1231, 1228, 1229, 1230, 1235, 1237, 1234, 2335,
	1233, 1657, 2068, 3232, 598, 1212, 3232, 1104, 1200, 1201,
	1227, 2634, 2403, 600, 1103, 1138, 2400, 2799, 2244, 2246,
	3263, 2884, 1523, 1522, 3231, 600, 756, 3231, 1521, 756,
	1038, 1651, 756, 1650, 2386, 1652, 1653, 1925, 1926, 2434,
	2139, 1066, 1208, 1209, 1658, 1519, 565, 1207, 560, 2413,
	2066, 3142, 2412, 2665, 2666, 1279, 2837, 1378, 1967, 1078,
	1273, 1274, 1076, 2817, 3262, 1381, 2669, 2712, 188, 159,
	2317, 2280, 610, 610, 2917, 2225, 171, 1769, 1438, 1358,
	2012, 2665, 2666, 1151, 1549, 118, 2848, 2849, 188, 1630,
	1629, 1631, 1632, 1633, 2669, 2941, 2439, 2390, 2275, 2941,
	1269, 1272, 2591, 1155, 79, 1395, 1183, 1648, 610, 1221,
	1219, 188, 834, 2126, 1220, 1197, 610, 179, 3167, 1089,
	2013, 159, 610, 1066, 1066, 1397, 1670, 2011, 171, 1401,
	1307, 1303, 2424, 1304, 1382, 818, 2880, 2423, 88, 2424,
	2811, 2389, 1065, 83, 2423, 860, 1398, 2086, 1654, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	1157, 2014, 1148, 1145, 1453, 178, 180, 181, 182, 179,
	1222, 2010, 88, 1169, 2459, 3337, 1242, 1784, 3338, 2441,
	3336, 1784, 2245, 2157, 1171, 1399, 113, 2359, 1400, 98,
	88, 88, 99, 1364, 1365, 1366, 1367, 1368, 1382, 1932,
	1933, 160, 165, 162, 168, 169, 170, 172, 174, 175,
	176, 177, 1066, 1240, 1241, 1066, 3307, 178, 180, 181,
	182, 1241, 1388, 2981, 1065, 1065, 1102, 2855, 2854, 2053,
	1099, 1059, 1062, 1063, 2063, 1023, 1559, 1558, 1548, 1056,
	1060, 101, 2065, 1242, 1154, 2451, 2450, 2449, 2443, 2061,
	2447, 1184, 2442, 1645, 2440, 1646, 114, 1066, 1647, 2445,
	1055, 1264, 1265, 1267, 1266, 1268, 1269, 1077, 2444, 2058,
	1385, 1671, 1141, 1075, 1242, 1729, 1731, 1732, 188, 1739,
	1402, 1396, 1511, 2058, 815, 3347, 2446, 2448, 1448, 1419,
	817, 1416, 1520, 1740, 1270, 1271, 1738, 3300, 864, 1730,
	2131, 2132, 2133, 2838, 1443, 1444, 2062, 3197, 1239, 3135,
	1240, 1241, 830, 1065, 3341, 610, 1065, 1546, 1069, 1059,
	2060, 1069, 1059, 1071, 3066, 1555, 1071, 1072, 1070, 1557,
	1072, 1070, 1560, 1561, 610, 610, 2914, 610, 2915, 610,
	610, 1638, 610, 610, 610, 610, 610, 610, 1073, 1636,
	3198, 3065, 3136, 759, 760, 761, 1592, 1593, 1065, 610,
	1258, 188, 1598, 3056, 1059, 1062, 1063, 2930, 1023, 1414,
	3348, 1556, 1056, 1060, 2929, 1239, 1789, 1240, 1241, 2862,
	1790, 188, 2183, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1267, 1266, 1268, 1269, 610, 1625, 188, 2861, 1591, 855,
	2851, 1594, 2642, 1596, 2630, 1637, 1239, 1659, 1240, 1241,
	610, 2341, 188, 1635, 1242, 2461, 1542, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1267, 1266, 1268, 1269, 188, 2340,
	2018, 1427, 1242, 1639, 1623, 188, 1423, 1622, 1535, 190,
	191, 192, 1621, 2845, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 610, 1613, 1611, 1605, 1554, 1602, 1624,
	1595, 190, 191, 192, 1601, 2324, 1600, 610, 610, 190,
	191, 192, 1242, 2034, 1552, 1552, 1571, 1242, 1258, 1564,
	2433, 1565, 1518, 1567, 1569, 188, 1424, 1573, 1575, 1577,
	1579, 1581, 3301, 1553, 1242, 1524, 1258, 1426, 1545, 1533,
	1531, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1266,
	1268, 1269, 1532, 3162, 3161, 3311, 1414, 1666, 3139, 1259,
	1260, 1261, 1262, 1263, 1264, 1265, 1267, 1266, 1268, 1269,
	190, 191, 192, 610, 2032, 1764, 1764, 1761, 1765, 1762,
	1762, 1743, 3138, 3137, 3061, 3046, 1239, 1599, 1240, 1241,
	3045, 1772, 2980, 610, 2978, 3309, 1414, 2925, 2859, 1735,
	3242, 1414, 1672, 1673, 1239, 2844, 1240, 1241, 2697, 610,
	610, 190, 191, 192, 1662, 2030, 1677, 3240, 1414, 2633,
	2632, 2350, 1674, 1684, 1685, 1686, 1283, 2338, 1380, 1678,
	122, 1680, 1681, 1682, 1683, 1042, 1733, 1041, 1687, 1040,
	2080, 1381, 1242, 1785, 1239, 2079, 1240, 1241, 1922, 1239,
	1699, 1240, 1241, 1904, 1676, 1869, 1260, 1261, 1262, 1263,
	1264, 1265, 1267, 1266, 1268, 1269, 1239, 1389, 1240, 1241,
	1701, 1242, 1667, 1258, 1698, 2138, 1634, 1697, 1242, 190,
	191, 192, 1242, 1414, 1826, 1626, 1616, 1612, 1877, 1608,
	188, 1705, 1706, 1607, 1837, 610, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1267, 1266, 1268, 1269, 1736, 1606, 1425,
	1382, 1262, 1263, 1264, 1265, 1267, 1266, 1268, 1269, 188,
	1195, 2689, 610, 563, 1211, 3238, 1414, 2177, 97, 1909,
	3092, 1910, 188, 613, 1741, 1867, 610, 1238, 1414, 3091,
	188, 809, 188, 3050, 188, 188, 610, 1242, 3049, 610,
	1893, 2266, 3326, 2906, 3115, 1414, 1837, 3288, 1414, 1768,
	610, 3113, 1414, 2377, 1879, 3110, 1414, 2355, 1877, 1975,
	104, 2266, 3225, 2313, 1239, 860, 1240, 1241, 860, 95,
	1976, 103, 1024, 102, 1881, 1882, 97, 1414, 98, 2810,
	96, 99, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1244,
	1526, 1527, 1528, 1239, 1238, 1240, 1241, 2812, 98, 2553,
	1239, 99, 1240, 1241, 1239, 610, 1240, 1241, 1775, 1777,
	2810, 1878, 2025, 2026, 2027, 2266, 3205, 2029, 2031, 2033,
	3096, 1414, 1915, 2266, 3201, 1942, 2314, 190, 191, 192,
	3188, 1414, 610, 1868, 1879, 1414, 2316, 1870, 610, 1555,
	89, 1414, 1555, 2059, 1555, 3193, 1985, 1986, 1987, 1988,
	2057, 1971, 2266, 3155, 754, 1242, 1970, 1603, 1604, 1903,
	2898, 3152, 1242, 1609, 1610, 831, 2752, 1414, 1953, 1239,
	3166, 1240, 1241, 1242, 1880, 103, 95, 1883, 1884, 1980,
	2282, 1981, 1982, 1983, 1984, 610, 1917, 96, 3069, 1414,
	610, 1937, 2001, 2266, 610, 610, 2047, 1991, 1992, 1993,
	1994, 2058, 1742, 2007, 1744, 1745, 1746, 1747, 1748, 1749,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1974, 864, 1914,
	1958, 864, 1935, 1957, 1973, 1972, 2266, 3057, 1242, 2898,
	1414, 2290, 188, 2044, 1814, 1242, 2266, 2896, 2195, 188,
	2586, 1242, 1414, 2017, 2149, 2784, 1414, 188, 188, 1242,
	2125, 188, 2290, 188, 2058, 1414, 2781, 1414, 2776, 1242,
	188, 2752, 2167, 1242, 2815, 1414, 2621, 188, 1242, 2002,
	2144, 2052, 1833, 1242, 2055, 2526, 2056, 2729, 2016, 1959,
	2020, 2149, 1068, 1997, 1998, 2028, 2072, 1239, 2188, 1240,
	1241, 2164, 1552, 188, 1239, 2289, 1240, 1241, 610, 1238,
	1414, 2051, 2050, 1067, 2002, 1239, 1242, 1240, 1241, 2076,
	2054, 2779, 1414, 2077, 2078, 2163, 2175, 2058, 2745, 1414,
	2073, 2188, 1414, 1806, 1795, 1796, 1797, 1798, 1808, 1799,
	1800, 1801, 1813, 1809, 1802, 1803, 1810, 1811, 1812, 1804,
	1805, 1807, 1242, 1414, 2623, 2622, 2727, 1414, 2619, 2620,
	2290, 2220, 1414, 2619, 2618, 2136, 745, 1414, 2290, 1414,
	1239, 2313, 1240, 1241, 2041, 2083, 1930, 1239, 1418, 1240,
	1241, 2149, 1414, 1239, 1735, 1240, 1241, 1894, 1242, 2125,
	2399, 1239, 1242, 1240, 1241, 1514, 2380, 2373, 2374, 2143,
	1414, 1239, 1242, 1240, 1241, 1239, 1242, 1240, 1241, 1767,
	1239, 2141, 1240, 1241, 1713, 1239, 2153, 1240, 1241, 189,
	2266, 2265, 189, 1242, 2109, 189, 1656, 1242, 2116, 2117,
	611, 1242, 189, 2119, 2314, 2203, 1414, 1242, 1258, 1445,
	189, 1254, 2120, 1255, 2125, 1767, 1414, 2282, 1239, 1050,
	1240, 1241, 1242, 1514, 1513, 189, 1242, 1256, 1270, 1271,
	1253, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1266,
	1268, 1269, 3302, 1242, 1049, 1879, 3150, 611, 2123, 2262,
	611, 189, 611, 1242, 1239, 3088, 1240, 1241, 2645, 2152,
	3268, 1242, 1736, 2863, 97, 188, 2146, 820, 1242, 2134,
	1459, 1458, 1242, 188, 3208, 2347, 2145, 1764, 610, 2250,
	2832, 1762, 1242, 2691, 610, 3054, 3080, 1421, 1140, 2810,
	1239, 2881, 1240, 1241, 1239, 610, 1240, 1241, 1144, 2254,
	1150, 3047, 1878, 1152, 1239, 2786, 1240, 1241, 1239, 2782,
	1240, 1241, 2156, 2992, 2864, 2865, 2866, 2879, 3081, 188,
	2876, 2015, 2149, 188, 2857, 1239, 2754, 1240, 1241, 1239,
	1587, 1240, 1241, 1239, 2739, 1240, 1241, 2342, 2323, 1239,
	2738, 1240, 1241, 1703, 2750, 89, 2248, 1516, 2173, 2000,
	2286, 2736, 2687, 2647, 1239, 2735, 1240, 1241, 1239, 39,
	1240, 1241, 2643, 2381, 2346, 2734, 1242, 1996, 2306, 1990,
	1989, 1242, 1641, 1547, 2154, 1239, 2267, 1240, 1241, 1543,
	1242, 1588, 1589, 1590, 1512, 1239, 610, 1240, 1241, 1242,
	115, 2867, 188, 1239, 1907, 1240, 1241, 2822, 2823, 188,
	1239, 3321, 1240, 1241, 1239, 1704, 1240, 1241, 3319, 1242,
	2263, 3295, 2347, 610, 1239, 3174, 1240, 1241, 2276, 1388,
	610, 1413, 2238, 3101, 1555, 1555, 2825, 1242, 2639, 610,
	2638, 2637, 2553, 2360, 2372, 2334, 2336, 2305, 2868, 2869,
	2870, 2110, 2264, 2259, 2828, 2575, 2395, 2327, 1242, 2236,
	2576, 1422, 2573, 2279, 2235, 2827, 2311, 2574, 188, 188,
	188, 188, 188, 2234, 2572, 2396, 2135, 2571, 2137, 2222,
	2223, 1242, 2233, 2315, 3170, 2007, 2577, 2318, 2299, 2300,
	188, 188, 104, 3082, 2325, 1913, 1921, 2816, 2394, 1242,
	2531, 2530, 2232, 103, 3134, 102, 188, 2962, 1239, 2961,
	1240, 1241, 2339, 1239, 97, 1240, 1241, 1242, 2803, 2328,
	2231, 2971, 1239, 2806, 1240, 1241, 2802, 610, 2348, 2543,
	2545, 1239, 2973, 1240, 1241, 835, 2540, 2356, 2546, 2357,
	1655, 2218, 806, 836, 2436, 2361, 2362, 2363, 2617, 1535,
	2331, 1239, 2393, 1240, 1241, 2351, 1780, 2960, 610, 1106,
	1105, 2705, 2346, 95, 2212, 1210, 2382, 2383, 2427, 1239,
	1781, 1240, 1241, 1414, 96, 1764, 2387, 1764, 123, 1762,
	1764, 1762, 2211, 2808, 1762, 1764, 97, 2392, 3333, 1762,
	1239, 2635, 1240, 1241, 2454, 1242, 610, 95, 1442, 1869,
	2210, 1869, 2452, 2458, 97, 2113, 610, 104, 96, 2435,
	2416, 1932, 1933, 1239, 3247, 1240, 1241, 2484, 103, 2484,
	102, 3151, 2484, 2419, 3076, 2102, 2616, 2484, 610, 97,
	2303, 1239, 1918, 1240, 1241, 2514, 2507, 843, 844, 2425,
	2101, 2100, 2426, 188, 2099, 2788, 2453, 610, 2486, 1239,
	2509, 1240, 1241, 1583, 2529, 2496, 2497, 2498, 2499, 2129,
	2455, 610, 2528, 102, 3122, 2489, 3121, 3104, 610, 610,
	2490, 188, 188, 188, 188, 188, 104, 2471, 2209, 1867,
	2979, 1867, 2977, 188, 2976, 2969, 1242, 103, 188, 102,
	2514, 188, 2550, 188, 2877, 2477, 188, 188, 188, 1242,
	1584, 1585, 1586, 2807, 2805, 2565, 1242, 189, 2556, 189,
	2648, 2559, 189, 2556, 104, 2042, 1530, 822, 2585, 2533,
	842, 103, 2968, 2282, 2508, 103, 2510, 1239, 2513, 1240,
	1241, 2796, 2631, 1242, 2534, 3323, 3322, 1401, 2306, 2951,
	1242, 188, 611, 2521, 611, 611, 2491, 2492, 2493, 2494,
	2495, 2262, 1242, 2532, 610, 2469, 2165, 1905, 1439, 611,
	611, 1431, 610, 108, 109, 1460, 3322, 188, 2535, 2208,
	3323, 1242, 2525, 2547, 2548, 3140, 2522, 2523, 2524, 1242,
	824, 188, 2207, 2671, 2587, 2843, 823, 2588, 2566, 2206,
	833, 2569, 2578, 98, 3, 1242, 99, 91, 1, 188,
	2650, 2847, 188, 1666, 3257, 2589, 2582, 2583, 2567, 2568,
	578, 2570, 2706, 2564, 2595, 1895, 2205, 1386, 1239, 3296,
	1240, 1241, 3253, 2204, 3254, 1627, 2625, 1617, 2627, 2626,
	2909, 1239, 1838, 1240, 1241, 2198, 1242, 3077, 1239, 2709,
	1240, 1241, 2651, 1242, 2048, 2349, 2875, 2005, 1597, 2678,
	2352, 2353, 1058, 2679, 2197, 2649, 148, 1968, 1242, 1969,
	2007, 2670, 2196, 3221, 112, 1239, 1016, 1240, 1241, 111,
	1061, 2682, 1239, 1168, 1240, 1241, 2043, 2437, 2193, 2899,
	2332, 610, 1242, 1642, 1239, 1977, 1240, 1241, 1465, 1463,
	1464, 1462, 2749, 2698, 1467, 1466, 2701, 2700, 1242, 2713,
	2166, 2755, 1707, 1239, 2708, 1240, 1241, 610, 188, 607,
	2302, 1239, 186, 1240, 1241, 1675, 2718, 1454, 1432, 2192,
	1242, 2770, 1679, 2768, 1100, 568, 2191, 1239, 2774, 1240,
	1241, 2624, 2081, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	574, 2189, 2715, 2716, 1289, 2717, 1702, 2527, 2719, 2319,
	2721, 1242, 2723, 861, 189, 1242, 854, 1906, 611, 611,
	1242, 2703, 2704, 2252, 2561, 2185, 2800, 188, 1239, 2539,
	1240, 1241, 1716, 2541, 189, 1239, 2269, 1240, 1241, 2544,
	2537, 2184, 3133, 2970, 3206, 2846, 2329, 1428, 2775, 2155,
	1239, 2794, 1240, 1241, 611, 1782, 188, 189, 2789, 2790,
	1280, 1947, 611, 2182, 2946, 1728, 632, 631, 611, 629,
	2804, 2797, 2255, 2283, 1239, 188, 1240, 1241, 188, 188,
	188, 2829, 2809, 1245, 2819, 1412, 1408, 748, 610, 610,
	1239, 2242, 1240, 1241, 2178, 2826, 1440, 2294, 2160, 2292,
	1409, 2291, 2111, 2148, 1954, 2824, 2835, 2836, 2833, 2882,
	2883, 2820, 1239, 3249, 1240, 1241, 1949, 1945, 2834, 2841,
	2678, 2842, 2261, 640, 2679, 1911, 1912, 1411, 633, 1410,
	625, 712, 610, 610, 610, 610, 2903, 2904, 1412, 1408,
	711, 2840, 2858, 1239, 2860, 1240, 1241, 1239, 2677, 1240,
	1241, 3233, 1239, 1409, 1240, 1241, 2295, 2298, 2299, 2300,
	2296, 2402, 2297, 2301, 2688, 2404, 2822, 2823, 2295, 2298,
	2299, 2300, 2296, 2330, 2297, 2301, 2684, 1223, 1405, 1406,
	1411, 1404, 1410, 619, 1029, 2905, 1779, 2710, 3157, 2128,
	2731, 1403, 1764, 1793, 1764, 1794, 1762, 3164, 1762, 2659,
	2893, 2640, 2924, 2378, 2035, 65, 43, 3128, 3194, 710,
	707, 2948, 2949, 2950, 2503, 2504, 3177, 3178, 706, 3179,
	1821, 614, 3270, 1214, 189, 90, 34, 33, 32, 31,
	30, 25, 188, 24, 2484, 23, 2484, 22, 21, 1934,
	2921, 27, 20, 2628, 2629, 19, 18, 1938, 2662, 1941,
	3291, 3332, 1716, 117, 52, 49, 610, 47, 610, 2965,
	125, 611, 124, 2934, 50, 46, 1143, 44, 29, 28,
	17, 16, 15, 2944, 1764, 14, 2994, 13, 1762, 2935,
	611, 611, 12, 611, 11, 611, 611, 7, 611, 611,
	611, 611, 611, 611, 2556, 2986, 6, 37, 2559, 36,
	35, 1217, 2559, 2988, 39, 611, 26, 189, 4, 2365,
	2966, 2037, 2975, 0, 0, 1415, 1417, 2974, 2982, 0,
	610, 0, 2984, 0, 0, 0, 0, 189, 2990, 0,
	0, 0, 0, 188, 0, 0, 610, 0, 0, 0,
	611, 3055, 189, 0, 0, 0, 0, 2998, 0, 610,
	0, 0, 2995, 2996, 0, 0, 611, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3059, 0, 3051, 189, 3053, 0, 3052, 3079, 0,
	0, 189, 0, 3099, 0, 1764, 0, 3102, 3098, 1762,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 611,
	610, 3072, 0, 0, 610, 610, 3067, 3071, 0, 0,
	0, 0, 0, 611, 611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 610, 0, 0, 0, 0, 0, 3105,
	0, 0, 0, 3108, 0, 0, 3126, 3125, 0, 1716,
	0, 3123, 3124, 0, 3144, 3103, 2092, 0, 0, 0,
	0, 3143, 0, 0, 2107, 2108, 0, 0, 2112, 0,
	0, 2559, 3141, 0, 0, 3132, 0, 2115, 0, 611,
	0, 0, 0, 0, 2118, 0, 0, 0, 610, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 188, 3147, 0, 2852, 2853, 0, 3149,
	2121, 0, 0, 0, 0, 611, 611, 0, 0, 0,
	0, 610, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3168, 0, 3156, 0, 0, 3163, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3165, 2886, 0,
	0, 0, 2890, 2891, 2892, 0, 39, 0, 0, 0,
	0, 610, 0, 0, 0, 0, 3160, 0, 0, 0,
	0, 0, 0, 610, 3183, 0, 0, 3184, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 611, 0, 3192, 0, 0, 0, 610, 610, 0,
	3182, 0, 0, 0, 0, 0, 3199, 0, 3204, 0,
	0, 0, 0, 0, 2556, 189, 3209, 0, 611, 610,
	3235, 0, 3207, 0, 0, 3234, 3079, 3222, 189, 3212,
	3220, 39, 611, 188, 610, 3228, 189, 3217, 189, 3214,
	189, 189, 611, 3213, 0, 611, 3211, 0, 0, 3216,
	3215, 0, 3245, 0, 0, 0, 611, 0, 0, 0,
	3248, 3266, 3256, 3261, 0, 0, 0, 0, 0, 0,
	0, 3235, 3276, 0, 0, 0, 3234, 610, 3273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1292, 0, 0, 0, 0, 0, 3285, 0, 610,
	0, 3290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 0, 610, 3289, 610,
	3303, 3305, 0, 1764, 0, 3317, 0, 1762, 1482, 0,
	0, 3313, 3314, 0, 0, 0, 0, 3320, 611, 3316,
	3318, 0, 0, 0, 611, 0, 0, 0, 3235, 3328,
	2310, 0, 0, 3234, 0, 0, 3334, 0, 0, 0,
	0, 3340, 0, 3342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3062, 3063, 3064, 1764, 0, 3349,
	0, 1762, 3350, 0, 1787, 3099, 0, 0, 1788, 3351,
	3352, 611, 0, 0, 0, 0, 611, 0, 0, 0,
	611, 611, 0, 0, 1830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2358,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 2599, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 189, 189, 0, 0, 189, 0, 189,
	0, 0, 0, 0, 1415, 1892, 189, 0, 0, 0,
	1470, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	2600, 0, 0, 0, 0, 2407, 2408, 2409, 2410, 2411,
	0, 0, 0, 0, 0, 0, 0, 0, 1916, 189,
	0, 0, 0, 0, 611, 0, 2602, 1716, 2420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2597, 0, 0, 2428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2613, 2614, 0,
	0, 0, 0, 0, 2598, 0, 0, 0, 0, 0,
	0, 0, 0, 1483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 623, 0, 0, 2604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1496, 1499, 1500, 1501, 1502, 1503, 1504, 0, 1505,
	1506, 1507, 1508, 1509, 1484, 1485, 1486, 1487, 1468, 1469,
	1497, 0, 1471, 0, 1472, 1473, 1474, 1475, 1476, 1477,
	1478, 1479, 1480, 0, 2612, 1481, 1488, 1489, 1490, 1491,
	0, 1492, 1493, 1494, 1495, 0, 2615, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 841, 0, 0,
	847, 847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 611, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 0, 0, 2636, 0,
	0, 0, 0, 0, 0, 0, 2601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1498, 0, 0, 0, 2674, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2683, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 2699, 0, 189, 2702,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 611,
	0, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	2142, 0, 0, 0, 2147, 611, 0, 2150, 0, 2151,
	0, 0, 0, 0, 0, 0, 0, 2159, 0, 0,
	0, 2161, 2162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 189, 189, 189, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2168, 2169,
	2170, 2171, 2172, 0, 2174, 0, 189, 189, 2176, 0,
	2179, 2180, 0, 2181, 0, 0, 0, 0, 2186, 0,
	2187, 0, 189, 0, 2190, 2793, 2605, 0, 0, 0,
	2609, 0, 2199, 2200, 2201, 2202, 0, 2608, 0, 0,
	0, 0, 0, 611, 0, 2213, 0, 2216, 2217, 0,
	0, 0, 0, 0, 2219, 2221, 0, 0, 0, 0,
	0, 0, 2226, 2227, 2228, 2229, 2230, 0, 0, 0,
	0, 2610, 0, 1916, 611, 2237, 2606, 0, 0, 0,
	0, 2607, 0, 0, 0, 2249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 2856, 0, 0, 0, 0, 0, 0,
	0, 0, 611, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 2871, 0, 0, 2872, 2873, 2874, 0, 0,
	2371, 0, 1482, 0, 611, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 145, 0, 0, 0, 189,
	0, 0, 0, 611, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 0, 0,
	0, 0, 0, 0, 611, 611, 0, 189, 189, 189,
	189, 189, 0, 0, 0, 0, 0, 156, 0, 189,
	0, 0, 0, 144, 189, 0, 0, 189, 0, 189,
	0, 0, 189, 189, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 163, 0, 164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1538, 1539, 155, 154, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 0, 0, 0, 0, 0, 184, 0, 611, 0,
	0, 0, 0, 189, 1470, 0, 0, 1534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 1243,
	123, 0, 145, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 189, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 149, 1540, 152, 2466, 1537,
	144, 150, 151, 0, 0, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 1483, 0, 0,
	0, 163, 0, 164, 0, 0, 2485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 155, 154, 183, 0, 0, 0, 611, 0, 0,
	0, 0, 0, 0, 2511, 2512, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 611, 189, 1496, 1499, 1500, 1501, 1502,
	1503, 1504, 0, 1505, 1506, 1507, 1508, 1509, 1484, 1485,
	1486, 1487, 1468, 1469, 1497, 0, 1471, 0, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 0, 0, 1481,
	1488, 1489, 1490, 1491, 0, 1492, 1493, 1494, 1495, 2562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 158, 0, 2580, 2581, 0, 0,
	0, 0, 149, 1540, 152, 0, 1537, 0, 150, 151,
	0, 0, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 189, 173, 0, 0, 0, 1430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 189, 189, 189, 0, 0, 0,
	0, 0, 0, 0, 611, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3169,
	0, 0, 0, 0, 0, 0, 0, 0, 611, 611,
	611, 611, 0, 0, 1498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 147, 0, 0, 2707, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 158, 0, 0, 2724, 2725, 2726, 0, 2728, 2730,
	0, 159, 0, 0, 0, 0, 0, 2737, 171, 0,
	0, 0, 2741, 2742, 2743, 2744, 2746, 2747, 2748, 0,
	0, 0, 0, 2751, 0, 0, 0, 0, 0, 2753,
	0, 0, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764,
	2765, 2766, 0, 0, 0, 0, 0, 0, 189, 179,
	2773, 0, 0, 0, 0, 2777, 0, 2778, 2780, 0,
	2783, 2785, 0, 1517, 0, 0, 0, 2791, 0, 153,
	0, 0, 611, 0, 611, 0, 0, 0, 0, 0,
	0, 160, 165, 162, 168, 169, 170, 172, 174, 175,
	176, 177, 0, 0, 0, 0, 0, 178, 180, 181,
	182, 0, 2813, 2814, 0, 0, 2818, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 0, 147, 0,
	0, 0, 0, 0, 2830, 2831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 611, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 159, 189,
	0, 0, 611, 0, 0, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1668, 0, 0, 0, 0, 0, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2897, 0, 611, 0, 0, 0,
	611, 611, 0, 0, 0, 0, 0, 0, 160, 165,
	162, 168, 169, 170, 172, 174, 175, 176, 177, 0,
	0, 0, 0, 0, 178, 180, 181, 182, 0, 611,
	0, 0, 2916, 0, 0, 2920, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1723, 1724, 1725, 1726, 0, 0, 0,
	0, 0, 2931, 0, 0, 0, 0, 0, 0, 0,
	0, 2933, 0, 0, 0, 0, 0, 2937, 0, 0,
	0, 0, 0, 0, 611, 0, 0, 0, 0, 2945,
	0, 0, 0, 0, 0, 0, 0, 2952, 0, 189,
	0, 1770, 1771, 0, 0, 0, 1773, 0, 847, 847,
	1778, 0, 0, 0, 0, 1786, 0, 611, 189, 0,
	755, 0, 0, 81, 0, 0, 1815, 1816, 1817, 1818,
	1819, 1820, 1822, 0, 1827, 1828, 1829, 0, 1831, 1832,
	0, 1834, 1835, 0, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 611, 1865, 0,
	1871, 1872, 847, 0, 847, 847, 847, 847, 847, 611,
	0, 0, 0, 0, 1885, 1886, 1887, 1888, 1889, 1890,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	819, 0, 81, 611, 611, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3068, 0, 0, 0, 847,
	0, 819, 0, 0, 3075, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 189,
	611, 1928, 1929, 0, 3085, 3086, 3087, 0, 0, 3089,
	3090, 0, 0, 0, 3093, 0, 3094, 0, 3095, 0,
	3097, 3100, 0, 0, 0, 0, 0, 0, 1965, 0,
	0, 0, 0, 0, 0, 0, 3109, 3111, 3112, 3114,
	3116, 3118, 0, 611, 89, 0, 0, 0, 0, 0,
	749, 757, 758, 759, 760, 761, 750, 752, 0, 0,
	0, 751, 0, 0, 0, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 762, 763, 0, 0, 3148,
	0, 0, 0, 611, 0, 611, 0, 2003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2680, 2681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 0, 0, 0, 0, 0,
	3173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3189,
	0, 0, 0, 0, 0, 3190, 3191, 0, 80, 41,
	42, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3202, 86, 0,
	0, 0, 45, 71, 72, 0, 69, 73, 0, 0,
	0, 0, 0, 0, 0, 70, 0, 0, 0, 0,
	0, 0, 0, 3227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3237, 3239, 3241,
	0, 0, 0, 0, 58, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 0,
	0, 0, 3269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 713, 0, 0, 0, 0, 0,
	0, 3287, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 0, 0, 0, 2158,
	0, 0, 0, 0, 3308, 3310, 3312, 724, 0, 0,
	728, 0, 725, 726, 0, 0, 0, 727, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 609, 0,
	0, 0, 0, 0, 0, 3331, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3343, 3344, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 51, 54, 53, 56, 0, 68, 0,
	0, 77, 74, 0, 0, 862, 0, 0, 1020, 0,
	1027, 0, 0, 0, 0, 0, 0, 0, 0, 847,
	847, 0, 0, 0, 57, 85, 84, 0, 0, 66,
	67, 55, 0, 0, 0, 0, 0, 75, 76, 0,
	0, 0, 0, 0, 0, 0, 1203, 0, 1203, 1203,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1430, 0, 59, 60, 0,
	61, 62, 63, 64, 0, 0, 0, 0, 0, 0,
	0, 0, 819, 1282, 1286, 1287, 0, 1290, 0, 1291,
	1293, 1294, 1295, 1296, 0, 1299, 1300, 1302, 1302, 0,
	1302, 1306, 1306, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 0, 0, 1357, 0, 1359, 1360, 1361, 1362,
	1363, 0, 0, 0, 0, 1306, 1306, 1306, 1306, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1369,
	1370, 1371, 1372, 1373, 1374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1384, 0, 83,
	0, 0, 0, 0, 0, 0, 0, 0, 3000, 3002,
	3001, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 88, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 819, 0, 0, 0,
	819, 0, 123, 0, 145, 2432, 819, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 0, 847, 0, 0, 2456, 2457, 0,
	757, 758, 2460, 0, 0, 2462, 1763, 0, 2463, 2464,
	2465, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	2470, 0, 144, 2472, 0, 0, 0, 2473, 2474, 2475,
	2476, 0, 0, 1841, 2478, 0, 2479, 2480, 0, 0,
	0, 2487, 2488, 163, 0, 164, 0, 0, 0, 1841,
	1841, 1841, 1841, 1841, 0, 0, 0, 0, 0, 0,
	0, 132, 133, 155, 154, 183, 0, 0, 0, 847,
	0, 0, 0, 0, 0, 0, 2515, 2516, 2517, 2518,
	2519, 2520, 764, 765, 766, 767, 768, 769, 770, 771,
	772, 773, 774, 775, 776, 777, 778, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 789, 790, 791,
	792, 793, 794, 795, 796, 797, 798, 799, 800, 801,
	802, 803, 804, 805, 0, 0, 0, 2551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3006, 0, 0, 0, 0,
	0, 0, 0, 0, 2584, 0, 0, 0, 0, 0,
	3014, 3015, 0, 0, 149, 130, 152, 137, 129, 0,
	150, 151, 0, 0, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 138, 0, 0, 0,
	862, 0, 862, 862, 0, 0, 0, 0, 0, 0,
	141, 139, 134, 135, 136, 140, 0, 1213, 1215, 0,
	0, 0, 131, 0, 2646, 0, 0, 0, 0, 0,
	0, 142, 724, 0, 659, 728, 661, 725, 726, 0,
	657, 660, 727, 0, 0, 0, 0, 1284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	663, 2999, 3003, 3004, 3005, 3016, 3017, 3018, 3026, 3028,
	695, 3027, 3029, 3030, 3031, 3034, 3035, 3036, 3037, 3032,
	3033, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3007, 3011,
	3010, 3008, 3009, 3012, 3013, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 0, 0, 2733, 729, 0, 730,
	0, 0, 734, 0, 2740, 0, 736, 735, 0, 737,
	709, 708, 0, 0, 731, 732, 0, 733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 1203, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1392, 1393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 0,
	147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1436, 0, 0, 0, 0, 0, 0, 0,
	862, 0, 0, 0, 0, 0, 1455, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 165, 162, 168, 169, 170, 172, 174, 175, 176,
	177, 0, 0, 0, 0, 0, 178, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2922, 0, 2923, 0, 0, 0, 0, 2926,
	2927, 2928, 0, 0, 0, 0, 0, 0, 0, 0,
	2932, 0, 0, 0, 1948, 0, 0, 0, 0, 2936,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2953, 0, 0, 2954, 0, 2955, 2956, 0, 2957,
	0, 2958, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	0, 0, 0, 0, 0, 0, 2983, 0, 0, 0,
	0, 714, 1284, 0, 0, 1028, 0, 2991, 1563, 1563,
	2993, 1563, 0, 1563, 1563, 0, 1572, 1563, 1563, 1563,
	1563, 1563, 0, 0, 2997, 0, 0, 0, 0, 1284,
	0, 0, 1284, 1020, 1284, 0, 0, 0, 1028, 0,
	0, 0, 3048, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 564, 0, 0,
	605, 0, 0, 0, 0, 0, 0, 564, 1640, 0,
	89, 0, 0, 0, 0, 564, 749, 757, 758, 759,
	760, 761, 750, 752, 1663, 0, 0, 751, 0, 0,
	829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 762, 763, 0, 0, 0, 0, 848, 848, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 862, 862, 0, 0, 0, 0, 2680, 2681, 0,
	0, 0, 0, 3131, 0, 0, 0, 0, 0, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 0, 0, 0, 0, 0, 0, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1284, 2130, 0,
	0, 0, 0, 0, 0, 0, 0, 1774, 0, 0,
	0, 0, 0, 0, 1284, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2140, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3171, 0, 0, 0, 0, 0, 0,
	0, 3172, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 3185, 0, 0, 3186, 0,
	3187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1908,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2224, 0,
	1436, 0, 0, 862, 0, 0, 0, 0, 0, 0,
	862, 0, 0, 862, 0, 0, 0, 0, 0, 0,
	0, 2247, 0, 3267, 1020, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3282, 0, 3283, 0, 3284, 0, 0,
	2287, 2288, 0, 0, 0, 0, 0, 0, 0, 2307,
	0, 2308, 2309, 0, 0, 0, 0, 0, 0, 1027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1020, 0, 0, 0,
	0, 0, 1027, 2251, 0, 0, 757, 758, 0, 0,
	0, 0, 1763, 0, 3329, 0, 3330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	0, 0, 0, 0, 1758, 0, 0, 0, 1758, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2385, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 564, 0, 0, 564, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2122, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1284, 0, 862, 0, 2500, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1948, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2560, 0, 81, 0,
	0, 1948, 1948, 1948, 1948, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2307, 819,
	0, 0, 0, 1948, 0, 0, 1948, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 0, 0, 0, 0, 0, 2256, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 2271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1920, 0, 0,
	0, 0, 0, 0, 2379, 0, 0, 0, 0, 0,
	0, 0, 0, 2384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1284,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 0, 0, 0, 0, 0, 0, 1948, 0, 0,
	0, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	2839, 0, 0, 0, 0, 0, 1285, 0, 0, 1285,
	0, 1285, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1614, 0, 0, 0, 0, 0, 1284, 0,
	1284, 0, 0, 1284, 0, 0, 0, 564, 1284, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2501, 0, 0, 1665, 0, 0, 0, 0, 0, 0,
	862, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 0,
	0, 0, 1563, 0, 0, 1688, 1689, 564, 564, 564,
	564, 564, 564, 564, 0, 0, 0, 0, 0, 0,
	0, 2536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 862, 0, 0, 0, 1284,
	0, 0, 2563, 1563, 1284, 0, 564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2959, 0,
	2963, 2964, 0, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 848, 848, 0, 0, 0,
	0, 1285, 0, 2560, 0, 81, 0, 2560, 1020, 0,
	0, 1284, 0, 0, 0, 0, 1920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 848,
	1665, 848, 848, 848, 848, 848, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3060, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 2769, 0, 0, 0, 0,
	1665, 564, 0, 564, 0, 564, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2536, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1369, 1370, 1371, 1372, 1373, 1374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3158,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 1920, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2910, 2911, 2912, 2913,
	0, 0, 0, 0, 0, 0, 0, 3203, 0, 0,
	0, 0, 81, 564, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 0, 0, 0, 0, 564, 564,
	0, 0, 564, 0, 2114, 0, 0, 0, 0, 0,
	0, 564, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 0, 0, 0, 0, 1284, 0, 1284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3286, 0,
	0, 0, 0, 0, 0, 1284, 0, 0, 0, 0,
	2987, 0, 2989, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1285,
	0, 1665, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1920, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3070, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 862, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 848, 848, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3119, 0, 564, 0, 3119, 3119,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1920, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1920, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1920, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	2364, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3196, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1284, 1285, 3200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	564, 564, 564, 564, 0, 0, 0, 0, 0, 0,
	0, 862, 862, 0, 0, 0, 0, 0, 0, 0,
	0, 564, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3243, 0, 0, 0, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3196, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1285, 0, 1285, 0, 0,
	1285, 0, 0, 1920, 0, 1285, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2769, 0, 3251, 0, 0, 848, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1285, 0, 0, 0,
	0, 1285, 564, 564, 564, 564, 564, 0, 0, 0,
	0, 0, 0, 0, 2579, 0, 0, 0, 0, 564,
	0, 0, 1614, 0, 564, 0, 0, 564, 2590, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 564, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	564, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 564, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 564, 0, 0, 564,
	564, 564, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 1285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1614, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1285, 371, 0, 0, 998, 983, 480, 0,
	926, 1001, 895, 914, 1011, 917, 920, 962, 874, 940,
	389, 911, 867, 899, 869, 906, 870, 897, 928, 255,
	894, 985, 944, 1000, 343, 252, 876, 900, 403, 916,
	199, 964, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 1007, 347, 950, 0,
	464, 374, 0, 0, 1614, 930, 989, 938, 976, 925,
	963, 884, 949, 1002, 912, 959, 1003, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 3223, 0, 3224, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 908, 956, 997, 909, 958, 250,
	300, 257, 249, 484, 1008, 988, 873, 937, 996, 0,
	0, 218, 999, 932, 0, 961, 0, 1014, 868, 952,
	0, 871, 875, 1010, 992, 903, 260, 0, 0, 0,
	0, 0, 0, 0, 929, 939, 973, 977, 923, 0,
	0, 0, 0, 0, 0, 0, 901, 0, 948, 0,
	0, 0, 880, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	0, 883, 0, 902, 974, 0, 866, 282, 877, 375,
	242, 0, 981, 991, 924, 521, 995, 922, 921, 968,
	881, 987, 915, 342, 879, 309, 194, 214, 0, 913,
	385, 429, 441, 986, 898, 907, 240, 905, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 947, 966,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 1205, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 893,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 982, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 971, 1013, 398, 440, 229, 505, 463, 888, 892,
	886, 953, 887, 942, 943, 889, 1004, 1005, 1006, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 975, 882,
	0, 890, 891, 0, 984, 993, 994, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 946, 193, 210, 345, 1009, 422, 273, 537, 515,
	510, 200, 212, 885, 247, 896, 904, 0, 910, 918,
	919, 931, 933, 934, 935, 936, 954, 955, 957, 965,
	967, 970, 972, 979, 990, 1012, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 945, 951, 357, 266, 287, 299, 960,
	514, 469, 216, 434, 275, 238, 978, 980, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 941, 969, 352, 481, 482, 295, 371, 0,
	0, 998, 983, 480, 0, 926, 1001, 895, 914, 1011,
	917, 920, 962, 874, 940, 389, 911, 867, 899, 869,
	906, 870, 897, 928, 255, 894, 985, 944, 1000, 343,
	252, 876, 900, 403, 916, 199, 964, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 1007, 347, 950, 0, 464, 374, 0, 0, 0,
	930, 989, 938, 976, 925, 963, 884, 949, 1002, 912,
	959, 1003, 302, 236, 304, 198, 386, 465, 271, 0,
	0, 0, 0, 190, 191, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 234, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 908,
	956, 997, 909, 958, 250, 300, 257, 249, 484, 1008,
	988, 873, 937, 996, 0, 0, 218, 999, 932, 0,
	961, 0, 1014, 868, 952, 0, 871, 875, 1010, 992,
	903, 260, 0, 0, 0, 0, 0, 0, 0, 929,
	939, 973, 977, 923, 0, 0, 0, 0, 0, 2591,
	0, 901, 0, 948, 0, 0, 0, 880, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 0, 883, 0, 902, 974,
	0, 866, 282, 877, 375, 242, 0, 981, 991, 924,
	521, 995, 922, 921, 968, 881, 987, 915, 342, 879,
	309, 194, 214, 0, 913, 385, 429, 441, 986, 898,
	907, 240, 905, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 947, 966, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 217, 517, 209, 1205,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 332, 333, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 893, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 982, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 971, 1013, 398, 440,
	229, 505, 463, 888, 892, 886, 953, 887, 942, 943,
	889, 1004, 1005, 1006, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 975, 882, 0, 890, 891, 0, 984,
	993, 994, 559, 360, 453, 502, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 430, 431, 432, 433, 277, 511, 291,
	436, 435, 310, 311, 355, 419, 946, 193, 210, 345,
	1009, 422, 273, 537, 515, 510, 200, 212, 885, 247,
	896, 904, 0, 910, 918, 919, 931, 933, 934, 935,
	936, 954, 955, 957, 965, 967, 970, 972, 979, 990,
	1012, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 945, 951,
	357, 266, 287, 299, 960, 514, 469, 216, 434, 275,
	238, 978, 980, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 941, 969, 352,
	481, 482, 295, 371, 0, 0, 998, 983, 480, 0,
	926, 1001, 895, 914, 1011, 917, 920, 962, 874, 940,
	389, 911, 867, 899, 869, 906, 870, 897, 928, 255,
	894, 985, 944, 1000, 343, 252, 876, 900, 403, 916,
	199, 964, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 1007, 347, 950, 0,
	464, 374, 0, 0, 0, 930, 989, 938, 976, 925,
	963, 884, 949, 1002, 912, 959, 1003, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 908, 956, 997, 909, 958, 250,
	300, 257, 249, 484, 1008, 988, 873, 937, 996, 0,
	0, 218, 999, 932, 0, 961, 0, 1014, 868, 952,
	0, 871, 875, 1010, 992, 903, 260, 0, 0, 0,
	0, 0, 0, 0, 929, 939, 973, 977, 923, 0,
	0, 0, 0, 0, 2549, 0, 901, 0, 948, 0,
	0, 0, 880, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	0, 883, 0, 902, 974, 0, 866, 282, 877, 375,
	242, 0, 981, 991, 924, 521, 995, 922, 921, 968,
	881, 987, 915, 342, 879, 309, 194, 214, 0, 913,
	385, 429, 441, 986, 898, 907, 240, 905, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 947, 966,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 1205, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 893,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 982, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 971, 1013, 398, 440, 229, 505, 463, 888, 892,
	886, 953, 887, 942, 943, 889, 1004, 1005, 1006, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 975, 882,
	0, 890, 891, 0, 984, 993, 994, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 946, 193, 210, 345, 1009, 422, 273, 537, 515,
	510, 200, 212, 885, 247, 896, 904, 0, 910, 918,
	919, 931, 933, 934, 935, 936, 954, 955, 957, 965,
	967, 970, 972, 979, 990, 1012, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 945, 951, 357, 266, 287, 299, 960,
	514, 469, 216, 434, 275, 238, 978, 980, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 941, 969, 352, 481, 482, 295, 371, 0,
	0, 998, 983, 480, 0, 926, 1001, 895, 914, 1011,
	917, 920, 962, 874, 940, 389, 911, 867, 899, 869,
	906, 870, 897, 928, 255, 894, 985, 944, 1000, 343,
	252, 876, 900, 403, 916, 199, 964, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 1007, 347, 950, 0, 464, 374, 0, 0, 0,
	930, 989, 938, 976, 925, 963, 884, 949, 1002, 912,
	959, 1003, 302, 236, 304, 198, 386, 465, 271, 0,
	0, 0, 0, 190, 191, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 234, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 908,
	956, 997, 909, 958, 250, 300, 257, 249, 484, 1008,
	988, 873, 937, 996, 0, 0, 218, 999, 932, 0,
	961, 0, 1014, 868, 952, 0, 871, 875, 1010, 992,
	903, 260, 0, 0, 0, 0, 0, 0, 0, 929,
	939, 973, 977, 923, 0, 0, 0, 0, 0, 1936,
	0, 901, 0, 948, 0, 0, 0, 880, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 0, 883, 0, 902, 974,
	0, 866, 282, 877, 375, 242, 0, 981, 991, 924,
	521, 995, 922, 921, 968, 881, 987, 915, 342, 879,
	309, 194, 214, 0, 913, 385, 429, 441, 986, 898,
	907, 240, 905, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 947, 966, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 217, 517, 209, 1205,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 332, 333, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 893, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 982, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 971, 1013, 398, 440,
	229, 505, 463, 888, 892, 886, 953, 887, 942, 943,
	889, 1004, 1005, 1006, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 975, 882, 0, 890, 891, 0, 984,
	993, 994, 559, 360, 453, 502, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 430, 431, 432, 433, 277, 511, 291,
	436, 435, 310, 311, 355, 419, 946, 193, 210, 345,
	1009, 422, 273, 537, 515, 510, 200, 212, 885, 247,
	896, 904, 0, 910, 918, 919, 931, 933, 934, 935,
	936, 954, 955, 957, 965, 967, 970, 972, 979, 990,
	1012, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 945, 951,
	357, 266, 287, 299, 960, 514, 469, 216, 434, 275,
	238, 978, 980, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 941, 969, 352,
	481, 482, 295, 371, 0, 0, 998, 983, 480, 0,
	926, 1001, 895, 914, 1011, 917, 920, 962, 874, 940,
	389, 911, 867, 899, 869, 906, 870, 897, 928, 255,
	894, 985, 944, 1000, 343, 252, 876, 900, 403, 916,
	199, 964, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 1007, 347, 950, 0,
	464, 374, 0, 0, 0, 930, 989, 938, 976, 925,
	963, 884, 949, 1002, 912, 959, 1003, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 908, 956, 997, 909, 958, 250,
	300, 257, 249, 484, 1008, 988, 873, 937, 996, 0,
	0, 218, 999, 932, 0, 961, 0, 1014, 868, 952,
	0, 871, 875, 1010, 992, 903, 260, 0, 0, 0,
	0, 0, 0, 0, 929, 939, 973, 977, 923, 0,
	0, 0, 0, 0, 0, 0, 901, 0, 948, 0,
	0, 0, 880, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	0, 883, 0, 902, 974, 0, 866, 282, 877, 375,
	242, 0, 981, 991, 924, 521, 995, 922, 921, 968,
	881, 987, 915, 342, 879, 309, 194, 214, 0, 913,
	385, 429, 441, 986, 898, 907, 240, 905, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 947, 966,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 1205, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 893,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 982, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 971, 1013, 398, 440, 229, 505, 463, 888, 892,
	886, 953, 887, 942, 943, 889, 1004, 1005, 1006, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 975, 882,
	0, 890, 891, 0, 984, 993, 994, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 946, 193, 210, 345, 1009, 422, 273, 537, 515,
	510, 200, 212, 885, 247, 896, 904, 0, 910, 918,
	919, 931, 933, 934, 935, 936, 954, 955, 957, 965,
	967, 970, 972, 979, 990, 1012, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 945, 951, 357, 266, 287, 299, 960,
	514, 469, 216, 434, 275, 238, 978, 980, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 941, 969, 352, 481, 482, 295, 371, 0,
	0, 998, 983, 480, 0, 926, 1001, 895, 914, 1011,
	917, 920, 962, 874, 940, 389, 911, 867, 899, 869,
	906, 870, 897, 928, 255, 894, 985, 944, 1000, 343,
	252, 876, 900, 403, 916, 199, 964, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 1007, 347, 950, 0, 464, 374, 0, 0, 0,
	930, 989, 938, 976, 925, 963, 884, 949, 1002, 912,
	959, 1003, 302, 236, 304, 198, 386, 465, 271, 0,
	0, 0, 0, 190, 191, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 234, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 908,
	956, 997, 909, 958, 250, 300, 257, 249, 484, 1008,
	988, 873, 937, 996, 0, 0, 218, 999, 932, 0,
	961, 0, 1014, 868, 952, 0, 871, 875, 1010, 992,
	903, 260, 0, 0, 0, 0, 0, 0, 0, 929,
	939, 973, 977, 923, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 948, 0, 0, 0, 880, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 0, 883, 0, 902, 974,
	0, 866, 282, 877, 375, 242, 0, 981, 991, 924,
	521, 995, 922, 921, 968, 881, 987, 915, 342, 879,
	309, 194, 214, 0, 913, 385, 429, 441, 986, 898,
	907, 240, 905, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 947, 966, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 217, 517, 209, 1205,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 332, 333, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 893, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 982, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 971, 1013, 398, 440,
	229, 505, 463, 888, 892, 886, 953, 887, 942, 943,
	889, 1004, 1005, 1006, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 975, 882, 0, 890, 891, 0, 984,
	993, 994, 559, 360, 453, 502, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 430, 431, 432, 433, 277, 511, 291,
	436, 435, 310, 311, 355, 419, 946, 193, 210, 345,
	1009, 422, 273, 537, 515, 510, 200, 212, 885, 247,
	896, 904, 0, 910, 918, 919, 931, 933, 934, 935,
	936, 954, 955, 957, 965, 967, 970, 972, 979, 990,
	1012, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 945, 951,
	357, 266, 287, 299, 960, 514, 469, 216, 434, 275,
	238, 978, 980, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 941, 969, 352,
	481, 482, 295, 371, 0, 0, 998, 983, 480, 0,
	926, 1001, 895, 914, 1011, 917, 920, 962, 874, 940,
	389, 911, 867, 899, 869, 906, 870, 897, 928, 255,
	894, 985, 944, 1000, 343, 252, 876, 900, 403, 916,
	199, 964, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 1007, 347, 950, 0,
	464, 374, 0, 0, 0, 930, 989, 938, 976, 925,
	963, 884, 949, 1002, 912, 959, 1003, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 908, 956, 997, 909, 958, 250,
	300, 257, 249, 484, 1008, 988, 873, 937, 996, 0,
	0, 1015, 999, 932, 0, 961, 0, 1014, 868, 952,
	0, 871, 875, 1010, 992, 903, 260, 0, 0, 0,
	0, 0, 0, 0, 929, 939, 973, 977, 923, 0,
	0, 0, 0, 0, 0, 0, 901, 0, 948, 0,
	0, 0, 880, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	0, 883, 0, 902, 974, 0, 866, 282, 877, 375,
	242, 0, 981, 991, 924, 521, 995, 922, 921, 968,
	881, 987, 915, 342, 879, 309, 194, 214, 0, 913,
	385, 429, 441, 986, 898, 907, 240, 905, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 947, 966,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 878, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 893,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 982, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 865, 859, 858, 312,
	349, 971, 1013, 398, 440, 229, 505, 463, 888, 892,
	886, 953, 887, 942, 943, 889, 1004, 1005, 1006, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 975, 882,
	0, 890, 891, 0, 984, 993, 994, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 946, 193, 210, 345, 1009, 422, 273, 537, 515,
	510, 200, 212, 885, 247, 896, 904, 0, 910, 918,
	919, 931, 933, 934, 935, 936, 954, 955, 957, 965,
	967, 970, 972, 979, 990, 1012, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 945, 951, 357, 266, 287, 299, 960,
	514, 469, 216, 434, 275, 238, 978, 980, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 941, 969, 352, 481, 482, 295, 371, 0,
	0, 998, 983, 480, 0, 926, 1001, 895, 914, 1011,
	917, 920, 962, 874, 940, 389, 911, 867, 899, 869,
	906, 870, 897, 928, 255, 894, 985, 944, 1000, 343,
	252, 876, 900, 403, 916, 199, 964, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 1007, 347, 950, 0, 464, 374, 0, 0, 0,
	930, 989, 938, 976, 925, 963, 884, 949, 1002, 912,
	959, 1003, 302, 236, 304, 198, 386, 465, 271, 0,
	0, 0, 0, 190, 191, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 234, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 908,
	956, 997, 909, 958, 250, 300, 257, 249, 484, 1008,
	988, 873, 937, 996, 0, 0, 1015, 999, 932, 0,
	961, 0, 1014, 868, 952, 0, 871, 875, 1010, 992,
	903, 260, 0, 0, 0, 0, 0, 0, 0, 929,
	939, 973, 977, 923, 0, 0, 0, 0, 0, 0,
	0, 901, 0, 948, 0, 0, 0, 880, 872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 0, 0, 0, 0, 883, 0, 902, 974,
	0, 866, 282, 877, 375, 242, 0, 981, 991, 924,
	521, 995, 922, 921, 968, 881, 987, 915, 342, 879,
	309, 194, 214, 0, 913, 385, 429, 441, 986, 898,
	907, 240, 905, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 947, 966, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 1446, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 217, 517, 209, 878,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 332, 333, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 893, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 982, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 865, 859, 858, 312, 349, 971, 1013, 398, 440,
	229, 505, 463, 888, 892, 886, 953, 887, 942, 943,
	889, 1004, 1005, 1006, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 975, 882, 0, 890, 891, 0, 984,
	993, 994, 559, 360, 453, 502, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 430, 431, 432, 433, 277, 511, 291,
	436, 435, 310, 311, 355, 419, 946, 193, 210, 345,
	1009, 422, 273, 537, 515, 510, 200, 212, 885, 247,
	896, 904, 0, 910, 918, 919, 931, 933, 934, 935,
	936, 954, 955, 957, 965, 967, 970, 972, 979, 990,
	1012, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 945, 951,
	357, 266, 287, 299, 960, 514, 469, 216, 434, 275,
	238, 978, 980, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 941, 969, 352,
	481, 482, 295, 371, 0, 0, 998, 983, 480, 0,
	926, 1001, 895, 914, 1011, 917, 920, 962, 874, 940,
	389, 911, 867, 899, 869, 906, 870, 897, 928, 255,
	894, 985, 944, 1000, 343, 252, 876, 900, 403, 916,
	199, 964, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 1007, 347, 950, 0,
	464, 374, 0, 0, 0, 930, 989, 938, 976, 925,
	963, 884, 949, 1002, 912, 959, 1003, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 908, 956, 997, 909, 958, 250,
	300, 257, 249, 484, 1008, 988, 873, 937, 996, 0,
	0, 1015, 999, 932, 0, 961, 0, 1014, 868, 952,
	0, 871, 875, 1010, 992, 903, 260, 0, 0, 0,
	0, 0, 0, 0, 929, 939, 973, 977, 923, 0,
	0, 0, 0, 0, 0, 0, 901, 0, 948, 0,
	0, 0, 880, 872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 927, 0, 0, 0,
	0, 883, 0, 902, 974, 0, 866, 282, 877, 375,
	242, 0, 981, 991, 924, 521, 995, 922, 921, 968,
	881, 987, 915, 342, 879, 309, 194, 214, 0, 913,
	385, 429, 441, 986, 898, 907, 240, 905, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 947, 966,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 856, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 878, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 893,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 982, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 865, 859, 858, 312,
	349, 971, 1013, 398, 440, 229, 505, 463, 888, 892,
	886, 953, 887, 942, 943, 889, 1004, 1005, 1006, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 975, 882,
	0, 890, 891, 0, 984, 993, 994, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 946, 193, 210, 345, 1009, 422, 273, 537, 515,
	510, 200, 212, 885, 247, 896, 904, 0, 910, 918,
	919, 931, 933, 934, 935, 936, 954, 955, 957, 965,
	967, 970, 972, 979, 990, 1012, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 945, 951, 357, 266, 287, 299, 960,
	514, 469, 216, 434, 275, 238, 978, 980, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 941, 969, 352, 481, 482, 295, 371, 0,
	0, 0, 0, 480, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 1874, 0,
	641, 0, 0, 0, 255, 646, 0, 0, 0, 343,
	252, 0, 1875, 403, 0, 199, 0, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 654, 347, 0, 0, 464, 374, 0, 0, 0,
	0, 0, 649, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 236, 304, 198, 386, 465, 271, 0,
	89, 0, 0, 190, 191, 192, 749, 757, 758, 759,
	760, 761, 750, 752, 0, 0, 227, 751, 234, 666,
	668, 667, 685, 686, 687, 688, 689, 690, 691, 664,
	754, 762, 763, 0, 250, 300, 257, 249, 484, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 624, 638, 0, 653, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 636, 846,
	0, 0, 0, 718, 0, 637, 0, 0, 645, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 375, 242, 0, 717, 0, 0,
	521, 0, 0, 715, 0, 0, 0, 0, 342, 0,
	309, 194, 214, 0, 0, 385, 429, 441, 0, 0,
	0, 240, 0, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 0, 0, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 672, 517, 209, 0,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 680, 681, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 0, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 0, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 0, 0, 398, 440,
	229, 505, 463, 724, 716, 659, 728, 661, 725, 726,
	656, 657, 660, 727, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 719, 644, 643, 0, 651, 652, 0,
	662, 663, 665, 669, 670, 671, 682, 683, 684, 692,
	694, 695, 693, 696, 697, 698, 701, 702, 703, 704,
	699, 700, 705, 738, 739, 740, 741, 742, 743, 673,
	677, 676, 674, 675, 678, 679, 642, 193, 210, 345,
	0, 422, 273, 537, 515, 510, 200, 212, 729, 247,
	730, 0, 0, 734, 0, 0, 0, 736, 735, 0,
	737, 709, 708, 0, 0, 731, 732, 0, 733, 0,
	0, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 0, 0,
	357, 266, 287, 299, 0, 514, 469, 216, 434, 275,
	238, 756, 0, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 0, 371, 352,
	481, 482, 295, 480, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 0,
	641, 0, 0, 0, 255, 646, 0, 0, 0, 343,
	252, 0, 0, 403, 0, 199, 0, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 654, 347, 0, 0, 464, 374, 0, 0, 0,
	0, 0, 649, 650, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 236, 304, 198, 386, 465, 271, 0,
	89, 0, 0, 190, 191, 192, 749, 757, 758, 759,
	760, 761, 750, 752, 0, 0, 227, 751, 234, 666,
	668, 667, 685, 686, 687, 688, 689, 690, 691, 664,
	754, 762, 763, 0, 250, 300, 257, 249, 484, 0,
	0, 1823, 1824, 1825, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 624, 638, 0, 653, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 636, 0,
	0, 0, 0, 718, 0, 637, 0, 0, 645, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 375, 242, 0, 717, 0, 0,
	521, 0, 0, 715, 0, 0, 0, 0, 342, 0,
	309, 194, 214, 0, 0, 385, 429, 441, 0, 0,
	0, 240, 0, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 0, 0, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 672, 517, 209, 0,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 680, 681, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 0, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 0, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 0, 0, 398, 440,
	229, 505, 463, 724, 716, 659, 728, 661, 725, 726,
	656, 657, 660, 727, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 719, 644, 643, 0, 651, 652, 0,
	662, 663, 665, 669, 670, 671, 682, 683, 684, 692,
	694, 695, 693, 696, 697, 698, 701, 702, 703, 704,
	699, 700, 705, 738, 739, 740, 741, 742, 743, 673,
	677, 676, 674, 675, 678, 679, 642, 193, 210, 345,
	0, 422, 273, 537, 515, 510, 200, 212, 729, 247,
	730, 0, 0, 734, 0, 0, 0, 736, 735, 0,
	737, 709, 708, 0, 0, 731, 732, 0, 733, 0,
	0, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 0, 0,
	357, 266, 287, 299, 0, 514, 469, 216, 434, 275,
	238, 756, 0, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 0, 371, 352,
	481, 482, 295, 480, 0, 655, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 0,
	641, 0, 0, 0, 255, 646, 0, 0, 0, 343,
	252, 0, 0, 403, 0, 199, 0, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 654, 347, 0, 0, 464, 374, 0, 0, 0,
	0, 0, 649, 650, 0, 0, 0, 0, 0, 0,
	1963, 0, 302, 236, 304, 198, 386, 465, 271, 0,
	89, 0, 0, 190, 191, 192, 749, 757, 758, 759,
	760, 761, 750, 752, 0, 0, 227, 751, 234, 666,
	668, 667, 685, 686, 687, 688, 689, 690, 691, 664,
	754, 762, 763, 1964, 250, 300, 257, 249, 484, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 624, 638, 0, 653, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 635, 636, 0,
	0, 0, 0, 718, 0, 637, 0, 0, 645, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	795, 796, 797, 798, 799, 800, 801, 802, 803, 804,
	805, 648, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 375, 242, 0, 717, 0, 0,
	521, 0, 0, 715, 0, 0, 0, 0, 342, 0,
	309, 194, 214, 0, 0, 385, 429, 441, 0, 0,
	0, 240, 0, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 0, 0, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 672, 517, 209, 0,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 680, 681, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 0, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 0, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 0, 0, 398, 440,
	229, 505, 463, 724, 716, 659, 728, 661, 725, 726,
	656, 657, 660, 727, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 719, 644, 643, 0, 651, 652, 0,
	662, 663, 665, 669, 670, 671, 682, 683, 684, 692,
	694, 695, 693, 696, 697, 698, 701, 702, 703, 704,
	699, 700, 705, 738, 739, 740, 741, 742, 743, 673,
	677, 676, 674, 675, 678, 679, 642, 193, 210, 345,
	0, 422, 273, 537, 515, 510, 200, 212, 729, 247,
	730, 0, 0, 734, 0, 0, 0, 736, 735, 0,
	737, 709, 708, 0, 0, 731, 732, 0, 733, 0,
	0, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 0, 0,
	357, 266, 287, 299, 0, 514, 469, 216, 434, 275,
	238, 756, 0, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 0, 0, 352,
	481, 482, 295, 371, 0, 0, 0, 80, 480, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 641, 0, 0, 0, 255,
	646, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 654, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 749, 757, 758, 759, 760, 761, 750, 752, 0,
	0, 227, 751, 234, 666, 668, 667, 685, 686, 687,
	688, 689, 690, 691, 664, 754, 762, 763, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 624,
	638, 0, 653, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 636, 0, 0, 0, 0, 718, 0,
	637, 0, 0, 645, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 717, 0, 0, 521, 0, 0, 715, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 672, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 680, 681, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 724, 716,
	659, 728, 661, 725, 726, 656, 657, 660, 727, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 719, 644,
	643, 0, 651, 652, 0, 662, 663, 665, 669, 670,
	671, 682, 683, 684, 692, 694, 695, 693, 696, 697,
	698, 701, 702, 703, 704, 699, 700, 705, 738, 739,
	740, 741, 742, 743, 673, 677, 676, 674, 675, 678,
	679, 642, 193, 210, 345, 88, 422, 273, 537, 515,
	510, 200, 212, 729, 247, 730, 0, 0, 734, 0,
	0, 0, 736, 735, 0, 737, 709, 708, 0, 0,
	731, 732, 0, 733, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 756, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 641, 0, 0, 0, 255,
	646, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 654, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 749, 757, 758, 759, 760, 761, 750, 752, 0,
	0, 227, 751, 234, 666, 668, 667, 685, 686, 687,
	688, 689, 690, 691, 664, 754, 762, 763, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 624,
	638, 0, 653, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 636, 0, 0, 0, 0, 718, 0,
	637, 0, 0, 645, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 717, 0, 0, 521, 0, 0, 715, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 3210, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 672, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 680, 681, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 724, 716,
	659, 728, 661, 725, 726, 656, 657, 660, 727, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 719, 644,
	643, 0, 651, 652, 0, 662, 663, 665, 669, 670,
	671, 682, 683, 684, 692, 694, 695, 693, 696, 697,
	698, 701, 702, 703, 704, 699, 700, 705, 738, 739,
	740, 741, 742, 743, 673, 677, 676, 674, 675, 678,
	679, 642, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 729, 247, 730, 0, 0, 734, 0,
	0, 0, 736, 735, 0, 737, 709, 708, 0, 0,
	731, 732, 0, 733, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 756, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 641, 0, 0, 0, 255,
	646, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 654, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 1414, 190, 191,
	192, 749, 757, 758, 759, 760, 761, 750, 752, 0,
	0, 227, 751, 234, 666, 668, 667, 685, 686, 687,
	688, 689, 690, 691, 664, 754, 762, 763, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 624,
	638, 0, 653, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 636, 0, 0, 0, 0, 718, 0,
	637, 0, 0, 645, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 717, 0, 0, 521, 0, 0, 715, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 672, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 680, 681, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 724, 716,
	659, 728, 661, 725, 726, 656, 657, 660, 727, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 719, 644,
	643, 0, 651, 652, 0, 662, 663, 665, 669, 670,
	671, 682, 683, 684, 692, 694, 695, 693, 696, 697,
	698, 701, 702, 703, 704, 699, 700, 705, 738, 739,
	740, 741, 742, 743, 673, 677, 676, 674, 675, 678,
	679, 642, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 729, 247, 730, 0, 0, 734, 0,
	0, 0, 736, 735, 0, 737, 709, 708, 0, 0,
	731, 732, 0, 733, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 756, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 641, 0, 0, 0, 255,
	646, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 654, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 749, 757, 758, 759, 760, 761, 750, 752, 0,
	0, 227, 751, 234, 666, 668, 667, 685, 686, 687,
	688, 689, 690, 691, 664, 754, 762, 763, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 624,
	638, 0, 653, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 636, 846, 0, 0, 0, 718, 0,
	637, 0, 0, 645, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 717, 0, 0, 521, 0, 0, 715, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 672, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 680, 681, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 724, 716,
	659, 728, 661, 725, 726, 656, 657, 660, 727, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 719, 644,
	643, 0, 651, 652, 0, 662, 663, 665, 669, 670,
	671, 682, 683, 684, 692, 694, 695, 693, 696, 697,
	698, 701, 702, 703, 704, 699, 700, 705, 738, 739,
	740, 741, 742, 743, 673, 677, 676, 674, 675, 678,
	679, 642, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 729, 247, 730, 0, 0, 734, 0,
	0, 0, 736, 735, 0, 737, 709, 708, 0, 0,
	731, 732, 0, 733, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 756, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 641, 0, 0, 0, 255,
	646, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 654, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 749, 757, 758, 759, 760, 761, 750, 752, 0,
	0, 227, 751, 234, 666, 668, 667, 685, 686, 687,
	688, 689, 690, 691, 664, 754, 762, 763, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 624,
	638, 0, 653, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 636, 0, 0, 0, 0, 718, 0,
	637, 0, 0, 645, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 717, 0, 0, 521, 0, 0, 715, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 672, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 680, 681, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 724, 716,
	659, 728, 661, 725, 726, 656, 657, 660, 727, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 719, 644,
	643, 0, 651, 652, 0, 662, 663, 665, 669, 670,
	671, 682, 683, 684, 692, 694, 695, 693, 696, 697,
	698, 701, 702, 703, 704, 699, 700, 705, 738, 739,
	740, 741, 742, 743, 673, 677, 676, 674, 675, 678,
	679, 642, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 729, 247, 730, 0, 0, 734, 0,
	0, 0, 736, 735, 0, 737, 709, 708, 0, 0,
	731, 732, 0, 733, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 756, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	655, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 641, 0, 0, 0, 255,
	646, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 654, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 649, 650, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 749, 757, 758, 759, 760, 761, 750, 752, 0,
	0, 227, 751, 234, 666, 668, 667, 685, 686, 687,
	688, 689, 690, 691, 664, 754, 762, 763, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 0, 653, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 635, 636, 0, 0, 0, 0, 718, 0,
	637, 0, 0, 645, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 717, 0, 0, 521, 0, 0, 715, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 672, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 680, 681, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 724, 716,
	659, 728, 661, 725, 726, 656, 657, 660, 727, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 719, 644,
	643, 0, 651, 652, 0, 662, 663, 665, 669, 670,
	671, 682, 683, 684, 692, 694, 695, 693, 696, 697,
	698, 701, 702, 703, 704, 699, 700, 705, 738, 739,
	740, 741, 742, 743, 673, 677, 676, 674, 675, 678,
	679, 642, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 729, 247, 730, 0, 0, 734, 0,
	0, 0, 736, 735, 0, 737, 709, 708, 0, 0,
	731, 732, 0, 733, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 756, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 757, 758, 0, 0, 0, 0, 1763, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 1066, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 1065, 521, 0, 0, 0, 0,
	0, 1062, 1063, 342, 1023, 309, 194, 214, 1056, 1060,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 0, 352, 481, 482, 295, 371, 0,
	0, 0, 80, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 343,
	252, 0, 0, 403, 0, 199, 0, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 0, 347, 0, 0, 464, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 236, 304, 198, 386, 465, 271, 0,
	89, 0, 0, 190, 191, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 234, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 0,
	0, 0, 0, 0, 250, 300, 257, 249, 484, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 375, 242, 0, 0, 0, 0,
	521, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	309, 194, 214, 0, 0, 385, 429, 441, 0, 0,
	0, 240, 0, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 0, 0, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 217, 517, 209, 0,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 332, 333, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 0, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 0, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 0, 0, 398, 440,
	229, 505, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 360, 453, 502, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 430, 431, 432, 433, 277, 511, 291,
	436, 435, 310, 311, 355, 419, 0, 193, 210, 345,
	88, 422, 273, 537, 515, 510, 200, 212, 0, 247,
	0, 0, 0, 0, 0, 0, 1951, 0, 0, 1950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 0, 0,
	357, 266, 287, 299, 0, 514, 469, 216, 434, 275,
	238, 0, 0, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 0, 1433, 352,
	481, 482, 295, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 1435,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 343,
	252, 0, 0, 403, 0, 199, 0, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 0, 347, 0, 0, 464, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 236, 304, 198, 386, 465, 271, 0,
	0, 0, 0, 190, 191, 192, 0, 1437, 0, 0,
	0, 0, 0, 0, 0, 0, 227, 0, 234, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 0,
	0, 0, 0, 0, 250, 300, 257, 249, 484, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	1239, 0, 1240, 1241, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 375, 242, 0, 0, 0, 0,
	521, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	309, 194, 214, 0, 0, 385, 429, 441, 0, 0,
	0, 240, 0, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 0, 0, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 217, 517, 209, 0,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 332, 333, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 0, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 0, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 0, 0, 398, 440,
	229, 505, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 360, 453, 502, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 430, 431, 432, 433, 277, 511, 291,
	436, 435, 310, 311, 355, 419, 0, 193, 210, 345,
	0, 422, 273, 537, 515, 510, 200, 212, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 0, 0,
	357, 266, 287, 299, 0, 514, 469, 216, 434, 275,
	238, 0, 0, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 0, 371, 352,
	481, 482, 295, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 0, 0, 0, 343,
	252, 0, 0, 403, 0, 199, 0, 454, 239, 353,
	350, 487, 267, 258, 254, 237, 296, 361, 401, 474,
	395, 0, 347, 0, 0, 464, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 302, 236, 304, 198, 386, 465, 271, 0,
	0, 0, 0, 190, 191, 192, 1377, 1380, 0, 0,
	0, 0, 1376, 1379, 0, 0, 227, 1375, 234, 328,
	337, 336, 317, 318, 320, 322, 327, 334, 340, 0,
	0, 0, 0, 0, 250, 300, 257, 249, 484, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 0, 375, 242, 0, 0, 0, 0,
	521, 0, 0, 0, 0, 0, 0, 0, 342, 0,
	309, 194, 214, 0, 0, 385, 429, 441, 0, 0,
	0, 240, 0, 439, 399, 503, 222, 269, 426, 405,
	437, 412, 272, 0, 0, 438, 348, 489, 420, 500,
	522, 523, 248, 379, 512, 478, 518, 536, 215, 245,
	393, 471, 506, 461, 372, 485, 486, 308, 460, 280,
	197, 346, 528, 213, 447, 231, 220, 491, 509, 274,
	424, 205, 473, 498, 228, 451, 0, 0, 538, 207,
	496, 470, 368, 305, 306, 206, 0, 425, 253, 278,
	243, 388, 493, 494, 241, 539, 217, 517, 209, 0,
	516, 381, 488, 497, 369, 359, 208, 495, 367, 358,
	313, 332, 333, 265, 289, 417, 351, 418, 288, 290,
	377, 376, 378, 201, 507, 0, 202, 0, 466, 508,
	540, 223, 224, 226, 0, 264, 268, 276, 279, 285,
	286, 294, 344, 392, 416, 414, 421, 0, 483, 501,
	513, 520, 526, 527, 529, 530, 531, 532, 533, 535,
	534, 380, 293, 462, 312, 349, 0, 0, 398, 440,
	229, 505, 463, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 541, 542, 543, 544, 545, 546,
	547, 548, 549, 550, 551, 552, 553, 554, 555, 556,
	557, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 559, 360, 453, 502, 314, 326, 329, 319,
	338, 0, 339, 315, 316, 321, 323, 324, 325, 330,
	331, 335, 341, 430, 431, 432, 433, 277, 511, 291,
	436, 435, 310, 311, 355, 419, 0, 193, 210, 345,
	0, 422, 273, 537, 515, 510, 200, 212, 0, 247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 203, 211, 221, 225, 232, 246, 261,
	263, 270, 283, 292, 297, 298, 301, 307, 356, 362,
	363, 364, 365, 382, 383, 384, 387, 390, 391, 394,
	396, 397, 400, 404, 408, 409, 410, 411, 413, 415,
	423, 428, 442, 443, 444, 445, 446, 449, 450, 455,
	456, 457, 458, 459, 467, 468, 472, 490, 492, 504,
	519, 524, 448, 284, 499, 525, 0, 354, 0, 0,
	357, 266, 287, 299, 0, 514, 469, 216, 434, 275,
	238, 0, 0, 204, 235, 219, 244, 259, 262, 303,
	366, 373, 402, 407, 281, 256, 233, 427, 230, 452,
	475, 476, 477, 479, 370, 251, 406, 0, 0, 352,
	481, 482, 295, 371, 0, 0, 0, 80, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 1414, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 88, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 1951, 0, 0, 1950, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 1902, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 1900,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 1017, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 1023, 309, 194, 214, 1021, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 1902, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 1414, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 3120,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 1759, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1760, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 2272, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 2257, 0, 0, 0, 2258, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	1457, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 1456, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 3244,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 1615, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 3120,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 89, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 1952, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 1437, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 1714, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1582, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1580, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1578, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1576, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1574, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1570, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1568, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 1566, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 1541, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 1441, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 1216, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 827, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 616, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 615, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 562, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 3252, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 191,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 2792,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 371, 352, 481, 482, 295, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 0, 0, 0, 343, 252, 0, 0, 403, 0,
	199, 0, 454, 239, 353, 350, 487, 267, 258, 254,
	237, 296, 361, 401, 474, 395, 0, 347, 0, 0,
	464, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 302, 236, 304,
	198, 386, 465, 271, 0, 0, 0, 0, 190, 2253,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 227, 0, 234, 328, 337, 336, 317, 318, 320,
	322, 327, 334, 340, 0, 0, 0, 0, 0, 250,
	300, 257, 249, 484, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 0, 375,
	242, 0, 0, 0, 0, 521, 0, 0, 0, 0,
	0, 0, 0, 342, 0, 309, 194, 214, 0, 0,
	385, 429, 441, 0, 0, 0, 240, 0, 439, 399,
	503, 222, 269, 426, 405, 437, 412, 272, 0, 0,
	438, 348, 489, 420, 500, 522, 523, 248, 379, 512,
	478, 518, 536, 215, 245, 393, 471, 506, 461, 372,
	485, 486, 308, 460, 280, 197, 346, 528, 213, 447,
	231, 220, 491, 509, 274, 424, 205, 473, 498, 228,
	451, 0, 0, 538, 207, 496, 470, 368, 305, 306,
	206, 0, 425, 253, 278, 243, 388, 493, 494, 241,
	539, 217, 517, 209, 0, 516, 381, 488, 497, 369,
	359, 208, 495, 367, 358, 313, 332, 333, 265, 289,
	417, 351, 418, 288, 290, 377, 376, 378, 201, 507,
	0, 202, 0, 466, 508, 540, 223, 224, 226, 0,
	264, 268, 276, 279, 285, 286, 294, 344, 392, 416,
	414, 421, 0, 483, 501, 513, 520, 526, 527, 529,
	530, 531, 532, 533, 535, 534, 380, 293, 462, 312,
	349, 0, 0, 398, 440, 229, 505, 463, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 550, 551,
	552, 553, 554, 555, 556, 557, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 559, 360, 453,
	502, 314, 326, 329, 319, 338, 0, 339, 315, 316,
	321, 323, 324, 325, 330, 331, 335, 341, 430, 431,
	432, 433, 277, 511, 291, 436, 435, 310, 311, 355,
	419, 0, 193, 210, 345, 0, 422, 273, 537, 515,
	510, 200, 212, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 203, 211,
	221, 225, 232, 246, 261, 263, 270, 283, 292, 297,
	298, 301, 307, 356, 362, 363, 364, 365, 382, 383,
	384, 387, 390, 391, 394, 396, 397, 400, 404, 408,
	409, 410, 411, 413, 415, 423, 428, 442, 443, 444,
	445, 446, 449, 450, 455, 456, 457, 458, 459, 467,
	468, 472, 490, 492, 504, 519, 524, 448, 284, 499,
	525, 0, 354, 0, 0, 357, 266, 287, 299, 0,
	514, 469, 216, 434, 275, 238, 0, 0, 204, 235,
	219, 244, 259, 262, 303, 366, 373, 402, 407, 281,
	256, 233, 427, 230, 452, 475, 476, 477, 479, 370,
	251, 406, 0, 0, 352, 481, 482, 295,
}

var yyPact = [...]int{
	-1000, -1000, 5170, -1000, -419, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2195, 2220,
	-1000, -1000, -1000, -1000, 2371, -1000, 840, 1934, -1000, 2167,
	5641, -1000, 44279, 554, -1000, 43039, 552, 125, 44279, -1000,
	190, -1000, 163, 44279, 197, 42419, -1000, -1000, -258, 19469,
	2118, 51, 49, 44279, -1000, -1000, -1000, -1000, 2327, 1889,
	-1000, 426, -1000, -1000, -1000, -1000, -1000, -1000, 41799, -1000,
	951, -1000, -1000, 2177, 2161, 2398, 693, 2113, -1000, 2263,
	1889, -1000, 19469, 2321, 2234, 18849, 18849, 477, -1000, -1000,
	14499, -1000, -1000, 25679, 44279, 31879, 309, -1000, 2167, -1000,
	-1000, -1000, 128, -1000, 381, 1787, -1000, 1762, -1000, 730,
	818, 414, 532, 529, 413, 411, 402, 401, 399, 398,
	397, 396, 424, -1000, 711, 711, -110, -116, 342, 471,
	466, 466, 729, 510, 2145, 2144, -1000, -1000, 711, 711,
	711, 430, 711, 711, 711, 711, 364, 346, 711, 711,
	711, 711, 711, 711, 711, 711, 711, 711, 711, 711,
	711, 711, 711, 711, 711, 360, 2167, 310, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	44279, 300, 44279, -1000, 605, 44279, 828, 828, 174, 828,
	828, 828, 828, 170, 678, 48, -1000, 162, 303, 183,
	308, 832, 173, -1000, -1000, 306, 832, 1327, -1000, 699,
	154, -1000, 828, 828, -1000, 11999, 201, 11999, 11999, -1000,
	2153, -1000, -1000, -1000, -1000, 1334, -1000, 508, -1000, -1000,
	-1000, -1000, 44279, 41179, 444, 762, -1000, -1000, -1000, 88,
	-1000, -1000, 1417, 979, 19469, 1344, -1000, 1701, 668, -1000,
	-1000, -1000, -1000, -1000, 580, 20089, 20089, 20089, 20089, -1000,
	-1000, 1464, 31879, 1464, 1464, 20089, 1464, -1000, 20089, 1464,
	1464, 1464, 1464, 19469, 1464, 1464, 1464, 1464, -1000, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, -1000, -1000, 1464, 601, 1464, 1464, 1464, 1464, 1464,
	-1000, -1000, -1000, -1000, 1464, 1464, 1464, 1464, 1464, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1464, 1464,
	1464, 1464, 1464, 1464, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 23194, -1000, 16989, 1464, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 44279, -1000, 1464,
	224, 44279, 44279, 420, 2263, 1889, -1000, 2327, 2289, 426,
	-1000, 2675, 2105, 1457, 1295, 1889, 1691, 44279, -1000, 1831,
	-1000, -1000, -1000, -1000, 2020, 1133, 1316, -1000, -1000, -1000,
	-1000, 1150, 19469, -1000, -1000, 2367, -1000, 22574, 600, 2364,
	40559, -1000, 477, 477, 1752, 13874, 19, -1000, -1000, -1000,
	756, 29399, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2153, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1813, 44279, -1000, -1000,
	3980, 1290, -1000, 1928, -1000, 1766, -1000, 1891, 19469, 1837,
	551, 1290, 533, 528, 527, -1000, -35, -1000, -1000, -1000,
	-1000, -1000, -1000, 711, 711, 711, -1000, 423, 2317, 5641,
	4139, -1000, -1000, -1000, 39939, 1923, 1290, -1000, 1917, -1000,
	844, 584, 647, 647, 1290, -1000, -1000, 44279, 1290, 843,
	842, 1290, 1290, 44279, 44279, -1000, 39319, -1000, 38699, 38079,
	1121, 44279, 37459, 36839, 36219, 35599, 34979, -1000, 2242, -1000,
	1929, -1000, -1000, -1000, 44279, 1290, 1290, 44279, 44279, 44279,
	44279, 1290, -1000, -1000, 362, -1000, -1000, 1111, 1109, 1103,
	711, 711, 1101, 1315, 1300, 1296, 711, 711, 1100, 1294,
	30639, 1293, 313, 1087, 1082, 1079, 1104, 1292, 219, 1283,
	1058, 1050, 1078, 44279, 1916, 44279, -1000, 284, 771, 472,
	740, 2167, 2116, 1739, 504, 550, 1290, 470, 470, 44279,
	-1000, 12624, -1000, -1000, 1279, 19469, -1000, 852, 832, 832,
	-1000, -1000, -1000, -1000, -1000, -1000, 828, 44279, 852, -1000,
	-1000, -1000, 832, 828, 44279, 828, 828, 828, 828, 832,
	832, 832, 828, 44279, 44279, 44279, 44279, 44279, 44279, 44279,
	44279, 44279, 11999, 699, 828, -268, -1000, 1277, -1000, 1959,
	-1000, -1000, -1000, -1000, -1000, -1000, 11999, 11999, -1000, -1000,
	-1000, -1000, 185, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -27, 1727, 34359, -1000, -271, -273, -286, -290,
	-1000, -1000, -1000, -298, -299, -1000, -1000, -1000, 19469, 19469,
	19469, 19469, -144, -1000, 899, 20089, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 172, 877, 20089, 20089, 20089, 20089, 20089,
	20089, 20089, 20089, 20089, 20089, 20089, 20089, 20089, 20089, 20089,
	-1000, -1000, 27539, 5607, 5607, 668, 668, 668, 668, -1000,
	-85, 1722, 44279, -1000, -1000, 599, 19469, 19469, 668, -1000,
	1290, 16989, 33739, 18849, 18849, 19469, 2152, 773, 979, 44279,
	19469, -1000, 1295, -1000, -1000, -1000, 1021, -1000, 44279, 44279,
	1313, 19469, 19469, 19469, 19469, 19469, 19469, 15744, 19469, 19469,
	19469, 19469, 1295, 19469, 19469, 20089, 19469, 19469, 19469, 19469,
	19469, 19469, 19469, 19469, 19469, 19469, 19469, 19469, 19469, 19469,
	19469, 19469, 19469, 19469, 19469, 19469, 19469, 19469, 19469, 19469,
	19469, 19469, 1295, 19469, 1448, 19469, 19469, 15124, 12624, 18849,
	18849, 18849, 18849, 18849, -1000, -1000, -1000, -1000, -1000, 19469,
	19469, 19469, 19469, 19469, 19469, -1000, -1000, -1000, -1000, -1000,
	-1000, 1463, 1564, 1622, 19469, -1000, 1700, -1000, -108, 25059,
	19469, 1260, 2363, 1947, 44279, -1000, -1000, -1000, 2263, -1000,
	2263, 1463, 2622, 2056, 18849, -1000, -1000, 2622, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1399, -1000, 44279, 1691,
	2227, 44279, 2054, 1255, 418, -1000, 19469, 19469, 1689, -1000,
	912, 44279, -1000, -144, -1000, 33119, -1000, -1000, 11374, 44279,
	389, 44279, -1000, 24439, 32499, 13249, 19, -1000, 13249, 1602,
	-1000, 29, 14, 16364, 625, -1000, -1000, -1000, 342, 21329,
	1381, 625, 97, -1000, -1000, -1000, 1891, -1000, 1891, 1891,
	1891, 1891, 418, 418, 418, 418, -1000, -1000, -1000, -1000,
	-1000, 1914, 1913, -1000, 1891, 1891, 1891, 1891, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1911, 1911, 1911, 1893, 1893,
	455, -1000, 19469, 334, 31879, 2204, 1075, 1679, 284, 475,
	1874, 1290, 1290, 1290, 475, -1000, 1222, 1181, 1120, -1000,
	-406, 1687, -1000, -1000, 2316, -1000, -1000, 863, 889, 883,
	821, 44279, 245, 379, -1000, 446, -1000, 31879, 1290, 835,
	647, 1290, -1000, 1290, -1000, -1000, -1000, -1000, -1000, 1290,
	-1000, -1000, 1640, -1000, 1524, 936, 865, 922, 850, 1640,
	-1000, -1000, -90, 1640, -1000, 1640, -1000, 1640, -1000, 1640,
	-1000, 1640, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 758, 217, -196, 44279, 245, 487, -1000, 485, 27539,
	-1000, -1000, -1000, 27539, 27539, -1000, -1000, -1000, -1000, 1252,
	1247, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-392, 44279, -1000, 260, 739, 370, 409, 312, 44279, 272,
	2241, 2238, 2237, 2222, 319, 345, 44279, 44279, 470, 1995,
	44279, 2199, 44279, -1000, -1000, -1000, -1000, -1000, 979, 44279,
	-1000, -1000, 828, 828, -1000, -1000, 44279, 828, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 828, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 44279, -1000, -1000, -1000, -1000, 44279, -1000, -1000,
	-1000, -1000, -1000, 146, 26, 367, -1000, -1000, -1000, -1000,
	-1000, 2257, -1000, 979, 815, 822, -1000, 1464, -1000, -1000,
	924, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 172, 20089,
	20089, 20089, 1236, 522, 1099, 997, 1195, 1248, 1248, 836,
	836, 670, 670, 670, 670, 670, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1235, -1000, 1464, 44279, 1758, 12624,
	1655, 1819, 1295, 2576, -1000, 1694, -1000, 1694, 1802, 18849,
	-1000, -1000, 777, -1000, 19469, 1295, 2571, -1000, -1000, 1295,
	1295, 1638, 1614, 2362, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1647, 1679, 1679, 1679, 1679,
	1679, 19469, 1712, -1000, -1000, -1000, 1350, 2567, 1679, 1679,
	-1000, 1679, 2536, 963, 2514, 2498, 1295, 1417, 1295, 1611,
	-1000, 2474, 1679, 2459, 2452, 2411, 1561, 2395, 2387, 2368,
	1679, 1679, 1679, 1748, 2356, 2349, 2322, 2315, 2302, 2211,
	2133, 2115, 2097, 1679, -148, 1679, 1295, -1000, -1000, -1000,
	-1000, 2074, 1674, 1295, 18849, 18849, 1604, 1464, 597, -1000,
	1694, 1295, 1295, 1694, 1694, 2053, 2035, 2015, 2006, 1997,
	1992, 1295, -1000, 1622, 44279, -1000, -257, -1000, 9, 684,
	1464, -1000, 30639, 1295, -1000, 6753, -1000, 45519, -1000, -1000,
	-1000, -1000, -1000, 28779, 1865, 2622, -1000, -1000, 1464, 1733,
	-1000, -1000, 418, 99, 28159, 664, 664, 115, 979, 979,
	19469, -1000, -1000, -1000, -1000, -1000, -1000, 593, 2328, 392,
	1464, -1000, 1673, 2662, -1000, -1000, -1000, 2225, 21954, -1000,
	1464, 1464, 44279, 1757, 1459, -1000, 592, -1000, 1602, 19,
	8, -1000, -1000, -1000, -1000, 979, -1000, 1112, 395, 290,
	-1000, 453, -1000, -1000, -1000, -1000, 2130, 74, -1000, -1000,
	-1000, 246, 418, -1000, -1000, -1000, -1000, -1000, -1000, 1234,
	1234, -1000, -1000, -1000, -1000, -1000, 1074, -1000, -1000, -1000,
	1056, -1000, -1000, 1879, 1961, 334, -1000, -1000, 711, 1228,
	-1000, -1000, 2136, 711, 711, 44279, -1000, -1000, 1379, 2204,
	260, 44279, 787, 1987, -1000, 1874, 1874, 1874, 44279, -1000,
	-1000, -1000, -1000, -1000, -1000, -394, 77, 351, -1000, -1000,
	-1000, 3992, 44279, 1710, -1000, 236, -1000, 1375, -1000, 44279,
	-1000, 1708, 1907, 1290, 1290, -1000, -1000, -1000, 44279, 1464,
	-1000, -1000, -1000, -1000, 540, 2165, 304, -1000, -1000, -170,
	-1000, -1000, 245, 236, 44279, 1290, 625, -1000, -1000, -1000,
	-1000, -1000, -395, 1702, 520, 247, 336, 44279, 44279, 44279,
	44279, 44279, 565, -1000, -1000, -1000, -1000, 234, -1000, -1000,
	-1000, 234, -1000, -1000, -1000, -1000, 316, 484, -1000, 44279,
	44279, 631, -1000, -1000, -1000, 832, -1000, -1000, 832, -1000,
	-1000, -1000, -1000, -1000, 2155, 44279, 24, -326, -1000, -323,
	19469, -1000, -1000, -1000, -1000, 1081, 521, 1099, 20089, 20089,
	20089, -1000, -1000, -1000, 662, 662, 27539, -1000, 19469, 18849,
	-1000, -1000, 19469, 19469, 1567, 767, -1000, 19469, 1010, -1000,
	19469, -1000, -1000, 19469, 19469, 19469, 1295, 318, -1000, -1000,
	-1000, -1000, -1000, 2361, -1000, 19469, -1000, 27539, 19469, -1000,
	-1000, -1000, 19469, 19469, 19469, 19469, -1000, -1000, 19469, 19469,
	-1000, 19469, 19469, 20709, 1295, 20709, 19469, 19469, 20709, -1000,
	-1000, -1000, -1000, 20709, 19469, 19469, 19469, 19469, 19469, 19469,
	19469, 19469, 19469, -1000, -1000, 31879, 94, -148, 1448, 94,
	1448, -1000, 1694, 1694, 18849, 12624, -1000, -1000, -1000, -1000,
	-1000, 19469, 19469, 19469, 19469, 19469, 19469, -1000, -1000, -1000,
	-1000, -1000, 684, -1000, 647, 647, 647, 44279, -1000, -1000,
	-1000, -1000, -1000, -1000, 1598, 2260, -1000, 2064, 2063, 2357,
	2328, -1000, 24439, 2622, -1000, -1000, 44279, -251, -1000, 2110,
	2102, 664, 664, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	10749, 2263, 19469, 1986, 44279, 175, -1000, 23819, 44279, 44279,
	24439, 24439, 24439, 24439, 24439, -1000, 2031, 2028, -1000, 2016,
	2009, 2040, 44279, -1000, 1681, 1295, 2289, 21954, 426, 19469,
	26299, 1573, 24439, -1000, -1000, 24439, 44279, 10124, -1000, -1000,
	13, -1, -1000, -1000, -1000, -1000, 342, -1000, -1000, 3374,
	2221, 2127, -1000, -1000, -1000, -1000, -1000, 1676, -1000, 1671,
	1589, 1667, 217, -1000, 1824, 2149, 711, 711, -1000, 1049,
	-1000, 1290, 1227, 1226, -1000, -1000, -1000, 515, -1000, 2185,
	44279, 1985, 1984, 1982, -1000, -404, 1047, 1906, 1807, 19469,
	1897, 2311, 1516, 44279, -1000, -1000, 44279, -1000, 187, -1000,
	334, 44279, -1000, -1000, -1000, 379, 44279, -1000, 6344, -1000,
	-1000, -1000, 236, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	44279, 294, -1000, 1896, 1331, -1000, -1000, 1836, -1000, -1000,
	-1000, -1000, 195, 369, 205, 1215, 205, -1000, 44279, 624,
	1961, 44279, -1000, -1000, -1000, 828, 828, -1000, -1000, 2148,
	-1000, 1290, 1679, 20089, 20089, -1000, 668, 321, -126, 1891,
	1891, -1000, 1891, 1893, -1000, 1891, 139, 1891, 137, 1891,
	-1000, -1000, 1295, 1295, 1622, -1000, 1669, 1665, -43, -1000,
	979, 19469, 1908, 1898, 1894, 1679, -1000, 1884, 1878, 19469,
	1679, 1295, 1679, 1641, 1679, 1679, 1679, -1000, 979, 1561,
	1887, 1489, -1000, -1000, -1000, -1000, 1584, 1679, 1869, -248,
	1295, 1644, 1644, 1644, 1644, 1644, 1622, 1622, 1622, 1622,
	44279, -1000, -148, -1000, -1000, -188, -192, -1000, 1295, -148,
	1581, -1000, -1000, 1295, -1000, 1634, 1579, 1852, 1568, 1679,
	1848, -1000, 2243, 2243, 2243, 1577, 44899, 44279, -1000, -1000,
	-1000, -1000, 2328, 2335, 1554, -1000, -1000, 99, 419, -1000,
	2091, 2102, -1000, 2305, 2094, 2304, -1000, -1000, -1000, -1000,
	-1000, 979, -1000, 2173, 1433, -1000, 732, 1420, -1000, -1000,
	18229, 1587, 2060, 585, 1577, 1832, 2662, 1951, 1980, 2650,
	-1000, -1000, -1000, -1000, 2019, -1000, 2008, -1000, -1000, 1831,
	-1000, -1000, 1564, 1295, 1823, 389, 24439, 1575, 1575, -1000,
	578, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 927, 4928,
	2393, -1000, 1212, -1000, 1090, 216, 1045, -1000, -1000, 711,
	711, -1000, 834, 833, -1000, 44279, 1868, -1000, 418, 1205,
	418, 1042, -1000, 1024, -1000, -1000, -1000, -1000, 1862, 1990,
	-1000, -1000, -1000, -1000, 44279, -1000, -1000, 44279, 44279, 44279,
	1864, 2295, -1000, 19469, 1861, 728, 1833, 44279, 44279, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	489, 711, -374, 340, 326, 711, 711, 711, -405, -1000,
	-1000, 1559, 1552, -1000, -107, -1000, 19469, -1000, -1000, -1000,
	998, 998, -1000, 1831, -1000, -1000, -1000, 1365, -1000, -1000,
	-95, 44279, 44279, 44279, 44279, -1000, 981, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 668,
	1295, 330, -97, 1295, -1000, -1000, 418, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19469, -1000, 19469,
	-1000, 2263, 1204, 979, 19469, 19469, 19469, -1000, 1019, 1012,
	1679, -1000, -1000, -1000, -1000, 19469, -1000, -1000, -1000, 1295,
	20709, -1000, 20709, -1000, 19469, 248, 662, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1295, 387, -1000,
	-1000, -1000, -1000, 2345, -1000, 1295, 19469, -1000, -1000, 19469,
	-1000, 19469, 19469, -1000, 19469, -1000, 19469, 1464, 2111, 1464,
	1464, 26299, -1000, -1000, 2335, 2325, 2286, 2088, 2100, 2100,
	2091, -1000, 2285, 2283, -1000, 1201, 2281, 1199, 829, -1000,
	44279, 19469, 175, -1000, 445, 44279, 175, 44279, -1000, 2323,
	-1000, -1000, 19469, 1857, -1000, 19469, -1000, -1000, -1000, -1000,
	-1000, -1000, 5607, 2328, 1575, -1000, -1000, 677, -1000, 19469,
	-1000, -1000, -1000, 5513, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1197, 1192, -1000, -1000, 1845, 19469, -1000, -1000,
	-1000, 1360, 1355, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1831, -1000, -1000, -1000, -1000, 379, -403, 1827, 44279,
	1008, -1000, 1549, 1516, 339, 175, 1191, 711, 711, 711,
	996, 969, 30639, 1511, -1000, 44279, 438, -1000, 379, -1000,
	-118, -120, 1679, -1000, -1000, 2219, -1000, -1000, 12624, -1000,
	-1000, 1830, 1871, -1000, -1000, -1000, -1000, 2051, -88, -104,
	-1000, -1000, 1679, 1679, 1295, -1000, 1798, 1679, 1679, 1351,
	1342, -1000, 1679, -1000, 1489, -1000, 1443, -1000, 248, 1295,
	1977, -1000, -1000, 5607, -1000, -1000, 2323, 2268, 94, -1000,
	-1000, 285, 94, 979, 1378, 1679, 1374, 1367, 1679, 26919,
	-1000, 2267, 2265, 31259, 31259, 684, 2325, -158, 19469, 19469,
	2070, 973, -1000, -1000, -1000, -1000, 1190, 1189, -1000, 1165,
	-1000, 2383, -1000, 979, -1000, 175, -1000, 573, 1420, -1000,
	2263, 979, 44279, 979, 70, 2323, -1000, 1679, -1000, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464, 1464,
	1464, 1464, 1464, 1464, 1464, -1000, -1000, 44279, 1788, -1000,
	-1000, 2216, 1483, 75, -1000, 1475, -1000, -1000, 169, -1000,
	19469, -1000, 30639, 1161, 1160, -1000, -1000, -1000, -1000, -405,
	-1000, -1000, -1000, -1000, -1000, -1000, 426, 1493, -1000, 710,
	44279, 44279, -1000, 2042, -1000, -1000, -1000, -1000, 19469, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19469, -1000, 1295, 1969,
	-1000, -211, -1000, -375, 19469, -148, -1000, -1000, -148, -1000,
	19469, -1000, -1000, 19469, -1000, 19469, -1000, 1453, -1000, -1000,
	-1000, -1000, -1000, 1453, 1453, -1000, -158, -1000, 1468, -1000,
	44279, 979, 1417, -1000, 971, -1000, -1000, -1000, -1000, -1000,
	44279, 1420, 44279, -1000, 1446, 1295, 1464, 2263, -1000, 1438,
	-1000, 426, -1000, 1818, 1807, -1000, -1000, -1000, 17609, -1000,
	-1000, -1000, -1000, -1000, 215, -93, 12624, 9499, 1384, -1000,
	-91, 1679, 1561, -1000, -309, -1000, -1000, -1000, -1000, 168,
	-1000, -1000, 1417, -1000, -1000, 1338, 1230, 1213, 30019, -1000,
	-1000, -1000, -1000, -158, -1000, -1000, 2209, -1000, -1000, 1402,
	-1000, -1000, 26299, 43659, -1000, -81, 227, -93, 19469, 1804,
	1295, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 61,
	-1000, -1000, -1000, -1000, -1000, 1836, -100, -1000, 1295, -1000,
	171, -364, -182, -190, -1000, -1000, 20089, -1000, 19469, -1000,
	19469, -1000, 19469, -1000, -1000, -1000, 44279, 1464, -1000, 1370,
	-1000, 3266, -202, 1965, -1000, -42, -1000, -1000, -1000, 921,
	1139, -1000, -1000, -1000, -1000, -1000, -1000, 1784, 44279, -1000,
	448, -1000, -1000, -95, -105, -1000, 817, -1000, -1000, -1000,
	-1000, -1000, 1208, 1168, 1679, -1000, 44279, -1000, 43659, -195,
	625, 5607, -1000, 1962, 1955, 2343, -1000, -1000, -1000, -1000,
	-1000, -1000, -415, 1364, 282, -1000, -1000, 171, -1000, 19469,
	-1000, 19469, -1000, 1295, -1000, -1000, 2182, 70, -1000, 2378,
	-1000, 2373, 667, 667, -1000, 959, -415, -1000, -1000, 1679,
	1679, -1000, -208, -1000, -1000, -1000, -1000, -1000, 454, 994,
	-1000, -1000, -1000, -1000, -1000, 5607, -1000, -1000, -1000, 252,
	252, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2871, 2869, 31, 6, 55, 54, 2868, 49, 118,
	204, 40, 205, 112, 2866, 2861, 2860, 2859, 2857, 2856,
	2847, 239, 235, 234, 2844, 2842, 2837, 2835, 2832, 2831,
	2830, 2829, 2828, 2827, 229, 177, 201, 2826, 2825, 2824,
	127, 202, 102, 104, 190, 2822, 2820, 95, 2817, 2815,
	2814, 197, 195, 193, 825, 2813, 188, 134, 57, 2811,
	2810, 2808, 2806, 2805, 2802, 2801, 2798, 2797, 2795, 2793,
	2791, 2790, 2789, 2788, 2787, 2786, 199, 2785, 2783, 23,
	2782, 97, 2781, 2780, 2779, 2778, 11, 2777, 2776, 14,
	38, 2775, 2774, 50, 2773, 2772, 2771, 2770, 2769, 20,
	2768, 28, 2767, 36, 2766, 2765, 145, 2764, 2763, 2761,
	37, 2760, 2759, 2757, 2755, 2753, 2751, 2750, 164, 2749,
	2748, 2747, 2746, 206, 2744, 2743, 224, 123, 130, 2741,
	2737, 124, 192, 2736, 138, 2733, 2725, 2724, 171, 2721,
	3544, 2711, 2708, 81, 80, 2701, 356, 2700, 2691, 10,
	24, 84, 15, 5, 3, 2690, 2688, 79, 90, 2683,
	125, 113, 91, 2682, 117, 136, 2677, 2676, 13, 8,
	2673, 9, 2, 4, 85, 2671, 2665, 133, 2664, 2662,
	2661, 110, 2659, 2657, 1367, 2656, 108, 154, 120, 94,
	2651, 41, 78, 2647, 2643, 2633, 2632, 2629, 63, 2627,
	2626, 2625, 160, 65, 178, 2624, 46, 45, 69, 153,
	2621, 43, 98, 176, 2620, 2615, 159, 156, 2609, 2608,
	75, 39, 68, 2607, 109, 152, 137, 30, 106, 158,
	2606, 2604, 77, 93, 2603, 2602, 2600, 2599, 179, 2596,
	2593, 88, 2589, 71, 2586, 207, 2584, 21, 2583, 61,
	47, 2577, 82, 144, 87, 35, 2576, 182, 2573, 67,
	187, 147, 183, 2569, 2567, 2566, 2564, 191, 331, 2560,
	2552, 155, 180, 165, 170, 103, 2551, 341, 2545, 2544,
	105, 1766, 5294, 2543, 29, 196, 2538, 2537, 6361, 162,
	73, 27, 2532, 143, 2530, 2529, 2522, 203, 184, 119,
	1028, 76, 2521, 2520, 2519, 19, 2515, 2514, 2511, 2510,
	2509, 2508, 122, 51, 48, 44, 208, 83, 18, 121,
	186, 92, 2505, 2500, 2499, 141, 101, 2496, 175, 174,
	167, 151, 2493, 185, 169, 132, 2490, 456, 42, 2489,
	2486, 2484, 2483, 107, 2479, 2477, 2476, 2472, 173, 163,
	142, 99, 2467, 100, 139, 166, 168, 60, 2466, 62,
	2464, 2462, 34, 189, 33, 2457, 17, 86, 72, 32,
	126, 161, 2452, 0, 2450, 22, 181, 340, 172, 2447,
	2445, 7, 12, 16, 2444, 2442, 2439, 2437, 157, 2435,
	2430, 2424, 2421, 26, 70, 25, 1, 128, 96, 2418,
	2417, 4850, 2051, 148, 2414, 213,
}

//line sql.y:7652
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 399, 400, 400, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 373, 373,
	373, 376, 376, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	403, 403, 179, 179, 177, 177, 178, 178, 252, 252,
	24, 25, 25, 262, 262, 261, 261, 261, 263, 263,
	263, 263, 300, 300, 26, 26, 26, 26, 26, 124,
	124, 375, 375, 374, 366, 366, 365, 365, 364, 372,
	372, 371, 371, 370, 38, 39, 48, 48, 48, 48,
	49, 50, 377, 377, 339, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 341, 341, 327, 327, 340, 340, 340, 340, 340,
	340, 340, 326, 326, 135, 135, 230, 230, 230, 230,
	230, 230, 230, 230, 230, 230, 230, 230, 230, 230,
	230, 230, 230, 392, 392, 392, 391, 391, 231, 231,
	231, 231, 231, 231, 231, 231, 145, 145, 157, 157,
	157, 157, 157, 143, 143, 144, 142, 142, 142, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 396, 396, 396, 396, 396, 396, 396,
	396, 396, 396, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 393, 393, 393, 393, 305, 305, 305,
	305, 308, 308, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 307, 307, 307, 307, 307, 309, 309, 309,
	309, 309, 310, 310, 310, 310, 310, 310, 310, 310,
	310, 310, 310, 310, 310, 310, 310, 310, 311, 311,
	311, 311, 311, 311, 311, 311, 325, 325, 312, 312,
	320, 320, 321, 321, 321, 322, 322, 322, 323, 323,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 319,
	319, 318, 318, 318, 328, 353, 353, 352, 352, 350,
	350, 350, 350, 350, 350, 350, 350, 337, 337, 347,
	347, 347, 347, 347, 336, 336, 332, 332, 332, 333,
	333, 334, 334, 331, 331, 335, 335, 349, 349, 348,
	348, 329, 329, 330, 330, 355, 394, 394, 394, 394,
	394, 395, 395, 356, 384, 386, 386, 386, 385, 385,
	382, 383, 381, 381, 381, 381, 381, 81, 81, 81,
	275, 275, 276, 276, 345, 345, 344, 344, 344, 346,
	346, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 270, 270, 270, 380, 380, 380, 380, 380,
	380, 379, 379, 379, 342, 342, 342, 378, 378, 57,
	57, 212, 212, 397, 397, 398, 398, 398, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 106, 106, 107, 107, 107,
	107, 109, 109, 109, 358, 358, 58, 58, 3, 3,
	167, 169, 170, 170, 168, 168, 168, 168, 168, 168,
	60, 60, 59, 59, 172, 171, 173, 173, 173, 1,
	1, 2, 2, 4, 4, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 363, 363, 363,
	363, 363, 363, 363, 363, 363, 363, 324, 324, 324,
	357, 357, 359, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 112, 111, 111, 110, 113, 113, 113,
	113, 113, 113, 113, 113, 361, 361, 361, 61, 61,
	362, 313, 314, 315, 5, 6, 338, 360, 120, 120,
	28, 37, 37, 29, 29, 29, 29, 30, 30, 62,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 269, 269, 278, 278, 268, 268, 293, 293, 293,
	271, 271, 271, 272, 272, 390, 390, 390, 265, 265,
	64, 64, 64, 66, 66, 67, 68, 68, 295, 295,
	296, 296, 69, 70, 82, 82, 82, 82, 82, 82,
	105, 105, 105, 15, 15, 15, 15, 78, 78, 78,
	14, 14, 65, 65, 72, 387, 387, 388, 389, 389,
	389, 389, 73, 75, 31, 31, 31, 31, 31, 31,
	130, 130, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 125, 125, 125, 119, 119, 404,
	76, 77, 77, 123, 123, 123, 116, 116, 116, 122,
	122, 122, 16, 16, 17, 251, 251, 18, 18, 127,
	127, 129, 129, 129, 129, 129, 131, 131, 131, 131,
	131, 131, 131, 126, 126, 128, 128, 128, 128, 286,
	286, 286, 285, 285, 161, 161, 163, 162, 162, 164,
	164, 165, 165, 165, 165, 210, 210, 187, 187, 249,
	249, 247, 247, 248, 248, 250, 250, 250, 250, 253,
	253, 166, 166, 166, 166, 174, 174, 175, 175, 176,
	176, 294, 294, 291, 291, 291, 290, 290, 180, 180,
	180, 182, 181, 181, 181, 181, 183, 183, 185, 185,
	184, 184, 186, 191, 191, 190, 190, 188, 188, 188,
	188, 189, 189, 189, 189, 192, 192, 140, 140, 140,
	140, 140, 140, 140, 155, 155, 155, 155, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 238,
	238, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 149, 214,
	214, 213, 213, 83, 83, 83, 84, 84, 85, 85,
	85, 85, 85, 86, 86, 86, 86, 86, 141, 141,
	88, 88, 87, 87, 205, 205, 283, 283, 89, 90,
	90, 93, 93, 92, 91, 91, 97, 97, 94, 94,
	96, 96, 95, 98, 98, 99, 100, 100, 266, 266,
	193, 193, 201, 201, 201, 201, 194, 194, 194, 194,
	194, 194, 194, 202, 202, 202, 209, 203, 203, 199,
	199, 199, 199, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	160, 160, 160, 160, 219, 219, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 148, 148, 302, 302, 369, 369, 368, 368, 367,
	367, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 405, 405, 316, 316, 316, 316, 200, 200,
	200, 200, 200, 121, 121, 121, 121, 121, 299, 299,
	299, 303, 303, 303, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 304,
	304, 217, 217, 117, 117, 215, 215, 216, 218, 218,
	211, 211, 211, 196, 196, 196, 220, 220, 221, 221,
	101, 102, 102, 103, 103, 222, 222, 224, 223, 223,
	225, 226, 226, 226, 227, 227, 228, 228, 228, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 43, 132, 132, 132, 132, 134, 134, 133, 133,
	79, 79, 80, 80, 80, 138, 138, 139, 139, 139,
	136, 136, 137, 137, 245, 245, 229, 229, 229, 236,
	236, 236, 232, 232, 234, 234, 234, 235, 235, 235,
	233, 242, 242, 244, 244, 243, 243, 239, 239, 240,
	240, 241, 241, 241, 237, 237, 195, 195, 195, 195,
	195, 246, 246, 246, 246, 254, 254, 206, 206, 208,
	208, 207, 207, 159, 255, 255, 259, 256, 256, 260,
	260, 260, 260, 260, 257, 257, 258, 258, 287, 287,
	287, 264, 264, 277, 277, 273, 273, 274, 274, 267,
	267, 279, 279, 279, 74, 204, 204, 354, 354, 351,
	282, 282, 284, 284, 288, 288, 292, 292, 289, 289,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 280,
	280, 280, 280, 280, 280, 280, 280, 280, 280, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 401, 402, 297, 298,
	298, 298,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 3, 3, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	5, 7, 7, 5, 5, 0, 6, 5, 6, 4,
	5, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	8, 4, 1, 3, 3, 6, 7, 7, 8, 4,
	0, 1, 0, 1, 3, 3, 1, 1, 2, 1,
	1, 0, 2, 0, 2, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 3, 1, 3, 3, 0, 2, 2,
	2, 2, 2, 2, 2, 4, 4, 3, 0, 1,
	4, 3, 4, 4, 3, 3, 3, 2, 1, 3,
	3, 3, 5, 7, 7, 6, 5, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 2, 4, 4,
	4, 4, 4, 2, 3, 3, 3, 5, 2, 3,
	3, 2, 3, 4, 4, 4, 3, 4, 4, 5,
	3, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 1, 1,
	2, 1, 3, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 5, 5, 4, 0, 2, 4, 4, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 1, 3, 4, 3, 7, 0,
	3, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 7, 7,
	6, 6, 2, 2, 1, 6, 3, 3, 3, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 1,
	0, 1, 2, 5, 0, 3, 0, 1, 4, 4,
	2, 0, 1, 1, 2, 2, 1, 1, 2, 2,
	0, 1, 1, 1, 1, 5, 1, 3, 0, 3,
	1, 1, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 4,
	5, 5, 6, 4, 4, 8, 6, 8, 6, 8,
	5, 4, 10, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	4, 6, 6, 6, 4, 4, 3, 4, 6, 8,
	6, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 6, 5, 9, 6, 9, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -399, -76, -404, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 9, 10, -104, -33, 32, -38, -48, 222, -49,
	-39, 223, -50, 225, 224, 261, 226, 254, 74, 307,
	308, 310, 311, 312, 313, -105, 259, 260, 228, 36,
	45, 33, 34, 37, 232, 267, 268, 231, -10, -34,
	8, -401, 11, 439, 256, 255, 28, -12, 486, 86,
	-77, -400, 629, -245, -229, 22, 33, 29, -228, -224,
	-123, -229, 20, 18, 7, -76, -76, -76, 12, 13,
	-76, -339, -341, 86, 156, 86, -76, -55, -54, -52,
	-51, -53, -56, 31, -45, -46, -363, -44, -41, 227,
	224, 271, 120, 121, 261, 262, 263, 226, 245, 260,
	264, 259, 280, -40, 81, 33, 486, 489, -346, 223,
	229, 230, 225, 440, 123, 122, 75, -343, 362, 519,
	599, -56, 601, 102, 104, 600, 44, 235, 602, 603,
	604, 526, 605, 244, 606, 607, 608, 609, 615, 567,
	616, 617, 618, 124, 7, -76, -292, -288, -373, -281,
	89, 90, 91, 483, 247, 517, 518, 296, 81, 41,
	492, 359, 362, 519, 599, 307, 321, 315, 342, 334,
	484, 520, 493, 299, 248, 284, 593, 332, 132, 601,
	302, 521, 262, 367, 368, 522, 369, 102, 310, 406,
	614, 301, 523, 612, 104, 600, 79, 51, 596, 44,
	257, 330, 231, 326, 602, 285, 524, 495, 278, 123,
	120, 621, 36, 324, 50, 30, 611, 122, 49, 603,
	147, 525, 604, 526, 371, 349, 587, 48, 372, 263,
	527, 84, 268, 488, 305, 595, 373, 473, 325, 374,
	295, 610, 228, 528, 579, 375, 376, 588, 354, 350,
	355, 475, 529, 398, 377, 628, 52, 530, 531, 589,
	121, 532, 78, 605, 80, 319, 320, 533, 293, 246,
	478, 479, 400, 346, 452, 459, 460, 108, 109, 455,
	110, 461, 111, 462, 463, 464, 453, 112, 105, 454,
	465, 466, 347, 348, 113, 467, 107, 106, 456, 458,
	114, 468, 244, 35, 378, 485, 297, 58, 272, 401,
	46, 352, 625, 45, 583, 480, 534, 586, 345, 341,
	449, 53, 535, 536, 537, 538, 606, 344, 318, 340,
	620, 4, 290, 607, 62, 230, 357, 356, 358, 279,
	397, 337, 539, 540, 541, 251, 82, 542, 327, 21,
	543, 544, 379, 286, 545, 56, 546, 547, 404, 260,
	548, 54, 608, 39, 549, 265, 622, 609, 550, 551,
	552, 553, 267, 554, 381, 555, 380, 351, 353, 481,
	274, 382, 487, 556, 306, 323, 264, 613, 557, 252,
	469, 470, 471, 472, 594, 477, 476, 266, 271, 259,
	405, 253, 558, 559, 560, 561, 562, 300, 578, 563,
	564, 311, 615, 450, 43, 565, 566, 567, 568, 569,
	294, 289, 399, 408, 61, 83, 364, 570, 571, 592,
	317, 287, 572, 308, 55, 616, 617, 618, 281, 619,
	9, 626, 627, 384, 124, 291, 292, 47, 338, 273,
	573, 303, 574, 328, 329, 343, 316, 339, 309, 580,
	275, 385, 451, 261, 575, 407, 288, 360, 365, 304,
	491, 474, 280, 386, 591, 490, 336, 333, 282, 576,
	387, 236, 276, 277, 577, 581, 388, 389, 298, 390,
	391, 392, 393, 394, 396, 395, 283, 489, 314, 331,
	366, 420, 421, 422, 423, 424, 425, 426, 427, 428,
	429, 430, 431, 432, 433, 434, 435, 436, 437, 448,
	234, -76, 234, -184, -288, 234, -257, 368, -278, 370,
	383, 378, 388, 376, -269, 379, 381, 274, -390, 398,
	234, 385, 222, 371, 380, 389, 390, 298, 396, 391,
	395, 283, 392, 393, 394, -373, 174, 604, 619, 132,
	335, 375, 373, 399, 583, -288, 309, -295, 314, -282,
	-373, -281, 312, -184, -82, 579, 226, -297, -297, -125,
	583, 585, -203, -140, 140, -155, -158, -146, -150, -197,
	-198, -199, -200, -156, -211, 163, 164, 171, 141, -209,
	-159, 26, 482, 441, 440, 174, 31, -149, 217, 68,
	69, 443, 444, 143, 57, 11, 416, 417, -157, 411,
	418, 413, 446, 447, 115, 448, 105, 107, 106, 449,
	450, 451, 332, 475, 478, 479, 477, 476, 480, 481,
	347, 348, 452, 453, 454, 108, 109, 110, 111, 112,
	113, 114, 455, 458, 456, 457, 459, 460, 461, 466,
	467, 462, 463, 464, 465, 468, -85, -97, 508, 507,
	-98, -147, -148, -282, -288, 239, 410, 233, 169, 439,
	-151, -144, -8, -207, 409, 414, 415, 419, 412, 494,
	496, 511, 512, 514, 499, 504, 503, 506, 469, 470,
	471, 472, 473, 474, -373, -281, -153, -152, -193, 92,
	98, 103, 99, -396, 116, -401, 597, 93, 94, 95,
	96, 97, 117, 118, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 44, 384, 384, -184,
	-76, -76, -76, -76, -222, -123, -224, -10, -8, -401,
	8, -76, -8, -9, -13, -34, -36, 513, -35, -288,
	101, -229, -245, 12, 159, 42, 50, -227, -228, -12,
	-8, -140, 19, 23, 24, -128, 165, -140, -288, -128,
	-267, 238, -76, -76, -256, -300, 309, -260, 399, 398,
	-284, -258, -282, -280, -257, 397, 227, 23, 139, 25,
	27, 142, 174, 127, 19, 143, 37, 229, 335, 245,
	173, 241, 440, 222, 72, 494, 411, 413, 409, 416,
	442, 443, 410, 370, 31, 13, 496, 28, 255, 24,
	38, 167, 224, 146, 497, 258, 26, 256, 115, 118,
	499, 22, 75, 250, 14, 243, 40, 16, 500, 501,
	17, 239, 238, 159, 235, 70, 11, 217, 29, 155,
	66, 502, 134, 503, 504, 505, 506, 128, 68, 156,
	20, 623, 414, 415, 33, 584, 482, 269, 169, 73,
	59, 585, 140, 412, 507, 508, 116, 509, 119, 76,
	590, 136, 18, 71, 42, 510, 270, 511, 240, 624,
	512, 402, 513, 157, 225, 439, 69, 158, 597, 514,
	598, 233, 383, 8, 445, 32, 254, 242, 126, 67,
	515, 234, 145, 446, 447, 237, 129, 117, 7, 133,
	34, 12, 74, 77, 417, 418, 419, 57, 125, 486,
	144, 15, 516, 403, 138, 132, -340, 156, -326, -330,
	-282, 249, -356, 245, -184, -349, -348, -282, -401, -124,
	-277, 235, 243, 242, 133, -377, 136, 291, 410, 233,
	-51, -52, -53, -257, 173, 603, -106, 266, 270, 87,
	87, -330, -329, -328, -378, 270, 249, -355, -347, 241,
	250, -336, 242, 243, -331, 235, 134, -378, -331, 240,
	250, 245, 249, 270, 270, 124, 270, 124, 270, 270,
	270, 270, 270, 270, 270, 270, 270, 265, -337, 148,
	-337, 490, 490, -343, -378, 245, 235, -378, -378, 241,
	-279, -331, 237, 25, 237, 35, 35, -337, -337, -337,
	-257, 173, -337, -337, -337, -337, 278, 278, -337, -337,
	-337, -337, -337, -337, -337, -337, -337, -337, -337, -337,
	-337, -337, -337, -337, -337, 234, -377, -132, 395, 298,
	81, -54, 280, -37, -184, -277, 235, 236, -377, 267,
	-184, 218, -184, -271, 156, 15, -271, -268, 384, 382,
	369, 374, -271, -271, -271, -271, 281, 367, -332, 235,
	35, 246, 384, 281, 367, 281, 282, 281, 282, 377,
	387, 281, -293, 14, 159, 410, 372, 376, 274, 234,
	275, 236, 386, 282, -293, 93, -272, 156, 384, 277,
	-271, -271, -298, -401, -284, 335, -373, 586, -298, -298,
	32, 90, 237, -282, -78, -282, 93, -15, -11, -22,
	-21, -23, 148, -130, 384, -118, 174, 604, 587, 588,
	589, 586, 381, 594, 592, 590, 281, 591, 87, 136,
	138, 139, 4, -140, 155, -194, 148, 149, 150, 151,
	152, 153, 154, 159, 140, 142, 156, -238, 137, 160,
	161, 162, 163, 164, 165, 166, 168, 167, 169, 170,
	157, 158, 173, 220, 221, -150, -150, -150, -150, -209,
	-214, -213, -401, -211, -282, -288, -401, -401, -150, -266,
	-401, -401, -150, -401, -401, -401, -401, -217, -140, -401,
	-401, -405, -401, -405, -405, -316, -401, -316, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, -401, -401,
	-401, -401, -401, -401, -401, -401, -401, -401, 218, -401,
	-401, -401, -401, -401, -316, -316, -316, -316, -316, -401,
	-401, -401, -401, -401, -401, 103, 98, 92, -211, 99,
	93, -8, -9, -203, -401, -297, -387, -388, -187, -184,
	-401, 298, -282, -282, 267, -227, -12, -8, -222, -228,
	-224, -8, -76, -116, -129, 63, 64, -131, 24, 38,
	67, 65, 23, -402, 88, -402, -245, -402, 87, -36,
	-249, 86, 61, 43, 93, 93, 87, 21, -223, -225,
	-140, 14, -286, 4, -285, 25, -282, 93, 218, 14,
	-185, 29, -184, -267, -267, 87, 309, -260, -300, -262,
	-261, 400, 402, 148, -287, -282, 93, 31, 88, 87,
	-184, -305, -308, -310, -309, -311, -306, -307, 332, 333,
	174, 336, 338, 339, 340, 341, 342, 343, 344, 345,
	346, 349, 32, 257, 328, 329, 330, 331, 350, 351,
	352, 353, 355, 356, 357, 358, 315, 334, 484, 316,
	317, 318, 319, 320, 321, 323, 324, 325, 326, 327,
	-376, -373, 86, 88, 87, -312, 86, -140, -132, 234,
	-373, 235, 235, 235, -76, 439, -337, -337, -337, 265,
	19, -44, -41, -363, 18, -40, -41, 227, 120, 121,
	224, 86, -326, 86, -335, -376, -373, 86, 134, 240,
	133, -334, -331, -334, -335, -373, -211, -373, 134, 134,
	-373, -373, -253, -282, -253, -253, 23, -253, 23, -253,
	23, 95, -282, -253, 23, -253, 23, -253, 23, -253,
	23, -253, 23, 31, 78, 79, 80, 31, 82, 83,
	84, -211, -373, -373, -211, -326, -211, -184, -373, -257,
	95, 95, 95, -337, -337, 95, 93, 93, 93, -337,
	-337, 95, 93, -290, -288, 93, 93, -379, 251, 295,
	297, 95, 95, 95, 95, 31, 93, -380, 31, 611,
	610, 612, 613, 614, 93, 95, 31, 95, 31, 95,
	-282, 86, -184, -138, 285, 222, 224, 227, 76, 93,
	301, 299, 303, 304, 148, 44, 87, 237, 234, -373,
	-273, 239, -273, -282, -289, -288, -280, 93, -140, -333,
	14, 159, -293, -293, -271, -184, -333, -293, -271, -184,
	-271, -271, -271, -271, -293, -293, -293, -271, -288, -288,
	-184, -184, -184, -184, -184, -184, -184, -298, -272, -271,
	586, 93, -265, 14, 76, -298, -298, -296, 312, 346,
	580, 581, 582, 87, 486, -177, -184, 586, 586, 586,
	586, 586, 586, -140, -140, -140, -140, 509, -201, 116,
	140, 117, 118, -158, -202, -207, -209, 100, 159, 142,
	156, -238, -146, -150, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -146, -146, -299, -282, 93,
	174, -154, -153, 99, -396, -154, 483, 87, -213, 218,
	-140, -140, -373, -140, -282, -126, -128, -126, -140, -122,
	24, 38, -215, -216, 144, -211, -140, -402, -402, 95,
	99, -282, -282, -115, -114, 421, 422, 423, 424, 426,
	427, 428, 431, 432, 436, 437, 420, 438, 425, 430,
	433, 434, 435, 429, 331, -140, -140, -140, -140, -140,
	-140, -83, -140, 127, 128, 129, -203, -140, -140, -140,
	-402, -140, -140, -146, -140, -140, -204, -203, -372, -371,
	-370, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -402, -140, -160, -144, 95, -373,
	99, -140, -140, -127, 24, 38, -126, -284, -289, -280,
	-126, -127, -127, -126, -126, -140, -140, -140, -140, -140,
	-140, -245, -402, -203, 87, -389, 402, 403, 584, -291,
	270, -290, 25, -204, 93, 14, -251, 77, -282, -227,
	-227, 63, 64, 59, -126, -131, -402, -35, 25, -247,
	-282, 62, 93, -317, -257, 359, 360, 174, -140, -140,
	87, -226, 27, 28, -184, -285, 165, -289, -184, -252,
	270, -184, -162, -164, -165, -166, -187, -210, -401, -167,
	505, 502, 14, -177, -178, -186, -288, -260, -262, 87,
	401, 403, 404, 76, 119, -140, -318, 173, -345, -344,
	-343, -326, -328, -329, -330, 88, -318, -322, 365, 364,
	-312, -312, -312, -312, -312, -317, -317, -317, -317, 86,
	86, -312, -312, -312, -312, -320, 86, -320, -320, -321,
	86, -321, -356, -140, -353, -352, -350, -351, 244, 102,
	577, 533, 486, 526, 567, 77, -348, -226, 95, -402,
	-138, -274, 239, -354, -351, -373, -373, -373, -274, -373,
	93, -373, 93, -373, 93, -107, -58, -1, 623, 624,
	625, 87, 19, -327, -326, -57, 295, -359, -360, 270,
	-355, -349, -335, 134, -334, -335, -335, -373, 87, 29,
	124, 124, 124, 124, 486, 224, 32, -275, 525, 140,
	577, 533, -326, -57, 237, 237, -299, -299, -299, 93,
	93, -270, 619, -177, -134, 287, 148, 276, 276, 234,
	234, 289, -184, 300, 302, 301, 299, 303, 304, 23,
	23, 23, 23, 288, 290, 292, 278, -184, -184, -273,
	76, -179, -184, 26, -288, -184, -271, -271, -184, -271,
	-271, -184, -282, -118, 402, 87, 486, 22, -119, 22,
	-401, 116, 117, 118, -202, -146, -150, -146, 139, 258,
	-401, -211, -402, -284, 25, 87, 77, -402, 87, 87,
	-402, -402, 87, 14, -126, -218, -216, 146, -140, -402,
	87, -402, -402, 87, 87, 14, -303, 25, -402, -402,
	-402, -402, -402, -217, -402, 14, -402, 77, 87, -402,
	-402, -402, 87, 159, 87, 87, -402, -402, 87, 87,
	-402, 87, 87, 87, -369, 87, 87, 87, 87, -402,
	-402, -402, -402, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, -402, -90, 510, -402, -402, 87, -402,
	87, -402, -126, -126, -401, 218, -402, -402, -402, -402,
	-402, 87, 87, 87, 87, 87, 87, -402, -388, 583,
	403, -191, -190, -188, 74, 238, 75, -401, -290, -402,
	-154, 90, -248, 90, -247, -196, -282, 95, 99, -229,
	-161, -163, 14, -131, -209, 88, 87, -317, -233, -239,
	-268, -282, 93, 174, -319, 174, -319, 359, 360, -225,
	218, -192, 15, -195, 32, 57, -11, -401, -401, 32,
	87, -180, -182, -181, -183, 66, 70, 72, 67, 68,
	69, 73, -294, 25, -162, -9, -8, -401, -401, -401,
	-184, -177, -403, 14, 77, -403, 87, 218, -261, -263,
	405, 402, 408, -373, 93, -106, 87, -343, -330, -230,
	-135, 40, -323, 366, -317, 493, -317, -325, 93, -325,
	95, 95, 88, -47, -42, -43, 33, 81, -350, -337,
	93, 39, -337, -337, -282, 88, -226, -134, -184, 140,
	76, -354, -354, -354, -288, -2, 622, 628, 134, 86,
	369, 18, -247, 87, 88, -212, 296, 88, -108, -282,
	88, 86, -335, -335, -282, -401, 234, 31, 31, 577,
	533, 525, -57, -212, -211, -373, -318, 621, 620, 88,
	236, 294, -139, 416, -136, 93, 89, -184, -184, -184,
	-184, -184, 227, 224, -397, 305, -397, 279, 237, -177,
	-184, 87, -81, 253, 248, -293, -293, 33, -184, 402,
	595, 593, -140, 139, 258, -158, -150, -146, -301, 174,
	332, 257, 330, 326, 346, 337, 364, 328, 365, 325,
	324, 323, -301, -299, -203, -128, -140, -140, -222, 147,
	-140, 145, -140, -140, -140, -140, -402, 174, 332, 14,
	-140, -299, -140, -140, -140, -140, -140, -370, -140, -140,
	-140, -368, -367, -154, -211, -402, -368, -140, -140, -367,
	-367, -371, -371, -371, -371, -371, -203, -203, -203, -203,
	-401, -282, -93, -92, -91, 560, 238, -90, -160, -93,
	-160, -402, -402, -127, -284, -140, -140, -140, -140, -140,
	-140, -188, -331, -331, -331, -253, 87, -264, 22, 14,
	57, 57, -161, -192, -162, -131, -282, -236, 579, -242,
	46, -240, -241, 47, -237, 48, 56, -319, -319, 165,
	-227, -140, -254, 76, -255, -259, -211, -206, -208, -207,
	-401, -246, -402, -282, -253, -255, -164, -165, -165, -164,
	-165, 66, 66, 66, 71, 66, 71, 66, -181, -288,
	-402, -402, -9, -9, -140, -291, 77, -162, -162, -186,
	-288, 165, 402, 406, 407, -343, -395, 116, 140, 31,
	76, 362, 102, -393, 173, 522, 572, 577, 533, 526,
	567, -394, 240, 133, 134, 252, 25, 41, 88, 87,
	88, 87, 88, 87, -276, -275, -43, -42, -337, -337,
	95, -373, 93, 93, 236, 26, -184, 76, 76, 76,
	-109, 626, 95, 86, -3, 81, -140, 86, 19, -326,
	-211, -361, -313, -362, -314, -315, -5, -6, -338, -112,
	57, 102, -61, 44, 235, 606, 607, 124, -401, 619,
	-353, -247, -357, -359, -184, -143, -401, -142, -144, -151,
	163, 164, -212, -184, -133, 285, 293, 86, -137, 90,
	-375, 77, 276, 362, 276, -398, 306, 93, -398, -184,
	-81, -47, -184, -271, -271, 33, -373, -402, -158, -150,
	-121, 159, 486, -304, 492, -312, -312, -312, -321, -312,
	320, -312, 320, -312, -402, -402, -402, 87, -402, 22,
	-402, -117, 445, -140, 87, 87, 87, -402, 86, 86,
	-140, -402, -402, -402, -402, 87, -402, -402, -402, -369,
	87, -402, 87, -402, 87, -302, 578, -402, -402, -402,
	-402, -402, -402, -402, -402, -402, -402, -89, -283, -282,
	-90, 542, 542, -402, -90, -219, 87, -402, -402, 87,
	-402, 87, 87, -402, 87, -402, 87, -189, 22, -189,
	-189, -402, 90, -184, -192, -220, 16, -233, 51, 338,
	-244, -243, 55, 47, -241, 19, 49, 19, 30, -254,
	87, 148, 87, -402, -402, 87, 57, 218, -402, -192,
	-175, -174, 76, 77, -176, 76, -174, 66, 66, -249,
	-402, -402, 87, -252, -162, -192, -192, 218, 116, -401,
	-145, -157, -143, 12, 93, 93, -373, -392, 610, 611,
	31, 95, -337, -337, 134, 134, -184, 86, -317, 93,
	-317, 95, 95, 31, 82, 83, 84, 31, 78, 79,
	80, -184, -184, -184, -184, -358, 86, 19, -140, 86,
	148, 88, -247, -247, 272, 159, -337, 604, 278, 278,
	-337, -337, -337, -111, -110, 626, 88, -402, 87, -324,
	486, 489, -140, -152, -152, -249, 88, -366, 486, -374,
	-282, -282, -282, -282, 95, 97, -402, 484, 73, 487,
	-402, -317, -140, -140, -227, 93, -140, -140, -140, 95,
	95, -402, -140, -402, -368, -367, -140, -402, -172, -171,
	-173, 587, 116, 31, -301, -402, -205, 270, -96, -95,
	-94, 14, -402, -140, -140, -140, -140, -140, -140, -401,
	66, 18, 16, -401, -401, -291, -220, -221, 17, 19,
	-234, 53, -232, 52, -232, -243, 19, 19, 93, 19,
	93, 134, -259, -140, -208, 57, -11, -282, -206, -282,
	-222, -140, 86, -140, -154, -192, -192, -140, -198, 448,
	105, 107, 106, 449, 450, 451, 332, 475, 478, 479,
	477, 476, 480, 481, 347, 348, 452, 453, 454, 108,
	109, 110, 111, 112, 113, 114, 455, 458, 456, 459,
	460, 461, 466, 467, 462, 463, 464, 465, 468, 469,
	470, 471, 472, 473, 474, 93, 93, 86, -140, 88,
	88, -249, -357, -58, 88, -247, 95, 88, 273, -207,
	-401, 93, -337, -337, -337, 95, 95, -290, -402, 87,
	-282, -394, -359, 490, 490, -402, 25, -365, -364, -284,
	86, 77, 62, 485, 488, -402, -402, -402, 87, -402,
	-402, 88, 88, -402, -402, -402, 87, -402, -171, -173,
	-402, 76, -154, -222, 19, -93, 295, 297, -93, -402,
	87, -402, -402, 87, -402, 87, -402, -250, -402, -282,
	240, 19, 19, -250, -250, -191, -221, -103, -102, -101,
	516, -140, -203, -235, 54, 76, 119, 93, 93, 93,
	12, -206, 218, -227, -247, -169, 369, -222, -402, -247,
	88, 25, 88, 628, 134, 88, -207, -120, -401, 269,
	-290, 93, 93, -110, -113, -11, 87, 148, -247, -184,
	62, -140, -140, -402, 76, 497, 587, -88, -87, -84,
	598, 624, -203, -90, -90, -140, -140, -140, 87, -402,
	-402, -402, -103, 87, -100, -99, -282, 76, 119, -255,
	-282, 88, -402, -401, -227, 88, -231, -11, 86, -3,
	269, -313, -362, -314, -315, -5, -6, -338, -79, 486,
	-364, -342, -284, 93, 95, 88, 486, -402, -369, -86,
	142, 596, 575, -141, -152, -149, 217, -402, 87, -402,
	87, -402, 87, -282, 240, -101, 87, 25, -291, -170,
	-168, -282, 539, -385, -384, 482, -395, -391, 116, 140,
	102, -393, 577, 533, 125, 126, -79, -140, 86, -402,
	-80, 284, 583, -375, 487, -402, -86, 597, 553, 528,
	553, 528, -140, -140, -140, -99, -401, -402, 87, 22,
	-305, -60, 550, -382, -383, 76, -386, 375, 549, 570,
	116, 93, 88, -247, 245, -366, 488, 139, -402, 87,
	-402, 87, -402, -89, -168, 546, -318, -154, -383, 76,
	-382, 76, 13, 12, -4, 627, 88, 286, -86, -140,
	-140, -402, -59, 26, -169, -381, 253, 248, 251, 32,
	-381, 95, -4, -402, -402, 550, 247, 31, 116, -154,
	-172, -171, -171,
}

var yyDef = [...]int{
	829, -2, -2, 831, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 68, 70,
	71, 829, 829, 829, 0, 829, 0, 0, 829, -2,
	-2, 829, 1416, 0, 829, 0, 0, -2, 761, 763,
	0, 765, -2, 0, 0, 774, 1938, 1938, 824, 0,
	0, 0, 0, 0, 829, 829, 829, 829, 1275, 48,
	829, 0, 83, 84, 780, 781, 782, 63, 0, 1936,
	830, 1, 3, 69, 73, 0, 0, 0, 56, 1284,
	0, 76, 0, 0, 833, 0, 0, 1399, 829, 829,
	0, 114, 115, 0, 0, 0, -2, 118, -2, 147,
	148, 149, 0, 154, 575, 501, 553, 499, 538, -2,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 504, 377, 377, 0, 0, -2, 487,
	487, 487, 1401, 0, 0, 0, 535, 439, 377, 377,
	377, 0, 377, 377, 377, 377, 0, 0, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 1302, 153, 1417, 1414, 1415,
	38, 39, 40, 1569, 1570, 1571, 1572, 1573, 1574, 1575,
	1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585,
	1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595,
	1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605,
	1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615,
	1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625,
	1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635,
	1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645,
	1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655,
	1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665,
	1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675,
	1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685,
	1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695,
	1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705,
	1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715,
	1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725,
	1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735,
	1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775,
	1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785,
	1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795,
	1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805,
	1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815,
	1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825,
	1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835,
	1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845,
	1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865,
	1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885,
	1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895,
	1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905,
	1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915,
	1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925,
	1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935,
	0, 1393, 0, 688, 930, 0, 750, 750, 0, 750,
	750, 750, 750, 0, 0, 0, 700, 0, 0, 0,
	0, 747, 0, 716, 717, 0, 747, 0, 723, 753,
	0, 728, 750, 750, 731, 1939, 0, 1939, 1939, 1384,
	0, 744, 742, 756, 757, 760, 764, 0, 769, 772,
	1410, 1411, 0, 787, 47, 1660, 779, 792, 793, 0,
	825, 826, 43, 1077, 0, 952, 957, 968, 983, 984,
	985, 986, 987, 989, 990, 0, 0, 0, 0, 995,
	996, 0, 0, 0, 0, 0, 1058, 1004, 0, 0,
	0, 0, 0, 1251, 0, 0, 1212, 1212, 1095, 1212,
	1214, 1214, 0, 0, 0, 1935, 1704, 1712, 1713, 1736,
	1829, 1878, 1593, 1667, 1686, 1687, 1811, 1812, 1731, 1795,
	1708, 1709, 1690, 1702, 1705, 1693, 1694, 1696, 1698, 1703,
	1710, 1716, 1695, 1715, 1714, 0, 1691, 1692, 1697, 1707,
	1711, 1699, 1700, 1701, 1706, 1717, 0, 0, 0, 0,
	0, 1158, 1159, 1260, 0, 0, 0, 0, 0, 0,
	273, 274, 1076, 1373, 1214, 1214, 1214, 1214, 1214, 1018,
	1019, 1020, 1021, 1022, 1046, 1047, 1053, 1054, 1806, 1807,
	1808, 1809, 1653, 1887, -2, -2, 219, 220, 221, 222,
	223, 224, 225, 0, 215, 0, 0, 278, 279, 275,
	276, 277, 1060, 1061, 231, 232, 233, 234, 235, 236,
	237, 238, 239, 240, 241, 242, 243, 244, 245, 246,
	247, 248, 249, 250, 251, 252, 253, 254, 255, 256,
	257, 258, 259, 260, 261, 262, 263, 264, 265, 266,
	267, 268, 269, 270, 271, 272, 1938, 0, 802, 0,
	0, 0, 0, 0, 1284, 0, 1276, 1275, 61, 0,
	829, -2, 0, 0, 0, 0, 45, 0, 50, 889,
	832, 75, 74, 1324, 0, 0, 0, 57, 1285, 65,
	67, 1286, 0, 834, 835, 0, 865, 869, 0, 0,
	0, 1400, 1399, 1399, 100, 0, 1874, 1377, -2, -2,
	0, 0, 1412, 1413, 1386, -2, 1420, 1421, 1422, 1423,
	1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
	1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453,
	1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473,
	1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483,
	1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493,
	1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503,
	1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513,
	1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523,
	1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533,
	1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543,
	1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
	1564, 1565, 1566, 1567, 1568, -2, 0, 0, 165, 166,
	0, 41, 404, 0, 161, 0, 397, 338, 0, 1302,
	0, 0, 0, 0, 0, 829, 0, 1394, 142, 143,
	150, 151, 152, 377, 377, 377, 550, 0, 0, 153,
	153, 508, 509, 510, 0, 0, -2, 402, 0, 488,
	0, 0, 391, 391, 395, 393, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 0, 528, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 636, 0, 378,
	0, 548, 549, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 1402, 1403, 0, 525, 526, 0, 0, 0,
	377, 377, 0, 0, 0, 0, 377, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 1315, 0, 0,
	0, -2, 0, 680, 0, 0, 0, 1395, 1395, 0,
	687, 0, 689, 690, 0, 0, 691, 0, 747, 747,
	745, 746, 693, 694, 695, 696, 750, 0, 0, 386,
	387, 388, 747, 750, 0, 750, 750, 750, 750, 747,
	747, 747, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1939, 753, 750, 0, 724, 0, 725, 726,
	729, 730, 732, 1940, 1941, 1432, 1939, 1939, 736, 740,
	1385, 762, 770, 773, 790, 788, 789, 791, 783, 784,
	785, 786, 0, 804, 805, 810, 0, 0, 0, 0,
	816, 817, 818, 0, 0, 821, 822, 823, 0, 0,
	0, 0, 0, 950, 0, 0, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	969, 970, 0, 0, 0, 991, 992, 993, 994, 997,
	0, 1009, 0, 1011, 1260, 0, 0, 0, 1002, 1003,
	0, 0, 0, 0, 0, 0, 839, 0, 1252, 0,
	0, 1093, 0, 1094, 1096, 1097, 0, 1098, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1405, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 849, 0, 0,
	849, 849, 0, 0, 208, 209, 210, 211, 212, 0,
	0, 0, 0, 0, 0, 226, 227, 228, 229, 230,
	280, 1076, 0, 0, 0, 44, 794, 795, 0, 913,
	1405, 0, 0, 845, 0, 55, 64, 66, 1284, 59,
	1284, 0, 851, 0, 0, -2, -2, 852, 858, 859,
	860, 861, 862, 52, 1937, 53, 0, 72, 0, 46,
	0, 0, 0, 0, 350, 1327, 0, 0, 1277, 1278,
	1281, 0, 866, 1747, 870, 0, 872, 873, 0, 0,
	98, 0, 929, 0, 0, 0, 1874, 1383, 0, 102,
	103, 0, 0, 0, 361, 1388, 1389, 1390, -2, 384,
	0, 361, 345, 288, 289, 290, 338, 292, 338, 338,
	338, 338, 350, 350, 350, 350, 321, 322, 323, 324,
	325, 0, 0, 307, 338, 338, 338, 338, 328, 329,
	330, 331, 332, 333, 334, 335, 293, 294, 295, 296,
	297, 298, 299, 300, 301, 340, 340, 340, 342, 342,
	0, 42, 0, 365, 0, 1281, 0, 0, 1315, 1397,
	1407, 0, 0, 0, 1397, 120, 0, 0, 0, 551,
	586, 502, 539, 552, 0, 505, 506, -2, 0, 0,
	487, 0, 489, 0, 385, 0, -2, 0, 395, 0,
	391, 395, 392, 395, 383, 396, 529, 530, 531, 0,
	533, 534, 616, 899, 0, 0, 0, 0, 0, 622,
	623, 624, 0, 626, 627, 628, 629, 630, 631, 632,
	633, 634, 635, 540, 541, 542, 543, 544, 545, 546,
	547, 0, 0, 0, 0, 489, 0, 536, 0, 0,
	441, 442, 443, 0, 0, 446, 447, 448, 449, 0,
	0, 452, 453, 454, 916, 917, 455, 456, 481, 482,
	483, 457, 458, 459, 460, 461, 462, 463, 475, 476,
	477, 478, 479, 480, 464, 465, 466, 467, 468, 469,
	472, 0, 135, 1306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1395, 0,
	0, 0, 0, 848, 931, 1418, 1419, 751, 752, 0,
	389, 390, 750, 750, 697, 737, 0, 750, 701, 738,
	702, 704, 703, 705, 718, 719, 750, 708, 748, 749,
	709, 710, 711, 712, 713, 714, 715, 733, 720, 721,
	722, 754, 0, 758, 759, 734, 735, 0, 771, 775,
	776, 777, 778, 0, 0, 807, 94, 812, 813, 814,
	815, 827, 820, 1078, 947, 948, 949, 0, 951, 954,
	0, 1062, 1064, 956, 958, 1073, 1074, 1075, 0, 0,
	0, 0, 0, 962, 966, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 988, 1228, 1229,
	1230, 1006, 281, 282, 0, 1007, 0, 0, 0, 0,
	0, 0, 0, 1077, 1008, 0, 863, 0, 0, 0,
	840, 841, 1258, 1255, 0, 0, 0, 1213, 1215, 0,
	0, 0, 0, 0, 1191, 1192, 1193, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206,
	1207, 1208, 1209, 1210, 1211, 1231, 0, 0, 0, 0,
	0, 1251, 0, 1013, 1014, 1015, 0, 0, 0, 0,
	1116, 0, 0, 0, 0, 0, 0, 1406, 0, 130,
	131, 0, 0, 0, 0, 0, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 1161, 1162,
	1163, 0, 0, 0, 0, 0, 850, 1261, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1371, 0, 0, 797, 798, 800, 0, 933,
	0, 914, 0, 0, 803, 0, 844, 0, 847, 58,
	60, 856, 857, 0, 874, 853, 54, 49, 0, 0,
	891, 1325, 350, 1347, 0, 359, 359, 356, 1287, 1288,
	0, 1280, 1282, 1283, 77, 871, 867, 0, 945, 0,
	0, 928, 0, 877, 879, 880, 881, 911, 0, 884,
	0, 0, 0, 0, 0, 96, 930, 1378, 101, 0,
	0, 106, 107, 1379, 1380, 1381, 1382, 0, 575, -2,
	436, 167, 169, 170, 171, 162, -2, 348, 346, 347,
	291, 350, 350, 315, 316, 317, 318, 319, 320, 0,
	0, 308, 309, 310, 311, 302, 0, 303, 304, 305,
	0, 306, 403, 0, 1289, 366, 367, 369, 377, 0,
	372, 373, 0, 377, 377, 0, 398, 399, 0, 1281,
	1306, 0, 0, 0, 1408, 1407, 1407, 1407, 0, 155,
	156, 157, 158, 159, 160, 611, 0, 0, 587, 609,
	610, 153, 0, 0, 163, 491, 490, 0, 643, 0,
	401, 0, 0, 395, 395, 380, 381, 532, 0, 0,
	618, 619, 620, 621, 0, 0, 0, 518, 430, 0,
	519, 520, 489, 491, 0, 0, 361, 444, 445, 450,
	451, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 565, 566, 567, 569, 493, 573, 568,
	570, 493, 574, 1303, 1304, 1305, 0, 0, 681, 0,
	0, 427, 92, 1396, 686, 747, 707, 739, 747, 699,
	706, 727, 767, 811, 0, 0, 0, 0, 819, 0,
	0, 955, 1063, 1065, 959, 0, 963, 967, 0, 0,
	0, 1012, 1010, 1261, 0, 0, 0, 1059, 0, 0,
	1083, 1084, 0, 0, 1275, 0, 1256, 0, 0, 1091,
	0, 1216, 1217, 0, 0, 0, 0, 0, 1103, 1104,
	1105, 1106, 1107, 0, 1109, 0, 1110, 0, 0, 1114,
	1115, 1117, 0, 0, 0, 0, 1123, 1124, 0, 0,
	1125, 0, 0, 0, 0, 0, 0, 0, 0, 1137,
	1138, 1139, 1140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1151, 1152, 0, 1041, 0, 0, 1041,
	0, 1079, 0, 0, 849, 0, 1218, 1219, 1220, 1221,
	1222, 0, 0, 0, 0, 0, 0, 1372, 796, 799,
	801, 887, 934, 935, 0, 0, 0, 0, 915, 1404,
	842, 843, 846, -2, 0, 0, 1263, 0, 0, 874,
	945, 875, 0, 854, 51, 890, 0, 1329, 1328, 1341,
	1354, 359, 359, 353, 354, 360, 355, 357, 358, 1279,
	0, 1284, 0, 1365, 0, 0, 1357, 0, 0, 0,
	0, 0, 0, 0, 0, 918, 0, 0, 921, 0,
	0, 0, 0, 912, 0, 0, 0, 0, 0, 0,
	-2, 0, 0, 90, 91, 0, 0, 0, 104, 105,
	0, 0, 111, 362, 363, 144, 153, 438, 168, 411,
	0, 0, 287, 349, 312, 313, 314, 0, 336, 0,
	0, 0, 432, 116, 1293, 1292, 377, 377, 368, 0,
	371, 0, 0, 0, 1409, 339, 400, 0, 134, 0,
	0, 0, 0, 0, 140, 581, 0, 0, 588, 0,
	0, 0, 500, 0, 511, 512, 0, 615, -2, 677,
	365, 0, 379, 382, 900, 0, 0, 513, 0, 516,
	517, 431, 491, 522, 523, 537, 524, 473, 474, 471,
	0, 0, 1316, 1317, 1322, 1320, 1321, 121, 558, 560,
	559, 563, 0, 0, 495, 0, 495, 556, 0, 427,
	1289, 0, 685, 428, 429, 750, 750, 806, 95, 0,
	809, 0, 0, 0, 0, 960, 964, 1223, 1249, 338,
	338, 1236, 338, 342, 1239, 338, 1241, 338, 1244, 338,
	1247, 1248, 0, 0, 0, 864, 0, 0, 1253, 1090,
	1259, 0, 0, 0, 0, 0, 1102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 133, 1185,
	0, 0, 1187, 1189, 1190, 1129, 1186, 0, 0, 1183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1036, 1040, 0, 1042, 1043, 0, 0, 1154, 0, 0,
	1164, 1080, 1081, 0, 1262, 0, 0, 0, 0, 0,
	0, 936, 941, 941, 941, 0, 0, 0, 1391, 1392,
	1264, 1265, 945, 1266, 876, 855, 892, 1347, 0, 1340,
	0, -2, 1349, 0, 0, 0, 1355, 351, 352, 868,
	78, 946, 81, 0, 1365, 1374, 0, 1356, 1367, 1369,
	0, 0, 0, 1361, 0, 945, 878, 907, 909, 0,
	904, 919, 920, 922, 0, 924, 0, 926, 927, 889,
	883, 885, 0, 0, 0, 98, 0, 945, 945, 97,
	0, 932, 108, 109, 110, 437, 172, 177, 0, 0,
	0, 182, 0, 184, 0, 0, 0, 189, 190, 377,
	377, 412, 0, 284, 286, 0, 0, 175, 350, 0,
	350, 0, 343, 0, 413, 433, 1290, 1291, 0, 0,
	370, 374, 375, 376, 0, 1398, 136, 0, 0, 0,
	584, 0, 612, 0, 0, 0, 0, 0, 0, 164,
	492, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	0, 377, 0, 0, 0, 377, 377, 377, 0, 669,
	364, 0, 0, 640, 637, 514, 0, 213, 214, 216,
	0, 0, 521, 889, 1307, 1308, 1309, 0, 1319, 1323,
	124, 0, 0, 0, 0, 571, 0, 494, 572, 682,
	683, 684, 93, 692, 698, 808, 828, 953, 961, 965,
	0, 0, 0, 0, 1250, 1234, 350, 1237, 1238, 1240,
	1242, 1243, 1245, 1246, 1000, 1001, 1005, 0, 1086, 0,
	1088, 1284, 0, 1257, 0, 0, 0, 1101, 0, 0,
	0, 1112, 1111, 1113, 1118, 0, 1120, 1121, 1122, 0,
	0, 1128, 0, 1130, 0, 0, 0, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 0, 1034, 1037,
	1153, 1044, 1045, 1050, 1156, 0, 0, 1082, 1166, 0,
	1171, 0, 0, 1177, 0, 1181, 0, 0, 0, 0,
	0, 913, -2, 62, 1266, 1268, 0, 1334, 1332, 1332,
	1342, 1343, 0, 0, 1350, 0, 0, 0, 0, 82,
	0, 0, 0, 1370, 0, 0, 0, 0, 99, 1275,
	901, 908, 0, 0, 902, 0, 903, 923, 925, 882,
	-2, 886, 0, 945, 945, 88, 89, 0, 178, 0,
	180, 206, 207, 0, 183, 185, 186, 187, 193, 194,
	195, 188, 0, 0, 283, 285, 0, 0, 326, 337,
	327, 0, 0, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 889, 137, 138, 139, 576, 0, 586, 0, 0,
	0, 579, 0, 503, 0, 0, 0, 377, 377, 377,
	0, 0, 0, 0, 654, 0, 0, 617, 0, 625,
	0, 0, 0, 217, 218, 0, 1318, 557, 0, 122,
	123, 0, 0, 562, 496, 497, 998, 0, 0, 0,
	999, 1235, 0, 0, 0, 1254, 0, 0, 0, 0,
	0, 1108, 0, 1126, 0, 1188, 0, 1133, 0, 0,
	0, 606, 607, 0, 1184, 1039, 1275, 0, 1041, 1051,
	1052, 0, 1041, 1165, 0, 0, 0, 0, 0, 0,
	942, 0, 0, 0, 0, 933, 1268, 1273, 0, 0,
	1337, 0, 1330, 1333, 1331, 1344, 0, 0, 1351, 0,
	1353, 0, 1375, 1376, 1368, 0, 1360, 1363, 1359, 1362,
	1284, 905, 0, 910, 0, 1275, 87, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 192, 0, 0, 341,
	344, 0, 0, 0, 577, 0, 589, 580, 0, 667,
	0, 671, 0, 0, 0, 674, 675, 676, 653, 0,
	657, 405, 641, 638, 639, 515, 0, 125, 126, 0,
	0, 0, 1224, 0, 1227, 1085, 1087, 1089, 0, 1099,
	1100, 1232, 1233, 1119, 1127, 1131, 0, 1134, 0, 0,
	1135, 0, 608, 1030, 0, 0, 1048, 1049, 0, 1167,
	0, 1172, 1173, 0, 1178, 0, 1182, 0, 938, 895,
	896, 943, 944, 0, 0, 888, 1273, 80, 1274, 1271,
	0, 1269, 1267, 1326, 0, 1335, 1336, 1345, 1346, 1352,
	0, 1358, 0, 85, 0, 0, 0, 1284, 179, 0,
	198, 0, 585, 0, 588, 578, 665, 666, 0, 678,
	670, 672, 673, 655, -2, 1310, 0, 0, 0, 564,
	1225, 0, 1185, 1136, 0, 604, 605, 1038, 1031, 0,
	1016, 1017, 1035, 1155, 1157, 0, 0, 0, 0, 937,
	939, 940, 79, 0, 1270, 1056, 0, 1338, 1339, 1366,
	1364, 906, 913, 0, 86, 418, 411, 1310, 0, 0,
	0, 658, 659, 660, 661, 662, 663, 664, 554, 1312,
	127, 128, 484, 485, 486, 121, 0, 1092, 0, 1032,
	0, 0, 0, 0, 1028, 1029, 0, 1168, 0, 1174,
	0, 1179, 0, 897, 898, 1272, 0, 0, 590, 0,
	592, 0, -2, 406, 419, 0, 173, 199, 200, 0,
	0, 203, 204, 205, 196, 197, 117, 0, 0, 679,
	0, 1313, 1314, 124, 0, 1132, 0, 1023, 1024, 1025,
	1026, 1027, 0, 0, 0, 1057, 1036, 591, 0, 0,
	361, 0, 601, 407, 408, 0, 414, 415, 416, 417,
	201, 202, 613, 0, 0, 561, 1226, 0, 1169, 0,
	1175, 0, 1180, 0, 593, 594, 602, 0, 409, 0,
	410, 0, 0, 0, 582, 0, 613, 1311, 1033, 0,
	0, 1055, 0, 603, 599, 420, 422, 423, 0, 0,
	421, 614, 583, 1170, 1176, 0, 424, 425, 426, 595,
	596, 597, 598,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 629,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:577
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:590
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:591
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:595
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:631
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:641
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:650
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:654
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:660
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:666
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:672
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:676
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:681
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:685
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:691
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:695
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:701
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:749
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:755
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:775
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:779
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:789
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:793
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:801
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:816
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:820
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:826
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:835
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:841
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:847
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:854
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:868
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:872
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:892
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:904
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:908
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:914
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:920
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:928
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:938
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:942
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:946
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:952
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:956
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:962
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:966
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:971
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:975
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:981
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:987
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:997
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1007
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1011
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1015
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1021
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1025
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1029
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1033
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1039
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1043
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1049
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1055
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1062
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1071
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1075
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1091
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1106
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1111
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1117
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1137
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1143
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1153
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1159
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1166
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1173
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1178
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1183
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1188
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1195
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1202
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1213
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1220
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1224
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1230
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1234
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1238
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1256
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1260
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1266
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1270
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1276
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1280
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1286
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1296
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1300
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1306
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1316
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1321
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1330
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1335
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1339
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1354
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1363
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1372
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1389
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1395
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1401
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1406
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1411
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1416
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1421
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1426
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1435
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1440
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1444
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1449
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1455
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1461
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1465
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1471
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1475
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1479
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1485
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1489
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1494
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1503
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1515
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1525
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1531
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1554
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1558
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1580
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1584
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1598
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1602
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1606
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1610
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1614
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1627
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1631
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1635
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1750
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1816
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1820
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1824
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1830
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1834
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1838
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1844
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1848
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1855
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1859
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1863
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1867
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1889
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1919
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1991
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2095
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2100
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2104
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2113
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2121
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2131
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2139
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2143
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2147
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2152
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2156
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2161
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2165
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2169
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2173
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2182
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2187
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2192
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2197
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2203
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2207
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2212
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2220
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2227
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2236
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2242
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2252
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2256
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2261
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2265
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2269
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2273
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2277
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2281
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2287
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2297
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2301
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2305
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2309
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2313
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2322
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2381
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2391
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2395
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2401
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2405
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2411
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2415
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2421
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2427
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2431
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2435
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2439
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2443
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2452
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2458
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2464
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2470
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2474
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2478
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2483
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2487
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2493
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2499
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2505
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2509
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2513
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2517
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2521
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2526
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2540
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2544
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2549
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2553
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2558
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2562
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2568
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2572
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2576
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2582
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2586
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2592
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2596
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2600
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2604
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2608
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2612
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2616
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2620
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2624
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2628
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2632
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2636
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2640
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2644
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2648
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2652
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2656
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2660
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2664
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2668
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2672
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2676
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2680
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2684
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2688
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2704
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2708
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2712
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2717
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2725
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2744
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2763
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2767
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2772
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2776
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2790
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2794
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2798
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2807
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2811
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2815
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2823
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2829
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2833
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2879
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2884
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2889
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2893
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2897
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2901
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2905
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2909
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2913
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2917
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2921
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2929
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2933
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2937
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2941
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2945
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2949
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2953
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2957
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2961
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2965
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2971
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2981
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2985
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2989
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2993
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2997
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3001
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3005
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3009
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3013
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3017
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3023
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3037
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3050
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3060
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3074
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3086
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3096
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3104
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3117
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3156
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3176
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3213
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3217
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3226
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3234
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3243
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3250
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3262
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3271
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3282
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3286
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3295
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3300
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3304
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3310
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3316
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3322
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3332
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3336
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3342
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3348
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3354
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3360
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3366
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3370
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3374
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3378
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3384
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3390
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3396
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3400
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3404
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3410
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3414
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3419
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3423
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3428
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3432
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3438
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3442
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3446
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3450
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3454
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3458
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3462
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3466
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3470
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3474
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3478
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3482
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3486
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3490
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3494
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3498
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3502
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3506
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3510
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3514
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3518
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3522
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3527
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3531
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3542
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3557
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3561
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3566
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3571
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3576
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3581
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3586
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3592
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3598
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3603
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3609
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3615
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3625
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3630
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3634
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3639
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3644
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3649
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3654
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3660
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3666
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3673
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3680
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3687
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3695
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3699
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3705
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3711
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3717
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3723
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3729
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3735
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3747
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = ""
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = ""
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3763
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3769
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3773
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3783
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3792
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3817
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3821
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3825
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3829
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3833
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3837
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3841
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3845
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3849
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3861
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3865
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3869
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3877
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3881
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3885
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3889
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3893
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3897
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3901
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3905
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3909
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3913
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3917
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3921
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3929
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3933
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3937
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3941
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3945
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3965
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3973
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3977
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3981
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3992
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3996
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4000
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4004
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4008
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4012
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4016
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4020
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4026
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.str = "extended "
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4036
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4040
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4056
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4074
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4078
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4088
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4094
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4098
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4118
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4122
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4126
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4132
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4136
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4142
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4148
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4152
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4157
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4162
		{
			yyVAL.empty = struct{}{}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4169
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4175
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4180
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4184
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4188
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4192
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4196
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4200
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = yyDollar[1].str
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = yyDollar[1].str
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = yyDollar[1].str
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4220
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4228
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4232
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = ""
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4251
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4255
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4261
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4265
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4271
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4277
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4281
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4287
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4293
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4297
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4301
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4305
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4311
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4323
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4327
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4331
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4335
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4339
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4343
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4353
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4359
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4363
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4367
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4371
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4408
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4412
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4416
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = ""
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4425
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4430
		{
			setAllowComments(yylex, true)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4434
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4440
		{
			yyVAL.strs = nil
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4444
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4450
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4454
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4458
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.str = SQLCacheStr
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4476
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4480
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4484
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4490
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4494
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4506
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4511
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4515
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4521
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4525
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4534
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4539
		{
			yyVAL.strs = nil
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4543
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4547
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4551
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4555
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4561
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4565
		{
			yyVAL.str = SQLCacheStr
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4569
		{
			yyVAL.str = DistinctStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = DistinctStr
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = StraightJoinHint
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4581
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4585
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4591
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4595
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4601
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4605
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4609
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4613
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4618
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4622
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4626
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4638
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4642
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4648
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4654
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4658
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4668
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4672
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4676
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4680
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4686
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4690
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4696
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4700
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4705
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4709
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4715
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4719
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4725
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4729
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4735
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4739
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4743
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4747
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4753
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4757
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4770
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4774
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4778
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4782
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4788
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4790
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4794
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4796
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4800
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4802
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4805
		{
			yyVAL.empty = struct{}{}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4807
		{
			yyVAL.empty = struct{}{}
		}
	case 913:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4810
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4814
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4818
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4825
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4831
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4835
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4839
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4845
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4851
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4855
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4859
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4863
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4869
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4873
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4883
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4887
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4893
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4897
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 932:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4903
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4912
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4918
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4922
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 937:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4928
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4932
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4936
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4940
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4945
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4949
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4953
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4957
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4998
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5004
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5008
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5012
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5016
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5022
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5026
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5038
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5050
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5054
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5071
		{
		}
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5077
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5081
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5085
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5089
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5109
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5113
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5117
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5121
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5125
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5155
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5159
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5163
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5171
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5175
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5179
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5183
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5187
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5191
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5195
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5199
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5203
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5211
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5215
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5223
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5227
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5231
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5243
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5247
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5253
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5257
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5263
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5267
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5271
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5277
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5281
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5288
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5292
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5296
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5300
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5304
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5310
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5314
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5318
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5322
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5326
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5341
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5345
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5351
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5355
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5360
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5364
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5369
		{
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5372
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5378
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5384
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5388
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5400
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5406
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5410
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5416
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5420
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5426
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5430
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5442
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5448
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5452
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5458
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5464
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5468
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5474
		{
			yyVAL.str = ""
		}
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5478
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5484
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5488
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5495
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5499
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5503
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5507
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5513
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5517
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5521
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5525
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5529
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5533
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5537
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5543
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5547
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5551
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5558
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5564
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5568
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5578
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5582
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5586
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5590
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5600
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5612
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5616
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5620
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5624
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5628
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5632
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5636
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5640
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5661
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5665
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5670
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5674
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5678
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5682
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5694
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5698
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5702
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5706
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5710
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5714
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5718
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5722
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5726
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5730
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5734
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5738
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5742
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5746
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5750
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5754
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5758
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5762
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5923
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5927
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5933
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5937
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5944
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5948
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5952
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5956
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5960
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5965
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5969
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5973
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5977
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5981
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5985
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6009
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6013
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6018
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6022
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6027
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6031
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:6037
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6041
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6047
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6051
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6057
		{
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6059
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6063
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6067
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6071
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6075
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6079
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6083
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6087
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6091
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6095
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6099
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6105
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6109
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6113
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6117
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6121
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6125
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6129
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6133
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6137
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6147
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6151
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6155
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6159
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6174
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6178
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6182
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6186
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6192
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6196
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6200
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6204
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6208
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6214
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6218
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6232
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6236
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6264
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6268
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6272
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6276
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6280
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6284
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6288
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6292
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6296
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6300
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6306
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6310
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6315
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6319
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6324
		{
			yyVAL.str = string("")
		}
	case 1254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6328
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6334
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6338
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1257:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6344
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6349
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6353
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6359
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6363
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6367
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6382
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6386
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6396
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6405
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6411
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6417
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6421
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1273:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6430
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6435
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6439
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6445
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6451
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6455
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6461
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6466
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6470
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6474
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6479
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6483
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6489
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6493
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6497
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6506
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6510
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6514
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6518
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6525
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6529
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6533
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6537
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6543
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6547
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6551
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6555
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6560
		{
			yyVAL.str = ""
		}
	case 1303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6564
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6568
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6572
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6577
		{
			yyVAL.str = ""
		}
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6581
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6587
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6591
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6596
		{
			yyVAL.str = ""
		}
	case 1311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6600
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6605
		{
			yyVAL.str = "cascaded"
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6609
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6613
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1315:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6618
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6622
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6628
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6634
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6640
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6649
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6658
		{
			yyVAL.str = ""
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6662
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6668
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6672
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6678
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6682
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6686
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6691
		{
			yyVAL.str = ""
		}
	case 1330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6695
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6699
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6704
		{
			yyVAL.str = ""
		}
	case 1333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6708
		{
			yyVAL.str = " header"
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6713
		{
			yyVAL.str = ""
		}
	case 1335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6717
		{
			yyVAL.str = " manifest on"
		}
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6721
		{
			yyVAL.str = " manifest off"
		}
	case 1337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6726
		{
			yyVAL.str = ""
		}
	case 1338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6730
		{
			yyVAL.str = " overwrite on"
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6734
		{
			yyVAL.str = " overwrite off"
		}
	case 1340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6740
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6745
		{
			yyVAL.str = ""
		}
	case 1342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6749
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6755
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6759
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6765
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6774
		{
			yyVAL.str = ""
		}
	case 1348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6778
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6784
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6788
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6794
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6798
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6802
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6807
		{
			yyVAL.str = ""
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6811
		{
			yyVAL.str = " optionally"
		}
	case 1356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6824
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6828
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6832
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6836
		{
			yyLOCAL = &Insert{Columns: []ColIdent{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6840
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6846
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6850
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6854
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6858
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6863
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6867
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6873
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6877
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6883
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6887
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6893
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6897
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6902
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6912
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6916
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6922
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6928
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6932
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6938
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6942
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6946
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6950
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6954
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6962
		{
			yyVAL.str = "charset"
		}
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6972
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6976
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6980
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6989
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6991
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6994
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6996
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1397:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7001
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1399:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7009
		{
			yyVAL.empty = struct{}{}
		}
	case 1402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7011
		{
			yyVAL.empty = struct{}{}
		}
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7013
		{
			yyVAL.empty = struct{}{}
		}
	case 1404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7017
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7026
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7031
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7033
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7037
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7043
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7047
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7054
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7060
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7064
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7070
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7074
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7081
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7622
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7631
		{
			decNesting(yylex)
		}
	case 1938:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7636
		{
			skipToEnd(yylex)
		}
	case 1939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7641
		{
			skipToEnd(yylex)
		}
	case 1940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7645
		{
			skipToEnd(yylex)
		}
	case 1941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7649
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
