// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const GENERATED = 57381
const ALWAYS = 57382
const OUTFILE = 57383
const S3 = 57384
const DATA = 57385
const LOAD = 57386
const LINES = 57387
const TERMINATED = 57388
const ESCAPED = 57389
const ENCLOSED = 57390
const DUMPFILE = 57391
const CSV = 57392
const HEADER = 57393
const MANIFEST = 57394
const OVERWRITE = 57395
const STARTING = 57396
const OPTIONALLY = 57397
const VALUES = 57398
const LAST_INSERT_ID = 57399
const NEXT = 57400
const VALUE = 57401
const SHARE = 57402
const MODE = 57403
const SQL_NO_CACHE = 57404
const SQL_CACHE = 57405
const SQL_CALC_FOUND_ROWS = 57406
const JOIN = 57407
const STRAIGHT_JOIN = 57408
const LEFT = 57409
const RIGHT = 57410
const INNER = 57411
const OUTER = 57412
const CROSS = 57413
const NATURAL = 57414
const USE = 57415
const FORCE = 57416
const ON = 57417
const USING = 57418
const INPLACE = 57419
const COPY = 57420
const ALGORITHM = 57421
const NONE = 57422
const SHARED = 57423
const EXCLUSIVE = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const NULL = 57439
const TRUE = 57440
const FALSE = 57441
const OFF = 57442
const DISCARD = 57443
const IMPORT = 57444
const ENABLE = 57445
const DISABLE = 57446
const TABLESPACE = 57447
const OR = 57448
const XOR = 57449
const AND = 57450
const NOT = 57451
const BETWEEN = 57452
const CASE = 57453
const WHEN = 57454
const THEN = 57455
const ELSE = 57456
const END = 57457
const LE = 57458
const GE = 57459
const NE = 57460
const NULL_SAFE_EQUAL = 57461
const IS = 57462
const LIKE = 57463
const REGEXP = 57464
const IN = 57465
const SHIFT_LEFT = 57466
const SHIFT_RIGHT = 57467
const DIV = 57468
const MOD = 57469
const UNARY = 57470
const COLLATE = 57471
const BINARY = 57472
const UNDERSCORE_BINARY = 57473
const UNDERSCORE_UTF8MB4 = 57474
const UNDERSCORE_UTF8 = 57475
const UNDERSCORE_LATIN1 = 57476
const INTERVAL = 57477
const JSON_EXTRACT_OP = 57478
const JSON_UNQUOTE_EXTRACT_OP = 57479
const CREATE = 57480
const ALTER = 57481
const DROP = 57482
const RENAME = 57483
const ANALYZE = 57484
const ADD = 57485
const FLUSH = 57486
const CHANGE = 57487
const MODIFY = 57488
const REVERT = 57489
const SCHEMA = 57490
const TABLE = 57491
const INDEX = 57492
const VIEW = 57493
const TO = 57494
const IGNORE = 57495
const IF = 57496
const UNIQUE = 57497
const PRIMARY = 57498
const COLUMN = 57499
const SPATIAL = 57500
const FULLTEXT = 57501
const KEY_BLOCK_SIZE = 57502
const CHECK = 57503
const INDEXES = 57504
const ACTION = 57505
const CASCADE = 57506
const CONSTRAINT = 57507
const FOREIGN = 57508
const NO = 57509
const REFERENCES = 57510
const RESTRICT = 57511
const SHOW = 57512
const DESCRIBE = 57513
const EXPLAIN = 57514
const DATE = 57515
const ESCAPE = 57516
const REPAIR = 57517
const OPTIMIZE = 57518
const TRUNCATE = 57519
const COALESCE = 57520
const EXCHANGE = 57521
const REBUILD = 57522
const PARTITIONING = 57523
const REMOVE = 57524
const MAXVALUE = 57525
const PARTITION = 57526
const REORGANIZE = 57527
const LESS = 57528
const THAN = 57529
const PROCEDURE = 57530
const TRIGGER = 57531
const VINDEX = 57532
const VINDEXES = 57533
const DIRECTORY = 57534
const NAME = 57535
const UPGRADE = 57536
const STATUS = 57537
const VARIABLES = 57538
const WARNINGS = 57539
const CASCADED = 57540
const DEFINER = 57541
const OPTION = 57542
const SQL = 57543
const UNDEFINED = 57544
const SEQUENCE = 57545
const MERGE = 57546
const TEMPORARY = 57547
const TEMPTABLE = 57548
const INVOKER = 57549
const SECURITY = 57550
const FIRST = 57551
const AFTER = 57552
const LAST = 57553
const VITESS_MIGRATION = 57554
const CANCEL = 57555
const RETRY = 57556
const COMPLETE = 57557
const BEGIN = 57558
const START = 57559
const TRANSACTION = 57560
const COMMIT = 57561
const ROLLBACK = 57562
const SAVEPOINT = 57563
const RELEASE = 57564
const WORK = 57565
const BIT = 57566
const TINYINT = 57567
const SMALLINT = 57568
const MEDIUMINT = 57569
const INT = 57570
const INTEGER = 57571
const BIGINT = 57572
const INTNUM = 57573
const REAL = 57574
const DOUBLE = 57575
const FLOAT_TYPE = 57576
const DECIMAL = 57577
const NUMERIC = 57578
const TIME = 57579
const TIMESTAMP = 57580
const DATETIME = 57581
const YEAR = 57582
const CHAR = 57583
const VARCHAR = 57584
const BOOL = 57585
const CHARACTER = 57586
const VARBINARY = 57587
const NCHAR = 57588
const TEXT = 57589
const TINYTEXT = 57590
const MEDIUMTEXT = 57591
const LONGTEXT = 57592
const BLOB = 57593
const TINYBLOB = 57594
const MEDIUMBLOB = 57595
const LONGBLOB = 57596
const JSON = 57597
const ENUM = 57598
const GEOMETRY = 57599
const POINT = 57600
const LINESTRING = 57601
const POLYGON = 57602
const GEOMETRYCOLLECTION = 57603
const MULTIPOINT = 57604
const MULTILINESTRING = 57605
const MULTIPOLYGON = 57606
const NULLX = 57607
const AUTO_INCREMENT = 57608
const APPROXNUM = 57609
const SIGNED = 57610
const UNSIGNED = 57611
const ZEROFILL = 57612
const CODE = 57613
const COLLATION = 57614
const COLUMNS = 57615
const DATABASES = 57616
const ENGINES = 57617
const EVENT = 57618
const EXTENDED = 57619
const FIELDS = 57620
const FULL = 57621
const FUNCTION = 57622
const GTID_EXECUTED = 57623
const KEYSPACES = 57624
const OPEN = 57625
const PLUGINS = 57626
const PRIVILEGES = 57627
const PROCESSLIST = 57628
const SCHEMAS = 57629
const TABLES = 57630
const TRIGGERS = 57631
const USER = 57632
const VGTID_EXECUTED = 57633
const VITESS_KEYSPACES = 57634
const VITESS_METADATA = 57635
const VITESS_MIGRATIONS = 57636
const VITESS_SHARDS = 57637
const VITESS_TABLETS = 57638
const VSCHEMA = 57639
const NAMES = 57640
const CHARSET = 57641
const GLOBAL = 57642
const SESSION = 57643
const ISOLATION = 57644
const LEVEL = 57645
const READ = 57646
const WRITE = 57647
const ONLY = 57648
const REPEATABLE = 57649
const COMMITTED = 57650
const UNCOMMITTED = 57651
const SERIALIZABLE = 57652
const CURRENT_TIMESTAMP = 57653
const DATABASE = 57654
const CURRENT_DATE = 57655
const CURRENT_TIME = 57656
const LOCALTIME = 57657
const LOCALTIMESTAMP = 57658
const CURRENT_USER = 57659
const UTC_DATE = 57660
const UTC_TIME = 57661
const UTC_TIMESTAMP = 57662
const REPLACE = 57663
const CONVERT = 57664
const CAST = 57665
const SUBSTR = 57666
const SUBSTRING = 57667
const GROUP_CONCAT = 57668
const SEPARATOR = 57669
const TIMESTAMPADD = 57670
const TIMESTAMPDIFF = 57671
const MATCH = 57672
const AGAINST = 57673
const BOOLEAN = 57674
const LANGUAGE = 57675
const WITH = 57676
const QUERY = 57677
const EXPANSION = 57678
const WITHOUT = 57679
const VALIDATION = 57680
const UNUSED = 57681
const ARRAY = 57682
const CUME_DIST = 57683
const DESCRIPTION = 57684
const DENSE_RANK = 57685
const EMPTY = 57686
const EXCEPT = 57687
const FIRST_VALUE = 57688
const GROUPING = 57689
const GROUPS = 57690
const JSON_TABLE = 57691
const LAG = 57692
const LAST_VALUE = 57693
const LATERAL = 57694
const LEAD = 57695
const MEMBER = 57696
const NTH_VALUE = 57697
const NTILE = 57698
const OF = 57699
const OVER = 57700
const PERCENT_RANK = 57701
const RANK = 57702
const RECURSIVE = 57703
const ROW_NUMBER = 57704
const SYSTEM = 57705
const WINDOW = 57706
const ACTIVE = 57707
const ADMIN = 57708
const BUCKETS = 57709
const CLONE = 57710
const COMPONENT = 57711
const DEFINITION = 57712
const ENFORCED = 57713
const EXCLUDE = 57714
const FOLLOWING = 57715
const GEOMCOLLECTION = 57716
const GET_MASTER_PUBLIC_KEY = 57717
const HISTOGRAM = 57718
const HISTORY = 57719
const INACTIVE = 57720
const INVISIBLE = 57721
const LOCKED = 57722
const MASTER_COMPRESSION_ALGORITHMS = 57723
const MASTER_PUBLIC_KEY_PATH = 57724
const MASTER_TLS_CIPHERSUITES = 57725
const MASTER_ZSTD_COMPRESSION_LEVEL = 57726
const NESTED = 57727
const NETWORK_NAMESPACE = 57728
const NOWAIT = 57729
const NULLS = 57730
const OJ = 57731
const OLD = 57732
const OPTIONAL = 57733
const ORDINALITY = 57734
const ORGANIZATION = 57735
const OTHERS = 57736
const PATH = 57737
const PERSIST = 57738
const PERSIST_ONLY = 57739
const PRECEDING = 57740
const PRIVILEGE_CHECKS_USER = 57741
const PROCESS = 57742
const RANDOM = 57743
const REFERENCE = 57744
const REQUIRE_ROW_FORMAT = 57745
const RESOURCE = 57746
const RESPECT = 57747
const RESTART = 57748
const RETAIN = 57749
const REUSE = 57750
const ROLE = 57751
const SECONDARY = 57752
const SECONDARY_ENGINE = 57753
const SECONDARY_LOAD = 57754
const SECONDARY_UNLOAD = 57755
const SKIP = 57756
const SRID = 57757
const THREAD_PRIORITY = 57758
const TIES = 57759
const UNBOUNDED = 57760
const VCPU = 57761
const VISIBLE = 57762
const FORMAT = 57763
const TREE = 57764
const VITESS = 57765
const TRADITIONAL = 57766
const LOCAL = 57767
const LOW_PRIORITY = 57768
const NO_WRITE_TO_BINLOG = 57769
const LOGS = 57770
const ERROR = 57771
const GENERAL = 57772
const HOSTS = 57773
const OPTIMIZER_COSTS = 57774
const USER_RESOURCES = 57775
const SLOW = 57776
const CHANNEL = 57777
const RELAY = 57778
const EXPORT = 57779
const AVG_ROW_LENGTH = 57780
const CONNECTION = 57781
const CHECKSUM = 57782
const DELAY_KEY_WRITE = 57783
const ENCRYPTION = 57784
const ENGINE = 57785
const INSERT_METHOD = 57786
const MAX_ROWS = 57787
const MIN_ROWS = 57788
const PACK_KEYS = 57789
const PASSWORD = 57790
const FIXED = 57791
const DYNAMIC = 57792
const COMPRESSED = 57793
const REDUNDANT = 57794
const COMPACT = 57795
const ROW_FORMAT = 57796
const STATS_AUTO_RECALC = 57797
const STATS_PERSISTENT = 57798
const STATS_SAMPLE_PAGES = 57799
const STORAGE = 57800
const MEMORY = 57801
const DISK = 57802

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 112,
	478, 112,
	-2, 118,
	-1, 46,
	145, 118,
	261, 118,
	316, 118,
	-2, 329,
	-1, 53,
	34, 477,
	167, 477,
	179, 477,
	212, 491,
	213, 491,
	-2, 479,
	-1, 58,
	169, 501,
	-2, 499,
	-1, 84,
	58, 569,
	-2, 577,
	-1, 97,
	166, 939,
	-2, 91,
	-1, 99,
	1, 113,
	478, 113,
	-2, 118,
	-1, 109,
	172, 234,
	173, 234,
	-2, 323,
	-1, 128,
	145, 118,
	261, 118,
	316, 118,
	-2, 338,
	-1, 564,
	152, 960,
	-2, 956,
	-1, 565,
	152, 961,
	-2, 957,
	-1, 584,
	58, 570,
	-2, 582,
	-1, 585,
	58, 571,
	-2, 583,
	-1, 606,
	120, 1307,
	-2, 84,
	-1, 607,
	120, 1188,
	-2, 85,
	-1, 613,
	120, 1239,
	-2, 933,
	-1, 752,
	120, 1125,
	-2, 930,
	-1, 788,
	178, 38,
	183, 38,
	-2, 245,
	-1, 865,
	1, 376,
	478, 376,
	-2, 118,
	-1, 1106,
	1, 272,
	478, 272,
	-2, 118,
	-1, 1182,
	172, 234,
	173, 234,
	-2, 323,
	-1, 1191,
	178, 39,
	183, 39,
	-2, 246,
	-1, 1399,
	152, 965,
	-2, 959,
	-1, 1492,
	76, 66,
	84, 66,
	-2, 70,
	-1, 1513,
	1, 273,
	478, 273,
	-2, 118,
	-1, 1520,
	23, 136,
	-2, 135,
	-1, 1938,
	5, 826,
	18, 826,
	20, 826,
	32, 826,
	85, 826,
	-2, 609,
	-1, 2166,
	48, 901,
	-2, 895,
}

const yyPrivate = 57344

const yyLast = 28368

var yyAct = [...]int{
	564, 2260, 2251, 2091, 2206, 2193, 1997, 2144, 925, 2219,
	2167, 83, 3, 1729, 1696, 2116, 536, 1815, 1578, 2088,
	1918, 1510, 1007, 1919, 522, 1436, 1730, 1054, 1915, 1795,
	507, 1858, 1543, 505, 1528, 1548, 1819, 1796, 577, 818,
	1797, 755, 1489, 1061, 1930, 1385, 1877, 1163, 1563, 165,
	1393, 1656, 165, 1088, 470, 165, 1576, 1716, 876, 1297,
	486, 123, 165, 611, 1609, 1189, 1562, 1098, 1550, 905,
	165, 1789, 1091, 1471, 586, 1478, 1438, 81, 1059, 137,
	1064, 783, 1084, 1046, 509, 1419, 33, 1362, 498, 571,
	943, 1081, 486, 1294, 762, 486, 165, 486, 1082, 786,
	608, 1560, 1396, 1196, 1280, 1454, 784, 759, 763, 789,
	796, 785, 1539, 1097, 1494, 1095, 79, 1302, 1071, 1529,
	1207, 861, 106, 140, 1020, 923, 100, 101, 8, 7,
	1158, 6, 78, 1023, 1838, 1837, 1607, 1266, 1181, 107,
	493, 1865, 1866, 2118, 167, 168, 169, 1433, 1434, 1351,
	1350, 1349, 1348, 1347, 944, 1346, 496, 1339, 497, 2233,
	1694, 2163, 766, 1966, 771, 820, 572, 593, 597, 102,
	2067, 2140, 2139, 445, 2086, 822, 756, 2087, 834, 835,
	821, 838, 839, 840, 841, 108, 2259, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 2216, 84, 494, 2254, 2188, 605, 823, 80,
	799, 612, 944, 1555, 2247, 2092, 1595, 2215, 2187, 1646,
	954, 800, 778, 102, 1894, 2030, 777, 776, 1172, 824,
	825, 826, 35, 1695, 1553, 72, 39, 40, 1945, 1946,
	86, 87, 88, 89, 90, 91, 161, 831, 97, 1845,
	912, 162, 914, 1844, 440, 1944, 864, 1505, 1506, 549,
	836, 555, 556, 553, 554, 1504, 552, 551, 550, 1435,
	1099, 103, 1100, 125, 570, 1864, 557, 558, 954, 161,
	1644, 474, 1760, 1495, 145, 1759, 921, 102, 1761, 911,
	913, 167, 168, 169, 837, 895, 779, 568, 772, 567,
	775, 1779, 870, 871, 103, 1522, 900, 901, 896, 71,
	950, 889, 1999, 942, 1552, 135, 883, 145, 2190, 2021,
	124, 884, 2019, 595, 1340, 1341, 1342, 860, 883, 882,
	484, 881, 1256, 884, 1286, 1338, 473, 482, 142, 488,
	143, 1050, 775, 859, 1820, 112, 113, 134, 133, 160,
	1620, 1618, 1619, 1577, 775, 1993, 767, 773, 1764, 1841,
	1615, 770, 1610, 1994, 769, 768, 904, 2253, 950, 1281,
	918, 142, 866, 143, 1257, 1853, 1258, 909, 898, 899,
	1625, 910, 160, 920, 897, 843, 2234, 890, 2000, 499,
	842, 915, 902, 2081, 2001, 1612, 2136, 129, 110, 136,
	117, 109, 903, 130, 131, 1622, 863, 1623, 146, 1624,
	474, 773, 474, 908, 1616, 1579, 1775, 1769, 151, 118,
	1472, 816, 815, 814, 813, 812, 1777, 807, 1614, 805,
	811, 810, 809, 121, 119, 114, 115, 116, 120, 1965,
	165, 146, 165, 111, 804, 165, 780, 1175, 817, 2137,
	2266, 151, 122, 949, 946, 947, 948, 953, 955, 952,
	2245, 951, 1771, 916, 774, 473, 474, 473, 945, 1613,
	760, 486, 486, 486, 1287, 792, 760, 760, 893, 791,
	758, 1495, 1857, 1295, 1773, 1195, 1194, 1767, 1554, 486,
	486, 862, 798, 1697, 1699, 2186, 1561, 1843, 2264, 1768,
	599, 1854, 936, 917, 1601, 879, 774, 885, 886, 887,
	888, 949, 946, 947, 948, 953, 955, 952, 774, 951,
	808, 473, 806, 1878, 138, 833, 945, 1291, 922, 930,
	827, 798, 2191, 1973, 1840, 798, 919, 2153, 969, 968,
	978, 979, 971, 972, 973, 974, 975, 976, 977, 970,
	1645, 1903, 980, 1902, 1830, 2207, 1901, 138, 1170, 1776,
	1774, 1169, 1168, 99, 73, 1292, 1166, 1880, 165, 444,
	439, 2174, 798, 1268, 1267, 1269, 1270, 1271, 1860, 1860,
	132, 2050, 1597, 1859, 1859, 1052, 992, 993, 1943, 990,
	1698, 880, 126, 1721, 1664, 127, 486, 927, 928, 165,
	1675, 165, 165, 869, 486, 872, 1587, 1500, 1672, 1285,
	486, 892, 608, 1075, 1852, 1051, 798, 1851, 1005, 939,
	937, 874, 938, 894, 1008, 1511, 980, 1756, 798, 1882,
	797, 1886, 1334, 1881, 906, 1879, 878, 791, 794, 795,
	1884, 760, 1369, 1080, 1450, 788, 792, 960, 2262, 1883,
	1047, 2263, 970, 2261, 1896, 980, 1367, 1368, 1366, 2182,
	819, 1065, 1885, 1887, 787, 958, 959, 957, 1928, 797,
	1772, 832, 1611, 797, 1022, 1025, 1027, 1029, 1030, 1032,
	1034, 1035, 1303, 960, 1026, 1028, 1063, 1031, 1033, 1282,
	1036, 1283, 959, 957, 1284, 94, 139, 144, 141, 147,
	148, 149, 150, 152, 153, 154, 155, 1044, 1596, 960,
	797, 1288, 156, 157, 158, 159, 801, 791, 1101, 1420,
	167, 168, 169, 612, 1387, 940, 802, 865, 1808, 139,
	144, 141, 147, 148, 149, 150, 152, 153, 154, 155,
	95, 992, 993, 1594, 803, 156, 157, 158, 159, 992,
	993, 877, 907, 1592, 797, 165, 807, 1589, 2154, 1159,
	1794, 791, 794, 795, 1589, 760, 797, 957, 1167, 788,
	792, 805, 801, 791, 1420, 2248, 1682, 1671, 1053, 1948,
	1388, 1593, 802, 960, 958, 959, 957, 486, 1591, 1191,
	973, 974, 975, 976, 977, 970, 2267, 1200, 980, 71,
	1304, 1204, 960, 2249, 486, 486, 1068, 486, 1275, 486,
	486, 1365, 486, 486, 486, 486, 486, 486, 1173, 1174,
	167, 168, 169, 2066, 1784, 961, 2239, 486, 1187, 1273,
	1201, 165, 1240, 968, 978, 979, 971, 972, 973, 974,
	975, 976, 977, 970, 1180, 2243, 980, 1253, 2065, 958,
	959, 957, 1971, 1905, 2240, 1235, 1236, 1898, 486, 598,
	165, 499, 1199, 958, 959, 957, 2268, 960, 1237, 1274,
	1018, 1293, 1649, 1650, 1651, 165, 1243, 1244, 1263, 1096,
	1785, 960, 1249, 1250, 1455, 1456, 1793, 1165, 1792, 1670,
	1272, 165, 167, 168, 169, 1558, 1763, 1669, 165, 1198,
	1276, 1906, 1057, 1060, 1178, 1197, 1197, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 486, 486, 486, 1190,
	1177, 1176, 958, 959, 957, 1209, 1261, 1210, 1260, 1212,
	1214, 1259, 1422, 1218, 1220, 1222, 1224, 1226, 1299, 1262,
	960, 1251, 1245, 165, 1357, 1359, 1360, 1238, 1307, 600,
	601, 1305, 1306, 1242, 1241, 1311, 1358, 1313, 1314, 1315,
	1316, 1216, 2242, 2241, 1320, 1310, 1296, 2227, 958, 959,
	957, 603, 1317, 1318, 1319, 1171, 2225, 2107, 1335, 2063,
	1363, 1386, 2038, 167, 168, 169, 960, 1571, 1952, 102,
	1389, 1907, 777, 776, 1802, 1790, 1345, 525, 524, 527,
	528, 529, 530, 1640, 486, 1605, 526, 1604, 531, 1309,
	1444, 167, 168, 169, 1397, 1569, 580, 167, 168, 169,
	1300, 1254, 167, 168, 169, 1264, 1390, 1391, 978, 979,
	971, 972, 973, 974, 975, 976, 977, 970, 486, 486,
	980, 1330, 1331, 1332, 1408, 1411, 1452, 1252, 1364, 165,
	1421, 1248, 1403, 1247, 971, 972, 973, 974, 975, 976,
	977, 970, 1246, 486, 980, 1398, 1996, 1980, 2244, 1399,
	165, 80, 1443, 486, 1980, 2213, 581, 165, 1008, 165,
	1980, 2180, 1980, 2175, 1397, 1980, 581, 165, 165, 1496,
	1445, 1427, 1428, 2134, 486, 2084, 581, 486, 1490, 2133,
	1457, 2090, 608, 1980, 2082, 608, 1589, 581, 486, 2048,
	581, 1451, 1404, 1405, 1963, 1962, 1410, 1413, 1414, 1959,
	1960, 1959, 1958, 1400, 1463, 581, 1495, 1839, 1162, 1824,
	1817, 1818, 1475, 581, 35, 1469, 958, 959, 957, 1399,
	1465, 1493, 1426, 956, 581, 1429, 1430, 1717, 1496, 1515,
	35, 581, 1717, 1497, 960, 1822, 1530, 1531, 1532, 1724,
	1805, 1499, 1523, 486, 1524, 1525, 1526, 1527, 82, 1564,
	1565, 1566, 1162, 1161, 1568, 1570, 1107, 1106, 1590, 2068,
	1535, 1536, 1537, 1538, 1725, 1519, 1514, 486, 1750, 1518,
	1545, 1467, 1916, 486, 1200, 1927, 1495, 1200, 2045, 1200,
	2123, 1927, 1301, 1464, 1498, 2181, 956, 1588, 1502, 1501,
	1551, 71, 1497, 612, 1517, 1980, 612, 1961, 1475, 1516,
	1495, 1474, 1475, 1927, 1503, 35, 1687, 71, 1575, 2069,
	2070, 2071, 1686, 1937, 1463, 1589, 1463, 486, 1589, 1386,
	1572, 1453, 1431, 1343, 1386, 1386, 574, 969, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 1582,
	1290, 980, 1585, 1093, 1586, 581, 1546, 1541, 1542, 1557,
	1559, 1556, 782, 1567, 1475, 1463, 1231, 781, 1598, 165,
	1352, 1353, 1354, 1355, 1600, 799, 165, 1581, 2205, 1602,
	1603, 165, 165, 71, 1599, 165, 800, 165, 1546, 1584,
	1580, 565, 71, 165, 2146, 2089, 1197, 1657, 2056, 1164,
	165, 969, 968, 978, 979, 971, 972, 973, 974, 975,
	976, 977, 970, 71, 1544, 980, 1232, 1233, 1234, 2072,
	1995, 1825, 1608, 1540, 1534, 1406, 1407, 165, 486, 1533,
	1278, 1192, 1188, 1160, 96, 1798, 1799, 1228, 864, 1998,
	166, 2147, 2033, 166, 1931, 1932, 166, 1555, 2256, 2252,
	1978, 487, 1977, 166, 1635, 1636, 1976, 1934, 1916, 1638,
	1809, 166, 1629, 499, 1741, 1336, 2073, 2074, 1639, 1742,
	1739, 1936, 2236, 1363, 1738, 1740, 1628, 1743, 1737, 1484,
	1485, 2214, 1799, 487, 1229, 1230, 487, 166, 487, 969,
	968, 978, 979, 971, 972, 973, 974, 975, 976, 977,
	970, 1908, 1706, 980, 591, 587, 1480, 1483, 1484, 1485,
	1481, 1062, 1482, 1486, 2049, 1509, 1931, 1932, 2168, 2170,
	588, 1983, 165, 1715, 1643, 1714, 2238, 2171, 2218, 2220,
	165, 2165, 1666, 1480, 1483, 1484, 1485, 1481, 2198, 1482,
	1486, 1364, 2195, 1704, 1652, 1066, 1067, 590, 1289, 589,
	2194, 1705, 566, 1955, 1803, 165, 1416, 829, 828, 2008,
	1055, 1798, 1863, 1703, 929, 1832, 165, 165, 165, 165,
	165, 1417, 1056, 1726, 1547, 1710, 1831, 572, 165, 103,
	1665, 2121, 165, 591, 587, 165, 165, 1661, 1662, 165,
	165, 165, 1954, 1748, 1681, 1731, 1953, 1719, 1583, 588,
	1206, 1205, 1762, 1193, 1047, 1693, 1701, 2043, 1679, 1455,
	1456, 1974, 1448, 1632, 2176, 2141, 1950, 1488, 1722, 1621,
	1783, 1713, 1709, 1648, 584, 585, 590, 1751, 589, 1712,
	1720, 1753, 575, 576, 1718, 578, 2226, 2224, 2223, 2199,
	1782, 2197, 1786, 1787, 1788, 2042, 486, 1979, 1573, 1780,
	1781, 165, 1744, 579, 1299, 82, 1749, 1732, 165, 2041,
	1735, 1757, 1754, 1911, 486, 1733, 1734, 1717, 1736, 1676,
	486, 2258, 2257, 2258, 1673, 1200, 1076, 1069, 2172, 1951,
	486, 1449, 1801, 1765, 574, 80, 1827, 1766, 1551, 85,
	77, 1, 1836, 457, 1432, 1045, 1791, 469, 1821, 2250,
	1265, 1255, 2093, 165, 165, 165, 165, 165, 1800, 2143,
	1986, 1549, 1835, 790, 1806, 128, 1512, 1513, 2209, 165,
	165, 1810, 1811, 1812, 1180, 93, 1834, 753, 92, 793,
	891, 1574, 2085, 1778, 1521, 1113, 1111, 1398, 1112, 1110,
	1826, 1399, 1115, 534, 1114, 1833, 1109, 1337, 483, 1487,
	163, 1102, 1070, 830, 447, 486, 1964, 1333, 1606, 453,
	988, 1386, 1711, 1874, 1758, 609, 602, 1922, 2192, 2164,
	2166, 2117, 1855, 2169, 2162, 2237, 2217, 1520, 1447, 1058,
	2040, 1910, 1680, 1017, 1876, 1418, 1085, 508, 1442, 1356,
	523, 486, 520, 521, 1861, 1867, 1458, 1862, 1723, 1875,
	962, 506, 165, 485, 1873, 500, 1888, 1077, 1889, 1479,
	1477, 1476, 486, 1895, 1630, 1089, 1933, 1929, 486, 486,
	1874, 1083, 1462, 1770, 1842, 1992, 941, 583, 1917, 495,
	765, 166, 1920, 166, 1683, 610, 166, 1415, 757, 2152,
	764, 165, 1647, 2029, 582, 1731, 61, 38, 490, 2232,
	932, 1914, 592, 32, 31, 30, 29, 28, 23, 22,
	21, 20, 487, 487, 487, 1707, 1708, 1060, 19, 25,
	1935, 18, 17, 16, 98, 48, 45, 1926, 43, 105,
	487, 487, 104, 1940, 46, 42, 867, 27, 26, 15,
	14, 13, 1956, 1957, 1972, 12, 11, 1939, 10, 1941,
	165, 1942, 9, 5, 4, 935, 24, 1006, 486, 2,
	0, 1904, 0, 0, 0, 0, 486, 2032, 0, 0,
	0, 165, 0, 0, 0, 1968, 0, 1967, 1969, 1970,
	0, 165, 0, 1985, 1947, 0, 0, 0, 1987, 1925,
	0, 1982, 0, 0, 0, 165, 0, 0, 165, 1981,
	1984, 0, 0, 0, 0, 0, 1989, 2009, 0, 166,
	1990, 0, 0, 1551, 969, 968, 978, 979, 971, 972,
	973, 974, 975, 976, 977, 970, 2004, 2003, 980, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 0,
	166, 0, 166, 166, 0, 487, 2027, 0, 0, 0,
	0, 487, 0, 0, 2012, 2017, 0, 0, 0, 0,
	2006, 2007, 0, 0, 0, 0, 2014, 2015, 0, 2016,
	0, 0, 2018, 0, 2020, 0, 0, 0, 0, 1401,
	1402, 2039, 0, 0, 0, 0, 2044, 0, 0, 0,
	0, 0, 0, 0, 2053, 0, 0, 0, 1731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2052, 0, 0, 0, 165, 0, 2061, 165, 165, 165,
	486, 486, 0, 2058, 0, 1446, 0, 0, 0, 0,
	0, 0, 0, 2062, 0, 2064, 0, 2079, 2059, 2094,
	486, 486, 486, 0, 0, 0, 1897, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2100, 969, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 0,
	0, 980, 0, 0, 0, 486, 486, 486, 165, 0,
	2098, 1912, 0, 0, 0, 0, 0, 0, 0, 486,
	2099, 486, 2110, 2112, 2113, 0, 166, 486, 0, 2124,
	0, 0, 1920, 2114, 161, 2120, 1920, 0, 2106, 2122,
	2126, 0, 0, 2115, 2129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2131, 0, 2132, 0, 487, 103,
	486, 2128, 0, 486, 0, 2135, 0, 2130, 0, 0,
	0, 2145, 145, 2138, 0, 487, 487, 2142, 487, 0,
	487, 487, 0, 487, 487, 487, 487, 487, 487, 0,
	0, 0, 0, 0, 610, 610, 610, 0, 487, 2161,
	0, 0, 166, 0, 0, 0, 0, 0, 165, 0,
	1920, 0, 931, 933, 2173, 0, 0, 486, 165, 0,
	0, 0, 0, 2179, 0, 0, 142, 0, 143, 487,
	0, 166, 0, 0, 2183, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 486, 166, 2196, 2189, 0,
	0, 0, 486, 486, 0, 0, 2200, 0, 2202, 2208,
	2145, 2210, 166, 0, 0, 2026, 0, 0, 2222, 166,
	0, 2221, 0, 1731, 0, 0, 486, 2228, 166, 166,
	166, 166, 166, 166, 166, 166, 166, 487, 487, 487,
	2235, 0, 2031, 2231, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 2246,
	0, 0, 0, 0, 166, 499, 0, 0, 0, 1073,
	0, 0, 2054, 2255, 0, 2055, 0, 610, 2057, 964,
	2265, 967, 0, 1103, 0, 0, 0, 981, 982, 983,
	984, 985, 986, 987, 0, 965, 966, 963, 969, 968,
	978, 979, 971, 972, 973, 974, 975, 976, 977, 970,
	0, 0, 980, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 487, 969, 968, 978, 979,
	971, 972, 973, 974, 975, 976, 977, 970, 0, 0,
	980, 0, 1659, 0, 0, 0, 1660, 0, 0, 0,
	2024, 0, 0, 0, 0, 0, 0, 1667, 1668, 487,
	487, 0, 138, 1674, 0, 0, 1677, 1678, 0, 0,
	166, 0, 0, 0, 1684, 0, 1685, 0, 0, 1688,
	1689, 1690, 1691, 1692, 487, 2119, 499, 0, 0, 0,
	0, 166, 0, 0, 487, 1702, 0, 0, 166, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 166, 166,
	0, 0, 0, 0, 0, 487, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 487,
	969, 968, 978, 979, 971, 972, 973, 974, 975, 976,
	977, 970, 1746, 1747, 980, 969, 968, 978, 979, 971,
	972, 973, 974, 975, 976, 977, 970, 0, 0, 980,
	757, 969, 968, 978, 979, 971, 972, 973, 974, 975,
	976, 977, 970, 1202, 0, 980, 0, 1208, 1208, 0,
	1208, 0, 1208, 1208, 487, 1217, 1208, 1208, 1208, 1208,
	1208, 0, 0, 0, 0, 0, 1658, 0, 1202, 1202,
	757, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 487, 535, 969, 968, 978, 979,
	971, 972, 973, 974, 975, 976, 977, 970, 0, 0,
	980, 1277, 0, 0, 139, 144, 141, 147, 148, 149,
	150, 152, 153, 154, 155, 0, 0, 0, 0, 0,
	156, 157, 158, 159, 0, 0, 0, 0, 487, 0,
	0, 0, 0, 0, 164, 0, 0, 443, 0, 0,
	481, 0, 0, 0, 0, 0, 0, 443, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 610,
	610, 610, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 596, 596, 0, 0, 0, 166, 0, 0,
	0, 443, 166, 166, 1871, 1872, 166, 0, 166, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 166, 969, 968, 978, 979, 971, 972, 973, 974,
	975, 976, 977, 970, 0, 0, 980, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 487,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1392, 0, 610,
	1923, 0, 0, 0, 0, 0, 0, 0, 0, 502,
	0, 0, 0, 1202, 0, 0, 0, 0, 0, 0,
	0, 1938, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1424, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1459, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1073, 0, 0, 610,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 610, 0, 0,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 0, 0, 0, 166, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 166, 166, 166,
	166, 166, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 166, 0, 0, 166, 166, 0, 0,
	166, 166, 166, 0, 0, 0, 2011, 0, 0, 0,
	2013, 0, 0, 0, 0, 0, 764, 0, 0, 0,
	0, 2022, 2023, 0, 0, 0, 0, 0, 0, 462,
	0, 0, 0, 0, 0, 0, 0, 2037, 461, 0,
	757, 0, 0, 0, 0, 0, 764, 0, 0, 459,
	0, 0, 0, 0, 2046, 2047, 0, 487, 2051, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 487, 0, 0, 0, 0,
	0, 487, 0, 0, 0, 0, 0, 0, 456, 0,
	757, 487, 0, 0, 0, 0, 0, 468, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 166, 166, 166, 166, 2083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 166, 0, 0, 0, 443, 0, 443, 0, 0,
	443, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 2111, 0, 0,
	0, 0, 446, 0, 448, 463, 0, 476, 0, 475,
	452, 0, 450, 454, 464, 455, 0, 449, 0, 460,
	0, 1642, 451, 465, 466, 480, 479, 467, 0, 473,
	458, 477, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 166, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 0, 0, 0, 0, 487,
	487, 0, 0, 0, 2148, 2149, 2150, 2151, 0, 2155,
	0, 2156, 2157, 2158, 0, 2159, 2160, 0, 0, 537,
	34, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	0, 0, 0, 0, 34, 2185, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 0, 443, 1092, 0, 0,
	0, 1048, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 487,
	0, 0, 0, 0, 0, 478, 0, 487, 1202, 573,
	0, 0, 166, 0, 0, 0, 2229, 2230, 0, 0,
	0, 0, 166, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 442, 0, 0, 166, 0, 472, 166,
	0, 0, 0, 489, 0, 0, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	0, 0, 0, 0, 0, 0, 0, 761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1816, 0, 0,
	0, 1202, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 610, 0, 1828, 0, 0, 0, 0, 0, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 166, 166,
	166, 487, 487, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1203, 0, 0, 0, 0,
	0, 487, 487, 487, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 610, 0,
	1203, 1203, 0, 0, 0, 0, 443, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 487, 487, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 487, 0, 1208, 443, 0, 0, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1298, 0, 0, 0, 0, 610, 0, 0, 1202, 0,
	0, 1924, 1208, 0, 0, 0, 443, 0, 0, 0,
	0, 487, 0, 443, 487, 0, 0, 0, 0, 0,
	0, 0, 1321, 1322, 443, 443, 443, 443, 443, 443,
	443, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 757, 0, 0, 1202, 0, 487, 0, 0, 1816,
	0, 0, 0, 487, 487, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 1298, 0, 0, 0, 596, 596, 487, 0, 596,
	596, 596, 0, 0, 0, 1203, 0, 0, 0, 0,
	924, 924, 924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 596, 596, 596, 596, 596,
	34, 868, 0, 873, 1440, 0, 875, 0, 0, 0,
	0, 0, 0, 989, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 1298, 443, 0, 443, 0, 0, 0, 0, 0,
	0, 1202, 443, 443, 1004, 0, 0, 0, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 0, 1019, 1021, 1024,
	1024, 1024, 1021, 1024, 1024, 1021, 1024, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 0, 0, 0, 0, 0, 1049,
	0, 0, 0, 34, 0, 0, 0, 0, 0, 0,
	0, 0, 1361, 1816, 2080, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1086, 0, 0, 2095, 2096, 2097, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 1816,
	1816, 0, 0, 0, 1423, 0, 0, 0, 0, 0,
	1079, 0, 2125, 1090, 2127, 0, 0, 0, 0, 0,
	1816, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1816, 0, 161, 610, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 0, 125, 0, 443, 0, 0, 0, 0, 0,
	0, 443, 0, 145, 0, 0, 443, 443, 0, 0,
	443, 0, 1633, 0, 0, 0, 0, 0, 443, 0,
	1816, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 0, 124,
	0, 0, 0, 0, 0, 0, 1202, 0, 2201, 0,
	0, 0, 443, 0, 0, 610, 610, 142, 0, 143,
	0, 0, 0, 0, 1183, 1184, 134, 133, 160, 0,
	0, 0, 0, 0, 0, 0, 1108, 0, 0, 1816,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	596, 596, 0, 0, 0, 0, 129, 1185, 136, 0,
	1182, 0, 130, 131, 0, 0, 0, 146, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 443, 0, 0,
	0, 0, 1239, 0, 0, 1440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	443, 1279, 0, 0, 0, 924, 924, 924, 0, 0,
	1203, 443, 443, 443, 443, 443, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 443, 0, 0,
	443, 443, 1308, 0, 443, 1755, 1298, 0, 0, 1312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1653, 1654, 1655,
	0, 0, 0, 0, 1090, 0, 0, 1130, 0, 0,
	0, 0, 0, 0, 0, 0, 443, 0, 0, 0,
	0, 0, 0, 1813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 0, 0, 132,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 126, 0, 0, 127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 443, 443,
	443, 443, 443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 443, 443, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1491, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 596,
	1179, 0, 1118, 0, 0, 0, 0, 0, 0, 0,
	0, 1466, 0, 0, 103, 0, 125, 0, 1470, 0,
	1473, 0, 0, 0, 0, 0, 0, 145, 0, 1492,
	0, 0, 0, 0, 0, 139, 144, 141, 147, 148,
	149, 150, 152, 153, 154, 155, 1131, 443, 0, 0,
	0, 156, 157, 158, 159, 0, 0, 0, 135, 0,
	1203, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 143, 0, 0, 443, 0, 1183, 1184,
	134, 133, 160, 0, 0, 0, 0, 1144, 1147, 1148,
	1149, 1150, 1151, 1152, 0, 1153, 1154, 1155, 1156, 1157,
	1132, 1133, 1134, 1135, 1116, 1117, 1145, 0, 1119, 0,
	1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 0, 0,
	129, 1185, 136, 0, 1182, 443, 130, 131, 0, 0,
	0, 146, 0, 0, 0, 0, 1203, 0, 0, 0,
	0, 151, 0, 0, 0, 0, 443, 1869, 1870, 0,
	0, 0, 0, 0, 0, 0, 443, 0, 0, 0,
	0, 0, 1890, 1891, 0, 1892, 1893, 0, 0, 0,
	443, 0, 0, 443, 0, 0, 1899, 1900, 0, 0,
	0, 0, 0, 0, 0, 1146, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 0, 0, 0, 0, 0, 0, 1617, 0, 0,
	0, 0, 1626, 1627, 0, 0, 1631, 0, 0, 0,
	0, 0, 0, 0, 1634, 0, 0, 0, 0, 0,
	0, 1637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1203, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1641, 1949,
	0, 0, 0, 0, 0, 0, 0, 1663, 0, 0,
	573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 443,
	0, 0, 443, 443, 443, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 0, 0, 1700, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 0, 127, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1086, 0, 0, 0, 0, 0,
	0, 1727, 1728, 0, 0, 1086, 1086, 1086, 1086, 1086,
	0, 0, 0, 1440, 0, 0, 0, 0, 2010, 0,
	0, 1491, 0, 0, 1086, 0, 0, 0, 1086, 0,
	0, 0, 0, 0, 0, 35, 36, 37, 72, 39,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 76, 0, 0, 0, 0,
	41, 67, 68, 0, 65, 69, 0, 0, 0, 0,
	0, 0, 0, 66, 0, 0, 0, 1752, 0, 139,
	144, 141, 147, 148, 149, 150, 152, 153, 154, 155,
	0, 0, 0, 0, 0, 156, 157, 158, 159, 0,
	2060, 0, 54, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 71, 443, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 1203, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2101, 2102, 2103, 2104, 2105, 0,
	0, 0, 2108, 2109, 44, 47, 50, 49, 52, 0,
	64, 0, 0, 70, 1846, 1847, 1848, 1849, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1090, 1856, 0, 0, 0, 0, 53, 75, 74, 0,
	0, 62, 63, 51, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1921, 0, 34, 0, 0,
	0, 0, 55, 56, 0, 57, 58, 59, 60, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1909, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1991, 0, 2028, 0, 0, 0, 0, 0,
	0, 2034, 2035, 2036, 0, 0, 2002, 0, 0, 2005,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2075, 0, 0, 2076, 2077,
	2078, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1921, 0, 34, 0, 1921,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1921, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2177, 0, 0, 0,
	0, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2178,
	0, 0, 0, 0, 0, 0, 736, 723, 0, 2184,
	672, 739, 642, 660, 748, 663, 666, 706, 621, 685,
	314, 657, 0, 646, 617, 653, 618, 644, 674, 223,
	678, 641, 725, 688, 738, 272, 0, 623, 647, 328,
	662, 176, 708, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 745, 276, 695,
	0, 375, 299, 0, 0, 0, 676, 728, 683, 719,
	671, 707, 631, 694, 740, 658, 703, 741, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 2211, 2212, 0, 0, 0, 0, 0, 198, 0,
	205, 700, 735, 655, 702, 219, 260, 225, 218, 391,
	705, 751, 616, 697, 0, 619, 622, 747, 731, 650,
	651, 0, 0, 0, 0, 0, 0, 0, 675, 684,
	716, 669, 0, 0, 0, 0, 0, 0, 0, 0,
	648, 0, 693, 0, 0, 0, 627, 620, 0, 0,
	0, 0, 673, 0, 0, 0, 630, 0, 649, 717,
	0, 614, 245, 624, 300, 0, 721, 730, 670, 423,
	734, 668, 667, 737, 712, 628, 727, 661, 271, 626,
	268, 171, 187, 0, 659, 310, 349, 355, 726, 645,
	654, 210, 652, 353, 324, 408, 194, 235, 346, 329,
	351, 692, 710, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 926, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 640, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 722, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 714, 750, 323, 354, 200, 410, 374, 635,
	639, 633, 634, 686, 687, 636, 742, 743, 744, 718,
	629, 0, 637, 638, 0, 724, 732, 733, 691, 170,
	184, 274, 746, 343, 238, 436, 417, 413, 615, 632,
	216, 643, 0, 0, 656, 664, 665, 677, 679, 680,
	681, 682, 690, 698, 699, 701, 709, 711, 713, 715,
	720, 729, 749, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 689, 696, 284, 232, 249, 259,
	704, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 736,
	723, 0, 0, 672, 739, 642, 660, 748, 663, 666,
	706, 621, 685, 314, 657, 0, 646, 617, 653, 618,
	644, 674, 223, 678, 641, 725, 688, 738, 272, 0,
	623, 647, 328, 662, 176, 708, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	745, 276, 695, 0, 375, 299, 0, 0, 0, 676,
	728, 683, 719, 671, 707, 631, 694, 740, 658, 703,
	741, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 700, 735, 655, 702, 219, 260,
	225, 218, 391, 705, 751, 616, 697, 0, 619, 622,
	747, 731, 650, 651, 0, 0, 0, 0, 0, 0,
	0, 675, 684, 716, 669, 0, 0, 0, 0, 0,
	0, 1913, 0, 648, 0, 693, 0, 0, 0, 627,
	620, 0, 0, 0, 0, 673, 0, 0, 0, 630,
	0, 649, 717, 0, 614, 245, 624, 300, 0, 721,
	730, 670, 423, 734, 668, 667, 737, 712, 628, 727,
	661, 271, 626, 268, 171, 187, 0, 659, 310, 349,
	355, 726, 645, 654, 210, 652, 353, 324, 408, 194,
	235, 346, 329, 351, 692, 710, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 926, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 640, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 722, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 714, 750, 323, 354, 200,
	410, 374, 635, 639, 633, 634, 686, 687, 636, 742,
	743, 744, 718, 629, 0, 637, 638, 0, 724, 732,
	733, 691, 170, 184, 274, 746, 343, 238, 436, 417,
	413, 615, 632, 216, 643, 0, 0, 656, 664, 665,
	677, 679, 680, 681, 682, 690, 698, 699, 701, 709,
	711, 713, 715, 720, 729, 749, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 689, 696, 284,
	232, 249, 259, 704, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 736, 723, 0, 0, 672, 739, 642, 660,
	748, 663, 666, 706, 621, 685, 314, 657, 0, 646,
	617, 653, 618, 644, 674, 223, 678, 641, 725, 688,
	738, 272, 0, 623, 647, 328, 662, 176, 708, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 745, 276, 695, 0, 375, 299, 0,
	0, 0, 676, 728, 683, 719, 671, 707, 631, 694,
	740, 658, 703, 741, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 700, 735, 655,
	702, 219, 260, 225, 218, 391, 705, 751, 616, 697,
	0, 619, 622, 747, 731, 650, 651, 0, 0, 0,
	0, 0, 0, 0, 675, 684, 716, 669, 0, 0,
	0, 0, 0, 0, 1756, 0, 648, 0, 693, 0,
	0, 0, 627, 620, 0, 0, 0, 0, 673, 0,
	0, 0, 630, 0, 649, 717, 0, 614, 245, 624,
	300, 0, 721, 730, 670, 423, 734, 668, 667, 737,
	712, 628, 727, 661, 271, 626, 268, 171, 187, 0,
	659, 310, 349, 355, 726, 645, 654, 210, 652, 353,
	324, 408, 194, 235, 346, 329, 351, 692, 710, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 926, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 640, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 722, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 714, 750,
	323, 354, 200, 410, 374, 635, 639, 633, 634, 686,
	687, 636, 742, 743, 744, 718, 629, 0, 637, 638,
	0, 724, 732, 733, 691, 170, 184, 274, 746, 343,
	238, 436, 417, 413, 615, 632, 216, 643, 0, 0,
	656, 664, 665, 677, 679, 680, 681, 682, 690, 698,
	699, 701, 709, 711, 713, 715, 720, 729, 749, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	689, 696, 284, 232, 249, 259, 704, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 736, 723, 0, 0, 672,
	739, 642, 660, 748, 663, 666, 706, 621, 685, 314,
	657, 0, 646, 617, 653, 618, 644, 674, 223, 678,
	641, 725, 688, 738, 272, 0, 623, 647, 328, 662,
	176, 708, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 745, 276, 695, 0,
	375, 299, 0, 0, 0, 676, 728, 683, 719, 671,
	707, 631, 694, 740, 658, 703, 741, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	700, 735, 655, 702, 219, 260, 225, 218, 391, 705,
	751, 616, 697, 0, 619, 622, 747, 731, 650, 651,
	0, 0, 0, 0, 0, 0, 0, 675, 684, 716,
	669, 0, 0, 0, 0, 0, 0, 1468, 0, 648,
	0, 693, 0, 0, 0, 627, 620, 0, 0, 0,
	0, 673, 0, 0, 0, 630, 0, 649, 717, 0,
	614, 245, 624, 300, 0, 721, 730, 670, 423, 734,
	668, 667, 737, 712, 628, 727, 661, 271, 626, 268,
	171, 187, 0, 659, 310, 349, 355, 726, 645, 654,
	210, 652, 353, 324, 408, 194, 235, 346, 329, 351,
	692, 710, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 926, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 640, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 722, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 714, 750, 323, 354, 200, 410, 374, 635, 639,
	633, 634, 686, 687, 636, 742, 743, 744, 718, 629,
	0, 637, 638, 0, 724, 732, 733, 691, 170, 184,
	274, 746, 343, 238, 436, 417, 413, 615, 632, 216,
	643, 0, 0, 656, 664, 665, 677, 679, 680, 681,
	682, 690, 698, 699, 701, 709, 711, 713, 715, 720,
	729, 749, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 689, 696, 284, 232, 249, 259, 704,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 736, 723,
	0, 0, 672, 739, 642, 660, 748, 663, 666, 706,
	621, 685, 314, 657, 0, 646, 617, 653, 618, 644,
	674, 223, 678, 641, 725, 688, 738, 272, 0, 623,
	647, 328, 662, 176, 708, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 745,
	276, 695, 0, 375, 299, 0, 0, 0, 676, 728,
	683, 719, 671, 707, 631, 694, 740, 658, 703, 741,
	262, 207, 175, 311, 376, 237, 71, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 700, 735, 655, 702, 219, 260, 225,
	218, 391, 705, 751, 616, 697, 0, 619, 622, 747,
	731, 650, 651, 0, 0, 0, 0, 0, 0, 0,
	675, 684, 716, 669, 0, 0, 0, 0, 0, 0,
	0, 0, 648, 0, 693, 0, 0, 0, 627, 620,
	0, 0, 0, 0, 673, 0, 0, 0, 630, 0,
	649, 717, 0, 614, 245, 624, 300, 0, 721, 730,
	670, 423, 734, 668, 667, 737, 712, 628, 727, 661,
	271, 626, 268, 171, 187, 0, 659, 310, 349, 355,
	726, 645, 654, 210, 652, 353, 324, 408, 194, 235,
	346, 329, 351, 692, 710, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 926, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 640, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 722, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 714, 750, 323, 354, 200, 410,
	374, 635, 639, 633, 634, 686, 687, 636, 742, 743,
	744, 718, 629, 0, 637, 638, 0, 724, 732, 733,
	691, 170, 184, 274, 746, 343, 238, 436, 417, 413,
	615, 632, 216, 643, 0, 0, 656, 664, 665, 677,
	679, 680, 681, 682, 690, 698, 699, 701, 709, 711,
	713, 715, 720, 729, 749, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 689, 696, 284, 232,
	249, 259, 704, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 736, 723, 0, 0, 672, 739, 642, 660, 748,
	663, 666, 706, 621, 685, 314, 657, 0, 646, 617,
	653, 618, 644, 674, 223, 678, 641, 725, 688, 738,
	272, 0, 623, 647, 328, 662, 176, 708, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 745, 276, 695, 0, 375, 299, 0, 0,
	0, 676, 728, 683, 719, 671, 707, 631, 694, 740,
	658, 703, 741, 262, 207, 175, 311, 376, 237, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 700, 735, 655, 702,
	219, 260, 225, 218, 391, 705, 751, 616, 697, 0,
	619, 622, 747, 731, 650, 651, 0, 0, 0, 0,
	0, 0, 0, 675, 684, 716, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 648, 0, 693, 0, 0,
	0, 627, 620, 0, 0, 0, 0, 673, 0, 0,
	0, 630, 0, 649, 717, 0, 614, 245, 624, 300,
	0, 721, 730, 670, 423, 734, 668, 667, 737, 712,
	628, 727, 661, 271, 626, 268, 171, 187, 0, 659,
	310, 349, 355, 726, 645, 654, 210, 652, 353, 324,
	408, 194, 235, 346, 329, 351, 692, 710, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 926, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 640, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	722, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 714, 750, 323,
	354, 200, 410, 374, 635, 639, 633, 634, 686, 687,
	636, 742, 743, 744, 718, 629, 0, 637, 638, 0,
	724, 732, 733, 691, 170, 184, 274, 746, 343, 238,
	436, 417, 413, 615, 632, 216, 643, 0, 0, 656,
	664, 665, 677, 679, 680, 681, 682, 690, 698, 699,
	701, 709, 711, 713, 715, 720, 729, 749, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 689,
	696, 284, 232, 249, 259, 704, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 736, 723, 0, 0, 672, 739,
	642, 660, 748, 663, 666, 706, 621, 685, 314, 657,
	0, 646, 617, 653, 618, 644, 674, 223, 678, 641,
	725, 688, 738, 272, 0, 623, 647, 328, 662, 176,
	708, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 745, 276, 695, 0, 375,
	299, 0, 0, 0, 676, 728, 683, 719, 671, 707,
	631, 694, 740, 658, 703, 741, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 700,
	735, 655, 702, 219, 260, 225, 218, 391, 705, 751,
	616, 697, 0, 619, 622, 747, 731, 650, 651, 0,
	0, 0, 0, 0, 0, 0, 675, 684, 716, 669,
	0, 0, 0, 0, 0, 0, 0, 0, 648, 0,
	693, 0, 0, 0, 627, 620, 0, 0, 0, 0,
	673, 0, 0, 0, 630, 0, 649, 717, 0, 614,
	245, 624, 300, 0, 721, 730, 670, 423, 734, 668,
	667, 737, 712, 628, 727, 661, 271, 626, 268, 171,
	187, 0, 659, 310, 349, 355, 726, 645, 654, 210,
	652, 353, 324, 408, 194, 235, 346, 329, 351, 692,
	710, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	625, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	640, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 722, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 613, 752, 607, 606, 269, 278,
	714, 750, 323, 354, 200, 410, 374, 635, 639, 633,
	634, 686, 687, 636, 742, 743, 744, 718, 629, 0,
	637, 638, 0, 724, 732, 733, 691, 170, 184, 274,
	746, 343, 238, 436, 417, 413, 615, 632, 216, 643,
	0, 0, 656, 664, 665, 677, 679, 680, 681, 682,
	690, 698, 699, 701, 709, 711, 713, 715, 720, 729,
	749, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 689, 696, 284, 232, 249, 259, 704, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 736, 723, 0,
	0, 672, 739, 642, 660, 748, 663, 666, 706, 621,
	685, 314, 657, 0, 646, 617, 653, 618, 644, 674,
	223, 678, 641, 725, 688, 738, 272, 0, 623, 647,
	328, 662, 176, 708, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 745, 276,
	695, 0, 375, 299, 0, 0, 0, 676, 728, 683,
	719, 671, 707, 631, 694, 740, 658, 703, 741, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 700, 735, 655, 702, 219, 260, 225, 218,
	391, 705, 751, 616, 697, 0, 619, 622, 747, 731,
	650, 651, 0, 0, 0, 0, 0, 0, 0, 675,
	684, 716, 669, 0, 0, 0, 0, 0, 0, 0,
	0, 648, 0, 693, 0, 0, 0, 627, 620, 0,
	0, 0, 0, 673, 0, 0, 0, 630, 0, 649,
	717, 0, 614, 245, 624, 300, 0, 721, 730, 670,
	423, 734, 668, 667, 737, 712, 628, 727, 661, 271,
	626, 268, 171, 187, 0, 659, 310, 349, 355, 726,
	645, 654, 210, 652, 353, 324, 408, 194, 235, 346,
	329, 351, 692, 710, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 1094, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 625, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 640, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 722, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 613, 752, 607,
	606, 269, 278, 714, 750, 323, 354, 200, 410, 374,
	635, 639, 633, 634, 686, 687, 636, 742, 743, 744,
	718, 629, 0, 637, 638, 0, 724, 732, 733, 691,
	170, 184, 274, 746, 343, 238, 436, 417, 413, 615,
	632, 216, 643, 0, 0, 656, 664, 665, 677, 679,
	680, 681, 682, 690, 698, 699, 701, 709, 711, 713,
	715, 720, 729, 749, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 689, 696, 284, 232, 249,
	259, 704, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	736, 723, 0, 0, 672, 739, 642, 660, 748, 663,
	666, 706, 621, 685, 314, 657, 0, 646, 617, 653,
	618, 644, 674, 223, 678, 641, 725, 688, 738, 272,
	0, 623, 647, 328, 662, 176, 708, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 745, 276, 695, 0, 375, 299, 0, 0, 0,
	676, 728, 683, 719, 671, 707, 631, 694, 740, 658,
	703, 741, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 700, 735, 655, 702, 219,
	260, 225, 218, 391, 705, 751, 616, 697, 0, 619,
	622, 747, 731, 650, 651, 0, 0, 0, 0, 0,
	0, 0, 675, 684, 716, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 648, 0, 693, 0, 0, 0,
	627, 620, 0, 0, 0, 0, 673, 0, 0, 0,
	630, 0, 649, 717, 0, 614, 245, 624, 300, 0,
	721, 730, 670, 423, 734, 668, 667, 737, 712, 628,
	727, 661, 271, 626, 268, 171, 187, 0, 659, 310,
	349, 355, 726, 645, 654, 210, 652, 353, 324, 408,
	194, 235, 346, 329, 351, 692, 710, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	604, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 625, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 640, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 722,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	613, 752, 607, 606, 269, 278, 714, 750, 323, 354,
	200, 410, 374, 635, 639, 633, 634, 686, 687, 636,
	742, 743, 744, 718, 629, 0, 637, 638, 0, 724,
	732, 733, 691, 170, 184, 274, 746, 343, 238, 436,
	417, 413, 615, 632, 216, 643, 0, 0, 656, 664,
	665, 677, 679, 680, 681, 682, 690, 698, 699, 701,
	709, 711, 713, 715, 720, 729, 749, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 689, 696,
	284, 232, 249, 259, 704, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 1394, 0, 504, 0,
	0, 0, 223, 0, 503, 0, 0, 0, 272, 0,
	0, 1395, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	547, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 538, 539, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 71, 0, 0,
	167, 168, 169, 525, 524, 527, 528, 529, 530, 0,
	0, 198, 526, 205, 531, 532, 533, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 501, 518, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 515,
	516, 594, 0, 0, 0, 562, 0, 517, 0, 0,
	510, 511, 513, 512, 514, 519, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 561,
	0, 0, 423, 0, 0, 559, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 549, 560, 555, 556, 553, 554, 548, 552,
	551, 550, 563, 540, 541, 542, 543, 545, 0, 557,
	558, 544, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 0, 0, 0, 504, 0, 0,
	0, 223, 0, 503, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 547,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	538, 539, 0, 0, 0, 0, 0, 0, 1507, 0,
	262, 207, 175, 311, 376, 237, 71, 0, 0, 167,
	168, 169, 525, 524, 527, 528, 529, 530, 0, 0,
	198, 526, 205, 531, 532, 533, 1508, 219, 260, 225,
	218, 391, 0, 0, 0, 501, 518, 0, 546, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 515, 516,
	0, 0, 0, 0, 562, 0, 517, 0, 0, 510,
	511, 513, 512, 514, 519, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 561, 0,
	0, 423, 0, 0, 559, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 549, 560, 555, 556, 553, 554, 548, 552, 551,
	550, 563, 540, 541, 542, 543, 545, 0, 557, 558,
	544, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 0, 0, 0, 504, 0, 0, 0,
	223, 0, 503, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 547, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 538,
	539, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 71, 0, 581, 167, 168,
	169, 525, 524, 527, 528, 529, 530, 0, 0, 198,
	526, 205, 531, 532, 533, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 501, 518, 0, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 515, 516, 0,
	0, 0, 0, 562, 0, 517, 0, 0, 510, 511,
	513, 512, 514, 519, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 561, 0, 0,
	423, 0, 0, 559, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	549, 560, 555, 556, 553, 554, 548, 552, 551, 550,
	563, 540, 541, 542, 543, 545, 0, 557, 558, 544,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 0, 0, 0, 504, 0, 0, 0, 223,
	0, 503, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 547, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 71, 0, 0, 167, 168, 169,
	525, 524, 527, 528, 529, 530, 0, 0, 198, 526,
	205, 531, 532, 533, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 501, 518, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 516, 594, 0,
	0, 0, 562, 0, 517, 0, 0, 510, 511, 513,
	512, 514, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 561, 0, 0, 423,
	0, 0, 559, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 549,
	560, 555, 556, 553, 554, 548, 552, 551, 550, 563,
	540, 541, 542, 543, 545, 0, 557, 558, 544, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 504, 0, 0, 0, 223, 0,
	503, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 547, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 71, 0, 0, 167, 168, 169, 525,
	1412, 527, 528, 529, 530, 0, 0, 198, 526, 205,
	531, 532, 533, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 501, 518, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 516, 594, 0, 0,
	0, 562, 0, 517, 0, 0, 510, 511, 513, 512,
	514, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 561, 0, 0, 423, 0,
	0, 559, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 549, 560,
	555, 556, 553, 554, 548, 552, 551, 550, 563, 540,
	541, 542, 543, 545, 0, 557, 558, 544, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 504, 0, 0, 0, 223, 0, 503,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 547, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 71, 0, 0, 167, 168, 169, 525, 1409,
	527, 528, 529, 530, 0, 0, 198, 526, 205, 531,
	532, 533, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 501, 518, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 594, 0, 0, 0,
	562, 0, 517, 0, 0, 510, 511, 513, 512, 514,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 561, 0, 0, 423, 0, 0,
	559, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 549, 560, 555,
	556, 553, 554, 548, 552, 551, 550, 563, 540, 541,
	542, 543, 545, 0, 557, 558, 544, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 504, 0, 0, 0, 223,
	0, 503, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 547, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 538, 539,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 71, 0, 0, 167, 168, 169,
	525, 524, 527, 528, 529, 530, 0, 0, 198, 526,
	205, 531, 532, 533, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 501, 518, 0, 546, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 515, 516, 0, 0,
	0, 0, 562, 0, 517, 0, 0, 510, 511, 513,
	512, 514, 519, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 561, 0, 0, 423,
	0, 0, 559, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 549,
	560, 555, 556, 553, 554, 548, 552, 551, 550, 563,
	540, 541, 542, 543, 545, 0, 557, 558, 544, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 504, 0, 0, 0, 223, 0,
	503, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 547, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 538, 539, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 71, 0, 0, 167, 168, 169, 525,
	524, 527, 528, 529, 530, 0, 0, 198, 526, 205,
	531, 532, 533, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 501, 518, 0, 546, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 515, 516, 0, 0, 0,
	0, 562, 0, 517, 0, 0, 510, 511, 513, 512,
	514, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 561, 0, 0, 423, 0,
	0, 559, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 549, 560,
	555, 556, 553, 554, 548, 552, 551, 550, 563, 540,
	541, 542, 543, 545, 0, 557, 558, 544, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 547, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 71, 0, 0, 167, 168, 169, 525, 524,
	527, 528, 529, 530, 0, 0, 198, 526, 205, 531,
	532, 533, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 518, 0, 546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 515, 516, 0, 0, 0, 0,
	562, 0, 517, 0, 0, 510, 511, 513, 512, 514,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 561, 0, 0, 423, 0, 0,
	559, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 2204,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 549, 560, 555,
	556, 553, 554, 548, 552, 551, 550, 563, 540, 541,
	542, 543, 545, 0, 557, 558, 544, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 547, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 538, 539, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 71, 0, 581, 167, 168, 169, 525, 524, 527,
	528, 529, 530, 0, 0, 198, 526, 205, 531, 532,
	533, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 518, 0, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 515, 516, 0, 0, 0, 0, 562,
	0, 517, 0, 0, 510, 511, 513, 512, 514, 519,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 561, 0, 0, 423, 0, 0, 559,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 549, 560, 555, 556,
	553, 554, 548, 552, 551, 550, 563, 540, 541, 542,
	543, 545, 0, 557, 558, 544, 170, 184, 274, 0,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 547, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 538, 539, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	71, 0, 0, 167, 168, 169, 525, 524, 527, 528,
	529, 530, 0, 0, 198, 526, 205, 531, 532, 533,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	518, 0, 546, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 515, 516, 0, 0, 0, 0, 562, 0,
	517, 0, 0, 510, 511, 513, 512, 514, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 561, 0, 0, 423, 0, 0, 559, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 549, 560, 555, 556, 553,
	554, 548, 552, 551, 550, 563, 540, 541, 542, 543,
	545, 0, 557, 558, 544, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 969, 968, 978,
	979, 971, 972, 973, 974, 975, 976, 977, 970, 0,
	0, 980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 798, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 797, 423, 0, 0, 0, 0, 0, 0,
	794, 795, 271, 760, 268, 171, 187, 788, 792, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 0, 1072, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 1074, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 958, 959, 957, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 960, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 35, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 71,
	0, 581, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 0, 0, 1439, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 1441, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 1437, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 760, 268, 171, 187, 758, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 0, 0, 1439, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 1441, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 35, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 71, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 1460, 0, 0, 1461, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 1105, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 1104, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 581, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 71, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	1441, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 0, 0, 0, 167, 168, 169, 0, 1074,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 223, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 328, 0, 176, 0,
	366, 209, 281, 279, 394, 233, 226, 222, 208, 256,
	287, 326, 384, 320, 0, 276, 0, 0, 375, 299,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 207, 175, 311, 376,
	237, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 0, 0,
	0, 0, 219, 260, 225, 218, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 300, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 268, 171, 187,
	0, 0, 310, 349, 355, 0, 0, 0, 210, 0,
	353, 324, 408, 194, 235, 346, 329, 351, 0, 0,
	352, 277, 396, 341, 406, 424, 425, 217, 304, 414,
	388, 420, 435, 188, 214, 318, 381, 411, 372, 297,
	392, 393, 267, 371, 243, 174, 275, 432, 186, 361,
	202, 179, 383, 404, 199, 364, 0, 0, 0, 181,
	402, 380, 294, 264, 265, 180, 0, 345, 221, 241,
	212, 313, 399, 400, 211, 437, 190, 419, 183, 0,
	418, 306, 395, 403, 295, 286, 182, 401, 293, 285,
	270, 231, 251, 339, 280, 340, 252, 302, 301, 303,
	0, 177, 0, 377, 412, 438, 195, 196, 197, 0,
	230, 234, 240, 242, 0, 248, 255, 273, 317, 338,
	336, 342, 0, 390, 407, 415, 422, 428, 429, 433,
	430, 431, 434, 305, 191, 254, 373, 269, 278, 0,
	0, 323, 354, 200, 410, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 274, 1344,
	343, 238, 436, 417, 413, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 228, 236, 246, 250,
	253, 257, 258, 261, 266, 283, 288, 289, 290, 291,
	307, 308, 309, 312, 315, 316, 319, 321, 322, 325,
	331, 332, 333, 334, 335, 337, 344, 348, 356, 357,
	358, 359, 360, 362, 363, 367, 368, 369, 370, 378,
	382, 397, 398, 409, 421, 426, 247, 405, 427, 0,
	282, 0, 0, 284, 232, 249, 259, 0, 416, 379,
	189, 350, 239, 178, 206, 192, 213, 227, 229, 263,
	292, 298, 327, 330, 244, 224, 204, 347, 201, 365,
	385, 386, 387, 389, 296, 220, 314, 0, 1227, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 328, 0, 176, 0, 366,
	209, 281, 279, 394, 233, 226, 222, 208, 256, 287,
	326, 384, 320, 0, 276, 0, 0, 375, 299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 207, 175, 311, 376, 237,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 260, 225, 218, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 245, 0,
	300, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 268, 171, 187, 0,
	0, 310, 349, 355, 0, 0, 0, 210, 0, 353,
	324, 408, 194, 235, 346, 329, 351, 0, 0, 352,
	277, 396, 341, 406, 424, 425, 217, 304, 414, 388,
	420, 435, 188, 214, 318, 381, 411, 372, 297, 392,
	393, 267, 371, 243, 174, 275, 432, 186, 361, 202,
	179, 383, 404, 199, 364, 0, 0, 0, 181, 402,
	380, 294, 264, 265, 180, 0, 345, 221, 241, 212,
	313, 399, 400, 211, 437, 190, 419, 183, 0, 418,
	306, 395, 403, 295, 286, 182, 401, 293, 285, 270,
	231, 251, 339, 280, 340, 252, 302, 301, 303, 0,
	177, 0, 377, 412, 438, 195, 196, 197, 0, 230,
	234, 240, 242, 0, 248, 255, 273, 317, 338, 336,
	342, 0, 390, 407, 415, 422, 428, 429, 433, 430,
	431, 434, 305, 191, 254, 373, 269, 278, 0, 0,
	323, 354, 200, 410, 374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 184, 274, 0, 343,
	238, 436, 417, 413, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 228, 236, 246, 250, 253,
	257, 258, 261, 266, 283, 288, 289, 290, 291, 307,
	308, 309, 312, 315, 316, 319, 321, 322, 325, 331,
	332, 333, 334, 335, 337, 344, 348, 356, 357, 358,
	359, 360, 362, 363, 367, 368, 369, 370, 378, 382,
	397, 398, 409, 421, 426, 247, 405, 427, 0, 282,
	0, 0, 284, 232, 249, 259, 0, 416, 379, 189,
	350, 239, 178, 206, 192, 213, 227, 229, 263, 292,
	298, 327, 330, 244, 224, 204, 347, 201, 365, 385,
	386, 387, 389, 296, 220, 314, 0, 1225, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 328, 0, 176, 0, 366, 209,
	281, 279, 394, 233, 226, 222, 208, 256, 287, 326,
	384, 320, 0, 276, 0, 0, 375, 299, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 207, 175, 311, 376, 237, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 260, 225, 218, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 245, 0, 300,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 268, 171, 187, 0, 0,
	310, 349, 355, 0, 0, 0, 210, 0, 353, 324,
	408, 194, 235, 346, 329, 351, 0, 0, 352, 277,
	396, 341, 406, 424, 425, 217, 304, 414, 388, 420,
	435, 188, 214, 318, 381, 411, 372, 297, 392, 393,
	267, 371, 243, 174, 275, 432, 186, 361, 202, 179,
	383, 404, 199, 364, 0, 0, 0, 181, 402, 380,
	294, 264, 265, 180, 0, 345, 221, 241, 212, 313,
	399, 400, 211, 437, 190, 419, 183, 0, 418, 306,
	395, 403, 295, 286, 182, 401, 293, 285, 270, 231,
	251, 339, 280, 340, 252, 302, 301, 303, 0, 177,
	0, 377, 412, 438, 195, 196, 197, 0, 230, 234,
	240, 242, 0, 248, 255, 273, 317, 338, 336, 342,
	0, 390, 407, 415, 422, 428, 429, 433, 430, 431,
	434, 305, 191, 254, 373, 269, 278, 0, 0, 323,
	354, 200, 410, 374, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 274, 0, 343, 238,
	436, 417, 413, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 228, 236, 246, 250, 253, 257,
	258, 261, 266, 283, 288, 289, 290, 291, 307, 308,
	309, 312, 315, 316, 319, 321, 322, 325, 331, 332,
	333, 334, 335, 337, 344, 348, 356, 357, 358, 359,
	360, 362, 363, 367, 368, 369, 370, 378, 382, 397,
	398, 409, 421, 426, 247, 405, 427, 0, 282, 0,
	0, 284, 232, 249, 259, 0, 416, 379, 189, 350,
	239, 178, 206, 192, 213, 227, 229, 263, 292, 298,
	327, 330, 244, 224, 204, 347, 201, 365, 385, 386,
	387, 389, 296, 220, 314, 0, 1223, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 1221, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 1219, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 1215, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	247, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 1213, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 1211, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 223, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 328, 0, 176,
	0, 366, 209, 281, 279, 394, 233, 226, 222, 208,
	256, 287, 326, 384, 320, 0, 276, 0, 0, 375,
	299, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 207, 175, 311,
	376, 237, 1186, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 260, 225, 218, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	245, 0, 300, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 268, 171,
	187, 0, 0, 310, 349, 355, 0, 0, 0, 210,
	0, 353, 324, 408, 194, 235, 346, 329, 351, 0,
	0, 352, 277, 396, 341, 406, 424, 425, 217, 304,
	414, 388, 420, 435, 188, 214, 318, 381, 411, 372,
	297, 392, 393, 267, 371, 243, 174, 275, 432, 186,
	361, 202, 179, 383, 404, 199, 364, 0, 0, 0,
	181, 402, 380, 294, 264, 265, 180, 0, 345, 221,
	241, 212, 313, 399, 400, 211, 437, 190, 419, 183,
	0, 418, 306, 395, 403, 295, 286, 182, 401, 293,
	285, 270, 231, 251, 339, 280, 340, 252, 302, 301,
	303, 0, 177, 0, 377, 412, 438, 195, 196, 197,
	0, 230, 234, 240, 242, 0, 248, 255, 273, 317,
	338, 336, 342, 0, 390, 407, 415, 422, 428, 429,
	433, 430, 431, 434, 305, 191, 254, 373, 269, 278,
	0, 0, 323, 354, 200, 410, 374, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 274,
	0, 343, 238, 436, 417, 413, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 228, 236, 246,
	250, 253, 257, 258, 261, 266, 283, 288, 289, 290,
	291, 307, 308, 309, 312, 315, 316, 319, 321, 322,
	325, 331, 332, 333, 334, 335, 337, 344, 348, 356,
	357, 358, 359, 360, 362, 363, 367, 368, 369, 370,
	378, 382, 397, 398, 409, 421, 426, 247, 405, 427,
	0, 282, 0, 0, 284, 232, 249, 259, 0, 416,
	379, 189, 350, 239, 178, 206, 192, 213, 227, 229,
	263, 292, 298, 327, 330, 244, 224, 204, 347, 201,
	365, 385, 386, 387, 389, 296, 220, 1087, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 328, 0, 176, 0, 366, 209, 281,
	279, 394, 233, 226, 222, 208, 256, 287, 326, 384,
	320, 0, 276, 0, 0, 375, 299, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 207, 175, 311, 376, 237, 0, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	260, 225, 218, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 245, 0, 300, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 268, 171, 187, 0, 0, 310,
	349, 355, 0, 0, 0, 210, 0, 353, 324, 408,
	194, 235, 346, 329, 351, 0, 0, 352, 277, 396,
	341, 406, 424, 425, 217, 304, 414, 388, 420, 435,
	188, 214, 318, 381, 411, 372, 297, 392, 393, 267,
	371, 243, 174, 275, 432, 186, 361, 202, 179, 383,
	404, 199, 364, 0, 0, 0, 181, 402, 380, 294,
	264, 265, 180, 0, 345, 221, 241, 212, 313, 399,
	400, 211, 437, 190, 419, 183, 0, 418, 306, 395,
	403, 295, 286, 182, 401, 293, 285, 270, 231, 251,
	339, 280, 340, 252, 302, 301, 303, 0, 177, 0,
	377, 412, 438, 195, 196, 197, 0, 230, 234, 240,
	242, 0, 248, 255, 273, 317, 338, 336, 342, 0,
	390, 407, 415, 422, 428, 429, 433, 430, 431, 434,
	305, 191, 254, 373, 269, 278, 0, 0, 323, 354,
	200, 410, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 274, 0, 343, 238, 436,
	417, 413, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 228, 236, 246, 250, 253, 257, 258,
	261, 266, 283, 288, 289, 290, 291, 307, 308, 309,
	312, 315, 316, 319, 321, 322, 325, 331, 332, 333,
	334, 335, 337, 344, 348, 356, 357, 358, 359, 360,
	362, 363, 367, 368, 369, 370, 378, 382, 397, 398,
	409, 421, 426, 247, 405, 427, 0, 282, 0, 0,
	284, 232, 249, 259, 0, 416, 379, 189, 350, 239,
	178, 206, 192, 213, 227, 229, 263, 292, 298, 327,
	330, 244, 224, 204, 347, 201, 365, 385, 386, 387,
	389, 296, 220, 314, 0, 0, 0, 0, 0, 0,
	0, 1078, 223, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 328, 0, 176, 0, 366, 209, 281, 279,
	394, 233, 226, 222, 208, 256, 287, 326, 384, 320,
	0, 276, 0, 0, 375, 299, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 207, 175, 311, 376, 237, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 260,
	225, 218, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 245, 0, 300, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 268, 171, 187, 0, 0, 310, 349,
	355, 0, 0, 0, 210, 0, 353, 324, 408, 194,
	235, 346, 329, 351, 0, 0, 352, 277, 396, 341,
	406, 424, 425, 217, 304, 414, 388, 420, 435, 188,
	214, 318, 381, 411, 372, 297, 392, 393, 267, 371,
	243, 174, 275, 432, 186, 361, 202, 179, 383, 404,
	199, 364, 0, 0, 0, 181, 402, 380, 294, 264,
	265, 180, 0, 345, 221, 241, 212, 313, 399, 400,
	211, 437, 190, 419, 183, 0, 418, 306, 395, 403,
	295, 286, 182, 401, 293, 285, 270, 231, 251, 339,
	280, 340, 252, 302, 301, 303, 0, 177, 0, 377,
	412, 438, 195, 196, 197, 0, 230, 234, 240, 242,
	0, 248, 255, 273, 317, 338, 336, 342, 0, 390,
	407, 415, 422, 428, 429, 433, 430, 431, 434, 305,
	191, 254, 373, 269, 278, 0, 0, 323, 354, 200,
	410, 374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 274, 0, 343, 238, 436, 417,
	413, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 228, 236, 246, 250, 253, 257, 258, 261,
	266, 283, 288, 289, 290, 291, 307, 308, 309, 312,
	315, 316, 319, 321, 322, 325, 331, 332, 333, 334,
	335, 337, 344, 348, 356, 357, 358, 359, 360, 362,
	363, 367, 368, 369, 370, 378, 382, 397, 398, 409,
	421, 426, 247, 405, 427, 0, 282, 0, 0, 284,
	232, 249, 259, 0, 416, 379, 189, 350, 239, 178,
	206, 192, 213, 227, 229, 263, 292, 298, 327, 330,
	244, 224, 204, 347, 201, 365, 385, 386, 387, 389,
	296, 220, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 328, 0, 176, 0, 366, 209, 281, 279, 394,
	233, 226, 222, 208, 256, 287, 326, 384, 320, 0,
	276, 0, 0, 375, 299, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 207, 175, 311, 376, 237, 0, 0, 0, 167,
	168, 169, 0, 934, 0, 0, 0, 0, 0, 0,
	198, 0, 205, 0, 0, 0, 0, 219, 260, 225,
	218, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 245, 0, 300, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 268, 171, 187, 0, 0, 310, 349, 355,
	0, 0, 0, 210, 0, 353, 324, 408, 194, 235,
	346, 329, 351, 0, 0, 352, 277, 396, 341, 406,
	424, 425, 217, 304, 414, 388, 420, 435, 188, 214,
	318, 381, 411, 372, 297, 392, 393, 267, 371, 243,
	174, 275, 432, 186, 361, 202, 179, 383, 404, 199,
	364, 0, 0, 0, 181, 402, 380, 294, 264, 265,
	180, 0, 345, 221, 241, 212, 313, 399, 400, 211,
	437, 190, 419, 183, 0, 418, 306, 395, 403, 295,
	286, 182, 401, 293, 285, 270, 231, 251, 339, 280,
	340, 252, 302, 301, 303, 0, 177, 0, 377, 412,
	438, 195, 196, 197, 0, 230, 234, 240, 242, 0,
	248, 255, 273, 317, 338, 336, 342, 0, 390, 407,
	415, 422, 428, 429, 433, 430, 431, 434, 305, 191,
	254, 373, 269, 278, 0, 0, 323, 354, 200, 410,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 274, 0, 343, 238, 436, 417, 413,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 228, 236, 246, 250, 253, 257, 258, 261, 266,
	283, 288, 289, 290, 291, 307, 308, 309, 312, 315,
	316, 319, 321, 322, 325, 331, 332, 333, 334, 335,
	337, 344, 348, 356, 357, 358, 359, 360, 362, 363,
	367, 368, 369, 370, 378, 382, 397, 398, 409, 421,
	426, 247, 405, 427, 0, 282, 0, 0, 284, 232,
	249, 259, 0, 416, 379, 189, 350, 239, 178, 206,
	192, 213, 227, 229, 263, 292, 298, 327, 330, 244,
	224, 204, 347, 201, 365, 385, 386, 387, 389, 296,
	220, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	328, 0, 176, 0, 366, 209, 281, 279, 394, 233,
	226, 222, 208, 256, 287, 326, 384, 320, 0, 276,
	0, 0, 375, 299, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	207, 175, 311, 376, 237, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 260, 225, 218,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 245, 0, 300, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	0, 268, 171, 187, 0, 0, 310, 349, 355, 0,
	0, 0, 210, 0, 353, 324, 408, 194, 235, 346,
	329, 351, 0, 0, 352, 277, 396, 341, 406, 424,
	425, 217, 304, 414, 388, 420, 435, 188, 214, 318,
	381, 411, 372, 297, 392, 393, 267, 371, 243, 174,
	275, 432, 186, 361, 202, 179, 383, 404, 199, 364,
	0, 0, 0, 181, 402, 380, 294, 264, 265, 180,
	0, 345, 221, 241, 212, 313, 399, 400, 211, 437,
	190, 419, 183, 0, 418, 306, 395, 403, 295, 286,
	182, 401, 293, 285, 270, 231, 251, 339, 280, 340,
	252, 302, 301, 303, 0, 177, 0, 377, 412, 438,
	195, 196, 197, 0, 230, 234, 240, 242, 0, 248,
	255, 273, 317, 338, 336, 342, 0, 390, 407, 415,
	422, 428, 429, 433, 430, 431, 434, 305, 191, 254,
	373, 269, 278, 0, 0, 323, 354, 200, 410, 374,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	170, 184, 274, 0, 343, 238, 436, 417, 413, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	228, 236, 246, 250, 253, 257, 258, 261, 266, 283,
	288, 289, 290, 291, 307, 308, 309, 312, 315, 316,
	319, 321, 322, 325, 331, 332, 333, 334, 335, 337,
	344, 348, 356, 357, 358, 359, 360, 362, 363, 367,
	368, 369, 370, 378, 382, 397, 398, 409, 421, 426,
	491, 405, 427, 0, 282, 0, 0, 284, 232, 249,
	259, 0, 416, 379, 189, 350, 239, 178, 206, 192,
	213, 227, 229, 263, 292, 298, 327, 330, 244, 224,
	204, 347, 201, 365, 385, 386, 387, 389, 296, 220,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 328,
	0, 176, 0, 366, 209, 281, 279, 394, 233, 226,
	222, 208, 256, 287, 326, 384, 320, 0, 276, 0,
	0, 375, 299, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 207,
	175, 311, 376, 237, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 260, 225, 218, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 245, 0, 300, 0, 0, 441, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	268, 171, 187, 0, 0, 310, 349, 355, 0, 0,
	0, 210, 0, 353, 324, 408, 194, 235, 346, 329,
	351, 0, 0, 352, 277, 396, 341, 406, 424, 425,
	217, 304, 414, 388, 420, 435, 188, 214, 318, 381,
	411, 372, 297, 392, 393, 267, 371, 243, 174, 275,
	432, 186, 361, 202, 179, 383, 404, 199, 364, 0,
	0, 0, 181, 402, 380, 294, 264, 265, 180, 0,
	345, 221, 241, 212, 313, 399, 400, 211, 437, 190,
	419, 183, 0, 418, 306, 395, 403, 295, 286, 182,
	401, 293, 285, 270, 231, 251, 339, 280, 340, 252,
	302, 301, 303, 0, 177, 0, 377, 412, 438, 195,
	196, 197, 0, 230, 234, 240, 242, 0, 248, 255,
	273, 317, 338, 336, 342, 0, 390, 407, 415, 422,
	428, 429, 433, 430, 431, 434, 305, 191, 254, 373,
	269, 278, 0, 0, 323, 354, 200, 410, 374, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 274, 0, 343, 238, 436, 417, 413, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 228,
	236, 246, 250, 253, 257, 258, 261, 266, 283, 288,
	289, 290, 291, 307, 308, 309, 312, 315, 316, 319,
	321, 322, 325, 331, 332, 333, 334, 335, 337, 344,
	348, 356, 357, 358, 359, 360, 362, 363, 367, 368,
	369, 370, 378, 382, 397, 398, 409, 421, 426, 247,
	405, 427, 0, 282, 0, 0, 284, 232, 249, 259,
	0, 416, 379, 189, 350, 239, 178, 206, 192, 213,
	227, 229, 263, 292, 298, 327, 330, 244, 224, 204,
	347, 201, 365, 385, 386, 387, 389, 296, 220, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 223, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 328, 0,
	176, 0, 366, 209, 281, 279, 394, 233, 226, 222,
	208, 256, 287, 326, 384, 320, 0, 276, 0, 0,
	375, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 207, 175,
	311, 376, 237, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 260, 225, 218, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 245, 0, 300, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 268,
	171, 187, 0, 0, 310, 349, 355, 0, 0, 0,
	210, 0, 353, 324, 408, 194, 235, 346, 329, 351,
	0, 0, 352, 277, 396, 341, 406, 424, 425, 217,
	304, 414, 388, 420, 435, 188, 214, 318, 381, 411,
	372, 297, 392, 393, 267, 371, 243, 174, 275, 432,
	186, 361, 202, 179, 383, 404, 199, 364, 0, 0,
	0, 181, 402, 380, 294, 264, 265, 180, 0, 345,
	221, 241, 212, 313, 399, 400, 211, 437, 190, 419,
	183, 0, 418, 306, 395, 403, 295, 286, 182, 401,
	293, 285, 270, 231, 251, 339, 280, 340, 252, 302,
	301, 303, 0, 177, 0, 377, 412, 438, 195, 196,
	197, 0, 230, 234, 240, 242, 0, 248, 255, 273,
	317, 338, 336, 342, 0, 390, 407, 415, 422, 428,
	429, 433, 430, 431, 434, 305, 191, 254, 373, 269,
	278, 0, 0, 323, 354, 200, 410, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	274, 0, 343, 238, 436, 417, 413, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 228, 236,
	246, 250, 253, 257, 258, 261, 266, 283, 288, 289,
	290, 291, 307, 308, 309, 312, 315, 316, 319, 321,
	322, 325, 331, 332, 333, 334, 335, 337, 344, 348,
	356, 357, 358, 359, 360, 362, 363, 367, 368, 369,
	370, 378, 382, 397, 398, 409, 421, 426, 247, 405,
	427, 0, 282, 0, 0, 284, 232, 249, 259, 0,
	416, 379, 189, 350, 239, 178, 206, 192, 213, 227,
	229, 263, 292, 298, 327, 330, 244, 224, 204, 347,
	201, 365, 385, 386, 387, 389, 296, 220,
}

var yyPact = [...]int{
	4549, -1000, -346, 1590, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1549, 1219, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 612, 1261, -1000, 1459, 241, -1000, 27890, 404,
	-1000, 27431, 403, 2683, 27890, -1000, 102, -1000, 90, 27890,
	101, 26972, -1000, -1000, -286, 12710, 1419, -6, -8, 27890,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1240,
	1521, 1527, 1546, 1066, 1472, -1000, 10861, 10861, 330, 330,
	330, 9025, -1000, -1000, 16854, 27890, 27890, 189, -1000, 1459,
	-1000, -1000, 151, -1000, 247, 1193, -1000, 1188, -1000, 463,
	543, 243, 321, 319, 231, 230, 229, 224, 223, 222,
	221, 220, 250, -1000, 540, 540, -175, -180, 2059, 305,
	305, 305, 361, 1434, 1433, -1000, 502, -1000, 540, 540,
	149, 540, 540, 540, 540, 181, 176, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 177, 1459, 161, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27890,
	135, 27890, -1000, 469, 27890, 623, 623, 26, 623, 623,
	623, 623, 99, 444, -10, -1000, 96, 166, 94, 154,
	622, 84, 58, -1000, -1000, 157, 622, 78, -1000, 623,
	7133, 7133, 7133, -1000, 1443, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 360, -1000, -1000, -1000, -1000, 27890, 26513,
	226, 605, -1000, -1000, -1000, 8, -1000, -1000, 1122, 556,
	-1000, 12710, 2147, 1210, 1210, -1000, -1000, 433, -1000, -1000,
	14087, 14087, 14087, 14087, 14087, 14087, 14087, 14087, 14087, 14087,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1210, 466, -1000, 12251, 1210, 1210,
	1210, 1210, 1210, 1210, 1210, 1210, 12710, 1210, 1210, 1210,
	1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210, 1210,
	1210, 1210, 1210, 1210, -1000, -1000, -1000, 27890, -1000, 1210,
	112, 1549, -1000, 1219, -1000, -1000, -1000, 1450, 12710, 12710,
	1549, -1000, 1363, 10861, -1000, -1000, 1393, -1000, -1000, -1000,
	-1000, -1000, 710, 1575, -1000, 15464, 461, 1574, 26054, -1000,
	19621, 25595, 1179, 8552, -49, -1000, -1000, -1000, 598, 18703,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1443, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1092, 27890, -1000, -1000, 4016, 936, -1000,
	1260, -1000, 1088, -1000, 1226, 1269, 400, 936, 395, 394,
	391, -1000, -110, -1000, -1000, -1000, -1000, -1000, 540, 540,
	249, 241, 4144, -1000, -1000, -1000, 25129, 1259, 936, -1000,
	1258, -1000, 1484, 313, 506, 506, 936, -1000, -1000, 27890,
	936, 1482, 1481, 27890, 27890, -1000, 24670, -1000, 24211, 23752,
	870, 27890, 23293, 22834, 22375, 21916, 21457, -1000, 1317, -1000,
	1246, -1000, -1000, -1000, 27890, 27890, 27890, 20, -1000, -1000,
	27890, 936, -1000, -1000, 863, 862, 540, 540, 851, 972,
	963, 961, 540, 540, 850, 957, 931, 148, 840, 837,
	835, 848, 935, 107, 799, 778, 809, 27890, 1257, 27890,
	-1000, 153, 534, 244, 591, 1459, 1415, 1176, 358, 399,
	936, 312, 312, -1000, 7606, -1000, -1000, 930, 12710, -1000,
	670, 622, 622, -1000, -1000, -1000, -1000, -1000, -1000, 623,
	27890, 670, -1000, -1000, -1000, 622, 623, 27890, 623, 623,
	623, 623, 622, 622, 622, 623, 27890, 27890, 27890, 27890,
	27890, 27890, 27890, 27890, 27890, 7133, 7133, 7133, 504, 623,
	-1000, 1300, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	97, -1000, -1000, -1000, -1000, -1000, 1590, -1000, -1000, -1000,
	-115, 1159, 20998, -1000, -290, -292, -293, -294, -1000, -1000,
	-1000, -295, -296, -1000, -1000, -1000, 12710, 12710, 12710, 12710,
	844, 520, 14087, 716, 528, 14087, 14087, 14087, 14087, 14087,
	14087, 14087, 14087, 14087, 14087, 14087, 14087, 14087, 14087, 14087,
	634, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 936,
	-1000, 1588, 908, 908, 481, 481, 481, 481, 481, 481,
	481, 481, 481, 14546, 9484, 7606, 1066, 1059, 1549, 10861,
	10861, 12710, 12710, 11779, 11320, 10861, 1444, 603, 556, 27890,
	-1000, 991, -1000, -1000, 13628, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 27890, 27890, 10861,
	10861, 10861, 10861, 10861, -1000, 1158, -1000, -174, 16395, 12710,
	920, 1527, 1066, 1393, 1495, 1581, 514, 1027, 1157, -1000,
	859, 1527, 18244, 1191, -1000, 1393, -1000, -1000, -1000, 27890,
	-1000, -1000, 20539, -1000, -1000, 6660, 27890, 219, 27890, -1000,
	1190, 1378, -1000, -1000, -1000, 1504, 17785, 27890, 1136, 1077,
	-1000, -1000, 455, 8079, -49, -1000, 8079, 1140, -1000, -55,
	-65, 9943, 480, -1000, -1000, -1000, 2059, 15005, 1100, -1000,
	19, -1000, -1000, -1000, 1226, -1000, 1226, 1226, 1226, 1226,
	20, 20, 20, 20, -1000, -1000, -1000, -1000, -1000, 1256,
	1251, -1000, 1226, 1226, 1226, 1226, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1250, 1250, 1250, 1241, 1241, 299, -1000,
	12710, 137, 27890, 1494, 804, 153, 325, 1281, 936, 936,
	936, 325, -1000, 925, 897, -1000, 1156, -1000, -1000, 1541,
	-1000, -1000, 587, 663, 648, 599, 27890, 127, 214, -1000,
	292, -1000, 27890, 936, 1479, 506, 936, -1000, 936, -1000,
	-1000, -1000, -1000, 454, -1000, -1000, 936, 1154, -1000, 1151,
	680, 645, 673, 635, 1154, -1000, -1000, -135, 1154, -1000,
	1154, -1000, 1154, -1000, 1154, -1000, 1154, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 551, 27890, 127, 634, -1000,
	335, -1000, -1000, 634, 634, -1000, -1000, -1000, -1000, 917,
	915, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -339, 27890, -1000,
	144, 552, 188, 262, 194, 27890, 120, 1508, 186, 171,
	27890, 27890, 312, 1297, 27890, 1499, 27890, -1000, -1000, -1000,
	-1000, 556, 27890, -1000, -1000, 623, 623, -1000, -1000, 27890,
	623, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 623,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 913, -1000, 27890, 27890, -1000, -1000,
	-1000, -1000, -1000, 66, -41, 199, -1000, -1000, -1000, -1000,
	1513, -1000, 556, 520, 582, 656, -1000, -1000, 772, -1000,
	-1000, 2481, -1000, -1000, -1000, -1000, 716, 14087, 14087, 14087,
	1116, 2481, 2365, 895, 701, 481, 653, 653, 510, 510,
	510, 510, 510, 919, 919, -1000, -1000, -1000, -1000, 991,
	-1000, -1000, -1000, 991, 10861, 10861, 1150, 1210, 442, -1000,
	1240, -1000, -1000, 1527, 1040, 1040, 813, 754, 596, 1572,
	1040, 588, 1567, 1040, 1040, 10861, -1000, -1000, 658, -1000,
	12710, 991, -1000, 1180, 1148, 1142, 1040, 991, 991, 1040,
	1040, 27890, -1000, -282, -1000, -89, 420, 1210, -1000, 20080,
	-1000, -1000, 991, 1122, -1000, 1450, -1000, -1000, 1412, -1000,
	1352, 12710, 12710, 12710, -1000, -1000, -1000, 1450, 1519, -1000,
	1379, 1377, 1564, 10861, 19621, 1393, -1000, -1000, -1000, 441,
	1564, 1128, 1210, -1000, 27890, 19621, 19621, 19621, 19621, 19621,
	-1000, 1323, 1319, -1000, 1315, 1309, 1322, 27890, -1000, 1048,
	1066, 17785, 219, 1112, 19621, 27890, -1000, -1000, 19621, 27890,
	6187, -1000, 1140, -49, -39, -1000, -1000, -1000, -1000, 556,
	-1000, 806, -1000, 274, -1000, 298, -1000, -1000, -1000, -1000,
	387, 14, -1000, -1000, 20, 20, -1000, -1000, 480, 734,
	480, 480, 480, 905, 905, -1000, -1000, -1000, -1000, -1000,
	797, -1000, -1000, -1000, 795, -1000, -1000, 675, 1313, 137,
	-1000, -1000, 540, 904, 1426, 27890, -1000, -1000, 1075, 144,
	27890, 616, 1295, -1000, 1281, 1281, 1281, 27890, -1000, -1000,
	-1000, -1000, 3740, 27890, 1046, -1000, 117, 27890, 1070, 27890,
	-1000, 1044, 1248, -1000, 936, -1000, -1000, 7606, -1000, 27890,
	1210, -1000, -1000, -1000, -1000, 388, 1456, 1445, 127, 117,
	480, 936, -1000, -1000, -1000, -1000, -1000, -342, 1042, 366,
	134, 163, 27890, 27890, 27890, 27890, 27890, 457, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 165, 332, -1000, 27890, 27890,
	398, -1000, -1000, -1000, 622, -1000, -1000, 622, -1000, -1000,
	-1000, -1000, -1000, -1000, 1440, -46, -313, -1000, -310, -1000,
	-1000, -1000, -1000, 1116, 2481, 2294, -1000, 14087, 14087, -1000,
	-1000, 1040, 1040, 10861, 7606, 1549, 1450, -1000, -1000, 377,
	634, 377, 14087, 14087, -1000, 14087, 14087, -1000, -124, 1152,
	535, -1000, 12710, 740, -1000, -1000, 14087, 14087, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 389, 386, 384,
	27890, -1000, -1000, -1000, 811, 901, 1350, 556, 556, -1000,
	-1000, 27890, -1000, -1000, -1000, -1000, 1559, 12710, -1000, 1138,
	-1000, 5714, 1527, 1293, 27890, 1210, 1590, 15936, 27890, 1139,
	-1000, 548, 1378, 1279, 1292, 1351, -1000, -1000, -1000, -1000,
	1316, -1000, 1168, -1000, -1000, -1000, -1000, -1000, 1066, 1564,
	19621, 1134, -1000, 1134, -1000, 436, -1000, -1000, -1000, -66,
	-87, -1000, -1000, -1000, 2059, -1000, -1000, -1000, 679, 14087,
	1503, 1579, -1000, 898, 1477, -1000, 1473, 1423, -1000, -1000,
	480, 480, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1037,
	-1000, 1035, 1133, 1030, 51, -1000, 1267, 1439, 540, 540,
	-1000, 761, -1000, 936, -1000, -1000, 365, -1000, 1497, 27890,
	1291, 1287, 1285, -1000, 1540, 1131, -1000, 27890, -1000, -1000,
	27890, -1000, -1000, 1375, 137, 27890, -1000, -1000, -1000, 214,
	27890, -1000, 908, 117, -1000, -1000, -1000, -1000, -1000, -1000,
	27890, 139, -1000, 1247, 979, -1000, 1273, -1000, -1000, -1000,
	-1000, 105, 187, -1000, 27890, 397, 1313, 27890, -1000, -1000,
	-1000, 623, 623, -1000, 1437, -1000, 936, -1000, 14087, 2481,
	2481, -1000, -1000, 991, -1000, 1527, -1000, 991, 1226, 1226,
	-1000, 1226, 1241, -1000, 1226, 76, 1226, 73, 991, 991,
	2310, 2279, 2175, 1886, 1210, -119, -1000, 556, 12710, 1743,
	1268, 1210, 1210, 1210, 1022, 892, 20, -1000, -1000, -1000,
	1554, 1538, 556, -1000, -1000, -1000, 1489, 1117, 1114, -1000,
	-1000, 10402, 1025, 1368, 429, 1022, 1549, 27890, 12710, -1000,
	-1000, 12710, 1225, -1000, 12710, -1000, -1000, -1000, 1549, 1549,
	1134, -1000, -1000, 490, -1000, -1000, -1000, -1000, -1000, 2481,
	14087, -69, -1000, -1000, -1000, -1000, -1000, -1000, 20, 889,
	20, 757, -1000, 732, -1000, -1000, -218, -1000, -1000, 1149,
	1299, -1000, -1000, 27890, -1000, -1000, 27890, 27890, 27890, 27890,
	27890, -1000, -1000, 190, -1000, 1019, 1011, -1000, -177, -1000,
	-1000, 1222, -1000, -1000, -1000, 1016, -1000, -136, 936, 27890,
	27890, 27890, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2481, -1000, 1450, -1000, -1000, 205, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 14087, 14087, 14087, 14087, 14087, 1527,
	887, 556, 14087, 14087, 19162, 27890, 27890, 17313, 20, 38,
	-1000, 12710, 12710, 1462, -1000, 1210, -1000, 1144, 27890, 1210,
	27890, -1000, 1527, -1000, 556, 556, 27890, 556, 1527, -1000,
	2481, -1000, 480, -1000, 480, 1014, 1008, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1222, -1000, -1000, -1000, 1131,
	-1000, 192, 264, -1000, 214, -1000, -183, -184, 1502, 27890,
	-1000, -1000, 7606, -1000, -1000, 1221, 1275, -1000, -1000, -1000,
	-1000, 1180, 1180, 1180, 1180, 407, 991, -1000, 1180, 1180,
	1001, -1000, 1001, 1001, 420, -277, -1000, 1396, 1382, 556,
	1122, 1578, -1000, 1210, 1590, 419, 1114, -1000, -1000, 998,
	-1000, -1000, -1000, -1000, -1000, 1501, 1210, 27890, -1000, -1000,
	-1000, 1219, 996, 1121, -1000, 539, 27890, 27890, -1000, -1000,
	-1000, -1000, 991, 146, -146, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 38, 268, -1000, 1406, 1382, -1000, 1534, 1400,
	1532, -1000, 27890, 1114, 27890, -1000, 1219, 13169, 1205, 204,
	-1000, 7606, 5241, 990, -1000, -1000, 1330, -133, -151, 1386,
	1388, 1388, 1406, -1000, 1531, 1530, -1000, 886, 1529, 877,
	1111, -1000, 204, 1180, 991, 27890, -1000, -56, -1000, -1000,
	-1000, -1000, -1000, 1273, -1000, 1321, -1000, 1383, 751, -1000,
	-1000, -1000, -1000, 873, 872, -1000, 755, -1000, -1000, -1000,
	-1000, 983, 282, -1000, -1000, -136, -137, -1000, 700, -1000,
	-1000, -1000, -1000, -1000, 1284, 150, -1000, -147, -1000, -1000,
	1283, -1000, 1571, -1000, -167, -1000, 1573, 467, 467, -1000,
	-1000, -1000, -1000, 270, 766, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1819, 1817, 11, 86, 89, 1816, 1815, 1814, 1813,
	131, 129, 128, 1812, 1808, 1806, 1805, 1801, 1800, 1799,
	1798, 1797, 1796, 1795, 1794, 61, 138, 37, 40, 139,
	1792, 1789, 29, 1788, 1786, 1785, 127, 126, 563, 1784,
	123, 1783, 1782, 1781, 1779, 1778, 1771, 1770, 1769, 1768,
	1767, 1766, 1765, 1764, 1763, 203, 1762, 1760, 4, 1759,
	31, 1758, 1757, 1756, 1754, 1753, 90, 1752, 1749, 1747,
	116, 1740, 1739, 51, 102, 50, 80, 1737, 1736, 74,
	121, 1735, 64, 104, 1734, 1733, 323, 1732, 42, 91,
	98, 1731, 44, 1727, 1726, 53, 1725, 1724, 1721, 75,
	1720, 1719, 3101, 1717, 72, 82, 14, 57, 1715, 1711,
	1710, 1708, 33, 2669, 1706, 1703, 24, 1702, 1700, 133,
	1699, 87, 22, 1698, 20, 16, 23, 1697, 84, 1696,
	30, 56, 36, 1695, 85, 1693, 1692, 1691, 1690, 43,
	1689, 78, 105, 38, 1688, 1687, 9, 15, 1686, 1685,
	1684, 1683, 1681, 1680, 10, 1679, 5, 1678, 27, 1677,
	17, 19, 73, 120, 28, 13, 1676, 119, 1675, 26,
	115, 67, 113, 1674, 1672, 1670, 859, 143, 1669, 1668,
	58, 1667, 93, 101, 1666, 162, 1664, 1663, 63, 1301,
	1653, 8, 118, 1662, 1661, 2495, 59, 76, 25, 1660,
	69, 1659, 1658, 1657, 140, 125, 45, 879, 46, 1656,
	1654, 1652, 1649, 1648, 1646, 1645, 47, 34, 21, 112,
	32, 1644, 1643, 1642, 71, 41, 1641, 111, 106, 81,
	110, 1640, 117, 103, 65, 1639, 39, 1638, 1637, 1635,
	1628, 79, 1627, 1626, 1625, 1623, 108, 94, 68, 48,
	1621, 35, 66, 109, 107, 1620, 18, 122, 7, 1619,
	3, 0, 1612, 6, 130, 164, 99, 1611, 1610, 1,
	1609, 2, 1607, 1605, 83, 1604, 1603, 1601, 1600, 3049,
	932, 114, 1599, 124,
}

//line sql.y:5227
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 277, 278, 278, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 261, 261, 261, 264, 264,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 281, 281, 97, 97, 95, 95, 96, 96,
	162, 162, 13, 14, 14, 172, 172, 171, 171, 171,
	173, 173, 173, 173, 207, 207, 15, 15, 15, 15,
	15, 71, 71, 263, 263, 262, 260, 260, 259, 259,
	258, 23, 24, 33, 33, 33, 33, 34, 35, 265,
	265, 237, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 239, 239, 226, 226, 238, 238,
	238, 238, 238, 238, 238, 225, 85, 85, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 145,
	209, 209, 209, 209, 212, 212, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 211, 211, 211, 211, 211,
	213, 213, 213, 213, 213, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 214, 214, 214, 214,
	215, 215, 215, 215, 215, 215, 215, 215, 224, 224,
	216, 216, 219, 219, 220, 220, 220, 221, 221, 222,
	222, 217, 217, 217, 217, 218, 218, 218, 227, 251,
	251, 250, 250, 248, 248, 248, 248, 236, 236, 245,
	245, 245, 245, 245, 235, 235, 231, 231, 231, 232,
	232, 233, 233, 230, 230, 234, 234, 247, 247, 246,
	228, 228, 229, 229, 253, 253, 253, 253, 254, 270,
	271, 269, 269, 269, 269, 269, 60, 60, 60, 184,
	184, 184, 243, 243, 242, 242, 242, 244, 244, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 179, 179,
	179, 268, 268, 268, 268, 268, 268, 267, 267, 267,
	240, 240, 240, 266, 266, 131, 131, 132, 132, 30,
	30, 30, 30, 30, 30, 29, 29, 29, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	31, 31, 26, 26, 26, 26, 26, 26, 26, 26,
	26, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 223, 223, 223, 255, 255, 256, 256, 17,
	22, 22, 18, 18, 18, 18, 19, 19, 41, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 272, 272, 178, 178, 186,
	186, 177, 177, 200, 200, 200, 180, 180, 180, 181,
	181, 276, 276, 276, 43, 43, 45, 45, 46, 47,
	47, 202, 202, 203, 203, 48, 49, 61, 61, 61,
	61, 61, 61, 63, 63, 63, 7, 7, 7, 7,
	57, 57, 57, 6, 6, 44, 44, 51, 273, 273,
	274, 275, 275, 275, 275, 52, 54, 20, 20, 20,
	20, 20, 20, 78, 78, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 72, 72, 72,
	67, 67, 282, 55, 56, 56, 70, 70, 70, 64,
	64, 64, 69, 69, 69, 75, 75, 77, 77, 77,
	77, 77, 79, 79, 79, 79, 79, 79, 79, 74,
	74, 76, 76, 76, 76, 193, 193, 193, 192, 192,
	87, 87, 88, 88, 89, 89, 90, 90, 90, 129,
	105, 105, 161, 161, 160, 160, 163, 163, 91, 91,
	91, 91, 92, 92, 93, 93, 94, 94, 201, 201,
	198, 198, 198, 197, 197, 98, 98, 98, 100, 99,
	99, 99, 99, 101, 101, 103, 103, 102, 102, 104,
	106, 106, 106, 106, 106, 107, 107, 86, 86, 86,
	86, 86, 86, 86, 86, 175, 175, 109, 109, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 120,
	120, 120, 120, 120, 120, 110, 110, 110, 110, 110,
	110, 110, 73, 73, 121, 121, 121, 128, 122, 122,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 117, 117, 117, 117, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 116, 116, 116, 116, 116, 283, 283,
	119, 118, 118, 118, 118, 118, 118, 118, 68, 68,
	68, 68, 68, 206, 206, 206, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 135,
	135, 65, 65, 133, 133, 134, 136, 136, 130, 130,
	130, 112, 112, 112, 112, 112, 112, 112, 112, 114,
	114, 114, 137, 137, 138, 138, 139, 139, 140, 140,
	141, 142, 142, 142, 143, 143, 143, 143, 32, 32,
	32, 32, 32, 27, 27, 27, 27, 28, 28, 28,
	80, 80, 80, 80, 82, 82, 81, 81, 58, 58,
	59, 59, 59, 83, 83, 84, 84, 84, 84, 158,
	158, 158, 144, 144, 144, 144, 150, 150, 150, 146,
	146, 148, 148, 148, 149, 149, 149, 147, 155, 155,
	157, 157, 156, 156, 152, 152, 153, 153, 154, 154,
	154, 151, 151, 111, 111, 111, 111, 111, 159, 159,
	159, 159, 164, 164, 124, 124, 126, 126, 125, 127,
	165, 165, 169, 166, 166, 170, 170, 170, 170, 170,
	167, 167, 168, 168, 194, 194, 194, 174, 174, 185,
	185, 182, 182, 183, 183, 176, 176, 187, 187, 187,
	53, 123, 123, 252, 252, 249, 190, 190, 191, 191,
	195, 195, 199, 199, 196, 196, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 279, 280, 204, 205, 205, 205,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 0, 2,
	3, 3, 4, 4, 2, 3, 3, 2, 3, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 4, 4, 2, 2, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 0,
	1, 0, 2, 2, 2, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 3,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 11, 12, 12, 13, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 1, 3, 2, 1, 2, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 4, 5, 0, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 2, 0,
	1, 5, 1, 3, 7, 1, 3, 3, 1, 2,
	2, 2, 5, 5, 5, 6, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 5,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 4, 4, 2, 11, 3, 6, 8, 6,
	6, 6, 13, 8, 6, 10, 5, 5, 5, 5,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 8, 8, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 2, 1, 3, 1, 1, 1, 3, 3, 3,
	3, 7, 0, 3, 1, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 5, 4, 5, 5, 0, 2, 1, 3, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 3,
	1, 1, 1, 1, 4, 5, 5, 6, 4, 4,
	6, 6, 6, 8, 8, 8, 8, 9, 8, 5,
	4, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 0,
	2, 4, 0, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -277, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -279, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 155, -34, -24, 156, -35, 158,
	157, 194, 159, 187, 73, 233, 234, 236, 237, 238,
	239, -63, 192, 193, 161, 35, 44, 32, 33, 36,
	164, 83, 9, 338, 189, 188, 26, -278, 478, -70,
	5, -139, 16, -3, -55, -282, -55, -55, -55, -55,
	-55, -55, -237, -239, 83, 128, 83, -55, -39, -38,
	-37, -36, -40, 30, -30, -31, -257, -29, -26, 160,
	157, 202, 104, 105, 194, 195, 196, 159, 178, 193,
	197, 192, 211, -25, 79, 32, 351, 354, -244, 156,
	162, 163, 339, 107, 106, 74, 158, -241, 283, 455,
	-40, 457, 97, 99, 456, 43, 167, 458, 459, 460,
	461, 177, 462, 463, 464, 465, 471, 472, 473, 474,
	108, 5, -55, -199, -195, -261, -189, 86, 87, 88,
	348, 180, 382, 383, 227, 79, 40, 283, 455, 233,
	247, 241, 268, 260, 349, 384, 230, 181, 215, 452,
	258, 316, 457, 385, 195, 288, 289, 290, 97, 236,
	325, 470, 232, 386, 468, 99, 456, 78, 50, 43,
	190, 256, 252, 458, 216, 387, 359, 209, 107, 104,
	477, 250, 49, 28, 467, 106, 48, 459, 388, 460,
	292, 273, 446, 47, 293, 196, 389, 82, 353, 454,
	294, 251, 295, 226, 466, 161, 390, 438, 297, 447,
	391, 274, 278, 392, 317, 298, 51, 393, 394, 448,
	105, 395, 77, 461, 245, 246, 396, 224, 179, 319,
	272, 177, 34, 299, 350, 228, 57, 203, 320, 45,
	276, 44, 442, 397, 445, 271, 267, 52, 398, 399,
	400, 401, 462, 270, 244, 266, 476, 221, 463, 61,
	163, 280, 279, 281, 210, 315, 263, 402, 403, 404,
	184, 80, 405, 253, 19, 406, 407, 300, 217, 408,
	55, 409, 410, 323, 193, 411, 53, 464, 38, 198,
	465, 412, 413, 414, 415, 416, 302, 417, 301, 275,
	277, 205, 303, 352, 418, 249, 197, 469, 419, 185,
	453, 199, 202, 192, 324, 186, 420, 421, 422, 423,
	424, 231, 425, 426, 237, 471, 42, 427, 428, 429,
	430, 225, 220, 318, 327, 60, 81, 285, 431, 451,
	243, 218, 432, 234, 54, 472, 473, 474, 212, 475,
	305, 108, 222, 223, 46, 264, 204, 433, 434, 254,
	255, 269, 242, 265, 235, 439, 206, 306, 194, 435,
	326, 219, 286, 356, 211, 307, 450, 355, 262, 259,
	213, 436, 308, 168, 207, 208, 437, 440, 309, 310,
	312, 313, 229, 311, 314, 214, 354, 257, 287, 166,
	-55, 166, -102, -195, 166, -167, 289, -186, 291, 304,
	299, 309, 297, -178, 300, 302, 205, -276, 317, 166,
	306, 155, 146, 292, 301, 310, 311, 314, 214, -272,
	-261, 460, 475, 316, 261, 296, 294, 318, 442, 313,
	312, -195, 235, -202, 240, -190, -261, -189, 238, -102,
	-61, 438, 159, -204, -204, -72, 442, 444, -122, -86,
	-108, 112, -113, 30, 24, -112, -109, -130, -127, -128,
	146, 147, 149, 148, 150, 135, 136, 143, 113, 151,
	-117, -115, -116, -118, 90, 89, 98, 91, 92, 93,
	94, 100, 101, 102, -190, -195, -125, -279, 67, 68,
	339, 340, 341, 342, 347, 343, 115, 56, 334, 328,
	337, 336, 335, 332, 333, 330, 331, 345, 346, 171,
	329, 165, 141, 338, -261, -189, 43, 305, 305, -102,
	-55, -5, -4, -279, 6, 21, 22, -143, 18, 17,
	-280, 85, -64, -77, 62, 63, -79, 22, 37, 66,
	64, 21, -56, -76, 137, -86, -195, -76, -176, 170,
	-176, -176, -166, -207, 235, -170, 318, 317, -191, -168,
	-190, -188, -167, 315, 160, 357, 111, 23, 25, 114,
	146, 17, 115, 36, 162, 261, 178, 145, 174, 339,
	155, 71, 358, 330, 331, 328, 334, 341, 342, 329,
	291, 30, 11, 360, 26, 188, 22, 37, 139, 157,
	118, 119, 191, 24, 189, 102, 363, 20, 74, 183,
	12, 176, 39, 14, 364, 365, 15, 171, 170, 130,
	167, 69, 9, 151, 27, 127, 65, 366, 29, 367,
	368, 369, 370, 67, 128, 18, 332, 333, 32, 443,
	371, 347, 200, 141, 72, 58, 444, 112, 372, 373,
	100, 374, 103, 75, 449, 109, 16, 70, 41, 375,
	201, 376, 173, 377, 321, 378, 129, 158, 338, 68,
	379, 165, 304, 6, 344, 31, 187, 175, 66, 380,
	166, 117, 345, 346, 169, 101, 5, 172, 33, 10,
	73, 76, 335, 336, 337, 56, 351, 116, 13, 381,
	322, 110, 316, -238, 128, -225, -229, -190, 182, -254,
	178, -102, -247, -246, -190, -71, -185, 167, 176, 175,
	172, -265, 109, 222, 329, 165, -36, -37, -167, 145,
	199, 84, 84, -229, -228, -227, -266, 201, 182, -253,
	-245, 174, 183, -235, 175, 176, -230, 167, 29, -266,
	-230, 173, 183, 201, 201, 108, 201, 108, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 198, -236, 120,
	-236, 355, 355, -241, -266, -266, -266, 169, 34, 34,
	-187, -230, 169, 23, -236, -236, -167, 145, -236, -236,
	-236, -236, 209, 209, -236, -236, -236, -236, -236, -236,
	-236, -236, -236, -236, -236, -236, -236, -236, -236, 166,
	-265, -80, 314, 229, 79, -38, 211, -22, -102, -185,
	167, 168, -265, -102, 152, -102, -180, 128, 13, -180,
	-177, 305, 303, 290, 295, -180, -180, -180, -180, 212,
	288, -231, 167, 34, 179, 305, 212, 288, 212, 213,
	212, 213, 298, 308, 212, -200, 12, 130, 329, 293,
	297, 205, 166, 206, 168, 307, -261, 445, 213, -200,
	305, 208, -180, -205, -279, -191, 261, -205, -205, 31,
	169, -190, -57, -190, 90, -7, -3, -11, -10, -12,
	120, -78, 305, -66, 146, 460, 446, 447, 448, 445,
	302, 453, 451, 449, 212, 450, 84, 111, 109, 110,
	127, -86, -110, 130, 112, 128, 129, 114, 132, 131,
	142, 135, 136, 137, 138, 139, 140, 141, 133, 134,
	145, 120, 121, 122, 123, 124, 125, 126, -175, -279,
	-128, -279, 153, 154, -113, -113, -113, -113, -113, -113,
	-113, -113, -113, -113, -279, 152, -2, -122, -4, -279,
	-279, -279, -279, -279, -279, -279, -279, -135, -86, -279,
	-283, -279, -283, -119, -279, -283, -119, -283, -119, -283,
	-283, -119, -283, -119, -283, -283, -119, -279, -279, -279,
	-279, -279, -279, -279, -204, -273, -274, -105, -102, -279,
	229, -139, -3, -55, -158, 20, 32, -86, -140, -141,
	-86, -139, 58, -74, -76, -79, 62, 63, 96, 12,
	-193, -192, 23, -190, 90, 152, 12, -103, 27, -102,
	-88, -89, -90, -91, -105, -129, -279, 12, -95, -96,
	-102, -104, -195, 84, 235, -170, -207, -172, -171, 319,
	321, 120, -194, -190, 90, 30, 85, 84, -102, -209,
	-212, -214, -213, -215, -210, -211, 258, 259, 146, 262,
	264, 265, 266, 267, 268, 269, 270, 271, 272, 273,
	31, 190, 254, 255, 256, 257, 274, 275, 276, 277,
	278, 279, 280, 281, 241, 260, 349, 242, 243, 244,
	245, 246, 247, 249, 250, 251, 252, 253, -264, -261,
	83, 85, 84, -216, 83, -80, 166, -261, 167, 167,
	167, -55, 338, -236, -236, 198, -29, -26, -257, 16,
	-25, -26, 160, 104, 105, 157, 83, -225, 83, -234,
	-264, -261, 83, 29, 173, 172, -233, -230, -233, -234,
	-261, -130, -190, -195, -261, 29, 29, -163, -190, -163,
	-163, 21, -163, 21, -163, 21, 91, -190, -163, 21,
	-163, 21, -163, 21, -163, 21, -163, 21, 30, 77,
	78, 30, 80, 81, 82, -130, -130, -225, -167, -102,
	-261, 91, 91, -236, -236, 91, 90, 90, 90, -236,
	-236, 91, 90, -261, 90, -267, 184, 226, 228, 91,
	91, 91, 91, 30, 90, -268, 30, 467, 466, 468,
	469, 470, 91, 30, 91, 30, 91, -190, 83, -102,
	-83, 216, 155, 157, 160, 75, 90, 230, 120, 43,
	84, 169, 166, -261, -182, 171, -182, -196, -195, -188,
	90, -86, -232, 12, 130, -200, -200, -180, -102, -232,
	-200, -180, -102, -180, -180, -180, -180, -200, -200, -200,
	-180, -195, -195, -102, -102, -102, -102, -102, -102, -102,
	-205, -205, -205, -181, 128, -180, 75, -203, 238, 272,
	439, 440, 441, 84, 351, -95, 445, 445, 445, 445,
	445, 445, -86, -86, -86, -86, -120, 100, 112, 101,
	102, -113, -121, -125, -128, 95, 130, 128, 129, 114,
	-113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
	-113, -113, -113, -113, -113, -206, -261, 90, 146, -261,
	-112, -112, -190, -75, 22, 37, -74, -191, -196, -188,
	-70, -280, -280, -139, -74, -74, -86, -86, -130, 90,
	-74, -130, 90, -74, -74, -69, 22, 37, -133, -134,
	116, -130, -280, -113, -190, -190, -74, -75, -75, -74,
	-74, 84, -275, 321, 322, 443, -198, 201, -197, 23,
	-195, 90, -123, -122, 90, -143, -280, -144, 27, 10,
	130, 84, 19, 84, -142, 25, 26, -143, -114, -190,
	91, 94, -87, 84, 12, -79, -102, -192, 137, -196,
	-102, -162, 201, -102, 31, 84, -98, -100, -99, -101,
	65, 69, 71, 66, 67, 68, 72, -201, 23, -88,
	-3, -279, -102, -95, -281, 84, 12, 76, -281, 84,
	152, -170, -172, 84, 320, 322, 323, 75, 103, -86,
	-218, 145, -243, -242, -241, -225, -227, -228, -229, 85,
	-145, -221, 286, -216, -216, -216, -216, -216, -217, -167,
	-217, -217, -217, 83, 83, -216, -216, -216, -216, -219,
	83, -219, -219, -220, 83, -220, -254, -86, -251, -250,
	-248, -249, 177, 97, 351, 76, -246, -142, 91, -83,
	-183, 171, -252, -249, -261, -261, -261, -183, -261, 90,
	-261, 90, 84, 17, -226, -225, -131, 226, -256, 201,
	-253, -247, -234, 29, -233, -234, -234, 152, -261, 84,
	27, 108, 108, 108, 108, 351, 157, 31, -225, -131,
	-206, 169, -206, -206, 90, 90, -179, 475, -95, -82,
	218, 120, 207, 207, 166, 166, 220, -102, 231, 232,
	230, 21, 219, 221, 223, 209, -102, -102, -182, 75,
	-97, -102, 24, -195, -102, -180, -180, -102, -180, -180,
	90, -102, -190, -66, 321, 351, 20, -67, 20, 100,
	101, 102, -121, -113, -113, -113, -73, 191, 111, -280,
	-280, -74, -74, -279, 152, -5, -143, -280, -280, 84,
	76, 23, 12, 12, -280, 12, 12, -280, -280, -74,
	-136, -134, 118, -86, -280, -280, 84, 84, -280, -280,
	-280, -280, -280, -274, 442, 322, -106, 73, 170, 74,
	-279, -197, -280, -158, 41, 49, 60, -86, -86, -141,
	-158, -174, 20, 12, 56, 56, -107, 13, -76, -88,
	-79, 152, -107, -111, 31, 56, -3, -279, -279, -165,
	-169, -130, -89, -90, -90, -89, -90, 65, 65, 65,
	70, 65, 70, 65, -99, -195, -280, -280, -3, -162,
	76, -88, -102, -88, -104, -195, 137, -171, -173, 324,
	321, 327, -261, 90, 84, -241, -229, 100, 112, 30,
	-85, 75, 283, 97, 173, 29, 172, 39, -222, 287,
	-217, -217, -218, -261, 90, 146, -218, -218, -218, -224,
	90, -224, 91, 91, 85, -32, -27, -28, 32, 79,
	-248, -236, 90, 38, -190, 85, -82, -102, 112, 75,
	-252, -252, -252, -195, 16, -160, -190, 84, 85, -132,
	227, -130, 85, -190, 85, 83, -234, -191, -190, -279,
	166, 30, 30, -131, -132, -218, -261, 477, 476, 85,
	168, 225, -84, 334, 90, 86, -102, -102, -102, -102,
	-102, 160, 157, 210, 169, -95, -102, 84, -60, 186,
	181, -200, -200, 32, 321, 454, 452, -73, 111, -113,
	-113, -280, -280, -75, -191, -139, -158, -208, 146, 258,
	190, 256, 252, 272, 263, 285, 254, 286, -206, -208,
	-113, -113, -113, -113, 348, -139, 119, -86, 117, -113,
	-113, 167, 167, 167, -163, 42, 90, 90, 61, -102,
	-137, 14, -86, 137, -143, -164, 75, -165, -124, -126,
	-125, -279, -159, -280, -190, -163, -107, 84, 120, -93,
	-92, 75, 76, -94, 75, -92, 65, 65, -280, -107,
	-88, -107, -107, 152, 321, 325, 326, -241, 100, -113,
	23, 10, 90, 29, 29, 40, -218, -218, 85, 84,
	85, 84, 85, 84, -184, 388, 112, -28, -27, -236,
	-236, 91, -261, 168, 24, -102, 75, 75, 75, 17,
	84, -225, -130, 56, -251, -160, -255, -256, -102, -112,
	-132, -102, -81, 216, 224, 83, 87, -263, 76, 207,
	283, 207, -102, -60, -32, -102, -180, -180, 32, -261,
	-113, -280, -143, -280, -216, -216, -216, -220, -216, 246,
	-216, 246, -280, -280, 20, 20, 20, 20, -279, -65,
	344, -86, 84, 84, -279, -279, -279, -280, 90, -217,
	-138, 15, 17, 28, -164, 84, -280, -280, 84, 56,
	152, -280, -139, -169, -86, -86, 83, -86, -139, -107,
	-113, -116, -217, 90, -217, 91, 91, 388, 30, 80,
	81, 82, 30, 77, 78, -102, -102, -102, -102, -160,
	-190, 203, 85, -280, 84, -223, 351, 354, -161, 83,
	85, -260, 351, -262, -261, -190, -190, -190, -158, -217,
	-261, -113, -113, -113, -113, -113, -143, 90, -113, -113,
	-160, -280, -160, -160, -198, -217, -147, -152, -177, -86,
	-122, 29, -126, 56, -3, -190, -124, -190, -143, -160,
	-143, -218, -218, 85, 85, -161, 204, 185, -256, 355,
	355, 23, -160, -259, -258, -191, 83, 76, -280, -280,
	-280, -280, -68, 130, 351, -280, -280, -280, -280, -280,
	-280, -106, -150, 438, -155, 45, -153, -154, 46, -151,
	47, 55, 10, -124, 152, 85, 23, -279, -102, -3,
	85, 84, 120, -160, -102, -280, 349, 72, 352, -147,
	50, 264, -157, -156, 54, 46, -154, 17, 48, 17,
	-165, -190, -3, -113, 200, 83, -58, 351, -258, -240,
	-191, 90, 91, 85, 61, 350, 353, -148, 52, -146,
	51, -146, -156, 17, 17, 90, 17, 90, -58, -280,
	-280, -160, -59, 215, 442, -263, 61, -149, 53, 75,
	103, 90, 90, 90, 85, 178, -260, 351, 75, 103,
	-270, -271, 75, 217, 352, -271, 75, 11, 10, 353,
	-269, 186, 181, 184, 31, -269, 180, 30, 100,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 826, 0, 562, 562, 562, 562, 562,
	562, 562, 0, 0, 562, -2, -2, 562, 962, 0,
	562, 0, 0, -2, 495, 496, 0, 498, -2, 0,
	0, 507, 1375, 1375, 557, 0, 0, 0, 0, 0,
	562, 1373, 55, 56, 513, 514, 515, 1, 3, 0,
	566, 834, 0, 0, -2, 564, 0, 0, 945, 945,
	945, 0, 86, 87, 0, 0, 0, -2, 90, -2,
	114, 115, 0, 119, 371, 332, 374, 330, 360, -2,
	323, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 227, 227, 0, 0, -2, 323,
	323, 323, 0, 0, 0, 357, 947, 277, 227, 227,
	0, 227, 227, 227, 227, 0, 0, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 850, 118, 963, 960, 961, 35, 36, 37,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173,
	1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183,
	1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193,
	1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203,
	1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213,
	1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223,
	1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233,
	1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253,
	1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283,
	1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293,
	1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303,
	1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323,
	1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333,
	1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353,
	1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363,
	1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 0,
	939, 0, 427, 647, 0, 486, 486, 0, 486, 486,
	486, 486, 0, 0, 0, 439, 0, 0, 0, 0,
	483, 0, 0, 458, 460, 0, 483, 0, 470, 486,
	1376, 1376, 1376, 930, 0, 480, 478, 492, 493, 475,
	476, 494, 497, 0, 502, 505, 956, 957, 0, 520,
	0, 1181, 512, 525, 526, 0, 558, 559, 40, 698,
	657, 0, 663, 665, 0, 700, 701, 702, 703, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	730, 731, 732, 733, 811, 812, 813, 814, 815, 816,
	817, 818, 667, 668, 808, 0, 919, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 799, 0, 768, 768,
	768, 768, 768, 768, 768, 768, 768, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 1375, 0, 535, 0,
	0, 826, 51, 0, 562, 567, 568, 869, 0, 0,
	826, 1374, 0, 0, -2, -2, 578, 584, 585, 586,
	587, 588, 563, 0, 591, 595, 0, 0, 0, 946,
	0, 0, 72, 0, 1338, 923, -2, -2, 0, 0,
	958, 959, 932, -2, 966, 967, 968, 969, 970, 971,
	972, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991,
	992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041,
	1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061,
	1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071,
	1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081,
	1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091,
	1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, -2, 0, 0, 128, 129, 0, 38, 253,
	0, 124, 0, 247, 200, 850, 0, 0, 0, 0,
	0, 562, 0, 940, 109, 110, 116, 117, 227, 227,
	0, 118, 118, 339, 340, 341, 0, 0, -2, 251,
	0, 324, 0, 0, 241, 241, 245, 243, 244, 0,
	0, 0, 0, 0, 0, 351, 0, 352, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 411, 0, 228,
	0, 369, 370, 278, 0, 0, 0, 0, 349, 350,
	0, 0, 948, 949, 0, 0, 227, 227, 0, 0,
	0, 0, 227, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	108, 863, 0, 0, 0, -2, 0, 419, 0, 0,
	0, 941, 941, 426, 0, 428, 429, 0, 0, 430,
	0, 483, 483, 481, 482, 432, 433, 434, 435, 486,
	0, 0, 236, 237, 238, 483, 486, 0, 486, 486,
	486, 486, 483, 483, 483, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1376, 1376, 1376, 489, 486,
	467, 468, 471, 472, 1377, 1378, 977, 473, 474, 931,
	503, 506, 523, 521, 522, 524, 516, 517, 518, 519,
	0, 537, 538, 543, 0, 0, 0, 0, 549, 550,
	551, 0, 0, 554, 555, 556, 0, 0, 0, 0,
	0, 661, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 685, 686, 687, 688, 689, 690, 691, 664, 0,
	678, 0, 0, 0, 720, 721, 722, 723, 724, 725,
	726, 727, 728, 0, 575, 0, 0, 0, 826, 0,
	0, 0, 0, 0, 0, 0, 572, 0, 800, 0,
	751, 0, 752, 760, 0, 753, 761, 754, 762, 755,
	756, 763, 757, 764, 758, 759, 765, 0, 0, 0,
	575, 575, 0, 0, 41, 527, 528, 0, 630, 951,
	0, 834, 0, 577, 872, 0, 0, 835, 827, 828,
	831, 834, 0, 600, 589, 579, 582, 583, 565, 0,
	592, 596, 0, 598, 599, 0, 0, 70, 0, 646,
	0, 602, 604, 605, 606, 628, 0, 0, 0, 0,
	66, 68, 647, 0, 1338, 929, 0, 74, 75, 0,
	0, 0, 215, 934, 935, 936, -2, 234, 0, 138,
	207, 151, 152, 153, 200, 155, 200, 200, 200, 200,
	211, 211, 211, 211, 183, 184, 185, 186, 187, 0,
	0, 170, 200, 200, 200, 200, 190, 191, 192, 193,
	194, 195, 196, 197, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 202, 202, 202, 204, 204, 0, 39,
	0, 219, 0, 831, 0, 863, 943, 953, 0, 0,
	0, 943, 92, 0, 0, 372, 333, 361, 373, 0,
	336, 337, -2, 0, 0, 323, 0, 325, 0, 235,
	0, -2, 0, 245, 0, 241, 245, 242, 245, 233,
	246, 353, 808, 0, 354, 355, 0, 391, 616, 0,
	0, 0, 0, 0, 397, 398, 399, 0, 401, 402,
	403, 404, 405, 406, 407, 408, 409, 410, 362, 363,
	364, 365, 366, 367, 368, 0, 0, 325, 0, 358,
	0, 279, 280, 0, 0, 283, 284, 285, 286, 0,
	0, 289, 290, 291, 292, 293, 317, 318, 319, 294,
	295, 296, 297, 298, 299, 300, 311, 312, 313, 314,
	315, 316, 301, 302, 303, 304, 305, 308, 0, 102,
	854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 941, 0, 0, 0, 0, 648, 964, 965,
	487, 488, 0, 239, 240, 486, 486, 436, 459, 0,
	486, 440, 461, 441, 443, 442, 444, 463, 464, 486,
	447, 484, 485, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 465, 0, 466, 0, 0, 504, 508,
	509, 510, 511, 0, 0, 540, 545, 546, 547, 548,
	560, 553, 699, 658, 659, 660, 662, 679, 0, 681,
	683, 669, 670, 694, 695, 696, 0, 0, 0, 0,
	692, 674, 0, 705, 706, 707, 708, 709, 710, 711,
	712, 713, 714, 715, 716, 719, 783, 784, 785, 0,
	717, 718, 729, 0, 0, 0, 576, 809, 0, -2,
	0, 697, 918, 834, 0, 0, 0, 0, 702, 811,
	0, 702, 811, 0, 0, 0, 573, 574, 806, 803,
	0, 0, 769, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 530, 531, 533, 0, 650, 0, 631, 0,
	633, 634, 0, 952, 536, 869, 52, 42, 0, 870,
	0, 0, 0, 0, 830, 832, 833, 869, 0, 819,
	0, 0, 655, 0, 0, 580, 48, 597, 593, 0,
	655, 0, 0, 645, 0, 0, 0, 0, 0, 0,
	635, 0, 0, 638, 0, 0, 0, 0, 629, 0,
	0, 0, -2, 0, 0, 0, 62, 63, 0, 0,
	0, 924, 73, 0, 0, 78, 79, 925, 926, 927,
	928, 0, 111, -2, 274, 130, 132, 133, 134, 125,
	-2, 209, 208, 154, 211, 211, 177, 178, 215, 0,
	215, 215, 215, 0, 0, 171, 172, 173, 174, 165,
	0, 166, 167, 168, 0, 169, 252, 0, 838, 220,
	221, 223, 227, 0, 0, 0, 248, 249, 0, 854,
	0, 0, 0, 954, 953, 953, 953, 0, 120, 121,
	122, 123, 118, 0, 0, 126, 327, 0, 0, 0,
	250, 0, 0, 229, 245, 230, 231, 0, 356, 0,
	0, 393, 394, 395, 396, 0, 0, 0, 325, 327,
	215, 0, 281, 282, 287, 288, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 386, 387,
	388, 389, 851, 852, 853, 0, 0, 420, 0, 0,
	266, 64, 942, 425, 483, 446, 462, 483, 438, 445,
	490, 469, 500, 544, 0, 0, 0, 552, 0, 680,
	682, 684, 671, 692, 675, 0, 672, 0, 0, 666,
	734, 0, 0, 575, 0, 826, 869, 738, 739, 0,
	0, 0, 0, 0, 776, 0, 0, 777, 0, 826,
	0, 804, 0, 0, 750, 770, 0, 0, 771, 772,
	773, 774, 775, 529, 532, 534, 610, 0, 0, 0,
	0, 632, 950, 44, 0, 0, 0, 836, 837, 829,
	43, 0, 937, 938, 820, 821, 822, 0, 590, 601,
	581, 0, 834, 912, 0, 0, 904, 0, 0, 655,
	920, 0, 603, 624, 626, 0, 621, 636, 637, 639,
	0, 641, 0, 643, 644, 607, 608, 609, 0, 655,
	0, 655, 67, 655, 69, 0, 649, 76, 77, 0,
	0, 83, 216, 217, 118, 276, 131, 139, 0, 0,
	0, 0, 144, 0, 0, 147, 149, 0, 150, 210,
	215, 215, 179, 212, 213, 214, 180, 181, 182, 0,
	198, 0, 0, 0, 269, 88, 842, 841, 227, 227,
	222, 0, 225, 0, 955, 201, 0, 101, 0, 0,
	0, 0, 0, 107, 0, 331, 614, 0, 342, 343,
	0, 326, 390, 0, 219, 0, 232, 809, 617, 0,
	0, 344, 0, 327, 347, 348, 359, 309, 310, 307,
	0, 0, 864, 865, 0, 868, 93, 379, 381, 380,
	384, 0, 0, 377, 0, 266, 838, 0, 424, 267,
	268, 486, 486, 539, 0, 542, 0, 673, 0, 693,
	676, 735, 736, 0, 810, 834, 46, 0, 200, 200,
	789, 200, 204, 792, 200, 794, 200, 797, 0, 0,
	0, 0, 0, 0, 0, 801, 749, 807, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 874, 871, 45,
	824, 0, 656, 594, 49, 53, 0, 912, 903, 914,
	916, 0, 0, 0, 908, 0, 826, 0, 0, 618,
	625, 0, 0, 619, 0, 620, 640, 642, -2, 826,
	655, 60, 61, 0, 80, 81, 82, 275, 140, 141,
	0, 0, 145, 146, 148, 137, 175, 176, 211, 0,
	211, 0, 205, 0, 258, 270, 0, 839, 840, 0,
	0, 224, 226, 0, 944, 103, 0, 0, 0, 0,
	0, 127, 328, 0, 218, 0, 0, 415, 412, 345,
	346, 612, 855, 856, 857, 0, 867, 96, 0, 0,
	0, 0, 421, 422, 423, 65, 431, 437, 541, 561,
	677, 737, 869, 740, 786, 211, 790, 791, 793, 795,
	796, 798, 742, 741, 0, 0, 0, 0, 0, 834,
	0, 805, 0, 0, 0, 0, 0, 630, 211, 894,
	50, 0, 0, 0, 54, 0, 917, 0, 0, 0,
	0, 71, 834, 921, 922, 622, 0, 627, 834, 59,
	142, 143, 215, 199, 215, 0, 0, 271, 843, 844,
	845, 846, 847, 848, 849, 612, 104, 105, 106, 334,
	615, 0, 0, 392, 0, 400, 0, 0, 0, 0,
	866, 378, 0, 94, 95, 0, 0, 383, 47, 787,
	788, 0, 0, 0, 0, 778, 0, 802, 0, 0,
	0, 652, 0, 0, 650, 876, 875, 888, 901, 825,
	823, 0, 915, 0, 907, 910, 906, 909, 57, 0,
	58, 188, 189, 203, 206, 0, 0, 0, 416, 413,
	414, 0, 0, 97, 98, 0, 0, 0, 743, 745,
	744, 746, 0, 0, 0, 748, 766, 767, 651, 653,
	654, 611, 894, 0, 887, 0, -2, 896, 0, 0,
	0, 902, 0, 905, 0, 623, 0, 0, 0, 858,
	613, 0, 0, 0, 385, 747, 0, 0, 0, 881,
	879, 879, 889, 890, 0, 0, 897, 0, 0, 0,
	913, 911, 858, 0, 0, 0, 375, 860, 99, 100,
	320, 321, 322, 93, 779, 0, 782, 884, 0, 877,
	880, 878, 891, 0, 0, 898, 0, 900, 89, 417,
	418, 0, 0, 861, 862, 96, 780, 873, 0, 882,
	883, 892, 893, 899, 254, 0, 382, 0, 885, 886,
	255, 256, 0, 859, 0, 257, 0, 0, 0, 781,
	259, 261, 262, 0, 0, 260, 263, 264, 265,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 140, 132, 3,
	83, 85, 137, 135, 84, 136, 152, 138, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 478,
	121, 120, 122, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 142, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 131, 3, 143,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 114, 115,
	116, 117, 118, 119, 123, 124, 125, 126, 127, 128,
	129, 130, 133, 134, 139, 141, 144, 145, 146, 147,
	148, 149, 150, 151, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:425
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:430
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:431
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:435
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:468
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:478
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:482
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:487
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:491
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:497
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:503
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:509
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:518
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:522
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:526
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:549
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:557
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:563
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:569
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:577
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:583
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:594
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:606
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:618
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:622
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:628
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:634
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:638
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:642
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:646
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:656
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:660
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:666
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:670
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:676
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:685
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:689
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:695
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:701
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:705
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:711
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:715
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:721
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:725
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:729
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:735
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:739
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:743
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:747
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:753
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:757
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:763
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:776
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:785
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:796
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:800
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:805
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:815
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:820
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:825
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:831
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:842
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:848
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:855
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:862
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:867
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:872
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:877
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:884
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:891
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:902
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:908
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:912
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:918
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:922
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:926
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:930
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:935
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:939
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:945
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:949
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:955
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:959
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:966
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:970
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:976
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:980
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:986
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:991
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1000
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1005
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1013
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1019
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1025
		{
			yyVAL.str = ""
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1029
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1038
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1042
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1048
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1054
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1059
		{
			yyDollar[1].columnTypeOptionsUnion().As = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1064
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1069
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1074
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1079
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1084
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1089
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1094
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1215
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1219
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1227
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 189:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1278
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1312
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1317
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1326
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1331
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1335
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1343
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1347
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 206:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1353
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1361
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1365
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1370
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1374
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1391
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1396
		{
			yyVAL.str = ""
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 218:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1411
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1416
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1420
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1426
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1436
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1440
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1445
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1449
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = ""
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1465
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1469
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1473
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1477
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1481
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = ""
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = yyDollar[2].str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = "key"
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = yyDollar[1].str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 245:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = ""
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1549
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1559
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1565
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1569
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1575
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1579
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1585
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1589
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion(), OnDelete: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1593
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1597
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferencedTable: yyDollar[8].tableName, ReferencedColumns: yyDollar[10].columnsUnion(), OnDelete: yyDollar[12].ReferenceActionUnion(), OnUpdate: yyDollar[13].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1603
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1609
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1615
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1621
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1625
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1629
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1633
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1637
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = ""
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1659
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1663
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1668
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1672
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1678
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1686
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1692
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1696
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1702
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1706
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1710
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1714
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1718
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1722
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1726
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1730
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1734
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1738
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1742
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1746
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1750
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1754
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1758
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1762
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1766
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1770
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1774
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1778
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1782
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1786
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1790
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1794
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1798
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1802
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1806
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1810
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1814
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1819
		{
			yyVAL.str = ""
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1846
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1854
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1865
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1869
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1874
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1878
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1883
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1887
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1891
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1895
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1899
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 334:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1903
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1909
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1913
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1923
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1927
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1931
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1935
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1939
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1943
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1947
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1951
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1955
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1959
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1963
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1967
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1971
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1975
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1979
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1983
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1987
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1991
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1995
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1999
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2003
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2007
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2013
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2023
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2027
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2031
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2035
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2039
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2043
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2047
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2051
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2055
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2061
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2067
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2074
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2081
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2087
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2091
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2098
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2105
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2117
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2127
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2131
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2135
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2148
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2158
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2162
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2173
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2180
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2187
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2194
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2202
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2206
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2210
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2214
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2218
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2222
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2226
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2230
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2234
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2238
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2242
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2246
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2250
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2254
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2258
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2262
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2266
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2270
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2274
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2278
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2282
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2286
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2291
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2295
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2306
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2316
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2320
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2326
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2332
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2336
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2342
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2346
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2355
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2359
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2365
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2369
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2374
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2380
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2384
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2388
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2392
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2396
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2400
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2404
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2408
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2412
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2416
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2420
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2424
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2428
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2432
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2436
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2440
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2444
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2448
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2452
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2456
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2460
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2464
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2468
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2472
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2476
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2480
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2484
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2488
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2492
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2496
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2500
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2504
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2508
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2512
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2516
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2520
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2524
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2529
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2533
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2537
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2541
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2545
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2550
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2564
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2568
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2572
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2578
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2588
		{
			yyVAL.str = ""
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.str = "extended "
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2598
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2602
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2608
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2612
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2618
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2626
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2636
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2640
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2650
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2656
		{
			yyVAL.empty = struct{}{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2660
		{
			yyVAL.empty = struct{}{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.empty = struct{}{}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2670
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2674
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2680
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2684
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2690
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2696
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.empty = struct{}{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.empty = struct{}{}
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2710
		{
			yyVAL.empty = struct{}{}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.empty = struct{}{}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2717
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2728
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2732
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2736
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2740
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2744
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2748
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = yyDollar[1].str
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = yyDollar[1].str
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = yyDollar[1].str
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = ""
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2799
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2803
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2819
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2825
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2835
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2841
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2845
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2849
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2853
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2859
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2871
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2875
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2879
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2883
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2887
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2891
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2915
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2919
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2923
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2951
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2956
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2960
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2964
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2969
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2978
		{
			setAllowComments(yylex, true)
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2988
		{
			yyVAL.strs = nil
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2992
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2998
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = ""
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = SQLCacheStr
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3024
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3028
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3032
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3041
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3046
		{
			yyVAL.strs = nil
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3050
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3058
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3062
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3068
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.str = SQLCacheStr
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
			yyVAL.str = DistinctStr
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.str = DistinctStr
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3084
		{
			yyVAL.str = StraightJoinHint
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3098
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3102
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3108
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3112
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3116
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3120
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3145
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3149
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3155
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3159
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3169
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3173
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3177
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3183
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3189
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3193
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3198
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3202
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3208
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3212
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3218
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3235
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3239
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3243
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3247
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3255
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3259
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3265
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3267
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3270
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3272
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3275
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3283
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3290
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3296
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3300
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3304
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3310
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3316
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3320
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3324
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3328
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3334
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3338
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3348
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3358
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3362
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3368
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3377
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3381
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3385
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3389
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3398
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3404
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3408
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3412
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3416
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3420
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3424
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3428
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3432
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3438
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3442
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3448
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3452
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3458
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3462
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3466
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3470
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3474
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3478
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3482
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3486
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3490
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3494
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3500
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3504
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3508
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3512
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3516
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3520
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3526
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3530
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3534
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3538
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3542
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3546
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3550
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3555
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3559
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3565
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3569
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3573
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3580
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3586
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3590
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3596
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3600
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3604
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3608
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3612
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3616
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3620
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3624
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3628
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3632
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3636
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3640
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3644
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3648
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3652
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3656
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3660
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3664
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3668
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3672
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3676
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3680
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3684
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3688
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3692
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3696
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3700
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3704
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3708
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3712
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3752
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3756
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3760
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3764
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3768
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3772
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3776
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3780
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3784
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3788
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3792
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3796
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3800
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3804
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3818
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3822
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3827
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3832
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3837
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3853
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3857
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3861
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3866
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3884
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3894
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3904
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3908
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3912
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3916
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3920
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3924
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3928
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3934
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3938
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3942
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3946
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3950
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3970
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3990
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3996
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4000
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4004
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4008
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4012
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4016
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4020
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4029
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4034
		{
			yyVAL.str = string("")
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4044
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4054
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4063
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4069
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4073
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4077
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4083
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4087
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4091
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4095
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4099
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4103
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4107
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4112
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4118
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4127
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4131
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4141
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4150
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4155
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4159
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4165
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4169
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4175
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4180
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4184
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4188
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4197
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4201
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4205
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4214
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4218
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4222
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4226
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4233
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4237
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4241
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4245
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4251
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4255
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4259
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4268
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4285
		{
			yyVAL.str = yyDollar[3].str
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = yyDollar[2].str
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = "cascaded"
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = yyDollar[3].str
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4349
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4353
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4357
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4362
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4366
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4370
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4374
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = " header"
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = " manifest on"
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = " manifest off"
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4418
		{
			yyVAL.str = " overwrite on"
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4422
		{
			yyVAL.str = " overwrite off"
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4428
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4433
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4437
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = yyDollar[1].str
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4457
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4462
		{
			yyVAL.str = ""
		}
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4466
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = yyDollar[1].str
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4486
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4490
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4495
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4499
		{
			yyVAL.str = " optionally"
		}
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4512
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4516
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4520
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4524
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4528
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4534
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4538
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4546
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4551
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4555
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4561
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4571
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4575
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4581
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4597
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4601
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4607
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4613
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4617
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 925:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4623
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4627
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4631
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4635
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4639
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = "charset"
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4657
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4661
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4665
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4674
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4676
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4681
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4684
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4689
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4691
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4694
		{
			yyVAL.empty = struct{}{}
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.empty = struct{}{}
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4698
		{
			yyVAL.empty = struct{}{}
		}
	case 950:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4702
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4707
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4711
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4716
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4718
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4722
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4732
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4745
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4749
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4754
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4758
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4765
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5197
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			decNesting(yylex)
		}
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5211
		{
			skipToEnd(yylex)
		}
	case 1376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5216
		{
			skipToEnd(yylex)
		}
	case 1377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5220
		{
			skipToEnd(yylex)
		}
	case 1378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5224
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
