// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const HEX = 57427
const STRING = 57428
const INTEGRAL = 57429
const FLOAT = 57430
const HEXNUM = 57431
const VALUE_ARG = 57432
const LIST_ARG = 57433
const COMMENT = 57434
const COMMENT_KEYWORD = 57435
const BIT_LITERAL = 57436
const COMPRESSION = 57437
const NULL = 57438
const TRUE = 57439
const FALSE = 57440
const OFF = 57441
const DISCARD = 57442
const IMPORT = 57443
const ENABLE = 57444
const DISABLE = 57445
const TABLESPACE = 57446
const VIRTUAL = 57447
const STORED = 57448
const LOWER_THAN_CHARSET = 57449
const CHARSET = 57450
const UNIQUE = 57451
const KEY = 57452
const OR = 57453
const XOR = 57454
const AND = 57455
const NOT = 57456
const BETWEEN = 57457
const CASE = 57458
const WHEN = 57459
const THEN = 57460
const ELSE = 57461
const END = 57462
const LE = 57463
const GE = 57464
const NE = 57465
const NULL_SAFE_EQUAL = 57466
const IS = 57467
const LIKE = 57468
const REGEXP = 57469
const IN = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const UNDERSCORE_UTF8MB4 = 57479
const UNDERSCORE_UTF8 = 57480
const UNDERSCORE_LATIN1 = 57481
const INTERVAL = 57482
const JSON_EXTRACT_OP = 57483
const JSON_UNQUOTE_EXTRACT_OP = 57484
const CREATE = 57485
const ALTER = 57486
const DROP = 57487
const RENAME = 57488
const ANALYZE = 57489
const ADD = 57490
const FLUSH = 57491
const CHANGE = 57492
const MODIFY = 57493
const REVERT = 57494
const SCHEMA = 57495
const TABLE = 57496
const INDEX = 57497
const VIEW = 57498
const TO = 57499
const IGNORE = 57500
const IF = 57501
const PRIMARY = 57502
const COLUMN = 57503
const SPATIAL = 57504
const FULLTEXT = 57505
const KEY_BLOCK_SIZE = 57506
const CHECK = 57507
const INDEXES = 57508
const ACTION = 57509
const CASCADE = 57510
const CONSTRAINT = 57511
const FOREIGN = 57512
const NO = 57513
const REFERENCES = 57514
const RESTRICT = 57515
const SHOW = 57516
const DESCRIBE = 57517
const EXPLAIN = 57518
const DATE = 57519
const ESCAPE = 57520
const REPAIR = 57521
const OPTIMIZE = 57522
const TRUNCATE = 57523
const COALESCE = 57524
const EXCHANGE = 57525
const REBUILD = 57526
const PARTITIONING = 57527
const REMOVE = 57528
const MAXVALUE = 57529
const PARTITION = 57530
const REORGANIZE = 57531
const LESS = 57532
const THAN = 57533
const PROCEDURE = 57534
const TRIGGER = 57535
const VINDEX = 57536
const VINDEXES = 57537
const DIRECTORY = 57538
const NAME = 57539
const UPGRADE = 57540
const STATUS = 57541
const VARIABLES = 57542
const WARNINGS = 57543
const CASCADED = 57544
const DEFINER = 57545
const OPTION = 57546
const SQL = 57547
const UNDEFINED = 57548
const SEQUENCE = 57549
const MERGE = 57550
const TEMPORARY = 57551
const TEMPTABLE = 57552
const INVOKER = 57553
const SECURITY = 57554
const FIRST = 57555
const AFTER = 57556
const LAST = 57557
const VITESS_MIGRATION = 57558
const CANCEL = 57559
const RETRY = 57560
const COMPLETE = 57561
const BEGIN = 57562
const START = 57563
const TRANSACTION = 57564
const COMMIT = 57565
const ROLLBACK = 57566
const SAVEPOINT = 57567
const RELEASE = 57568
const WORK = 57569
const BIT = 57570
const TINYINT = 57571
const SMALLINT = 57572
const MEDIUMINT = 57573
const INT = 57574
const INTEGER = 57575
const BIGINT = 57576
const INTNUM = 57577
const REAL = 57578
const DOUBLE = 57579
const FLOAT_TYPE = 57580
const DECIMAL = 57581
const NUMERIC = 57582
const TIME = 57583
const TIMESTAMP = 57584
const DATETIME = 57585
const YEAR = 57586
const CHAR = 57587
const VARCHAR = 57588
const BOOL = 57589
const CHARACTER = 57590
const VARBINARY = 57591
const NCHAR = 57592
const TEXT = 57593
const TINYTEXT = 57594
const MEDIUMTEXT = 57595
const LONGTEXT = 57596
const BLOB = 57597
const TINYBLOB = 57598
const MEDIUMBLOB = 57599
const LONGBLOB = 57600
const JSON = 57601
const ENUM = 57602
const GEOMETRY = 57603
const POINT = 57604
const LINESTRING = 57605
const POLYGON = 57606
const GEOMETRYCOLLECTION = 57607
const MULTIPOINT = 57608
const MULTILINESTRING = 57609
const MULTIPOLYGON = 57610
const NULLX = 57611
const AUTO_INCREMENT = 57612
const APPROXNUM = 57613
const SIGNED = 57614
const UNSIGNED = 57615
const ZEROFILL = 57616
const CODE = 57617
const COLLATION = 57618
const COLUMNS = 57619
const DATABASES = 57620
const ENGINES = 57621
const EVENT = 57622
const EXTENDED = 57623
const FIELDS = 57624
const FULL = 57625
const FUNCTION = 57626
const GTID_EXECUTED = 57627
const KEYSPACES = 57628
const OPEN = 57629
const PLUGINS = 57630
const PRIVILEGES = 57631
const PROCESSLIST = 57632
const SCHEMAS = 57633
const TABLES = 57634
const TRIGGERS = 57635
const USER = 57636
const VGTID_EXECUTED = 57637
const VITESS_KEYSPACES = 57638
const VITESS_METADATA = 57639
const VITESS_MIGRATIONS = 57640
const VITESS_SHARDS = 57641
const VITESS_TABLETS = 57642
const VSCHEMA = 57643
const NAMES = 57644
const GLOBAL = 57645
const SESSION = 57646
const ISOLATION = 57647
const LEVEL = 57648
const READ = 57649
const WRITE = 57650
const ONLY = 57651
const REPEATABLE = 57652
const COMMITTED = 57653
const UNCOMMITTED = 57654
const SERIALIZABLE = 57655
const CURRENT_TIMESTAMP = 57656
const DATABASE = 57657
const CURRENT_DATE = 57658
const CURRENT_TIME = 57659
const LOCALTIME = 57660
const LOCALTIMESTAMP = 57661
const CURRENT_USER = 57662
const UTC_DATE = 57663
const UTC_TIME = 57664
const UTC_TIMESTAMP = 57665
const REPLACE = 57666
const CONVERT = 57667
const CAST = 57668
const SUBSTR = 57669
const SUBSTRING = 57670
const GROUP_CONCAT = 57671
const SEPARATOR = 57672
const TIMESTAMPADD = 57673
const TIMESTAMPDIFF = 57674
const MATCH = 57675
const AGAINST = 57676
const BOOLEAN = 57677
const LANGUAGE = 57678
const WITH = 57679
const QUERY = 57680
const EXPANSION = 57681
const WITHOUT = 57682
const VALIDATION = 57683
const UNUSED = 57684
const ARRAY = 57685
const CUME_DIST = 57686
const DESCRIPTION = 57687
const DENSE_RANK = 57688
const EMPTY = 57689
const EXCEPT = 57690
const FIRST_VALUE = 57691
const GROUPING = 57692
const GROUPS = 57693
const JSON_TABLE = 57694
const LAG = 57695
const LAST_VALUE = 57696
const LATERAL = 57697
const LEAD = 57698
const MEMBER = 57699
const NTH_VALUE = 57700
const NTILE = 57701
const OF = 57702
const OVER = 57703
const PERCENT_RANK = 57704
const RANK = 57705
const RECURSIVE = 57706
const ROW_NUMBER = 57707
const SYSTEM = 57708
const WINDOW = 57709
const ACTIVE = 57710
const ADMIN = 57711
const BUCKETS = 57712
const CLONE = 57713
const COMPONENT = 57714
const DEFINITION = 57715
const ENFORCED = 57716
const EXCLUDE = 57717
const FOLLOWING = 57718
const GEOMCOLLECTION = 57719
const GET_MASTER_PUBLIC_KEY = 57720
const HISTOGRAM = 57721
const HISTORY = 57722
const INACTIVE = 57723
const INVISIBLE = 57724
const LOCKED = 57725
const MASTER_COMPRESSION_ALGORITHMS = 57726
const MASTER_PUBLIC_KEY_PATH = 57727
const MASTER_TLS_CIPHERSUITES = 57728
const MASTER_ZSTD_COMPRESSION_LEVEL = 57729
const NESTED = 57730
const NETWORK_NAMESPACE = 57731
const NOWAIT = 57732
const NULLS = 57733
const OJ = 57734
const OLD = 57735
const OPTIONAL = 57736
const ORDINALITY = 57737
const ORGANIZATION = 57738
const OTHERS = 57739
const PATH = 57740
const PERSIST = 57741
const PERSIST_ONLY = 57742
const PRECEDING = 57743
const PRIVILEGE_CHECKS_USER = 57744
const PROCESS = 57745
const RANDOM = 57746
const REFERENCE = 57747
const REQUIRE_ROW_FORMAT = 57748
const RESOURCE = 57749
const RESPECT = 57750
const RESTART = 57751
const RETAIN = 57752
const REUSE = 57753
const ROLE = 57754
const SECONDARY = 57755
const SECONDARY_ENGINE = 57756
const SECONDARY_LOAD = 57757
const SECONDARY_UNLOAD = 57758
const SKIP = 57759
const SRID = 57760
const THREAD_PRIORITY = 57761
const TIES = 57762
const UNBOUNDED = 57763
const VCPU = 57764
const VISIBLE = 57765
const FORMAT = 57766
const TREE = 57767
const VITESS = 57768
const TRADITIONAL = 57769
const LOCAL = 57770
const LOW_PRIORITY = 57771
const NO_WRITE_TO_BINLOG = 57772
const LOGS = 57773
const ERROR = 57774
const GENERAL = 57775
const HOSTS = 57776
const OPTIMIZER_COSTS = 57777
const USER_RESOURCES = 57778
const SLOW = 57779
const CHANNEL = 57780
const RELAY = 57781
const EXPORT = 57782
const AVG_ROW_LENGTH = 57783
const CONNECTION = 57784
const CHECKSUM = 57785
const DELAY_KEY_WRITE = 57786
const ENCRYPTION = 57787
const ENGINE = 57788
const INSERT_METHOD = 57789
const MAX_ROWS = 57790
const MIN_ROWS = 57791
const PACK_KEYS = 57792
const PASSWORD = 57793
const FIXED = 57794
const DYNAMIC = 57795
const COMPRESSED = 57796
const REDUNDANT = 57797
const COMPACT = 57798
const ROW_FORMAT = 57799
const STATS_AUTO_RECALC = 57800
const STATS_PERSISTENT = 57801
const STATS_SAMPLE_PAGES = 57802
const STORAGE = 57803
const MEMORY = 57804
const DISK = 57805
const PARTITIONS = 57806
const LINEAR = 57807
const RANGE = 57808
const LIST = 57809
const SUBPARTITION = 57810
const SUBPARTITIONS = 57811
const HASH = 57812

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 112,
	488, 112,
	-2, 118,
	-1, 46,
	111, 118,
	150, 118,
	265, 118,
	-2, 341,
	-1, 53,
	33, 511,
	172, 511,
	183, 511,
	216, 525,
	217, 525,
	-2, 513,
	-1, 58,
	174, 535,
	-2, 533,
	-1, 84,
	57, 603,
	-2, 611,
	-1, 97,
	171, 977,
	-2, 91,
	-1, 99,
	1, 113,
	488, 113,
	-2, 118,
	-1, 109,
	112, 244,
	177, 244,
	-2, 335,
	-1, 128,
	111, 118,
	150, 118,
	265, 118,
	-2, 350,
	-1, 575,
	157, 998,
	-2, 994,
	-1, 576,
	157, 999,
	-2, 995,
	-1, 595,
	57, 604,
	-2, 616,
	-1, 596,
	57, 605,
	-2, 617,
	-1, 617,
	125, 1354,
	-2, 84,
	-1, 618,
	125, 1232,
	-2, 85,
	-1, 624,
	125, 1285,
	-2, 971,
	-1, 766,
	125, 1166,
	-2, 968,
	-1, 802,
	182, 38,
	187, 38,
	-2, 255,
	-1, 879,
	1, 388,
	488, 388,
	-2, 118,
	-1, 1121,
	111, 118,
	150, 118,
	265, 118,
	-2, 285,
	-1, 1124,
	23, 137,
	-2, 139,
	-1, 1197,
	112, 244,
	177, 244,
	-2, 335,
	-1, 1206,
	182, 39,
	187, 39,
	-2, 256,
	-1, 1416,
	157, 1003,
	-2, 997,
	-1, 1507,
	75, 66,
	83, 66,
	-2, 70,
	-1, 1528,
	111, 118,
	150, 118,
	265, 118,
	-2, 286,
	-1, 1962,
	5, 864,
	18, 864,
	20, 864,
	31, 864,
	84, 864,
	-2, 643,
	-1, 2207,
	47, 939,
	-2, 933,
}

const yyPrivate = 57344

const yyLast = 29941

var yyAct = [...]int{
	575, 606, 2360, 2300, 1839, 2218, 2256, 2220, 2329, 2085,
	2022, 2122, 2275, 2262, 2244, 1787, 2011, 2288, 2149, 2208,
	1747, 2012, 547, 2184, 1942, 1714, 2119, 1795, 1453, 588,
	1794, 1943, 1022, 1525, 533, 1748, 890, 1076, 1561, 1069,
	1939, 1882, 516, 2141, 1819, 1843, 1734, 83, 3, 165,
	1581, 769, 165, 1566, 481, 165, 1820, 1504, 137, 940,
	497, 1954, 165, 1821, 1901, 1594, 1674, 510, 1402, 518,
	165, 81, 1222, 1410, 622, 919, 1103, 1580, 1627, 1313,
	797, 1568, 123, 1813, 832, 1113, 1106, 1486, 597, 1079,
	1436, 1074, 497, 1455, 1493, 497, 165, 497, 509, 582,
	1061, 33, 520, 1204, 1379, 958, 1096, 1578, 1099, 1211,
	1310, 1469, 1296, 777, 1097, 776, 798, 799, 773, 803,
	1112, 1509, 1110, 8, 1318, 1086, 1557, 875, 504, 79,
	1173, 100, 1035, 1413, 2344, 2165, 1178, 800, 1196, 938,
	78, 106, 107, 2361, 1546, 1038, 7, 140, 2257, 2087,
	810, 619, 101, 513, 6, 2087, 2088, 2089, 2221, 1862,
	1861, 1625, 1282, 1889, 1890, 780, 2151, 1368, 1547, 167,
	168, 169, 1367, 1450, 1451, 770, 604, 608, 1366, 1365,
	785, 583, 161, 1364, 1363, 108, 1352, 837, 507, 1356,
	508, 2314, 505, 102, 1712, 2204, 2098, 1991, 2180, 2179,
	2117, 836, 835, 2118, 2354, 2349, 103, 2285, 125, 1664,
	834, 2237, 2337, 2123, 616, 1613, 2284, 1918, 80, 145,
	2055, 2236, 455, 848, 849, 1187, 852, 853, 854, 855,
	1713, 791, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 102, 813, 1968,
	135, 84, 790, 1869, 1888, 124, 1573, 1868, 1662, 1778,
	623, 814, 1777, 959, 1114, 1779, 1115, 838, 839, 840,
	1519, 792, 1510, 142, 909, 143, 579, 1571, 1969, 1970,
	112, 113, 134, 133, 160, 959, 578, 845, 86, 87,
	88, 89, 90, 91, 161, 1452, 97, 936, 926, 162,
	928, 897, 450, 1520, 1521, 789, 898, 884, 885, 850,
	2167, 102, 560, 2046, 566, 567, 564, 565, 103, 563,
	562, 561, 581, 1803, 1540, 1539, 914, 915, 969, 568,
	569, 145, 2241, 484, 495, 910, 925, 927, 129, 110,
	136, 117, 109, 874, 130, 131, 2044, 903, 1355, 146,
	969, 499, 493, 1272, 2024, 1357, 1358, 1359, 151, 118,
	1595, 787, 1570, 1638, 1636, 1637, 35, 1302, 1844, 72,
	39, 40, 1784, 121, 119, 114, 115, 116, 120, 1065,
	2018, 1865, 1640, 111, 1641, 142, 1642, 143, 2019, 784,
	1633, 786, 122, 878, 935, 1273, 160, 1274, 2193, 984,
	983, 993, 994, 986, 987, 988, 989, 990, 991, 992,
	985, 911, 916, 995, 897, 1628, 2348, 2315, 965, 898,
	1297, 957, 917, 904, 923, 912, 913, 896, 924, 895,
	2025, 1902, 932, 918, 167, 168, 169, 1877, 929, 880,
	965, 484, 71, 1634, 1643, 857, 856, 789, 2026, 781,
	165, 1630, 165, 2176, 2112, 165, 783, 782, 1597, 922,
	484, 146, 1783, 1487, 138, 484, 1632, 788, 794, 830,
	151, 1990, 829, 930, 1904, 821, 819, 828, 827, 826,
	851, 825, 497, 497, 497, 789, 873, 485, 1799, 824,
	823, 818, 1190, 893, 831, 899, 900, 901, 902, 2335,
	497, 497, 2235, 787, 793, 1867, 1631, 2333, 2343, 2164,
	1790, 774, 1303, 1210, 976, 2345, 806, 937, 907, 132,
	774, 774, 2168, 805, 772, 1715, 1717, 1510, 1311, 1579,
	610, 126, 931, 1878, 127, 1572, 1906, 1619, 1910, 1307,
	1905, 945, 1903, 1663, 841, 1998, 1864, 1908, 877, 951,
	510, 2242, 933, 1881, 1927, 1791, 1907, 1926, 1925, 1033,
	964, 961, 962, 963, 968, 970, 967, 2276, 966, 1909,
	1911, 847, 1185, 822, 820, 960, 138, 1793, 1209, 165,
	1788, 1184, 964, 961, 962, 963, 968, 970, 967, 1183,
	966, 1072, 1075, 1797, 1798, 485, 1854, 960, 1789, 1308,
	812, 1181, 1284, 1283, 1285, 1286, 1287, 497, 454, 788,
	165, 449, 165, 165, 485, 497, 883, 2194, 1005, 485,
	1066, 497, 942, 943, 894, 954, 2215, 1615, 1716, 1884,
	1301, 886, 1067, 876, 1883, 139, 144, 141, 147, 148,
	149, 150, 152, 153, 154, 155, 1876, 788, 952, 1875,
	1023, 156, 157, 158, 159, 1884, 953, 906, 1796, 811,
	1883, 812, 2331, 1693, 2075, 2332, 812, 2330, 908, 1095,
	1799, 99, 1007, 1008, 619, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1967, 1080, 1062, 1739, 1682,
	1605, 1515, 1090, 1037, 1040, 1042, 1044, 1045, 1047, 1049,
	1050, 73, 1020, 888, 1526, 995, 1059, 1041, 1043, 1690,
	1046, 1048, 812, 1051, 985, 1774, 1298, 995, 1299, 920,
	811, 1300, 846, 1465, 892, 811, 1350, 94, 1078, 2255,
	975, 805, 808, 809, 2231, 774, 1319, 833, 1952, 802,
	806, 167, 168, 169, 1629, 1404, 1386, 139, 144, 141,
	147, 148, 149, 150, 152, 153, 154, 155, 801, 1614,
	1384, 1385, 1383, 156, 157, 158, 159, 1304, 1792, 165,
	1920, 811, 1116, 1174, 812, 955, 815, 805, 95, 1437,
	1437, 1700, 1182, 623, 812, 1832, 816, 2154, 984, 983,
	993, 994, 986, 987, 988, 989, 990, 991, 992, 985,
	972, 497, 995, 1206, 817, 974, 972, 1405, 1978, 1007,
	1008, 1215, 1977, 1601, 1221, 1219, 975, 1220, 497, 497,
	1612, 497, 975, 497, 497, 1208, 497, 497, 497, 497,
	497, 497, 1610, 811, 821, 879, 1607, 1068, 815, 805,
	819, 497, 921, 811, 891, 165, 1255, 1675, 816, 805,
	808, 809, 1202, 774, 2308, 1007, 1008, 802, 806, 1320,
	1611, 165, 2338, 986, 987, 988, 989, 990, 991, 992,
	985, 2324, 497, 995, 165, 1973, 1083, 1188, 1189, 1195,
	167, 168, 169, 1216, 1808, 1309, 973, 974, 972, 165,
	2339, 1224, 1252, 1225, 1317, 1227, 1229, 1689, 71, 1233,
	1235, 1237, 1239, 1241, 975, 165, 2021, 1180, 1250, 1251,
	1382, 1111, 165, 2358, 1214, 1607, 1667, 1668, 1669, 1213,
	2320, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	497, 497, 497, 1205, 1192, 1258, 1259, 1193, 1191, 1609,
	1323, 1264, 1265, 973, 974, 972, 1809, 1327, 2321, 1329,
	1330, 1331, 1332, 2363, 1268, 2346, 1336, 1291, 165, 1212,
	1212, 975, 2299, 1315, 2323, 2268, 1470, 1471, 2266, 2258,
	1351, 1321, 1322, 1369, 1370, 1371, 1372, 2270, 2271, 2097,
	1467, 1797, 1798, 1688, 2096, 1326, 2267, 1996, 973, 974,
	972, 1687, 1333, 1334, 1335, 1817, 1403, 1312, 167, 168,
	169, 1380, 1781, 614, 1929, 1406, 975, 1289, 1816, 1576,
	1253, 791, 988, 989, 990, 991, 992, 985, 1290, 497,
	995, 1279, 973, 974, 972, 2347, 1292, 102, 1423, 1424,
	1325, 609, 790, 1277, 1362, 1276, 1275, 1186, 592, 1266,
	975, 167, 168, 169, 1466, 1589, 1796, 1374, 1376, 1377,
	1407, 1408, 1930, 497, 497, 973, 974, 972, 1799, 2297,
	1260, 1420, 1257, 1256, 165, 1375, 510, 1231, 1288, 1346,
	1347, 1348, 2322, 975, 2309, 973, 974, 972, 497, 2296,
	1414, 1381, 1278, 2294, 2259, 165, 2138, 2094, 497, 973,
	974, 972, 165, 975, 165, 1416, 1460, 1458, 1425, 1428,
	1415, 2063, 165, 165, 1438, 1976, 1472, 975, 1023, 497,
	1931, 1826, 497, 1814, 973, 974, 972, 1658, 1524, 1623,
	1622, 611, 612, 497, 1818, 1459, 167, 168, 169, 1444,
	1445, 1378, 975, 1316, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1505,
	1414, 1417, 1280, 1267, 973, 974, 972, 1263, 1421, 1422,
	1262, 1261, 1427, 1430, 1431, 1416, 934, 1951, 619, 1480,
	1484, 619, 975, 2174, 1530, 2005, 2362, 1565, 497, 1508,
	1529, 2115, 2342, 2173, 1582, 1583, 1584, 2121, 1443, 1586,
	1588, 1446, 1447, 1440, 2005, 2326, 1845, 973, 974, 972,
	2005, 2303, 497, 1533, 1829, 1922, 2005, 2282, 497, 1215,
	80, 1563, 1215, 1482, 1215, 975, 167, 168, 169, 1534,
	1587, 2070, 1606, 2005, 2229, 1596, 1513, 1569, 2005, 2224,
	1517, 1516, 536, 535, 538, 539, 540, 541, 161, 1532,
	1531, 537, 2230, 542, 2005, 2216, 2198, 592, 2115, 592,
	2005, 2113, 497, 1593, 1403, 1607, 592, 2073, 592, 1403,
	1403, 971, 103, 1988, 1987, 2005, 1541, 1986, 1542, 1543,
	1544, 1545, 1984, 1985, 1511, 145, 1511, 623, 1984, 1983,
	623, 1548, 1549, 1550, 1553, 1554, 1555, 1556, 2357, 592,
	1575, 1574, 1564, 1577, 1585, 165, 1559, 1560, 1478, 592,
	1510, 1863, 165, 1616, 1177, 1847, 1479, 165, 165, 1841,
	1842, 165, 1600, 165, 1735, 1603, 35, 1604, 1617, 165,
	1602, 576, 1618, 1599, 1564, 1598, 165, 1620, 1621, 142,
	1490, 143, 1490, 592, 971, 592, 35, 1512, 813, 1512,
	160, 592, 1177, 1176, 1940, 1514, 1518, 1510, 1122, 1121,
	1705, 814, 1608, 1951, 165, 497, 1768, 1489, 1653, 1654,
	1742, 1212, 1735, 1656, 1510, 2156, 82, 2301, 2170, 35,
	166, 1626, 1657, 166, 1704, 585, 166, 1478, 1478, 1607,
	1590, 498, 1468, 166, 1490, 1743, 2099, 1448, 1360, 1306,
	1246, 166, 71, 984, 983, 993, 994, 986, 987, 988,
	989, 990, 991, 992, 985, 146, 1380, 995, 1607, 1108,
	1490, 796, 71, 498, 151, 795, 498, 166, 498, 1646,
	984, 983, 993, 994, 986, 987, 988, 989, 990, 991,
	992, 985, 1951, 1478, 995, 2352, 2100, 2101, 2102, 1701,
	1247, 1248, 1249, 1822, 2254, 71, 71, 2223, 2217, 165,
	1684, 71, 1495, 1498, 1499, 1500, 1496, 165, 1497, 1501,
	2186, 2120, 1955, 1956, 2091, 2081, 1661, 1179, 1725, 1726,
	1075, 1562, 2020, 1980, 1848, 1558, 1552, 1551, 1294, 1207,
	165, 1203, 1175, 96, 2219, 1823, 1381, 878, 1670, 2023,
	1823, 165, 165, 165, 165, 165, 545, 1955, 1956, 2187,
	1721, 1573, 2305, 165, 2103, 2263, 2003, 165, 2002, 2001,
	165, 165, 1728, 1958, 165, 165, 165, 1683, 1940, 583,
	138, 1833, 1647, 1353, 1759, 1243, 1699, 1780, 1757, 1760,
	1961, 1960, 1740, 1758, 1744, 1756, 1755, 1737, 1671, 1672,
	1673, 1761, 2317, 1499, 1500, 1679, 1680, 2283, 1807, 1711,
	1719, 2104, 2105, 1932, 1766, 1077, 496, 1062, 1724, 1749,
	1727, 2209, 2211, 2074, 2008, 1733, 1697, 1769, 1736, 1738,
	2212, 1771, 1244, 1245, 497, 1732, 2319, 2246, 2287, 165,
	1806, 2289, 1810, 1811, 1812, 2245, 165, 1785, 621, 2249,
	1315, 771, 497, 778, 2206, 1767, 1762, 1750, 497, 1801,
	1753, 1772, 1215, 1215, 1775, 1722, 1751, 1752, 497, 1754,
	1305, 1786, 577, 1723, 1537, 1827, 1433, 843, 1569, 842,
	1860, 1495, 1498, 1499, 1500, 1496, 1070, 1497, 1501, 2033,
	1434, 165, 165, 165, 165, 165, 1815, 1071, 1822, 1887,
	944, 1856, 1855, 103, 2068, 1470, 1471, 165, 165, 1824,
	1463, 1999, 1859, 1650, 2226, 1825, 1830, 2181, 1800, 1503,
	1834, 1835, 1836, 1858, 1639, 1851, 586, 587, 1731, 1439,
	589, 602, 598, 1195, 1666, 2302, 1730, 2295, 2293, 2292,
	1416, 2250, 1857, 497, 2248, 1415, 599, 1804, 1805, 1403,
	2067, 139, 144, 141, 147, 148, 149, 150, 152, 153,
	154, 155, 1921, 2004, 1971, 1849, 1850, 156, 157, 158,
	159, 1081, 1082, 601, 1591, 600, 590, 82, 2066, 497,
	1935, 1899, 1735, 1879, 1900, 2058, 2307, 2306, 1885, 1694,
	165, 1886, 1691, 1091, 1084, 1919, 2307, 1936, 1891, 2213,
	497, 1975, 1898, 1464, 585, 80, 497, 497, 85, 77,
	1, 2265, 467, 591, 1913, 1897, 1449, 1912, 1060, 480,
	2261, 1281, 1271, 1941, 2124, 2183, 1944, 1567, 804, 165,
	1938, 166, 128, 166, 1527, 1528, 166, 2278, 984, 983,
	993, 994, 986, 987, 988, 989, 990, 991, 992, 985,
	93, 1928, 995, 767, 1950, 92, 807, 905, 1592, 1898,
	165, 2116, 1802, 498, 498, 498, 1538, 1128, 1126, 1127,
	602, 598, 1749, 2057, 1963, 1959, 1965, 1125, 1966, 1949,
	1130, 498, 498, 1129, 1124, 599, 1964, 1354, 1997, 1893,
	1894, 494, 1502, 163, 165, 1117, 1085, 844, 1981, 1982,
	457, 1989, 497, 1972, 1914, 1915, 2052, 1916, 1917, 497,
	595, 596, 601, 2010, 600, 165, 1349, 1624, 1923, 1924,
	463, 1003, 1729, 1776, 620, 165, 984, 983, 993, 994,
	986, 987, 988, 989, 990, 991, 992, 985, 1993, 165,
	995, 613, 165, 1946, 1992, 2243, 2205, 2207, 2150, 2210,
	2203, 2034, 2318, 2006, 2286, 2225, 1535, 1462, 1569, 2014,
	166, 2009, 1073, 2015, 2065, 1934, 1698, 1994, 1995, 1032,
	1435, 1100, 519, 1457, 2007, 1373, 534, 531, 532, 1473,
	1741, 2028, 2031, 2032, 2056, 2029, 977, 517, 498, 2037,
	511, 166, 1092, 166, 166, 1494, 498, 1492, 1491, 1648,
	1104, 1957, 498, 1953, 1974, 2042, 1098, 510, 1477, 1536,
	1866, 2017, 956, 594, 2079, 506, 779, 2080, 1432, 2192,
	2082, 1665, 984, 983, 993, 994, 986, 987, 988, 989,
	990, 991, 992, 985, 2054, 593, 995, 2166, 621, 621,
	621, 1782, 2069, 61, 38, 501, 2313, 2078, 2077, 947,
	603, 32, 31, 30, 29, 28, 946, 948, 23, 165,
	22, 2083, 165, 165, 165, 497, 497, 21, 20, 2110,
	2090, 2084, 19, 25, 18, 17, 16, 98, 48, 45,
	43, 1749, 105, 104, 2125, 497, 497, 497, 46, 42,
	881, 27, 26, 15, 14, 13, 12, 11, 10, 2039,
	2040, 2131, 2041, 9, 5, 2043, 2035, 2045, 4, 950,
	24, 1021, 2, 2086, 0, 0, 0, 0, 0, 0,
	497, 497, 497, 165, 0, 0, 0, 0, 2152, 510,
	0, 0, 0, 0, 497, 2064, 497, 2129, 0, 0,
	0, 0, 497, 0, 2137, 0, 2162, 0, 0, 0,
	166, 2147, 497, 1944, 0, 0, 2169, 1944, 0, 2159,
	2153, 0, 2155, 1088, 2145, 2146, 0, 2161, 0, 0,
	0, 621, 0, 2163, 0, 0, 0, 1118, 0, 0,
	2157, 497, 498, 0, 497, 2182, 0, 2171, 2093, 2172,
	2095, 0, 0, 2175, 2092, 0, 0, 2178, 0, 498,
	498, 2177, 498, 0, 498, 498, 2051, 498, 498, 498,
	498, 498, 498, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 498, 0, 0, 0, 166, 0, 0, 2222,
	0, 0, 0, 2202, 0, 0, 0, 0, 0, 1944,
	0, 2214, 166, 2185, 0, 2130, 0, 497, 165, 0,
	0, 2232, 0, 498, 0, 166, 0, 0, 0, 497,
	0, 0, 0, 2132, 2133, 2134, 2135, 2136, 2148, 0,
	166, 2139, 2140, 0, 0, 0, 497, 0, 0, 2253,
	0, 0, 2240, 0, 497, 0, 166, 2247, 2260, 2228,
	0, 497, 497, 166, 2251, 0, 0, 0, 0, 0,
	0, 2264, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 498, 498, 498, 2277, 497, 2269, 0, 2291, 2298,
	2290, 0, 984, 983, 993, 994, 986, 987, 988, 989,
	990, 991, 992, 985, 2272, 2304, 995, 0, 0, 166,
	0, 0, 0, 1749, 0, 2310, 0, 0, 0, 0,
	2185, 2279, 0, 2316, 0, 0, 0, 771, 0, 0,
	0, 0, 0, 0, 0, 2325, 0, 0, 0, 0,
	1217, 0, 2328, 0, 1223, 1223, 2334, 1223, 2327, 1223,
	1223, 0, 1232, 1223, 1223, 1223, 1223, 1223, 2336, 0,
	0, 0, 2340, 0, 2341, 1217, 1217, 771, 0, 0,
	498, 0, 0, 0, 2350, 0, 0, 2050, 2351, 0,
	2353, 0, 0, 0, 2356, 2355, 0, 0, 497, 0,
	0, 0, 2359, 2049, 0, 2364, 1892, 0, 1293, 0,
	0, 0, 0, 0, 498, 498, 0, 0, 0, 0,
	0, 2273, 0, 0, 0, 166, 984, 983, 993, 994,
	986, 987, 988, 989, 990, 991, 992, 985, 0, 498,
	995, 0, 0, 0, 0, 0, 166, 0, 0, 498,
	0, 0, 0, 166, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 166, 166, 0, 621, 621, 621, 979,
	498, 982, 0, 498, 0, 0, 0, 996, 997, 998,
	999, 1000, 1001, 1002, 498, 980, 981, 978, 984, 983,
	993, 994, 986, 987, 988, 989, 990, 991, 992, 985,
	548, 34, 995, 984, 983, 993, 994, 986, 987, 988,
	989, 990, 991, 992, 985, 0, 0, 995, 0, 984,
	983, 993, 994, 986, 987, 988, 989, 990, 991, 992,
	985, 0, 0, 995, 0, 34, 0, 0, 0, 498,
	167, 168, 169, 983, 993, 994, 986, 987, 988, 989,
	990, 991, 992, 985, 0, 1409, 995, 621, 0, 0,
	0, 0, 0, 498, 0, 0, 484, 0, 0, 498,
	0, 1217, 0, 1676, 0, 0, 0, 0, 0, 0,
	584, 0, 0, 0, 0, 0, 0, 0, 0, 1441,
	1442, 0, 0, 984, 983, 993, 994, 986, 987, 988,
	989, 990, 991, 992, 985, 0, 472, 995, 0, 0,
	0, 0, 0, 498, 1474, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 1088, 0, 469, 621, 984, 983,
	993, 994, 986, 987, 988, 989, 990, 991, 992, 985,
	0, 0, 995, 0, 0, 621, 0, 0, 621, 0,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 771,
	0, 0, 0, 166, 466, 0, 0, 0, 166, 166,
	0, 0, 166, 479, 166, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 166, 477, 993,
	994, 986, 987, 988, 989, 990, 991, 992, 985, 0,
	0, 995, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 778, 166, 498, 0, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1418, 1419, 0, 0, 0, 0, 0, 771, 0,
	0, 0, 0, 0, 778, 0, 0, 0, 456, 0,
	458, 473, 0, 487, 0, 486, 462, 0, 460, 464,
	474, 465, 0, 459, 0, 470, 0, 0, 461, 475,
	476, 491, 490, 478, 0, 468, 488, 1461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 0, 0, 0,
	546, 0, 166, 166, 166, 166, 166, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 166, 0,
	0, 166, 166, 0, 0, 166, 166, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 164,
	489, 0, 453, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 482, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 498, 0, 607, 607, 0,
	166, 0, 0, 0, 0, 0, 453, 166, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 939, 939, 939, 0, 0, 0, 0, 0,
	0, 0, 166, 166, 166, 166, 166, 0, 0, 0,
	0, 0, 34, 0, 0, 0, 0, 0, 166, 166,
	0, 0, 0, 0, 0, 1004, 1006, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 498, 0, 1019, 0, 0, 0,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 0, 1034,
	1036, 1039, 1039, 1039, 1036, 1039, 1039, 1036, 1039, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 0, 0, 0, 0,
	498, 1064, 0, 0, 0, 34, 0, 0, 0, 0,
	0, 166, 1145, 0, 0, 0, 0, 0, 0, 0,
	0, 498, 0, 0, 0, 0, 0, 498, 498, 0,
	1828, 0, 1101, 0, 0, 0, 1677, 0, 0, 0,
	1678, 0, 0, 0, 0, 0, 0, 0, 1840, 0,
	166, 1685, 1686, 0, 1846, 0, 0, 1692, 0, 0,
	1695, 1696, 621, 0, 1852, 0, 0, 0, 1702, 0,
	1703, 0, 0, 1706, 1707, 1708, 1709, 1710, 0, 0,
	0, 166, 0, 0, 0, 0, 0, 1720, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1063, 0, 0, 166, 0, 0, 0, 0,
	0, 0, 0, 498, 0, 0, 0, 0, 0, 0,
	498, 0, 0, 1133, 1764, 1765, 166, 0, 0, 621,
	0, 0, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 166, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 1223, 1146, 0, 0, 0,
	0, 0, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 621, 0, 0, 1217,
	0, 0, 1948, 1223, 0, 0, 0, 0, 775, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 453, 0, 0, 453, 0, 1159, 1162, 1163,
	1164, 1165, 1166, 1167, 0, 1168, 1169, 1170, 1171, 1172,
	1147, 1148, 1149, 1150, 1131, 1132, 1160, 0, 1134, 0,
	1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 166, 166, 166, 498, 498, 161, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 771, 1838,
	0, 1217, 0, 0, 0, 1840, 498, 498, 498, 1895,
	1896, 0, 103, 0, 125, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 145, 0, 0, 0, 0,
	0, 0, 0, 0, 1161, 0, 0, 0, 0, 0,
	0, 498, 498, 498, 166, 0, 0, 0, 0, 453,
	939, 939, 939, 0, 0, 498, 135, 498, 0, 0,
	0, 124, 0, 498, 0, 607, 0, 0, 0, 0,
	0, 0, 0, 498, 0, 1947, 0, 0, 0, 142,
	453, 143, 453, 1107, 0, 0, 1198, 1199, 134, 133,
	160, 0, 0, 0, 0, 0, 1962, 0, 0, 0,
	0, 0, 498, 0, 0, 498, 0, 0, 1217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 1200, 136, 0, 1197, 0,
	130, 131, 0, 0, 0, 146, 0, 0, 0, 0,
	0, 1840, 2111, 0, 151, 0, 0, 0, 498, 166,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	498, 2126, 2127, 2128, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 498, 498, 0, 0, 2143, 2143, 2143, 0,
	0, 0, 1506, 0, 0, 0, 0, 2036, 0, 0,
	2158, 2038, 2160, 0, 0, 0, 498, 0, 1840, 453,
	0, 0, 2047, 2048, 0, 0, 0, 0, 1840, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2062, 0,
	0, 0, 882, 0, 887, 0, 0, 889, 0, 0,
	138, 0, 0, 0, 0, 2071, 2072, 1840, 0, 2076,
	621, 0, 0, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1218,
	1218, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 0, 0, 0, 0,
	0, 1269, 0, 0, 0, 0, 0, 126, 0, 498,
	127, 2114, 0, 1840, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2238, 0, 0, 0, 1314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1217, 0, 2252, 0, 0, 453, 0, 0, 0, 0,
	1840, 0, 453, 0, 0, 0, 0, 621, 621, 2142,
	0, 1337, 1338, 453, 453, 453, 453, 453, 453, 453,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1094, 0, 0, 1105, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 144, 141, 147, 148, 149, 150, 152, 153,
	154, 155, 0, 0, 0, 0, 0, 156, 157, 158,
	159, 0, 2188, 2189, 2190, 2191, 0, 2195, 0, 2196,
	2197, 2199, 0, 0, 0, 2200, 2201, 0, 0, 0,
	0, 0, 0, 0, 35, 36, 37, 72, 39, 40,
	607, 1314, 0, 0, 0, 607, 607, 0, 0, 607,
	607, 607, 0, 0, 76, 1218, 0, 0, 41, 67,
	68, 0, 65, 69, 1840, 0, 0, 0, 0, 0,
	0, 66, 2234, 0, 0, 607, 607, 607, 607, 607,
	0, 0, 0, 0, 1269, 1681, 0, 0, 584, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	71, 1314, 453, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 453, 453, 0, 1718, 0, 0, 0, 0,
	0, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 0, 0, 2311, 2312, 0, 0, 1745, 1746, 0,
	0, 1101, 1101, 1101, 1101, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1506, 0, 0,
	1101, 0, 0, 0, 1101, 0, 0, 0, 44, 47,
	50, 49, 52, 0, 64, 0, 0, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	75, 74, 0, 0, 62, 63, 51, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 1324, 57, 58,
	59, 60, 0, 0, 1328, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 1339, 1340, 1341, 1342, 1343,
	1344, 1345, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	1105, 0, 453, 0, 0, 0, 0, 453, 453, 0,
	0, 453, 0, 1651, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 0, 0, 0, 453, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1945, 0, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 607, 0, 0, 0, 0, 0, 1101,
	0, 0, 0, 0, 0, 0, 0, 1481, 0, 0,
	0, 0, 0, 607, 1485, 0, 1488, 0, 0, 0,
	161, 0, 0, 0, 0, 1507, 0, 0, 0, 453,
	0, 1194, 0, 0, 0, 0, 0, 1269, 0, 0,
	0, 0, 0, 0, 103, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 145, 0, 607,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1218, 453, 453, 453, 453, 453, 0, 0, 0, 0,
	0, 0, 0, 1763, 0, 0, 0, 453, 135, 0,
	453, 453, 0, 124, 453, 1773, 1314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 143, 0, 0, 0, 0, 1198, 1199,
	134, 133, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2053,
	0, 0, 0, 0, 0, 0, 2059, 2060, 2061, 453,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 1200, 136, 0,
	1197, 0, 130, 131, 0, 0, 1314, 146, 0, 0,
	0, 0, 0, 0, 0, 0, 151, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 453, 453, 453, 453, 453, 0, 1105, 0, 0,
	0, 0, 0, 0, 1635, 0, 0, 453, 453, 1644,
	1645, 0, 0, 1649, 0, 0, 0, 0, 0, 0,
	0, 1652, 0, 0, 0, 0, 0, 0, 1655, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1945, 138, 34, 0, 1945, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1218, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 127, 0, 0, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 34, 0, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1218, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 34, 0, 453,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 144, 141, 147, 148, 149, 150,
	152, 153, 154, 155, 0, 0, 0, 0, 0, 156,
	157, 158, 159, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 1871, 1872, 1873, 1874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1105,
	1880, 0, 0, 0, 0, 0, 0, 0, 0, 453,
	0, 0, 453, 453, 453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1269, 0, 0, 0, 0, 0, 0,
	0, 0, 1933, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1979, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2000, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 0, 2013, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2016, 0, 0,
	0, 0, 0, 0, 1218, 0, 0, 0, 0, 0,
	0, 2027, 0, 0, 2030, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2106, 0, 0, 2107, 2108, 2109, 0, 0, 749,
	735, 396, 0, 682, 752, 653, 670, 762, 673, 676,
	717, 632, 695, 319, 667, 0, 657, 628, 663, 629,
	655, 684, 224, 652, 737, 699, 751, 276, 221, 634,
	658, 333, 672, 176, 719, 372, 209, 286, 283, 403,
	235, 227, 223, 208, 260, 292, 331, 390, 325, 758,
	280, 706, 0, 381, 304, 0, 0, 0, 686, 741,
	693, 731, 681, 718, 642, 705, 753, 668, 714, 754,
	266, 207, 175, 316, 382, 239, 0, 0, 0, 167,
	168, 169, 0, 2280, 2281, 0, 0, 0, 0, 0,
	198, 0, 205, 711, 748, 665, 713, 219, 264, 226,
	218, 400, 759, 740, 0, 191, 750, 688, 716, 765,
	627, 708, 0, 630, 633, 761, 744, 661, 229, 0,
	0, 0, 0, 0, 0, 0, 685, 694, 728, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 659, 0,
	704, 0, 0, 0, 638, 631, 0, 0, 0, 0,
	683, 0, 0, 0, 641, 0, 660, 729, 0, 625,
	247, 635, 305, 0, 733, 743, 680, 432, 747, 678,
	677, 723, 639, 739, 671, 275, 637, 272, 171, 187,
	2233, 669, 315, 355, 361, 738, 656, 664, 210, 662,
	359, 329, 417, 194, 237, 352, 334, 357, 703, 721,
	358, 281, 405, 347, 415, 433, 434, 217, 309, 423,
	394, 429, 444, 188, 214, 323, 387, 420, 378, 302,
	401, 402, 271, 377, 245, 174, 279, 441, 186, 367,
	202, 179, 389, 413, 199, 370, 0, 0, 446, 181,
	411, 386, 299, 268, 269, 180, 0, 351, 222, 243,
	212, 318, 408, 409, 211, 447, 190, 428, 183, 941,
	427, 311, 404, 412, 300, 291, 182, 410, 298, 290,
	274, 233, 254, 345, 284, 346, 255, 307, 306, 308,
	0, 177, 0, 383, 421, 448, 195, 196, 197, 651,
	232, 236, 242, 244, 250, 251, 258, 277, 322, 344,
	342, 348, 734, 399, 416, 424, 431, 437, 438, 442,
	439, 440, 443, 310, 257, 379, 273, 282, 726, 764,
	328, 360, 200, 419, 380, 646, 650, 644, 645, 697,
	698, 647, 755, 756, 757, 730, 640, 0, 648, 649,
	0, 736, 745, 746, 702, 170, 184, 278, 760, 349,
	240, 445, 426, 422, 626, 643, 216, 654, 0, 0,
	666, 674, 675, 687, 689, 690, 691, 692, 701, 709,
	710, 712, 720, 722, 725, 727, 732, 742, 763, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	261, 262, 265, 270, 288, 293, 294, 295, 296, 312,
	313, 314, 317, 320, 321, 324, 326, 327, 330, 337,
	338, 339, 340, 341, 343, 350, 354, 362, 363, 364,
	365, 366, 368, 369, 373, 374, 375, 376, 384, 388,
	406, 407, 418, 430, 435, 249, 414, 436, 0, 287,
	700, 707, 289, 234, 252, 263, 715, 425, 385, 189,
	356, 241, 178, 206, 192, 213, 228, 231, 267, 297,
	303, 332, 336, 246, 225, 204, 353, 201, 371, 391,
	392, 393, 395, 301, 220, 335, 696, 724, 285, 397,
	398, 259, 749, 735, 396, 0, 682, 752, 653, 670,
	762, 673, 676, 717, 632, 695, 319, 667, 0, 657,
	628, 663, 629, 655, 684, 224, 652, 737, 699, 751,
	276, 221, 634, 658, 333, 672, 176, 719, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 758, 280, 706, 0, 381, 304, 0, 0,
	0, 686, 741, 693, 731, 681, 718, 642, 705, 753,
	668, 714, 754, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 711, 748, 665, 713,
	219, 264, 226, 218, 400, 759, 740, 0, 191, 750,
	688, 716, 765, 627, 708, 0, 630, 633, 761, 744,
	661, 229, 0, 0, 0, 0, 0, 0, 0, 685,
	694, 728, 679, 0, 0, 0, 0, 0, 0, 1937,
	0, 659, 0, 704, 0, 0, 0, 638, 631, 0,
	0, 0, 0, 683, 0, 0, 0, 641, 0, 660,
	729, 0, 625, 247, 635, 305, 0, 733, 743, 680,
	432, 747, 678, 677, 723, 639, 739, 671, 275, 637,
	272, 171, 187, 0, 669, 315, 355, 361, 738, 656,
	664, 210, 662, 359, 329, 417, 194, 237, 352, 334,
	357, 703, 721, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 941, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 651, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 734, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 726, 764, 328, 360, 200, 419, 380, 646, 650,
	644, 645, 697, 698, 647, 755, 756, 757, 730, 640,
	0, 648, 649, 0, 736, 745, 746, 702, 170, 184,
	278, 760, 349, 240, 445, 426, 422, 626, 643, 216,
	654, 0, 0, 666, 674, 675, 687, 689, 690, 691,
	692, 701, 709, 710, 712, 720, 722, 725, 727, 732,
	742, 763, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 700, 707, 289, 234, 252, 263, 715,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 696,
	724, 285, 397, 398, 259, 749, 735, 396, 0, 682,
	752, 653, 670, 762, 673, 676, 717, 632, 695, 319,
	667, 0, 657, 628, 663, 629, 655, 684, 224, 652,
	737, 699, 751, 276, 221, 634, 658, 333, 672, 176,
	719, 372, 209, 286, 283, 403, 235, 227, 223, 208,
	260, 292, 331, 390, 325, 758, 280, 706, 0, 381,
	304, 0, 0, 0, 686, 741, 693, 731, 681, 718,
	642, 705, 753, 668, 714, 754, 266, 207, 175, 316,
	382, 239, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 711,
	748, 665, 713, 219, 264, 226, 218, 400, 759, 740,
	0, 191, 750, 688, 716, 765, 627, 708, 0, 630,
	633, 761, 744, 661, 229, 0, 0, 0, 0, 0,
	0, 0, 685, 694, 728, 679, 0, 0, 0, 0,
	0, 0, 1774, 0, 659, 0, 704, 0, 0, 0,
	638, 631, 0, 0, 0, 0, 683, 0, 0, 0,
	641, 0, 660, 729, 0, 625, 247, 635, 305, 0,
	733, 743, 680, 432, 747, 678, 677, 723, 639, 739,
	671, 275, 637, 272, 171, 187, 0, 669, 315, 355,
	361, 738, 656, 664, 210, 662, 359, 329, 417, 194,
	237, 352, 334, 357, 703, 721, 358, 281, 405, 347,
	415, 433, 434, 217, 309, 423, 394, 429, 444, 188,
	214, 323, 387, 420, 378, 302, 401, 402, 271, 377,
	245, 174, 279, 441, 186, 367, 202, 179, 389, 413,
	199, 370, 0, 0, 446, 181, 411, 386, 299, 268,
	269, 180, 0, 351, 222, 243, 212, 318, 408, 409,
	211, 447, 190, 428, 183, 941, 427, 311, 404, 412,
	300, 291, 182, 410, 298, 290, 274, 233, 254, 345,
	284, 346, 255, 307, 306, 308, 0, 177, 0, 383,
	421, 448, 195, 196, 197, 651, 232, 236, 242, 244,
	250, 251, 258, 277, 322, 344, 342, 348, 734, 399,
	416, 424, 431, 437, 438, 442, 439, 440, 443, 310,
	257, 379, 273, 282, 726, 764, 328, 360, 200, 419,
	380, 646, 650, 644, 645, 697, 698, 647, 755, 756,
	757, 730, 640, 0, 648, 649, 0, 736, 745, 746,
	702, 170, 184, 278, 760, 349, 240, 445, 426, 422,
	626, 643, 216, 654, 0, 0, 666, 674, 675, 687,
	689, 690, 691, 692, 701, 709, 710, 712, 720, 722,
	725, 727, 732, 742, 763, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 261, 262, 265, 270,
	288, 293, 294, 295, 296, 312, 313, 314, 317, 320,
	321, 324, 326, 327, 330, 337, 338, 339, 340, 341,
	343, 350, 354, 362, 363, 364, 365, 366, 368, 369,
	373, 374, 375, 376, 384, 388, 406, 407, 418, 430,
	435, 249, 414, 436, 0, 287, 700, 707, 289, 234,
	252, 263, 715, 425, 385, 189, 356, 241, 178, 206,
	192, 213, 228, 231, 267, 297, 303, 332, 336, 246,
	225, 204, 353, 201, 371, 391, 392, 393, 395, 301,
	220, 335, 696, 724, 285, 397, 398, 259, 749, 735,
	396, 0, 682, 752, 653, 670, 762, 673, 676, 717,
	632, 695, 319, 667, 0, 657, 628, 663, 629, 655,
	684, 224, 652, 737, 699, 751, 276, 221, 634, 658,
	333, 672, 176, 719, 372, 209, 286, 283, 403, 235,
	227, 223, 208, 260, 292, 331, 390, 325, 758, 280,
	706, 0, 381, 304, 0, 0, 0, 686, 741, 693,
	731, 681, 718, 642, 705, 753, 668, 714, 754, 266,
	207, 175, 316, 382, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 711, 748, 665, 713, 219, 264, 226, 218,
	400, 759, 740, 0, 191, 750, 688, 716, 765, 627,
	708, 0, 630, 633, 761, 744, 661, 229, 0, 0,
	0, 0, 0, 0, 0, 685, 694, 728, 679, 0,
	0, 0, 0, 0, 0, 1483, 0, 659, 0, 704,
	0, 0, 0, 638, 631, 0, 0, 0, 0, 683,
	0, 0, 0, 641, 0, 660, 729, 0, 625, 247,
	635, 305, 0, 733, 743, 680, 432, 747, 678, 677,
	723, 639, 739, 671, 275, 637, 272, 171, 187, 0,
	669, 315, 355, 361, 738, 656, 664, 210, 662, 359,
	329, 417, 194, 237, 352, 334, 357, 703, 721, 358,
	281, 405, 347, 415, 433, 434, 217, 309, 423, 394,
	429, 444, 188, 214, 323, 387, 420, 378, 302, 401,
	402, 271, 377, 245, 174, 279, 441, 186, 367, 202,
	179, 389, 413, 199, 370, 0, 0, 446, 181, 411,
	386, 299, 268, 269, 180, 0, 351, 222, 243, 212,
	318, 408, 409, 211, 447, 190, 428, 183, 941, 427,
	311, 404, 412, 300, 291, 182, 410, 298, 290, 274,
	233, 254, 345, 284, 346, 255, 307, 306, 308, 0,
	177, 0, 383, 421, 448, 195, 196, 197, 651, 232,
	236, 242, 244, 250, 251, 258, 277, 322, 344, 342,
	348, 734, 399, 416, 424, 431, 437, 438, 442, 439,
	440, 443, 310, 257, 379, 273, 282, 726, 764, 328,
	360, 200, 419, 380, 646, 650, 644, 645, 697, 698,
	647, 755, 756, 757, 730, 640, 0, 648, 649, 0,
	736, 745, 746, 702, 170, 184, 278, 760, 349, 240,
	445, 426, 422, 626, 643, 216, 654, 0, 0, 666,
	674, 675, 687, 689, 690, 691, 692, 701, 709, 710,
	712, 720, 722, 725, 727, 732, 742, 763, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 261,
	262, 265, 270, 288, 293, 294, 295, 296, 312, 313,
	314, 317, 320, 321, 324, 326, 327, 330, 337, 338,
	339, 340, 341, 343, 350, 354, 362, 363, 364, 365,
	366, 368, 369, 373, 374, 375, 376, 384, 388, 406,
	407, 418, 430, 435, 249, 414, 436, 0, 287, 700,
	707, 289, 234, 252, 263, 715, 425, 385, 189, 356,
	241, 178, 206, 192, 213, 228, 231, 267, 297, 303,
	332, 336, 246, 225, 204, 353, 201, 371, 391, 392,
	393, 395, 301, 220, 335, 696, 724, 285, 397, 398,
	259, 749, 735, 396, 0, 682, 752, 653, 670, 762,
	673, 676, 717, 632, 695, 319, 667, 0, 657, 628,
	663, 629, 655, 684, 224, 652, 737, 699, 751, 276,
	221, 634, 658, 333, 672, 176, 719, 372, 209, 286,
	283, 403, 235, 227, 223, 208, 260, 292, 331, 390,
	325, 758, 280, 706, 0, 381, 304, 0, 0, 0,
	686, 741, 693, 731, 681, 718, 642, 705, 753, 668,
	714, 754, 266, 207, 175, 316, 382, 239, 71, 0,
	0, 167, 168, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 711, 748, 665, 713, 219,
	264, 226, 218, 400, 759, 740, 0, 191, 750, 688,
	716, 765, 627, 708, 0, 630, 633, 761, 744, 661,
	229, 0, 0, 0, 0, 0, 0, 0, 685, 694,
	728, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	659, 0, 704, 0, 0, 0, 638, 631, 0, 0,
	0, 0, 683, 0, 0, 0, 641, 0, 660, 729,
	0, 625, 247, 635, 305, 0, 733, 743, 680, 432,
	747, 678, 677, 723, 639, 739, 671, 275, 637, 272,
	171, 187, 0, 669, 315, 355, 361, 738, 656, 664,
	210, 662, 359, 329, 417, 194, 237, 352, 334, 357,
	703, 721, 358, 281, 405, 347, 415, 433, 434, 217,
	309, 423, 394, 429, 444, 188, 214, 323, 387, 420,
	378, 302, 401, 402, 271, 377, 245, 174, 279, 441,
	186, 367, 202, 179, 389, 413, 199, 370, 0, 0,
	446, 181, 411, 386, 299, 268, 269, 180, 0, 351,
	222, 243, 212, 318, 408, 409, 211, 447, 190, 428,
	183, 941, 427, 311, 404, 412, 300, 291, 182, 410,
	298, 290, 274, 233, 254, 345, 284, 346, 255, 307,
	306, 308, 0, 177, 0, 383, 421, 448, 195, 196,
	197, 651, 232, 236, 242, 244, 250, 251, 258, 277,
	322, 344, 342, 348, 734, 399, 416, 424, 431, 437,
	438, 442, 439, 440, 443, 310, 257, 379, 273, 282,
	726, 764, 328, 360, 200, 419, 380, 646, 650, 644,
	645, 697, 698, 647, 755, 756, 757, 730, 640, 0,
	648, 649, 0, 736, 745, 746, 702, 170, 184, 278,
	760, 349, 240, 445, 426, 422, 626, 643, 216, 654,
	0, 0, 666, 674, 675, 687, 689, 690, 691, 692,
	701, 709, 710, 712, 720, 722, 725, 727, 732, 742,
	763, 172, 173, 185, 193, 203, 215, 230, 238, 248,
	253, 256, 261, 262, 265, 270, 288, 293, 294, 295,
	296, 312, 313, 314, 317, 320, 321, 324, 326, 327,
	330, 337, 338, 339, 340, 341, 343, 350, 354, 362,
	363, 364, 365, 366, 368, 369, 373, 374, 375, 376,
	384, 388, 406, 407, 418, 430, 435, 249, 414, 436,
	0, 287, 700, 707, 289, 234, 252, 263, 715, 425,
	385, 189, 356, 241, 178, 206, 192, 213, 228, 231,
	267, 297, 303, 332, 336, 246, 225, 204, 353, 201,
	371, 391, 392, 393, 395, 301, 220, 335, 696, 724,
	285, 397, 398, 259, 749, 735, 396, 0, 682, 752,
	653, 670, 762, 673, 676, 717, 632, 695, 319, 667,
	0, 657, 628, 663, 629, 655, 684, 224, 652, 737,
	699, 751, 276, 221, 634, 658, 333, 672, 176, 719,
	372, 209, 286, 283, 403, 235, 227, 223, 208, 260,
	292, 331, 390, 325, 758, 280, 706, 0, 381, 304,
	0, 0, 0, 686, 741, 693, 731, 681, 718, 642,
	705, 753, 668, 714, 754, 266, 207, 175, 316, 382,
	239, 0, 0, 0, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 205, 711, 748,
	665, 713, 219, 264, 226, 218, 400, 759, 740, 0,
	191, 750, 688, 716, 765, 627, 708, 0, 630, 633,
	761, 744, 661, 229, 0, 0, 0, 0, 0, 0,
	0, 685, 694, 728, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 659, 0, 704, 0, 0, 0, 638,
	631, 0, 0, 0, 0, 683, 0, 0, 0, 641,
	0, 660, 729, 0, 625, 247, 635, 305, 0, 733,
	743, 680, 432, 747, 678, 677, 723, 639, 739, 671,
	275, 637, 272, 171, 187, 0, 669, 315, 355, 361,
	738, 656, 664, 210, 662, 359, 329, 417, 194, 237,
	352, 334, 357, 703, 721, 358, 281, 405, 347, 415,
	433, 434, 217, 309, 423, 394, 429, 444, 188, 214,
	323, 387, 420, 378, 302, 401, 402, 271, 377, 245,
	174, 279, 441, 186, 367, 202, 179, 389, 413, 199,
	370, 0, 0, 446, 181, 411, 386, 299, 268, 269,
	180, 0, 351, 222, 243, 212, 318, 408, 409, 211,
	447, 190, 428, 183, 941, 427, 311, 404, 412, 300,
	291, 182, 410, 298, 290, 274, 233, 254, 345, 284,
	346, 255, 307, 306, 308, 0, 177, 0, 383, 421,
	448, 195, 196, 197, 651, 232, 236, 242, 244, 250,
	251, 258, 277, 322, 344, 342, 348, 734, 399, 416,
	424, 431, 437, 438, 442, 439, 440, 443, 310, 257,
	379, 273, 282, 726, 764, 328, 360, 200, 419, 380,
	646, 650, 644, 645, 697, 698, 647, 755, 756, 757,
	730, 640, 0, 648, 649, 0, 736, 745, 746, 702,
	170, 184, 278, 760, 349, 240, 445, 426, 422, 626,
	643, 216, 654, 0, 0, 666, 674, 675, 687, 689,
	690, 691, 692, 701, 709, 710, 712, 720, 722, 725,
	727, 732, 742, 763, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 261, 262, 265, 270, 288,
	293, 294, 295, 296, 312, 313, 314, 317, 320, 321,
	324, 326, 327, 330, 337, 338, 339, 340, 341, 343,
	350, 354, 362, 363, 364, 365, 366, 368, 369, 373,
	374, 375, 376, 384, 388, 406, 407, 418, 430, 435,
	249, 414, 436, 0, 287, 700, 707, 289, 234, 252,
	263, 715, 425, 385, 189, 356, 241, 178, 206, 192,
	213, 228, 231, 267, 297, 303, 332, 336, 246, 225,
	204, 353, 201, 371, 391, 392, 393, 395, 301, 220,
	335, 696, 724, 285, 397, 398, 259, 749, 735, 396,
	0, 682, 752, 653, 670, 762, 673, 676, 717, 632,
	695, 319, 667, 0, 657, 628, 663, 629, 655, 684,
	224, 652, 737, 699, 751, 276, 221, 634, 658, 333,
	672, 176, 719, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 758, 280, 706,
	0, 381, 304, 0, 0, 0, 686, 741, 693, 731,
	681, 718, 642, 705, 753, 668, 714, 754, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 711, 748, 665, 713, 219, 264, 226, 218, 400,
	759, 740, 0, 766, 750, 688, 716, 765, 627, 708,
	0, 630, 633, 761, 744, 661, 229, 0, 0, 0,
	0, 0, 0, 0, 685, 694, 728, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 659, 0, 704, 0,
	0, 0, 638, 631, 0, 0, 0, 0, 683, 0,
	0, 0, 641, 0, 660, 729, 0, 625, 247, 635,
	305, 0, 733, 743, 680, 432, 747, 678, 677, 723,
	639, 739, 671, 275, 637, 272, 171, 187, 0, 669,
	315, 355, 361, 738, 656, 664, 210, 662, 359, 329,
	417, 194, 237, 352, 334, 357, 703, 721, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 636, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 651, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	734, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 624, 618, 617, 273, 282, 726, 764, 328, 360,
	200, 419, 380, 646, 650, 644, 645, 697, 698, 647,
	755, 756, 757, 730, 640, 0, 648, 649, 0, 736,
	745, 746, 702, 170, 184, 278, 760, 349, 240, 445,
	426, 422, 626, 643, 216, 654, 0, 0, 666, 674,
	675, 687, 689, 690, 691, 692, 701, 709, 710, 712,
	720, 722, 725, 727, 732, 742, 763, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 700, 707,
	289, 234, 252, 263, 715, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 696, 724, 285, 397, 398, 259,
	749, 735, 396, 0, 682, 752, 653, 670, 762, 673,
	676, 717, 632, 695, 319, 667, 0, 657, 628, 663,
	629, 655, 684, 224, 652, 737, 699, 751, 276, 221,
	634, 658, 333, 672, 176, 719, 372, 209, 286, 283,
	403, 235, 227, 223, 208, 260, 292, 331, 390, 325,
	758, 280, 706, 0, 381, 304, 0, 0, 0, 686,
	741, 693, 731, 681, 718, 642, 705, 753, 668, 714,
	754, 266, 207, 175, 316, 382, 239, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 711, 748, 665, 713, 219, 264,
	226, 218, 400, 759, 740, 0, 766, 750, 688, 716,
	765, 627, 708, 0, 630, 633, 761, 744, 661, 229,
	0, 0, 0, 0, 0, 0, 0, 685, 694, 728,
	679, 0, 0, 0, 0, 0, 0, 0, 0, 659,
	0, 704, 0, 0, 0, 638, 631, 0, 0, 0,
	0, 683, 0, 0, 0, 641, 0, 660, 729, 0,
	625, 247, 635, 305, 0, 733, 743, 680, 432, 747,
	678, 677, 723, 639, 739, 671, 275, 637, 272, 171,
	187, 0, 669, 315, 355, 361, 738, 656, 664, 210,
	662, 359, 329, 417, 194, 237, 352, 334, 357, 703,
	721, 358, 281, 405, 347, 415, 433, 434, 217, 309,
	423, 394, 429, 444, 188, 214, 323, 387, 420, 378,
	302, 401, 402, 271, 377, 245, 174, 279, 441, 186,
	367, 202, 179, 389, 1109, 199, 370, 0, 0, 446,
	181, 411, 386, 299, 268, 269, 180, 0, 351, 222,
	243, 212, 318, 408, 409, 211, 447, 190, 428, 183,
	636, 427, 311, 404, 412, 300, 291, 182, 410, 298,
	290, 274, 233, 254, 345, 284, 346, 255, 307, 306,
	308, 0, 177, 0, 383, 421, 448, 195, 196, 197,
	651, 232, 236, 242, 244, 250, 251, 258, 277, 322,
	344, 342, 348, 734, 399, 416, 424, 431, 437, 438,
	442, 439, 440, 443, 624, 618, 617, 273, 282, 726,
	764, 328, 360, 200, 419, 380, 646, 650, 644, 645,
	697, 698, 647, 755, 756, 757, 730, 640, 0, 648,
	649, 0, 736, 745, 746, 702, 170, 184, 278, 760,
	349, 240, 445, 426, 422, 626, 643, 216, 654, 0,
	0, 666, 674, 675, 687, 689, 690, 691, 692, 701,
	709, 710, 712, 720, 722, 725, 727, 732, 742, 763,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 261, 262, 265, 270, 288, 293, 294, 295, 296,
	312, 313, 314, 317, 320, 321, 324, 326, 327, 330,
	337, 338, 339, 340, 341, 343, 350, 354, 362, 363,
	364, 365, 366, 368, 369, 373, 374, 375, 376, 384,
	388, 406, 407, 418, 430, 435, 249, 414, 436, 0,
	287, 700, 707, 289, 234, 252, 263, 715, 425, 385,
	189, 356, 241, 178, 206, 192, 213, 228, 231, 267,
	297, 303, 332, 336, 246, 225, 204, 353, 201, 371,
	391, 392, 393, 395, 301, 220, 335, 696, 724, 285,
	397, 398, 259, 749, 735, 396, 0, 682, 752, 653,
	670, 762, 673, 676, 717, 632, 695, 319, 667, 0,
	657, 628, 663, 629, 655, 684, 224, 652, 737, 699,
	751, 276, 221, 634, 658, 333, 672, 176, 719, 372,
	209, 286, 283, 403, 235, 227, 223, 208, 260, 292,
	331, 390, 325, 758, 280, 706, 0, 381, 304, 0,
	0, 0, 686, 741, 693, 731, 681, 718, 642, 705,
	753, 668, 714, 754, 266, 207, 175, 316, 382, 239,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 711, 748, 665,
	713, 219, 264, 226, 218, 400, 759, 740, 0, 766,
	750, 688, 716, 765, 627, 708, 0, 630, 633, 761,
	744, 661, 229, 0, 0, 0, 0, 0, 0, 0,
	685, 694, 728, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 659, 0, 704, 0, 0, 0, 638, 631,
	0, 0, 0, 0, 683, 0, 0, 0, 641, 0,
	660, 729, 0, 625, 247, 635, 305, 0, 733, 743,
	680, 432, 747, 678, 677, 723, 639, 739, 671, 275,
	637, 272, 171, 187, 0, 669, 315, 355, 361, 738,
	656, 664, 210, 662, 359, 329, 417, 194, 237, 352,
	334, 357, 703, 721, 358, 281, 405, 347, 415, 433,
	434, 217, 309, 423, 394, 429, 444, 188, 214, 323,
	387, 420, 378, 302, 401, 402, 271, 377, 245, 174,
	279, 441, 186, 367, 202, 179, 389, 615, 199, 370,
	0, 0, 446, 181, 411, 386, 299, 268, 269, 180,
	0, 351, 222, 243, 212, 318, 408, 409, 211, 447,
	190, 428, 183, 636, 427, 311, 404, 412, 300, 291,
	182, 410, 298, 290, 274, 233, 254, 345, 284, 346,
	255, 307, 306, 308, 0, 177, 0, 383, 421, 448,
	195, 196, 197, 651, 232, 236, 242, 244, 250, 251,
	258, 277, 322, 344, 342, 348, 734, 399, 416, 424,
	431, 437, 438, 442, 439, 440, 443, 624, 618, 617,
	273, 282, 726, 764, 328, 360, 200, 419, 380, 646,
	650, 644, 645, 697, 698, 647, 755, 756, 757, 730,
	640, 0, 648, 649, 0, 736, 745, 746, 702, 170,
	184, 278, 760, 349, 240, 445, 426, 422, 626, 643,
	216, 654, 0, 0, 666, 674, 675, 687, 689, 690,
	691, 692, 701, 709, 710, 712, 720, 722, 725, 727,
	732, 742, 763, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 261, 262, 265, 270, 288, 293,
	294, 295, 296, 312, 313, 314, 317, 320, 321, 324,
	326, 327, 330, 337, 338, 339, 340, 341, 343, 350,
	354, 362, 363, 364, 365, 366, 368, 369, 373, 374,
	375, 376, 384, 388, 406, 407, 418, 430, 435, 249,
	414, 436, 0, 287, 700, 707, 289, 234, 252, 263,
	715, 425, 385, 189, 356, 241, 178, 206, 192, 213,
	228, 231, 267, 297, 303, 332, 336, 246, 225, 204,
	353, 201, 371, 391, 392, 393, 395, 301, 220, 335,
	696, 724, 285, 397, 398, 259, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 1411, 0, 515, 0, 0, 0, 224, 514, 0,
	0, 0, 276, 221, 0, 1412, 333, 0, 176, 0,
	372, 209, 286, 283, 403, 235, 227, 223, 208, 260,
	292, 331, 390, 325, 558, 280, 0, 0, 381, 304,
	0, 0, 0, 0, 0, 549, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 207, 175, 316, 382,
	239, 71, 0, 0, 167, 168, 169, 536, 535, 538,
	539, 540, 541, 0, 0, 198, 537, 205, 542, 543,
	544, 0, 219, 264, 226, 218, 400, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 512, 529, 0, 557,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 605, 0, 0, 0, 573, 0, 528, 0, 0,
	521, 522, 524, 523, 525, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 305, 0, 572,
	0, 0, 432, 0, 0, 570, 0, 0, 0, 0,
	275, 0, 272, 171, 187, 0, 0, 315, 355, 361,
	0, 0, 0, 210, 0, 359, 329, 417, 194, 237,
	352, 334, 357, 0, 0, 358, 281, 405, 347, 415,
	433, 434, 217, 309, 423, 394, 429, 444, 188, 214,
	323, 387, 420, 378, 302, 401, 402, 271, 377, 245,
	174, 279, 441, 186, 367, 202, 179, 389, 413, 199,
	370, 0, 0, 446, 181, 411, 386, 299, 268, 269,
	180, 0, 351, 222, 243, 212, 318, 408, 409, 211,
	447, 190, 428, 183, 0, 427, 311, 404, 412, 300,
	291, 182, 410, 298, 290, 274, 233, 254, 345, 284,
	346, 255, 307, 306, 308, 0, 177, 0, 383, 421,
	448, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 277, 322, 344, 342, 348, 0, 399, 416,
	424, 431, 437, 438, 442, 439, 440, 443, 310, 257,
	379, 273, 282, 0, 0, 328, 360, 200, 419, 380,
	560, 571, 566, 567, 564, 565, 559, 563, 562, 561,
	574, 551, 552, 553, 554, 556, 0, 568, 569, 555,
	170, 184, 278, 0, 349, 240, 445, 426, 422, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 261, 262, 265, 270, 288,
	293, 294, 295, 296, 312, 313, 314, 317, 320, 321,
	324, 326, 327, 330, 337, 338, 339, 340, 341, 343,
	350, 354, 362, 363, 364, 365, 366, 368, 369, 373,
	374, 375, 376, 384, 388, 406, 407, 418, 430, 435,
	249, 414, 436, 0, 287, 0, 0, 289, 234, 252,
	263, 0, 425, 385, 189, 356, 241, 178, 206, 192,
	213, 228, 231, 267, 297, 303, 332, 336, 246, 225,
	204, 353, 201, 371, 391, 392, 393, 395, 301, 220,
	335, 396, 0, 285, 397, 398, 259, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 515, 0,
	0, 0, 224, 514, 0, 0, 0, 276, 221, 0,
	0, 333, 0, 176, 0, 372, 209, 286, 283, 403,
	235, 227, 223, 208, 260, 292, 331, 390, 325, 558,
	280, 0, 0, 381, 304, 0, 0, 0, 0, 0,
	549, 550, 0, 0, 0, 0, 0, 0, 1522, 0,
	266, 207, 175, 316, 382, 239, 71, 0, 0, 167,
	168, 169, 536, 535, 538, 539, 540, 541, 0, 0,
	198, 537, 205, 542, 543, 544, 1523, 219, 264, 226,
	218, 400, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 512, 529, 0, 557, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 0, 0, 0, 0,
	573, 0, 528, 0, 0, 521, 522, 524, 523, 525,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 305, 0, 572, 0, 0, 432, 0, 0,
	570, 0, 0, 0, 0, 275, 0, 272, 171, 187,
	0, 0, 315, 355, 361, 0, 0, 0, 210, 0,
	359, 329, 417, 194, 237, 352, 334, 357, 0, 0,
	358, 281, 405, 347, 415, 433, 434, 217, 309, 423,
	394, 429, 444, 188, 214, 323, 387, 420, 378, 302,
	401, 402, 271, 377, 245, 174, 279, 441, 186, 367,
	202, 179, 389, 413, 199, 370, 0, 0, 446, 181,
	411, 386, 299, 268, 269, 180, 0, 351, 222, 243,
	212, 318, 408, 409, 211, 447, 190, 428, 183, 0,
	427, 311, 404, 412, 300, 291, 182, 410, 298, 290,
	274, 233, 254, 345, 284, 346, 255, 307, 306, 308,
	0, 177, 0, 383, 421, 448, 195, 196, 197, 0,
	232, 236, 242, 244, 250, 251, 258, 277, 322, 344,
	342, 348, 0, 399, 416, 424, 431, 437, 438, 442,
	439, 440, 443, 310, 257, 379, 273, 282, 0, 0,
	328, 360, 200, 419, 380, 560, 571, 566, 567, 564,
	565, 559, 563, 562, 561, 574, 551, 552, 553, 554,
	556, 0, 568, 569, 555, 170, 184, 278, 0, 349,
	240, 445, 426, 422, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	261, 262, 265, 270, 288, 293, 294, 295, 296, 312,
	313, 314, 317, 320, 321, 324, 326, 327, 330, 337,
	338, 339, 340, 341, 343, 350, 354, 362, 363, 364,
	365, 366, 368, 369, 373, 374, 375, 376, 384, 388,
	406, 407, 418, 430, 435, 249, 414, 436, 0, 287,
	0, 0, 289, 234, 252, 263, 0, 425, 385, 189,
	356, 241, 178, 206, 192, 213, 228, 231, 267, 297,
	303, 332, 336, 246, 225, 204, 353, 201, 371, 391,
	392, 393, 395, 301, 220, 335, 396, 0, 285, 397,
	398, 259, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 515, 0, 0, 0, 224, 514, 0,
	0, 0, 276, 221, 0, 0, 333, 0, 176, 0,
	372, 209, 286, 283, 403, 235, 227, 223, 208, 260,
	292, 331, 390, 325, 558, 280, 0, 0, 381, 304,
	0, 0, 0, 0, 0, 549, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 207, 175, 316, 382,
	239, 71, 0, 592, 167, 168, 169, 536, 535, 538,
	539, 540, 541, 0, 0, 198, 537, 205, 542, 543,
	544, 0, 219, 264, 226, 218, 400, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 512, 529, 0, 557,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 0, 0, 0, 0, 573, 0, 528, 0, 0,
	521, 522, 524, 523, 525, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 305, 0, 572,
	0, 0, 432, 0, 0, 570, 0, 0, 0, 0,
	275, 0, 272, 171, 187, 0, 0, 315, 355, 361,
	0, 0, 0, 210, 0, 359, 329, 417, 194, 237,
	352, 334, 357, 0, 0, 358, 281, 405, 347, 415,
	433, 434, 217, 309, 423, 394, 429, 444, 188, 214,
	323, 387, 420, 378, 302, 401, 402, 271, 377, 245,
	174, 279, 441, 186, 367, 202, 179, 389, 413, 199,
	370, 0, 0, 446, 181, 411, 386, 299, 268, 269,
	180, 0, 351, 222, 243, 212, 318, 408, 409, 211,
	447, 190, 428, 183, 0, 427, 311, 404, 412, 300,
	291, 182, 410, 298, 290, 274, 233, 254, 345, 284,
	346, 255, 307, 306, 308, 0, 177, 0, 383, 421,
	448, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 277, 322, 344, 342, 348, 0, 399, 416,
	424, 431, 437, 438, 442, 439, 440, 443, 310, 257,
	379, 273, 282, 0, 0, 328, 360, 200, 419, 380,
	560, 571, 566, 567, 564, 565, 559, 563, 562, 561,
	574, 551, 552, 553, 554, 556, 0, 568, 569, 555,
	170, 184, 278, 0, 349, 240, 445, 426, 422, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 261, 262, 265, 270, 288,
	293, 294, 295, 296, 312, 313, 314, 317, 320, 321,
	324, 326, 327, 330, 337, 338, 339, 340, 341, 343,
	350, 354, 362, 363, 364, 365, 366, 368, 369, 373,
	374, 375, 376, 384, 388, 406, 407, 418, 430, 435,
	249, 414, 436, 0, 287, 0, 0, 289, 234, 252,
	263, 0, 425, 385, 189, 356, 241, 178, 206, 192,
	213, 228, 231, 267, 297, 303, 332, 336, 246, 225,
	204, 353, 201, 371, 391, 392, 393, 395, 301, 220,
	335, 396, 0, 285, 397, 398, 259, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 515, 0,
	0, 0, 224, 514, 0, 0, 0, 276, 221, 0,
	0, 333, 0, 176, 0, 372, 209, 286, 283, 403,
	235, 227, 223, 208, 260, 292, 331, 390, 325, 558,
	280, 0, 0, 381, 304, 0, 0, 0, 0, 0,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 207, 175, 316, 382, 239, 71, 0, 0, 167,
	168, 169, 536, 535, 538, 539, 540, 541, 0, 0,
	198, 537, 205, 542, 543, 544, 0, 219, 264, 226,
	218, 400, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 512, 529, 0, 557, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 605, 0, 0, 0,
	573, 0, 528, 0, 0, 521, 522, 524, 523, 525,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 305, 0, 572, 0, 0, 432, 0, 0,
	570, 0, 0, 0, 0, 275, 0, 272, 171, 187,
	0, 0, 315, 355, 361, 0, 0, 0, 210, 0,
	359, 329, 417, 194, 237, 352, 334, 357, 0, 0,
	358, 281, 405, 347, 415, 433, 434, 217, 309, 423,
	394, 429, 444, 188, 214, 323, 387, 420, 378, 302,
	401, 402, 271, 377, 245, 174, 279, 441, 186, 367,
	202, 179, 389, 413, 199, 370, 0, 0, 446, 181,
	411, 386, 299, 268, 269, 180, 0, 351, 222, 243,
	212, 318, 408, 409, 211, 447, 190, 428, 183, 0,
	427, 311, 404, 412, 300, 291, 182, 410, 298, 290,
	274, 233, 254, 345, 284, 346, 255, 307, 306, 308,
	0, 177, 0, 383, 421, 448, 195, 196, 197, 0,
	232, 236, 242, 244, 250, 251, 258, 277, 322, 344,
	342, 348, 0, 399, 416, 424, 431, 437, 438, 442,
	439, 440, 443, 310, 257, 379, 273, 282, 0, 0,
	328, 360, 200, 419, 380, 560, 571, 566, 567, 564,
	565, 559, 563, 562, 561, 574, 551, 552, 553, 554,
	556, 0, 568, 569, 555, 170, 184, 278, 0, 349,
	240, 445, 426, 422, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	261, 262, 265, 270, 288, 293, 294, 295, 296, 312,
	313, 314, 317, 320, 321, 324, 326, 327, 330, 337,
	338, 339, 340, 341, 343, 350, 354, 362, 363, 364,
	365, 366, 368, 369, 373, 374, 375, 376, 384, 388,
	406, 407, 418, 430, 435, 249, 414, 436, 0, 287,
	0, 0, 289, 234, 252, 263, 0, 425, 385, 189,
	356, 241, 178, 206, 192, 213, 228, 231, 267, 297,
	303, 332, 336, 246, 225, 204, 353, 201, 371, 391,
	392, 393, 395, 301, 220, 335, 396, 0, 285, 397,
	398, 259, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 515, 0, 0, 0, 224, 514, 0,
	0, 0, 276, 221, 0, 0, 333, 0, 176, 0,
	372, 209, 286, 283, 403, 235, 227, 223, 208, 260,
	292, 331, 390, 325, 558, 280, 0, 0, 381, 304,
	0, 0, 0, 0, 0, 549, 550, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 207, 175, 316, 382,
	239, 71, 0, 0, 167, 168, 169, 536, 1429, 538,
	539, 540, 541, 0, 0, 198, 537, 205, 542, 543,
	544, 0, 219, 264, 226, 218, 400, 0, 0, 0,
	191, 0, 0, 0, 0, 0, 512, 529, 0, 557,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 526,
	527, 605, 0, 0, 0, 573, 0, 528, 0, 0,
	521, 522, 524, 523, 525, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 247, 0, 305, 0, 572,
	0, 0, 432, 0, 0, 570, 0, 0, 0, 0,
	275, 0, 272, 171, 187, 0, 0, 315, 355, 361,
	0, 0, 0, 210, 0, 359, 329, 417, 194, 237,
	352, 334, 357, 0, 0, 358, 281, 405, 347, 415,
	433, 434, 217, 309, 423, 394, 429, 444, 188, 214,
	323, 387, 420, 378, 302, 401, 402, 271, 377, 245,
	174, 279, 441, 186, 367, 202, 179, 389, 413, 199,
	370, 0, 0, 446, 181, 411, 386, 299, 268, 269,
	180, 0, 351, 222, 243, 212, 318, 408, 409, 211,
	447, 190, 428, 183, 0, 427, 311, 404, 412, 300,
	291, 182, 410, 298, 290, 274, 233, 254, 345, 284,
	346, 255, 307, 306, 308, 0, 177, 0, 383, 421,
	448, 195, 196, 197, 0, 232, 236, 242, 244, 250,
	251, 258, 277, 322, 344, 342, 348, 0, 399, 416,
	424, 431, 437, 438, 442, 439, 440, 443, 310, 257,
	379, 273, 282, 0, 0, 328, 360, 200, 419, 380,
	560, 571, 566, 567, 564, 565, 559, 563, 562, 561,
	574, 551, 552, 553, 554, 556, 0, 568, 569, 555,
	170, 184, 278, 0, 349, 240, 445, 426, 422, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 173, 185, 193, 203, 215,
	230, 238, 248, 253, 256, 261, 262, 265, 270, 288,
	293, 294, 295, 296, 312, 313, 314, 317, 320, 321,
	324, 326, 327, 330, 337, 338, 339, 340, 341, 343,
	350, 354, 362, 363, 364, 365, 366, 368, 369, 373,
	374, 375, 376, 384, 388, 406, 407, 418, 430, 435,
	249, 414, 436, 0, 287, 0, 0, 289, 234, 252,
	263, 0, 425, 385, 189, 356, 241, 178, 206, 192,
	213, 228, 231, 267, 297, 303, 332, 336, 246, 225,
	204, 353, 201, 371, 391, 392, 393, 395, 301, 220,
	335, 396, 0, 285, 397, 398, 259, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 515, 0,
	0, 0, 224, 514, 0, 0, 0, 276, 221, 0,
	0, 333, 0, 176, 0, 372, 209, 286, 283, 403,
	235, 227, 223, 208, 260, 292, 331, 390, 325, 558,
	280, 0, 0, 381, 304, 0, 0, 0, 0, 0,
	549, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 207, 175, 316, 382, 239, 71, 0, 0, 167,
	168, 169, 536, 1426, 538, 539, 540, 541, 0, 0,
	198, 537, 205, 542, 543, 544, 0, 219, 264, 226,
	218, 400, 0, 0, 0, 191, 0, 0, 0, 0,
	0, 512, 529, 0, 557, 0, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 526, 527, 605, 0, 0, 0,
	573, 0, 528, 0, 0, 521, 522, 524, 523, 525,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	247, 0, 305, 0, 572, 0, 0, 432, 0, 0,
	570, 0, 0, 0, 0, 275, 0, 272, 171, 187,
	0, 0, 315, 355, 361, 0, 0, 0, 210, 0,
	359, 329, 417, 194, 237, 352, 334, 357, 0, 0,
	358, 281, 405, 347, 415, 433, 434, 217, 309, 423,
	394, 429, 444, 188, 214, 323, 387, 420, 378, 302,
	401, 402, 271, 377, 245, 174, 279, 441, 186, 367,
	202, 179, 389, 413, 199, 370, 0, 0, 446, 181,
	411, 386, 299, 268, 269, 180, 0, 351, 222, 243,
	212, 318, 408, 409, 211, 447, 190, 428, 183, 0,
	427, 311, 404, 412, 300, 291, 182, 410, 298, 290,
	274, 233, 254, 345, 284, 346, 255, 307, 306, 308,
	0, 177, 0, 383, 421, 448, 195, 196, 197, 0,
	232, 236, 242, 244, 250, 251, 258, 277, 322, 344,
	342, 348, 0, 399, 416, 424, 431, 437, 438, 442,
	439, 440, 443, 310, 257, 379, 273, 282, 0, 0,
	328, 360, 200, 419, 380, 560, 571, 566, 567, 564,
	565, 559, 563, 562, 561, 574, 551, 552, 553, 554,
	556, 0, 568, 569, 555, 170, 184, 278, 0, 349,
	240, 445, 426, 422, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	173, 185, 193, 203, 215, 230, 238, 248, 253, 256,
	261, 262, 265, 270, 288, 293, 294, 295, 296, 312,
	313, 314, 317, 320, 321, 324, 326, 327, 330, 337,
	338, 339, 340, 341, 343, 350, 354, 362, 363, 364,
	365, 366, 368, 369, 373, 374, 375, 376, 384, 388,
	406, 407, 418, 430, 435, 249, 414, 436, 0, 287,
	0, 0, 289, 234, 252, 263, 0, 425, 385, 189,
	356, 241, 178, 206, 192, 213, 228, 231, 267, 297,
	303, 332, 336, 246, 225, 204, 353, 201, 371, 391,
	392, 393, 395, 301, 220, 335, 585, 396, 285, 397,
	398, 259, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 515, 0, 0, 0, 224, 514,
	0, 0, 0, 276, 221, 0, 0, 333, 0, 176,
	0, 372, 209, 286, 283, 403, 235, 227, 223, 208,
	260, 292, 331, 390, 325, 558, 280, 0, 0, 381,
	304, 0, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 207, 175, 316,
	382, 239, 71, 0, 0, 167, 168, 169, 536, 535,
	538, 539, 540, 541, 0, 0, 198, 537, 205, 542,
	543, 544, 0, 219, 264, 226, 218, 400, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 512, 529, 0,
	557, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 0, 573, 0, 528, 0,
	0, 521, 522, 524, 523, 525, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 305, 0,
	572, 0, 0, 432, 0, 0, 570, 0, 0, 0,
	0, 275, 0, 272, 171, 187, 0, 0, 315, 355,
	361, 0, 0, 0, 210, 0, 359, 329, 417, 194,
	237, 352, 334, 357, 0, 0, 358, 281, 405, 347,
	415, 433, 434, 217, 309, 423, 394, 429, 444, 188,
	214, 323, 387, 420, 378, 302, 401, 402, 271, 377,
	245, 174, 279, 441, 186, 367, 202, 179, 389, 413,
	199, 370, 0, 0, 446, 181, 411, 386, 299, 268,
	269, 180, 0, 351, 222, 243, 212, 318, 408, 409,
	211, 447, 190, 428, 183, 0, 427, 311, 404, 412,
	300, 291, 182, 410, 298, 290, 274, 233, 254, 345,
	284, 346, 255, 307, 306, 308, 0, 177, 0, 383,
	421, 448, 195, 196, 197, 0, 232, 236, 242, 244,
	250, 251, 258, 277, 322, 344, 342, 348, 0, 399,
	416, 424, 431, 437, 438, 442, 439, 440, 443, 310,
	257, 379, 273, 282, 0, 0, 328, 360, 200, 419,
	380, 560, 571, 566, 567, 564, 565, 559, 563, 562,
	561, 574, 551, 552, 553, 554, 556, 0, 568, 569,
	555, 170, 184, 278, 0, 349, 240, 445, 426, 422,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 261, 262, 265, 270,
	288, 293, 294, 295, 296, 312, 313, 314, 317, 320,
	321, 324, 326, 327, 330, 337, 338, 339, 340, 341,
	343, 350, 354, 362, 363, 364, 365, 366, 368, 369,
	373, 374, 375, 376, 384, 388, 406, 407, 418, 430,
	435, 249, 414, 436, 0, 287, 0, 0, 289, 234,
	252, 263, 0, 425, 385, 189, 356, 241, 178, 206,
	192, 213, 228, 231, 267, 297, 303, 332, 336, 246,
	225, 204, 353, 201, 371, 391, 392, 393, 395, 301,
	220, 335, 396, 0, 285, 397, 398, 259, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 515,
	0, 0, 0, 224, 514, 0, 0, 0, 276, 221,
	0, 0, 333, 0, 176, 0, 372, 209, 286, 283,
	403, 235, 227, 223, 208, 260, 292, 331, 390, 325,
	558, 280, 0, 0, 381, 304, 0, 0, 0, 0,
	0, 549, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 207, 175, 316, 382, 239, 71, 0, 0,
	167, 168, 169, 536, 535, 538, 539, 540, 541, 0,
	0, 198, 537, 205, 542, 543, 544, 0, 219, 264,
	226, 218, 400, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 512, 529, 0, 557, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	0, 573, 0, 528, 0, 0, 521, 522, 524, 523,
	525, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 305, 0, 572, 0, 0, 432, 0,
	0, 570, 0, 0, 0, 0, 275, 0, 272, 171,
	187, 0, 0, 315, 355, 361, 0, 0, 0, 210,
	0, 359, 329, 417, 194, 237, 352, 334, 357, 0,
	0, 358, 281, 405, 347, 415, 433, 434, 217, 309,
	423, 394, 429, 444, 188, 214, 323, 387, 420, 378,
	302, 401, 402, 271, 377, 245, 174, 279, 441, 186,
	367, 202, 179, 389, 413, 199, 370, 0, 0, 446,
	181, 411, 386, 299, 268, 269, 180, 0, 351, 222,
	243, 212, 318, 408, 409, 211, 447, 190, 428, 183,
	0, 427, 311, 404, 412, 300, 291, 182, 410, 298,
	290, 274, 233, 254, 345, 284, 346, 255, 307, 306,
	308, 0, 177, 0, 383, 421, 448, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 277, 322,
	344, 342, 348, 0, 399, 416, 424, 431, 437, 438,
	442, 439, 440, 443, 310, 257, 379, 273, 282, 0,
	0, 328, 360, 200, 419, 380, 560, 571, 566, 567,
	564, 565, 559, 563, 562, 561, 574, 551, 552, 553,
	554, 556, 0, 568, 569, 555, 170, 184, 278, 0,
	349, 240, 445, 426, 422, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 261, 262, 265, 270, 288, 293, 294, 295, 296,
	312, 313, 314, 317, 320, 321, 324, 326, 327, 330,
	337, 338, 339, 340, 341, 343, 350, 354, 362, 363,
	364, 365, 366, 368, 369, 373, 374, 375, 376, 384,
	388, 406, 407, 418, 430, 435, 249, 414, 436, 0,
	287, 0, 0, 289, 234, 252, 263, 0, 425, 385,
	189, 356, 241, 178, 206, 192, 213, 228, 231, 267,
	297, 303, 332, 336, 246, 225, 204, 353, 201, 371,
	391, 392, 393, 395, 301, 220, 335, 396, 0, 285,
	397, 398, 259, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 276, 221, 0, 0, 333, 0, 176,
	0, 372, 209, 286, 283, 403, 235, 227, 223, 208,
	260, 292, 331, 390, 325, 558, 280, 0, 0, 381,
	304, 0, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 207, 175, 316,
	382, 239, 71, 0, 0, 167, 168, 169, 536, 535,
	538, 539, 540, 541, 0, 0, 198, 537, 205, 542,
	543, 544, 0, 219, 264, 226, 218, 400, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 529, 0,
	557, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 0, 573, 0, 528, 0,
	0, 521, 522, 524, 523, 525, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 305, 0,
	572, 0, 0, 432, 0, 0, 570, 0, 0, 0,
	0, 275, 0, 272, 171, 187, 0, 0, 315, 355,
	361, 0, 0, 0, 210, 0, 359, 329, 417, 194,
	237, 352, 334, 357, 2274, 0, 358, 281, 405, 347,
	415, 433, 434, 217, 309, 423, 394, 429, 444, 188,
	214, 323, 387, 420, 378, 302, 401, 402, 271, 377,
	245, 174, 279, 441, 186, 367, 202, 179, 389, 413,
	199, 370, 0, 0, 446, 181, 411, 386, 299, 268,
	269, 180, 0, 351, 222, 243, 212, 318, 408, 409,
	211, 447, 190, 428, 183, 0, 427, 311, 404, 412,
	300, 291, 182, 410, 298, 290, 274, 233, 254, 345,
	284, 346, 255, 307, 306, 308, 0, 177, 0, 383,
	421, 448, 195, 196, 197, 0, 232, 236, 242, 244,
	250, 251, 258, 277, 322, 344, 342, 348, 0, 399,
	416, 424, 431, 437, 438, 442, 439, 440, 443, 310,
	257, 379, 273, 282, 0, 0, 328, 360, 200, 419,
	380, 560, 571, 566, 567, 564, 565, 559, 563, 562,
	561, 574, 551, 552, 553, 554, 556, 0, 568, 569,
	555, 170, 184, 278, 0, 349, 240, 445, 426, 422,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 261, 262, 265, 270,
	288, 293, 294, 295, 296, 312, 313, 314, 317, 320,
	321, 324, 326, 327, 330, 337, 338, 339, 340, 341,
	343, 350, 354, 362, 363, 364, 365, 366, 368, 369,
	373, 374, 375, 376, 384, 388, 406, 407, 418, 430,
	435, 249, 414, 436, 0, 287, 0, 0, 289, 234,
	252, 263, 0, 425, 385, 189, 356, 241, 178, 206,
	192, 213, 228, 231, 267, 297, 303, 332, 336, 246,
	225, 204, 353, 201, 371, 391, 392, 393, 395, 301,
	220, 335, 396, 0, 285, 397, 398, 259, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 276, 221,
	0, 0, 333, 0, 176, 0, 372, 209, 286, 283,
	403, 235, 227, 223, 208, 260, 292, 331, 390, 325,
	558, 280, 0, 0, 381, 304, 0, 0, 0, 0,
	0, 549, 550, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 207, 175, 316, 382, 239, 71, 0, 592,
	167, 168, 169, 536, 535, 538, 539, 540, 541, 0,
	0, 198, 537, 205, 542, 543, 544, 0, 219, 264,
	226, 218, 400, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 529, 0, 557, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 526, 527, 0, 0, 0,
	0, 573, 0, 528, 0, 0, 521, 522, 524, 523,
	525, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 305, 0, 572, 0, 0, 432, 0,
	0, 570, 0, 0, 0, 0, 275, 0, 272, 171,
	187, 0, 0, 315, 355, 361, 0, 0, 0, 210,
	0, 359, 329, 417, 194, 237, 352, 334, 357, 0,
	0, 358, 281, 405, 347, 415, 433, 434, 217, 309,
	423, 394, 429, 444, 188, 214, 323, 387, 420, 378,
	302, 401, 402, 271, 377, 245, 174, 279, 441, 186,
	367, 202, 179, 389, 413, 199, 370, 0, 0, 446,
	181, 411, 386, 299, 268, 269, 180, 0, 351, 222,
	243, 212, 318, 408, 409, 211, 447, 190, 428, 183,
	0, 427, 311, 404, 412, 300, 291, 182, 410, 298,
	290, 274, 233, 254, 345, 284, 346, 255, 307, 306,
	308, 0, 177, 0, 383, 421, 448, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 277, 322,
	344, 342, 348, 0, 399, 416, 424, 431, 437, 438,
	442, 439, 440, 443, 310, 257, 379, 273, 282, 0,
	0, 328, 360, 200, 419, 380, 560, 571, 566, 567,
	564, 565, 559, 563, 562, 561, 574, 551, 552, 553,
	554, 556, 0, 568, 569, 555, 170, 184, 278, 0,
	349, 240, 445, 426, 422, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 261, 262, 265, 270, 288, 293, 294, 295, 296,
	312, 313, 314, 317, 320, 321, 324, 326, 327, 330,
	337, 338, 339, 340, 341, 343, 350, 354, 362, 363,
	364, 365, 366, 368, 369, 373, 374, 375, 376, 384,
	388, 406, 407, 418, 430, 435, 249, 414, 436, 0,
	287, 0, 0, 289, 234, 252, 263, 0, 425, 385,
	189, 356, 241, 178, 206, 192, 213, 228, 231, 267,
	297, 303, 332, 336, 246, 225, 204, 353, 201, 371,
	391, 392, 393, 395, 301, 220, 335, 396, 0, 285,
	397, 398, 259, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 276, 221, 0, 0, 333, 0, 176,
	0, 372, 209, 286, 283, 403, 235, 227, 223, 208,
	260, 292, 331, 390, 325, 558, 280, 0, 0, 381,
	304, 0, 0, 0, 0, 0, 549, 550, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 207, 175, 316,
	382, 239, 71, 0, 0, 167, 168, 169, 536, 535,
	538, 539, 540, 541, 0, 0, 198, 537, 205, 542,
	543, 544, 0, 219, 264, 226, 218, 400, 0, 0,
	0, 191, 0, 0, 0, 0, 0, 0, 529, 0,
	557, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	526, 527, 0, 0, 0, 0, 573, 0, 528, 0,
	0, 521, 522, 524, 523, 525, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 305, 0,
	572, 0, 0, 432, 0, 0, 570, 0, 0, 0,
	0, 275, 0, 272, 171, 187, 0, 0, 315, 355,
	361, 0, 0, 0, 210, 0, 359, 329, 417, 194,
	237, 352, 334, 357, 0, 0, 358, 281, 405, 347,
	415, 433, 434, 217, 309, 423, 394, 429, 444, 188,
	214, 323, 387, 420, 378, 302, 401, 402, 271, 377,
	245, 174, 279, 441, 186, 367, 202, 179, 389, 413,
	199, 370, 0, 0, 446, 181, 411, 386, 299, 268,
	269, 180, 0, 351, 222, 243, 212, 318, 408, 409,
	211, 447, 190, 428, 183, 0, 427, 311, 404, 412,
	300, 291, 182, 410, 298, 290, 274, 233, 254, 345,
	284, 346, 255, 307, 306, 308, 0, 177, 0, 383,
	421, 448, 195, 196, 197, 0, 232, 236, 242, 244,
	250, 251, 258, 277, 322, 344, 342, 348, 0, 399,
	416, 424, 431, 437, 438, 442, 439, 440, 443, 310,
	257, 379, 273, 282, 0, 0, 328, 360, 200, 419,
	380, 560, 571, 566, 567, 564, 565, 559, 563, 562,
	561, 574, 551, 552, 553, 554, 556, 0, 568, 569,
	555, 170, 184, 278, 0, 349, 240, 445, 426, 422,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 261, 262, 265, 270,
	288, 293, 294, 295, 296, 312, 313, 314, 317, 320,
	321, 324, 326, 327, 330, 337, 338, 339, 340, 341,
	343, 350, 354, 362, 363, 364, 365, 366, 368, 369,
	373, 374, 375, 376, 384, 388, 406, 407, 418, 430,
	435, 249, 414, 436, 0, 287, 0, 0, 289, 234,
	252, 263, 0, 425, 385, 189, 356, 241, 178, 206,
	192, 213, 228, 231, 267, 297, 303, 332, 336, 246,
	225, 204, 353, 201, 371, 391, 392, 393, 395, 301,
	220, 335, 396, 0, 285, 397, 398, 259, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 276, 221,
	0, 0, 333, 0, 176, 0, 372, 209, 286, 283,
	403, 235, 227, 223, 208, 260, 292, 331, 390, 325,
	0, 280, 0, 0, 381, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 207, 175, 316, 382, 239, 0, 0, 0,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 264,
	226, 218, 400, 0, 0, 0, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 984, 983, 993, 994, 986, 987, 988, 989, 990,
	991, 992, 985, 0, 0, 995, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 305, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 272, 171,
	187, 0, 0, 315, 355, 361, 0, 0, 0, 210,
	0, 359, 329, 417, 194, 237, 352, 334, 357, 0,
	0, 358, 281, 405, 347, 415, 433, 434, 217, 309,
	423, 394, 429, 444, 188, 214, 323, 387, 420, 378,
	302, 401, 402, 271, 377, 245, 174, 279, 441, 186,
	367, 202, 179, 389, 413, 199, 370, 0, 0, 446,
	181, 411, 386, 299, 268, 269, 180, 0, 351, 222,
	243, 212, 318, 408, 409, 211, 447, 190, 428, 183,
	0, 427, 311, 404, 412, 300, 291, 182, 410, 298,
	290, 274, 233, 254, 345, 284, 346, 255, 307, 306,
	308, 0, 177, 0, 383, 421, 448, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 277, 322,
	344, 342, 348, 0, 399, 416, 424, 431, 437, 438,
	442, 439, 440, 443, 310, 257, 379, 273, 282, 0,
	0, 328, 360, 200, 419, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 278, 0,
	349, 240, 445, 426, 422, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 261, 262, 265, 270, 288, 293, 294, 295, 296,
	312, 313, 314, 317, 320, 321, 324, 326, 327, 330,
	337, 338, 339, 340, 341, 343, 350, 354, 362, 363,
	364, 365, 366, 368, 369, 373, 374, 375, 376, 384,
	388, 406, 407, 418, 430, 435, 249, 414, 436, 0,
	287, 0, 0, 289, 234, 252, 263, 0, 425, 385,
	189, 356, 241, 178, 206, 192, 213, 228, 231, 267,
	297, 303, 332, 336, 246, 225, 204, 353, 201, 371,
	391, 392, 393, 395, 301, 220, 335, 396, 0, 285,
	397, 398, 259, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 224, 0,
	0, 0, 0, 276, 221, 0, 0, 333, 0, 176,
	0, 372, 209, 286, 283, 403, 235, 227, 223, 208,
	260, 292, 331, 390, 325, 0, 280, 0, 0, 381,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 207, 175, 316,
	382, 239, 0, 0, 0, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 205, 0,
	0, 0, 0, 219, 264, 226, 218, 400, 0, 0,
	0, 191, 0, 812, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 247, 0, 305, 0,
	0, 0, 811, 432, 0, 0, 0, 0, 0, 808,
	809, 275, 774, 272, 171, 187, 802, 806, 315, 355,
	361, 0, 0, 0, 210, 0, 359, 329, 417, 194,
	237, 352, 334, 357, 0, 0, 358, 281, 405, 347,
	415, 433, 434, 217, 309, 423, 394, 429, 444, 188,
	214, 323, 387, 420, 378, 302, 401, 402, 271, 377,
	245, 174, 279, 441, 186, 367, 202, 179, 389, 413,
	199, 370, 0, 0, 446, 181, 411, 386, 299, 268,
	269, 180, 0, 351, 222, 243, 212, 318, 408, 409,
	211, 447, 190, 428, 183, 0, 427, 311, 404, 412,
	300, 291, 182, 410, 298, 290, 274, 233, 254, 345,
	284, 346, 255, 307, 306, 308, 0, 177, 0, 383,
	421, 448, 195, 196, 197, 0, 232, 236, 242, 244,
	250, 251, 258, 277, 322, 344, 342, 348, 0, 399,
	416, 424, 431, 437, 438, 442, 439, 440, 443, 310,
	257, 379, 273, 282, 0, 0, 328, 360, 200, 419,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 184, 278, 0, 349, 240, 445, 426, 422,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 173, 185, 193, 203,
	215, 230, 238, 248, 253, 256, 261, 262, 265, 270,
	288, 293, 294, 295, 296, 312, 313, 314, 317, 320,
	321, 324, 326, 327, 330, 337, 338, 339, 340, 341,
	343, 350, 354, 362, 363, 364, 365, 366, 368, 369,
	373, 374, 375, 376, 384, 388, 406, 407, 418, 430,
	435, 249, 414, 436, 0, 287, 0, 0, 289, 234,
	252, 263, 0, 425, 385, 189, 356, 241, 178, 206,
	192, 213, 228, 231, 267, 297, 303, 332, 336, 246,
	225, 204, 353, 201, 371, 391, 392, 393, 395, 301,
	220, 335, 396, 0, 285, 397, 398, 259, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 1087, 0,
	0, 0, 0, 224, 0, 0, 0, 0, 276, 221,
	0, 0, 333, 0, 176, 0, 372, 209, 286, 283,
	403, 235, 227, 223, 208, 260, 292, 331, 390, 325,
	0, 280, 0, 0, 381, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 207, 175, 316, 382, 239, 0, 0, 0,
	167, 168, 169, 0, 1089, 0, 0, 0, 0, 0,
	0, 198, 0, 205, 0, 0, 0, 0, 219, 264,
	226, 218, 400, 0, 0, 0, 191, 0, 0, 973,
	974, 972, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 247, 0, 305, 0, 0, 0, 0, 432, 0,
	0, 0, 0, 0, 0, 0, 275, 0, 272, 171,
	187, 0, 0, 315, 355, 361, 0, 0, 0, 210,
	0, 359, 329, 417, 194, 237, 352, 334, 357, 0,
	0, 358, 281, 405, 347, 415, 433, 434, 217, 309,
	423, 394, 429, 444, 188, 214, 323, 387, 420, 378,
	302, 401, 402, 271, 377, 245, 174, 279, 441, 186,
	367, 202, 179, 389, 413, 199, 370, 0, 0, 446,
	181, 411, 386, 299, 268, 269, 180, 0, 351, 222,
	243, 212, 318, 408, 409, 211, 447, 190, 428, 183,
	0, 427, 311, 404, 412, 300, 291, 182, 410, 298,
	290, 274, 233, 254, 345, 284, 346, 255, 307, 306,
	308, 0, 177, 0, 383, 421, 448, 195, 196, 197,
	0, 232, 236, 242, 244, 250, 251, 258, 277, 322,
	344, 342, 348, 0, 399, 416, 424, 431, 437, 438,
	442, 439, 440, 443, 310, 257, 379, 273, 282, 0,
	0, 328, 360, 200, 419, 380, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 170, 184, 278, 0,
	349, 240, 445, 426, 422, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	172, 173, 185, 193, 203, 215, 230, 238, 248, 253,
	256, 261, 262, 265, 270, 288, 293, 294, 295, 296,
	312, 313, 314, 317, 320, 321, 324, 326, 327, 330,
	337, 338, 339, 340, 341, 343, 350, 354, 362, 363,
	364, 365, 366, 368, 369, 373, 374, 375, 376, 384,
	388, 406, 407, 418, 430, 435, 249, 414, 436, 0,
	287, 0, 0, 289, 234, 252, 263, 0, 425, 385,
	189, 356, 241, 178, 206, 192, 213, 228, 231, 267,
	297, 303, 332, 336, 246, 225, 204, 353, 201, 371,
	391, 392, 393, 395, 301, 220, 335, 35, 396, 285,
	397, 398, 259, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 276, 221, 0, 0, 333, 0,
	176, 0, 372, 209, 286, 283, 403, 235, 227, 223,
	208, 260, 292, 331, 390, 325, 0, 280, 0, 0,
	381, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 207, 175,
	316, 382, 239, 71, 0, 592, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 264, 226, 218, 400, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 305,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 275, 0, 272, 171, 187, 0, 0, 315,
	355, 361, 0, 0, 0, 210, 0, 359, 329, 417,
	194, 237, 352, 334, 357, 0, 0, 358, 281, 405,
	347, 415, 433, 434, 217, 309, 423, 394, 429, 444,
	188, 214, 323, 387, 420, 378, 302, 401, 402, 271,
	377, 245, 174, 279, 441, 186, 367, 202, 179, 389,
	413, 199, 370, 0, 0, 446, 181, 411, 386, 299,
	268, 269, 180, 0, 351, 222, 243, 212, 318, 408,
	409, 211, 447, 190, 428, 183, 0, 427, 311, 404,
	412, 300, 291, 182, 410, 298, 290, 274, 233, 254,
	345, 284, 346, 255, 307, 306, 308, 0, 177, 0,
	383, 421, 448, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 277, 322, 344, 342, 348, 0,
	399, 416, 424, 431, 437, 438, 442, 439, 440, 443,
	310, 257, 379, 273, 282, 0, 0, 328, 360, 200,
	419, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 278, 0, 349, 240, 445, 426,
	422, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 261, 262, 265,
	270, 288, 293, 294, 295, 296, 312, 313, 314, 317,
	320, 321, 324, 326, 327, 330, 337, 338, 339, 340,
	341, 343, 350, 354, 362, 363, 364, 365, 366, 368,
	369, 373, 374, 375, 376, 384, 388, 406, 407, 418,
	430, 435, 249, 414, 436, 0, 287, 0, 0, 289,
	234, 252, 263, 0, 425, 385, 189, 356, 241, 178,
	206, 192, 213, 228, 231, 267, 297, 303, 332, 336,
	246, 225, 204, 353, 201, 371, 391, 392, 393, 395,
	301, 220, 335, 396, 0, 285, 397, 398, 259, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 1456,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 276,
	221, 0, 0, 333, 0, 176, 0, 372, 209, 286,
	283, 403, 235, 227, 223, 208, 260, 292, 331, 390,
	325, 0, 280, 0, 0, 381, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 207, 175, 316, 382, 239, 0, 0,
	0, 167, 168, 169, 0, 1270, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	264, 226, 218, 400, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 305, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 272,
	171, 187, 0, 0, 315, 355, 361, 0, 0, 0,
	210, 0, 359, 329, 417, 194, 237, 352, 334, 357,
	0, 1454, 358, 281, 405, 347, 415, 433, 434, 217,
	309, 423, 394, 429, 444, 188, 214, 323, 387, 420,
	378, 302, 401, 402, 271, 377, 245, 174, 279, 441,
	186, 367, 202, 179, 389, 413, 199, 370, 0, 0,
	446, 181, 411, 386, 299, 268, 269, 180, 0, 351,
	222, 243, 212, 318, 408, 409, 211, 447, 190, 428,
	183, 0, 427, 311, 404, 412, 300, 291, 182, 410,
	298, 290, 274, 233, 254, 345, 284, 346, 255, 307,
	306, 308, 0, 177, 0, 383, 421, 448, 195, 196,
	197, 0, 232, 236, 242, 244, 250, 251, 258, 277,
	322, 344, 342, 348, 0, 399, 416, 424, 431, 437,
	438, 442, 439, 440, 443, 310, 257, 379, 273, 282,
	0, 0, 328, 360, 200, 419, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 278,
	0, 349, 240, 445, 426, 422, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 230, 238, 248,
	253, 256, 261, 262, 265, 270, 288, 293, 294, 295,
	296, 312, 313, 314, 317, 320, 321, 324, 326, 327,
	330, 337, 338, 339, 340, 341, 343, 350, 354, 362,
	363, 364, 365, 366, 368, 369, 373, 374, 375, 376,
	384, 388, 406, 407, 418, 430, 435, 249, 414, 436,
	0, 287, 0, 0, 289, 234, 252, 263, 0, 425,
	385, 189, 356, 241, 178, 206, 192, 213, 228, 231,
	267, 297, 303, 332, 336, 246, 225, 204, 353, 201,
	371, 391, 392, 393, 395, 301, 220, 335, 396, 0,
	285, 397, 398, 259, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 276, 221, 0, 0, 333, 0,
	176, 0, 372, 209, 286, 283, 403, 235, 227, 223,
	208, 260, 292, 331, 390, 325, 0, 280, 0, 0,
	381, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 207, 175,
	316, 382, 239, 0, 0, 0, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 264, 226, 218, 400, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 768, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 305,
	0, 0, 0, 0, 432, 0, 0, 0, 0, 0,
	0, 0, 275, 774, 272, 171, 187, 772, 0, 315,
	355, 361, 0, 0, 0, 210, 0, 359, 329, 417,
	194, 237, 352, 334, 357, 0, 0, 358, 281, 405,
	347, 415, 433, 434, 217, 309, 423, 394, 429, 444,
	188, 214, 323, 387, 420, 378, 302, 401, 402, 271,
	377, 245, 174, 279, 441, 186, 367, 202, 179, 389,
	413, 199, 370, 0, 0, 446, 181, 411, 386, 299,
	268, 269, 180, 0, 351, 222, 243, 212, 318, 408,
	409, 211, 447, 190, 428, 183, 0, 427, 311, 404,
	412, 300, 291, 182, 410, 298, 290, 274, 233, 254,
	345, 284, 346, 255, 307, 306, 308, 0, 177, 0,
	383, 421, 448, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 277, 322, 344, 342, 348, 0,
	399, 416, 424, 431, 437, 438, 442, 439, 440, 443,
	310, 257, 379, 273, 282, 0, 0, 328, 360, 200,
	419, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 278, 0, 349, 240, 445, 426,
	422, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 261, 262, 265,
	270, 288, 293, 294, 295, 296, 312, 313, 314, 317,
	320, 321, 324, 326, 327, 330, 337, 338, 339, 340,
	341, 343, 350, 354, 362, 363, 364, 365, 366, 368,
	369, 373, 374, 375, 376, 384, 388, 406, 407, 418,
	430, 435, 249, 414, 436, 0, 287, 0, 0, 289,
	234, 252, 263, 0, 425, 385, 189, 356, 241, 178,
	206, 192, 213, 228, 231, 267, 297, 303, 332, 336,
	246, 225, 204, 353, 201, 371, 391, 392, 393, 395,
	301, 220, 335, 396, 0, 285, 397, 398, 259, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 1456,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 276,
	221, 0, 0, 333, 0, 176, 0, 372, 209, 286,
	283, 403, 235, 227, 223, 208, 260, 292, 331, 390,
	325, 0, 280, 0, 0, 381, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 207, 175, 316, 382, 239, 0, 0,
	0, 167, 168, 169, 0, 1270, 0, 0, 0, 0,
	0, 0, 198, 0, 205, 0, 0, 0, 0, 219,
	264, 226, 218, 400, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 0, 305, 0, 0, 0, 0, 432,
	0, 0, 0, 0, 0, 0, 0, 275, 0, 272,
	171, 187, 0, 0, 315, 355, 361, 0, 0, 0,
	210, 0, 359, 329, 417, 194, 237, 352, 334, 357,
	0, 0, 358, 281, 405, 347, 415, 433, 434, 217,
	309, 423, 394, 429, 444, 188, 214, 323, 387, 420,
	378, 302, 401, 402, 271, 377, 245, 174, 279, 441,
	186, 367, 202, 179, 389, 413, 199, 370, 0, 0,
	446, 181, 411, 386, 299, 268, 269, 180, 0, 351,
	222, 243, 212, 318, 408, 409, 211, 447, 190, 428,
	183, 0, 427, 311, 404, 412, 300, 291, 182, 410,
	298, 290, 274, 233, 254, 345, 284, 346, 255, 307,
	306, 308, 0, 177, 0, 383, 421, 448, 195, 196,
	197, 0, 232, 236, 242, 244, 250, 251, 258, 277,
	322, 344, 342, 348, 0, 399, 416, 424, 431, 437,
	438, 442, 439, 440, 443, 310, 257, 379, 273, 282,
	0, 0, 328, 360, 200, 419, 380, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 170, 184, 278,
	0, 349, 240, 445, 426, 422, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 172, 173, 185, 193, 203, 215, 230, 238, 248,
	253, 256, 261, 262, 265, 270, 288, 293, 294, 295,
	296, 312, 313, 314, 317, 320, 321, 324, 326, 327,
	330, 337, 338, 339, 340, 341, 343, 350, 354, 362,
	363, 364, 365, 366, 368, 369, 373, 374, 375, 376,
	384, 388, 406, 407, 418, 430, 435, 249, 414, 436,
	0, 287, 0, 0, 289, 234, 252, 263, 0, 425,
	385, 189, 356, 241, 178, 206, 192, 213, 228, 231,
	267, 297, 303, 332, 336, 246, 225, 204, 353, 201,
	371, 391, 392, 393, 395, 301, 220, 335, 396, 0,
	285, 397, 398, 259, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 224,
	0, 0, 0, 0, 276, 221, 0, 0, 333, 0,
	176, 0, 372, 209, 286, 283, 403, 235, 227, 223,
	208, 260, 292, 331, 390, 325, 0, 280, 0, 0,
	381, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 207, 175,
	316, 382, 239, 0, 0, 592, 167, 168, 169, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 205,
	0, 0, 0, 0, 219, 264, 226, 218, 400, 0,
	0, 0, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 305,
	0, 0, 0, 0, 432, 0, 0, 0, 2144, 0,
	0, 0, 275, 0, 272, 171, 187, 0, 0, 315,
	355, 361, 0, 0, 0, 210, 0, 359, 329, 417,
	194, 237, 352, 334, 357, 0, 0, 358, 281, 405,
	347, 415, 433, 434, 217, 309, 423, 394, 429, 444,
	188, 214, 323, 387, 420, 378, 302, 401, 402, 271,
	377, 245, 174, 279, 441, 186, 367, 202, 179, 389,
	413, 199, 370, 0, 0, 446, 181, 411, 386, 299,
	268, 269, 180, 0, 351, 222, 243, 212, 318, 408,
	409, 211, 447, 190, 428, 183, 0, 427, 311, 404,
	412, 300, 291, 182, 410, 298, 290, 274, 233, 254,
	345, 284, 346, 255, 307, 306, 308, 0, 177, 0,
	383, 421, 448, 195, 196, 197, 0, 232, 236, 242,
	244, 250, 251, 258, 277, 322, 344, 342, 348, 0,
	399, 416, 424, 431, 437, 438, 442, 439, 440, 443,
	310, 257, 379, 273, 282, 0, 0, 328, 360, 200,
	419, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 184, 278, 0, 349, 240, 445, 426,
	422, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 172, 173, 185, 193,
	203, 215, 230, 238, 248, 253, 256, 261, 262, 265,
	270, 288, 293, 294, 295, 296, 312, 313, 314, 317,
	320, 321, 324, 326, 327, 330, 337, 338, 339, 340,
	341, 343, 350, 354, 362, 363, 364, 365, 366, 368,
	369, 373, 374, 375, 376, 384, 388, 406, 407, 418,
	430, 435, 249, 414, 436, 0, 287, 0, 0, 289,
	234, 252, 263, 0, 425, 385, 189, 356, 241, 178,
	206, 192, 213, 228, 231, 267, 297, 303, 332, 336,
	246, 225, 204, 353, 201, 371, 391, 392, 393, 395,
	301, 220, 335, 35, 396, 285, 397, 398, 259, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 71,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 1475, 0, 0, 1476, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 1120, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 1119, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 2239,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 2144, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 71, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 1270, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 1089, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 1361, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 1242, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 1240, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 1238, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 1236, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 1234, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 1230, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 1228, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 0, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 396, 0, 285, 397, 398, 259,
	0, 0, 0, 0, 0, 0, 319, 0, 1226, 0,
	0, 0, 0, 0, 0, 224, 0, 0, 0, 0,
	276, 221, 0, 0, 333, 0, 176, 0, 372, 209,
	286, 283, 403, 235, 227, 223, 208, 260, 292, 331,
	390, 325, 0, 280, 0, 0, 381, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 207, 175, 316, 382, 239, 0,
	0, 0, 167, 168, 169, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 205, 0, 0, 0, 0,
	219, 264, 226, 218, 400, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 247, 0, 305, 0, 0, 0, 0,
	432, 0, 0, 0, 0, 0, 0, 0, 275, 0,
	272, 171, 187, 0, 0, 315, 355, 361, 0, 0,
	0, 210, 0, 359, 329, 417, 194, 237, 352, 334,
	357, 0, 0, 358, 281, 405, 347, 415, 433, 434,
	217, 309, 423, 394, 429, 444, 188, 214, 323, 387,
	420, 378, 302, 401, 402, 271, 377, 245, 174, 279,
	441, 186, 367, 202, 179, 389, 413, 199, 370, 0,
	0, 446, 181, 411, 386, 299, 268, 269, 180, 0,
	351, 222, 243, 212, 318, 408, 409, 211, 447, 190,
	428, 183, 0, 427, 311, 404, 412, 300, 291, 182,
	410, 298, 290, 274, 233, 254, 345, 284, 346, 255,
	307, 306, 308, 0, 177, 0, 383, 421, 448, 195,
	196, 197, 0, 232, 236, 242, 244, 250, 251, 258,
	277, 322, 344, 342, 348, 0, 399, 416, 424, 431,
	437, 438, 442, 439, 440, 443, 310, 257, 379, 273,
	282, 0, 0, 328, 360, 200, 419, 380, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 170, 184,
	278, 0, 349, 240, 445, 426, 422, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 173, 185, 193, 203, 215, 230, 238,
	248, 253, 256, 261, 262, 265, 270, 288, 293, 294,
	295, 296, 312, 313, 314, 317, 320, 321, 324, 326,
	327, 330, 337, 338, 339, 340, 341, 343, 350, 354,
	362, 363, 364, 365, 366, 368, 369, 373, 374, 375,
	376, 384, 388, 406, 407, 418, 430, 435, 249, 414,
	436, 0, 287, 0, 0, 289, 234, 252, 263, 0,
	425, 385, 189, 356, 241, 178, 206, 192, 213, 228,
	231, 267, 297, 303, 332, 336, 246, 225, 204, 353,
	201, 371, 391, 392, 393, 395, 301, 220, 335, 396,
	0, 285, 397, 398, 259, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	224, 0, 0, 0, 0, 276, 221, 0, 0, 333,
	0, 176, 0, 372, 209, 286, 283, 403, 235, 227,
	223, 208, 260, 292, 331, 390, 325, 0, 280, 0,
	0, 381, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 207,
	175, 316, 382, 239, 1201, 0, 0, 167, 168, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	205, 0, 0, 0, 0, 219, 264, 226, 218, 400,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 247, 0,
	305, 0, 0, 0, 0, 432, 0, 0, 0, 0,
	0, 0, 0, 275, 0, 272, 171, 187, 0, 0,
	315, 355, 361, 0, 0, 0, 210, 0, 359, 329,
	417, 194, 237, 352, 334, 357, 0, 0, 358, 281,
	405, 347, 415, 433, 434, 217, 309, 423, 394, 429,
	444, 188, 214, 323, 387, 420, 378, 302, 401, 402,
	271, 377, 245, 174, 279, 441, 186, 367, 202, 179,
	389, 413, 199, 370, 0, 0, 446, 181, 411, 386,
	299, 268, 269, 180, 0, 351, 222, 243, 212, 318,
	408, 409, 211, 447, 190, 428, 183, 0, 427, 311,
	404, 412, 300, 291, 182, 410, 298, 290, 274, 233,
	254, 345, 284, 346, 255, 307, 306, 308, 0, 177,
	0, 383, 421, 448, 195, 196, 197, 0, 232, 236,
	242, 244, 250, 251, 258, 277, 322, 344, 342, 348,
	0, 399, 416, 424, 431, 437, 438, 442, 439, 440,
	443, 310, 257, 379, 273, 282, 0, 0, 328, 360,
	200, 419, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 184, 278, 0, 349, 240, 445,
	426, 422, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 172, 173, 185,
	193, 203, 215, 230, 238, 248, 253, 256, 261, 262,
	265, 270, 288, 293, 294, 295, 296, 312, 313, 314,
	317, 320, 321, 324, 326, 327, 330, 337, 338, 339,
	340, 341, 343, 350, 354, 362, 363, 364, 365, 366,
	368, 369, 373, 374, 375, 376, 384, 388, 406, 407,
	418, 430, 435, 249, 414, 436, 0, 287, 0, 0,
	289, 234, 252, 263, 0, 425, 385, 189, 356, 241,
	178, 206, 192, 213, 228, 231, 267, 297, 303, 332,
	336, 246, 225, 204, 353, 201, 371, 391, 392, 393,
	395, 301, 220, 335, 0, 396, 285, 397, 398, 259,
	1102, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 276, 221, 0, 0, 333, 0, 176, 0, 372,
	209, 286, 283, 403, 235, 227, 223, 208, 260, 292,
	331, 390, 325, 0, 280, 0, 0, 381, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 207, 175, 316, 382, 239,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 264, 226, 218, 400, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 305, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 272, 171, 187, 0, 0, 315, 355, 361, 0,
	0, 0, 210, 0, 359, 329, 417, 194, 237, 352,
	334, 357, 0, 0, 358, 281, 405, 347, 415, 433,
	434, 217, 309, 423, 394, 429, 444, 188, 214, 323,
	387, 420, 378, 302, 401, 402, 271, 377, 245, 174,
	279, 441, 186, 367, 202, 179, 389, 413, 199, 370,
	0, 0, 446, 181, 411, 386, 299, 268, 269, 180,
	0, 351, 222, 243, 212, 318, 408, 409, 211, 447,
	190, 428, 183, 0, 427, 311, 404, 412, 300, 291,
	182, 410, 298, 290, 274, 233, 254, 345, 284, 346,
	255, 307, 306, 308, 0, 177, 0, 383, 421, 448,
	195, 196, 197, 0, 232, 236, 242, 244, 250, 251,
	258, 277, 322, 344, 342, 348, 0, 399, 416, 424,
	431, 437, 438, 442, 439, 440, 443, 310, 257, 379,
	273, 282, 0, 0, 328, 360, 200, 419, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 278, 0, 349, 240, 445, 426, 422, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 261, 262, 265, 270, 288, 293,
	294, 295, 296, 312, 313, 314, 317, 320, 321, 324,
	326, 327, 330, 337, 338, 339, 340, 341, 343, 350,
	354, 362, 363, 364, 365, 366, 368, 369, 373, 374,
	375, 376, 384, 388, 406, 407, 418, 430, 435, 249,
	414, 436, 0, 287, 0, 0, 289, 234, 252, 263,
	0, 425, 385, 189, 356, 241, 178, 206, 192, 213,
	228, 231, 267, 297, 303, 332, 336, 246, 225, 204,
	353, 201, 371, 391, 392, 393, 395, 301, 220, 335,
	396, 0, 285, 397, 398, 259, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	1093, 224, 0, 0, 0, 0, 276, 221, 0, 0,
	333, 0, 176, 0, 372, 209, 286, 283, 403, 235,
	227, 223, 208, 260, 292, 331, 390, 325, 0, 280,
	0, 0, 381, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	207, 175, 316, 382, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 264, 226, 218,
	400, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 305, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 272, 171, 187, 0,
	0, 315, 355, 361, 0, 0, 0, 210, 0, 359,
	329, 417, 194, 237, 352, 334, 357, 0, 0, 358,
	281, 405, 347, 415, 433, 434, 217, 309, 423, 394,
	429, 444, 188, 214, 323, 387, 420, 378, 302, 401,
	402, 271, 377, 245, 174, 279, 441, 186, 367, 202,
	179, 389, 413, 199, 370, 0, 0, 446, 181, 411,
	386, 299, 268, 269, 180, 0, 351, 222, 243, 212,
	318, 408, 409, 211, 447, 190, 428, 183, 0, 427,
	311, 404, 412, 300, 291, 182, 410, 298, 290, 274,
	233, 254, 345, 284, 346, 255, 307, 306, 308, 0,
	177, 0, 383, 421, 448, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 277, 322, 344, 342,
	348, 0, 399, 416, 424, 431, 437, 438, 442, 439,
	440, 443, 310, 257, 379, 273, 282, 0, 0, 328,
	360, 200, 419, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 278, 0, 349, 240,
	445, 426, 422, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 261,
	262, 265, 270, 288, 293, 294, 295, 296, 312, 313,
	314, 317, 320, 321, 324, 326, 327, 330, 337, 338,
	339, 340, 341, 343, 350, 354, 362, 363, 364, 365,
	366, 368, 369, 373, 374, 375, 376, 384, 388, 406,
	407, 418, 430, 435, 249, 414, 436, 0, 287, 0,
	0, 289, 234, 252, 263, 0, 425, 385, 189, 356,
	241, 178, 206, 192, 213, 228, 231, 267, 297, 303,
	332, 336, 246, 225, 204, 353, 201, 371, 391, 392,
	393, 395, 301, 220, 335, 396, 0, 285, 397, 398,
	259, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 276, 221, 0, 0, 333, 0, 176, 0, 372,
	209, 286, 283, 403, 235, 227, 223, 208, 260, 292,
	331, 390, 325, 0, 280, 0, 0, 381, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 207, 175, 316, 382, 239,
	0, 0, 0, 167, 168, 169, 0, 949, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 264, 226, 218, 400, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 305, 0, 0, 0,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 272, 171, 187, 0, 0, 315, 355, 361, 0,
	0, 0, 210, 0, 359, 329, 417, 194, 237, 352,
	334, 357, 0, 0, 358, 281, 405, 347, 415, 433,
	434, 217, 309, 423, 394, 429, 444, 188, 214, 323,
	387, 420, 378, 302, 401, 402, 271, 377, 245, 174,
	279, 441, 186, 367, 202, 179, 389, 413, 199, 370,
	0, 0, 446, 181, 411, 386, 299, 268, 269, 180,
	0, 351, 222, 243, 212, 318, 408, 409, 211, 447,
	190, 428, 183, 0, 427, 311, 404, 412, 300, 291,
	182, 410, 298, 290, 274, 233, 254, 345, 284, 346,
	255, 307, 306, 308, 0, 177, 0, 383, 421, 448,
	195, 196, 197, 0, 232, 236, 242, 244, 250, 251,
	258, 277, 322, 344, 342, 348, 0, 399, 416, 424,
	431, 437, 438, 442, 439, 440, 443, 310, 257, 379,
	273, 282, 0, 0, 328, 360, 200, 419, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 278, 0, 349, 240, 445, 426, 422, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 261, 262, 265, 270, 288, 293,
	294, 295, 296, 312, 313, 314, 317, 320, 321, 324,
	326, 327, 330, 337, 338, 339, 340, 341, 343, 350,
	354, 362, 363, 364, 365, 366, 368, 369, 373, 374,
	375, 376, 384, 388, 406, 407, 418, 430, 435, 249,
	414, 436, 0, 287, 0, 0, 289, 234, 252, 263,
	0, 425, 385, 189, 356, 241, 178, 206, 192, 213,
	228, 231, 267, 297, 303, 332, 336, 246, 225, 204,
	353, 201, 371, 391, 392, 393, 395, 301, 220, 335,
	396, 0, 285, 397, 398, 259, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 276, 221, 0, 0,
	333, 0, 176, 0, 372, 209, 286, 283, 403, 235,
	227, 223, 208, 260, 292, 331, 390, 325, 0, 280,
	0, 0, 381, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	207, 175, 316, 382, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 264, 226, 218,
	400, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 247,
	0, 305, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 272, 171, 187, 0,
	0, 315, 355, 361, 0, 0, 0, 210, 0, 359,
	329, 417, 194, 237, 352, 334, 357, 0, 0, 358,
	281, 405, 347, 415, 433, 434, 217, 309, 423, 394,
	429, 444, 188, 214, 323, 387, 420, 378, 302, 401,
	402, 271, 377, 245, 174, 279, 441, 186, 367, 202,
	179, 389, 413, 199, 370, 0, 0, 446, 181, 411,
	386, 299, 268, 269, 180, 0, 351, 222, 243, 212,
	318, 408, 409, 211, 447, 190, 428, 183, 0, 427,
	311, 404, 412, 300, 291, 182, 410, 298, 290, 274,
	233, 254, 345, 284, 346, 255, 307, 306, 308, 0,
	177, 0, 383, 421, 448, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 277, 322, 344, 342,
	348, 0, 399, 416, 424, 431, 437, 438, 442, 439,
	440, 443, 310, 257, 379, 273, 282, 0, 0, 328,
	360, 200, 419, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 278, 0, 349, 240,
	445, 426, 422, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 261,
	262, 265, 270, 288, 293, 294, 295, 296, 312, 313,
	314, 317, 320, 321, 324, 326, 327, 330, 337, 338,
	339, 340, 341, 343, 350, 354, 362, 363, 364, 365,
	366, 368, 369, 373, 374, 375, 376, 384, 388, 406,
	407, 418, 430, 435, 502, 414, 436, 0, 287, 0,
	0, 289, 234, 252, 263, 0, 425, 385, 189, 356,
	241, 178, 206, 192, 213, 228, 231, 267, 297, 303,
	332, 336, 246, 225, 204, 353, 201, 371, 391, 392,
	393, 395, 301, 220, 335, 396, 0, 285, 397, 398,
	259, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 224, 0, 0, 0,
	0, 276, 221, 0, 0, 333, 0, 176, 0, 372,
	209, 286, 283, 403, 235, 227, 223, 208, 260, 292,
	331, 390, 325, 0, 280, 0, 0, 381, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 207, 175, 316, 382, 239,
	0, 0, 0, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 205, 0, 0, 0,
	0, 219, 264, 226, 218, 400, 0, 0, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 247, 0, 305, 0, 0, 451,
	0, 432, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 272, 171, 187, 0, 0, 315, 355, 361, 0,
	0, 0, 210, 0, 359, 329, 417, 194, 237, 352,
	334, 357, 0, 0, 358, 281, 405, 347, 415, 433,
	434, 217, 309, 423, 394, 429, 444, 188, 214, 323,
	387, 420, 378, 302, 401, 402, 271, 377, 245, 174,
	279, 441, 186, 367, 202, 179, 389, 413, 199, 370,
	0, 0, 446, 181, 411, 386, 299, 268, 269, 180,
	0, 351, 222, 243, 212, 318, 408, 409, 211, 447,
	190, 428, 183, 0, 427, 311, 404, 412, 300, 291,
	182, 410, 298, 290, 274, 233, 254, 345, 284, 346,
	255, 307, 306, 308, 0, 177, 0, 383, 421, 448,
	195, 196, 197, 0, 232, 236, 242, 244, 250, 251,
	258, 277, 322, 344, 342, 348, 0, 399, 416, 424,
	431, 437, 438, 442, 439, 440, 443, 310, 257, 379,
	273, 282, 0, 0, 328, 360, 200, 419, 380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 170,
	184, 278, 0, 349, 240, 445, 426, 422, 0, 0,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 172, 173, 185, 193, 203, 215, 230,
	238, 248, 253, 256, 261, 262, 265, 270, 288, 293,
	294, 295, 296, 312, 313, 314, 317, 320, 321, 324,
	326, 327, 330, 337, 338, 339, 340, 341, 343, 350,
	354, 362, 363, 364, 365, 366, 368, 369, 373, 374,
	375, 376, 384, 388, 406, 407, 418, 430, 435, 249,
	414, 436, 0, 287, 0, 0, 289, 234, 252, 263,
	0, 425, 385, 189, 356, 241, 178, 206, 192, 213,
	228, 231, 267, 297, 303, 332, 336, 246, 225, 204,
	353, 201, 371, 391, 392, 393, 395, 301, 220, 335,
	396, 0, 285, 397, 398, 259, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 224, 0, 0, 0, 0, 276, 221, 0, 0,
	333, 0, 176, 0, 372, 209, 286, 283, 403, 235,
	227, 223, 208, 260, 292, 331, 390, 325, 0, 280,
	0, 0, 381, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	207, 175, 316, 382, 239, 0, 0, 0, 167, 168,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 205, 0, 0, 0, 0, 219, 264, 226, 218,
	400, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 247,
	0, 305, 0, 0, 0, 0, 432, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 272, 171, 187, 0,
	0, 315, 355, 361, 0, 0, 0, 210, 0, 359,
	329, 417, 194, 237, 352, 334, 357, 0, 0, 358,
	281, 405, 347, 415, 433, 434, 217, 309, 423, 394,
	429, 444, 188, 214, 323, 387, 420, 378, 302, 401,
	402, 271, 377, 245, 174, 279, 441, 186, 367, 202,
	179, 389, 413, 199, 370, 0, 0, 446, 181, 411,
	386, 299, 268, 269, 180, 0, 351, 222, 243, 212,
	318, 408, 409, 211, 447, 190, 428, 183, 0, 427,
	311, 404, 412, 300, 291, 182, 410, 298, 290, 274,
	233, 254, 345, 284, 346, 255, 307, 306, 308, 0,
	177, 0, 383, 421, 448, 195, 196, 197, 0, 232,
	236, 242, 244, 250, 251, 258, 277, 322, 344, 342,
	348, 0, 399, 416, 424, 431, 437, 438, 442, 439,
	440, 443, 310, 257, 379, 273, 282, 0, 0, 328,
	360, 200, 419, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 184, 278, 0, 349, 240,
	445, 426, 422, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 172, 173,
	185, 193, 203, 215, 230, 238, 248, 253, 256, 261,
	262, 265, 270, 288, 293, 294, 295, 296, 312, 313,
	314, 317, 320, 321, 324, 326, 327, 330, 337, 338,
	339, 340, 341, 343, 350, 354, 362, 363, 364, 365,
	366, 368, 369, 373, 374, 375, 376, 384, 388, 406,
	407, 418, 430, 435, 249, 414, 436, 0, 287, 0,
	0, 289, 234, 252, 263, 0, 425, 385, 189, 356,
	241, 178, 206, 192, 213, 228, 231, 267, 297, 303,
	332, 336, 246, 225, 204, 353, 201, 371, 391, 392,
	393, 395, 301, 220, 335, 0, 0, 285, 397, 398,
	259,
}

var yyPact = [...]int{
	3818, -1000, -348, 1740, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1701, 1363, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 645, 1401, -1000, 1614, 177, -1000, 29453, 440,
	-1000, 28978, 437, 2415, 29453, -1000, 113, -1000, 90, 29453,
	109, 28503, -1000, -1000, -257, 12825, 1570, -23, -33, 29453,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1369,
	1645, 1652, 1699, 1205, 1789, -1000, 10924, 10924, 355, 355,
	355, 9018, -1000, -1000, 17101, 29453, 29453, 277, -1000, 1614,
	-1000, -1000, 354, -1000, 265, 1332, -1000, 1328, -1000, 553,
	599, 286, 369, 368, 285, 284, 276, 274, 273, 272,
	267, 264, 292, -1000, 612, 612, -156, -157, 1233, 345,
	345, 345, 370, 1586, 1584, -1000, 548, -1000, 612, 612,
	330, 612, 612, 612, 612, 233, 232, 612, 612, 612,
	612, 612, 612, 612, 612, 612, 612, 612, 612, 612,
	612, 612, 315, 1614, 224, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 29453,
	135, 29453, -1000, 546, 29453, 711, 711, 120, 711, 711,
	711, 711, 131, 485, -35, -1000, 119, 209, 110, 217,
	707, 127, 84, -1000, -1000, 215, 707, 1077, 85, -1000,
	711, 7086, 7086, 7086, -1000, 1610, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 367, -1000, -1000, -1000, -1000, 29453,
	28028, 360, 650, -1000, -1000, -1000, 112, -1000, -1000, 1178,
	772, -1000, 12825, 2312, 1364, 1364, -1000, -1000, 514, -1000,
	-1000, 14250, 14250, 14250, 14250, 14250, 14250, 14250, 14250, 14250,
	14250, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1364, 545, -1000, 12350, 1364,
	1364, 1364, 1364, 1364, 1364, 1364, 1364, 12825, 1364, 1364,
	1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364, 1364,
	1364, 1364, 1364, 1364, 1364, -1000, -1000, -1000, 29453, -1000,
	1364, 146, 1701, -1000, 1363, -1000, -1000, -1000, 1606, 12825,
	12825, 1701, -1000, 1498, 10924, -1000, -1000, 1650, -1000, -1000,
	-1000, -1000, -1000, 781, 1722, -1000, 15675, 535, 1721, 27553,
	-1000, 20902, 27078, 1326, 8535, -58, -1000, -1000, -1000, 647,
	19477, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1610, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1265, 29453, -1000,
	-1000, 3022, 1041, -1000, 1400, -1000, 1259, -1000, 1385, 1409,
	430, 1041, 417, 409, 400, -1000, -116, -1000, -1000, -1000,
	-1000, -1000, 612, 612, 290, 177, 4245, -1000, -1000, -1000,
	26602, 1399, 1041, -1000, 1397, -1000, 712, 401, 487, 487,
	1041, -1000, -1000, 29453, 1041, 704, 701, 29453, 29453, -1000,
	26127, -1000, 25652, 25177, 977, 29453, 24702, 24227, 23752, 23277,
	22802, -1000, 1496, -1000, 1361, -1000, -1000, -1000, 29453, 29453,
	29453, 222, -1000, -1000, 29453, 1041, -1000, -1000, 973, 972,
	612, 612, 970, 1072, 1071, 1068, 612, 612, 949, 1064,
	21377, 165, 946, 945, 943, 992, 1063, 133, 978, 928,
	936, 29453, 1396, 29453, -1000, 200, 556, 278, 642, 1614,
	1568, 1306, 365, 428, 1041, 352, 352, -1000, 7569, -1000,
	-1000, 1044, 12825, -1000, 724, 707, 707, -1000, -1000, -1000,
	-1000, -1000, -1000, 711, 29453, 724, -1000, -1000, -1000, 707,
	711, 29453, 711, 711, 711, 711, 707, 707, 707, 711,
	29453, 29453, 29453, 29453, 29453, 29453, 29453, 29453, 29453, 7086,
	7086, 7086, 593, 711, -262, -1000, 1449, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 106, -1000, -1000, -1000, -1000,
	-1000, 1740, -1000, -1000, -1000, -87, 1305, 22327, -1000, -264,
	-265, -269, -270, -1000, -1000, -1000, -276, -281, -1000, -1000,
	-1000, 12825, 12825, 12825, 12825, 948, 598, 14250, 816, 627,
	14250, 14250, 14250, 14250, 14250, 14250, 14250, 14250, 14250, 14250,
	14250, 14250, 14250, 14250, 14250, 656, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1041, -1000, 1738, 1144, 1144, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 14725, 9499,
	7569, 1205, 1251, 1701, 10924, 10924, 12825, 12825, 11874, 11399,
	10924, 1594, 659, 772, 29453, -1000, 954, -1000, -1000, 13775,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 29453, 29453, 10924, 10924, 10924, 10924, 10924, -1000,
	1304, -1000, -151, 16626, 12825, 1036, 1652, 1205, 1650, 1623,
	1733, 588, 961, 1299, -1000, 941, 1652, 19002, 1294, -1000,
	1650, -1000, -1000, -1000, 29453, -1000, -1000, 21852, -1000, -1000,
	6603, 29453, 258, 29453, -1000, 1327, 1557, -1000, -1000, -1000,
	1636, 18527, 29453, 1264, 1262, -1000, -1000, 534, 8052, -58,
	-1000, 8052, 1263, -1000, -53, -22, 9974, 554, -1000, -1000,
	-1000, 1233, 15200, 1135, 1576, 35, -1000, -1000, -1000, 1385,
	-1000, 1385, 1385, 1385, 1385, 222, 222, 222, 222, -1000,
	-1000, -1000, -1000, -1000, 1395, 1394, -1000, 1385, 1385, 1385,
	1385, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1393, 1393,
	1393, 1389, 1389, 339, -1000, 12825, 181, 29453, 1620, 919,
	200, 353, 1426, 1041, 1041, 1041, 353, -1000, 1131, 956,
	-1000, 1297, -1000, -1000, 1697, -1000, -1000, 671, 733, 727,
	661, 29453, 130, 253, -1000, 329, -1000, 29453, 1041, 700,
	487, 1041, -1000, 1041, -1000, -1000, -1000, -1000, 533, -1000,
	-1000, 1041, 1296, -1000, 1325, 832, 725, 753, 713, 1296,
	-1000, -1000, -139, 1296, -1000, 1296, -1000, 1296, -1000, 1296,
	-1000, 1296, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	597, 29453, 130, 656, -1000, 363, -1000, -1000, 656, 656,
	-1000, -1000, -1000, -1000, 1031, 1030, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -317, 29453, -1000, 193, 619, 240, 295,
	219, 29453, 129, 1643, 159, 231, 29453, 29453, 352, 1448,
	29453, 1629, 29453, -1000, -1000, -1000, -1000, 772, 29453, -1000,
	-1000, 711, 711, -1000, -1000, 29453, 711, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 711, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1028, -1000, -1000, 29453, 29453, -1000, -1000, -1000, -1000, -1000,
	134, -66, 189, -1000, -1000, -1000, -1000, 1654, -1000, 772,
	598, 690, 684, -1000, -1000, 817, -1000, -1000, 2452, -1000,
	-1000, -1000, -1000, 816, 14250, 14250, 14250, 652, 2452, 2417,
	2511, 2366, 555, 870, 870, 567, 567, 567, 567, 567,
	723, 723, -1000, -1000, -1000, -1000, 954, -1000, -1000, -1000,
	954, 10924, 10924, 1295, 1364, 532, -1000, 1369, -1000, -1000,
	1652, 1215, 1215, 908, 874, 697, 1720, 1215, 651, 1717,
	1215, 1215, 10924, -1000, -1000, 658, -1000, 12825, 954, -1000,
	1257, 1291, 1267, 1215, 954, 954, 1215, 1215, 29453, -1000,
	-251, -1000, -95, 453, 1364, -1000, 21377, 954, 1178, -1000,
	1606, -1000, -1000, 1565, -1000, 1499, 12825, 12825, 12825, -1000,
	-1000, -1000, 1606, 1656, -1000, 1520, 1510, 1709, 10924, 20902,
	1650, -1000, -1000, -1000, 531, 1709, 1330, 1364, -1000, 29453,
	20902, 20902, 20902, 20902, 20902, -1000, 1472, 1471, -1000, 1464,
	1460, 1477, 29453, -1000, 1249, 1205, 18527, 258, 1281, 20902,
	29453, -1000, -1000, 20902, 29453, 6120, -1000, 1263, -58, -65,
	-1000, -1000, -1000, -1000, 772, -1000, 913, 257, 289, -1000,
	338, -1000, -1000, -1000, -1000, 481, 1635, 1560, 32, -1000,
	-1000, -1000, 222, 222, -1000, -1000, 554, 795, 554, 554,
	554, 1024, 1024, -1000, -1000, -1000, -1000, -1000, 918, -1000,
	-1000, -1000, 905, -1000, -1000, 1040, 1412, 181, -1000, -1000,
	612, 1022, 1578, 29453, -1000, -1000, 1120, 193, 29453, 668,
	1447, -1000, 1426, 1426, 1426, 29453, -1000, -1000, -1000, -1000,
	3323, 29453, 1226, -1000, 137, -1000, 1112, 29453, -1000, 1221,
	1392, 1041, 1041, -1000, -1000, 7569, -1000, 29453, 1364, -1000,
	-1000, -1000, -1000, 425, 1613, 1612, 130, 137, 554, 1041,
	-1000, -1000, -1000, -1000, -1000, -320, 1217, 373, 152, 168,
	29453, 29453, 29453, 29453, 29453, 484, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 223, 359, -1000, 29453, 29453, 470, -1000,
	-1000, -1000, 707, -1000, -1000, 707, -1000, -1000, -1000, -1000,
	-1000, -1000, 1608, -70, -294, -1000, -291, -1000, -1000, -1000,
	-1000, 652, 2452, 2250, -1000, 14250, 14250, -1000, -1000, 1215,
	1215, 10924, 7569, 1701, 1606, -1000, -1000, 280, 656, 280,
	14250, 14250, -1000, 14250, 14250, -1000, -134, 1350, 646, -1000,
	12825, 1083, -1000, -1000, 14250, 14250, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 386, 385, 382, 29453, -1000,
	-1000, -1000, 963, 1021, 1493, 772, 772, -1000, -1000, 29453,
	-1000, -1000, -1000, -1000, 1706, 12825, -1000, 1247, -1000, 5637,
	1652, 1444, 29453, 1364, 1740, 16151, 29453, 1349, -1000, 613,
	1557, 1423, 1439, 1388, -1000, -1000, -1000, -1000, 1467, -1000,
	1466, -1000, -1000, -1000, -1000, -1000, 1205, 1709, 20902, 1301,
	-1000, 1301, -1000, 528, -1000, -1000, -1000, -75, -50, -1000,
	-1000, -1000, -1000, 1687, 1233, -1000, -1000, -1000, -1000, 776,
	14250, 1731, -1000, 1016, -1000, -1000, 699, 695, -1000, 29453,
	1391, -1000, -1000, -1000, 554, 554, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1195, -1000, 1189, 1184, 1180, 80, -1000,
	1407, 1607, 612, 612, -1000, 897, -1000, 1041, -1000, -1000,
	372, -1000, 1627, 29453, 1435, 1434, 1432, -1000, 1686, 1182,
	-1000, 29453, -1000, -1000, 29453, -1000, 1509, 181, 29453, -1000,
	-1000, -1000, -1000, 253, 29453, -1000, 1144, 137, -1000, -1000,
	-1000, -1000, -1000, -1000, 29453, 160, -1000, 1390, 820, -1000,
	1414, -1000, -1000, -1000, -1000, 143, 237, -1000, 29453, 444,
	1412, 29453, -1000, -1000, -1000, 711, 711, -1000, 1598, -1000,
	1041, -1000, 14250, 2452, 2452, -1000, -1000, 954, -1000, 1652,
	-1000, 954, 1385, 1385, -1000, 1385, 1389, -1000, 1385, 96,
	1385, 63, 954, 954, 2343, 2327, 2126, 1826, 1364, -127,
	-1000, 772, 12825, 1730, 1642, 1364, 1364, 1364, 1172, 1012,
	222, -1000, -1000, -1000, 1703, 1673, 772, -1000, -1000, -1000,
	1616, 1270, 1138, -1000, -1000, 10449, 1174, 1508, 507, 1172,
	1701, 29453, 12825, -1000, -1000, 12825, 1383, -1000, 12825, -1000,
	-1000, -1000, 1701, 1701, 1301, -1000, -1000, 573, -1000, -1000,
	-1000, -327, -1000, -1000, 2452, -19, -1000, -1000, -1000, 1382,
	14250, -1000, -1000, 222, 998, 222, 894, -1000, 889, -1000,
	-1000, -195, -1000, -1000, 1357, 1475, -1000, -1000, 29453, -1000,
	-1000, 29453, 29453, 29453, 29453, 29453, -1000, -1000, 247, -1000,
	1167, 1165, -1000, -154, -1000, -1000, 1379, -1000, -1000, -1000,
	1103, -1000, -141, 1041, 29453, 29453, 29453, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2452, -1000, 1606, -1000, -1000,
	349, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 14250,
	14250, 14250, 14250, 14250, 1652, 997, 772, 14250, 14250, 18051,
	20427, 20427, 17576, 222, 7, -1000, 12825, 12825, 674, -1000,
	1364, -1000, 1310, 29453, 1364, 29453, -1000, 1652, -1000, 772,
	772, 29453, 772, 1652, -1000, 22, 228, -1000, -1000, -1000,
	-1000, 29453, 1284, 554, -1000, 554, 1099, 1089, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1379, -1000, -1000, -1000,
	1182, -1000, 245, 299, -1000, 253, -1000, -159, -160, 1634,
	29453, -1000, -1000, 7569, -1000, -1000, 1378, 1424, -1000, -1000,
	-1000, -1000, 1257, 1257, 1257, 1257, 263, 954, -1000, 1257,
	1257, 1163, -1000, -1000, -1000, 1163, 1163, 453, -246, -1000,
	1550, 1516, 772, 1178, 1729, -1000, 1364, 1740, 469, 1138,
	-1000, -1000, 1161, -1000, 1366, 1406, -323, 12825, 1365, 1145,
	-1000, -1000, -1000, -1000, -1000, 1631, 1364, -1000, -1000, -1000,
	-1000, 1363, 1140, 1159, -1000, 609, 29453, 29453, -1000, -1000,
	-1000, -1000, 954, 150, -144, -1000, -1000, -1000, 19952, -1000,
	-1000, -1000, -1000, 7, 283, -1000, 1532, 1516, -1000, 1667,
	1542, 1664, -1000, 29453, 1138, 29453, -1000, 12825, 1362, 604,
	-337, 879, 1000, 29453, 1431, 869, 1363, 13300, 213, -1000,
	7569, 5154, 1123, -1000, -1000, 1487, -137, -149, -1000, -1000,
	1527, 1531, 1531, 1532, -1000, 1662, 1661, -1000, 994, 1660,
	990, 1084, -1000, 975, 29453, 872, 1285, 1658, -1000, -1000,
	1117, 1428, -1000, 1716, -1000, -1000, -1000, 755, 985, -1000,
	-1000, -1000, 213, 1257, 954, -1000, -28, -1000, -1000, -1000,
	-1000, -1000, 1414, -1000, 1482, -1000, 1524, 846, -1000, -1000,
	-1000, -1000, 983, 875, -1000, 782, -1000, -323, 1111, -1000,
	-1000, 253, -333, -1000, -1000, 1726, 477, 477, -1000, -1000,
	-1000, -1000, -1000, 317, -1000, -1000, -141, -142, -1000, 788,
	-1000, -1000, -1000, -1000, -1000, -337, -323, 1098, 21, -1000,
	-1000, -1000, 331, 926, -1000, 195, -1000, -150, -1000, -1000,
	1285, -337, -1000, 1353, 1406, -1000, -1000, -1000, -1000, -152,
	-1000, 1285, 12825, 1206, -1000, -1000, 829, 29453, -343, 1092,
	-1000, 863, -343, -1000, -1000,
}

var yyPgo = [...]int{
	0, 9, 2053, 7, 2, 5, 2052, 2051, 47, 101,
	99, 2050, 2049, 2048, 2044, 154, 146, 123, 2043, 2038,
	2037, 2036, 2035, 2034, 2033, 2032, 2031, 2030, 2029, 2028,
	82, 138, 56, 63, 142, 2023, 2022, 44, 2020, 2019,
	2018, 152, 131, 671, 2017, 147, 65, 2016, 2015, 2014,
	2013, 2012, 2008, 2007, 2000, 1998, 1995, 1994, 1993, 1992,
	1991, 251, 1990, 1989, 12, 1986, 41, 1985, 1984, 1983,
	1981, 1977, 6, 1975, 1974, 105, 1961, 1959, 1958, 129,
	1956, 1955, 66, 133, 73, 89, 1953, 1952, 88, 127,
	1951, 78, 112, 1950, 1949, 1, 1948, 57, 106, 114,
	1946, 61, 1943, 1941, 76, 1940, 1939, 1938, 94, 1937,
	1935, 3152, 1932, 86, 108, 25, 46, 1930, 1927, 1926,
	1920, 42, 153, 1919, 1918, 34, 1917, 1916, 145, 1915,
	104, 32, 1913, 24, 22, 31, 1912, 102, 1911, 69,
	45, 1910, 90, 1909, 1906, 1905, 1904, 37, 1902, 91,
	111, 29, 1897, 1896, 1895, 17, 18, 1894, 1892, 1890,
	1889, 1888, 1887, 19, 1886, 14, 1885, 39, 1883, 4,
	26, 43, 87, 72, 40, 20, 1881, 168, 1864, 35,
	122, 85, 120, 1863, 1862, 1861, 1031, 166, 1860, 1857,
	36, 1856, 110, 107, 1841, 165, 1840, 1837, 74, 1321,
	1496, 59, 125, 1836, 1835, 2810, 79, 93, 28, 1833,
	75, 1832, 1831, 1827, 128, 139, 68, 911, 64, 1824,
	1823, 1820, 1817, 1809, 1808, 1807, 136, 144, 33, 126,
	38, 1806, 1802, 1801, 83, 51, 1798, 117, 116, 80,
	150, 1797, 124, 109, 103, 1796, 84, 1795, 1793, 1790,
	1777, 58, 1775, 1774, 1772, 1768, 113, 115, 81, 50,
	1767, 53, 77, 119, 118, 16, 3, 21, 141, 23,
	1765, 11, 0, 1764, 10, 130, 180, 137, 1762, 1761,
	8, 1760, 13, 1759, 1758, 100, 1756, 1752, 1751, 30,
	27, 15, 1750, 1749, 2460, 1669, 121, 1748, 132,
}

//line sql.y:5479
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 292, 293, 293, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 272, 272, 272, 275, 275,
	26, 56, 8, 8, 8, 8, 7, 7, 13, 14,
	9, 10, 10, 15, 15, 68, 68, 16, 17, 17,
	17, 17, 296, 296, 106, 106, 104, 104, 105, 105,
	172, 172, 18, 19, 19, 182, 182, 181, 181, 181,
	183, 183, 183, 183, 217, 217, 20, 20, 20, 20,
	20, 80, 80, 274, 274, 273, 271, 271, 270, 270,
	269, 28, 29, 38, 38, 38, 38, 39, 40, 276,
	276, 247, 44, 44, 43, 43, 43, 43, 45, 45,
	42, 42, 41, 41, 249, 249, 236, 236, 248, 248,
	248, 248, 248, 248, 248, 235, 235, 94, 94, 153,
	153, 153, 153, 153, 153, 153, 153, 288, 288, 154,
	154, 154, 154, 154, 154, 289, 289, 289, 289, 219,
	219, 219, 219, 222, 222, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 221, 221, 221, 221, 221, 223,
	223, 223, 223, 223, 224, 224, 224, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 225,
	225, 225, 225, 225, 225, 225, 225, 234, 234, 226,
	226, 229, 229, 230, 230, 230, 231, 231, 231, 232,
	232, 227, 227, 227, 227, 228, 228, 228, 237, 261,
	261, 260, 260, 258, 258, 258, 258, 246, 246, 255,
	255, 255, 255, 255, 245, 245, 241, 241, 241, 242,
	242, 243, 243, 240, 240, 244, 244, 257, 257, 256,
	238, 238, 239, 239, 263, 290, 290, 290, 290, 291,
	291, 264, 281, 282, 280, 280, 280, 280, 280, 66,
	66, 66, 194, 194, 194, 253, 253, 252, 252, 252,
	254, 254, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	189, 189, 189, 279, 279, 279, 279, 279, 279, 278,
	278, 278, 250, 250, 250, 277, 277, 46, 46, 140,
	140, 35, 35, 35, 35, 35, 35, 34, 34, 34,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 30, 30, 30, 30, 30, 30, 30, 30, 30,
	30, 30, 36, 36, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 70, 70, 70, 70, 72, 72, 72, 266,
	266, 1, 1, 5, 5, 2, 2, 71, 71, 3,
	3, 4, 4, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 233, 233, 233, 265, 265,
	267, 267, 22, 27, 27, 23, 23, 23, 23, 24,
	24, 47, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 48,
	48, 48, 48, 48, 48, 48, 48, 48, 48, 283,
	283, 188, 188, 196, 196, 187, 187, 210, 210, 210,
	190, 190, 190, 191, 191, 287, 287, 287, 49, 49,
	51, 51, 52, 53, 53, 212, 212, 213, 213, 54,
	55, 67, 67, 67, 67, 67, 67, 69, 69, 69,
	12, 12, 12, 12, 63, 63, 63, 11, 11, 50,
	50, 57, 284, 284, 285, 286, 286, 286, 286, 58,
	60, 25, 25, 25, 25, 25, 25, 87, 87, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 81, 81, 81, 76, 76, 297, 61, 62, 62,
	79, 79, 79, 73, 73, 73, 78, 78, 78, 84,
	84, 86, 86, 86, 86, 86, 88, 88, 88, 88,
	88, 88, 88, 83, 83, 85, 85, 85, 85, 203,
	203, 203, 202, 202, 96, 96, 97, 97, 98, 98,
	99, 99, 99, 138, 114, 114, 170, 170, 169, 169,
	171, 171, 171, 171, 173, 173, 100, 100, 100, 100,
	101, 101, 102, 102, 103, 103, 211, 211, 208, 208,
	208, 207, 207, 107, 107, 107, 109, 108, 108, 108,
	108, 110, 110, 112, 112, 111, 111, 113, 115, 115,
	115, 115, 115, 116, 116, 95, 95, 95, 95, 95,
	95, 95, 95, 185, 185, 118, 118, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 129, 129, 129,
	129, 129, 129, 119, 119, 119, 119, 119, 119, 119,
	82, 82, 130, 130, 130, 137, 131, 131, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 126, 126, 126, 126, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	125, 125, 125, 125, 125, 125, 298, 298, 128, 127,
	127, 127, 127, 127, 127, 127, 77, 77, 77, 77,
	77, 216, 216, 216, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 143, 143, 74,
	74, 141, 141, 142, 144, 144, 139, 139, 139, 121,
	121, 121, 121, 121, 121, 121, 121, 123, 123, 123,
	145, 145, 146, 146, 147, 147, 148, 148, 149, 150,
	150, 150, 151, 151, 151, 151, 37, 37, 37, 37,
	37, 32, 32, 32, 32, 33, 33, 33, 89, 89,
	89, 89, 91, 91, 90, 90, 64, 64, 65, 65,
	65, 92, 92, 93, 93, 93, 93, 167, 167, 167,
	152, 152, 152, 152, 159, 159, 159, 155, 155, 157,
	157, 157, 158, 158, 158, 156, 164, 164, 166, 166,
	165, 165, 161, 161, 162, 162, 163, 163, 163, 160,
	160, 120, 120, 120, 120, 120, 168, 168, 168, 168,
	174, 174, 133, 133, 135, 135, 134, 136, 175, 175,
	179, 176, 176, 180, 180, 180, 180, 180, 177, 177,
	178, 178, 204, 204, 204, 184, 184, 195, 195, 192,
	192, 193, 193, 186, 186, 197, 197, 197, 59, 132,
	132, 262, 262, 259, 200, 200, 201, 201, 205, 205,
	209, 209, 206, 206, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 294, 295, 214, 215, 215, 215,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 6, 4, 7, 8, 8, 8, 6, 3, 1,
	1, 5, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 4, 9, 0, 2, 0,
	2, 3, 3, 4, 2, 3, 2, 1, 1, 0,
	2, 2, 3, 3, 2, 2, 1, 2, 1, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 1, 0,
	1, 0, 2, 2, 2, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	3, 1, 3, 1, 7, 5, 6, 6, 7, 0,
	1, 5, 3, 3, 1, 1, 2, 2, 2, 0,
	1, 1, 0, 1, 2, 0, 1, 1, 3, 2,
	1, 2, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 5,
	0, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 1, 5, 1, 3, 7, 1, 3, 3,
	1, 2, 2, 2, 5, 5, 5, 6, 6, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 5, 0, 10, 11, 7, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 3, 4, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	8, 8, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 4, 4,
	4, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 3, 3, 3, 7, 0, 3, 1, 3,
	1, 1, 3, 3, 1, 3, 4, 4, 4, 3,
	2, 4, 0, 1, 0, 2, 0, 1, 0, 1,
	2, 1, 1, 1, 2, 2, 1, 2, 3, 2,
	3, 2, 2, 2, 1, 1, 3, 3, 0, 5,
	4, 5, 5, 0, 2, 1, 3, 3, 3, 2,
	3, 1, 2, 0, 3, 1, 1, 3, 3, 4,
	4, 5, 3, 4, 5, 6, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 1, 1, 1, 3, 1, 3, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 4, 5, 5, 6, 4, 4, 6, 6,
	6, 8, 8, 8, 8, 9, 8, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 0, 3, 1, 3, 2, 0,
	1, 1, 0, 2, 4, 4, 0, 2, 2, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 0, 2, 4,
	0, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -292, -6, -8, -13, -14, -15, -16, -17, -18,
	-19, -20, -21, -22, -23, -24, -47, -48, -49, -51,
	-52, -53, -54, -55, -11, -50, -25, -26, -56, -57,
	-58, -59, -60, -9, -294, 6, 7, 8, -68, 10,
	11, 30, -28, -38, 160, -39, -29, 161, -40, 163,
	162, 198, 164, 191, 72, 237, 238, 240, 241, 242,
	243, -69, 196, 197, 166, 34, 43, 31, 32, 35,
	169, 82, 9, 341, 193, 192, 26, -293, 488, -79,
	5, -147, 16, -8, -61, -297, -61, -61, -61, -61,
	-61, -61, -247, -249, 82, 133, 82, -61, -44, -43,
	-42, -41, -45, 29, -35, -36, -268, -34, -31, 165,
	162, 206, 103, 104, 198, 199, 200, 164, 182, 197,
	201, 196, 215, -30, 78, 31, 354, 357, -254, 161,
	167, 168, 342, 106, 105, 73, 163, -251, 287, 458,
	-45, 460, 96, 98, 459, 42, 172, 461, 462, 463,
	464, 181, 465, 466, 467, 468, 474, 475, 476, 477,
	107, 5, -61, -209, -205, -272, -199, 85, 86, 87,
	351, 184, 385, 386, 231, 78, 39, 287, 458, 237,
	251, 245, 272, 264, 352, 387, 234, 185, 219, 455,
	262, 111, 460, 388, 199, 292, 293, 294, 96, 240,
	328, 473, 236, 389, 471, 98, 459, 77, 49, 42,
	194, 260, 256, 461, 220, 390, 362, 213, 106, 103,
	480, 34, 254, 48, 28, 470, 105, 47, 462, 124,
	391, 463, 296, 277, 449, 46, 297, 200, 392, 81,
	356, 457, 298, 255, 299, 230, 469, 166, 393, 441,
	300, 301, 450, 394, 278, 282, 395, 320, 302, 487,
	50, 396, 397, 451, 104, 398, 76, 464, 249, 250,
	399, 228, 183, 322, 276, 181, 33, 303, 353, 232,
	56, 207, 323, 44, 280, 484, 43, 445, 400, 448,
	275, 271, 51, 401, 402, 403, 404, 465, 274, 248,
	270, 479, 225, 466, 60, 168, 284, 283, 285, 214,
	319, 267, 405, 406, 407, 188, 79, 408, 257, 19,
	409, 410, 304, 221, 411, 54, 412, 413, 326, 197,
	414, 52, 467, 37, 202, 481, 468, 415, 416, 417,
	418, 419, 306, 420, 305, 279, 281, 209, 307, 355,
	421, 253, 201, 472, 422, 189, 456, 203, 206, 196,
	327, 190, 423, 424, 425, 426, 427, 235, 428, 429,
	241, 474, 41, 430, 431, 432, 433, 229, 224, 321,
	330, 59, 80, 289, 434, 454, 247, 222, 435, 238,
	53, 475, 476, 477, 216, 478, 7, 485, 486, 309,
	107, 226, 227, 45, 268, 208, 436, 437, 258, 259,
	273, 246, 269, 239, 442, 210, 310, 198, 438, 329,
	223, 290, 359, 215, 311, 453, 358, 266, 263, 217,
	439, 312, 173, 211, 212, 440, 443, 313, 314, 316,
	317, 233, 315, 318, 218, 357, 244, 261, 291, 171,
	-61, 171, -111, -205, 171, -177, 293, -196, 295, 308,
	303, 313, 301, -188, 304, 306, 209, -287, 320, 171,
	310, 160, 151, 296, 305, 314, 315, 233, 318, 218,
	-283, -272, 463, 478, 111, 265, 300, 298, 321, 445,
	317, 316, -205, 239, -212, 244, -200, -272, -199, 242,
	-111, -67, 441, 164, -214, -214, -81, 445, 447, -131,
	-95, -117, 117, -122, 29, 24, -121, -118, -139, -136,
	-137, 151, 152, 154, 153, 155, 140, 141, 148, 118,
	156, -126, -124, -125, -127, 89, 88, 97, 90, 91,
	92, 93, 99, 100, 101, -200, -205, -134, -294, 66,
	67, 342, 343, 344, 345, 350, 346, 120, 55, 337,
	331, 340, 339, 338, 335, 336, 333, 334, 348, 349,
	176, 332, 170, 146, 341, -272, -199, 42, 309, 309,
	-111, -61, -10, -9, -294, 6, 21, 22, -151, 18,
	17, -295, 84, -73, -86, 61, 62, -88, 22, 36,
	65, 63, 21, -62, -85, 142, -95, -205, -85, -186,
	175, -186, -186, -176, -217, 239, -180, 321, 320, -201,
	-178, -200, -198, -177, 319, 165, 360, 116, 23, 25,
	119, 151, 17, 120, 35, 167, 265, 182, 150, 178,
	342, 160, 70, 361, 333, 334, 331, 337, 344, 345,
	332, 295, 29, 11, 363, 26, 192, 22, 36, 144,
	162, 123, 195, 24, 193, 101, 366, 20, 73, 187,
	12, 180, 38, 14, 367, 368, 15, 176, 175, 135,
	172, 68, 9, 156, 27, 132, 64, 369, 113, 370,
	371, 372, 373, 66, 133, 18, 482, 335, 336, 31,
	446, 374, 350, 204, 146, 71, 57, 447, 117, 375,
	376, 99, 377, 102, 74, 452, 114, 16, 69, 40,
	378, 205, 379, 177, 483, 380, 324, 381, 134, 163,
	341, 67, 382, 170, 308, 6, 347, 30, 191, 179,
	109, 65, 383, 171, 122, 348, 349, 174, 100, 5,
	112, 32, 10, 72, 75, 338, 339, 340, 55, 108,
	354, 121, 13, 384, 325, 115, 111, -248, 133, -235,
	-239, -200, 186, -264, 182, -111, -257, -256, -200, -80,
	-195, 172, 180, 179, 112, -276, 114, 226, 332, 170,
	-41, -42, -177, 150, 203, 83, 83, -239, -238, -237,
	-277, 205, 186, -263, -255, 178, 187, -245, 179, 180,
	-240, 172, 113, -277, -240, 177, 187, 205, 205, 107,
	205, 107, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 202, -246, 125, -246, 358, 358, -251, -277, -277,
	-277, 174, 33, 33, -197, -240, 174, 23, -246, -246,
	-177, 150, -246, -246, -246, -246, 213, 213, -246, -246,
	-246, -246, -246, -246, -246, -246, -246, -246, -246, -246,
	-246, -246, -246, 171, -276, -89, 318, 233, 78, -43,
	215, -27, -111, -195, 172, 173, -276, -111, 157, -111,
	-190, 133, 13, -190, -187, 309, 307, 294, 299, -190,
	-190, -190, -190, 216, 292, -241, 172, 33, 183, 309,
	216, 292, 216, 217, 216, 217, 302, 312, 216, -210,
	12, 135, 332, 297, 301, 209, 171, 210, 173, 311,
	-272, 448, 217, -210, 89, 309, 212, -190, -215, -294,
	-201, 265, -215, -215, 30, 174, -200, -63, -200, 89,
	-12, -8, -16, -15, -17, 125, -87, 309, -75, 151,
	463, 449, 450, 451, 448, 306, 456, 454, 452, 216,
	453, 83, 116, 114, 115, 132, -95, -119, 135, 117,
	133, 134, 119, 137, 136, 147, 140, 141, 142, 143,
	144, 145, 146, 138, 139, 150, 125, 126, 127, 128,
	129, 130, 131, -185, -294, -137, -294, 158, 159, -122,
	-122, -122, -122, -122, -122, -122, -122, -122, -122, -294,
	157, -7, -131, -9, -294, -294, -294, -294, -294, -294,
	-294, -294, -143, -95, -294, -298, -294, -298, -128, -294,
	-298, -128, -298, -128, -298, -298, -128, -298, -128, -298,
	-298, -128, -294, -294, -294, -294, -294, -294, -294, -214,
	-284, -285, -114, -111, -294, 233, -147, -8, -61, -167,
	20, 31, -95, -148, -149, -95, -147, 57, -83, -85,
	-88, 61, 62, 95, 12, -203, -202, 23, -200, 89,
	157, 12, -112, 27, -111, -97, -98, -99, -100, -114,
	-138, -294, 12, -104, -105, -111, -113, -205, 83, 239,
	-180, -217, -182, -181, 322, 324, 125, -204, -200, 89,
	29, 84, 83, -111, -219, -222, -224, -223, -225, -220,
	-221, 262, 263, 151, 266, 268, 269, 270, 271, 272,
	273, 274, 275, 276, 277, 30, 194, 258, 259, 260,
	261, 278, 279, 280, 281, 282, 283, 284, 285, 245,
	264, 352, 246, 247, 248, 249, 250, 251, 253, 254,
	255, 256, 257, -275, -272, 82, 84, 83, -226, 82,
	-89, 171, -272, 172, 172, 172, -61, 341, -246, -246,
	202, -34, -31, -268, 16, -30, -31, 165, 103, 104,
	162, 82, -235, 82, -244, -275, -272, 82, 113, 177,
	112, -243, -240, -243, -244, -272, -139, -200, -205, -272,
	113, 113, -173, -200, -173, -173, 21, -173, 21, -173,
	21, 90, -200, -173, 21, -173, 21, -173, 21, -173,
	21, -173, 21, 29, 76, 77, 29, 79, 80, 81,
	-139, -139, -235, -177, -111, -272, 90, 90, -246, -246,
	90, 89, 89, 89, -246, -246, 90, 89, -207, -205,
	89, -278, 188, 230, 232, 90, 90, 90, 90, 29,
	89, -279, 29, 470, 469, 471, 472, 473, 90, 29,
	90, 29, 90, -200, 82, -111, -92, 220, 160, 162,
	165, 74, 89, 234, 125, 42, 83, 174, 171, -272,
	-192, 176, -192, -206, -205, -198, 89, -95, -242, 12,
	135, -210, -210, -190, -111, -242, -210, -190, -111, -190,
	-190, -190, -190, -210, -210, -210, -190, -205, -205, -111,
	-111, -111, -111, -111, -111, -111, -215, -215, -215, -191,
	133, -190, 448, 74, -213, 242, 276, 442, 443, 444,
	83, 354, -104, 448, 448, 448, 448, 448, 448, -95,
	-95, -95, -95, -129, 99, 117, 100, 101, -122, -130,
	-134, -137, 94, 135, 133, 134, 119, -122, -122, -122,
	-122, -122, -122, -122, -122, -122, -122, -122, -122, -122,
	-122, -122, -216, -272, 89, 151, -272, -121, -121, -200,
	-84, 22, 36, -83, -201, -206, -198, -79, -295, -295,
	-147, -83, -83, -95, -95, -139, 89, -83, -139, 89,
	-83, -83, -78, 22, 36, -141, -142, 121, -139, -295,
	-122, -200, -200, -83, -84, -84, -83, -83, 83, -286,
	324, 325, 446, -208, 205, -207, 23, -132, -131, 89,
	-151, -295, -152, 27, 10, 135, 83, 19, 83, -150,
	25, 26, -151, -123, -200, 90, 93, -96, 83, 12,
	-88, -111, -202, 142, -206, -111, -172, 205, -111, 30,
	83, -107, -109, -108, -110, 64, 68, 70, 65, 66,
	67, 71, -211, 23, -97, -8, -294, -111, -104, -296,
	83, 12, 75, -296, 83, 157, -180, -182, 83, 323,
	325, 326, 74, 102, -95, -228, 150, -253, -252, -251,
	-235, -237, -238, -239, 84, -153, -94, 38, -231, 290,
	289, -226, -226, -226, -226, -226, -227, -177, -227, -227,
	-227, 82, 82, -226, -226, -226, -226, -229, 82, -229,
	-229, -230, 82, -230, -264, -95, -261, -260, -258, -259,
	181, 96, 354, 75, -256, -150, 90, -92, -193, 176,
	-262, -259, -272, -272, -272, -193, -272, 89, -272, 89,
	83, 17, -236, -235, -46, 230, -267, 205, -263, -257,
	-244, 113, -243, -244, -244, 157, -272, 83, 27, 107,
	107, 107, 107, 354, 162, 30, -235, -46, -216, 174,
	-216, -216, 89, 89, -189, 478, -104, -91, 222, 125,
	211, 211, 171, 171, 224, -111, 235, 236, 234, 21,
	223, 225, 227, 213, -111, -111, -192, 74, -106, -111,
	24, -205, -111, -190, -190, -111, -190, -190, 89, -111,
	-200, -75, 324, 354, 20, -76, 20, 99, 100, 101,
	-130, -122, -122, -122, -82, 195, 116, -295, -295, -83,
	-83, -294, 157, -10, -151, -295, -295, 83, 75, 23,
	12, 12, -295, 12, 12, -295, -295, -83, -144, -142,
	123, -95, -295, -295, 83, 83, -295, -295, -295, -295,
	-295, -285, 445, 325, -115, 72, 175, 73, -294, -207,
	-295, -167, 40, 48, 59, -95, -95, -149, -167, -184,
	20, 12, 55, 55, -116, 13, -85, -97, -88, 157,
	-116, -120, 30, 55, -8, -294, -294, -175, -179, -139,
	-98, -99, -99, -98, -99, 64, 64, 64, 69, 64,
	69, 64, -108, -205, -295, -295, -8, -172, 75, -97,
	-111, -97, -113, -205, 142, -181, -183, 327, 324, 330,
	-272, 89, -70, 205, 83, -251, -239, -291, 99, 117,
	29, 74, 287, 96, -289, -290, 177, 112, 113, 189,
	23, 39, -232, 291, -227, -227, -228, -272, 89, 151,
	-228, -228, -228, -234, 89, -234, 90, 90, 84, -37,
	-32, -33, 31, 78, -258, -246, 89, 37, -200, 84,
	-91, -111, 117, 74, -262, -262, -262, -205, 16, -169,
	-200, 83, 84, -140, 231, 84, -200, 84, 82, -244,
	-244, -201, -200, -294, 171, 29, 29, -46, -140, -228,
	-272, 480, 479, 84, 173, 229, -93, 337, 89, 85,
	-111, -111, -111, -111, -111, 165, 162, 214, 174, -104,
	-111, 83, -66, 190, 185, -210, -210, 31, 324, 457,
	455, -82, 116, -122, -122, -295, -295, -84, -201, -147,
	-167, -218, 151, 262, 194, 260, 256, 276, 267, 289,
	258, 290, -216, -218, -122, -122, -122, -122, 351, -147,
	124, -95, 122, -122, -122, 172, 172, 172, -173, 41,
	89, 89, 60, -111, -145, 14, -95, 142, -151, -174,
	74, -175, -133, -135, -134, -294, -168, -295, -200, -173,
	-116, 83, 125, -102, -101, 74, 75, -103, 74, -101,
	64, 64, -295, -116, -97, -116, -116, 157, 324, 328,
	329, 17, -251, 99, -122, 10, 89, 113, 113, -111,
	82, -228, -228, 84, 83, 84, 83, 84, 83, -194,
	391, 117, -33, -32, -246, -246, 90, -272, 173, 24,
	-111, 74, 74, 74, 17, 83, -235, -139, 55, -261,
	-169, -265, -267, -111, -121, -140, -111, -90, 220, 228,
	82, 86, -274, 75, 211, 287, 211, -111, -66, -37,
	-111, -190, -190, 31, -272, -122, -295, -151, -295, -226,
	-226, -226, -230, -226, 250, -226, 250, -295, -295, 20,
	20, 20, 20, -294, -74, 347, -95, 83, 83, -294,
	-294, -294, -295, 89, -227, -146, 15, 17, 28, -174,
	83, -295, -295, 83, 55, 157, -295, -147, -179, -95,
	-95, 82, -95, -147, -116, -1, -2, 482, 483, 484,
	-125, 82, -122, -227, 89, -227, 90, 90, 391, 29,
	79, 80, 81, 29, 76, 77, -111, -111, -111, -111,
	-169, -200, 207, 84, -295, 83, -233, 354, 357, -170,
	82, 84, -271, 354, -273, -272, -200, -200, -200, -167,
	-227, -272, -122, -122, -122, -122, -122, -151, 89, -122,
	-122, -171, -295, -200, 177, -171, -171, -208, -227, -156,
	-161, -187, -95, -131, 113, -135, 55, -8, -200, -133,
	-200, -151, -169, -151, 487, 113, -71, 82, 294, -169,
	84, -228, -228, 84, 84, -170, 208, -290, -267, 358,
	358, 23, -169, -270, -269, -201, 82, 75, -295, -295,
	-295, -295, -77, 135, 354, -295, -295, -295, 83, -295,
	-295, -295, -115, -159, 441, -164, 44, -162, -163, 45,
	-160, 46, 54, 10, -133, 157, 84, 82, -5, 78,
	-3, 481, -95, 82, 84, -154, 23, -294, -8, 84,
	83, 125, -169, -111, -295, 352, 71, 355, -200, 177,
	-156, 49, 268, -166, -165, 53, 45, -163, 17, 47,
	17, -175, -200, -95, 82, 125, -72, 485, 90, 84,
	-169, -281, -282, 74, -291, -288, 99, 117, 96, -289,
	108, 109, -8, -122, 204, -64, 354, -269, -250, -201,
	89, 90, 84, 60, 353, 356, -157, 51, -155, 50,
	-155, -165, 17, 17, 89, 17, 89, 84, -169, 90,
	-266, 82, 17, 84, -282, 74, 11, 10, 99, 89,
	-64, -295, -295, -65, 219, 445, -274, 60, -158, 52,
	74, 102, 89, 89, 89, -3, 84, -265, -1, -280,
	190, 185, 188, 30, -280, 182, -271, 354, 74, 102,
	-72, -3, 84, 487, 113, 184, 29, 99, 221, 355,
	-266, -72, 82, -5, 356, -266, -95, 82, 84, -169,
	-4, 486, 84, 90, -4,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 864, 0, 596, 596, 596, 596, 596,
	596, 596, 0, 0, 596, -2, -2, 596, 1000, 0,
	596, 0, 0, -2, 529, 530, 0, 532, -2, 0,
	0, 541, 1426, 1426, 591, 0, 0, 0, 0, 0,
	596, 1424, 55, 56, 547, 548, 549, 1, 3, 0,
	600, 872, 0, 0, -2, 598, 0, 0, 983, 983,
	983, 0, 86, 87, 0, 0, 0, -2, 90, -2,
	114, 115, 0, 119, 383, 344, 386, 342, 372, -2,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 237, 237, 0, 0, -2, 335,
	335, 335, 0, 0, 0, 369, 985, 290, 237, 237,
	0, 237, 237, 237, 237, 0, 0, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 888, 118, 1001, 998, 999, 35, 36, 37,
	1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154,
	1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174,
	1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184,
	1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194,
	1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 0,
	977, 0, 460, 685, 0, 520, 520, 0, 520, 520,
	520, 520, 0, 0, 0, 472, 0, 0, 0, 0,
	517, 0, 0, 491, 493, 0, 517, 0, 0, 504,
	520, 1427, 1427, 1427, 968, 0, 514, 512, 526, 527,
	509, 510, 528, 531, 0, 536, 539, 994, 995, 0,
	554, 0, 1224, 546, 559, 560, 0, 592, 593, 40,
	736, 695, 0, 701, 703, 0, 738, 739, 740, 741,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 768, 769, 770, 771, 849, 850, 851, 852, 853,
	854, 855, 856, 705, 706, 846, 0, 957, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 837, 0, 806,
	806, 806, 806, 806, 806, 806, 806, 806, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 1426, 0, 569,
	0, 0, 864, 51, 0, 596, 601, 602, 907, 0,
	0, 864, 1425, 0, 0, -2, -2, 612, 618, 619,
	620, 621, 622, 597, 0, 625, 629, 0, 0, 0,
	984, 0, 0, 72, 0, 1388, 961, -2, -2, 0,
	0, 996, 997, 970, -2, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, -2, 0, 0, 128,
	129, 0, 38, 263, 0, 124, 0, 257, 209, 888,
	0, 0, 0, 0, 0, 596, 0, 978, 109, 110,
	116, 117, 237, 237, 0, 118, 118, 351, 352, 353,
	0, 0, -2, 261, 0, 336, 0, 0, 251, 251,
	255, 253, 254, 0, 0, 0, 0, 0, 0, 363,
	0, 364, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 444, 0, 238, 0, 381, 382, 291, 0, 0,
	0, 0, 361, 362, 0, 0, 986, 987, 0, 0,
	237, 237, 0, 0, 0, 0, 237, 237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 901, 0, 0, 0, -2,
	0, 452, 0, 0, 0, 979, 979, 459, 0, 461,
	462, 0, 0, 463, 0, 517, 517, 515, 516, 465,
	466, 467, 468, 520, 0, 0, 246, 247, 248, 517,
	520, 0, 520, 520, 520, 520, 517, 517, 517, 520,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1427,
	1427, 1427, 523, 520, 0, 501, 502, 505, 506, 1428,
	1429, 1015, 507, 508, 969, 537, 540, 557, 555, 556,
	558, 550, 551, 552, 553, 0, 571, 572, 577, 0,
	0, 0, 0, 583, 584, 585, 0, 0, 588, 589,
	590, 0, 0, 0, 0, 0, 699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 723, 724, 725, 726,
	727, 728, 729, 702, 0, 716, 0, 0, 0, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 0, 609,
	0, 0, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 606, 0, 838, 0, 789, 0, 790, 798, 0,
	791, 799, 792, 800, 793, 794, 801, 795, 802, 796,
	797, 803, 0, 0, 0, 609, 609, 0, 0, 41,
	561, 562, 0, 668, 989, 0, 872, 0, 611, 910,
	0, 0, 873, 865, 866, 869, 872, 0, 634, 623,
	613, 616, 617, 599, 0, 626, 630, 0, 632, 633,
	0, 0, 70, 0, 684, 0, 636, 638, 639, 640,
	666, 0, 0, 0, 0, 66, 68, 685, 0, 1388,
	967, 0, 74, 75, 0, 0, 0, 225, 972, 973,
	974, -2, 244, 0, -2, 216, 160, 161, 162, 209,
	164, 209, 209, 209, 209, 221, 221, 221, 221, 192,
	193, 194, 195, 196, 0, 0, 179, 209, 209, 209,
	209, 199, 200, 201, 202, 203, 204, 205, 206, 165,
	166, 167, 168, 169, 170, 171, 172, 173, 211, 211,
	211, 213, 213, 0, 39, 0, 229, 0, 869, 0,
	901, 981, 991, 0, 0, 0, 981, 92, 0, 0,
	384, 345, 373, 385, 0, 348, 349, -2, 0, 0,
	335, 0, 337, 0, 245, 0, -2, 0, 255, 0,
	251, 255, 252, 255, 243, 256, 365, 846, 0, 366,
	367, 0, 424, 654, 0, 0, 0, 0, 0, 430,
	431, 432, 0, 434, 435, 436, 437, 438, 439, 440,
	441, 442, 443, 374, 375, 376, 377, 378, 379, 380,
	0, 0, 337, 0, 370, 0, 292, 293, 0, 0,
	296, 297, 298, 299, 0, 0, 302, 303, 304, 671,
	672, 305, 329, 330, 331, 306, 307, 308, 309, 310,
	311, 312, 323, 324, 325, 326, 327, 328, 313, 314,
	315, 316, 317, 320, 0, 102, 892, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 979, 0,
	0, 0, 0, 686, 1002, 1003, 521, 522, 0, 249,
	250, 520, 520, 469, 492, 0, 520, 473, 494, 474,
	476, 475, 477, 496, 497, 520, 480, 518, 519, 481,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 498,
	0, 499, 500, 0, 0, 538, 542, 543, 544, 545,
	0, 0, 574, 579, 580, 581, 582, 594, 587, 737,
	696, 697, 698, 700, 717, 0, 719, 721, 707, 708,
	732, 733, 734, 0, 0, 0, 0, 730, 712, 0,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 757, 821, 822, 823, 0, 755, 756, 767,
	0, 0, 0, 610, 847, 0, -2, 0, 735, 956,
	872, 0, 0, 0, 0, 740, 849, 0, 740, 849,
	0, 0, 0, 607, 608, 844, 841, 0, 0, 807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 567, 0, 688, 0, 669, 0, 0, 990, 570,
	907, 52, 42, 0, 908, 0, 0, 0, 0, 868,
	870, 871, 907, 0, 857, 0, 0, 693, 0, 0,
	614, 48, 631, 627, 0, 693, 0, 0, 683, 0,
	0, 0, 0, 0, 0, 673, 0, 0, 676, 0,
	0, 0, 0, 667, 0, 0, 0, -2, 0, 0,
	0, 62, 63, 0, 0, 0, 962, 73, 0, 0,
	78, 79, 963, 964, 965, 966, 0, 402, -2, 287,
	130, 132, 133, 134, 125, 269, 0, 0, 219, 217,
	218, 163, 221, 221, 186, 187, 225, 0, 225, 225,
	225, 0, 0, 180, 181, 182, 183, 174, 0, 175,
	176, 177, 0, 178, 262, 0, 876, 230, 231, 233,
	237, 0, 0, 0, 258, 259, 0, 892, 0, 0,
	0, 992, 991, 991, 991, 0, 120, 121, 122, 123,
	118, 0, 0, 126, 339, 338, 0, 0, 260, 0,
	0, 255, 255, 240, 241, 0, 368, 0, 0, 426,
	427, 428, 429, 0, 0, 0, 337, 339, 225, 0,
	294, 295, 300, 301, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 398, 399, 400, 401,
	889, 890, 891, 0, 0, 453, 0, 0, 279, 64,
	980, 458, 517, 479, 495, 517, 471, 478, 524, 503,
	534, 578, 0, 0, 0, 586, 0, 718, 720, 722,
	709, 730, 713, 0, 710, 0, 0, 704, 772, 0,
	0, 609, 0, 864, 907, 776, 777, 0, 0, 0,
	0, 0, 814, 0, 0, 815, 0, 864, 0, 842,
	0, 0, 788, 808, 0, 0, 809, 810, 811, 812,
	813, 563, 566, 568, 644, 0, 0, 0, 0, 670,
	988, 44, 0, 0, 0, 874, 875, 867, 43, 0,
	975, 976, 858, 859, 860, 0, 624, 635, 615, 0,
	872, 950, 0, 0, 942, 0, 0, 693, 958, 0,
	637, 662, 664, 0, 659, 674, 675, 677, 0, 679,
	0, 681, 682, 641, 642, 643, 0, 693, 0, 693,
	67, 693, 69, 0, 687, 76, 77, 0, 0, 83,
	226, 227, 111, 0, 118, 289, 131, 135, 140, 0,
	0, 0, 144, 0, 146, 270, 0, 156, 158, 0,
	0, 138, 159, 220, 225, 225, 188, 222, 223, 224,
	189, 190, 191, 0, 207, 0, 0, 0, 282, 88,
	880, 879, 237, 237, 232, 0, 235, 0, 993, 210,
	0, 101, 0, 0, 0, 0, 0, 107, 0, 343,
	648, 0, 354, 355, 0, 423, 0, 229, 0, 239,
	242, 847, 655, 0, 0, 356, 0, 339, 359, 360,
	371, 321, 322, 319, 0, 0, 902, 903, 0, 906,
	93, 391, 393, 392, 396, 0, 0, 389, 0, 279,
	876, 0, 457, 280, 281, 520, 520, 573, 0, 576,
	0, 711, 0, 731, 714, 773, 774, 0, 848, 872,
	46, 0, 209, 209, 827, 209, 213, 830, 209, 832,
	209, 835, 0, 0, 0, 0, 0, 0, 0, 839,
	787, 845, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 912, 909, 45, 862, 0, 694, 628, 49, 53,
	0, 950, 941, 952, 954, 0, 0, 0, 946, 0,
	864, 0, 0, 656, 663, 0, 0, 657, 0, 658,
	678, 680, -2, 864, 693, 60, 61, 0, 80, 81,
	82, 411, 288, 141, 142, 0, 145, 155, 157, 0,
	0, 184, 185, 221, 0, 221, 0, 214, 0, 271,
	283, 0, 877, 878, 0, 0, 234, 236, 0, 982,
	103, 0, 0, 0, 0, 0, 127, 340, 0, 228,
	0, 0, 448, 445, 357, 358, 646, 893, 894, 895,
	0, 905, 96, 0, 0, 0, 0, 454, 455, 456,
	65, 464, 470, 575, 595, 715, 775, 907, 778, 824,
	221, 828, 829, 831, 833, 834, 836, 780, 779, 0,
	0, 0, 0, 0, 872, 0, 843, 0, 0, 0,
	0, 0, 668, 221, 932, 50, 0, 0, 0, 54,
	0, 955, 0, 0, 0, 0, 71, 872, 959, 960,
	660, 0, 665, 872, 59, 0, 0, 412, 415, 416,
	143, 0, 0, 225, 208, 225, 0, 0, 284, 881,
	882, 883, 884, 885, 886, 887, 646, 104, 105, 106,
	346, 649, 0, 0, 425, 0, 433, 0, 0, 0,
	0, 904, 390, 0, 94, 95, 0, 0, 395, 47,
	825, 826, 0, 0, 0, 0, 816, 0, 840, 0,
	0, 0, 690, 650, 651, 0, 0, 688, 914, 913,
	926, 939, 863, 861, 0, 953, 0, 945, 948, 944,
	947, 57, 0, 58, 0, 413, 419, 0, 0, 0,
	149, 197, 198, 212, 215, 0, 0, 264, 449, 446,
	447, 0, 0, 97, 98, 0, 0, 0, 781, 783,
	782, 784, 0, 0, 0, 786, 804, 805, 0, 689,
	691, 692, 645, 932, 0, 925, 0, -2, 934, 0,
	0, 0, 940, 0, 943, 0, 661, 0, 0, 0,
	406, 0, 0, 0, 265, 269, 0, 0, 896, 647,
	0, 0, 0, 397, 785, 0, 0, 0, 652, 653,
	919, 917, 917, 927, 928, 0, 0, 935, 0, 0,
	0, 951, 949, 0, 0, 0, 409, 0, 420, 417,
	0, 266, 267, 0, 136, 150, 151, 0, 0, 154,
	147, 148, 896, 0, 0, 387, 898, 99, 100, 332,
	333, 334, 93, 817, 0, 820, 922, 0, 915, 918,
	916, 929, 0, 0, 936, 0, 938, 419, 0, 414,
	405, 0, 411, 418, 268, 0, 0, 0, 152, 153,
	89, 450, 451, 0, 899, 900, 96, 818, 911, 0,
	920, 921, 930, 931, 937, 406, 419, 0, 0, 272,
	274, 275, 0, 0, 273, 0, 394, 0, 923, 924,
	409, 406, 410, 0, 413, 276, 277, 278, 897, 0,
	403, 409, 0, 0, 819, 404, 0, 0, 421, 0,
	407, 0, 421, 422, 408,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 118, 3, 3, 3, 145, 137, 3,
	82, 84, 142, 140, 83, 141, 157, 143, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 488,
	126, 125, 127, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 147, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 148,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 119, 120, 121, 122, 123, 124, 128,
	129, 130, 131, 132, 133, 134, 135, 138, 139, 144,
	146, 149, 150, 151, 152, 153, 154, 155, 156, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:446
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:456
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:489
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:495
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:499
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:503
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:508
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:518
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:524
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:530
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:539
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:543
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:547
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:570
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:578
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:584
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:590
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:598
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:604
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:608
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:627
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:639
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:643
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:655
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:659
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:663
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:667
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:677
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:681
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:687
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:691
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:697
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:701
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:706
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:710
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:716
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:722
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:726
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:732
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:736
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:742
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:746
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:750
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:756
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:760
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:764
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:768
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:774
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:778
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:784
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:797
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:806
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:810
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:826
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:836
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:841
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:846
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:852
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:857
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:863
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:869
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:876
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:883
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:888
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:893
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:898
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:905
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:912
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:923
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:930
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:934
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:940
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:944
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:948
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:952
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:958
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:968
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:972
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:978
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:982
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:989
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:993
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:999
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1009
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1014
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1019
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1023
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1028
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1042
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1048
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1056
		{
			yyVAL.str = ""
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1060
		{
			yyVAL.str = ""
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1069
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1073
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1079
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1085
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1090
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1095
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1100
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1105
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1112
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1116
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1121
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1125
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1130
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1136
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1142
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1147
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1154
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1158
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1162
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1166
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1286
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1294
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1298
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1306
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1334
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1338
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 198:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1353
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1357
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1361
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1365
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1373
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1377
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1397
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1402
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1406
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1414
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1424
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1436
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1440
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1445
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1449
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = ""
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1486
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1495
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1501
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1505
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1511
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1515
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1520
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1524
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = ""
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1540
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1544
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1548
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1552
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1556
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1561
		{
			yyVAL.str = ""
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = yyDollar[2].str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = "key"
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = yyDollar[1].str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = ""
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1624
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1628
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1634
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1640
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1644
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1650
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1654
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1660
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1666
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1670
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1674
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1678
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1683
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1687
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1693
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1699
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1705
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1711
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1715
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1719
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1723
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1727
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = ""
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1745
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1749
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1753
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1758
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1762
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1768
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1782
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1796
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1800
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1804
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1808
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1812
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1816
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1820
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1824
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1828
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1832
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1836
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1840
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1844
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1848
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1852
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1856
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1860
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1864
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1868
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1872
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1876
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1880
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1884
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1888
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1892
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1896
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1900
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1905
		{
			yyVAL.str = ""
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1932
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1936
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1945
		{
			yyVAL.str = ""
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1951
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1955
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1964
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1969
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1973
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1977
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1981
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 346:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1989
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1995
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2009
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2013
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2017
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2021
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2025
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2029
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2033
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2037
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2041
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2045
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2049
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2053
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2057
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2061
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2065
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2069
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2073
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2077
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2081
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2085
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2089
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2093
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2099
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2103
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2109
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2113
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2117
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2121
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2125
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2129
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2133
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2137
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2141
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2147
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2153
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2160
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2167
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2173
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2177
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2184
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2191
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2203
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2213
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2217
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2221
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2234
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2244
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2248
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2259
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2266
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2273
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2280
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2292
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2304
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2317
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2328
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2332
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2341
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2352
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2356
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = ""
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = ""
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2390
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2394
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2418
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2422
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2426
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2430
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2434
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2438
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2442
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2446
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2450
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2454
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2458
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2462
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2466
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2470
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2474
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2478
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2482
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2486
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2490
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2494
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2498
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2502
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2507
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2511
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2515
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2522
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2526
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 450:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2532
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2536
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2542
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2548
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2552
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 455:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2558
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2562
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2571
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2575
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2581
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2585
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2590
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2596
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2600
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2604
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2608
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2612
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2616
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2620
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2624
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2628
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2632
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2636
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2640
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2644
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2648
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2652
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2656
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2660
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2664
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2668
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2672
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2676
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2680
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2684
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2688
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2692
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2696
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2704
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2708
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2716
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2720
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2728
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2732
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2808
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.str = "extended "
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2818
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2822
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2856
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2860
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2866
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2870
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2876
		{
			yyVAL.empty = struct{}{}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2880
		{
			yyVAL.empty = struct{}{}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2884
		{
			yyVAL.empty = struct{}{}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2890
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2894
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2900
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2916
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2920
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.empty = struct{}{}
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2927
		{
			yyVAL.empty = struct{}{}
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.empty = struct{}{}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.empty = struct{}{}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2937
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2943
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2948
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2952
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2956
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2960
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2964
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2968
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = yyDollar[1].str
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2978
		{
			yyVAL.str = yyDollar[1].str
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = yyDollar[1].str
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2988
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2992
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2996
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3000
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = ""
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3023
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3029
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3045
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3055
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3061
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3065
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3069
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3073
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3131
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3167
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3176
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3180
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3184
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.str = ""
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			setAllowComments(yylex, true)
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3202
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 598:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.strs = nil
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3212
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3218
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3222
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3226
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = ""
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.str = SQLCacheStr
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3244
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3248
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3252
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3257
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3261
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3266
		{
			yyVAL.strs = nil
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3282
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.str = SQLCacheStr
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = DistinctStr
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = DistinctStr
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = StraightJoinHint
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3318
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3328
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3332
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3336
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3340
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3345
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3365
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3369
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3375
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3389
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3393
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3397
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3403
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3409
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3413
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3418
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3422
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3428
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3438
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3442
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3446
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3450
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3456
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3460
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3473
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3477
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3481
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3485
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3491
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3493
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3499
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3505
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3508
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3513
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3517
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3521
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3534
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3538
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3542
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3548
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3554
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3558
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3562
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3566
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3572
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3576
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3586
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3600
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3611
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3615
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3619
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3623
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3627
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3632
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3636
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3642
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3646
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3650
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3654
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3658
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3662
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3666
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3670
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3676
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3686
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3690
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3696
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3700
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3704
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3708
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3712
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3716
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3720
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3724
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3728
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3732
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3738
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3742
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3746
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3750
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3754
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3758
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3764
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3768
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3772
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3776
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3780
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3784
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3788
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3793
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3797
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3803
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3807
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3811
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3818
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3824
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3828
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3834
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3838
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3842
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3850
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3854
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3858
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3862
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3866
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3870
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3874
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3878
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3882
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3886
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3890
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3894
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3898
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3902
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3906
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3910
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3914
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3918
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3922
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3926
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3930
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3934
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3938
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3942
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3946
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3950
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3968
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3972
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3976
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3980
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3990
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3994
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3998
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4002
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4006
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4010
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4014
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4018
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4022
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4026
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4030
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4034
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4038
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4042
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4052
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4056
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4060
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4065
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4070
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4075
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4081
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4086
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4091
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4095
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4099
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4104
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4109
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4114
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4118
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4122
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4142
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4146
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4150
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4154
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4158
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4162
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4166
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4172
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4176
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4180
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4184
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4188
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4202
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4212
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4216
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4220
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4224
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4228
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4234
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4238
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4242
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4246
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4250
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4254
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4258
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4263
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4267
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string("")
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4282
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4286
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4292
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4297
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4301
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4307
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4311
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4315
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4321
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4325
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4329
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4333
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4337
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4341
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4365
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4369
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4375
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4379
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4384
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4388
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4393
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4397
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4403
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4407
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4413
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4418
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4422
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4426
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4431
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4435
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4439
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4443
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4448
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4452
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4456
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4460
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4464
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4471
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4475
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4479
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4483
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4489
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4493
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4497
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4514
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = yyDollar[3].str
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4529
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4533
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4538
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4542
		{
			yyVAL.str = yyDollar[2].str
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4547
		{
			yyVAL.str = "cascaded"
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4551
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4560
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4564
		{
			yyVAL.str = yyDollar[3].str
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4578
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4582
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4587
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4591
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4595
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4600
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4604
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4608
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4612
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4617
		{
			yyVAL.str = ""
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4621
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4625
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4630
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.str = " header"
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4639
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = " manifest on"
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = " manifest off"
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = ""
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = " overwrite on"
		}
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = " overwrite off"
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = ""
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4675
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.str = yyDollar[1].str
		}
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4685
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4691
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 931:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4700
		{
			yyVAL.str = ""
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4710
		{
			yyVAL.str = yyDollar[1].str
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4714
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4720
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4724
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4728
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4733
		{
			yyVAL.str = ""
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4737
		{
			yyVAL.str = " optionally"
		}
	case 941:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4750
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4754
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4758
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4762
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4766
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4772
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4776
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4780
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4784
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4793
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4799
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4803
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4809
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4813
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4819
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4825
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4835
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4839
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4845
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4851
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4861
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4865
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4869
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4873
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4877
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4885
		{
			yyVAL.str = "charset"
		}
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4895
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4899
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4903
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4919
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4927
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4929
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4932
		{
			yyVAL.empty = struct{}{}
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4934
		{
			yyVAL.empty = struct{}{}
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4936
		{
			yyVAL.empty = struct{}{}
		}
	case 988:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4940
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4945
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4949
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4956
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4960
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4966
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4983
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4987
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4993
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5004
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5449
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5458
		{
			decNesting(yylex)
		}
	case 1426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5463
		{
			skipToEnd(yylex)
		}
	case 1427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5468
		{
			skipToEnd(yylex)
		}
	case 1428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5472
		{
			skipToEnd(yylex)
		}
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5476
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
