// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const FIRST = 57533
const AFTER = 57534
const BEGIN = 57535
const START = 57536
const TRANSACTION = 57537
const COMMIT = 57538
const ROLLBACK = 57539
const SAVEPOINT = 57540
const RELEASE = 57541
const WORK = 57542
const BIT = 57543
const TINYINT = 57544
const SMALLINT = 57545
const MEDIUMINT = 57546
const INT = 57547
const INTEGER = 57548
const BIGINT = 57549
const INTNUM = 57550
const REAL = 57551
const DOUBLE = 57552
const FLOAT_TYPE = 57553
const DECIMAL = 57554
const NUMERIC = 57555
const TIME = 57556
const TIMESTAMP = 57557
const DATETIME = 57558
const YEAR = 57559
const CHAR = 57560
const VARCHAR = 57561
const BOOL = 57562
const CHARACTER = 57563
const VARBINARY = 57564
const NCHAR = 57565
const TEXT = 57566
const TINYTEXT = 57567
const MEDIUMTEXT = 57568
const LONGTEXT = 57569
const BLOB = 57570
const TINYBLOB = 57571
const MEDIUMBLOB = 57572
const LONGBLOB = 57573
const JSON = 57574
const ENUM = 57575
const GEOMETRY = 57576
const POINT = 57577
const LINESTRING = 57578
const POLYGON = 57579
const GEOMETRYCOLLECTION = 57580
const MULTIPOINT = 57581
const MULTILINESTRING = 57582
const MULTIPOLYGON = 57583
const NULLX = 57584
const AUTO_INCREMENT = 57585
const APPROXNUM = 57586
const SIGNED = 57587
const UNSIGNED = 57588
const ZEROFILL = 57589
const COLLATION = 57590
const DATABASES = 57591
const SCHEMAS = 57592
const TABLES = 57593
const VITESS_METADATA = 57594
const VSCHEMA = 57595
const FULL = 57596
const PROCESSLIST = 57597
const COLUMNS = 57598
const FIELDS = 57599
const ENGINES = 57600
const PLUGINS = 57601
const EXTENDED = 57602
const KEYSPACES = 57603
const VITESS_KEYSPACES = 57604
const VITESS_SHARDS = 57605
const VITESS_TABLETS = 57606
const CODE = 57607
const PRIVILEGES = 57608
const FUNCTION = 57609
const NAMES = 57610
const CHARSET = 57611
const GLOBAL = 57612
const SESSION = 57613
const ISOLATION = 57614
const LEVEL = 57615
const READ = 57616
const WRITE = 57617
const ONLY = 57618
const REPEATABLE = 57619
const COMMITTED = 57620
const UNCOMMITTED = 57621
const SERIALIZABLE = 57622
const CURRENT_TIMESTAMP = 57623
const DATABASE = 57624
const CURRENT_DATE = 57625
const CURRENT_TIME = 57626
const LOCALTIME = 57627
const LOCALTIMESTAMP = 57628
const CURRENT_USER = 57629
const UTC_DATE = 57630
const UTC_TIME = 57631
const UTC_TIMESTAMP = 57632
const REPLACE = 57633
const CONVERT = 57634
const CAST = 57635
const SUBSTR = 57636
const SUBSTRING = 57637
const GROUP_CONCAT = 57638
const SEPARATOR = 57639
const TIMESTAMPADD = 57640
const TIMESTAMPDIFF = 57641
const MATCH = 57642
const AGAINST = 57643
const BOOLEAN = 57644
const LANGUAGE = 57645
const WITH = 57646
const QUERY = 57647
const EXPANSION = 57648
const UNUSED = 57649
const ARRAY = 57650
const CUME_DIST = 57651
const DESCRIPTION = 57652
const DENSE_RANK = 57653
const EMPTY = 57654
const EXCEPT = 57655
const FIRST_VALUE = 57656
const GROUPING = 57657
const GROUPS = 57658
const JSON_TABLE = 57659
const LAG = 57660
const LAST_VALUE = 57661
const LATERAL = 57662
const LEAD = 57663
const MEMBER = 57664
const NTH_VALUE = 57665
const NTILE = 57666
const OF = 57667
const OVER = 57668
const PERCENT_RANK = 57669
const RANK = 57670
const RECURSIVE = 57671
const ROW_NUMBER = 57672
const SYSTEM = 57673
const WINDOW = 57674
const ACTIVE = 57675
const ADMIN = 57676
const BUCKETS = 57677
const CLONE = 57678
const COMPONENT = 57679
const DEFINITION = 57680
const ENFORCED = 57681
const EXCLUDE = 57682
const FOLLOWING = 57683
const GEOMCOLLECTION = 57684
const GET_MASTER_PUBLIC_KEY = 57685
const HISTOGRAM = 57686
const HISTORY = 57687
const INACTIVE = 57688
const INVISIBLE = 57689
const LOCKED = 57690
const MASTER_COMPRESSION_ALGORITHMS = 57691
const MASTER_PUBLIC_KEY_PATH = 57692
const MASTER_TLS_CIPHERSUITES = 57693
const MASTER_ZSTD_COMPRESSION_LEVEL = 57694
const NESTED = 57695
const NETWORK_NAMESPACE = 57696
const NOWAIT = 57697
const NULLS = 57698
const OJ = 57699
const OLD = 57700
const OPTIONAL = 57701
const ORDINALITY = 57702
const ORGANIZATION = 57703
const OTHERS = 57704
const PATH = 57705
const PERSIST = 57706
const PERSIST_ONLY = 57707
const PRECEDING = 57708
const PRIVILEGE_CHECKS_USER = 57709
const PROCESS = 57710
const RANDOM = 57711
const REFERENCE = 57712
const REQUIRE_ROW_FORMAT = 57713
const RESOURCE = 57714
const RESPECT = 57715
const RESTART = 57716
const RETAIN = 57717
const REUSE = 57718
const ROLE = 57719
const SECONDARY = 57720
const SECONDARY_ENGINE = 57721
const SECONDARY_LOAD = 57722
const SECONDARY_UNLOAD = 57723
const SKIP = 57724
const SRID = 57725
const THREAD_PRIORITY = 57726
const TIES = 57727
const UNBOUNDED = 57728
const VCPU = 57729
const VISIBLE = 57730
const FORMAT = 57731
const TREE = 57732
const VITESS = 57733
const TRADITIONAL = 57734
const LOCAL = 57735
const LOW_PRIORITY = 57736

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 827,
	-2, 87,
	-1, 43,
	136, 111,
	238, 111,
	-2, 105,
	-1, 51,
	34, 374,
	155, 374,
	167, 374,
	195, 388,
	196, 388,
	-2, 376,
	-1, 56,
	157, 398,
	-2, 396,
	-1, 80,
	55, 441,
	-2, 449,
	-1, 104,
	136, 111,
	238, 111,
	-2, 106,
	-1, 112,
	160, 228,
	161, 228,
	-2, 272,
	-1, 456,
	143, 838,
	-2, 834,
	-1, 457,
	143, 839,
	-2, 835,
	-1, 474,
	55, 442,
	-2, 454,
	-1, 475,
	55, 443,
	-2, 455,
	-1, 495,
	111, 1133,
	-2, 80,
	-1, 496,
	111, 1033,
	-2, 81,
	-1, 501,
	111, 991,
	-2, 798,
	-1, 503,
	111, 1074,
	-2, 800,
	-1, 663,
	166, 36,
	171, 36,
	-2, 239,
	-1, 683,
	136, 111,
	238, 111,
	-2, 294,
	-1, 970,
	166, 37,
	171, 37,
	-2, 240,
	-1, 1086,
	143, 841,
	-2, 837,
	-1, 1176,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1545,
	5, 695,
	18, 695,
	20, 695,
	32, 695,
	82, 695,
	-2, 480,
	-1, 1746,
	45, 769,
	-2, 767,
}

const yyPrivate = 57344

const yyLast = 20300

var yyAct = [...]int{
	456, 1824, 1591, 1746, 1697, 1811, 1787, 1463, 1674, 1374,
	1342, 1194, 429, 737, 1198, 1123, 400, 1526, 1525, 415,
	1232, 800, 1361, 1375, 398, 851, 1237, 844, 1522, 1432,
	1537, 1457, 1197, 1510, 1483, 1302, 637, 1173, 1073, 79,
	3, 467, 1433, 638, 1015, 1239, 674, 120, 1425, 888,
	132, 500, 369, 132, 881, 1080, 1001, 77, 381, 840,
	132, 696, 968, 1155, 1162, 735, 872, 476, 874, 838,
	854, 849, 1125, 1050, 644, 1106, 402, 461, 975, 31,
	1240, 871, 641, 645, 1138, 391, 976, 664, 381, 887,
	1178, 381, 132, 381, 660, 661, 861, 1228, 954, 885,
	1018, 497, 878, 75, 111, 80, 388, 74, 813, 130,
	105, 106, 119, 1120, 1121, 814, 132, 1797, 132, 384,
	121, 122, 123, 1036, 1340, 132, 1743, 689, 8, 7,
	132, 6, 1660, 1830, 1699, 1571, 1784, 1823, 76, 1244,
	82, 83, 84, 85, 86, 87, 1765, 1217, 1813, 1592,
	1783, 643, 1500, 482, 486, 462, 659, 1764, 1621, 653,
	1242, 33, 1552, 1553, 68, 37, 38, 1405, 389, 390,
	1404, 1341, 1447, 1406, 360, 677, 1446, 678, 1551, 121,
	122, 123, 1188, 361, 686, 1189, 1190, 494, 889, 692,
	890, 358, 706, 97, 102, 125, 126, 127, 460, 671,
	704, 733, 1733, 762, 761, 771, 772, 764, 765, 766,
	767, 768, 769, 770, 763, 655, 654, 773, 459, 441,
	1211, 447, 448, 445, 446, 355, 444, 443, 442, 715,
	716, 1241, 1417, 1122, 367, 67, 449, 450, 717, 1465,
	1653, 1767, 718, 715, 716, 657, 102, 94, 102, 115,
	724, 117, 726, 98, 1218, 379, 99, 100, 1612, 1610,
	121, 122, 123, 1035, 377, 383, 1083, 1454, 1263, 1580,
	1443, 1251, 1249, 1252, 1253, 346, 1581, 1818, 732, 707,
	731, 1037, 1038, 1039, 723, 725, 990, 705, 684, 957,
	1467, 1468, 710, 711, 708, 709, 712, 1281, 989, 1156,
	987, 1828, 348, 349, 350, 1809, 365, 366, 372, 1466,
	1671, 1831, 362, 364, 373, 351, 352, 375, 374, 642,
	354, 353, 642, 347, 357, 370, 1484, 667, 642, 1798,
	1714, 673, 640, 666, 988, 991, 1469, 729, 974, 973,
	101, 688, 650, 1343, 1345, 488, 132, 656, 995, 762,
	761, 771, 772, 764, 765, 766, 767, 768, 769, 770,
	763, 719, 722, 773, 738, 118, 1442, 1486, 1509, 673,
	381, 1508, 1507, 651, 345, 124, 1280, 785, 786, 1279,
	721, 1272, 1750, 1642, 381, 381, 921, 1243, 1570, 1321,
	1550, 1318, 101, 1445, 101, 720, 113, 1366, 1310, 1273,
	1184, 682, 1734, 865, 798, 694, 1303, 1763, 693, 1134,
	699, 700, 701, 702, 703, 1218, 763, 1195, 1488, 773,
	1492, 773, 1487, 1401, 1485, 744, 752, 750, 1032, 1490,
	734, 1344, 121, 122, 123, 1768, 1016, 90, 1489, 1826,
	687, 753, 1827, 753, 1825, 662, 104, 371, 1725, 675,
	1535, 1491, 1493, 750, 1779, 1139, 1140, 672, 728, 1250,
	132, 1715, 1713, 69, 666, 669, 670, 114, 642, 753,
	730, 112, 663, 667, 783, 679, 91, 680, 958, 891,
	681, 748, 1502, 1107, 1019, 381, 1562, 841, 132, 698,
	132, 132, 909, 381, 713, 672, 960, 1057, 1271, 381,
	751, 752, 750, 842, 1415, 1107, 497, 1328, 1504, 1208,
	801, 1055, 1056, 1054, 747, 745, 1209, 746, 753, 1753,
	858, 785, 786, 785, 786, 1659, 1658, 870, 839, 1576,
	751, 752, 750, 922, 771, 772, 764, 765, 766, 767,
	768, 769, 770, 763, 855, 1017, 773, 869, 753, 1429,
	880, 816, 818, 820, 822, 824, 826, 827, 817, 819,
	676, 823, 825, 1428, 828, 836, 683, 1247, 690, 691,
	843, 1817, 1832, 935, 938, 939, 940, 941, 942, 943,
	471, 944, 945, 946, 947, 948, 923, 924, 925, 926,
	907, 908, 936, 1020, 910, 697, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 927, 928, 929, 930,
	931, 932, 933, 934, 751, 752, 750, 1295, 1296, 1297,
	762, 761, 771, 772, 764, 765, 766, 767, 768, 769,
	770, 763, 753, 1136, 773, 1816, 649, 132, 1833, 1806,
	1795, 950, 67, 766, 767, 768, 769, 770, 763, 1430,
	132, 773, 961, 962, 1053, 764, 765, 766, 767, 768,
	769, 770, 763, 381, 970, 773, 1583, 751, 752, 750,
	1814, 1804, 979, 1316, 937, 1045, 1047, 1048, 1777, 381,
	1512, 1315, 1046, 132, 1687, 753, 471, 886, 132, 1656,
	1630, 132, 1000, 983, 132, 1135, 899, 1815, 1805, 967,
	751, 752, 750, 1514, 964, 1438, 132, 1426, 132, 959,
	1292, 1005, 487, 1720, 751, 752, 750, 1719, 753, 76,
	381, 381, 132, 381, 381, 132, 381, 381, 1513, 1670,
	1317, 1441, 753, 652, 978, 121, 122, 123, 1395, 1075,
	853, 1206, 992, 1158, 986, 1003, 1179, 880, 1534, 977,
	999, 1589, 1799, 949, 121, 122, 123, 1004, 1450, 1021,
	121, 122, 123, 965, 1408, 1008, 1007, 1010, 1009, 1051,
	1011, 1012, 1013, 1014, 1074, 492, 969, 78, 121, 122,
	123, 1024, 1259, 1076, 1027, 1022, 1023, 1637, 1025, 1026,
	996, 1028, 1029, 1159, 655, 654, 471, 381, 489, 490,
	121, 122, 123, 1589, 1761, 1589, 1757, 751, 752, 750,
	1077, 1078, 1084, 1589, 1751, 1589, 471, 1629, 471, 1640,
	471, 33, 457, 1095, 1098, 753, 1362, 1090, 1030, 1108,
	381, 381, 33, 1052, 418, 417, 420, 421, 422, 423,
	1180, 132, 1147, 419, 424, 1589, 1588, 1568, 1567, 1148,
	1086, 1564, 1565, 381, 749, 1085, 1564, 1563, 1147, 471,
	132, 953, 1456, 381, 801, 1451, 1452, 132, 1704, 132,
	1159, 471, 133, 749, 471, 133, 1724, 132, 132, 1084,
	382, 1362, 133, 1129, 381, 953, 952, 381, 1114, 1115,
	898, 897, 1180, 1141, 1159, 67, 1661, 497, 381, 381,
	497, 1181, 1566, 1087, 1159, 1409, 67, 464, 33, 1183,
	382, 1199, 1523, 382, 133, 382, 1174, 1086, 1147, 1150,
	1187, 1534, 1153, 1149, 1333, 1332, 1154, 1147, 1157, 1179,
	1137, 1118, 994, 1369, 883, 1202, 658, 1176, 133, 1758,
	133, 67, 1205, 1662, 1663, 1664, 1464, 133, 1435, 1534,
	1676, 1669, 133, 1181, 381, 1370, 1648, 955, 1233, 1151,
	1677, 1179, 1582, 1266, 1229, 1258, 1223, 381, 1222, 1234,
	1182, 971, 381, 951, 1186, 92, 979, 1434, 979, 648,
	1177, 67, 67, 1185, 1665, 671, 1538, 1539, 132, 132,
	132, 132, 132, 1204, 1203, 132, 132, 1244, 1820, 132,
	381, 1812, 1557, 1261, 1212, 1541, 1213, 1214, 1215, 1216,
	1257, 1523, 1448, 1033, 998, 1386, 1801, 132, 132, 132,
	1387, 1435, 1224, 1225, 1226, 1227, 1544, 980, 1666, 1667,
	1543, 132, 1235, 1383, 132, 381, 1384, 1245, 1269, 1246,
	1270, 1385, 1256, 1230, 1231, 1382, 1265, 1274, 1275, 1276,
	1277, 1278, 1235, 1268, 1282, 1283, 484, 1264, 1284, 1782,
	1219, 1220, 1221, 1624, 1515, 1285, 1351, 1051, 852, 1091,
	1092, 981, 982, 1097, 1100, 1101, 1641, 1286, 1289, 1388,
	1360, 1168, 1169, 1290, 1359, 477, 1773, 1770, 1803, 1786,
	1291, 1788, 1623, 1293, 1794, 1349, 1793, 1747, 1113, 478,
	1745, 1116, 1117, 1350, 762, 761, 771, 772, 764, 765,
	766, 767, 768, 769, 770, 763, 993, 458, 773, 132,
	392, 1439, 856, 857, 480, 96, 479, 132, 1298, 1434,
	1421, 1052, 1312, 762, 761, 771, 772, 764, 765, 766,
	767, 768, 769, 770, 763, 963, 896, 773, 695, 132,
	1461, 1460, 1164, 1167, 1168, 1169, 1165, 1348, 1166, 1170,
	132, 132, 132, 132, 132, 1311, 845, 462, 133, 1355,
	1414, 116, 132, 108, 128, 1376, 132, 1367, 846, 132,
	132, 1327, 1755, 132, 132, 132, 1364, 839, 1339, 1618,
	1103, 1754, 382, 1702, 1267, 1371, 1407, 1132, 381, 1347,
	972, 1635, 1139, 1140, 1104, 1254, 382, 382, 997, 1354,
	1721, 1199, 1410, 1172, 468, 1393, 1396, 1365, 1363, 1808,
	1398, 465, 466, 1807, 1791, 1774, 1358, 1378, 1379, 1420,
	1381, 1422, 1423, 1424, 1357, 1389, 1003, 1402, 1399, 1397,
	1394, 1377, 1634, 469, 1380, 381, 1412, 761, 771, 772,
	764, 765, 766, 767, 768, 769, 770, 763, 1449, 78,
	773, 1633, 1518, 1362, 1822, 1821, 464, 381, 1322, 979,
	1319, 866, 1427, 859, 1822, 1748, 1654, 1133, 76, 81,
	1455, 73, 133, 1, 1436, 381, 356, 1462, 1437, 1119,
	837, 762, 761, 771, 772, 764, 765, 766, 767, 768,
	769, 770, 763, 368, 477, 773, 1810, 382, 1593, 1673,
	133, 381, 133, 133, 1255, 382, 1431, 1074, 478, 1238,
	665, 382, 1196, 89, 1480, 1086, 635, 88, 668, 727,
	1085, 1459, 1260, 1712, 1471, 1473, 1472, 1481, 1416, 1210,
	1482, 474, 475, 480, 1652, 479, 1556, 381, 1307, 1308,
	1470, 1501, 1495, 1413, 1752, 1494, 904, 132, 902, 903,
	901, 1418, 1419, 906, 905, 1479, 900, 381, 1034, 1325,
	378, 1171, 892, 381, 381, 860, 1569, 1207, 1031, 1524,
	1480, 363, 714, 1527, 359, 781, 1376, 1356, 1164, 1167,
	1168, 1169, 1165, 1403, 1166, 1170, 132, 1533, 1538, 1539,
	498, 491, 1668, 1529, 95, 1792, 1771, 1532, 1769, 1521,
	381, 1542, 381, 1744, 1698, 1772, 1516, 1546, 1742, 1548,
	1802, 1549, 1561, 1199, 1785, 1199, 1555, 1131, 848, 1632,
	1559, 1560, 1517, 1547, 1326, 810, 1105, 1453, 1262, 875,
	1577, 401, 1554, 132, 1044, 416, 413, 414, 1142, 132,
	1368, 754, 381, 755, 399, 393, 867, 1163, 1161, 133,
	1160, 879, 1540, 1573, 1536, 1594, 381, 381, 381, 873,
	132, 1586, 133, 1146, 1444, 1572, 956, 1248, 1579, 647,
	473, 1574, 1575, 1587, 93, 382, 1590, 392, 1585, 1102,
	1732, 1620, 472, 59, 36, 385, 811, 1796, 1778, 740,
	481, 382, 1578, 30, 29, 133, 28, 23, 1584, 1608,
	133, 22, 21, 133, 20, 19, 133, 25, 18, 17,
	16, 428, 107, 1603, 103, 847, 850, 46, 133, 1598,
	133, 43, 41, 1599, 1600, 109, 110, 44, 40, 685,
	27, 26, 382, 382, 133, 382, 382, 133, 382, 382,
	15, 1376, 14, 1636, 13, 381, 12, 11, 1645, 1644,
	10, 9, 5, 4, 743, 24, 799, 2, 1199, 1410,
	1651, 131, 1650, 0, 376, 0, 0, 0, 0, 0,
	0, 131, 0, 1605, 1606, 0, 1607, 0, 0, 1609,
	381, 1611, 0, 381, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 485, 1675, 1680, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 382,
	0, 0, 0, 0, 0, 0, 381, 381, 381, 132,
	381, 1678, 0, 0, 0, 0, 0, 131, 0, 131,
	0, 381, 0, 381, 1694, 0, 131, 0, 0, 381,
	1527, 131, 382, 382, 1527, 1703, 1701, 1690, 1692, 1693,
	1707, 1631, 1686, 133, 0, 0, 0, 1717, 0, 1718,
	381, 0, 132, 0, 1716, 382, 0, 381, 132, 1705,
	1710, 0, 133, 0, 0, 382, 1709, 0, 0, 133,
	0, 133, 1711, 0, 0, 0, 0, 0, 0, 133,
	133, 1722, 0, 0, 0, 1741, 382, 0, 1726, 382,
	0, 1655, 0, 1657, 0, 0, 0, 1527, 0, 0,
	382, 382, 0, 1749, 0, 381, 381, 0, 0, 0,
	0, 1723, 0, 1759, 0, 0, 0, 1727, 1675, 1199,
	1760, 0, 0, 0, 0, 0, 0, 1766, 0, 0,
	0, 381, 0, 0, 1679, 1006, 0, 427, 1775, 381,
	0, 1756, 0, 0, 0, 1376, 1109, 0, 0, 1781,
	0, 0, 0, 1790, 0, 1789, 382, 0, 1696, 1617,
	0, 0, 0, 0, 1800, 0, 0, 0, 0, 382,
	1780, 0, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1040, 1041, 1042, 1043,
	133, 133, 133, 133, 133, 380, 1819, 133, 133, 0,
	0, 133, 382, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	133, 133, 0, 0, 0, 499, 470, 0, 639, 1616,
	646, 0, 0, 133, 0, 0, 133, 382, 0, 0,
	0, 1093, 1094, 0, 0, 0, 0, 131, 0, 0,
	0, 0, 0, 33, 34, 35, 68, 37, 38, 0,
	0, 762, 761, 771, 772, 764, 765, 766, 767, 768,
	769, 770, 763, 72, 0, 773, 0, 0, 39, 65,
	66, 757, 63, 760, 0, 0, 0, 0, 64, 774,
	775, 776, 777, 778, 779, 780, 0, 758, 759, 756,
	762, 761, 771, 772, 764, 765, 766, 767, 768, 769,
	770, 763, 0, 0, 773, 0, 0, 52, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 67, 1193, 133,
	1615, 762, 761, 771, 772, 764, 765, 766, 767, 768,
	769, 770, 763, 0, 0, 773, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 133, 133, 133, 133, 133, 0, 0, 0,
	0, 0, 0, 0, 133, 485, 0, 0, 133, 0,
	0, 133, 133, 1474, 0, 133, 133, 133, 1236, 131,
	0, 131, 882, 42, 45, 48, 47, 50, 0, 62,
	382, 0, 0, 762, 761, 771, 772, 764, 765, 766,
	767, 768, 769, 770, 763, 0, 0, 773, 0, 0,
	0, 0, 51, 71, 70, 0, 0, 60, 61, 49,
	0, 0, 762, 761, 771, 772, 764, 765, 766, 767,
	768, 769, 770, 763, 0, 0, 773, 382, 0, 0,
	1304, 0, 0, 0, 0, 0, 0, 53, 54, 0,
	55, 56, 57, 58, 0, 0, 0, 0, 0, 382,
	762, 761, 771, 772, 764, 765, 766, 767, 768, 769,
	770, 763, 0, 0, 773, 0, 0, 382, 762, 761,
	771, 772, 764, 765, 766, 767, 768, 769, 770, 763,
	0, 0, 773, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 739, 741, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 1329, 0, 0, 0, 0, 382,
	0, 131, 0, 0, 0, 69, 0, 0, 0, 133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 382,
	0, 0, 1352, 1353, 850, 382, 382, 0, 985, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 131,
	0, 0, 131, 0, 0, 1002, 0, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 131,
	0, 0, 382, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 863, 131, 0, 0, 131, 0, 0, 0,
	499, 0, 0, 0, 0, 0, 893, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 133, 0, 0, 382, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 382,
	382, 0, 133, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 430, 32, 485,
	1002, 0, 0, 0, 485, 485, 0, 0, 485, 485,
	485, 0, 0, 0, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	32, 0, 0, 485, 485, 485, 485, 485, 0, 0,
	0, 0, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 382, 0, 0,
	0, 131, 0, 0, 0, 1503, 0, 1002, 131, 0,
	131, 0, 0, 463, 0, 0, 0, 0, 131, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 0, 382, 0, 0, 0, 1519,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 984, 0, 499, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 382, 382,
	382, 133, 382, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 382, 0, 382, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 0, 499, 499, 0,
	499, 499, 0, 499, 499, 0, 0, 0, 0, 0,
	0, 0, 382, 0, 133, 0, 0, 0, 0, 382,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	131, 131, 131, 131, 0, 0, 131, 131, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1287, 1288,
	131, 0, 0, 0, 0, 0, 0, 382, 382, 0,
	0, 0, 131, 0, 1079, 131, 499, 0, 0, 0,
	0, 1622, 0, 0, 0, 0, 1088, 1089, 0, 0,
	984, 0, 0, 382, 0, 0, 0, 0, 0, 0,
	0, 382, 0, 0, 0, 392, 0, 1111, 1112, 0,
	0, 0, 1646, 0, 0, 1647, 0, 0, 1649, 395,
	0, 0, 0, 485, 485, 0, 0, 0, 0, 1130,
	1143, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 0, 499, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 499, 0, 0, 499, 0, 0, 0, 1127, 0,
	0, 0, 0, 0, 0, 499, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	985, 131, 131, 131, 131, 131, 0, 736, 0, 0,
	1700, 392, 0, 1390, 0, 0, 0, 131, 0, 0,
	131, 131, 0, 32, 131, 1400, 1002, 0, 0, 0,
	0, 646, 0, 0, 782, 784, 0, 0, 0, 0,
	0, 0, 0, 0, 639, 0, 0, 0, 0, 646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 797, 0, 0, 0, 802,
	803, 804, 805, 806, 807, 808, 809, 499, 812, 815,
	815, 815, 821, 815, 815, 821, 815, 829, 830, 831,
	832, 833, 834, 835, 0, 0, 0, 0, 0, 0,
	0, 32, 0, 0, 0, 985, 0, 0, 0, 0,
	0, 0, 1294, 0, 0, 1002, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1305, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1313, 1314,
	0, 0, 0, 0, 1320, 0, 0, 1323, 1324, 0,
	0, 0, 0, 0, 0, 1330, 0, 1331, 131, 0,
	1334, 1335, 1336, 1337, 1338, 0, 0, 0, 0, 0,
	0, 985, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 984, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1391, 1392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 499, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 0, 736, 0, 0, 0,
	0, 0, 1440, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 0, 0, 0, 0, 0, 0, 0,
	0, 984, 0, 0, 1458, 0, 0, 0, 0, 0,
	0, 499, 0, 0, 0, 0, 0, 736, 736, 0,
	736, 736, 499, 736, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 1477, 1478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 0, 0, 984, 0, 0,
	1531, 1511, 0, 0, 0, 0, 0, 0, 0, 1530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1545, 0, 0, 0, 0, 0, 0, 499, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 1175, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 639,
	0, 0, 984, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1595, 1596, 1597, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	1604, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1613, 1614, 0, 0, 0, 0, 0, 0, 0,
	985, 0, 0, 0, 0, 0, 0, 1628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 984, 0, 0, 1638, 1639, 0, 0, 1643,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1672, 0, 0,
	499, 0, 0, 0, 0, 1049, 0, 0, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1458, 1458, 1458, 0, 1695, 0, 0,
	0, 0, 1691, 0, 0, 0, 0, 0, 1706, 0,
	1708, 0, 1309, 0, 0, 463, 1458, 0, 0, 0,
	0, 0, 0, 0, 0, 1110, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1458, 0, 0,
	0, 0, 0, 0, 1458, 0, 0, 0, 0, 0,
	0, 0, 1346, 0, 0, 0, 0, 0, 1728, 1729,
	1730, 1731, 0, 1735, 0, 1736, 1737, 1738, 0, 1739,
	1740, 0, 0, 0, 0, 0, 876, 0, 0, 0,
	0, 0, 0, 1372, 1373, 0, 0, 876, 876, 876,
	876, 876, 499, 499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1175, 0, 0, 876, 0, 0, 1762,
	876, 0, 0, 0, 0, 0, 984, 0, 1776, 0,
	0, 0, 0, 0, 0, 0, 1458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 736, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1299, 1300, 1301, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1528, 0,
	32, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1619, 0,
	0, 0, 0, 0, 0, 1625, 1626, 1627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1475, 1476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1496, 1497,
	0, 1498, 1499, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1505, 1506, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1528, 0, 32, 0, 1528,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1558, 0, 0, 0, 0, 0,
	0, 0, 1528, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 619, 606, 0, 0, 558,
	622, 529, 547, 631, 549, 552, 590, 511, 571, 244,
	544, 0, 533, 507, 540, 508, 531, 560, 173, 564,
	528, 608, 574, 621, 208, 0, 534, 256, 592, 287,
	163, 216, 214, 308, 178, 174, 172, 162, 195, 221,
	255, 304, 249, 628, 211, 581, 0, 296, 230, 0,
	0, 0, 562, 611, 569, 602, 557, 591, 518, 580,
	623, 545, 588, 624, 199, 161, 139, 241, 297, 180,
	0, 0, 0, 121, 122, 123, 0, 1200, 1201, 0,
	0, 0, 0, 0, 157, 0, 585, 618, 542, 587,
	589, 634, 506, 582, 0, 509, 512, 630, 614, 537,
	538, 1411, 0, 0, 0, 0, 0, 0, 561, 570,
	599, 555, 0, 0, 0, 1681, 1682, 1683, 1684, 1685,
	535, 0, 579, 1688, 1689, 0, 514, 510, 0, 0,
	0, 0, 559, 0, 0, 0, 517, 0, 536, 600,
	0, 504, 186, 604, 613, 556, 332, 617, 554, 553,
	620, 595, 515, 610, 548, 207, 513, 204, 135, 148,
	0, 546, 240, 274, 278, 609, 532, 541, 164, 539,
	276, 253, 321, 578, 257, 275, 212, 310, 268, 320,
	333, 334, 170, 234, 327, 305, 330, 342, 149, 167,
	247, 301, 324, 293, 229, 307, 203, 292, 185, 138,
	141, 303, 318, 158, 286, 0, 0, 0, 143, 316,
	300, 227, 200, 201, 142, 0, 272, 171, 183, 166,
	243, 313, 314, 165, 343, 150, 329, 145, 151, 328,
	236, 309, 317, 228, 220, 144, 315, 226, 219, 206,
	177, 191, 266, 215, 267, 192, 232, 231, 233, 0,
	140, 0, 298, 325, 344, 155, 527, 605, 306, 338,
	341, 0, 269, 156, 184, 176, 265, 182, 209, 337,
	339, 340, 154, 263, 189, 235, 152, 194, 294, 205,
	213, 597, 633, 252, 277, 159, 323, 295, 522, 526,
	520, 521, 572, 573, 523, 625, 626, 627, 601, 516,
	0, 524, 525, 0, 607, 615, 616, 577, 134, 146,
	210, 629, 270, 181, 326, 505, 519, 169, 530, 0,
	0, 543, 550, 551, 563, 565, 566, 567, 568, 576,
	583, 584, 586, 593, 594, 596, 598, 603, 612, 632,
	136, 137, 147, 153, 160, 168, 175, 179, 187, 190,
	193, 196, 197, 198, 202, 218, 222, 223, 224, 225,
	237, 238, 239, 242, 245, 246, 248, 250, 251, 254,
	258, 259, 260, 261, 262, 264, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	302, 311, 312, 322, 331, 335, 188, 319, 336, 0,
	217, 575, 619, 606, 0, 0, 558, 622, 529, 547,
	631, 549, 552, 590, 511, 571, 244, 544, 0, 533,
	507, 540, 508, 531, 560, 173, 564, 528, 608, 574,
	621, 208, 0, 534, 256, 592, 287, 163, 216, 214,
	308, 178, 174, 172, 162, 195, 221, 255, 304, 249,
	628, 211, 581, 0, 296, 230, 0, 0, 0, 562,
	611, 569, 602, 557, 591, 518, 580, 623, 545, 588,
	624, 199, 161, 139, 241, 297, 180, 0, 0, 0,
	121, 122, 123, 0, 1200, 1201, 0, 0, 0, 0,
	0, 157, 0, 585, 618, 542, 587, 589, 634, 506,
	582, 0, 509, 512, 630, 614, 537, 538, 0, 0,
	0, 0, 0, 0, 0, 561, 570, 599, 555, 0,
	0, 0, 0, 0, 0, 0, 0, 535, 0, 579,
	0, 0, 0, 514, 510, 0, 0, 0, 0, 559,
	0, 0, 0, 517, 0, 536, 600, 0, 504, 186,
	604, 613, 556, 332, 617, 554, 553, 620, 595, 515,
	610, 548, 207, 513, 204, 135, 148, 0, 546, 240,
	274, 278, 609, 532, 541, 164, 539, 276, 253, 321,
	578, 257, 275, 212, 310, 268, 320, 333, 334, 170,
	234, 327, 305, 330, 342, 149, 167, 247, 301, 324,
	293, 229, 307, 203, 292, 185, 138, 141, 303, 318,
	158, 286, 0, 0, 0, 143, 316, 300, 227, 200,
	201, 142, 0, 272, 171, 183, 166, 243, 313, 314,
	165, 343, 150, 329, 145, 151, 328, 236, 309, 317,
	228, 220, 144, 315, 226, 219, 206, 177, 191, 266,
	215, 267, 192, 232, 231, 233, 0, 140, 0, 298,
	325, 344, 155, 527, 605, 306, 338, 341, 0, 269,
	156, 184, 176, 265, 182, 209, 337, 339, 340, 154,
	263, 189, 235, 152, 194, 294, 205, 213, 597, 633,
	252, 277, 159, 323, 295, 522, 526, 520, 521, 572,
	573, 523, 625, 626, 627, 601, 516, 0, 524, 525,
	0, 607, 615, 616, 577, 134, 146, 210, 629, 270,
	181, 326, 505, 519, 169, 530, 0, 0, 543, 550,
	551, 563, 565, 566, 567, 568, 576, 583, 584, 586,
	593, 594, 596, 598, 603, 612, 632, 136, 137, 147,
	153, 160, 168, 175, 179, 187, 190, 193, 196, 197,
	198, 202, 218, 222, 223, 224, 225, 237, 238, 239,
	242, 245, 246, 248, 250, 251, 254, 258, 259, 260,
	261, 262, 264, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 302, 311, 312,
	322, 331, 335, 188, 319, 336, 0, 217, 575, 619,
	606, 0, 0, 558, 622, 529, 547, 631, 549, 552,
	590, 511, 571, 244, 544, 0, 533, 507, 540, 508,
	531, 560, 173, 564, 528, 608, 574, 621, 208, 0,
	534, 256, 592, 287, 163, 216, 214, 308, 178, 174,
	172, 162, 195, 221, 255, 304, 249, 628, 211, 581,
	0, 296, 230, 0, 0, 0, 562, 611, 569, 602,
	557, 591, 518, 580, 623, 545, 588, 624, 199, 161,
	139, 241, 297, 180, 0, 0, 0, 121, 122, 123,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	585, 618, 542, 587, 589, 634, 506, 582, 0, 509,
	512, 630, 614, 537, 538, 0, 0, 0, 0, 0,
	0, 0, 561, 570, 599, 555, 0, 0, 0, 0,
	0, 0, 1520, 0, 535, 0, 579, 0, 0, 0,
	514, 510, 0, 0, 0, 0, 559, 0, 0, 0,
	517, 0, 536, 600, 0, 504, 186, 604, 613, 556,
	332, 617, 554, 553, 620, 595, 515, 610, 548, 207,
	513, 204, 135, 148, 0, 546, 240, 274, 278, 609,
	532, 541, 164, 539, 276, 253, 321, 578, 257, 275,
	212, 310, 268, 320, 333, 334, 170, 234, 327, 305,
	330, 342, 149, 167, 247, 301, 324, 293, 229, 307,
	203, 292, 185, 138, 141, 303, 318, 158, 286, 0,
	0, 0, 143, 316, 300, 227, 200, 201, 142, 0,
	272, 171, 183, 166, 243, 313, 314, 165, 343, 150,
	329, 145, 151, 328, 236, 309, 317, 228, 220, 144,
	315, 226, 219, 206, 177, 191, 266, 215, 267, 192,
	232, 231, 233, 0, 140, 0, 298, 325, 344, 155,
	527, 605, 306, 338, 341, 0, 269, 156, 184, 176,
	265, 182, 209, 337, 339, 340, 154, 263, 189, 235,
	152, 194, 294, 205, 213, 597, 633, 252, 277, 159,
	323, 295, 522, 526, 520, 521, 572, 573, 523, 625,
	626, 627, 601, 516, 0, 524, 525, 0, 607, 615,
	616, 577, 134, 146, 210, 629, 270, 181, 326, 505,
	519, 169, 530, 0, 0, 543, 550, 551, 563, 565,
	566, 567, 568, 576, 583, 584, 586, 593, 594, 596,
	598, 603, 612, 632, 136, 137, 147, 153, 160, 168,
	175, 179, 187, 190, 193, 196, 197, 198, 202, 218,
	222, 223, 224, 225, 237, 238, 239, 242, 245, 246,
	248, 250, 251, 254, 258, 259, 260, 261, 262, 264,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 302, 311, 312, 322, 331, 335,
	188, 319, 336, 0, 217, 575, 619, 606, 0, 0,
	558, 622, 529, 547, 631, 549, 552, 590, 511, 571,
	244, 544, 0, 533, 507, 540, 508, 531, 560, 173,
	564, 528, 608, 574, 621, 208, 0, 534, 256, 592,
	287, 163, 216, 214, 308, 178, 174, 172, 162, 195,
	221, 255, 304, 249, 628, 211, 581, 0, 296, 230,
	0, 0, 0, 562, 611, 569, 602, 557, 591, 518,
	580, 623, 545, 588, 624, 199, 161, 139, 241, 297,
	180, 67, 0, 0, 121, 122, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 585, 618, 542,
	587, 589, 634, 506, 582, 0, 509, 512, 630, 614,
	537, 538, 0, 0, 0, 0, 0, 0, 0, 561,
	570, 599, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 535, 0, 579, 0, 0, 0, 514, 510, 0,
	0, 0, 0, 559, 0, 0, 0, 517, 0, 536,
	600, 0, 504, 186, 604, 613, 556, 332, 617, 554,
	553, 620, 595, 515, 610, 548, 207, 513, 204, 135,
	148, 0, 546, 240, 274, 278, 609, 532, 541, 164,
	539, 276, 253, 321, 578, 257, 275, 212, 310, 268,
	320, 333, 334, 170, 234, 327, 305, 330, 342, 149,
	167, 247, 301, 324, 293, 229, 307, 203, 292, 185,
	138, 141, 303, 318, 158, 286, 0, 0, 0, 143,
	316, 300, 227, 200, 201, 142, 0, 272, 171, 183,
	166, 243, 313, 314, 165, 343, 150, 329, 145, 151,
	328, 236, 309, 317, 228, 220, 144, 315, 226, 219,
	206, 177, 191, 266, 215, 267, 192, 232, 231, 233,
	0, 140, 0, 298, 325, 344, 155, 527, 605, 306,
	338, 341, 0, 269, 156, 184, 176, 265, 182, 209,
	337, 339, 340, 154, 263, 189, 235, 152, 194, 294,
	205, 213, 597, 633, 252, 277, 159, 323, 295, 522,
	526, 520, 521, 572, 573, 523, 625, 626, 627, 601,
	516, 0, 524, 525, 0, 607, 615, 616, 577, 134,
	146, 210, 629, 270, 181, 326, 505, 519, 169, 530,
	0, 0, 543, 550, 551, 563, 565, 566, 567, 568,
	576, 583, 584, 586, 593, 594, 596, 598, 603, 612,
	632, 136, 137, 147, 153, 160, 168, 175, 179, 187,
	190, 193, 196, 197, 198, 202, 218, 222, 223, 224,
	225, 237, 238, 239, 242, 245, 246, 248, 250, 251,
	254, 258, 259, 260, 261, 262, 264, 271, 273, 279,
	280, 281, 282, 283, 284, 285, 288, 289, 290, 291,
	299, 302, 311, 312, 322, 331, 335, 188, 319, 336,
	0, 217, 575, 619, 606, 0, 0, 558, 622, 529,
	547, 631, 549, 552, 590, 511, 571, 244, 544, 0,
	533, 507, 540, 508, 531, 560, 173, 564, 528, 608,
	574, 621, 208, 0, 534, 256, 592, 287, 163, 216,
	214, 308, 178, 174, 172, 162, 195, 221, 255, 304,
	249, 628, 211, 581, 0, 296, 230, 0, 0, 0,
	562, 611, 569, 602, 557, 591, 518, 580, 623, 545,
	588, 624, 199, 161, 139, 241, 297, 180, 0, 0,
	0, 121, 122, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 585, 618, 542, 587, 589, 634,
	506, 582, 0, 509, 512, 630, 614, 537, 538, 0,
	0, 0, 0, 0, 0, 0, 561, 570, 599, 555,
	0, 0, 0, 0, 0, 0, 1401, 0, 535, 0,
	579, 0, 0, 0, 514, 510, 0, 0, 0, 0,
	559, 0, 0, 0, 517, 0, 536, 600, 0, 504,
	186, 604, 613, 556, 332, 617, 554, 553, 620, 595,
	515, 610, 548, 207, 513, 204, 135, 148, 0, 546,
	240, 274, 278, 609, 532, 541, 164, 539, 276, 253,
	321, 578, 257, 275, 212, 310, 268, 320, 333, 334,
	170, 234, 327, 305, 330, 342, 149, 167, 247, 301,
	324, 293, 229, 307, 203, 292, 185, 138, 141, 303,
	318, 158, 286, 0, 0, 0, 143, 316, 300, 227,
	200, 201, 142, 0, 272, 171, 183, 166, 243, 313,
	314, 165, 343, 150, 329, 145, 151, 328, 236, 309,
	317, 228, 220, 144, 315, 226, 219, 206, 177, 191,
	266, 215, 267, 192, 232, 231, 233, 0, 140, 0,
	298, 325, 344, 155, 527, 605, 306, 338, 341, 0,
	269, 156, 184, 176, 265, 182, 209, 337, 339, 340,
	154, 263, 189, 235, 152, 194, 294, 205, 213, 597,
	633, 252, 277, 159, 323, 295, 522, 526, 520, 521,
	572, 573, 523, 625, 626, 627, 601, 516, 0, 524,
	525, 0, 607, 615, 616, 577, 134, 146, 210, 629,
	270, 181, 326, 505, 519, 169, 530, 0, 0, 543,
	550, 551, 563, 565, 566, 567, 568, 576, 583, 584,
	586, 593, 594, 596, 598, 603, 612, 632, 136, 137,
	147, 153, 160, 168, 175, 179, 187, 190, 193, 196,
	197, 198, 202, 218, 222, 223, 224, 225, 237, 238,
	239, 242, 245, 246, 248, 250, 251, 254, 258, 259,
	260, 261, 262, 264, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 302, 311,
	312, 322, 331, 335, 188, 319, 336, 0, 217, 575,
	619, 606, 0, 0, 558, 622, 529, 547, 631, 549,
	552, 590, 511, 571, 244, 544, 0, 533, 507, 540,
	508, 531, 560, 173, 564, 528, 608, 574, 621, 208,
	0, 534, 256, 592, 287, 163, 216, 214, 308, 178,
	174, 172, 162, 195, 221, 255, 304, 249, 628, 211,
	581, 0, 296, 230, 0, 0, 0, 562, 611, 569,
	602, 557, 591, 518, 580, 623, 545, 588, 624, 199,
	161, 139, 241, 297, 180, 0, 0, 0, 121, 122,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 585, 618, 542, 587, 589, 634, 506, 582, 0,
	509, 512, 630, 614, 537, 538, 0, 0, 0, 0,
	0, 0, 0, 561, 570, 599, 555, 0, 0, 0,
	0, 0, 0, 1152, 0, 535, 0, 579, 0, 0,
	0, 514, 510, 0, 0, 0, 0, 559, 0, 0,
	0, 517, 0, 536, 600, 0, 504, 186, 604, 613,
	556, 332, 617, 554, 553, 620, 595, 515, 610, 548,
	207, 513, 204, 135, 148, 0, 546, 240, 274, 278,
	609, 532, 541, 164, 539, 276, 253, 321, 578, 257,
	275, 212, 310, 268, 320, 333, 334, 170, 234, 327,
	305, 330, 342, 149, 167, 247, 301, 324, 293, 229,
	307, 203, 292, 185, 138, 141, 303, 318, 158, 286,
	0, 0, 0, 143, 316, 300, 227, 200, 201, 142,
	0, 272, 171, 183, 166, 243, 313, 314, 165, 343,
	150, 329, 145, 151, 328, 236, 309, 317, 228, 220,
	144, 315, 226, 219, 206, 177, 191, 266, 215, 267,
	192, 232, 231, 233, 0, 140, 0, 298, 325, 344,
	155, 527, 605, 306, 338, 341, 0, 269, 156, 184,
	176, 265, 182, 209, 337, 339, 340, 154, 263, 189,
	235, 152, 194, 294, 205, 213, 597, 633, 252, 277,
	159, 323, 295, 522, 526, 520, 521, 572, 573, 523,
	625, 626, 627, 601, 516, 0, 524, 525, 0, 607,
	615, 616, 577, 134, 146, 210, 629, 270, 181, 326,
	505, 519, 169, 530, 0, 0, 543, 550, 551, 563,
	565, 566, 567, 568, 576, 583, 584, 586, 593, 594,
	596, 598, 603, 612, 632, 136, 137, 147, 153, 160,
	168, 175, 179, 187, 190, 193, 196, 197, 198, 202,
	218, 222, 223, 224, 225, 237, 238, 239, 242, 245,
	246, 248, 250, 251, 254, 258, 259, 260, 261, 262,
	264, 271, 273, 279, 280, 281, 282, 283, 284, 285,
	288, 289, 290, 291, 299, 302, 311, 312, 322, 331,
	335, 188, 319, 336, 0, 217, 575, 619, 606, 0,
	0, 558, 622, 529, 547, 631, 549, 552, 590, 511,
	571, 244, 544, 0, 533, 507, 540, 508, 531, 560,
	173, 564, 528, 608, 574, 621, 208, 0, 534, 256,
	592, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 628, 211, 581, 0, 296,
	230, 0, 0, 0, 562, 611, 569, 602, 557, 591,
	518, 580, 623, 545, 588, 624, 199, 161, 139, 241,
	297, 180, 0, 0, 0, 121, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 585, 618,
	542, 587, 589, 634, 506, 582, 0, 509, 512, 630,
	614, 537, 538, 0, 0, 0, 0, 0, 0, 0,
	561, 570, 599, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 535, 0, 579, 0, 0, 0, 514, 510,
	0, 0, 0, 0, 559, 0, 0, 0, 517, 0,
	536, 600, 0, 504, 186, 604, 613, 556, 332, 617,
	554, 553, 620, 595, 515, 610, 548, 207, 513, 204,
	135, 148, 0, 546, 240, 274, 278, 609, 532, 541,
	164, 539, 276, 253, 321, 578, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 527, 605,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 597, 633, 252, 277, 159, 323, 295,
	522, 526, 520, 521, 572, 573, 523, 625, 626, 627,
	601, 516, 0, 524, 525, 0, 607, 615, 616, 577,
	134, 146, 210, 629, 270, 181, 326, 505, 519, 169,
	530, 0, 0, 543, 550, 551, 563, 565, 566, 567,
	568, 576, 583, 584, 586, 593, 594, 596, 598, 603,
	612, 632, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 0, 217, 575, 619, 606, 0, 0, 558, 622,
	529, 547, 631, 549, 552, 590, 511, 571, 244, 544,
	0, 533, 507, 540, 508, 531, 560, 173, 564, 528,
	608, 574, 621, 208, 0, 534, 256, 592, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 628, 211, 581, 0, 296, 230, 0, 0,
	0, 562, 611, 569, 602, 557, 591, 518, 580, 623,
	545, 588, 624, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 585, 618, 542, 587, 589,
	634, 506, 582, 0, 509, 512, 630, 614, 537, 538,
	0, 0, 0, 0, 0, 0, 0, 561, 570, 599,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 535,
	0, 579, 0, 0, 0, 514, 510, 0, 0, 0,
	0, 559, 0, 0, 0, 517, 0, 536, 600, 0,
	504, 186, 604, 613, 556, 332, 617, 554, 553, 620,
	595, 515, 610, 548, 207, 513, 204, 135, 148, 0,
	546, 240, 274, 278, 609, 532, 541, 164, 539, 276,
	253, 321, 578, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 502, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 527, 605, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 503, 501, 496, 495, 205, 213,
	597, 633, 252, 277, 159, 323, 295, 522, 526, 520,
	521, 572, 573, 523, 625, 626, 627, 601, 516, 0,
	524, 525, 0, 607, 615, 616, 577, 134, 146, 210,
	629, 270, 181, 326, 505, 519, 169, 530, 0, 0,
	543, 550, 551, 563, 565, 566, 567, 568, 576, 583,
	584, 586, 593, 594, 596, 598, 603, 612, 632, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 0, 217,
	575, 619, 606, 0, 0, 558, 622, 529, 547, 631,
	549, 552, 590, 511, 571, 244, 544, 0, 533, 507,
	540, 508, 531, 560, 173, 564, 528, 608, 574, 621,
	208, 0, 534, 256, 592, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 628,
	211, 581, 0, 296, 230, 0, 0, 0, 562, 611,
	569, 602, 557, 591, 518, 580, 623, 545, 588, 624,
	199, 161, 139, 241, 297, 180, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 585, 618, 542, 587, 589, 634, 506, 582,
	0, 509, 512, 630, 614, 537, 538, 0, 0, 0,
	0, 0, 0, 0, 561, 570, 599, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 535, 0, 579, 0,
	0, 0, 514, 510, 0, 0, 0, 0, 559, 0,
	0, 0, 517, 0, 536, 600, 0, 504, 186, 604,
	613, 556, 332, 617, 554, 553, 620, 595, 515, 610,
	548, 207, 513, 204, 135, 148, 0, 546, 240, 274,
	278, 609, 532, 541, 164, 539, 276, 253, 321, 578,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 884, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 502, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 527, 605, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 503, 501, 496, 495, 205, 213, 597, 633, 252,
	277, 159, 323, 295, 522, 526, 520, 521, 572, 573,
	523, 625, 626, 627, 601, 516, 0, 524, 525, 0,
	607, 615, 616, 577, 134, 146, 210, 629, 270, 181,
	326, 505, 519, 169, 530, 0, 0, 543, 550, 551,
	563, 565, 566, 567, 568, 576, 583, 584, 586, 593,
	594, 596, 598, 603, 612, 632, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 0, 217, 575, 619, 606,
	0, 0, 558, 622, 529, 547, 631, 549, 552, 590,
	511, 571, 244, 544, 0, 533, 507, 540, 508, 531,
	560, 173, 564, 528, 608, 574, 621, 208, 0, 534,
	256, 592, 287, 163, 216, 214, 308, 178, 174, 172,
	162, 195, 221, 255, 304, 249, 628, 211, 581, 0,
	296, 230, 0, 0, 0, 562, 611, 569, 602, 557,
	591, 518, 580, 623, 545, 588, 624, 199, 161, 139,
	241, 297, 180, 0, 0, 0, 121, 122, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 585,
	618, 542, 587, 589, 634, 506, 582, 0, 509, 512,
	630, 614, 537, 538, 0, 0, 0, 0, 0, 0,
	0, 561, 570, 599, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 0, 579, 0, 0, 0, 514,
	510, 0, 0, 0, 0, 559, 0, 0, 0, 517,
	0, 536, 600, 0, 504, 186, 604, 613, 556, 332,
	617, 554, 553, 620, 595, 515, 610, 548, 207, 513,
	204, 135, 148, 0, 546, 240, 274, 278, 609, 532,
	541, 164, 539, 276, 253, 321, 578, 257, 275, 212,
	310, 268, 320, 333, 334, 170, 234, 327, 305, 330,
	342, 149, 167, 247, 301, 324, 293, 229, 307, 203,
	292, 185, 138, 141, 303, 493, 158, 286, 0, 0,
	0, 143, 316, 300, 227, 200, 201, 142, 0, 272,
	171, 183, 166, 243, 313, 314, 165, 343, 150, 329,
	145, 502, 328, 236, 309, 317, 228, 220, 144, 315,
	226, 219, 206, 177, 191, 266, 215, 267, 192, 232,
	231, 233, 0, 140, 0, 298, 325, 344, 155, 527,
	605, 306, 338, 341, 0, 269, 156, 184, 176, 265,
	182, 209, 337, 339, 340, 154, 263, 189, 503, 501,
	496, 495, 205, 213, 597, 633, 252, 277, 159, 323,
	295, 522, 526, 520, 521, 572, 573, 523, 625, 626,
	627, 601, 516, 0, 524, 525, 0, 607, 615, 616,
	577, 134, 146, 210, 629, 270, 181, 326, 505, 519,
	169, 530, 0, 0, 543, 550, 551, 563, 565, 566,
	567, 568, 576, 583, 584, 586, 593, 594, 596, 598,
	603, 612, 632, 136, 137, 147, 153, 160, 168, 175,
	179, 187, 190, 193, 196, 197, 198, 202, 218, 222,
	223, 224, 225, 237, 238, 239, 242, 245, 246, 248,
	250, 251, 254, 258, 259, 260, 261, 262, 264, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 302, 311, 312, 322, 331, 335, 188,
	319, 336, 244, 217, 575, 1081, 0, 397, 0, 0,
	0, 173, 0, 396, 0, 0, 0, 208, 0, 1082,
	256, 0, 287, 163, 216, 214, 308, 178, 174, 172,
	162, 195, 221, 255, 304, 249, 440, 211, 0, 0,
	296, 230, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 161, 139,
	241, 297, 180, 67, 0, 0, 121, 122, 123, 418,
	417, 420, 421, 422, 423, 0, 0, 157, 419, 424,
	425, 426, 0, 0, 0, 0, 394, 411, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 483, 0, 0, 0, 454, 0, 410, 0, 0,
	403, 404, 406, 405, 407, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 453, 0, 0, 332,
	0, 0, 451, 0, 0, 0, 0, 0, 207, 0,
	204, 135, 148, 0, 0, 240, 274, 278, 0, 0,
	0, 164, 0, 276, 253, 321, 0, 257, 275, 212,
	310, 268, 320, 333, 334, 170, 234, 327, 305, 330,
	342, 149, 167, 247, 301, 324, 293, 229, 307, 203,
	292, 185, 138, 141, 303, 318, 158, 286, 0, 0,
	0, 143, 316, 300, 227, 200, 201, 142, 0, 272,
	171, 183, 166, 243, 313, 314, 165, 343, 150, 329,
	145, 151, 328, 236, 309, 317, 228, 220, 144, 315,
	226, 219, 206, 177, 191, 266, 215, 267, 192, 232,
	231, 233, 0, 140, 0, 298, 325, 344, 155, 0,
	0, 306, 338, 341, 0, 269, 156, 184, 176, 265,
	182, 209, 337, 339, 340, 154, 263, 189, 235, 152,
	194, 294, 205, 213, 0, 0, 252, 277, 159, 323,
	295, 441, 452, 447, 448, 445, 446, 0, 444, 443,
	442, 455, 433, 434, 435, 436, 438, 0, 449, 450,
	437, 134, 146, 210, 0, 270, 181, 326, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 137, 147, 153, 160, 168, 175,
	179, 187, 190, 193, 196, 197, 198, 202, 218, 222,
	223, 224, 225, 237, 238, 239, 242, 245, 246, 248,
	250, 251, 254, 258, 259, 260, 261, 262, 264, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 302, 311, 312, 322, 331, 335, 188,
	319, 336, 244, 217, 0, 0, 0, 397, 0, 0,
	0, 173, 0, 396, 0, 0, 0, 208, 0, 0,
	256, 0, 287, 163, 216, 214, 308, 178, 174, 172,
	162, 195, 221, 255, 304, 249, 440, 211, 0, 0,
	296, 230, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 0, 0, 0, 1191, 0, 199, 161, 139,
	241, 297, 180, 67, 0, 0, 121, 122, 123, 418,
	417, 420, 421, 422, 423, 0, 0, 157, 419, 424,
	425, 426, 1192, 0, 0, 0, 394, 411, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 0, 454, 0, 410, 0, 0,
	403, 404, 406, 405, 407, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 453, 0, 0, 332,
	0, 0, 451, 0, 0, 0, 0, 0, 207, 0,
	204, 135, 148, 0, 0, 240, 274, 278, 0, 0,
	0, 164, 0, 276, 253, 321, 0, 257, 275, 212,
	310, 268, 320, 333, 334, 170, 234, 327, 305, 330,
	342, 149, 167, 247, 301, 324, 293, 229, 307, 203,
	292, 185, 138, 141, 303, 318, 158, 286, 0, 0,
	0, 143, 316, 300, 227, 200, 201, 142, 0, 272,
	171, 183, 166, 243, 313, 314, 165, 343, 150, 329,
	145, 151, 328, 236, 309, 317, 228, 220, 144, 315,
	226, 219, 206, 177, 191, 266, 215, 267, 192, 232,
	231, 233, 0, 140, 0, 298, 325, 344, 155, 0,
	0, 306, 338, 341, 0, 269, 156, 184, 176, 265,
	182, 209, 337, 339, 340, 154, 263, 189, 235, 152,
	194, 294, 205, 213, 0, 0, 252, 277, 159, 323,
	295, 441, 452, 447, 448, 445, 446, 0, 444, 443,
	442, 455, 433, 434, 435, 436, 438, 0, 449, 450,
	437, 134, 146, 210, 0, 270, 181, 326, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 137, 147, 153, 160, 168, 175,
	179, 187, 190, 193, 196, 197, 198, 202, 218, 222,
	223, 224, 225, 237, 238, 239, 242, 245, 246, 248,
	250, 251, 254, 258, 259, 260, 261, 262, 264, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 302, 311, 312, 322, 331, 335, 188,
	319, 336, 244, 217, 0, 0, 0, 397, 0, 0,
	0, 173, 0, 396, 0, 0, 0, 208, 0, 0,
	256, 0, 287, 163, 216, 214, 308, 178, 174, 172,
	162, 195, 221, 255, 304, 249, 440, 211, 0, 0,
	296, 230, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 161, 139,
	241, 297, 180, 67, 0, 471, 121, 122, 123, 418,
	417, 420, 421, 422, 423, 0, 0, 157, 419, 424,
	425, 426, 0, 0, 0, 0, 394, 411, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 0, 454, 0, 410, 0, 0,
	403, 404, 406, 405, 407, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 453, 0, 0, 332,
	0, 0, 451, 0, 0, 0, 0, 0, 207, 0,
	204, 135, 148, 0, 0, 240, 274, 278, 0, 0,
	0, 164, 0, 276, 253, 321, 0, 257, 275, 212,
	310, 268, 320, 333, 334, 170, 234, 327, 305, 330,
	342, 149, 167, 247, 301, 324, 293, 229, 307, 203,
	292, 185, 138, 141, 303, 318, 158, 286, 0, 0,
	0, 143, 316, 300, 227, 200, 201, 142, 0, 272,
	171, 183, 166, 243, 313, 314, 165, 343, 150, 329,
	145, 151, 328, 236, 309, 317, 228, 220, 144, 315,
	226, 219, 206, 177, 191, 266, 215, 267, 192, 232,
	231, 233, 0, 140, 0, 298, 325, 344, 155, 0,
	0, 306, 338, 341, 0, 269, 156, 184, 176, 265,
	182, 209, 337, 339, 340, 154, 263, 189, 235, 152,
	194, 294, 205, 213, 0, 0, 252, 277, 159, 323,
	295, 441, 452, 447, 448, 445, 446, 0, 444, 443,
	442, 455, 433, 434, 435, 436, 438, 0, 449, 450,
	437, 134, 146, 210, 0, 270, 181, 326, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 137, 147, 153, 160, 168, 175,
	179, 187, 190, 193, 196, 197, 198, 202, 218, 222,
	223, 224, 225, 237, 238, 239, 242, 245, 246, 248,
	250, 251, 254, 258, 259, 260, 261, 262, 264, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 302, 311, 312, 322, 331, 335, 188,
	319, 336, 244, 217, 0, 0, 0, 397, 0, 0,
	0, 173, 0, 396, 0, 0, 0, 208, 0, 0,
	256, 0, 287, 163, 216, 214, 308, 178, 174, 172,
	162, 195, 221, 255, 304, 249, 440, 211, 0, 0,
	296, 230, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 161, 139,
	241, 297, 180, 67, 0, 0, 121, 122, 123, 418,
	417, 420, 421, 422, 423, 0, 0, 157, 419, 424,
	425, 426, 0, 0, 0, 0, 394, 411, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 483, 0, 0, 0, 454, 0, 410, 0, 0,
	403, 404, 406, 405, 407, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 453, 0, 0, 332,
	0, 0, 451, 0, 0, 0, 0, 0, 207, 0,
	204, 135, 148, 0, 0, 240, 274, 278, 0, 0,
	0, 164, 0, 276, 253, 321, 0, 257, 275, 212,
	310, 268, 320, 333, 334, 170, 234, 327, 305, 330,
	342, 149, 167, 247, 301, 324, 293, 229, 307, 203,
	292, 185, 138, 141, 303, 318, 158, 286, 0, 0,
	0, 143, 316, 300, 227, 200, 201, 142, 0, 272,
	171, 183, 166, 243, 313, 314, 165, 343, 150, 329,
	145, 151, 328, 236, 309, 317, 228, 220, 144, 315,
	226, 219, 206, 177, 191, 266, 215, 267, 192, 232,
	231, 233, 0, 140, 0, 298, 325, 344, 155, 0,
	0, 306, 338, 341, 0, 269, 156, 184, 176, 265,
	182, 209, 337, 339, 340, 154, 263, 189, 235, 152,
	194, 294, 205, 213, 0, 0, 252, 277, 159, 323,
	295, 441, 452, 447, 448, 445, 446, 0, 444, 443,
	442, 455, 433, 434, 435, 436, 438, 0, 449, 450,
	437, 134, 146, 210, 0, 270, 181, 326, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 137, 147, 153, 160, 168, 175,
	179, 187, 190, 193, 196, 197, 198, 202, 218, 222,
	223, 224, 225, 237, 238, 239, 242, 245, 246, 248,
	250, 251, 254, 258, 259, 260, 261, 262, 264, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 302, 311, 312, 322, 331, 335, 188,
	319, 336, 244, 217, 0, 0, 0, 397, 0, 0,
	0, 173, 0, 396, 0, 0, 0, 208, 0, 0,
	256, 0, 287, 163, 216, 214, 308, 178, 174, 172,
	162, 195, 221, 255, 304, 249, 440, 211, 0, 0,
	296, 230, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 161, 139,
	241, 297, 180, 67, 0, 0, 121, 122, 123, 418,
	1099, 420, 421, 422, 423, 0, 0, 157, 419, 424,
	425, 426, 0, 0, 0, 0, 394, 411, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 483, 0, 0, 0, 454, 0, 410, 0, 0,
	403, 404, 406, 405, 407, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 453, 0, 0, 332,
	0, 0, 451, 0, 0, 0, 0, 0, 207, 0,
	204, 135, 148, 0, 0, 240, 274, 278, 0, 0,
	0, 164, 0, 276, 253, 321, 0, 257, 275, 212,
	310, 268, 320, 333, 334, 170, 234, 327, 305, 330,
	342, 149, 167, 247, 301, 324, 293, 229, 307, 203,
	292, 185, 138, 141, 303, 318, 158, 286, 0, 0,
	0, 143, 316, 300, 227, 200, 201, 142, 0, 272,
	171, 183, 166, 243, 313, 314, 165, 343, 150, 329,
	145, 151, 328, 236, 309, 317, 228, 220, 144, 315,
	226, 219, 206, 177, 191, 266, 215, 267, 192, 232,
	231, 233, 0, 140, 0, 298, 325, 344, 155, 0,
	0, 306, 338, 341, 0, 269, 156, 184, 176, 265,
	182, 209, 337, 339, 340, 154, 263, 189, 235, 152,
	194, 294, 205, 213, 0, 0, 252, 277, 159, 323,
	295, 441, 452, 447, 448, 445, 446, 0, 444, 443,
	442, 455, 433, 434, 435, 436, 438, 0, 449, 450,
	437, 134, 146, 210, 0, 270, 181, 326, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 137, 147, 153, 160, 168, 175,
	179, 187, 190, 193, 196, 197, 198, 202, 218, 222,
	223, 224, 225, 237, 238, 239, 242, 245, 246, 248,
	250, 251, 254, 258, 259, 260, 261, 262, 264, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 302, 311, 312, 322, 331, 335, 188,
	319, 336, 244, 217, 0, 0, 0, 397, 0, 0,
	0, 173, 0, 396, 0, 0, 0, 208, 0, 0,
	256, 0, 287, 163, 216, 214, 308, 178, 174, 172,
	162, 195, 221, 255, 304, 249, 440, 211, 0, 0,
	296, 230, 0, 0, 0, 0, 0, 431, 432, 0,
	0, 0, 0, 0, 0, 0, 0, 199, 161, 139,
	241, 297, 180, 67, 0, 0, 121, 122, 123, 418,
	1096, 420, 421, 422, 423, 0, 0, 157, 419, 424,
	425, 426, 0, 0, 0, 0, 394, 411, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	409, 483, 0, 0, 0, 454, 0, 410, 0, 0,
	403, 404, 406, 405, 407, 412, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 453, 0, 0, 332,
	0, 0, 451, 0, 0, 0, 0, 0, 207, 0,
	204, 135, 148, 0, 0, 240, 274, 278, 0, 0,
	0, 164, 0, 276, 253, 321, 0, 257, 275, 212,
	310, 268, 320, 333, 334, 170, 234, 327, 305, 330,
	342, 149, 167, 247, 301, 324, 293, 229, 307, 203,
	292, 185, 138, 141, 303, 318, 158, 286, 0, 0,
	0, 143, 316, 300, 227, 200, 201, 142, 0, 272,
	171, 183, 166, 243, 313, 314, 165, 343, 150, 329,
	145, 151, 328, 236, 309, 317, 228, 220, 144, 315,
	226, 219, 206, 177, 191, 266, 215, 267, 192, 232,
	231, 233, 0, 140, 0, 298, 325, 344, 155, 0,
	0, 306, 338, 341, 0, 269, 156, 184, 176, 265,
	182, 209, 337, 339, 340, 154, 263, 189, 235, 152,
	194, 294, 205, 213, 0, 0, 252, 277, 159, 323,
	295, 441, 452, 447, 448, 445, 446, 0, 444, 443,
	442, 455, 433, 434, 435, 436, 438, 0, 449, 450,
	437, 134, 146, 210, 0, 270, 181, 326, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 137, 147, 153, 160, 168, 175,
	179, 187, 190, 193, 196, 197, 198, 202, 218, 222,
	223, 224, 225, 237, 238, 239, 242, 245, 246, 248,
	250, 251, 254, 258, 259, 260, 261, 262, 264, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 302, 311, 312, 322, 331, 335, 188,
	319, 336, 464, 217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	397, 0, 0, 0, 173, 0, 396, 0, 0, 0,
	208, 0, 0, 256, 0, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 440,
	211, 0, 0, 296, 230, 0, 0, 0, 0, 0,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 161, 139, 241, 297, 180, 67, 0, 0, 121,
	122, 123, 418, 417, 420, 421, 422, 423, 0, 0,
	157, 419, 424, 425, 426, 0, 0, 0, 0, 394,
	411, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 0, 454, 0,
	410, 0, 0, 403, 404, 406, 405, 407, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 453,
	0, 0, 332, 0, 0, 451, 0, 0, 0, 0,
	0, 207, 0, 204, 135, 148, 0, 0, 240, 274,
	278, 0, 0, 0, 164, 0, 276, 253, 321, 0,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 318, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 151, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 0, 0, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 235, 152, 194, 294, 205, 213, 0, 0, 252,
	277, 159, 323, 295, 441, 452, 447, 448, 445, 446,
	0, 444, 443, 442, 455, 433, 434, 435, 436, 438,
	0, 449, 450, 437, 134, 146, 210, 0, 270, 181,
	326, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 244, 217, 0, 0, 0,
	397, 0, 0, 0, 173, 0, 396, 0, 0, 0,
	208, 0, 0, 256, 0, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 440,
	211, 0, 0, 296, 230, 0, 0, 0, 0, 0,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 161, 139, 241, 297, 180, 67, 0, 0, 121,
	122, 123, 418, 417, 420, 421, 422, 423, 0, 0,
	157, 419, 424, 425, 426, 0, 0, 0, 0, 394,
	411, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 0, 454, 0,
	410, 0, 0, 403, 404, 406, 405, 407, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 453,
	0, 0, 332, 0, 0, 451, 0, 0, 0, 0,
	0, 207, 0, 204, 135, 148, 0, 0, 240, 274,
	278, 0, 0, 0, 164, 0, 276, 253, 321, 0,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 318, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 151, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 0, 0, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 235, 152, 194, 294, 205, 213, 0, 0, 252,
	277, 159, 323, 295, 441, 452, 447, 448, 445, 446,
	0, 444, 443, 442, 455, 433, 434, 435, 436, 438,
	0, 449, 450, 437, 134, 146, 210, 0, 270, 181,
	326, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 244, 217, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	208, 0, 0, 256, 0, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 440,
	211, 0, 0, 296, 230, 0, 0, 0, 0, 0,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 161, 139, 241, 297, 180, 67, 0, 471, 121,
	122, 123, 418, 417, 420, 421, 422, 423, 0, 0,
	157, 419, 424, 425, 426, 0, 0, 0, 0, 0,
	411, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 0, 454, 0,
	410, 0, 0, 403, 404, 406, 405, 407, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 453,
	0, 0, 332, 0, 0, 451, 0, 0, 0, 0,
	0, 207, 0, 204, 135, 148, 0, 0, 240, 274,
	278, 0, 0, 0, 164, 0, 276, 253, 321, 0,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 318, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 151, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 0, 0, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 235, 152, 194, 294, 205, 213, 0, 0, 252,
	277, 159, 323, 295, 441, 452, 447, 448, 445, 446,
	0, 444, 443, 442, 455, 433, 434, 435, 436, 438,
	0, 449, 450, 437, 134, 146, 210, 0, 270, 181,
	326, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 244, 217, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	208, 0, 0, 256, 0, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 440,
	211, 0, 0, 296, 230, 0, 0, 0, 0, 0,
	431, 432, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 161, 139, 241, 297, 180, 67, 0, 0, 121,
	122, 123, 418, 417, 420, 421, 422, 423, 0, 0,
	157, 419, 424, 425, 426, 0, 0, 0, 0, 0,
	411, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 0, 454, 0,
	410, 0, 0, 403, 404, 406, 405, 407, 412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 453,
	0, 0, 332, 0, 0, 451, 0, 0, 0, 0,
	0, 207, 0, 204, 135, 148, 0, 0, 240, 274,
	278, 0, 0, 0, 164, 0, 276, 253, 321, 0,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 318, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 151, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 0, 0, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 235, 152, 194, 294, 205, 213, 0, 0, 252,
	277, 159, 323, 295, 441, 452, 447, 448, 445, 446,
	0, 444, 443, 442, 455, 433, 434, 435, 436, 438,
	0, 449, 450, 437, 134, 146, 210, 0, 270, 181,
	326, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 244, 217, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	208, 0, 0, 256, 0, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 0,
	211, 0, 0, 296, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 161, 139, 241, 297, 180, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 762, 761,
	771, 772, 764, 765, 766, 767, 768, 769, 770, 763,
	0, 0, 773, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 204, 135, 148, 0, 0, 240, 274,
	278, 0, 0, 0, 164, 0, 276, 253, 321, 0,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 318, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 151, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 0, 0, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 235, 152, 194, 294, 205, 213, 0, 0, 252,
	277, 159, 323, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 146, 210, 0, 270, 181,
	326, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 244, 217, 0, 0, 0,
	0, 0, 0, 0, 173, 673, 0, 0, 0, 0,
	208, 0, 0, 256, 0, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 0,
	211, 0, 0, 296, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 161, 139, 241, 297, 180, 0, 0, 0, 121,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 672, 332, 0, 0, 0, 0, 0, 0, 669,
	670, 207, 642, 204, 135, 148, 663, 667, 240, 274,
	278, 0, 0, 0, 164, 0, 276, 253, 321, 0,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 318, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 151, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 0, 0, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 235, 152, 194, 294, 205, 213, 0, 0, 252,
	277, 159, 323, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 146, 210, 0, 270, 181,
	326, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 244, 217, 0, 0, 862,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	208, 0, 0, 256, 0, 287, 163, 216, 214, 308,
	178, 174, 172, 162, 195, 221, 255, 304, 249, 0,
	211, 0, 0, 296, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	199, 161, 139, 241, 297, 180, 0, 0, 0, 121,
	122, 123, 0, 864, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 751, 752, 750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 753, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 207, 0, 204, 135, 148, 0, 0, 240, 274,
	278, 0, 0, 0, 164, 0, 276, 253, 321, 0,
	257, 275, 212, 310, 268, 320, 333, 334, 170, 234,
	327, 305, 330, 342, 149, 167, 247, 301, 324, 293,
	229, 307, 203, 292, 185, 138, 141, 303, 318, 158,
	286, 0, 0, 0, 143, 316, 300, 227, 200, 201,
	142, 0, 272, 171, 183, 166, 243, 313, 314, 165,
	343, 150, 329, 145, 151, 328, 236, 309, 317, 228,
	220, 144, 315, 226, 219, 206, 177, 191, 266, 215,
	267, 192, 232, 231, 233, 0, 140, 0, 298, 325,
	344, 155, 0, 0, 306, 338, 341, 0, 269, 156,
	184, 176, 265, 182, 209, 337, 339, 340, 154, 263,
	189, 235, 152, 194, 294, 205, 213, 0, 0, 252,
	277, 159, 323, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 146, 210, 0, 270, 181,
	326, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 137, 147, 153,
	160, 168, 175, 179, 187, 190, 193, 196, 197, 198,
	202, 218, 222, 223, 224, 225, 237, 238, 239, 242,
	245, 246, 248, 250, 251, 254, 258, 259, 260, 261,
	262, 264, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 302, 311, 312, 322,
	331, 335, 188, 319, 336, 33, 217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 67,
	0, 471, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 244, 217,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 636, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 642, 204, 135, 148, 640,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 244, 217,
	0, 0, 1126, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 1128, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 33, 217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 67, 0, 0, 121, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 0, 0, 0, 121, 122, 123, 0, 0,
	1144, 0, 0, 1145, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 1126, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 0, 0, 0, 121, 122, 123, 0, 1128,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 1124, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 895, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 0, 0, 0, 121, 122, 123, 0, 894,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 0, 0, 471, 121, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 67, 0, 0, 121, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 0, 0, 0, 121, 122, 123, 0, 1128,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 0, 0, 0, 121, 122, 123, 0, 864,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 244, 217, 0, 0, 0, 0, 0, 0, 0,
	173, 0, 0, 0, 0, 0, 208, 0, 0, 256,
	0, 287, 163, 216, 214, 308, 178, 174, 172, 162,
	195, 221, 255, 304, 249, 0, 211, 0, 0, 296,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 199, 161, 139, 241,
	297, 180, 966, 0, 0, 121, 122, 123, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 204,
	135, 148, 0, 0, 240, 274, 278, 0, 0, 0,
	164, 0, 276, 253, 321, 0, 257, 275, 212, 310,
	268, 320, 333, 334, 170, 234, 327, 305, 330, 342,
	149, 167, 247, 301, 324, 293, 229, 307, 203, 292,
	185, 138, 141, 303, 318, 158, 286, 0, 0, 0,
	143, 316, 300, 227, 200, 201, 142, 0, 272, 171,
	183, 166, 243, 313, 314, 165, 343, 150, 329, 145,
	151, 328, 236, 309, 317, 228, 220, 144, 315, 226,
	219, 206, 177, 191, 266, 215, 267, 192, 232, 231,
	233, 0, 140, 0, 298, 325, 344, 155, 0, 0,
	306, 338, 341, 0, 269, 156, 184, 176, 265, 182,
	209, 337, 339, 340, 154, 263, 189, 235, 152, 194,
	294, 205, 213, 0, 0, 252, 277, 159, 323, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 146, 210, 0, 270, 181, 326, 0, 0, 169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 137, 147, 153, 160, 168, 175, 179,
	187, 190, 193, 196, 197, 198, 202, 218, 222, 223,
	224, 225, 237, 238, 239, 242, 245, 246, 248, 250,
	251, 254, 258, 259, 260, 261, 262, 264, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 302, 311, 312, 322, 331, 335, 188, 319,
	336, 877, 217, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 244, 217,
	0, 0, 0, 0, 0, 0, 868, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 244, 217,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 742, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 244, 217,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 387,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 386, 319, 336, 244, 217,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 129, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 244, 217,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 0, 0, 208, 0, 0, 256, 0, 287, 163,
	216, 214, 308, 178, 174, 172, 162, 195, 221, 255,
	304, 249, 0, 211, 0, 0, 296, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 199, 161, 139, 241, 297, 180, 0,
	0, 0, 121, 122, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 0, 204, 135, 148, 0,
	0, 240, 274, 278, 0, 0, 0, 164, 0, 276,
	253, 321, 0, 257, 275, 212, 310, 268, 320, 333,
	334, 170, 234, 327, 305, 330, 342, 149, 167, 247,
	301, 324, 293, 229, 307, 203, 292, 185, 138, 141,
	303, 318, 158, 286, 0, 0, 0, 143, 316, 300,
	227, 200, 201, 142, 0, 272, 171, 183, 166, 243,
	313, 314, 165, 343, 150, 329, 145, 151, 328, 236,
	309, 317, 228, 220, 144, 315, 226, 219, 206, 177,
	191, 266, 215, 267, 192, 232, 231, 233, 0, 140,
	0, 298, 325, 344, 155, 0, 0, 306, 338, 341,
	0, 269, 156, 184, 176, 265, 182, 209, 337, 339,
	340, 154, 263, 189, 235, 152, 194, 294, 205, 213,
	0, 0, 252, 277, 159, 323, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 146, 210,
	0, 270, 181, 326, 0, 0, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	137, 147, 153, 160, 168, 175, 179, 187, 190, 193,
	196, 197, 198, 202, 218, 222, 223, 224, 225, 237,
	238, 239, 242, 245, 246, 248, 250, 251, 254, 258,
	259, 260, 261, 262, 264, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 302,
	311, 312, 322, 331, 335, 188, 319, 336, 0, 217,
}

var yyPact = [...]int{
	1867, -1000, -305, 1273, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1243, 826, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	357, 895, 93, 1143, 320, 95, 717, 221, 41, 19499,
	220, 37, 19889, -1000, 52, -1000, 38, 19889, 50, 19109,
	-1000, -1000, -1000, 10886, 1077, -50, -70, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 901, 1200, 1196, 1226, 714,
	1282, -1000, 9313, 9313, 187, 187, 187, 7753, -1000, -1000,
	13629, 19889, 19889, 903, 183, 218, 183, -149, -1000, -1000,
	-1000, -1000, -1000, -1000, 1143, -1000, -1000, 109, -1000, -1000,
	855, -1000, 302, 338, 171, 19889, -1000, 19889, 329, 1143,
	94, -1000, -1000, -1000, 19889, 182, 717, 182, 182, 19889,
	-1000, 265, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19889, 1117, 476, 476, 476,
	476, 476, 476, 5, -1000, -3, 99, 97, 101, -30,
	717, 96, -1000, 303, -1000, 84, 10, -1000, 476, 5311,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 207, -1000,
	-1000, -1000, -1000, 19889, 18719, 155, 370, -1000, -1000, -1000,
	-1000, 773, 514, -1000, 10886, 1798, 861, 861, -1000, -1000,
	233, -1000, -1000, 11666, 11666, 11666, 11666, 11666, 11666, 11666,
	11666, 11666, 11666, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 861, 261, -1000,
	10496, 861, 861, 861, 861, 861, 861, 861, 861, 10886,
	861, 861, 861, 861, 861, 861, 861, 861, 861, 861,
	861, 861, 861, 861, 861, 861, -1000, -1000, -1000, 19889,
	-1000, 1243, -1000, 826, -1000, -1000, -1000, 1146, 10886, 10886,
	1243, -1000, 1013, 9313, -1000, -1000, 1063, -1000, -1000, -1000,
	-1000, 427, 1261, -1000, 12836, 260, 1259, 18329, -1000, 16372,
	17939, 853, 7346, -101, -1000, -1000, -1000, 368, 15592, -1000,
	-1000, -1000, 1115, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 809, 19889, -1000, -1000, 355,
	717, -1000, 893, -1000, 804, -1000, 877, 90, 367, 19889,
	393, 717, 717, -1000, -1000, -1000, 1114, 338, 320, -1000,
	-1000, -1000, 17542, 717, -1000, 891, -1000, 1171, 178, 340,
	340, 717, -1000, -1000, 997, -1000, 19889, -1000, 5311, 110,
	144, 132, 19889, 1143, 1076, 851, 191, 19889, 1184, 942,
	19889, 717, -1000, 6532, -1000, 476, -1000, 624, 10886, -1000,
	-1000, -1000, -1000, -1000, 476, 19889, 476, 19889, 476, 476,
	476, 476, 424, 472, 424, -1000, -1000, -1000, -1000, 5311,
	5311, 19889, 5311, 5311, 19889, 5311, 5311, 472, -1000, -1000,
	-1000, 309, -1000, 941, -1000, -1000, -1000, -1000, 48, -1000,
	-1000, -1000, -1000, -1000, 1273, -1000, -1000, -1000, -126, 10886,
	10886, 10886, 10886, 579, 323, 11666, 562, 392, 11666, 11666,
	11666, 11666, 11666, 11666, 11666, 11666, 11666, 11666, 11666, 11666,
	11666, 11666, 11666, 652, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 717, -1000, 1260, 748, 748, 285, 285, 285,
	285, 285, 285, 285, 285, 285, 12056, 8143, 6532, 714,
	792, 1243, 9313, 9313, 10886, 10886, 10093, 9703, 9313, 1168,
	376, 514, 19889, -1000, -1000, 11276, -1000, -1000, -1000, -1000,
	-1000, 604, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19889,
	19889, 9313, 9313, 9313, 9313, 9313, -1000, 850, -1000, -178,
	15202, 1196, 714, 1063, 1170, 1267, 288, 614, 849, -1000,
	430, 1196, 14812, 837, -1000, 1063, -1000, -1000, -1000, 19889,
	-1000, -1000, 17152, -1000, -1000, 6125, 19889, 115, 19889, -1000,
	712, 1090, -1000, -1000, -1000, 1190, 14422, 19889, 880, 828,
	-1000, -1000, 257, 6939, -101, -1000, 6939, 839, -1000, -108,
	-107, 8533, 281, -1000, -1000, -1000, -1000, 4497, 12446, 659,
	413, -43, -1000, -1000, -1000, 877, -1000, 877, 877, 877,
	877, 16, 16, 16, 16, -1000, -1000, -1000, -1000, -1000,
	888, 886, -1000, 877, 877, 877, 877, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 884, 884, 884, 878, 878, 153,
	-1000, 10886, 66, 19889, 1177, 479, 71, 348, 69, -1000,
	1181, 924, -1000, 338, 695, -1000, 19889, 60, -1000, 156,
	-1000, 19889, 883, 1165, 340, 717, -1000, 717, -1000, -1000,
	-1000, -1000, -1000, 350, -1000, 256, -1000, 19889, 19889, 19889,
	19889, 19889, 228, 105, 19889, 19889, 848, -1000, 19889, 5311,
	-1000, -1000, -1000, -1000, -1000, -1000, 514, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 476, 19889, 19889, 19889, -1000,
	-1000, 476, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19889, -1000, 623, 19889, 19889, -1000, -1000, -1000, -1000, -1000,
	514, 323, 325, 351, -1000, -1000, 521, -1000, -1000, 1986,
	-1000, -1000, -1000, -1000, 562, 11666, 11666, 11666, 227, 1986,
	1968, 410, 1124, 285, 515, 515, 283, 283, 283, 283,
	283, 529, 529, -1000, -1000, -1000, 604, -1000, -1000, -1000,
	604, 9313, 9313, 846, 861, 255, -1000, 901, -1000, -1000,
	1196, 777, 777, 600, 707, 379, 1258, 777, 377, 1256,
	777, 777, 9313, -1000, -1000, 398, -1000, 10886, 604, -1000,
	498, 844, 843, 777, 604, 604, 777, 777, 19889, -1000,
	-286, -1000, -121, 273, 861, -1000, 16762, -1000, -1000, 1146,
	-1000, -1000, 1057, -1000, 1009, 10886, 10886, 10886, -1000, -1000,
	-1000, 1146, 1214, -1000, 1031, 1027, 1250, 9313, 16372, 1063,
	-1000, -1000, -1000, 254, 1250, 902, 861, -1000, 19889, 16372,
	16372, 16372, 16372, 16372, -1000, 983, 971, -1000, 974, 953,
	1017, 19889, -1000, 789, 714, 14422, 115, 665, 16372, 19889,
	-1000, -1000, 16372, 19889, 5718, -1000, 839, -101, -124, -1000,
	-1000, -1000, -1000, 514, -1000, 677, 824, 4090, -1000, -1000,
	-1000, -1000, 162, -1000, -1000, -1000, -1000, 1140, -1000, 408,
	-32, -1000, -1000, 16, 16, -1000, -1000, 281, 1099, 281,
	281, 281, 620, 620, -1000, -1000, -1000, -1000, -1000, 475,
	-1000, -1000, -1000, 461, -1000, -1000, 567, 945, 66, -1000,
	-1000, 338, 618, 1084, 19889, -1000, -1000, 649, 210, 63,
	89, -1000, -1000, -1000, -1000, 940, -1000, 671, -1000, -1000,
	784, -1000, 58, 19889, -1000, 780, 19889, -1000, 717, -1000,
	-1000, 1121, 1120, 6532, 873, -1000, -1000, -1000, -1000, 49,
	100, 98, 179, -1000, 5311, -1000, -1000, -1000, -1000, 424,
	-1000, 424, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 227,
	1986, 1901, -1000, 11666, 11666, -1000, -1000, 777, 777, 9313,
	6532, 1243, 1146, -1000, -1000, 189, 652, 189, 11666, 11666,
	-1000, 11666, 11666, -1000, -166, 761, 372, -1000, 10886, 400,
	-1000, -1000, 11666, 11666, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 217, 216, 213, 19889, -1000, -1000, 641,
	616, 1006, 514, 514, -1000, -1000, 19889, -1000, -1000, -1000,
	-1000, 1248, 10886, -1000, 823, -1000, 4904, 1196, 939, 19889,
	861, 1273, 13239, 19889, 868, -1000, 339, 1090, 914, 933,
	1326, -1000, -1000, -1000, -1000, 968, -1000, 964, -1000, -1000,
	-1000, -1000, -1000, 714, 1250, 16372, 813, -1000, 813, -1000,
	247, -1000, -1000, -1000, -113, -133, -1000, -1000, -1000, 4497,
	-1000, 4497, -1000, 930, 11666, -1000, -1000, -1000, 281, 281,
	-1000, 349, -1000, -1000, -1000, 775, -1000, 770, 821, 766,
	32, -1000, 872, 1097, 338, 338, -1000, 441, -1000, 717,
	-1000, -1000, 19889, 70, -1000, 882, 582, -1000, 19889, -1000,
	-1000, 19889, -1000, -1000, 19889, -1000, 66, 764, -1000, -1000,
	-1000, 748, -1000, -172, 717, 19889, 19889, 19889, -1000, 19889,
	-1000, 476, 476, -1000, 11666, 1986, 1986, -1000, -1000, 604,
	-1000, 1196, -1000, 604, 877, 877, -1000, 877, 878, -1000,
	877, 36, 877, 35, 604, 604, 1930, 1829, 1759, 1169,
	861, -156, -1000, 514, 10886, 1011, 982, 861, 861, 861,
	736, -1000, 603, 16, -1000, -1000, -1000, 1246, 1225, 514,
	-1000, -1000, -1000, 1173, 840, 706, -1000, -1000, 8923, 738,
	1023, 240, 736, 1243, 19889, 10886, -1000, -1000, 10886, 876,
	-1000, 10886, -1000, -1000, -1000, 1243, 1243, 813, -1000, -1000,
	295, -1000, -1000, -1000, 4090, -1000, -20, 1266, 1986, -1000,
	-1000, -1000, -1000, 16, 602, 16, 438, -1000, 437, -1000,
	-1000, -224, -1000, -1000, 866, 954, -1000, -1000, 871, -1000,
	-1000, -1000, 647, -1000, -1000, -1000, -1000, -1000, 137, 19889,
	-1000, -1000, 6532, -1000, -1000, 870, 887, -1000, -1000, -1000,
	-1000, 1986, -1000, 1146, -1000, -1000, 177, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 11666, 11666, 11666, 11666, 11666,
	1196, 597, 514, 11666, 11666, 15982, 19889, 19889, 14019, 19889,
	16, -44, -1000, 10886, 10886, 1164, -1000, 861, -1000, 815,
	19889, 861, 19889, -1000, 1196, -1000, 514, 514, 19889, 514,
	1196, -1000, 301, -1000, -79, 281, -1000, 281, 635, 631,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1187, 19889,
	-1000, 19889, -1000, 795, -1000, 337, 19889, 19889, -1000, -1000,
	-1000, 498, 498, 498, 498, 81, 604, -1000, 498, 498,
	734, -1000, 734, 734, 273, -1000, -280, -1000, 1058, 1054,
	514, 773, 1265, -1000, 861, 1273, 239, 706, -1000, -1000,
	732, -1000, 425, 1162, -1000, 1153, -1000, -1000, -1000, -1000,
	-1000, 826, 724, 859, 6532, 4497, 722, -1000, -1000, -1000,
	-1000, -1000, 604, 88, -176, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -44, 194, -1000, 1036, 1034, 1208, 19889, 706,
	19889, -1000, -1000, 591, -1000, -1000, 133, -1000, 19889, -1000,
	-1000, 873, -1000, 1001, -170, -187, 1040, 1043, 1043, 1054,
	1207, 1052, 1049, -1000, 553, 667, -1000, -1000, -1000, -81,
	670, -172, -1000, 958, -1000, 1038, 599, -1000, -1000, -1000,
	-1000, 552, -1000, 1206, 1202, -1000, 139, -1000, -1000, 929,
	-1000, -173, -1000, 598, -1000, -1000, -1000, 548, 484, 77,
	926, -1000, 1254, -185, -1000, -1000, -1000, -1000, -1000, -1000,
	1264, 270, 270, -190, -1000, -1000, -1000, 143, 542, -1000,
	-1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1567, 1566, 39, 79, 77, 1565, 1564, 1563, 1562,
	131, 129, 128, 1561, 1560, 1557, 1556, 1554, 1552, 1550,
	1541, 1540, 1539, 1538, 1537, 104, 1536, 1535, 1532, 1531,
	1527, 111, 110, 446, 1524, 1522, 1520, 1519, 1518, 1517,
	1515, 1514, 1512, 1511, 1507, 1506, 1504, 1503, 105, 1500,
	1499, 1498, 1497, 1495, 1494, 1493, 1492, 1491, 1490, 1489,
	103, 1484, 35, 266, 55, 70, 1480, 67, 1479, 1478,
	1477, 1476, 1474, 1056, 1473, 37, 81, 66, 1469, 30,
	1464, 1462, 102, 1461, 1460, 64, 1458, 1457, 59, 1456,
	54, 68, 10, 22, 1455, 1454, 1453, 1450, 24, 2599,
	1448, 1447, 19, 1446, 1445, 115, 1444, 73, 21, 18,
	12, 17, 1441, 76, 1439, 16, 1438, 1437, 1436, 75,
	1435, 1434, 1432, 1429, 25, 1428, 71, 84, 41, 1427,
	6, 4, 1424, 1420, 1418, 1415, 1414, 1413, 3, 1408,
	1406, 1405, 1404, 27, 1403, 31, 1402, 63, 33, 28,
	9, 1401, 1400, 23, 99, 49, 89, 1393, 1387, 1385,
	712, 1384, 44, 1382, 134, 1381, 61, 1378, 440, 636,
	1377, 1376, 1376, 1376, 1376, 51, 822, 1757, 13, 96,
	1375, 1372, 1521, 56, 72, 15, 1371, 1370, 1368, 106,
	65, 38, 687, 34, 1366, 1364, 1363, 1360, 1359, 1358,
	1356, 98, 1354, 1353, 1346, 147, 11, 97, 20, 1344,
	1339, 1338, 1333, 48, 36, 1332, 95, 94, 43, 86,
	1329, 100, 78, 62, 1328, 46, 1327, 1326, 1323, 1322,
	32, 14, 1320, 83, 74, 45, 29, 42, 80, 1319,
	26, 1316, 1314, 87, 82, 1314, 1314, 1314, 8, 1309,
	2, 0, 1308, 7, 112, 1308, 1125, 445, 1, 1306,
	5, 1303, 1290, 69, 1289, 1286, 1283, 1281, 2317, 1766,
	90, 1279, 108,
}

var yyR1 = [...]int{
	0, 266, 267, 267, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 251, 251, 251, 254, 254, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	270, 270, 82, 82, 83, 83, 147, 147, 13, 14,
	14, 156, 156, 155, 155, 155, 157, 157, 157, 157,
	192, 192, 15, 15, 15, 15, 15, 61, 61, 253,
	253, 252, 250, 250, 249, 249, 248, 23, 24, 28,
	29, 30, 256, 256, 226, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 228, 228, 215,
	215, 227, 227, 227, 227, 227, 227, 227, 214, 194,
	194, 194, 194, 197, 197, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 196, 196, 196, 196, 196, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 213, 213, 201,
	201, 207, 207, 208, 208, 208, 210, 210, 211, 211,
	170, 170, 170, 203, 203, 204, 204, 209, 209, 205,
	205, 205, 206, 206, 206, 212, 212, 212, 212, 212,
	202, 202, 216, 240, 240, 239, 239, 235, 235, 235,
	235, 225, 225, 232, 232, 232, 232, 232, 224, 224,
	220, 220, 220, 221, 221, 222, 222, 219, 219, 223,
	223, 234, 234, 233, 217, 217, 218, 218, 243, 243,
	243, 243, 244, 259, 260, 258, 258, 258, 258, 258,
	171, 171, 171, 229, 229, 229, 230, 230, 230, 231,
	231, 231, 257, 257, 116, 116, 117, 117, 27, 27,
	26, 26, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 247, 245,
	245, 246, 246, 17, 22, 22, 18, 18, 18, 18,
	19, 19, 36, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	163, 163, 261, 261, 165, 165, 161, 161, 164, 164,
	162, 162, 162, 166, 166, 166, 167, 167, 265, 265,
	265, 38, 38, 40, 40, 41, 42, 42, 187, 187,
	188, 188, 43, 44, 53, 53, 53, 53, 53, 53,
	55, 55, 55, 7, 7, 7, 7, 50, 50, 50,
	6, 6, 39, 39, 46, 262, 262, 263, 264, 264,
	264, 264, 47, 20, 271, 48, 49, 49, 60, 60,
	60, 56, 56, 56, 59, 59, 59, 64, 64, 66,
	66, 66, 66, 66, 67, 67, 67, 67, 67, 67,
	63, 63, 65, 65, 65, 65, 180, 180, 180, 179,
	179, 74, 74, 75, 75, 76, 76, 77, 77, 77,
	114, 91, 91, 146, 146, 145, 145, 148, 148, 78,
	78, 78, 78, 79, 79, 80, 80, 81, 81, 186,
	186, 185, 185, 185, 184, 184, 84, 84, 84, 86,
	85, 85, 85, 85, 87, 87, 89, 89, 88, 88,
	90, 92, 92, 92, 92, 92, 93, 93, 73, 73,
	73, 73, 73, 73, 73, 73, 159, 159, 95, 95,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	106, 106, 106, 106, 106, 106, 96, 96, 96, 96,
	96, 96, 96, 62, 62, 107, 107, 107, 113, 108,
	108, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 103, 103, 103, 103, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 272, 272,
	105, 104, 104, 104, 104, 104, 104, 104, 58, 58,
	58, 58, 58, 191, 191, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 120, 120,
	57, 57, 118, 118, 119, 121, 121, 115, 115, 115,
	98, 98, 98, 98, 98, 98, 98, 98, 100, 100,
	100, 122, 122, 123, 123, 124, 124, 125, 125, 126,
	127, 127, 127, 128, 128, 128, 128, 241, 241, 241,
	241, 241, 236, 236, 236, 236, 237, 237, 237, 68,
	68, 68, 68, 70, 70, 69, 69, 51, 51, 52,
	52, 52, 71, 71, 72, 72, 72, 72, 143, 143,
	143, 129, 129, 129, 129, 134, 134, 134, 130, 130,
	132, 132, 132, 133, 133, 133, 131, 137, 137, 139,
	139, 138, 138, 136, 136, 141, 141, 140, 140, 135,
	135, 97, 97, 97, 97, 97, 144, 144, 144, 144,
	149, 149, 109, 109, 111, 111, 110, 112, 150, 150,
	153, 151, 151, 154, 154, 154, 154, 154, 152, 152,
	152, 181, 181, 181, 158, 158, 168, 168, 169, 169,
	160, 160, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 173, 173, 173, 174, 174, 142, 142, 142,
	142, 242, 242, 238, 177, 177, 178, 178, 182, 182,
	183, 183, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 268, 269, 189, 190, 190, 190,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 3, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 0, 1, 0, 2, 0, 2, 0, 1,
	1, 3, 2, 2, 2, 5, 5, 3, 3, 3,
	5, 6, 2, 4, 3, 6, 7, 5, 5, 5,
	12, 7, 5, 9, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	3, 8, 8, 3, 3, 5, 4, 6, 5, 4,
	3, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	4, 2, 4, 4, 4, 4, 4, 5, 7, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 7,
	2, 4, 5, 4, 3, 3, 5, 2, 3, 3,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 2, 1, 3, 1, 1, 1, 3, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 5, 4, 5, 5, 0, 2, 1, 3,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 4, 5, 5, 6, 4,
	4, 6, 6, 6, 8, 8, 8, 8, 9, 8,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 0, 2,
	4, 0, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 4, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -266, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -268, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 146, -29, -24, 147, -30, 149, 148, 182,
	150, 175, 70, 210, 211, 213, 214, 215, 216, -55,
	180, 181, 152, 35, 41, 32, 33, 80, 9, 308,
	177, 176, 26, -267, 412, -60, 5, -124, 16, -3,
	-48, -271, -48, -48, -48, -48, -48, -48, -226, -228,
	80, 119, 80, -61, 154, -142, -256, 100, 160, 163,
	164, 299, 153, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 151, 76, 147, 154, -256, 156, 270, -254,
	-251, 83, 84, 85, 154, 154, 155, 156, -256, 154,
	-88, -182, -251, -176, 318, 168, 350, 351, 209, 76,
	260, 210, 224, 218, 245, 237, 319, 352, 169, 198,
	235, 238, 286, 353, 282, 265, 273, 94, 213, 295,
	354, 75, 47, 40, 178, 233, 229, 199, 355, 327,
	192, 227, 46, 28, 45, 356, 275, 250, 44, 357,
	79, 323, 277, 228, 274, 208, 152, 358, 406, 284,
	359, 251, 255, 360, 287, 48, 361, 362, 363, 74,
	222, 223, 364, 206, 167, 289, 249, 165, 34, 278,
	320, 54, 186, 290, 42, 253, 41, 410, 365, 248,
	244, 49, 366, 367, 368, 369, 247, 221, 243, 204,
	58, 257, 256, 258, 193, 285, 240, 370, 371, 372,
	172, 77, 373, 230, 19, 374, 375, 200, 376, 52,
	377, 378, 293, 181, 379, 50, 37, 184, 380, 381,
	382, 383, 384, 283, 385, 276, 252, 254, 188, 272,
	322, 386, 226, 387, 173, 185, 180, 294, 174, 388,
	389, 390, 391, 392, 393, 394, 214, 39, 395, 396,
	397, 398, 207, 203, 288, 297, 57, 78, 262, 399,
	220, 201, 400, 211, 51, 195, 268, 205, 43, 241,
	187, 401, 402, 231, 232, 246, 219, 242, 212, 407,
	189, 182, 403, 296, 202, 263, 324, 194, 239, 236,
	196, 404, 156, 190, 191, 405, 408, 279, 269, 280,
	281, 270, 197, 234, 264, 154, 238, 286, 265, 266,
	267, 278, 279, 284, 283, 188, -265, 287, 154, -161,
	137, 146, 275, -165, 276, 269, 270, 197, -261, -251,
	288, 410, 271, 277, 281, 280, -182, 212, -187, 217,
	-177, -251, -176, 215, -88, -53, 406, 150, -189, -189,
	-189, -108, -73, -94, 103, -99, 30, 24, -98, -95,
	-115, -112, -113, 137, 138, 140, 139, 141, 126, 127,
	134, 104, 142, -103, -101, -102, -104, 87, 86, 95,
	88, 89, 90, 91, 96, 97, 98, -177, -182, -110,
	-268, 64, 65, 309, 310, 311, 312, 317, 313, 106,
	53, 298, 307, 306, 305, 302, 303, 300, 301, 315,
	316, 159, 299, 153, 132, 308, -251, -176, 40, 268,
	268, -5, -4, -268, 6, 21, 22, -128, 18, 17,
	-269, 82, -56, -66, 59, 60, -67, 22, 36, 63,
	61, -49, -65, 128, -73, -182, -65, -160, 158, -160,
	-160, -151, -192, 212, -154, 288, 287, -178, -152, -177,
	-175, 286, 238, 285, 151, 325, 102, 23, 25, 105,
	137, 17, 106, 166, 136, 162, 309, 146, 68, 326,
	300, 301, 298, 304, 311, 312, 299, 266, 30, 11,
	328, 26, 176, 22, 36, 130, 148, 109, 110, 179,
	24, 177, 98, 331, 20, 71, 171, 12, 164, 14,
	332, 333, 15, 159, 158, 121, 155, 66, 9, 142,
	27, 118, 62, 334, 29, 335, 336, 337, 338, 64,
	119, 18, 302, 303, 32, 411, 339, 317, 183, 132,
	69, 55, 103, 340, 341, 96, 342, 99, 72, 100,
	16, 67, 38, 343, 344, 161, 345, 291, 346, 120,
	149, 308, 65, 347, 153, 267, 6, 314, 31, 175,
	163, 63, 348, 154, 108, 315, 316, 157, 97, 5,
	160, 33, 10, 70, 73, 305, 306, 307, 53, 321,
	107, 13, 349, 292, 101, -227, 119, -214, -218, -177,
	170, -244, 166, -88, -234, -233, -177, -68, 76, -169,
	159, 155, -169, 308, -31, -32, 238, 136, 81, -218,
	-217, -216, -257, 170, -243, -232, 162, 171, -224, 163,
	164, -219, 155, 29, -225, 111, -257, -88, -88, 146,
	148, 151, 72, -33, 194, -22, -88, -168, 159, -251,
	-168, -168, -88, 143, -88, 31, -166, 119, 13, -166,
	-166, -166, -166, -166, 195, 282, 195, 282, 195, 196,
	195, 196, 195, -164, -163, 273, 274, 268, 272, -251,
	299, 284, -251, 188, 154, 189, 156, -220, 155, 34,
	167, 196, 268, 191, -166, -190, -268, -178, 157, -177,
	-50, -177, 87, -7, -3, -11, -10, -12, 111, 81,
	102, 100, 101, 118, -73, -96, 121, 103, 119, 120,
	105, 123, 122, 133, 126, 127, 128, 129, 130, 131,
	132, 124, 125, 136, 111, 112, 113, 114, 115, 116,
	117, -159, -268, -113, -268, 144, 145, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -268, 143, -2,
	-108, -4, -268, -268, -268, -268, -268, -268, -268, -268,
	-120, -73, -268, -272, -105, -268, -272, -105, -272, -105,
	-272, -268, -272, -105, -272, -105, -272, -272, -105, -268,
	-268, -268, -268, -268, -268, -268, -189, -262, -263, -91,
	-88, -124, -3, -48, -143, 20, 32, -73, -125, -126,
	-73, -124, 55, -63, -65, -67, 59, 60, 93, 12,
	-180, -179, 23, -177, 87, 143, 12, -89, 27, -88,
	-75, -76, -77, -78, -91, -114, -268, 12, -82, -83,
	-88, -90, -182, 81, 212, -154, -192, -156, -155, 289,
	291, 111, -181, -177, 87, 30, 31, 82, 81, -88,
	-194, -197, -199, -198, -200, -195, -196, 235, 236, 137,
	239, 241, 242, 243, 244, 245, 246, 247, 248, 249,
	250, 31, 178, 231, 232, 233, 234, 251, 252, 253,
	254, 255, 256, 257, 258, 218, 237, 319, 219, 220,
	221, 222, 223, 224, 226, 227, 228, 229, 230, -254,
	-251, 80, 82, 81, -201, 80, -71, 199, 111, -88,
	103, -251, -251, 31, -225, -25, 80, -214, -223, -254,
	-251, 80, 29, 161, 160, -222, -219, -222, -223, -251,
	30, 74, 75, -115, -177, -182, -190, 190, 190, 154,
	154, 203, -88, 40, 81, 157, -82, 24, 72, -88,
	-251, -183, -182, -175, -166, 87, -73, -166, -88, -166,
	-88, -166, -166, -166, -166, -162, 12, 121, -221, 12,
	121, -162, -190, -190, -88, -190, -190, -88, -190, -190,
	-221, -167, 119, 72, -188, 215, 249, 407, 408, 409,
	-73, -73, -73, -73, -106, 96, 103, 97, 98, -99,
	-107, -110, -113, 92, 121, 119, 120, 105, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -191, -251, 87, -251, -98, -98, -177,
	-64, 22, 36, -63, -178, -183, -175, -60, -269, -269,
	-124, -63, -63, -73, -73, -115, 87, -63, -115, 87,
	-63, -63, -59, 22, 36, -118, -119, 107, -115, -269,
	-99, -177, -177, -63, -64, -64, -63, -63, 81, -264,
	291, 292, 411, -185, 184, -184, 23, -182, 87, -128,
	-269, -129, 27, 10, 121, 81, 19, 81, -127, 25,
	26, -128, -100, -177, 88, 91, -74, 81, 12, -67,
	-88, -179, 128, -183, -88, -147, 184, -88, 31, 81,
	-84, -86, -85, -87, 62, 66, 68, 63, 64, 65,
	69, -186, 23, -75, -3, -268, -88, -82, -270, 81,
	12, 73, -270, 81, 143, -154, -156, 81, 290, 292,
	293, 72, 99, -73, -206, 136, -229, -230, -231, -178,
	87, 88, -214, -216, -217, -218, 82, -170, 96, 103,
	-210, 263, -201, -201, -201, -201, -201, -205, 238, -205,
	-205, -205, 80, 80, -201, -201, -201, -201, -207, 80,
	-207, -207, -208, 80, -208, -244, -73, -240, -239, -235,
	-238, 165, 94, 321, 73, -233, -127, 88, -70, 201,
	111, 202, 204, 205, 24, -242, -238, -225, -251, 87,
	-215, -214, -116, 208, -243, -234, 80, 29, -222, -223,
	-223, 148, 31, 143, -88, -88, -88, -88, -88, 151,
	148, 192, -88, -88, -88, -190, -166, -182, -182, -88,
	-166, -88, 87, -88, -177, 96, 97, 98, -107, -99,
	-99, -99, -62, 179, 102, -269, -269, -63, -63, -268,
	143, -5, -128, -269, -269, 81, 73, 23, 12, 12,
	-269, 12, 12, -269, -269, -63, -121, -119, 109, -73,
	-269, -269, 81, 81, -269, -269, -269, -269, -269, -263,
	410, 292, -92, 70, 158, 71, -268, -184, -143, 38,
	46, 57, -73, -73, -126, -143, -158, 20, 12, 53,
	53, -93, 13, -65, -75, -67, 143, -93, -97, 31,
	53, -3, -268, -268, -150, -153, -115, -76, -77, -77,
	-76, -77, 62, 62, 62, 67, 62, 67, 62, -85,
	-182, -269, -269, -3, -147, 73, -75, -88, -75, -90,
	-182, 128, -155, -157, 294, 291, 297, -251, 87, 81,
	-231, 111, -218, -203, 30, 96, -211, 264, -205, -205,
	-206, 31, -206, -206, -206, -213, 87, -213, 88, 88,
	82, -241, -236, -237, 32, 76, -235, -225, 87, 37,
	-177, 82, 156, 207, -72, 304, 87, 83, 72, -251,
	87, 81, 82, -117, 209, -115, 82, -145, -177, -223,
	30, 30, -178, -253, 73, 190, 260, 190, 193, 157,
	-190, -162, -162, -62, 102, -99, -99, -269, -269, -64,
	-178, -124, -143, -193, 137, 235, 178, 233, 229, 249,
	240, 262, 231, 263, -191, -193, -99, -99, -99, -99,
	318, -124, 110, -73, 108, -99, -99, 155, 155, 155,
	-148, -177, 39, 87, 87, 58, -88, -122, 14, -73,
	128, -128, -149, 72, -150, -109, -111, -110, -268, -144,
	-269, -177, -148, -93, 81, 111, -80, -79, 72, 73,
	-81, 72, -79, 62, 62, -269, -93, -75, -93, -93,
	143, 291, 295, 296, -230, -231, -204, 72, -99, -206,
	-206, -251, 137, 82, 81, 82, 81, 82, 81, -171,
	356, 103, -237, -236, -225, -225, 88, -251, -88, -69,
	199, 206, 80, 84, -88, -214, -115, -240, 82, 81,
	-98, -250, 321, -252, -251, -177, -177, -177, -88, -166,
	-166, -99, -269, -128, -269, -201, -201, -201, -208, -201,
	223, -201, 223, -269, -269, 20, 20, 20, 20, -268,
	-57, 314, -73, 81, 81, -268, -268, -268, -269, 81,
	87, -205, -123, 15, 17, 28, -149, 81, -269, -269,
	81, 53, 143, -269, -124, -153, -73, -73, 80, -73,
	-124, -93, -209, 260, 10, -205, 87, -205, 88, 88,
	356, 30, 77, 78, 79, 30, 74, 75, -146, 80,
	82, 173, -177, -249, -248, -178, 80, 73, -143, -205,
	-251, -99, -99, -99, -99, -99, -128, 87, -99, -99,
	-145, -269, -145, -145, -185, -177, -205, -131, -136, -164,
	-73, -108, 29, -111, 53, -3, -177, -109, -177, -128,
	-145, -128, -212, 161, 29, 160, -102, -206, -206, 82,
	82, 23, -145, -88, 81, 111, -145, -88, -269, -269,
	-269, -269, -58, 121, 321, -269, -269, -269, -269, -269,
	-269, -92, -134, 406, -137, 42, -138, 43, 10, -109,
	143, 82, -202, 94, 29, 29, -3, 82, 80, -248,
	-231, 82, -269, 319, 69, 322, -131, 47, 241, -139,
	51, -140, -135, 52, 17, -150, -177, 87, -51, 321,
	-145, -253, 58, 320, 323, -132, 49, -130, 48, -130,
	-138, 17, -141, 44, 45, 87, -52, 198, 410, 82,
	-250, 58, -133, 50, 72, 99, 87, 17, 17, 166,
	-259, -260, 72, 321, 72, 99, 87, 87, 200, -260,
	72, 11, 10, 322, -258, 174, 169, 172, 31, -258,
	323, 168, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 695, 0, 434, 434, 434, 434, 434, 434, 434,
	0, 0, -2, -2, 278, 0, 36, 0, 0, 0,
	0, -2, 392, 393, 0, 395, -2, 0, 0, 404,
	1186, 1186, 1186, 0, 0, 0, 0, 1184, 53, 54,
	410, 411, 412, 1, 3, 0, 438, 703, 0, 0,
	-2, 436, 0, 0, 810, 810, 810, 0, 82, 83,
	0, 0, 0, 719, 808, 0, 808, 0, 828, 829,
	830, 102, 103, 86, -2, 107, 108, 0, 112, 292,
	279, 280, -2, 221, 272, 0, 101, 0, 0, 111,
	37, 33, 34, 35, 0, 806, 0, 806, 806, 0,
	331, 518, 838, 839, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 0, 0, 383, 383, 383,
	383, 383, 383, 0, 341, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 360, 0, 0, 367, 383, 1187,
	389, 390, 377, 375, 372, 373, 391, 394, 0, 399,
	402, 834, 835, 0, 417, 0, 1027, 409, 422, 423,
	433, 38, 569, 528, 0, 534, 536, 0, 571, 572,
	573, 574, 575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 601, 602, 603, 604, 680, 681, 682,
	683, 684, 685, 686, 687, 538, 539, 677, 0, 787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 668,
	0, 638, 638, 638, 638, 638, 638, 638, 638, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 1186, 0,
	432, 695, 49, 0, 434, 439, 440, 738, 0, 0,
	695, 1185, 0, 0, -2, -2, 450, 456, 457, 458,
	459, 435, 0, 462, 466, 0, 0, 0, 811, 0,
	0, 68, 0, 1157, 791, -2, -2, 0, 0, 836,
	837, -2, 990, -2, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 869, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 880, 881, 882, 883, 884, 885, 886, 887,
	888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
	898, 899, 900, 901, 902, 903, 904, 905, 906, 907,
	908, 909, 910, 911, 912, 913, 914, 915, 916, 917,
	918, 919, 920, 921, 922, 923, 924, 925, 926, 927,
	928, 929, 930, 931, 932, 933, 934, 935, 936, 937,
	938, 939, 940, 941, 942, 943, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 959, 960, 961, 962, 963, 964, 965, 966, 967,
	968, 969, 970, 971, 972, 0, 0, 121, 122, 0,
	36, 247, 0, 117, 0, 241, 179, 732, 0, 0,
	0, 0, 0, 88, 109, 110, 0, 221, 0, 282,
	283, 284, 0, -2, 245, 0, 273, 0, 0, 235,
	235, 239, 237, 238, 0, 222, 0, 98, 1187, 0,
	0, 0, 0, -2, 0, 323, 0, 0, 0, 0,
	0, 0, 330, 0, 332, 383, 334, 0, 0, 335,
	336, 337, 338, 339, 383, 0, 383, 0, 383, 383,
	383, 383, 380, 0, 380, 378, 379, 370, 371, 1187,
	1187, 0, 1187, 1187, 0, 1187, 1187, 0, 230, 231,
	232, 386, 364, 365, 368, 369, 1188, 1189, 400, 403,
	420, 418, 419, 421, 413, 414, 415, 416, 0, 0,
	0, 0, 0, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 557, 558, 559, 560, 561,
	562, 535, 0, 549, 0, 0, 0, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 0, 447, 0, 0,
	0, 695, 0, 0, 0, 0, 0, 0, 0, 444,
	0, 669, 0, 622, 630, 0, 623, 631, 624, 632,
	625, 0, 626, 633, 627, 634, 628, 629, 635, 0,
	0, 0, 447, 447, 0, 0, 39, 424, 425, 0,
	501, 703, 0, 449, 741, 0, 0, 704, 696, 697,
	700, 703, 0, 471, 460, 451, 454, 455, 437, 0,
	463, 467, 0, 469, 470, 0, 0, 66, 0, 517,
	0, 473, 475, 476, 477, 499, 0, 0, 0, 0,
	62, 64, 518, 0, 1157, 797, 0, 70, 71, 0,
	0, 0, 202, 801, 802, 803, 799, 263, 228, 0,
	190, 186, 130, 131, 132, 179, 134, 179, 179, 179,
	179, 199, 199, 199, 199, 162, 163, 164, 165, 166,
	0, 0, 149, 179, 179, 179, 179, 169, 170, 171,
	172, 173, 174, 175, 176, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 181, 181, 181, 183, 183, 0,
	37, 0, 213, 0, 700, 0, 723, 0, 0, 97,
	0, 831, 100, 221, 0, 281, 0, 274, 229, 0,
	-2, 0, 0, 0, 235, 239, 236, 239, 227, 240,
	287, 288, 289, 0, 677, 0, 293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 326, 807, 0, 1187,
	329, 519, 840, 841, 333, 384, 385, 340, 358, 342,
	361, 343, 345, 344, 346, 383, 0, 0, 0, 233,
	234, 383, 349, 350, 351, 352, 353, 354, 355, 356,
	0, 363, 0, 0, 0, 401, 405, 406, 407, 408,
	570, 529, 530, 531, 533, 550, 0, 552, 554, 540,
	541, 565, 566, 567, 0, 0, 0, 0, 563, 545,
	0, 576, 577, 578, 579, 580, 581, 582, 583, 584,
	585, 586, 587, 590, 653, 654, 0, 588, 589, 600,
	0, 0, 0, 448, 678, 0, -2, 0, 568, 786,
	703, 0, 0, 0, 0, 573, 680, 0, 573, 680,
	0, 0, 0, 445, 446, 675, 672, 0, 0, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	428, 430, 0, 521, 1096, 502, 0, 504, 505, 738,
	50, 40, 0, 739, 0, 0, 0, 0, 699, 701,
	702, 738, 0, 688, 0, 0, 526, 0, 0, 452,
	46, 468, 464, 0, 526, 0, 0, 516, 0, 0,
	0, 0, 0, 0, 506, 0, 0, 509, 0, 0,
	0, 0, 500, 0, 0, 0, -2, 0, 0, 0,
	60, 61, 0, 0, 0, 792, 69, 0, 0, 74,
	75, 793, 794, 795, 796, 0, 104, 264, 266, 269,
	270, 271, 123, 125, 126, 127, 118, 193, 191, 0,
	188, 187, 133, 199, 199, 156, 157, 202, 0, 202,
	202, 202, 0, 0, 150, 151, 152, 153, 144, 0,
	145, 146, 147, 0, 148, 246, 0, 707, 214, 215,
	217, 221, 0, 0, 0, 242, 243, 0, 0, 0,
	0, 720, 721, 722, 809, 0, 832, 0, 115, 116,
	0, 119, 276, 0, 244, 0, 0, 223, 239, 224,
	225, 0, 0, 0, 89, 297, 299, 298, 302, 0,
	0, 0, 0, 324, 1187, 328, 347, 381, 382, 380,
	362, 380, 387, 366, 397, 551, 553, 555, 542, 563,
	546, 0, 543, 0, 0, 537, 605, 0, 0, 447,
	0, 695, 738, 609, 610, 0, 0, 0, 0, 0,
	646, 0, 0, 647, 0, 695, 0, 673, 0, 0,
	621, 640, 0, 0, 641, 642, 643, 644, 645, 426,
	429, 431, 481, 0, 0, 0, 0, 503, 42, 0,
	0, 0, 705, 706, 698, 41, 0, 804, 805, 689,
	690, 691, 0, 461, 472, 453, 0, 703, 780, 0,
	0, 772, 0, 0, 526, 788, 0, 474, 495, 497,
	0, 492, 507, 508, 510, 0, 512, 0, 514, 515,
	478, 479, 480, 0, 526, 0, 526, 63, 526, 65,
	0, 520, 72, 73, 0, 0, 79, 203, 204, 0,
	267, 0, 124, 195, 0, 192, 129, 189, 202, 202,
	158, 0, 159, 160, 161, 0, 177, 0, 0, 0,
	260, 84, 711, 710, 221, 221, 216, 0, 219, 0,
	833, 180, 0, 0, 733, 734, 0, 737, 0, 113,
	114, 0, 285, 286, 0, 275, 213, 0, 485, 226,
	290, 0, 678, 92, 0, 0, 0, 0, 295, 0,
	327, 383, 383, 544, 0, 564, 547, 606, 607, 0,
	679, 703, 44, 0, 179, 179, 658, 179, 183, 661,
	179, 663, 179, 666, 0, 0, 0, 0, 0, 0,
	0, 670, 620, 676, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 199, 743, 740, 43, 693, 0, 527,
	465, 47, 51, 0, 780, 771, 782, 784, 0, 0,
	0, 776, 0, 695, 0, 0, 489, 496, 0, 0,
	490, 0, 491, 511, 513, -2, 695, 526, 58, 59,
	0, 76, 77, 78, 265, 268, 197, 0, 194, 154,
	155, 200, 201, 199, 0, 199, 0, 184, 0, 252,
	261, 0, 708, 709, 0, 0, 218, 220, 483, 724,
	725, 726, 0, 736, 99, 120, 277, 212, 0, 0,
	291, 296, 0, 90, 91, 0, 0, 301, 325, 348,
	359, 548, 608, 738, 611, 655, 199, 659, 660, 662,
	664, 665, 667, 613, 612, 0, 0, 0, 0, 0,
	703, 0, 674, 0, 0, 0, 0, 0, 501, 0,
	199, 763, 48, 0, 0, 0, 52, 0, 785, 0,
	0, 0, 0, 67, 703, 789, 790, 493, 0, 498,
	703, 57, 205, 198, 0, 202, 178, 202, 0, 0,
	262, 712, 713, 714, 715, 716, 717, 718, 0, 0,
	735, 0, 486, 93, 94, 0, 0, 0, 45, 656,
	657, 0, 0, 0, 0, 648, 0, 671, 0, 0,
	0, 523, 0, 0, 521, 488, 745, 744, 757, 761,
	694, 692, 0, 783, 0, 775, 778, 774, 777, 55,
	0, 56, 210, 0, 207, 209, 196, 167, 168, 182,
	185, 0, 0, 0, 0, 0, 0, 303, 614, 616,
	615, 617, 0, 0, 0, 619, 636, 637, 522, 524,
	525, 482, 763, 0, 756, 759, -2, 0, 0, 773,
	0, 494, 128, 0, 206, 208, 727, 484, 0, 95,
	96, 89, 618, 0, 0, 0, 750, 748, 748, 761,
	0, 765, 0, 770, 0, 781, 779, 211, 85, 729,
	0, 92, 649, 0, 652, 753, 0, 746, 749, 747,
	758, 0, 764, 0, 0, 762, 0, 730, 731, 248,
	300, 650, 742, 0, 751, 752, 760, 0, 0, 0,
	249, 250, 0, 0, 754, 755, 766, 768, 728, 251,
	0, 0, 0, 0, 253, 255, 256, 0, 0, 254,
	651, 257, 258, 259,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 412,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:397
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:402
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:403
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:407
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:438
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:444
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:448
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:467
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:473
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:479
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:492
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:496
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:519
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:527
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:533
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:539
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:564
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:576
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:598
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:616
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:645
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:649
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:681
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:689
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:707
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:744
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:748
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:755
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:764
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:784
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:807
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:821
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:828
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:846
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:852
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:879
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:889
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:893
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:899
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:903
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:914
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:935
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:940
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:944
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:957
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:963
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1145
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1195
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1208
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1216
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1226
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1243
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1266
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1275
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1293
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1306
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1319
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.colKeyOpt = colKey
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1340
		{
			yyVAL.literal = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1350
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1355
		{
			yyVAL.indexOptions = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1365
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1394
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1416
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1425
		{
			yyVAL.str = ""
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = yyDollar[2].str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = "key"
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1492
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1524
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 249:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1536
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1581
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.boolean = true
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.boolean = false
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = yyDollar[1].str
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1637
		{
			yyVAL.bytes = []byte("")
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1643
		{
			yyVAL.colName = nil
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1652
		{
			yyVAL.colName = nil
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.alterOptions = nil
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1675
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1685
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1689
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1693
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1697
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1713
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1717
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1723
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1755
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1759
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1766
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 296:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1785
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 300:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1803
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 301:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1816
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 303:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 318:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1859
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1869
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 321:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1875
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 322:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1879
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1903
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 327:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1907
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1912
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1916
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &OtherRead{}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1937
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 342:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1985
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1989
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1993
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 348:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1997
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2001
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2005
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2009
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2014
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2034
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 359:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2042
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2055
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2065
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2078
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2087
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2101
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = "extended "
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = ""
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = "full "
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = ""
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2171
		{
			yyVAL.showFilter = nil
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2175
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2179
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2185
		{
			yyVAL.showFilter = nil
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2189
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2195
		{
			yyVAL.empty = struct{}{}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.empty = struct{}{}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.empty = struct{}{}
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2209
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2213
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.statement = &Begin{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.statement = &Begin{}
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.statement = &Commit{}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.statement = &Rollback{}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2239
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2244
		{
			yyVAL.empty = struct{}{}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.empty = struct{}{}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2249
		{
			yyVAL.empty = struct{}{}
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2251
		{
			yyVAL.empty = struct{}{}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2256
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2267
		{
			yyVAL.explainType = EmptyType
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2271
		{
			yyVAL.explainType = JSONType
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2275
		{
			yyVAL.explainType = TreeType
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.explainType = VitessType
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yyVAL.explainType = TraditionalType
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.explainType = AnalyzeType
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2297
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2301
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = ""
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = ""
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2338
		{
			yyVAL.statement = &OtherRead{}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2342
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2348
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2358
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2374
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.lockType = Read
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yyVAL.lockType = ReadLocal
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.lockType = Write
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2404
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2408
		{
			setAllowComments(yylex, true)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.bytes2 = nil
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2422
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.boolean = true
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.boolean = false
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2436
		{
			yyVAL.boolean = true
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.str = ""
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2445
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = SQLCacheStr
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2454
		{
			yyVAL.boolean = false
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.boolean = true
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2462
		{
			yyVAL.boolean = true
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2467
		{
			yyVAL.selectExprs = nil
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.strs = nil
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2484
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2492
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = SQLCacheStr
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = DistinctStr
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = DistinctStr
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = StraightJoinHint
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2538
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2542
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2546
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2551
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2571
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2575
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2585
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2599
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2615
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 482:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2619
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2624
		{
			yyVAL.columns = nil
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2648
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2661
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2665
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2669
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2681
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2685
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2691
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2693
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2696
		{
			yyVAL.empty = struct{}{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.empty = struct{}{}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2701
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.joinType = NormalJoinType
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2726
		{
			yyVAL.joinType = NormalJoinType
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.joinType = NormalJoinType
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.joinType = StraightJoinType
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.joinType = LeftJoinType
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2746
		{
			yyVAL.joinType = LeftJoinType
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.joinType = RightJoinType
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2754
		{
			yyVAL.joinType = RightJoinType
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2760
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2764
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2778
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2788
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2794
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2799
		{
			yyVAL.indexHints = nil
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2803
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2807
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2811
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2815
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2820
		{
			yyVAL.expr = nil
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2824
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2850
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = ""
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2888
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2892
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2896
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2900
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2904
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2908
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 547:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2912
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 548:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2916
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2920
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2926
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2942
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2946
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2960
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2964
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2972
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2981
		{
			yyVAL.expr = nil
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2999
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3005
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3089
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3093
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3097
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3109
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3117
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3121
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3129
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3151
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3169
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3173
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3177
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3191
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3195
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 611:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3199
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3203
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 613:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3207
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 616:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 617:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 618:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3227
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 619:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3231
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3235
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3239
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3262
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3267
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3272
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3283
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3292
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3296
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3301
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 636:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 637:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3347
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3351
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3355
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3363
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3369
		{
			yyVAL.matchExprOption = NoOption
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3377
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 651:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3381
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3401
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3405
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3409
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3421
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3435
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3439
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3456
		{
			yyVAL.expr = nil
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3460
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = string("")
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3475
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3479
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3485
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3490
		{
			yyVAL.expr = nil
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3500
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3508
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = &NullVal{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3566
		{
			yyVAL.exprs = nil
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3575
		{
			yyVAL.expr = nil
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3579
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3584
		{
			yyVAL.orderBy = nil
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3594
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3609
		{
			yyVAL.orderDirection = AscOrder
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
			yyVAL.orderDirection = AscOrder
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.orderDirection = DescOrder
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3622
		{
			yyVAL.limit = nil
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3626
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3630
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3634
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3639
		{
			yyVAL.indexOptions = nil
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3643
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3647
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3651
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3662
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3666
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3684
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = yyDollar[3].str
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3729
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3733
		{
			yyVAL.str = yyDollar[2].str
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = "cascaded"
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3742
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = yyDollar[3].str
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3761
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3778
		{
			yyVAL.lock = NoLock
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3782
		{
			yyVAL.lock = ForUpdateLock
		}
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3786
		{
			yyVAL.lock = ShareModeLock
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3791
		{
			yyVAL.selectInto = nil
		}
	case 742:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3795
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3803
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3808
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3812
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3821
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.str = " header"
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = ""
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = " manifest on"
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = " manifest off"
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = ""
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = " overwrite on"
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = " overwrite off"
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3857
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = ""
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = ""
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3898
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3907
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3911
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3916
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = " optionally"
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3933
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 773:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3941
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3945
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3949
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3955
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3959
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3967
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3972
		{
			yyVAL.updateExprs = nil
		}
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3976
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3982
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3996
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4008
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4018
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4022
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4038
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4052
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4056
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			yyVAL.bytes = []byte("charset")
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4075
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.expr = &Default{}
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4092
		{
			yyVAL.boolean = false
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4094
		{
			yyVAL.boolean = true
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4097
		{
			yyVAL.boolean = false
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.boolean = true
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4102
		{
			yyVAL.ignore = false
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4104
		{
			yyVAL.ignore = true
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4110
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4116
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4124
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4126
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4130
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4132
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4138
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4143
		{
			yyVAL.str = ""
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4147
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4152
		{
			yyVAL.indexOptions = nil
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4158
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4175
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4181
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4185
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4559
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4568
		{
			decNesting(yylex)
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4573
		{
			skipToEnd(yylex)
		}
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4578
		{
			skipToEnd(yylex)
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4582
		{
			skipToEnd(yylex)
		}
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
