// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const CANCEL = 57553
const RETRY = 57554
const COMPLETE = 57555
const BEGIN = 57556
const START = 57557
const TRANSACTION = 57558
const COMMIT = 57559
const ROLLBACK = 57560
const SAVEPOINT = 57561
const RELEASE = 57562
const WORK = 57563
const BIT = 57564
const TINYINT = 57565
const SMALLINT = 57566
const MEDIUMINT = 57567
const INT = 57568
const INTEGER = 57569
const BIGINT = 57570
const INTNUM = 57571
const REAL = 57572
const DOUBLE = 57573
const FLOAT_TYPE = 57574
const DECIMAL = 57575
const NUMERIC = 57576
const TIME = 57577
const TIMESTAMP = 57578
const DATETIME = 57579
const YEAR = 57580
const CHAR = 57581
const VARCHAR = 57582
const BOOL = 57583
const CHARACTER = 57584
const VARBINARY = 57585
const NCHAR = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const BLOB = 57591
const TINYBLOB = 57592
const MEDIUMBLOB = 57593
const LONGBLOB = 57594
const JSON = 57595
const ENUM = 57596
const GEOMETRY = 57597
const POINT = 57598
const LINESTRING = 57599
const POLYGON = 57600
const GEOMETRYCOLLECTION = 57601
const MULTIPOINT = 57602
const MULTILINESTRING = 57603
const MULTIPOLYGON = 57604
const NULLX = 57605
const AUTO_INCREMENT = 57606
const APPROXNUM = 57607
const SIGNED = 57608
const UNSIGNED = 57609
const ZEROFILL = 57610
const COLLATION = 57611
const DATABASES = 57612
const SCHEMAS = 57613
const TABLES = 57614
const VITESS_METADATA = 57615
const VSCHEMA = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const EXTENDED = 57623
const KEYSPACES = 57624
const VITESS_KEYSPACES = 57625
const VITESS_SHARDS = 57626
const VITESS_TABLETS = 57627
const VITESS_MIGRATIONS = 57628
const CODE = 57629
const PRIVILEGES = 57630
const FUNCTION = 57631
const OPEN = 57632
const TRIGGERS = 57633
const EVENT = 57634
const USER = 57635
const NAMES = 57636
const CHARSET = 57637
const GLOBAL = 57638
const SESSION = 57639
const ISOLATION = 57640
const LEVEL = 57641
const READ = 57642
const WRITE = 57643
const ONLY = 57644
const REPEATABLE = 57645
const COMMITTED = 57646
const UNCOMMITTED = 57647
const SERIALIZABLE = 57648
const CURRENT_TIMESTAMP = 57649
const DATABASE = 57650
const CURRENT_DATE = 57651
const CURRENT_TIME = 57652
const LOCALTIME = 57653
const LOCALTIMESTAMP = 57654
const CURRENT_USER = 57655
const UTC_DATE = 57656
const UTC_TIME = 57657
const UTC_TIMESTAMP = 57658
const REPLACE = 57659
const CONVERT = 57660
const CAST = 57661
const SUBSTR = 57662
const SUBSTRING = 57663
const GROUP_CONCAT = 57664
const SEPARATOR = 57665
const TIMESTAMPADD = 57666
const TIMESTAMPDIFF = 57667
const MATCH = 57668
const AGAINST = 57669
const BOOLEAN = 57670
const LANGUAGE = 57671
const WITH = 57672
const QUERY = 57673
const EXPANSION = 57674
const WITHOUT = 57675
const VALIDATION = 57676
const UNUSED = 57677
const ARRAY = 57678
const CUME_DIST = 57679
const DESCRIPTION = 57680
const DENSE_RANK = 57681
const EMPTY = 57682
const EXCEPT = 57683
const FIRST_VALUE = 57684
const GROUPING = 57685
const GROUPS = 57686
const JSON_TABLE = 57687
const LAG = 57688
const LAST_VALUE = 57689
const LATERAL = 57690
const LEAD = 57691
const MEMBER = 57692
const NTH_VALUE = 57693
const NTILE = 57694
const OF = 57695
const OVER = 57696
const PERCENT_RANK = 57697
const RANK = 57698
const RECURSIVE = 57699
const ROW_NUMBER = 57700
const SYSTEM = 57701
const WINDOW = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const FORMAT = 57759
const TREE = 57760
const VITESS = 57761
const TRADITIONAL = 57762
const LOCAL = 57763
const LOW_PRIORITY = 57764
const NO_WRITE_TO_BINLOG = 57765
const LOGS = 57766
const ERROR = 57767
const GENERAL = 57768
const HOSTS = 57769
const OPTIMIZER_COSTS = 57770
const USER_RESOURCES = 57771
const SLOW = 57772
const CHANNEL = 57773
const RELAY = 57774
const EXPORT = 57775
const AVG_ROW_LENGTH = 57776
const CONNECTION = 57777
const CHECKSUM = 57778
const DELAY_KEY_WRITE = 57779
const ENCRYPTION = 57780
const ENGINE = 57781
const INSERT_METHOD = 57782
const MAX_ROWS = 57783
const MIN_ROWS = 57784
const PACK_KEYS = 57785
const PASSWORD = 57786
const FIXED = 57787
const DYNAMIC = 57788
const COMPRESSED = 57789
const REDUNDANT = 57790
const COMPACT = 57791
const ROW_FORMAT = 57792
const STATS_AUTO_RECALC = 57793
const STATS_PERSISTENT = 57794
const STATS_SAMPLE_PAGES = 57795
const STORAGE = 57796
const MEMORY = 57797
const DISK = 57798

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	164, 934,
	-2, 91,
	-1, 45,
	1, 112,
	474, 112,
	-2, 118,
	-1, 46,
	143, 118,
	259, 118,
	312, 118,
	-2, 326,
	-1, 53,
	34, 472,
	165, 472,
	177, 472,
	210, 486,
	211, 486,
	-2, 474,
	-1, 58,
	167, 496,
	-2, 494,
	-1, 84,
	56, 564,
	-2, 572,
	-1, 109,
	1, 113,
	474, 113,
	-2, 118,
	-1, 119,
	170, 231,
	171, 231,
	-2, 320,
	-1, 138,
	143, 118,
	259, 118,
	312, 118,
	-2, 335,
	-1, 580,
	150, 955,
	-2, 951,
	-1, 581,
	150, 956,
	-2, 952,
	-1, 600,
	56, 565,
	-2, 577,
	-1, 601,
	56, 566,
	-2, 578,
	-1, 622,
	118, 1297,
	-2, 84,
	-1, 623,
	118, 1179,
	-2, 85,
	-1, 629,
	118, 1229,
	-2, 928,
	-1, 766,
	118, 1116,
	-2, 925,
	-1, 800,
	176, 38,
	181, 38,
	-2, 242,
	-1, 881,
	1, 373,
	474, 373,
	-2, 118,
	-1, 1120,
	1, 269,
	474, 269,
	-2, 118,
	-1, 1198,
	170, 231,
	171, 231,
	-2, 320,
	-1, 1207,
	176, 39,
	181, 39,
	-2, 243,
	-1, 1420,
	150, 958,
	-2, 954,
	-1, 1512,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1533,
	1, 270,
	474, 270,
	-2, 118,
	-1, 1945,
	5, 821,
	18, 821,
	20, 821,
	32, 821,
	83, 821,
	-2, 604,
	-1, 2157,
	46, 896,
	-2, 890,
}

const yyPrivate = 57344

const yyLast = 28215

var yyAct = [...]int{
	580, 2242, 2231, 2186, 1858, 2170, 1997, 2208, 2108, 1713,
	1746, 2158, 2086, 552, 83, 3, 1925, 1827, 1926, 1994,
	1457, 538, 1747, 1922, 1021, 1563, 1548, 1597, 940, 1831,
	593, 1075, 1530, 521, 893, 1183, 1568, 770, 1811, 1733,
	1812, 1937, 1884, 1509, 518, 1673, 1810, 1320, 1647, 179,
	1595, 133, 191, 1570, 486, 191, 1205, 147, 1804, 1105,
	502, 1414, 191, 1068, 795, 81, 627, 1491, 1112, 1498,
	191, 602, 920, 1073, 1459, 523, 1078, 1096, 1098, 587,
	1060, 1406, 1440, 1383, 525, 957, 808, 777, 1177, 33,
	514, 778, 502, 1102, 1182, 502, 191, 502, 1095, 1212,
	782, 801, 796, 774, 798, 1295, 1474, 1111, 797, 1085,
	1514, 830, 79, 938, 1325, 887, 150, 1559, 1223, 1109,
	624, 110, 116, 1197, 111, 117, 509, 1180, 1034, 872,
	8, 7, 6, 1850, 1849, 178, 78, 84, 1626, 2110,
	1037, 1872, 1873, 1549, 1372, 1371, 180, 181, 182, 1370,
	1369, 1368, 1367, 1282, 512, 2200, 513, 1711, 2154, 771,
	1971, 1360, 112, 609, 613, 1454, 1455, 2065, 2132, 588,
	118, 2131, 834, 191, 86, 87, 88, 89, 90, 91,
	2081, 833, 2241, 2082, 191, 2248, 886, 2205, 1663, 191,
	510, 1184, 80, 2181, 2234, 2204, 835, 461, 1998, 1614,
	1901, 565, 611, 571, 572, 569, 570, 812, 568, 567,
	566, 621, 1573, 2029, 787, 1712, 2180, 1633, 573, 574,
	1417, 1632, 1952, 1953, 1951, 811, 112, 958, 1113, 177,
	1114, 789, 1871, 843, 788, 628, 1777, 1661, 1524, 1776,
	936, 786, 1778, 849, 836, 837, 838, 832, 958, 927,
	1515, 929, 1525, 1526, 35, 791, 790, 72, 39, 40,
	846, 847, 913, 850, 851, 852, 853, 906, 515, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 912, 490, 171, 1456, 926, 928,
	900, 901, 1572, 968, 848, 112, 584, 2144, 983, 982,
	992, 993, 985, 986, 987, 988, 989, 990, 991, 984,
	583, 113, 994, 135, 968, 107, 172, 1794, 107, 1542,
	185, 186, 155, 935, 2183, 889, 1361, 1362, 1363, 71,
	1860, 2020, 2018, 500, 104, 180, 181, 182, 489, 1443,
	898, 1359, 504, 498, 899, 900, 901, 1306, 1304, 1305,
	1596, 586, 1832, 145, 878, 1854, 914, 1629, 134, 490,
	1272, 907, 1308, 1855, 1309, 1301, 1310, 1296, 2233, 933,
	873, 490, 956, 917, 918, 105, 152, 919, 153, 176,
	2201, 915, 916, 122, 123, 144, 143, 170, 964, 882,
	107, 925, 99, 1863, 924, 930, 1641, 102, 855, 854,
	101, 100, 1273, 1300, 1274, 1862, 1861, 1298, 2128, 964,
	923, 2076, 489, 1598, 1492, 819, 817, 828, 827, 1302,
	826, 825, 824, 596, 489, 823, 1791, 1786, 822, 821,
	816, 792, 1191, 829, 1970, 139, 120, 146, 127, 119,
	1515, 140, 141, 175, 1299, 2077, 156, 105, 775, 2249,
	910, 775, 803, 804, 810, 773, 161, 128, 2220, 1646,
	2246, 191, 109, 1631, 1574, 775, 1211, 1210, 888, 1181,
	1787, 131, 129, 124, 125, 126, 130, 106, 810, 931,
	106, 121, 615, 1864, 1620, 1313, 944, 502, 502, 502,
	132, 2179, 1789, 839, 879, 1784, 1820, 896, 1628, 902,
	903, 904, 905, 932, 810, 502, 502, 1785, 820, 818,
	490, 845, 1910, 810, 810, 1662, 2145, 810, 1909, 1908,
	937, 950, 785, 1842, 963, 960, 961, 962, 967, 969,
	966, 784, 965, 783, 2171, 1714, 1716, 1649, 2184, 959,
	885, 2165, 1648, 781, 460, 963, 960, 961, 962, 967,
	969, 966, 106, 965, 183, 934, 1649, 1616, 1006, 1007,
	959, 1648, 148, 489, 2049, 1885, 1640, 1792, 1790, 1639,
	1950, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 909, 73, 1692, 191, 1284, 1283, 1285, 1286, 1287,
	809, 1689, 1738, 911, 1681, 1606, 813, 803, 1520, 1531,
	1089, 941, 942, 897, 1066, 1004, 814, 877, 2244, 1887,
	1019, 2245, 502, 2243, 809, 191, 142, 191, 191, 1065,
	502, 803, 806, 807, 815, 775, 502, 891, 136, 800,
	804, 137, 1715, 984, 994, 1773, 994, 953, 951, 952,
	809, 881, 1470, 1022, 895, 94, 813, 803, 624, 809,
	809, 921, 974, 809, 1390, 844, 814, 803, 806, 807,
	1094, 775, 1061, 973, 971, 800, 804, 1355, 1388, 1389,
	1387, 1889, 1326, 1893, 1079, 1888, 2136, 1886, 1788, 831,
	974, 1615, 1891, 1472, 799, 1935, 971, 874, 1297, 875,
	95, 1890, 876, 1115, 1036, 1039, 1041, 1043, 1044, 1046,
	1048, 1049, 974, 954, 1892, 1894, 880, 1040, 1042, 1058,
	1045, 1047, 1903, 1050, 1441, 1441, 1699, 1378, 1380, 1381,
	975, 1580, 1006, 1007, 1613, 2235, 1611, 819, 1067, 1379,
	1006, 1007, 149, 154, 151, 157, 158, 159, 160, 162,
	163, 164, 165, 180, 181, 182, 1471, 1408, 166, 167,
	168, 169, 817, 2236, 2225, 1955, 515, 894, 180, 181,
	182, 1687, 1799, 628, 174, 1032, 2250, 922, 1608, 1686,
	191, 972, 973, 971, 1173, 987, 988, 989, 990, 991,
	984, 1809, 2226, 994, 1185, 1186, 1187, 1608, 1327, 974,
	1475, 1476, 1612, 1082, 972, 973, 971, 1071, 1074, 502,
	2032, 1207, 71, 1409, 1291, 972, 973, 971, 2064, 1216,
	2229, 1610, 974, 1220, 1386, 2063, 502, 502, 1800, 502,
	1077, 502, 502, 974, 502, 502, 502, 502, 502, 502,
	1666, 1667, 1668, 1976, 2251, 2228, 1203, 1808, 1807, 502,
	1577, 1292, 1110, 191, 1256, 1277, 1196, 983, 982, 992,
	993, 985, 986, 987, 988, 989, 990, 991, 984, 1269,
	1276, 994, 780, 1290, 1275, 1215, 1267, 180, 181, 182,
	502, 1780, 972, 973, 971, 1261, 1253, 1258, 191, 985,
	986, 987, 988, 989, 990, 991, 984, 1217, 191, 994,
	974, 1688, 191, 1213, 1213, 541, 540, 543, 544, 545,
	546, 1912, 1189, 1190, 542, 1257, 547, 1214, 191, 1172,
	1179, 1232, 1251, 1252, 1188, 191, 1194, 1193, 2227, 1192,
	1289, 2216, 191, 191, 191, 191, 191, 191, 191, 191,
	191, 502, 502, 502, 619, 1225, 1206, 1226, 1279, 1228,
	1230, 1330, 2214, 1234, 1236, 1238, 1240, 1242, 1334, 1913,
	1336, 1337, 1338, 1339, 2099, 1341, 597, 191, 1322, 2061,
	1259, 1260, 972, 973, 971, 1857, 1265, 1266, 614, 1356,
	1905, 1328, 1329, 2037, 1958, 972, 973, 971, 2126, 1288,
	974, 1914, 1817, 1254, 1805, 1333, 180, 181, 182, 1657,
	1590, 1384, 1340, 974, 1624, 1407, 2125, 1278, 112, 1623,
	1323, 1314, 1280, 789, 1410, 1319, 788, 982, 992, 993,
	985, 986, 987, 988, 989, 990, 991, 984, 502, 1268,
	994, 1382, 1264, 1332, 1391, 1392, 1393, 1394, 1395, 1396,
	1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1263,
	1411, 1412, 1262, 1064, 1351, 1352, 1353, 1996, 1418, 1834,
	1366, 1819, 502, 502, 1424, 972, 973, 971, 616, 617,
	1983, 2219, 1385, 191, 180, 181, 182, 1419, 1588, 1734,
	180, 181, 182, 974, 1270, 1983, 2177, 502, 180, 181,
	182, 1983, 2166, 1444, 191, 1923, 1420, 502, 1464, 1983,
	597, 191, 80, 191, 1934, 1022, 1465, 1767, 1324, 1983,
	2134, 191, 191, 1429, 1432, 1515, 1477, 1539, 502, 1442,
	1516, 502, 2079, 597, 1484, 1510, 1448, 1449, 1418, 1608,
	597, 1934, 502, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 1421, 82, 994, 624, 1489, 1495, 624,
	2047, 597, 1983, 1988, 1968, 1967, 1964, 1965, 1964, 1963,
	35, 1485, 1483, 597, 1515, 1851, 1420, 1176, 1836, 1535,
	1829, 1830, 1550, 1551, 1552, 1495, 597, 970, 597, 2169,
	597, 1516, 1517, 1373, 1374, 1375, 1376, 502, 1534, 1609,
	1519, 191, 2044, 35, 1483, 502, 1538, 1176, 1175, 1586,
	1587, 1589, 1121, 1120, 1734, 1513, 1487, 1565, 2115, 970,
	1483, 1494, 2135, 502, 35, 1983, 1966, 1495, 1741, 502,
	1523, 1571, 1704, 1216, 1518, 1216, 1522, 1543, 1703, 1544,
	1545, 1546, 1547, 1607, 1537, 71, 71, 1521, 1427, 1428,
	1536, 1742, 590, 1517, 1608, 1555, 1556, 1557, 1558, 1483,
	1594, 1515, 1608, 2066, 1425, 1426, 1591, 1473, 1431, 1434,
	1435, 628, 1495, 502, 628, 1407, 1452, 1364, 71, 2088,
	1407, 1407, 1312, 1934, 1107, 794, 515, 793, 1575, 1604,
	1995, 1605, 2055, 1247, 1447, 581, 1566, 1450, 1451, 71,
	1583, 1584, 1585, 1178, 1576, 1578, 1561, 1562, 812, 1564,
	1617, 2067, 2068, 2069, 2070, 191, 1600, 1856, 1213, 191,
	191, 191, 191, 191, 1618, 1601, 811, 71, 1599, 1560,
	1566, 1603, 1554, 191, 191, 191, 191, 1553, 1529, 1294,
	1650, 1248, 1249, 1250, 1813, 1208, 191, 192, 1204, 1174,
	192, 96, 1814, 191, 1244, 503, 1619, 192, 177, 2071,
	2072, 1621, 1622, 1938, 1939, 192, 1500, 1503, 1504, 1505,
	1501, 1859, 1502, 1506, 2089, 1184, 1938, 1939, 191, 502,
	1422, 1423, 2238, 1652, 1653, 597, 2232, 503, 1655, 1814,
	503, 192, 503, 1941, 1923, 1656, 1825, 1567, 1824, 1245,
	1246, 1823, 1581, 1357, 1315, 1944, 1943, 1755, 1627, 983,
	982, 992, 993, 985, 986, 987, 988, 989, 990, 991,
	984, 1384, 1758, 994, 1756, 1754, 1466, 1759, 1644, 1757,
	2222, 983, 982, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 1076, 2203, 994, 2031, 1760, 1915, 1504,
	1505, 2048, 1723, 1670, 1671, 1672, 1500, 1503, 1504, 1505,
	1501, 1986, 1502, 1506, 1732, 2159, 2161, 1731, 192, 1674,
	1660, 607, 603, 191, 2162, 1683, 103, 2188, 2224, 192,
	2207, 191, 98, 2209, 192, 2187, 2191, 604, 2156, 1311,
	582, 1669, 1385, 983, 982, 992, 993, 985, 986, 987,
	988, 989, 990, 991, 984, 191, 1818, 994, 841, 840,
	1080, 1081, 606, 1069, 605, 1721, 191, 191, 191, 191,
	191, 1682, 1437, 1722, 173, 1070, 1743, 187, 191, 2007,
	1813, 588, 191, 184, 1870, 191, 191, 1438, 943, 191,
	191, 191, 1698, 1844, 607, 603, 1765, 1843, 1736, 1720,
	1739, 1061, 1779, 1710, 113, 1718, 2113, 1960, 1959, 1602,
	604, 1727, 1222, 1221, 1209, 2042, 1468, 1726, 1475, 1476,
	1798, 1821, 1318, 2127, 2083, 1508, 1307, 1737, 1768, 1665,
	1735, 594, 1770, 600, 601, 606, 2215, 605, 591, 592,
	1748, 1795, 1796, 2213, 1750, 1751, 1761, 1753, 2212, 1771,
	1766, 1797, 191, 1801, 1802, 1803, 2026, 1322, 1730, 2192,
	2190, 1782, 1774, 502, 1749, 2041, 1729, 1752, 1982, 502,
	1783, 1592, 502, 595, 1216, 1571, 82, 2040, 1918, 502,
	1734, 2240, 2239, 1806, 1693, 1690, 1090, 1083, 2240, 1837,
	2163, 1848, 1957, 1815, 1469, 590, 80, 85, 77, 191,
	1, 473, 1453, 1059, 485, 1839, 1678, 1679, 2230, 1281,
	1271, 1999, 2085, 1196, 1700, 1989, 1569, 191, 1846, 802,
	138, 1532, 1847, 1533, 1419, 2173, 93, 1696, 768, 92,
	1838, 805, 908, 1593, 2080, 1793, 1541, 1127, 1845, 1125,
	1126, 1124, 1833, 1420, 1724, 1725, 1074, 1129, 1128, 1123,
	1358, 499, 502, 1507, 1816, 1116, 1084, 842, 1407, 463,
	1969, 1354, 1866, 1865, 1625, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 469, 1002, 994,
	1881, 1728, 1775, 625, 1882, 618, 1874, 1929, 502, 1876,
	1877, 2185, 2155, 2157, 1868, 2109, 2160, 1869, 1902, 191,
	2153, 1896, 2223, 2206, 1897, 1898, 192, 1899, 1900, 502,
	1540, 1467, 1880, 1072, 2039, 502, 502, 1883, 1906, 1907,
	1676, 1917, 1924, 1697, 1677, 1031, 1927, 1439, 1099, 524,
	1463, 1377, 503, 503, 503, 1684, 1685, 1881, 191, 1895,
	1921, 1691, 539, 536, 1694, 1695, 537, 1478, 1740, 976,
	503, 503, 1701, 522, 1702, 516, 1933, 1705, 1706, 1707,
	1708, 1709, 1091, 1499, 1942, 1497, 1496, 1316, 1103, 1940,
	1936, 1097, 1482, 1719, 1630, 1853, 1946, 955, 1948, 599,
	1949, 1947, 511, 97, 1436, 2143, 1664, 1748, 2028, 1977,
	598, 191, 61, 38, 191, 191, 191, 506, 1961, 1962,
	502, 1956, 2199, 946, 608, 32, 1911, 31, 30, 1954,
	29, 28, 23, 191, 22, 21, 20, 19, 25, 1763,
	1764, 1973, 1972, 18, 17, 16, 108, 48, 45, 192,
	2000, 502, 502, 502, 1932, 191, 43, 1984, 115, 1990,
	114, 46, 1571, 1987, 2008, 1993, 42, 883, 1992, 27,
	26, 15, 14, 13, 12, 11, 10, 503, 9, 5,
	192, 4, 192, 192, 949, 503, 24, 1020, 2, 0,
	0, 503, 1904, 2005, 2006, 0, 0, 0, 1985, 0,
	0, 0, 0, 2011, 0, 2016, 0, 0, 0, 0,
	2009, 0, 0, 0, 0, 1974, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1919, 0, 0,
	2038, 0, 0, 0, 0, 0, 0, 0, 2043, 0,
	0, 0, 0, 0, 0, 0, 0, 2052, 0, 0,
	0, 0, 0, 0, 0, 2051, 0, 0, 0, 0,
	0, 0, 0, 0, 2013, 2014, 0, 2015, 2057, 2059,
	2017, 0, 2019, 502, 502, 0, 0, 2058, 0, 0,
	2060, 0, 2062, 0, 0, 0, 502, 0, 2073, 502,
	2074, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1748, 0, 0, 2084, 0, 2092, 0, 0, 1878, 1879,
	0, 0, 0, 0, 0, 0, 0, 2087, 0, 0,
	0, 0, 0, 0, 502, 502, 502, 191, 0, 0,
	0, 2091, 0, 0, 0, 192, 0, 0, 502, 0,
	502, 2102, 2104, 2105, 0, 0, 502, 2106, 1927, 2098,
	0, 2116, 1927, 2114, 2107, 2118, 2112, 0, 2093, 2094,
	2095, 2096, 2097, 2121, 503, 2090, 2100, 2101, 191, 0,
	0, 0, 2120, 0, 1930, 0, 0, 0, 2122, 502,
	191, 503, 503, 2123, 503, 2124, 503, 503, 2133, 503,
	503, 503, 503, 503, 503, 1945, 2137, 2130, 2030, 0,
	0, 0, 0, 0, 503, 0, 2152, 0, 192, 0,
	0, 0, 0, 551, 0, 0, 0, 0, 0, 1927,
	0, 515, 2164, 0, 0, 0, 502, 502, 2053, 0,
	0, 2054, 2167, 0, 2056, 503, 0, 0, 2172, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 2182, 192, 2087, 2174, 502, 192, 0, 2189,
	502, 0, 0, 2195, 2193, 190, 0, 0, 497, 0,
	0, 0, 2202, 192, 0, 190, 0, 2198, 0, 2211,
	192, 0, 2210, 190, 0, 0, 0, 192, 192, 192,
	192, 192, 192, 192, 192, 192, 503, 503, 503, 2221,
	612, 612, 171, 2196, 0, 0, 0, 0, 0, 190,
	2010, 0, 0, 0, 2012, 0, 0, 0, 0, 0,
	0, 0, 192, 2237, 0, 2021, 2022, 113, 0, 1748,
	0, 0, 2247, 2111, 515, 0, 0, 0, 155, 0,
	171, 2036, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 0, 0, 0, 0, 0, 0, 2045, 2046,
	0, 0, 2050, 0, 0, 113, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 1781,
	0, 0, 0, 503, 0, 0, 190, 0, 0, 0,
	0, 0, 152, 0, 153, 0, 0, 190, 0, 0,
	0, 0, 190, 170, 0, 0, 0, 145, 0, 0,
	0, 0, 134, 0, 0, 0, 0, 503, 503, 2078,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	152, 0, 153, 0, 0, 0, 0, 1199, 1200, 144,
	143, 170, 503, 0, 0, 0, 2025, 0, 0, 192,
	0, 0, 503, 0, 0, 0, 192, 0, 192, 0,
	0, 0, 156, 2103, 0, 0, 192, 192, 0, 0,
	0, 0, 161, 503, 0, 0, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 503, 0, 139,
	1201, 146, 0, 1198, 0, 140, 141, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 2024,
	0, 0, 0, 2139, 2140, 2141, 2142, 0, 2146, 0,
	2147, 2148, 2149, 0, 2150, 2151, 0, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 192, 0, 0, 0,
	503, 171, 0, 0, 550, 983, 982, 992, 993, 985,
	986, 987, 988, 989, 990, 991, 984, 0, 503, 994,
	0, 0, 0, 2178, 503, 0, 113, 0, 148, 0,
	978, 0, 981, 0, 0, 0, 0, 155, 995, 996,
	997, 998, 999, 1000, 1001, 0, 979, 980, 977, 983,
	982, 992, 993, 985, 986, 987, 988, 989, 990, 991,
	984, 0, 0, 994, 501, 0, 148, 2023, 503, 0,
	0, 0, 0, 0, 0, 0, 2217, 2218, 983, 982,
	992, 993, 985, 986, 987, 988, 989, 990, 991, 984,
	0, 152, 994, 153, 0, 0, 626, 0, 0, 772,
	0, 779, 170, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 192, 192, 192, 192, 192, 0,
	142, 0, 0, 0, 190, 0, 0, 0, 192, 192,
	192, 192, 136, 0, 0, 137, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 192, 983,
	982, 992, 993, 985, 986, 987, 988, 989, 990, 991,
	984, 156, 0, 994, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 192, 503, 0, 983, 982, 992, 993,
	985, 986, 987, 988, 989, 990, 991, 984, 0, 0,
	994, 0, 0, 0, 0, 0, 0, 0, 149, 154,
	151, 157, 158, 159, 160, 162, 163, 164, 165, 0,
	0, 0, 0, 0, 166, 167, 168, 169, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 154, 151, 157,
	158, 159, 160, 162, 163, 164, 165, 190, 0, 0,
	0, 0, 166, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 1875, 612, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 0, 0, 192, 148, 190, 0,
	190, 1106, 983, 982, 992, 993, 985, 986, 987, 988,
	989, 990, 991, 984, 0, 0, 994, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 192, 192, 192, 192, 0, 0, 0, 0,
	0, 1675, 0, 192, 0, 0, 0, 192, 0, 171,
	192, 192, 0, 0, 192, 192, 192, 0, 0, 0,
	1195, 983, 982, 992, 993, 985, 986, 987, 988, 989,
	990, 991, 984, 0, 113, 994, 135, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 145, 192, 0, 0,
	0, 134, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 503, 0, 0, 503, 0, 152,
	0, 153, 0, 0, 503, 0, 1199, 1200, 144, 143,
	170, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 149, 154, 151,
	157, 158, 159, 160, 162, 163, 164, 165, 0, 0,
	1062, 0, 192, 166, 167, 168, 169, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 139, 1201,
	146, 0, 1198, 0, 140, 141, 0, 0, 0, 156,
	0, 626, 626, 626, 0, 0, 0, 503, 0, 161,
	1219, 1219, 0, 0, 0, 0, 190, 0, 0, 945,
	947, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	585, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 503, 1321, 776, 0, 0, 0,
	503, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 192, 0, 1342, 1343, 190, 190, 190,
	190, 190, 190, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1087, 0, 0, 0,
	190, 0, 0, 0, 626, 0, 0, 0, 0, 0,
	1117, 0, 0, 871, 0, 0, 192, 0, 0, 192,
	192, 192, 0, 0, 884, 503, 0, 0, 0, 890,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 136, 0, 0, 137, 0, 503, 503, 503, 0,
	192, 0, 612, 1321, 0, 0, 0, 612, 612, 0,
	0, 612, 612, 612, 0, 0, 0, 1219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 553, 34, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 612, 612,
	612, 612, 0, 0, 0, 0, 1461, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 34, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 1321, 190, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 190, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 154, 151, 157, 158,
	159, 160, 162, 163, 164, 165, 0, 589, 0, 0,
	0, 166, 167, 168, 169, 0, 0, 0, 503, 503,
	0, 0, 0, 772, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 503, 0, 1218, 0, 0, 0,
	1224, 1224, 0, 1224, 0, 1224, 1224, 0, 1233, 1224,
	1224, 1224, 1224, 1224, 0, 0, 0, 0, 0, 0,
	0, 1218, 1218, 772, 190, 0, 0, 0, 0, 503,
	503, 503, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 0, 503, 0, 0, 0, 0,
	0, 503, 0, 0, 1293, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 892, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 626, 626, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 503, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 190, 190, 190, 190, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 190, 190, 190,
	0, 503, 0, 0, 0, 503, 0, 0, 0, 190,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 1413, 0, 626, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1445, 1446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 0, 0, 1104, 612,
	612, 1479, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1087, 0, 0, 626, 0, 0, 0, 0, 0,
	612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 626, 0, 0, 626, 190, 0, 0, 0,
	0, 0, 0, 0, 1461, 0, 772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 612, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1219, 190,
	190, 190, 190, 190, 0, 0, 0, 0, 0, 0,
	0, 1762, 0, 0, 0, 190, 0, 0, 190, 190,
	0, 779, 190, 1772, 1321, 0, 0, 0, 0, 1582,
	0, 0, 0, 0, 939, 939, 939, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 0, 0,
	0, 0, 0, 779, 34, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1003, 1005, 0,
	1122, 0, 0, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 772, 1018, 0,
	1219, 0, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1321, 1033, 1035, 1038, 1038, 1038, 1035, 1038, 1038, 1035,
	1038, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 0, 0,
	0, 0, 190, 1063, 0, 0, 478, 34, 0, 0,
	0, 0, 0, 1255, 0, 477, 0, 0, 0, 0,
	190, 0, 0, 0, 0, 0, 475, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 612, 0, 0, 0, 1317, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 0, 0, 1659, 484, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 1335, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 1345, 1346, 1347, 1348, 1349,
	1350, 0, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 0, 1144, 0, 0, 0, 462, 464,
	465, 0, 481, 483, 491, 0, 0, 0, 479, 480,
	492, 466, 467, 496, 495, 482, 0, 471, 468, 470,
	476, 0, 0, 0, 489, 474, 493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 0, 0, 190, 190, 190,
	0, 0, 0, 0, 0, 0, 1219, 0, 0, 1218,
	0, 0, 0, 0, 0, 0, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1486, 0, 0, 1132, 0, 0,
	0, 1490, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 1512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 1145, 0, 0, 0, 0, 0, 1828, 1219, 0,
	0, 1218, 0, 1835, 0, 0, 1828, 0, 487, 0,
	0, 626, 0, 1840, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 939, 939,
	939, 1579, 1158, 1161, 1162, 1163, 1164, 1165, 1166, 0,
	1167, 1168, 1169, 1170, 1171, 1146, 1147, 1148, 1149, 1130,
	1131, 1159, 0, 1133, 0, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1150, 1151, 1152, 1153, 1154,
	1155, 1156, 1157, 0, 0, 0, 626, 0, 0, 0,
	0, 35, 36, 37, 72, 39, 40, 0, 0, 0,
	1461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 76, 0, 0, 0, 0, 41, 67, 68, 0,
	65, 69, 1224, 0, 0, 0, 0, 66, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 0, 626, 0, 0, 1218, 0, 1160, 1931,
	1224, 0, 0, 190, 0, 1104, 54, 0, 0, 1634,
	1635, 1636, 1637, 1638, 0, 0, 71, 0, 0, 0,
	0, 0, 0, 1642, 1643, 1104, 1645, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1651, 0, 0, 0,
	0, 0, 0, 1654, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 1219, 0, 0,
	0, 0, 0, 0, 772, 0, 0, 1218, 44, 47,
	50, 49, 52, 0, 64, 0, 0, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2001, 2002, 2003, 0, 0,
	53, 75, 74, 0, 0, 62, 63, 51, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 56, 0, 57,
	58, 59, 60, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1218,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 2075, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 626, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 1828,
	1828, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2117, 0, 2119, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1680, 0, 0, 589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	626, 626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1717, 0, 1218, 0,
	2194, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1916,
	0, 0, 1100, 0, 0, 0, 0, 0, 0, 1744,
	1745, 0, 0, 1100, 1100, 1100, 1100, 1100, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1511,
	0, 0, 1100, 0, 0, 0, 1100, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 0, 0, 1979, 1980, 1981, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1841, 0, 0,
	0, 0, 0, 0, 0, 2004, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1928, 0, 34, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1100, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2027,
	0, 0, 0, 0, 0, 0, 2033, 2034, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1928, 0, 34, 0, 1928, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 34, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1928, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 750, 737, 34, 2168, 686, 753, 657,
	675, 762, 677, 680, 720, 637, 699, 336, 672, 0,
	661, 633, 668, 634, 659, 688, 246, 692, 656, 739,
	702, 752, 294, 0, 639, 662, 350, 722, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 759, 298, 709, 0, 397, 321, 0, 0,
	0, 690, 742, 697, 733, 685, 721, 646, 708, 754,
	673, 717, 755, 284, 230, 198, 333, 398, 260, 0,
	0, 0, 180, 181, 182, 0, 2175, 2176, 0, 0,
	0, 0, 0, 221, 0, 228, 714, 749, 670, 716,
	242, 282, 248, 241, 413, 719, 765, 632, 711, 0,
	635, 638, 761, 745, 665, 666, 0, 0, 0, 0,
	0, 0, 0, 689, 698, 730, 683, 0, 0, 0,
	0, 0, 0, 0, 0, 663, 0, 707, 0, 0,
	0, 642, 636, 0, 0, 0, 0, 687, 0, 0,
	0, 645, 0, 664, 731, 0, 630, 268, 640, 322,
	0, 735, 744, 684, 444, 748, 682, 681, 751, 726,
	643, 741, 676, 293, 641, 290, 194, 209, 0, 674,
	332, 371, 377, 740, 660, 669, 233, 667, 375, 346,
	430, 217, 258, 368, 351, 373, 706, 724, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 655, 736, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 728, 764, 345, 376, 223,
	432, 396, 650, 654, 648, 649, 700, 701, 651, 756,
	757, 758, 732, 644, 0, 652, 653, 0, 738, 746,
	747, 705, 193, 206, 296, 760, 365, 261, 457, 439,
	435, 631, 647, 239, 658, 0, 0, 671, 678, 679,
	691, 693, 694, 695, 696, 704, 712, 713, 715, 723,
	725, 727, 729, 734, 743, 763, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 703, 710, 306,
	255, 272, 281, 718, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 750, 737, 0, 0, 686, 753, 657, 675,
	762, 677, 680, 720, 637, 699, 336, 672, 0, 661,
	633, 668, 634, 659, 688, 246, 692, 656, 739, 702,
	752, 294, 0, 639, 662, 350, 722, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 759, 298, 709, 0, 397, 321, 0, 0, 0,
	690, 742, 697, 733, 685, 721, 646, 708, 754, 673,
	717, 755, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 714, 749, 670, 716, 242,
	282, 248, 241, 413, 719, 765, 632, 711, 0, 635,
	638, 761, 745, 665, 666, 0, 0, 0, 0, 0,
	0, 0, 689, 698, 730, 683, 0, 0, 0, 0,
	0, 0, 1920, 0, 663, 0, 707, 0, 0, 0,
	642, 636, 0, 0, 0, 0, 687, 0, 0, 0,
	645, 0, 664, 731, 0, 630, 268, 640, 322, 0,
	735, 744, 684, 444, 748, 682, 681, 751, 726, 643,
	741, 676, 293, 641, 290, 194, 209, 0, 674, 332,
	371, 377, 740, 660, 669, 233, 667, 375, 346, 430,
	217, 258, 368, 351, 373, 706, 724, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 655, 736, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 728, 764, 345, 376, 223, 432,
	396, 650, 654, 648, 649, 700, 701, 651, 756, 757,
	758, 732, 644, 0, 652, 653, 0, 738, 746, 747,
	705, 193, 206, 296, 760, 365, 261, 457, 439, 435,
	631, 647, 239, 658, 0, 0, 671, 678, 679, 691,
	693, 694, 695, 696, 704, 712, 713, 715, 723, 725,
	727, 729, 734, 743, 763, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 703, 710, 306, 255,
	272, 281, 718, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 750, 737, 0, 0, 686, 753, 657, 675, 762,
	677, 680, 720, 637, 699, 336, 672, 0, 661, 633,
	668, 634, 659, 688, 246, 692, 656, 739, 702, 752,
	294, 0, 639, 662, 350, 722, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	759, 298, 709, 0, 397, 321, 0, 0, 0, 690,
	742, 697, 733, 685, 721, 646, 708, 754, 673, 717,
	755, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 714, 749, 670, 716, 242, 282,
	248, 241, 413, 719, 765, 632, 711, 0, 635, 638,
	761, 745, 665, 666, 0, 0, 0, 0, 0, 0,
	0, 689, 698, 730, 683, 0, 0, 0, 0, 0,
	0, 1773, 0, 663, 0, 707, 0, 0, 0, 642,
	636, 0, 0, 0, 0, 687, 0, 0, 0, 645,
	0, 664, 731, 0, 630, 268, 640, 322, 0, 735,
	744, 684, 444, 748, 682, 681, 751, 726, 643, 741,
	676, 293, 641, 290, 194, 209, 0, 674, 332, 371,
	377, 740, 660, 669, 233, 667, 375, 346, 430, 217,
	258, 368, 351, 373, 706, 724, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 655, 736, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 728, 764, 345, 376, 223, 432, 396,
	650, 654, 648, 649, 700, 701, 651, 756, 757, 758,
	732, 644, 0, 652, 653, 0, 738, 746, 747, 705,
	193, 206, 296, 760, 365, 261, 457, 439, 435, 631,
	647, 239, 658, 0, 0, 671, 678, 679, 691, 693,
	694, 695, 696, 704, 712, 713, 715, 723, 725, 727,
	729, 734, 743, 763, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 703, 710, 306, 255, 272,
	281, 718, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	750, 737, 0, 0, 686, 753, 657, 675, 762, 677,
	680, 720, 637, 699, 336, 672, 0, 661, 633, 668,
	634, 659, 688, 246, 692, 656, 739, 702, 752, 294,
	0, 639, 662, 350, 722, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 759,
	298, 709, 0, 397, 321, 0, 0, 0, 690, 742,
	697, 733, 685, 721, 646, 708, 754, 673, 717, 755,
	284, 230, 198, 333, 398, 260, 0, 0, 0, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 714, 749, 670, 716, 242, 282, 248,
	241, 413, 719, 765, 632, 711, 0, 635, 638, 761,
	745, 665, 666, 0, 0, 0, 0, 0, 0, 0,
	689, 698, 730, 683, 0, 0, 0, 0, 0, 0,
	1488, 0, 663, 0, 707, 0, 0, 0, 642, 636,
	0, 0, 0, 0, 687, 0, 0, 0, 645, 0,
	664, 731, 0, 630, 268, 640, 322, 0, 735, 744,
	684, 444, 748, 682, 681, 751, 726, 643, 741, 676,
	293, 641, 290, 194, 209, 0, 674, 332, 371, 377,
	740, 660, 669, 233, 667, 375, 346, 430, 217, 258,
	368, 351, 373, 706, 724, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 655, 736, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 728, 764, 345, 376, 223, 432, 396, 650,
	654, 648, 649, 700, 701, 651, 756, 757, 758, 732,
	644, 0, 652, 653, 0, 738, 746, 747, 705, 193,
	206, 296, 760, 365, 261, 457, 439, 435, 631, 647,
	239, 658, 0, 0, 671, 678, 679, 691, 693, 694,
	695, 696, 704, 712, 713, 715, 723, 725, 727, 729,
	734, 743, 763, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 703, 710, 306, 255, 272, 281,
	718, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 750,
	737, 0, 0, 686, 753, 657, 675, 762, 677, 680,
	720, 637, 699, 336, 672, 0, 661, 633, 668, 634,
	659, 688, 246, 692, 656, 739, 702, 752, 294, 0,
	639, 662, 350, 722, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 759, 298,
	709, 0, 397, 321, 0, 0, 0, 690, 742, 697,
	733, 685, 721, 646, 708, 754, 673, 717, 755, 284,
	230, 198, 333, 398, 260, 71, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 714, 749, 670, 716, 242, 282, 248, 241,
	413, 719, 765, 632, 711, 0, 635, 638, 761, 745,
	665, 666, 0, 0, 0, 0, 0, 0, 0, 689,
	698, 730, 683, 0, 0, 0, 0, 0, 0, 0,
	0, 663, 0, 707, 0, 0, 0, 642, 636, 0,
	0, 0, 0, 687, 0, 0, 0, 645, 0, 664,
	731, 0, 630, 268, 640, 322, 0, 735, 744, 684,
	444, 748, 682, 681, 751, 726, 643, 741, 676, 293,
	641, 290, 194, 209, 0, 674, 332, 371, 377, 740,
	660, 669, 233, 667, 375, 346, 430, 217, 258, 368,
	351, 373, 706, 724, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 655, 736, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 728, 764, 345, 376, 223, 432, 396, 650, 654,
	648, 649, 700, 701, 651, 756, 757, 758, 732, 644,
	0, 652, 653, 0, 738, 746, 747, 705, 193, 206,
	296, 760, 365, 261, 457, 439, 435, 631, 647, 239,
	658, 0, 0, 671, 678, 679, 691, 693, 694, 695,
	696, 704, 712, 713, 715, 723, 725, 727, 729, 734,
	743, 763, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 703, 710, 306, 255, 272, 281, 718,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 750, 737,
	0, 0, 686, 753, 657, 675, 762, 677, 680, 720,
	637, 699, 336, 672, 0, 661, 633, 668, 634, 659,
	688, 246, 692, 656, 739, 702, 752, 294, 0, 639,
	662, 350, 722, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 759, 298, 709,
	0, 397, 321, 0, 0, 0, 690, 742, 697, 733,
	685, 721, 646, 708, 754, 673, 717, 755, 284, 230,
	198, 333, 398, 260, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 714, 749, 670, 716, 242, 282, 248, 241, 413,
	719, 765, 632, 711, 0, 635, 638, 761, 745, 665,
	666, 0, 0, 0, 0, 0, 0, 0, 689, 698,
	730, 683, 0, 0, 0, 0, 0, 0, 0, 0,
	663, 0, 707, 0, 0, 0, 642, 636, 0, 0,
	0, 0, 687, 0, 0, 0, 645, 0, 664, 731,
	0, 630, 268, 640, 322, 0, 735, 744, 684, 444,
	748, 682, 681, 751, 726, 643, 741, 676, 293, 641,
	290, 194, 209, 0, 674, 332, 371, 377, 740, 660,
	669, 233, 667, 375, 346, 430, 217, 258, 368, 351,
	373, 706, 724, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	655, 736, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	728, 764, 345, 376, 223, 432, 396, 650, 654, 648,
	649, 700, 701, 651, 756, 757, 758, 732, 644, 0,
	652, 653, 0, 738, 746, 747, 705, 193, 206, 296,
	760, 365, 261, 457, 439, 435, 631, 647, 239, 658,
	0, 0, 671, 678, 679, 691, 693, 694, 695, 696,
	704, 712, 713, 715, 723, 725, 727, 729, 734, 743,
	763, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 703, 710, 306, 255, 272, 281, 718, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 750, 737, 0,
	0, 686, 753, 657, 675, 762, 677, 680, 720, 637,
	699, 336, 672, 0, 661, 633, 668, 634, 659, 688,
	246, 692, 656, 739, 702, 752, 294, 0, 639, 662,
	350, 722, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 759, 298, 709, 0,
	397, 321, 0, 0, 0, 690, 742, 697, 733, 685,
	721, 646, 708, 754, 673, 717, 755, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	714, 749, 670, 716, 242, 282, 248, 241, 413, 719,
	765, 632, 711, 0, 635, 638, 761, 745, 665, 666,
	0, 0, 0, 0, 0, 0, 0, 689, 698, 730,
	683, 0, 0, 0, 0, 0, 0, 0, 0, 663,
	0, 707, 0, 0, 0, 642, 636, 0, 0, 0,
	0, 687, 0, 0, 0, 645, 0, 664, 731, 0,
	630, 268, 640, 322, 0, 735, 744, 684, 444, 748,
	682, 681, 751, 726, 643, 741, 676, 293, 641, 290,
	194, 209, 0, 674, 332, 371, 377, 740, 660, 669,
	233, 667, 375, 346, 430, 217, 258, 368, 351, 373,
	706, 724, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 767, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 655,
	736, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 629, 766, 623, 622, 291, 300, 728,
	764, 345, 376, 223, 432, 396, 650, 654, 648, 649,
	700, 701, 651, 756, 757, 758, 732, 644, 0, 652,
	653, 0, 738, 746, 747, 705, 193, 206, 296, 760,
	365, 261, 457, 439, 435, 631, 647, 239, 658, 0,
	0, 671, 678, 679, 691, 693, 694, 695, 696, 704,
	712, 713, 715, 723, 725, 727, 729, 734, 743, 763,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 703, 710, 306, 255, 272, 281, 718, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 750, 737, 0, 0,
	686, 753, 657, 675, 762, 677, 680, 720, 637, 699,
	336, 672, 0, 661, 633, 668, 634, 659, 688, 246,
	692, 656, 739, 702, 752, 294, 0, 639, 662, 350,
	722, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 759, 298, 709, 0, 397,
	321, 0, 0, 0, 690, 742, 697, 733, 685, 721,
	646, 708, 754, 673, 717, 755, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 714,
	749, 670, 716, 242, 282, 248, 241, 413, 719, 765,
	632, 711, 0, 635, 638, 761, 745, 665, 666, 0,
	0, 0, 0, 0, 0, 0, 689, 698, 730, 683,
	0, 0, 0, 0, 0, 0, 0, 0, 663, 0,
	707, 0, 0, 0, 642, 636, 0, 0, 0, 0,
	687, 0, 0, 0, 645, 0, 664, 731, 0, 630,
	268, 640, 322, 0, 735, 744, 684, 444, 748, 682,
	681, 751, 726, 643, 741, 676, 293, 641, 290, 194,
	209, 0, 674, 332, 371, 377, 740, 660, 669, 233,
	667, 375, 346, 430, 217, 258, 368, 351, 373, 706,
	724, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 1108, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	767, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 655, 736,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 629, 766, 623, 622, 291, 300, 728, 764,
	345, 376, 223, 432, 396, 650, 654, 648, 649, 700,
	701, 651, 756, 757, 758, 732, 644, 0, 652, 653,
	0, 738, 746, 747, 705, 193, 206, 296, 760, 365,
	261, 457, 439, 435, 631, 647, 239, 658, 0, 0,
	671, 678, 679, 691, 693, 694, 695, 696, 704, 712,
	713, 715, 723, 725, 727, 729, 734, 743, 763, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	703, 710, 306, 255, 272, 281, 718, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 750, 737, 0, 0, 686,
	753, 657, 675, 762, 677, 680, 720, 637, 699, 336,
	672, 0, 661, 633, 668, 634, 659, 688, 246, 692,
	656, 739, 702, 752, 294, 0, 639, 662, 350, 722,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 759, 298, 709, 0, 397, 321,
	0, 0, 0, 690, 742, 697, 733, 685, 721, 646,
	708, 754, 673, 717, 755, 284, 230, 198, 333, 398,
	260, 0, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 714, 749,
	670, 716, 242, 282, 248, 241, 413, 719, 765, 632,
	711, 0, 635, 638, 761, 745, 665, 666, 0, 0,
	0, 0, 0, 0, 0, 689, 698, 730, 683, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 707,
	0, 0, 0, 642, 636, 0, 0, 0, 0, 687,
	0, 0, 0, 645, 0, 664, 731, 0, 630, 268,
	640, 322, 0, 735, 744, 684, 444, 748, 682, 681,
	751, 726, 643, 741, 676, 293, 641, 290, 194, 209,
	0, 674, 332, 371, 377, 740, 660, 669, 233, 667,
	375, 346, 430, 217, 258, 368, 351, 373, 706, 724,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 620, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 767,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 655, 736, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 629, 766, 623, 622, 291, 300, 728, 764, 345,
	376, 223, 432, 396, 650, 654, 648, 649, 700, 701,
	651, 756, 757, 758, 732, 644, 0, 652, 653, 0,
	738, 746, 747, 705, 193, 206, 296, 760, 365, 261,
	457, 439, 435, 631, 647, 239, 658, 0, 0, 671,
	678, 679, 691, 693, 694, 695, 696, 704, 712, 713,
	715, 723, 725, 727, 729, 734, 743, 763, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 703,
	710, 306, 255, 272, 281, 718, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 336, 0, 0, 1415, 0, 520,
	0, 0, 0, 246, 0, 519, 0, 0, 0, 294,
	0, 0, 1416, 350, 0, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 563,
	298, 0, 0, 397, 321, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 230, 198, 333, 398, 260, 71, 0, 0, 180,
	181, 182, 541, 540, 543, 544, 545, 546, 0, 0,
	221, 542, 228, 547, 548, 549, 0, 242, 282, 248,
	241, 413, 0, 0, 0, 517, 534, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	610, 0, 0, 0, 578, 0, 533, 0, 0, 526,
	527, 529, 528, 530, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 322, 0, 577, 0,
	0, 444, 0, 0, 575, 0, 0, 0, 0, 0,
	293, 0, 290, 194, 209, 0, 0, 332, 371, 377,
	0, 0, 0, 233, 0, 375, 346, 430, 217, 258,
	368, 351, 373, 0, 0, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 0, 0, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 0, 0, 345, 376, 223, 432, 396, 565,
	576, 571, 572, 569, 570, 564, 568, 567, 566, 579,
	556, 557, 558, 559, 561, 0, 573, 574, 560, 193,
	206, 296, 0, 365, 261, 457, 439, 435, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 0, 0, 306, 255, 272, 281,
	0, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 336,
	0, 0, 0, 0, 520, 0, 0, 0, 246, 0,
	519, 0, 0, 0, 294, 0, 0, 0, 350, 0,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 563, 298, 0, 0, 397, 321,
	0, 0, 0, 0, 0, 554, 555, 0, 0, 0,
	0, 0, 0, 1527, 0, 284, 230, 198, 333, 398,
	260, 71, 0, 0, 180, 181, 182, 541, 540, 543,
	544, 545, 546, 0, 0, 221, 542, 228, 547, 548,
	549, 1528, 242, 282, 248, 241, 413, 0, 0, 0,
	517, 534, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 0, 0, 0, 0, 578,
	0, 533, 0, 0, 526, 527, 529, 528, 530, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 322, 0, 577, 0, 0, 444, 0, 0, 575,
	0, 0, 0, 0, 0, 293, 0, 290, 194, 209,
	0, 0, 332, 371, 377, 0, 0, 0, 233, 0,
	375, 346, 430, 217, 258, 368, 351, 373, 0, 0,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 426, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 213,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 0, 0, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 327, 214, 277, 395, 291, 300, 0, 0, 345,
	376, 223, 432, 396, 565, 576, 571, 572, 569, 570,
	564, 568, 567, 566, 579, 556, 557, 558, 559, 561,
	0, 573, 574, 560, 193, 206, 296, 0, 365, 261,
	457, 439, 435, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 0,
	0, 306, 255, 272, 281, 0, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 336, 0, 0, 0, 0, 520,
	0, 0, 0, 246, 0, 519, 0, 0, 0, 294,
	0, 0, 0, 350, 0, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 563,
	298, 0, 0, 397, 321, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 230, 198, 333, 398, 260, 71, 0, 597, 180,
	181, 182, 541, 540, 543, 544, 545, 546, 0, 0,
	221, 542, 228, 547, 548, 549, 0, 242, 282, 248,
	241, 413, 0, 0, 0, 517, 534, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	0, 0, 0, 0, 578, 0, 533, 0, 0, 526,
	527, 529, 528, 530, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 322, 0, 577, 0,
	0, 444, 0, 0, 575, 0, 0, 0, 0, 0,
	293, 0, 290, 194, 209, 0, 0, 332, 371, 377,
	0, 0, 0, 233, 0, 375, 346, 430, 217, 258,
	368, 351, 373, 0, 0, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 0, 0, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 0, 0, 345, 376, 223, 432, 396, 565,
	576, 571, 572, 569, 570, 564, 568, 567, 566, 579,
	556, 557, 558, 559, 561, 0, 573, 574, 560, 193,
	206, 296, 0, 365, 261, 457, 439, 435, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 0, 0, 306, 255, 272, 281,
	0, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 336,
	0, 0, 0, 0, 520, 0, 0, 0, 246, 0,
	519, 0, 0, 0, 294, 0, 0, 0, 350, 0,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 563, 298, 0, 0, 397, 321,
	0, 0, 0, 0, 0, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 230, 198, 333, 398,
	260, 71, 0, 0, 180, 181, 182, 541, 540, 543,
	544, 545, 546, 0, 0, 221, 542, 228, 547, 548,
	549, 0, 242, 282, 248, 241, 413, 0, 0, 0,
	517, 534, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 610, 0, 0, 0, 578,
	0, 533, 0, 0, 526, 527, 529, 528, 530, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 322, 0, 577, 0, 0, 444, 0, 0, 575,
	0, 0, 0, 0, 0, 293, 0, 290, 194, 209,
	0, 0, 332, 371, 377, 0, 0, 0, 233, 0,
	375, 346, 430, 217, 258, 368, 351, 373, 0, 0,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 426, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 213,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 0, 0, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 327, 214, 277, 395, 291, 300, 0, 0, 345,
	376, 223, 432, 396, 565, 576, 571, 572, 569, 570,
	564, 568, 567, 566, 579, 556, 557, 558, 559, 561,
	0, 573, 574, 560, 193, 206, 296, 0, 365, 261,
	457, 439, 435, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 0,
	0, 306, 255, 272, 281, 0, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 336, 0, 0, 0, 0, 520,
	0, 0, 0, 246, 0, 519, 0, 0, 0, 294,
	0, 0, 0, 350, 0, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 563,
	298, 0, 0, 397, 321, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 230, 198, 333, 398, 260, 71, 0, 0, 180,
	181, 182, 541, 1433, 543, 544, 545, 546, 0, 0,
	221, 542, 228, 547, 548, 549, 0, 242, 282, 248,
	241, 413, 0, 0, 0, 517, 534, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	610, 0, 0, 0, 578, 0, 533, 0, 0, 526,
	527, 529, 528, 530, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 322, 0, 577, 0,
	0, 444, 0, 0, 575, 0, 0, 0, 0, 0,
	293, 0, 290, 194, 209, 0, 0, 332, 371, 377,
	0, 0, 0, 233, 0, 375, 346, 430, 217, 258,
	368, 351, 373, 0, 0, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 0, 0, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 0, 0, 345, 376, 223, 432, 396, 565,
	576, 571, 572, 569, 570, 564, 568, 567, 566, 579,
	556, 557, 558, 559, 561, 0, 573, 574, 560, 193,
	206, 296, 0, 365, 261, 457, 439, 435, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 0, 0, 306, 255, 272, 281,
	0, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 336,
	0, 0, 0, 0, 520, 0, 0, 0, 246, 0,
	519, 0, 0, 0, 294, 0, 0, 0, 350, 0,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 563, 298, 0, 0, 397, 321,
	0, 0, 0, 0, 0, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 230, 198, 333, 398,
	260, 71, 0, 0, 180, 181, 182, 541, 1430, 543,
	544, 545, 546, 0, 0, 221, 542, 228, 547, 548,
	549, 0, 242, 282, 248, 241, 413, 0, 0, 0,
	517, 534, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 610, 0, 0, 0, 578,
	0, 533, 0, 0, 526, 527, 529, 528, 530, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 322, 0, 577, 0, 0, 444, 0, 0, 575,
	0, 0, 0, 0, 0, 293, 0, 290, 194, 209,
	0, 0, 332, 371, 377, 0, 0, 0, 233, 0,
	375, 346, 430, 217, 258, 368, 351, 373, 0, 0,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 426, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 213,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 0, 0, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 327, 214, 277, 395, 291, 300, 0, 0, 345,
	376, 223, 432, 396, 565, 576, 571, 572, 569, 570,
	564, 568, 567, 566, 579, 556, 557, 558, 559, 561,
	0, 573, 574, 560, 193, 206, 296, 0, 365, 261,
	457, 439, 435, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 0,
	0, 306, 255, 272, 281, 0, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 520, 0, 0, 0, 246, 0, 519, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 517, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 578, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 577, 0, 0, 444, 0, 0, 575, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 565, 576, 571, 572, 569, 570, 564, 568,
	567, 566, 579, 556, 557, 558, 559, 561, 0, 573,
	574, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 520, 0, 0,
	0, 246, 0, 519, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 563, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 71, 0, 0, 180, 181, 182,
	541, 540, 543, 544, 545, 546, 0, 0, 221, 542,
	228, 547, 548, 549, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 517, 534, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 578, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 577, 0, 0, 444,
	0, 0, 575, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 565, 576, 571,
	572, 569, 570, 564, 568, 567, 566, 579, 556, 557,
	558, 559, 561, 0, 573, 574, 560, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 0, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 578, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 577, 0, 0, 444, 0, 0, 575, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 2197, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 565, 576, 571, 572, 569, 570, 564, 568,
	567, 566, 579, 556, 557, 558, 559, 561, 0, 573,
	574, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 563, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 71, 0, 597, 180, 181, 182,
	541, 540, 543, 544, 545, 546, 0, 0, 221, 542,
	228, 547, 548, 549, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 0, 534, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 578, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 577, 0, 0, 444,
	0, 0, 575, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 565, 576, 571,
	572, 569, 570, 564, 568, 567, 566, 579, 556, 557,
	558, 559, 561, 0, 573, 574, 560, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 0, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 578, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 577, 0, 0, 444, 0, 0, 575, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 565, 576, 571, 572, 569, 570, 564, 568,
	567, 566, 579, 556, 557, 558, 559, 561, 0, 573,
	574, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 0, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 0, 0, 0, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 983, 982, 992, 993, 985, 986, 987, 988,
	989, 990, 991, 984, 0, 0, 994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 0, 0, 0, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 810, 0, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 0, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 0,
	0, 0, 180, 181, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 0, 0, 0, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 0, 0, 809, 444, 0, 0, 0, 0, 0,
	0, 806, 807, 293, 775, 290, 194, 209, 800, 804,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 1086, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 0, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 0, 0, 0, 180, 181, 182,
	0, 1088, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 0, 0, 0, 0, 242, 282, 248, 241, 413,
	972, 973, 971, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 0, 0, 0, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 35, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 71, 0, 597, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 1460,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 1462, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 1458, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 769, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 775, 290, 194,
	209, 773, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 1460,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 1462, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 71, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 1480, 0,
	0, 1481, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 1119, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 1118, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 597, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 71, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 1462, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 1088, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 1365, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1243, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1241, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1239, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1237, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1235, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1231, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1229, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1227, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 1202, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 1101, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 1092, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 948, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 507, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	188, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243,
}

var yyPact = [...]int{
	4145, -1000, -338, 1621, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1590, 1198, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 564, 1250, 227, 1504, 281, 152, 994, 390,
	155, 27286, 380, 3612, 27741, -1000, 110, -1000, 95, 27741,
	106, 26831, -1000, -1000, -284, 12693, 1429, 21, 7, 27741,
	124, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1226,
	1547, 1543, 1586, 1087, 1503, -1000, 10860, 10860, 314, 314,
	314, 9040, -1000, -1000, 16801, 27741, 27741, 1261, 379, 994,
	368, 366, 357, -1000, -120, -1000, -1000, -1000, -1000, 1504,
	-1000, -1000, 112, -1000, 234, 1185, -1000, 1183, -1000, 485,
	425, 231, 310, 309, 230, 229, 226, 223, 222, 221,
	219, 218, 237, -1000, 561, 561, -170, -179, 2456, 280,
	280, 280, 326, 1455, 1454, -1000, 488, -1000, 561, 561,
	100, 561, 561, 561, 561, 192, 191, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 27741, -1000, 156, 534, 266, 588, 1504, 180,
	-1000, -1000, -1000, 27741, 376, 994, 299, -1000, 27741, -1000,
	477, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27741, 631, 631, 51, 631, 631, 631, 631, 57, 416,
	-5, -1000, 52, 171, 163, 167, 639, 85, 62, -1000,
	-1000, 158, 639, 34, -1000, 631, 7164, 7164, 7164, -1000,
	1487, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 319,
	-1000, -1000, -1000, -1000, 27741, 26376, 248, 585, -1000, -1000,
	-1000, 83, -1000, -1000, 1117, 948, -1000, 12693, 2380, 1145,
	1145, -1000, -1000, 407, -1000, -1000, 14058, 14058, 14058, 14058,
	14058, 14058, 14058, 14058, 14058, 14058, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1145, 460, -1000, 12238, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 12693, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	-1000, -1000, -1000, 27741, -1000, 1145, 955, 1590, -1000, 1198,
	-1000, -1000, -1000, 1473, 12693, 12693, 1590, -1000, 1367, 10860,
	-1000, -1000, 1430, -1000, -1000, -1000, -1000, -1000, 699, 1605,
	-1000, 15423, 450, 1604, 25921, -1000, 19544, 25466, 1182, 8571,
	-87, -1000, -1000, -1000, 575, 18634, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1487, 1110, 27741,
	-1000, -1000, 3863, 994, -1000, 1248, -1000, 1105, -1000, 1202,
	156, 300, 1281, 994, 994, 994, 300, -1000, -1000, -1000,
	561, 561, 236, 281, 2784, -1000, -1000, -1000, 25004, 1247,
	994, -1000, 1244, -1000, 1515, 296, 484, 484, 994, -1000,
	-1000, 27741, 994, 1514, 1513, 27741, 27741, -1000, 24549, -1000,
	24094, 23639, 822, 27741, 23184, 22729, 22274, 21819, 21364, -1000,
	1304, -1000, 1243, -1000, -1000, -1000, 27741, 27741, 27741, 26,
	-1000, -1000, 27741, 994, -1000, -1000, 816, 788, 561, 561,
	786, 954, 951, 934, 561, 561, 777, 931, 986, 178,
	775, 771, 756, 908, 914, 123, 890, 774, 752, 27741,
	1238, -1000, 151, 570, 202, 239, 201, 27741, 119, 1535,
	145, 1504, 1428, 1180, 318, 299, 1311, 27741, 1528, 299,
	-1000, 7633, -1000, -1000, 912, 12693, -1000, 660, 639, 639,
	-1000, -1000, -1000, -1000, -1000, -1000, 631, 27741, 660, -1000,
	-1000, -1000, 639, 631, 27741, 631, 631, 631, 631, 639,
	631, 27741, 27741, 27741, 27741, 27741, 27741, 27741, 27741, 27741,
	7164, 7164, 7164, 541, 631, -1000, 1310, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 105, -1000, -1000, -1000, -1000, -1000,
	1621, -1000, -1000, -1000, -109, 1175, 20909, -1000, -289, -290,
	-291, -292, -1000, -1000, -1000, -296, -297, -1000, -1000, -1000,
	12693, 12693, 12693, 12693, 619, 527, 14058, 721, 542, 14058,
	14058, 14058, 14058, 14058, 14058, 14058, 14058, 14058, 14058, 14058,
	14058, 14058, 14058, 14058, 659, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 994, -1000, 1619, 808, 808, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 14513, 9495, 7633,
	1087, 1085, 1590, 10860, 10860, 12693, 12693, 11770, 11315, 10860,
	1480, 601, 948, 27741, -1000, 873, -1000, -1000, 13603, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 27741, 27741, 10860, 10860, 10860, 10860, 10860, -1000, 1174,
	-1000, -152, 16346, 12693, -1000, 1543, 1087, 1430, 1519, 1614,
	514, 664, 1165, -1000, 765, 1543, 18179, 1102, -1000, 1430,
	-1000, -1000, -1000, 27741, -1000, -1000, 20454, -1000, -1000, 6695,
	27741, 215, 27741, -1000, 1170, 1373, -1000, -1000, -1000, 1532,
	17724, 27741, 1159, 1098, -1000, -1000, 448, 8102, -87, -1000,
	8102, 1128, -1000, -78, -66, 9950, 456, -1000, -1000, -1000,
	2456, 14968, 1024, -1000, 35, -1000, -1000, -1000, 1202, -1000,
	1202, 1202, 1202, 1202, 26, 26, 26, 26, -1000, -1000,
	-1000, -1000, -1000, 1236, 1231, -1000, 1202, 1202, 1202, 1202,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1228, 1228, 1228,
	1208, 1208, 289, -1000, 12693, 117, 27741, 1523, 751, 151,
	27741, 611, 1309, -1000, 27741, 1281, 1281, 1281, 994, 980,
	902, -1000, 1164, -1000, -1000, 1584, -1000, -1000, 449, 646,
	621, 475, 27741, 126, 214, -1000, 272, -1000, 27741, 1224,
	1510, 484, 994, -1000, 994, -1000, -1000, -1000, -1000, 445,
	-1000, -1000, 994, 1160, -1000, 1152, 705, 620, 686, 618,
	1160, -1000, -1000, -148, 1160, -1000, 1160, -1000, 1160, -1000,
	1160, -1000, 1160, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 526, 27741, 126, 659, -1000, 317, -1000, -1000, 659,
	659, -1000, -1000, -1000, -1000, 911, 906, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -333, 27741, 332, 134, 133, 27741, 27741,
	27741, 27741, 27741, 411, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 189, 27741, 27741, 27741, 27741, 377, -1000, -1000, 994,
	-1000, -1000, -1000, -1000, 948, 27741, -1000, -1000, 631, 631,
	-1000, -1000, 27741, 631, -1000, -1000, -1000, -1000, -1000, -1000,
	631, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 901, -1000, 27741, 27741, -1000,
	-1000, -1000, -1000, -1000, 104, -80, 168, -1000, -1000, -1000,
	-1000, 1539, -1000, 948, 527, 555, 577, -1000, -1000, 732,
	-1000, -1000, 2480, -1000, -1000, -1000, -1000, 721, 14058, 14058,
	14058, 1260, 2480, 2672, 992, 877, 491, 640, 640, 493,
	493, 493, 493, 493, 746, 746, -1000, -1000, -1000, -1000,
	873, -1000, -1000, -1000, 873, 10860, 10860, 1157, 1145, 444,
	-1000, 1226, -1000, -1000, 1543, 1070, 1070, 687, 868, 579,
	1603, 1070, 571, 1602, 1070, 1070, 10860, -1000, -1000, 600,
	-1000, 12693, 873, -1000, 1282, 1136, 1130, 1070, 873, 873,
	1070, 1070, 27741, -1000, -281, -1000, -103, 464, 1145, -1000,
	19999, -1000, -1000, 873, 1117, 1473, -1000, -1000, 1456, -1000,
	1374, 12693, 12693, 12693, -1000, -1000, -1000, 1473, 1576, -1000,
	1393, 1390, 1597, 10860, 19544, 1430, -1000, -1000, -1000, 442,
	1597, 1177, 1145, -1000, 27741, 19544, 19544, 19544, 19544, 19544,
	-1000, 1342, 1324, -1000, 1341, 1339, 1364, 27741, -1000, 1083,
	1087, 17724, 215, 1023, 19544, 27741, -1000, -1000, 19544, 27741,
	6226, -1000, 1128, -87, -81, -1000, -1000, -1000, -1000, 948,
	-1000, 783, -1000, 2207, -1000, 275, -1000, -1000, -1000, -1000,
	397, 32, -1000, -1000, 26, 26, -1000, -1000, 456, 674,
	456, 456, 456, 896, 896, -1000, -1000, -1000, -1000, -1000,
	749, -1000, -1000, -1000, 748, -1000, -1000, 698, 1292, 117,
	-1000, -1000, 561, 894, 1448, -1000, -1000, 968, 330, -1000,
	1527, 27741, -1000, 1308, 1305, 1303, -1000, -1000, -1000, -1000,
	-1000, 2245, 27741, 1078, -1000, 127, 27741, 966, 27741, -1000,
	1075, 27741, -1000, 994, -1000, -1000, 7633, -1000, 27741, 1145,
	-1000, -1000, -1000, -1000, 359, 1497, 1493, 126, 127, 456,
	994, -1000, -1000, -1000, -1000, -1000, -339, 1072, 27741, 141,
	-1000, 1216, 880, -1000, 1277, -1000, -1000, -1000, -1000, 125,
	200, 185, 316, -1000, 358, 1292, 27741, -1000, -1000, -1000,
	-1000, 639, -1000, -1000, 639, -1000, -1000, -1000, -1000, -1000,
	-1000, 1482, -85, -309, -1000, -306, -1000, -1000, -1000, -1000,
	1260, 2480, 2613, -1000, 14058, 14058, -1000, -1000, 1070, 1070,
	10860, 7633, 1590, 1473, -1000, -1000, 421, 659, 421, 14058,
	14058, -1000, 14058, 14058, -1000, -144, 1118, 595, -1000, 12693,
	855, -1000, -1000, 14058, 14058, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 354, 353, 347, 27741, -1000, -1000,
	-1000, 861, 893, 1369, 948, 948, -1000, -1000, 27741, -1000,
	-1000, -1000, -1000, 1594, 12693, -1000, 1125, -1000, 5757, 1543,
	1301, 27741, 1145, 1621, 15891, 27741, 1181, -1000, 567, 1373,
	1270, 1300, 1283, -1000, -1000, -1000, -1000, 1323, -1000, 1322,
	-1000, -1000, -1000, -1000, -1000, 1087, 1597, 19544, 1056, -1000,
	1056, -1000, 420, -1000, -1000, -1000, -93, -99, -1000, -1000,
	-1000, 2456, -1000, -1000, -1000, 657, 14058, 1612, -1000, 886,
	1509, -1000, 1508, -1000, -1000, 456, 456, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1066, -1000, 1064, 1124, 1062, 50,
	-1000, 1255, 1478, 561, 561, -1000, 744, -1000, 994, -1000,
	27741, -1000, -1000, 27741, 27741, 27741, 1581, 1123, -1000, 27741,
	-1000, -1000, 27741, -1000, -1000, 1387, 117, 1060, -1000, -1000,
	-1000, 214, 27741, -1000, 808, 127, -1000, -1000, -1000, -1000,
	-1000, -1000, 1189, -1000, -1000, -1000, 964, -1000, -149, 994,
	27741, 27741, 27741, -1000, 27741, -1000, -1000, -1000, 631, 631,
	-1000, 1477, -1000, 994, -1000, 14058, 2480, 2480, -1000, -1000,
	873, -1000, 1543, -1000, 873, 1202, 1202, -1000, 1202, 1208,
	-1000, 1202, 88, 1202, 87, 873, 873, 2507, 2409, 2336,
	1566, 1145, -127, -1000, 948, 12693, 1344, 718, 1145, 1145,
	1145, 1037, 885, 26, -1000, -1000, -1000, 1592, 1578, 948,
	-1000, -1000, -1000, 1517, 1012, 1100, -1000, -1000, 10405, 1058,
	1377, 414, 1037, 1590, 27741, 12693, -1000, -1000, 12693, 1191,
	-1000, 12693, -1000, -1000, -1000, 1590, 1590, 1056, -1000, -1000,
	500, -1000, -1000, -1000, -1000, -1000, 2480, -123, -1000, -1000,
	-1000, -1000, -1000, 26, 871, 26, 726, -1000, 719, -1000,
	-1000, -217, -1000, -1000, 1213, 1264, -1000, -1000, 1189, -1000,
	-1000, -1000, 27741, 27741, -1000, -1000, 210, -1000, 262, 1030,
	-1000, -167, -1000, -1000, 1531, 27741, -1000, -1000, 7633, -1000,
	-1000, 1178, 1280, -1000, -1000, -1000, -1000, -1000, -1000, 2480,
	-1000, 1473, -1000, -1000, 251, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14058, 14058, 14058, 14058, 14058, 1543, 866,
	948, 14058, 14058, 19089, 27741, 27741, 17256, 26, -4, -1000,
	12693, 12693, 1507, -1000, 1145, -1000, 1144, 27741, 1145, 27741,
	-1000, 1543, -1000, 948, 948, 27741, 948, 1543, -1000, -1000,
	456, -1000, 456, 913, 895, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1530, 1123, -1000, 206, 27741, -1000, 214,
	-1000, -180, -183, 1198, 1017, 1120, -1000, 558, 27741, 27741,
	-1000, -1000, -1000, 1282, 1282, 1282, 1282, 169, 873, -1000,
	1282, 1282, 1007, -1000, 1007, 1007, 464, -276, -1000, 1425,
	1401, 948, 1117, 1610, -1000, 1145, 1621, 391, 1100, -1000,
	-1000, 999, -1000, -1000, -1000, -1000, -1000, 1198, 1145, 1088,
	-1000, -1000, -1000, 187, -1000, 7633, 5288, 993, -1000, -1000,
	-1000, -1000, -1000, 873, 146, -155, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -4, 276, -1000, 1413, 1401, -1000, 1573,
	1420, 1572, -1000, 27741, 1100, 27741, -1000, 187, 13148, 27741,
	-1000, -58, -1000, -1000, -1000, -1000, -1000, 1277, -1000, 1365,
	-151, -162, 1410, 1414, 1414, 1413, -1000, 1561, 1556, -1000,
	854, 1549, 833, 1039, -1000, -1000, 1282, 873, 978, 282,
	-1000, -1000, -149, -1000, 1351, -1000, 1407, 681, -1000, -1000,
	-1000, -1000, 830, 747, -1000, 722, -1000, -1000, -1000, 1293,
	153, -1000, -153, -1000, 652, -1000, -1000, -1000, -1000, -1000,
	1289, -1000, 1601, -1000, -166, -1000, -1000, -1000, 1608, 429,
	429, -164, -1000, -1000, -1000, 271, 736, -1000, -1000, -1000,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 1898, 1897, 14, 89, 79, 1896, 1894, 1891, 1889,
	132, 131, 130, 1888, 1886, 1885, 1884, 1883, 1882, 1881,
	1880, 1879, 1877, 1876, 1871, 51, 123, 38, 40, 125,
	1870, 1868, 46, 1866, 1858, 1857, 124, 121, 462, 1856,
	116, 1855, 1854, 1853, 1848, 1847, 1846, 1845, 1844, 1842,
	1841, 1840, 1838, 1837, 1835, 137, 1834, 1833, 5, 1832,
	48, 1827, 1823, 1822, 1820, 1818, 85, 1816, 1815, 1814,
	112, 1813, 1812, 45, 220, 61, 76, 1809, 1807, 71,
	764, 1805, 105, 129, 1804, 202, 1802, 43, 98, 77,
	1801, 41, 1800, 1799, 93, 1798, 1797, 1796, 69, 1795,
	1793, 2920, 1792, 59, 78, 9, 39, 1785, 1783, 1779,
	1778, 33, 44, 1777, 1776, 21, 1773, 1772, 140, 1761,
	83, 24, 1760, 16, 13, 18, 1759, 84, 1758, 75,
	50, 29, 1757, 82, 1755, 1753, 1751, 1744, 31, 1743,
	73, 106, 30, 1741, 1740, 7, 8, 1733, 1732, 1730,
	1726, 1725, 1723, 11, 1722, 3, 1721, 63, 1717, 17,
	19, 67, 118, 23, 10, 1715, 143, 1713, 22, 119,
	68, 107, 1712, 1711, 1708, 968, 72, 139, 1707, 1694,
	34, 1691, 115, 127, 1690, 1462, 1689, 1687, 66, 1275,
	2464, 28, 109, 1686, 1685, 2123, 47, 74, 20, 1683,
	1681, 1680, 126, 113, 81, 842, 42, 1679, 1678, 1677,
	1671, 1670, 1669, 1667, 88, 26, 32, 117, 25, 1666,
	1665, 1664, 58, 37, 1663, 108, 102, 64, 86, 1662,
	114, 99, 56, 1661, 111, 1659, 1658, 1656, 1655, 57,
	1653, 1651, 1650, 1649, 91, 87, 53, 35, 1646, 36,
	94, 101, 103, 1645, 27, 122, 12, 1642, 6, 0,
	1641, 4, 135, 1456, 104, 1640, 1639, 1, 1638, 2,
	1634, 1633, 80, 1632, 1631, 1630, 1628, 3167, 339, 110,
	1627, 128,
}

//line sql.y:5191
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 275, 276, 276, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 259, 259, 259, 262, 262,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 279, 279, 96, 96, 94, 94, 95, 95,
	161, 161, 13, 14, 14, 171, 171, 170, 170, 170,
	172, 172, 172, 172, 205, 205, 15, 15, 15, 15,
	15, 71, 71, 261, 261, 260, 258, 258, 257, 257,
	256, 23, 24, 33, 33, 33, 33, 34, 35, 263,
	263, 235, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 237, 237, 224, 224, 236, 236,
	236, 236, 236, 236, 236, 223, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 207, 207, 207,
	207, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 209, 209, 209, 209, 209, 211, 211, 211,
	211, 211, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 213,
	213, 213, 213, 213, 213, 222, 222, 214, 214, 217,
	217, 218, 218, 218, 219, 219, 220, 220, 215, 215,
	215, 215, 216, 216, 216, 225, 249, 249, 248, 248,
	246, 246, 246, 246, 234, 234, 243, 243, 243, 243,
	243, 233, 233, 229, 229, 229, 230, 230, 231, 231,
	228, 228, 232, 232, 245, 245, 244, 226, 226, 227,
	227, 251, 251, 251, 251, 252, 268, 269, 267, 267,
	267, 267, 267, 60, 60, 60, 184, 184, 184, 241,
	241, 240, 240, 240, 242, 242, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 179, 179, 179, 266, 266,
	266, 266, 266, 266, 265, 265, 265, 238, 238, 238,
	264, 264, 130, 130, 131, 131, 30, 30, 30, 30,
	30, 30, 29, 29, 29, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 31, 31, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 221,
	221, 221, 253, 253, 254, 254, 17, 22, 22, 18,
	18, 18, 18, 19, 19, 41, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	270, 270, 178, 178, 186, 186, 177, 177, 176, 176,
	176, 180, 180, 180, 181, 181, 274, 274, 274, 43,
	43, 45, 45, 46, 47, 47, 200, 200, 201, 201,
	48, 49, 61, 61, 61, 61, 61, 61, 63, 63,
	63, 7, 7, 7, 7, 57, 57, 57, 6, 6,
	44, 44, 51, 271, 271, 272, 273, 273, 273, 273,
	52, 54, 20, 20, 20, 20, 20, 20, 78, 78,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 72, 72, 72, 67, 67, 280, 55, 56,
	56, 70, 70, 70, 64, 64, 64, 69, 69, 69,
	75, 75, 77, 77, 77, 77, 77, 79, 79, 79,
	79, 79, 79, 79, 74, 74, 76, 76, 76, 76,
	193, 193, 193, 192, 192, 86, 86, 87, 87, 88,
	88, 89, 89, 89, 128, 104, 104, 160, 160, 159,
	159, 162, 162, 90, 90, 90, 90, 91, 91, 92,
	92, 93, 93, 199, 199, 198, 198, 198, 197, 197,
	97, 97, 97, 99, 98, 98, 98, 98, 100, 100,
	102, 102, 101, 101, 103, 105, 105, 105, 105, 105,
	106, 106, 85, 85, 85, 85, 85, 85, 85, 85,
	174, 174, 108, 108, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 119, 119, 119, 119, 119, 119,
	109, 109, 109, 109, 109, 109, 109, 73, 73, 120,
	120, 120, 127, 121, 121, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 116,
	116, 116, 116, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 281, 281, 118, 117, 117, 117, 117,
	117, 117, 117, 68, 68, 68, 68, 68, 204, 204,
	204, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 206, 134, 134, 65, 65, 132, 132,
	133, 135, 135, 129, 129, 129, 111, 111, 111, 111,
	111, 111, 111, 111, 113, 113, 113, 136, 136, 137,
	137, 138, 138, 139, 139, 140, 141, 141, 141, 142,
	142, 142, 142, 32, 32, 32, 32, 32, 27, 27,
	27, 27, 28, 28, 28, 80, 80, 80, 80, 82,
	82, 81, 81, 58, 58, 59, 59, 59, 83, 83,
	84, 84, 84, 84, 157, 157, 157, 143, 143, 143,
	143, 149, 149, 149, 145, 145, 147, 147, 147, 148,
	148, 148, 146, 154, 154, 156, 156, 155, 155, 151,
	151, 152, 152, 153, 153, 153, 150, 150, 110, 110,
	110, 110, 110, 158, 158, 158, 158, 163, 163, 123,
	123, 125, 125, 124, 126, 164, 164, 168, 165, 165,
	169, 169, 169, 169, 169, 166, 166, 167, 167, 194,
	194, 194, 173, 173, 185, 185, 182, 182, 183, 183,
	175, 175, 187, 187, 187, 53, 122, 122, 250, 250,
	247, 190, 190, 191, 191, 195, 195, 196, 196, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 277, 278, 202, 203, 203, 203,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 11,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 5, 3, 6, 7, 7, 7, 5, 2, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 10, 3, 6, 7, 5, 5, 5, 12,
	7, 5, 9, 4, 4, 4, 4, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 6,
	6, 5, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 0, 2, 4, 0, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 2, 1, 2, 3, 3, 0,
	2, 1, 2, 3, 4, 3, 0, 1, 2, 1,
	5, 4, 4, 1, 3, 3, 5, 0, 5, 1,
	3, 1, 2, 3, 1, 1, 3, 3, 1, 3,
	3, 3, 3, 3, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 3,
	0, 1, 0, 1, 1, 5, 0, 1, 0, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -275, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -277, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 231, 232, 234, 235, 236,
	237, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 334, 187, 186, 26, -276, 474, -70,
	5, -138, 16, -3, -55, -280, -55, -55, -55, -55,
	-55, -55, -235, -237, 81, 126, 81, -71, -185, 165,
	174, 173, 170, -263, 107, 220, 325, 163, -39, -38,
	-37, -36, -40, 30, -30, -31, -255, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 347, 350, -242, 154,
	160, 161, 335, 105, 104, 72, 156, -239, 281, 451,
	-40, 453, 95, 97, 452, 41, 165, 454, 455, 456,
	457, 175, 458, 459, 460, 461, 467, 468, 469, 470,
	106, 5, 164, -263, -80, 291, 227, 77, -262, -259,
	84, 85, 86, 164, -185, 165, 166, -263, 164, -101,
	-195, -259, -189, 344, 178, 378, 379, 225, 77, 281,
	451, 231, 245, 239, 266, 258, 345, 380, 228, 179,
	213, 448, 256, 259, 312, 453, 381, 193, 304, 286,
	294, 95, 234, 321, 466, 230, 382, 464, 97, 452,
	76, 48, 41, 188, 254, 250, 454, 214, 383, 355,
	207, 105, 102, 473, 248, 47, 28, 463, 104, 46,
	455, 384, 456, 296, 271, 442, 45, 309, 194, 385,
	80, 349, 450, 298, 249, 295, 224, 462, 159, 386,
	434, 306, 443, 387, 272, 276, 388, 313, 49, 389,
	390, 444, 103, 391, 75, 457, 243, 244, 392, 222,
	177, 315, 270, 175, 34, 299, 346, 226, 55, 201,
	316, 43, 274, 42, 438, 393, 441, 269, 265, 50,
	394, 395, 396, 397, 458, 268, 242, 264, 472, 219,
	459, 59, 161, 278, 277, 279, 208, 311, 261, 398,
	399, 400, 182, 78, 401, 251, 19, 402, 403, 307,
	215, 404, 53, 405, 406, 319, 191, 407, 51, 460,
	38, 196, 461, 408, 409, 410, 411, 412, 305, 413,
	297, 273, 275, 203, 293, 348, 414, 247, 195, 465,
	415, 183, 449, 197, 200, 190, 320, 184, 416, 417,
	418, 419, 420, 229, 421, 422, 235, 467, 40, 423,
	424, 425, 426, 223, 218, 314, 323, 58, 79, 283,
	427, 447, 241, 216, 428, 232, 52, 468, 469, 470,
	210, 471, 289, 106, 220, 221, 44, 262, 202, 429,
	430, 252, 253, 267, 240, 263, 233, 435, 204, 308,
	192, 431, 322, 217, 284, 352, 209, 310, 446, 351,
	260, 257, 211, 432, 166, 205, 206, 433, 436, 300,
	290, 301, 302, 227, 303, 291, 212, 350, 255, 285,
	164, -166, 286, -186, 287, 288, 299, 300, 306, -178,
	307, 305, 203, -274, 313, 164, 308, 153, 144, 296,
	297, 290, 303, 291, 212, -270, -259, 456, 471, 312,
	259, 292, 298, 314, 438, 302, 301, -195, 233, -200,
	238, -190, -259, -189, 236, -101, -61, 434, 157, -202,
	-202, -72, 438, 440, -121, -85, -107, 110, -112, 30,
	24, -111, -108, -129, -126, -127, 144, 145, 147, 146,
	148, 133, 134, 141, 111, 149, -116, -114, -115, -117,
	88, 87, 96, 89, 90, 91, 92, 98, 99, 100,
	-190, -195, -124, -277, 65, 66, 335, 336, 337, 338,
	343, 339, 113, 54, 330, 324, 333, 332, 331, 328,
	329, 326, 327, 341, 342, 169, 325, 163, 139, 334,
	-259, -189, 41, 289, 289, -101, 227, -5, -4, -277,
	6, 21, 22, -142, 18, 17, -278, 83, -64, -77,
	60, 61, -79, 22, 37, 64, 62, 21, -56, -76,
	135, -85, -195, -76, -175, 168, -175, -175, -165, -205,
	233, -169, 314, 313, -191, -167, -190, -188, -166, 311,
	158, 353, 109, 23, 25, 112, 144, 17, 113, 36,
	160, 176, 143, 172, 335, 153, 69, 354, 326, 327,
	324, 330, 337, 338, 325, 287, 30, 11, 356, 26,
	186, 22, 37, 137, 155, 116, 117, 189, 24, 187,
	100, 359, 20, 72, 181, 12, 174, 14, 360, 361,
	15, 169, 168, 128, 165, 67, 9, 149, 27, 125,
	63, 362, 29, 363, 364, 365, 366, 65, 126, 18,
	328, 329, 32, 439, 367, 343, 198, 139, 70, 56,
	440, 110, 368, 369, 98, 370, 101, 73, 445, 107,
	16, 68, 39, 371, 199, 372, 171, 373, 317, 374,
	127, 156, 334, 66, 375, 163, 288, 6, 340, 31,
	185, 173, 64, 376, 164, 115, 341, 342, 167, 99,
	5, 170, 33, 10, 71, 74, 331, 332, 333, 54,
	347, 114, 13, 377, 318, 108, 312, 259, -236, 126,
	-223, -227, -190, 180, -252, 176, -101, -245, -244, -190,
	-80, 164, -259, 165, 165, 165, -55, 334, -36, -37,
	-166, 143, 197, 82, 82, -227, -226, -225, -264, 199,
	180, -251, -243, 172, 181, -233, 173, 174, -228, 165,
	29, -264, -228, 171, 181, 199, 199, 106, 199, 106,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 196,
	-234, 118, -234, 351, 351, -239, -264, -264, -264, 167,
	34, 34, -187, -228, 167, 23, -234, -234, -166, 143,
	-234, -234, -234, -234, 207, 207, -234, -234, -234, -234,
	-234, -234, -234, -234, -234, -234, -234, -234, -234, -234,
	-234, -101, -83, 214, 153, 155, 158, 73, 88, 228,
	118, -38, 209, -22, -101, 164, -259, -182, 169, -55,
	-101, 150, -101, -180, 126, 13, -180, -177, 289, 293,
	294, 295, -180, -180, -180, -180, 210, 304, -229, 165,
	34, 177, 289, 210, 304, 210, 211, 210, 211, 210,
	-176, 12, 128, 325, 309, 306, 203, 164, 204, 166,
	310, -259, 441, 211, -176, 289, 206, -180, -203, -277,
	-191, -203, -203, 31, 167, -190, -57, -190, 88, -7,
	-3, -11, -10, -12, 118, -78, 289, -66, 144, 456,
	442, 443, 444, 441, 305, 449, 447, 445, 210, 446,
	82, 109, 107, 108, 125, -85, -109, 128, 110, 126,
	127, 112, 130, 129, 140, 133, 134, 135, 136, 137,
	138, 139, 131, 132, 143, 118, 119, 120, 121, 122,
	123, 124, -174, -277, -127, -277, 151, 152, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -277, 150,
	-2, -121, -4, -277, -277, -277, -277, -277, -277, -277,
	-277, -134, -85, -277, -281, -277, -281, -118, -277, -281,
	-118, -281, -118, -281, -281, -118, -281, -118, -281, -281,
	-118, -277, -277, -277, -277, -277, -277, -277, -202, -271,
	-272, -104, -101, -277, 88, -138, -3, -55, -157, 20,
	32, -85, -139, -140, -85, -138, 56, -74, -76, -79,
	60, 61, 94, 12, -193, -192, 23, -190, 88, 150,
	12, -102, 27, -101, -87, -88, -89, -90, -104, -128,
	-277, 12, -94, -95, -101, -103, -195, 82, 233, -169,
	-205, -171, -170, 315, 317, 118, -194, -190, 88, 30,
	83, 82, -101, -207, -210, -212, -211, -213, -208, -209,
	256, 257, 144, 260, 262, 263, 264, 265, 266, 267,
	268, 269, 270, 271, 31, 188, 252, 253, 254, 255,
	272, 273, 274, 275, 276, 277, 278, 279, 239, 258,
	345, 240, 241, 242, 243, 244, 245, 247, 248, 249,
	250, 251, -262, -259, 81, 83, 82, -214, 81, -83,
	-183, 169, -250, -247, 74, -259, -259, -259, -183, -234,
	-234, 196, -29, -26, -255, 16, -25, -26, 158, 102,
	103, 155, 81, -223, 81, -232, -262, -259, 81, 29,
	171, 170, -231, -228, -231, -232, -259, -129, -190, -195,
	-259, 29, 29, -162, -190, -162, -162, 21, -162, 21,
	-162, 21, 89, -190, -162, 21, -162, 21, -162, 21,
	-162, 21, -162, 21, 30, 75, 76, 30, 78, 79,
	80, -129, -129, -223, -166, -101, -259, 89, 89, -234,
	-234, 89, 88, 88, 88, -234, -234, 89, 88, -259,
	88, -265, 182, 224, 226, 89, 89, 89, 89, 30,
	88, -266, 30, 463, 462, 464, 465, 466, 89, 30,
	89, 30, 89, -190, 81, -82, 216, 118, 205, 205,
	164, 164, 218, -101, 229, 230, 228, 21, 217, 219,
	221, 41, 82, 167, -182, 73, -96, -101, 24, -182,
	-196, -195, -188, 88, -85, -230, 12, 128, -176, -176,
	-180, -101, -230, -176, -180, -101, -180, -180, -180, -180,
	-176, -180, -195, -195, -101, -101, -101, -101, -101, -101,
	-101, -203, -203, -203, -181, 126, -180, 73, -201, 236,
	270, 435, 436, 437, 82, 347, -94, 441, 441, 441,
	441, 441, 441, -85, -85, -85, -85, -119, 98, 110,
	99, 100, -112, -120, -124, -127, 93, 128, 126, 127,
	112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -112, -112, -204, -259, 88, 144,
	-259, -111, -111, -190, -75, 22, 37, -74, -191, -196,
	-188, -70, -278, -278, -138, -74, -74, -85, -85, -129,
	88, -74, -129, 88, -74, -74, -69, 22, 37, -132,
	-133, 114, -129, -278, -112, -190, -190, -74, -75, -75,
	-74, -74, 82, -273, 317, 318, 439, -198, 199, -197,
	23, -195, 88, -122, -121, -142, -278, -143, 27, 10,
	128, 82, 19, 82, -141, 25, 26, -142, -113, -190,
	89, 92, -86, 82, 12, -79, -101, -192, 135, -196,
	-101, -161, 199, -101, 31, 82, -97, -99, -98, -100,
	63, 67, 69, 64, 65, 66, 70, -199, 23, -87,
	-3, -277, -101, -94, -279, 82, 12, 74, -279, 82,
	150, -169, -171, 82, 316, 318, 319, 73, 101, -85,
	-216, 143, -241, -240, -239, -223, -225, -226, -227, 83,
	-144, -219, 284, -214, -214, -214, -214, -214, -215, -166,
	-215, -215, -215, 81, 81, -214, -214, -214, -214, -217,
	81, -217, -217, -218, 81, -218, -252, -85, -249, -248,
	-246, -247, 175, 95, 347, -244, -141, 89, -82, -101,
	110, 73, -190, -250, -250, -250, -259, -259, 88, -259,
	88, 82, 17, -224, -223, -130, 224, -254, 199, -251,
	-245, 81, 29, -231, -232, -232, 150, -259, 82, 27,
	106, 106, 106, 106, 347, 155, 31, -223, -130, -204,
	167, -204, -204, 88, 88, -179, 471, -94, 166, 223,
	-84, 330, 88, 84, -101, -101, -101, -101, -101, 158,
	155, 207, -101, -101, -94, -101, 82, -60, 184, 179,
	-259, -101, -180, -180, -101, -180, -180, 88, -101, -190,
	-66, 317, 347, 20, -67, 20, 98, 99, 100, -120,
	-112, -112, -112, -73, 189, 109, -278, -278, -74, -74,
	-277, 150, -5, -142, -278, -278, 82, 74, 23, 12,
	12, -278, 12, 12, -278, -278, -74, -135, -133, 116,
	-85, -278, -278, 82, 82, -278, -278, -278, -278, -278,
	-272, 438, 318, -105, 71, 168, 72, -277, -197, -278,
	-157, 39, 47, 58, -85, -85, -140, -157, -173, 20,
	12, 54, 54, -106, 13, -76, -87, -79, 150, -106,
	-110, 31, 54, -3, -277, -277, -164, -168, -129, -88,
	-89, -89, -88, -89, 63, 63, 63, 68, 63, 68,
	63, -98, -195, -278, -278, -3, -161, 74, -87, -101,
	-87, -103, -195, 135, -170, -172, 320, 317, 323, -259,
	88, 82, -239, -227, 98, 110, 30, 73, 281, 95,
	171, 29, 170, -220, 285, -215, -215, -216, -259, 88,
	144, -216, -216, -216, -222, 88, -222, 89, 89, 83,
	-32, -27, -28, 32, 77, -246, -234, 88, 38, 83,
	166, 24, -101, 73, 73, 73, 16, -159, -190, 82,
	83, -131, 225, -129, 83, -190, 83, -159, -232, -191,
	-190, -277, 164, 30, 30, -130, -131, -216, -259, 473,
	472, 83, -101, -81, 214, 222, 81, 85, -261, 74,
	205, 281, 205, 208, 167, -60, -32, -101, -176, -176,
	32, 317, 450, 448, -73, 109, -112, -112, -278, -278,
	-75, -191, -138, -157, -206, 144, 256, 188, 254, 250,
	270, 261, 283, 252, 284, -204, -206, -112, -112, -112,
	-112, 344, -138, 117, -85, 115, -112, -112, 165, 165,
	165, -162, 40, 88, 88, 59, -101, -136, 14, -85,
	135, -142, -163, 73, -164, -123, -125, -124, -277, -158,
	-278, -190, -162, -106, 82, 118, -92, -91, 73, 74,
	-93, 73, -91, 63, 63, -278, -106, -87, -106, -106,
	150, 317, 321, 322, -239, 98, -112, 10, 88, 29,
	29, -216, -216, 83, 82, 83, 82, 83, 82, -184,
	384, 110, -28, -27, -234, -234, 89, -259, -101, -101,
	-101, -101, 17, 82, -223, -129, 54, -249, 83, -253,
	-254, -101, -111, -131, -160, 81, 83, -258, 347, -260,
	-259, -190, -190, -190, -101, -180, -180, 32, -259, -112,
	-278, -142, -278, -214, -214, -214, -218, -214, 244, -214,
	244, -278, -278, 20, 20, 20, 20, -277, -65, 340,
	-85, 82, 82, -277, -277, -277, -278, 88, -215, -137,
	15, 17, 28, -163, 82, -278, -278, 82, 54, 150,
	-278, -138, -168, -85, -85, 81, -85, -138, -106, -115,
	-215, 88, -215, 89, 89, 384, 30, 78, 79, 80,
	30, 75, 76, -160, -159, -190, 201, 183, -278, 82,
	-221, 347, 350, 23, -159, -257, -256, -191, 81, 74,
	-157, -215, -259, -112, -112, -112, -112, -112, -142, 88,
	-112, -112, -159, -278, -159, -159, -198, -215, -146, -151,
	-177, -85, -121, 29, -125, 54, -3, -190, -123, -190,
	-142, -159, -142, -216, -216, 83, 83, 23, 202, -101,
	-254, 351, 351, -3, 83, 82, 118, -159, -101, -278,
	-278, -278, -278, -68, 128, 347, -278, -278, -278, -278,
	-278, -278, -105, -149, 434, -154, 43, -152, -153, 44,
	-150, 45, 53, 10, -123, 150, 83, -3, -277, 81,
	-58, 347, -256, -238, -191, 88, 89, 83, -278, 345,
	70, 348, -146, 48, 262, -156, -155, 52, 44, -153,
	17, 46, 17, -164, -190, -58, -112, 198, -159, -59,
	213, 438, -261, 59, 346, 349, -147, 50, -145, 49,
	-145, -155, 17, 17, 88, 17, 88, -278, -278, 83,
	176, -258, 59, -148, 51, 73, 101, 88, 88, 88,
	-268, -269, 73, 215, 347, 73, 101, -269, 73, 11,
	10, 348, -267, 184, 179, 182, 31, -267, 349, 178,
	30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 821, 0, 557, 557, 557, 557, 557,
	557, 557, 0, 0, -2, -2, -2, 845, 38, 0,
	934, 0, 0, -2, 490, 491, 0, 493, -2, 0,
	0, 502, 1364, 1364, 552, 0, 0, 0, 0, 0,
	0, 1362, 55, 56, 508, 509, 510, 1, 3, 0,
	561, 829, 0, 0, -2, 559, 0, 0, 940, 940,
	940, 0, 86, 87, 0, 0, 0, 845, 0, 0,
	0, 0, 0, 557, 0, 935, 109, 110, 90, -2,
	114, 115, 0, 119, 368, 329, 371, 327, 357, -2,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 224, 224, 0, 0, -2, 320,
	320, 320, 0, 0, 0, 354, 942, 274, 224, 224,
	0, 224, 224, 224, 224, 0, 0, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 0, 108, 858, 0, 0, 0, 118, 39,
	35, 36, 37, 0, 0, 0, 936, 557, 0, 424,
	642, 955, 956, 1095, 1096, 1097, 1098, 1099, 1100, 1101,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111,
	1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141,
	1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161,
	1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	0, 481, 481, 0, 481, 481, 481, 481, 0, 0,
	0, 436, 0, 0, 0, 0, 478, 0, 0, 455,
	457, 0, 478, 0, 465, 481, 1365, 1365, 1365, 925,
	0, 475, 473, 487, 488, 470, 471, 489, 492, 0,
	497, 500, 951, 952, 0, 515, 0, 1172, 507, 520,
	521, 0, 553, 554, 40, 693, 652, 0, 658, 660,
	0, 695, 696, 697, 698, 699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 726, 727, 728,
	806, 807, 808, 809, 810, 811, 812, 813, 662, 663,
	803, 0, 914, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 794, 0, 763, 763, 763, 763, 763, 763,
	763, 763, 763, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 1364, 0, 530, 0, 0, 821, 51, 0,
	557, 562, 563, 864, 0, 0, 821, 1363, 0, 0,
	-2, -2, 573, 579, 580, 581, 582, 583, 558, 0,
	586, 590, 0, 0, 0, 941, 0, 0, 72, 0,
	1328, 918, -2, -2, 0, 0, 953, 954, 927, -2,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, -2, 1115, 0, 0,
	128, 129, 0, 38, 250, 0, 124, 0, 244, 197,
	858, 938, 948, 0, 0, 0, 938, 92, 116, 117,
	224, 224, 0, 118, 118, 336, 337, 338, 0, 0,
	-2, 248, 0, 321, 0, 0, 238, 238, 242, 240,
	241, 0, 0, 0, 0, 0, 0, 348, 0, 349,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 408,
	0, 225, 0, 366, 367, 275, 0, 0, 0, 0,
	346, 347, 0, 0, 943, 944, 0, 0, 224, 224,
	0, 0, 0, 0, 224, 224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 849, 0, 0, 0, 0, 0, 0, 0,
	0, -2, 0, 416, 0, 936, 0, 0, 0, 936,
	423, 0, 425, 426, 0, 0, 427, 0, 478, 478,
	476, 477, 429, 430, 431, 432, 481, 0, 0, 233,
	234, 235, 478, 481, 0, 481, 481, 481, 481, 478,
	481, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1365, 1365, 1365, 484, 481, 462, 463, 466, 467, 1366,
	1367, 468, 469, 926, 498, 501, 518, 516, 517, 519,
	511, 512, 513, 514, 0, 532, 533, 538, 0, 0,
	0, 0, 544, 545, 546, 0, 0, 549, 550, 551,
	0, 0, 0, 0, 0, 656, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 680, 681, 682, 683, 684,
	685, 686, 659, 0, 673, 0, 0, 0, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 0, 570, 0,
	0, 0, 821, 0, 0, 0, 0, 0, 0, 0,
	567, 0, 795, 0, 746, 0, 747, 755, 0, 748,
	756, 749, 757, 750, 751, 758, 752, 759, 753, 754,
	760, 0, 0, 0, 570, 570, 0, 0, 41, 522,
	523, 0, 625, 946, 531, 829, 0, 572, 867, 0,
	0, 830, 822, 823, 826, 829, 0, 595, 584, 574,
	577, 578, 560, 0, 587, 591, 0, 593, 594, 0,
	0, 70, 0, 641, 0, 597, 599, 600, 601, 623,
	0, 0, 0, 0, 66, 68, 642, 0, 1328, 924,
	0, 74, 75, 0, 0, 0, 212, 929, 930, 931,
	-2, 231, 0, 136, 204, 148, 149, 150, 197, 152,
	197, 197, 197, 197, 208, 208, 208, 208, 180, 181,
	182, 183, 184, 0, 0, 167, 197, 197, 197, 197,
	187, 188, 189, 190, 191, 192, 193, 194, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 199, 199, 199,
	201, 201, 0, 39, 0, 216, 0, 826, 0, 849,
	0, 0, 0, 949, 0, 948, 948, 948, 0, 0,
	0, 369, 330, 358, 370, 0, 333, 334, -2, 0,
	0, 320, 0, 322, 0, 232, 0, -2, 0, 0,
	0, 238, 242, 239, 242, 230, 243, 350, 803, 0,
	351, 352, 0, 388, 611, 0, 0, 0, 0, 0,
	394, 395, 396, 0, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 359, 360, 361, 362, 363, 364,
	365, 0, 0, 322, 0, 355, 0, 276, 277, 0,
	0, 280, 281, 282, 283, 0, 0, 286, 287, 288,
	289, 290, 314, 315, 316, 291, 292, 293, 294, 295,
	296, 297, 308, 309, 310, 311, 312, 313, 298, 299,
	300, 301, 302, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 385, 386, 846, 847,
	848, 0, 0, 0, 0, 0, 263, 64, 937, 0,
	643, 957, 958, 482, 483, 0, 236, 237, 481, 481,
	433, 456, 0, 481, 437, 458, 438, 440, 439, 441,
	481, 444, 479, 480, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 460, 0, 461, 0, 0, 499,
	503, 504, 505, 506, 0, 0, 535, 540, 541, 542,
	543, 555, 548, 694, 653, 654, 655, 657, 674, 0,
	676, 678, 664, 665, 689, 690, 691, 0, 0, 0,
	0, 687, 669, 0, 700, 701, 702, 703, 704, 705,
	706, 707, 708, 709, 710, 711, 714, 778, 779, 780,
	0, 712, 713, 724, 0, 0, 0, 571, 804, 0,
	-2, 0, 692, 913, 829, 0, 0, 0, 0, 697,
	806, 0, 697, 806, 0, 0, 0, 568, 569, 801,
	798, 0, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 525, 526, 528, 0, 645, 0, 626,
	0, 628, 629, 0, 947, 864, 52, 42, 0, 865,
	0, 0, 0, 0, 825, 827, 828, 864, 0, 814,
	0, 0, 650, 0, 0, 575, 48, 592, 588, 0,
	650, 0, 0, 640, 0, 0, 0, 0, 0, 0,
	630, 0, 0, 633, 0, 0, 0, 0, 624, 0,
	0, 0, -2, 0, 0, 0, 62, 63, 0, 0,
	0, 919, 73, 0, 0, 78, 79, 920, 921, 922,
	923, 0, 111, -2, 271, 130, 132, 133, 134, 125,
	135, 206, 205, 151, 208, 208, 174, 175, 212, 0,
	212, 212, 212, 0, 0, 168, 169, 170, 171, 162,
	0, 163, 164, 165, 0, 166, 249, 0, 833, 217,
	218, 220, 224, 0, 0, 245, 246, 0, 0, 101,
	0, 0, 950, 0, 0, 0, 107, 120, 121, 122,
	123, 118, 0, 0, 126, 324, 0, 0, 0, 247,
	0, 0, 226, 242, 227, 228, 0, 353, 0, 0,
	390, 391, 392, 393, 0, 0, 0, 322, 324, 212,
	0, 278, 279, 284, 285, 303, 0, 0, 0, 0,
	859, 860, 0, 863, 93, 376, 378, 377, 381, 0,
	0, 0, 0, 417, 263, 833, 0, 421, 264, 265,
	422, 478, 443, 459, 478, 435, 442, 485, 464, 495,
	539, 0, 0, 0, 547, 0, 675, 677, 679, 666,
	687, 670, 0, 667, 0, 0, 661, 729, 0, 0,
	570, 0, 821, 864, 733, 734, 0, 0, 0, 0,
	0, 771, 0, 0, 772, 0, 821, 0, 799, 0,
	0, 745, 765, 0, 0, 766, 767, 768, 769, 770,
	524, 527, 529, 605, 0, 0, 0, 0, 627, 945,
	44, 0, 0, 0, 831, 832, 824, 43, 0, 932,
	933, 815, 816, 817, 0, 585, 596, 576, 0, 829,
	907, 0, 0, 899, 0, 0, 650, 915, 0, 598,
	619, 621, 0, 616, 631, 632, 634, 0, 636, 0,
	638, 639, 602, 603, 604, 0, 650, 0, 650, 67,
	650, 69, 0, 644, 76, 77, 0, 0, 83, 213,
	214, 118, 273, 131, 137, 0, 0, 0, 141, 0,
	0, 144, 146, 147, 207, 212, 212, 176, 209, 210,
	211, 177, 178, 179, 0, 195, 0, 0, 0, 266,
	88, 837, 836, 224, 224, 219, 0, 222, 0, 198,
	0, 939, 103, 0, 0, 0, 0, 328, 609, 0,
	339, 340, 0, 323, 387, 0, 216, 0, 229, 804,
	612, 0, 0, 341, 0, 324, 344, 345, 356, 306,
	307, 304, 607, 850, 851, 852, 0, 862, 96, 0,
	0, 0, 0, 374, 0, 419, 420, 65, 481, 481,
	534, 0, 537, 0, 668, 0, 688, 671, 730, 731,
	0, 805, 829, 46, 0, 197, 197, 784, 197, 201,
	787, 197, 789, 197, 792, 0, 0, 0, 0, 0,
	0, 0, 796, 744, 802, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 869, 866, 45, 819, 0, 651,
	589, 49, 53, 0, 907, 898, 909, 911, 0, 0,
	0, 903, 0, 821, 0, 0, 613, 620, 0, 0,
	614, 0, 615, 635, 637, -2, 821, 650, 60, 61,
	0, 80, 81, 82, 272, 138, 139, 0, 142, 143,
	145, 172, 173, 208, 0, 208, 0, 202, 0, 255,
	267, 0, 834, 835, 0, 0, 221, 223, 607, 104,
	105, 106, 0, 0, 127, 325, 0, 215, 0, 0,
	412, 409, 342, 343, 0, 0, 861, 375, 0, 94,
	95, 0, 0, 380, 418, 428, 434, 536, 556, 672,
	732, 864, 735, 781, 208, 785, 786, 788, 790, 791,
	793, 737, 736, 0, 0, 0, 0, 0, 829, 0,
	800, 0, 0, 0, 0, 0, 625, 208, 889, 50,
	0, 0, 0, 54, 0, 912, 0, 0, 0, 0,
	71, 829, 916, 917, 617, 0, 622, 829, 59, 140,
	212, 196, 212, 0, 0, 268, 838, 839, 840, 841,
	842, 843, 844, 0, 331, 610, 0, 0, 389, 0,
	397, 0, 0, 0, 0, 97, 98, 0, 0, 0,
	47, 782, 783, 0, 0, 0, 0, 773, 0, 797,
	0, 0, 0, 647, 0, 0, 645, 871, 870, 883,
	896, 820, 818, 0, 910, 0, 902, 905, 901, 904,
	57, 0, 58, 185, 186, 200, 203, 0, 0, 0,
	413, 410, 411, 853, 608, 0, 0, 0, 382, 738,
	740, 739, 741, 0, 0, 0, 743, 761, 762, 646,
	648, 649, 606, 889, 0, 882, 0, -2, 891, 0,
	0, 0, 897, 0, 900, 0, 618, 853, 0, 0,
	372, 855, 99, 100, 317, 318, 319, 93, 742, 0,
	0, 0, 876, 874, 874, 884, 885, 0, 0, 892,
	0, 0, 0, 908, 906, 89, 0, 0, 0, 0,
	856, 857, 96, 774, 0, 777, 879, 0, 872, 875,
	873, 886, 0, 0, 893, 0, 895, 414, 415, 251,
	0, 379, 775, 868, 0, 877, 878, 887, 888, 894,
	252, 253, 0, 854, 0, 880, 881, 254, 0, 0,
	0, 0, 256, 258, 259, 0, 0, 257, 776, 260,
	261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 474,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:424
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:429
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:430
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:434
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:467
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:473
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:477
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:481
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:486
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:490
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:496
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:502
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:508
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:517
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:521
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:525
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:548
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:556
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:562
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:568
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:576
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:582
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:586
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:593
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:605
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:617
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:621
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:627
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:633
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:637
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:641
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:645
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:650
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:651
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:655
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:665
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:669
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:675
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:688
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:694
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:704
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:710
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:714
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:720
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:724
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:728
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:734
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:738
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:742
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:746
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:752
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:756
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:762
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:768
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:775
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:784
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].booleanUnion(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:788
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:795
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:799
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:804
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:819
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:824
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:830
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:847
		{
			yyLOCAL = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:854
		{
			yyLOCAL = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:861
		{
			yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].str)}, Options: yyDollar[4].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:866
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Fulltext: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:871
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Spatial: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:876
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Unique: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:883
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:890
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:901
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:911
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:917
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:921
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:938
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:944
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:948
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:954
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:958
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:965
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:969
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:975
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:985
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:990
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:995
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:999
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1018
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1028
		{
			yyLOCAL = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1032
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = false
			yyDollar[1].columnTypeOptionsUnion().Null = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1038
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = true
			yyDollar[1].columnTypeOptionsUnion().Null = false
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1044
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1049
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1054
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1059
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1064
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1069
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1074
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1079
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1086
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1170
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1178
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1200
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1204
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1208
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1212
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1216
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1224
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1228
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1232
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1236
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1240
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1244
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1252
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1307
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1311
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1338
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1346
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1350
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1355
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1359
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1364
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1381
		{
			yyVAL.str = ""
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1396
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1405
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1411
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1415
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1421
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1425
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1430
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1434
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1440
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1450
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1454
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1458
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1462
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1466
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1481
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1505
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1534
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1544
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1550
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1554
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1560
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1564
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1570
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1574
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1578
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnUpdate: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1582
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1588
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1594
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1600
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1606
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1610
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1614
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1618
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1622
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1644
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1657
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1663
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1667
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1677
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1687
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1691
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1695
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1699
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1703
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1707
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1711
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1715
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1719
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1723
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1727
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1731
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1735
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1739
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1743
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1747
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1751
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1755
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1759
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1763
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1767
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1771
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1775
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1779
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1783
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1787
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1791
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1795
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1799
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1844
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1850
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1854
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1859
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1863
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1872
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1876
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1880
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1888
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1894
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1902
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1908
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1912
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1916
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1920
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1924
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1928
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1932
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1936
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1940
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1944
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1948
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1952
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1956
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1960
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1964
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1968
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1972
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1976
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1980
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1984
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1988
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1992
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1998
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2008
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2012
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2016
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2020
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2024
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2028
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2032
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2036
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2040
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2046
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2052
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2059
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2066
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2072
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columnsUnion(), Select: yyDollar[9].selStmtUnion(), CheckOption: yyDollar[10].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2076
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2083
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2090
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2102
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2112
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2116
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2120
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParamsUnion(),
				},
				VindexCols: yyDollar[9].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2133
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2143
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2147
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2158
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2165
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2172
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2179
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2187
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2191
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2195
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2199
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2203
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2207
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2211
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2215
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2219
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2223
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2227
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2231
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2235
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2239
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2243
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2247
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2251
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2255
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2259
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2263
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2267
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2271
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2280
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2284
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2291
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2301
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2305
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2311
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2317
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2321
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2327
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2331
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2340
		{
			yyLOCAL = &DropView{FromTables: yyDollar[4].tableNamesUnion(), IfExists: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2344
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2350
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2354
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2359
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2365
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2369
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2373
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2377
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2381
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2385
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2389
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2393
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2397
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2401
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2405
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2409
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2413
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2417
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2421
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2425
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2429
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2433
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2437
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2441
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2445
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2449
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2453
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2457
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2461
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2465
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2469
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2473
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2477
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2481
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2485
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2489
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2493
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2497
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2501
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2506
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].str}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2510
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2514
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2518
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2522
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2527
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2541
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2545
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2549
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = "extended "
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2575
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2579
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2595
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2599
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2613
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2617
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2623
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2627
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2633
		{
			yyVAL.empty = struct{}{}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.empty = struct{}{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2661
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2673
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2677
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.empty = struct{}{}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.empty = struct{}{}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2687
		{
			yyVAL.empty = struct{}{}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.empty = struct{}{}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2705
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2709
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2713
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2717
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2721
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2725
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = yyDollar[1].str
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.str = yyDollar[1].str
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = yyDollar[1].str
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2766
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2786
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2790
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2802
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2812
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2818
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2822
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2826
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2830
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2842
		{
			yyLOCAL = &RevertMigration{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2933
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2937
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2955
		{
			setAllowComments(yylex, true)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2965
		{
			yyVAL.strs = nil
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2983
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2988
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2996
		{
			yyVAL.str = SQLCacheStr
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3001
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3005
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3009
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3018
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3023
		{
			yyVAL.strs = nil
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3027
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3031
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3035
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3039
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.str = SQLCacheStr
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.str = DistinctStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.str = DistinctStr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = StraightJoinHint
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3075
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3085
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3089
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3093
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3097
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3102
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3117
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3122
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3126
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3132
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3136
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3146
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3150
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3154
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3160
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3166
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3170
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3175
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3179
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3185
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3195
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3199
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3212
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3216
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3220
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3224
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3230
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3232
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3236
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3238
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3242
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3244
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3247
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3249
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3252
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3267
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3273
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3277
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3281
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3287
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3293
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3297
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3301
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3305
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3311
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3315
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3345
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3354
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3358
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3362
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3366
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3375
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3381
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3385
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3389
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3393
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3397
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3401
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3405
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3409
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3415
		{
			yyVAL.str = ""
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3425
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3429
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3435
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3439
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3443
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3447
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3451
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3455
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3459
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3463
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3467
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3471
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3477
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3481
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3485
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3489
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3493
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3497
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3503
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3507
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3511
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3515
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3519
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3523
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3527
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3532
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3536
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3542
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3546
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3550
		{
			yyLOCAL = ListArg(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3557
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3563
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3567
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3573
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3577
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3581
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3585
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3589
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3593
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3597
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3601
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3605
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3609
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3613
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3617
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3621
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3625
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3629
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3633
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3637
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3641
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3645
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3649
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3653
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3657
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3661
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3665
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3669
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3673
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3677
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3681
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3685
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3689
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3707
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3711
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3715
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3719
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3729
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3733
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3737
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3741
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3745
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3749
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3753
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3757
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3761
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3765
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3769
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3773
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3777
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3781
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3791
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3795
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3799
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3804
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3820
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3825
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3830
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3834
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3838
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3853
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3857
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3861
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3881
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3885
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3889
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3893
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3897
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3901
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3905
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3911
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3915
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3919
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3923
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3927
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3937
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3941
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3947
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3951
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3955
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3959
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3963
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3967
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3973
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3977
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3981
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3985
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3989
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3993
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3997
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4002
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4006
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = string("")
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4015
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4021
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4025
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4031
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4036
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4040
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4046
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4050
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4054
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4060
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4064
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4068
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4072
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4076
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4080
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4084
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4089
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4095
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4104
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4108
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4114
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4118
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4127
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4136
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4142
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4146
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4152
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4157
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4161
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4165
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4170
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4174
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4178
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4182
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4191
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4195
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4199
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4203
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4210
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4214
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4218
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4222
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4228
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4232
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4236
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = ""
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = yyDollar[3].str
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = yyDollar[2].str
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = "cascaded"
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4294
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4303
		{
			yyVAL.str = yyDollar[3].str
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4317
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4326
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4330
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4334
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4343
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4347
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4351
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = " header"
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = " manifest on"
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.str = " manifest off"
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4395
		{
			yyVAL.str = " overwrite on"
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = " overwrite off"
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4414
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4420
		{
			yyVAL.str = yyDollar[1].str
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4424
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4430
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4434
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4439
		{
			yyVAL.str = ""
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4449
		{
			yyVAL.str = yyDollar[1].str
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4453
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4467
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = ""
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = " optionally"
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4489
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4493
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4497
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4501
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4505
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4511
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4515
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4519
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4523
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4528
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4532
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4538
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4542
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4548
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4552
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4558
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4564
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4574
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4578
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4584
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4590
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4594
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4600
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4604
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4608
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4612
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4616
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4624
		{
			yyVAL.str = "charset"
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4634
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4638
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4642
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4651
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4653
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4656
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4658
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4661
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4663
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4666
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4668
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4671
		{
			yyVAL.empty = struct{}{}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4673
		{
			yyVAL.empty = struct{}{}
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.empty = struct{}{}
		}
	case 945:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4679
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4684
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4688
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4693
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4695
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4699
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4705
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4716
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4722
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4726
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4733
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5161
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5170
		{
			decNesting(yylex)
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5175
		{
			skipToEnd(yylex)
		}
	case 1365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5180
		{
			skipToEnd(yylex)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			skipToEnd(yylex)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5188
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
