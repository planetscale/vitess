// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createView             *CreateView
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const UDEFINED = 57529
const MERGE = 57530
const TEMPTABLE = 57531
const INVOKER = 57532
const LOCAL = 57533
const SECURITY = 57534
const BEGIN = 57535
const START = 57536
const TRANSACTION = 57537
const COMMIT = 57538
const ROLLBACK = 57539
const SAVEPOINT = 57540
const RELEASE = 57541
const WORK = 57542
const BIT = 57543
const TINYINT = 57544
const SMALLINT = 57545
const MEDIUMINT = 57546
const INT = 57547
const INTEGER = 57548
const BIGINT = 57549
const INTNUM = 57550
const REAL = 57551
const DOUBLE = 57552
const FLOAT_TYPE = 57553
const DECIMAL = 57554
const NUMERIC = 57555
const TIME = 57556
const TIMESTAMP = 57557
const DATETIME = 57558
const YEAR = 57559
const CHAR = 57560
const VARCHAR = 57561
const BOOL = 57562
const CHARACTER = 57563
const VARBINARY = 57564
const NCHAR = 57565
const TEXT = 57566
const TINYTEXT = 57567
const MEDIUMTEXT = 57568
const LONGTEXT = 57569
const BLOB = 57570
const TINYBLOB = 57571
const MEDIUMBLOB = 57572
const LONGBLOB = 57573
const JSON = 57574
const ENUM = 57575
const GEOMETRY = 57576
const POINT = 57577
const LINESTRING = 57578
const POLYGON = 57579
const GEOMETRYCOLLECTION = 57580
const MULTIPOINT = 57581
const MULTILINESTRING = 57582
const MULTIPOLYGON = 57583
const NULLX = 57584
const AUTO_INCREMENT = 57585
const APPROXNUM = 57586
const SIGNED = 57587
const UNSIGNED = 57588
const ZEROFILL = 57589
const COLLATION = 57590
const DATABASES = 57591
const TABLES = 57592
const VITESS_METADATA = 57593
const VSCHEMA = 57594
const FULL = 57595
const PROCESSLIST = 57596
const COLUMNS = 57597
const FIELDS = 57598
const ENGINES = 57599
const PLUGINS = 57600
const EXTENDED = 57601
const KEYSPACES = 57602
const VITESS_KEYSPACES = 57603
const VITESS_SHARDS = 57604
const VITESS_TABLETS = 57605
const NAMES = 57606
const CHARSET = 57607
const GLOBAL = 57608
const SESSION = 57609
const ISOLATION = 57610
const LEVEL = 57611
const READ = 57612
const WRITE = 57613
const ONLY = 57614
const REPEATABLE = 57615
const COMMITTED = 57616
const UNCOMMITTED = 57617
const SERIALIZABLE = 57618
const CURRENT_TIMESTAMP = 57619
const DATABASE = 57620
const CURRENT_DATE = 57621
const CURRENT_TIME = 57622
const LOCALTIME = 57623
const LOCALTIMESTAMP = 57624
const CURRENT_USER = 57625
const UTC_DATE = 57626
const UTC_TIME = 57627
const UTC_TIMESTAMP = 57628
const REPLACE = 57629
const CONVERT = 57630
const CAST = 57631
const SUBSTR = 57632
const SUBSTRING = 57633
const GROUP_CONCAT = 57634
const SEPARATOR = 57635
const TIMESTAMPADD = 57636
const TIMESTAMPDIFF = 57637
const MATCH = 57638
const AGAINST = 57639
const BOOLEAN = 57640
const LANGUAGE = 57641
const WITH = 57642
const QUERY = 57643
const EXPANSION = 57644
const UNUSED = 57645
const ARRAY = 57646
const CUME_DIST = 57647
const DESCRIPTION = 57648
const DENSE_RANK = 57649
const EMPTY = 57650
const EXCEPT = 57651
const FIRST_VALUE = 57652
const GROUPING = 57653
const GROUPS = 57654
const JSON_TABLE = 57655
const LAG = 57656
const LAST_VALUE = 57657
const LATERAL = 57658
const LEAD = 57659
const MEMBER = 57660
const NTH_VALUE = 57661
const NTILE = 57662
const OF = 57663
const OVER = 57664
const PERCENT_RANK = 57665
const RANK = 57666
const RECURSIVE = 57667
const ROW_NUMBER = 57668
const SYSTEM = 57669
const WINDOW = 57670
const ACTIVE = 57671
const ADMIN = 57672
const BUCKETS = 57673
const CLONE = 57674
const COMPONENT = 57675
const DEFINITION = 57676
const ENFORCED = 57677
const EXCLUDE = 57678
const FOLLOWING = 57679
const GEOMCOLLECTION = 57680
const GET_MASTER_PUBLIC_KEY = 57681
const HISTOGRAM = 57682
const HISTORY = 57683
const INACTIVE = 57684
const INVISIBLE = 57685
const LOCKED = 57686
const MASTER_COMPRESSION_ALGORITHMS = 57687
const MASTER_PUBLIC_KEY_PATH = 57688
const MASTER_TLS_CIPHERSUITES = 57689
const MASTER_ZSTD_COMPRESSION_LEVEL = 57690
const NESTED = 57691
const NETWORK_NAMESPACE = 57692
const NOWAIT = 57693
const NULLS = 57694
const OJ = 57695
const OLD = 57696
const OPTIONAL = 57697
const ORDINALITY = 57698
const ORGANIZATION = 57699
const OTHERS = 57700
const PATH = 57701
const PERSIST = 57702
const PERSIST_ONLY = 57703
const PRECEDING = 57704
const PRIVILEGE_CHECKS_USER = 57705
const PROCESS = 57706
const RANDOM = 57707
const REFERENCE = 57708
const REQUIRE_ROW_FORMAT = 57709
const RESOURCE = 57710
const RESPECT = 57711
const RESTART = 57712
const RETAIN = 57713
const REUSE = 57714
const ROLE = 57715
const SECONDARY = 57716
const SECONDARY_ENGINE = 57717
const SECONDARY_LOAD = 57718
const SECONDARY_UNLOAD = 57719
const SKIP = 57720
const SRID = 57721
const THREAD_PRIORITY = 57722
const TIES = 57723
const UNBOUNDED = 57724
const VCPU = 57725
const VISIBLE = 57726
const FORMAT = 57727
const TREE = 57728
const VITESS = 57729
const TRADITIONAL = 57730

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"UDEFINED",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"LOCAL",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	136, 109,
	238, 109,
	-2, 103,
	-1, 48,
	34, 345,
	155, 345,
	167, 345,
	195, 359,
	196, 359,
	-2, 347,
	-1, 53,
	157, 369,
	-2, 367,
	-1, 67,
	155, 791,
	-2, 85,
	-1, 78,
	55, 405,
	-2, 413,
	-1, 94,
	136, 109,
	238, 109,
	-2, 104,
	-1, 441,
	143, 801,
	-2, 797,
	-1, 442,
	143, 802,
	-2, 798,
	-1, 465,
	55, 406,
	-2, 418,
	-1, 466,
	55, 407,
	-2, 419,
	-1, 486,
	111, 1086,
	-2, 78,
	-1, 487,
	111, 985,
	-2, 79,
	-1, 492,
	111, 943,
	-2, 762,
	-1, 494,
	111, 1026,
	-2, 764,
	-1, 642,
	136, 109,
	238, 109,
	-2, 272,
	-1, 1030,
	143, 804,
	-2, 800,
	-1, 1124,
	73, 60,
	81, 60,
	-2, 64,
	-1, 1518,
	5, 659,
	18, 659,
	20, 659,
	32, 659,
	82, 659,
	-2, 444,
	-1, 1724,
	45, 733,
	-2, 731,
}

const yyPrivate = 57344

const yyLast = 20116

var yyAct = [...]int{

	441, 1812, 1801, 1564, 1770, 1724, 1431, 630, 1704, 385,
	1146, 1357, 1337, 1671, 1653, 1142, 458, 400, 1197, 1118,
	1498, 755, 1338, 802, 1497, 414, 1494, 1191, 1324, 1411,
	918, 1412, 656, 1155, 809, 623, 1145, 626, 1504, 1115,
	1510, 1388, 1176, 1451, 106, 675, 491, 118, 1017, 352,
	118, 77, 3, 1024, 951, 364, 371, 118, 1199, 1264,
	1404, 970, 673, 1160, 75, 840, 620, 847, 1097, 1104,
	830, 467, 812, 829, 807, 1214, 1120, 29, 1080, 1050,
	844, 452, 387, 994, 376, 619, 364, 1126, 1187, 364,
	118, 364, 627, 364, 73, 665, 837, 819, 383, 965,
	78, 118, 118, 846, 95, 96, 792, 980, 72, 1721,
	1555, 118, 768, 648, 8, 372, 118, 7, 375, 6,
	769, 1642, 1673, 1805, 1767, 1799, 1748, 1200, 1792, 74,
	1565, 488, 912, 80, 81, 82, 83, 84, 85, 1766,
	1747, 1468, 31, 32, 33, 65, 35, 36, 1202, 1594,
	798, 453, 1528, 473, 477, 848, 31, 849, 930, 65,
	35, 36, 70, 1529, 1530, 1136, 485, 37, 59, 60,
	1483, 62, 929, 374, 1482, 451, 688, 63, 1715, 717,
	716, 726, 727, 719, 720, 721, 722, 723, 724, 725,
	718, 1137, 1138, 728, 107, 108, 109, 681, 682, 633,
	632, 104, 111, 112, 113, 426, 49, 432, 433, 430,
	431, 373, 429, 428, 427, 1374, 64, 1396, 1373, 1201,
	1170, 1375, 434, 435, 1433, 107, 108, 109, 104, 444,
	64, 1635, 1750, 635, 1177, 448, 928, 1585, 449, 450,
	1583, 104, 100, 683, 101, 362, 979, 684, 681, 682,
	366, 360, 687, 107, 108, 109, 1479, 940, 1422, 1306,
	1069, 981, 982, 983, 1601, 662, 1452, 664, 1423, 1650,
	1308, 678, 1602, 1309, 1310, 676, 677, 686, 643, 1436,
	1435, 1244, 67, 42, 45, 44, 47, 939, 61, 925,
	922, 923, 937, 921, 1434, 1791, 1780, 1705, 1098, 661,
	663, 1236, 1818, 1734, 1195, 1816, 941, 1454, 1437, 1535,
	1195, 48, 69, 68, 622, 1562, 57, 58, 46, 1195,
	1696, 1358, 1360, 938, 671, 1027, 932, 935, 793, 945,
	647, 479, 1233, 118, 654, 634, 691, 660, 1235, 1478,
	641, 1164, 1164, 103, 364, 1521, 50, 51, 1520, 52,
	53, 54, 55, 364, 1519, 794, 332, 102, 1456, 1554,
	1460, 110, 1455, 1243, 1453, 1283, 1242, 364, 364, 1458,
	103, 1203, 880, 1728, 1716, 740, 741, 1617, 1457, 1527,
	927, 1329, 1293, 103, 689, 1272, 1746, 1481, 1132, 823,
	1280, 1459, 1461, 753, 1143, 107, 108, 109, 652, 107,
	108, 109, 926, 728, 718, 1591, 659, 728, 1177, 1359,
	1370, 666, 708, 1001, 638, 690, 639, 971, 966, 640,
	697, 706, 707, 705, 1076, 658, 1751, 999, 1000, 998,
	702, 703, 707, 705, 667, 668, 1707, 919, 88, 708,
	66, 1208, 705, 1814, 1508, 670, 1815, 931, 1813, 708,
	1307, 1697, 1695, 1546, 66, 1409, 1070, 672, 708, 850,
	701, 1470, 933, 1051, 1234, 738, 1232, 1163, 1163, 679,
	1051, 1065, 1290, 706, 707, 705, 364, 89, 868, 118,
	1224, 118, 118, 700, 364, 1167, 698, 799, 699, 1819,
	364, 708, 1168, 756, 1394, 646, 1736, 740, 741, 1641,
	791, 94, 816, 1793, 1640, 1785, 800, 717, 716, 726,
	727, 719, 720, 721, 722, 723, 724, 725, 718, 881,
	828, 728, 740, 741, 1560, 64, 972, 967, 1408, 488,
	1794, 657, 1786, 1484, 1220, 1221, 1222, 997, 1407, 813,
	771, 773, 775, 777, 779, 781, 782, 1796, 772, 774,
	1206, 778, 780, 795, 783, 1820, 801, 1795, 1787, 894,
	897, 898, 899, 900, 901, 902, 1778, 903, 904, 905,
	906, 907, 882, 883, 884, 885, 866, 867, 895, 1761,
	869, 1485, 870, 871, 872, 873, 874, 875, 876, 877,
	878, 879, 886, 887, 888, 889, 890, 891, 892, 893,
	721, 722, 723, 724, 725, 718, 1223, 642, 728, 649,
	650, 1228, 1225, 1216, 1226, 1219, 1666, 1215, 1638, 118,
	1605, 1217, 1218, 908, 726, 727, 719, 720, 721, 722,
	723, 724, 725, 718, 1561, 1227, 728, 934, 364, 415,
	30, 1486, 118, 1418, 1278, 1405, 964, 118, 956, 845,
	118, 950, 1277, 118, 1604, 364, 896, 1081, 1082, 74,
	364, 364, 364, 118, 364, 364, 706, 707, 705, 478,
	30, 706, 707, 705, 1472, 916, 1797, 364, 364, 462,
	1128, 914, 916, 1744, 708, 989, 991, 992, 955, 708,
	1740, 462, 990, 1078, 1257, 1258, 1259, 916, 462, 953,
	936, 717, 716, 726, 727, 719, 720, 721, 722, 723,
	724, 725, 718, 454, 1507, 728, 1702, 954, 1701, 462,
	916, 1729, 958, 959, 960, 1279, 962, 963, 1669, 1018,
	916, 1693, 706, 707, 705, 483, 462, 995, 1020, 968,
	969, 1129, 974, 946, 107, 108, 109, 633, 632, 1131,
	708, 1325, 364, 480, 481, 1077, 911, 1632, 1265, 717,
	716, 726, 727, 719, 720, 721, 722, 723, 724, 725,
	718, 1039, 1042, 728, 706, 707, 705, 1052, 1420, 973,
	1619, 462, 976, 1165, 1612, 364, 364, 1615, 462, 704,
	811, 1034, 708, 118, 996, 1066, 1067, 1552, 1551, 1028,
	1030, 1495, 706, 707, 705, 107, 108, 109, 1029, 1019,
	1507, 364, 1548, 1549, 1548, 1547, 1071, 756, 118, 1101,
	708, 364, 1089, 462, 1706, 118, 1083, 118, 107, 108,
	109, 1128, 1425, 1101, 462, 118, 118, 118, 1325, 1021,
	1022, 1060, 1061, 364, 704, 462, 364, 1550, 31, 1031,
	403, 402, 405, 406, 407, 408, 31, 364, 364, 404,
	409, 719, 720, 721, 722, 723, 724, 725, 718, 1028,
	1030, 728, 76, 1332, 442, 107, 108, 109, 1095, 1377,
	107, 108, 109, 1101, 1212, 1091, 1116, 1090, 488, 916,
	915, 488, 1129, 1162, 1378, 1333, 911, 910, 857, 856,
	1127, 1364, 1147, 1678, 1643, 1135, 1507, 1100, 1296, 1127,
	1295, 1089, 364, 455, 1178, 1179, 1180, 364, 1093, 1211,
	1127, 119, 64, 1133, 119, 1079, 1130, 944, 842, 365,
	64, 119, 31, 1125, 64, 1193, 1414, 1089, 118, 118,
	118, 118, 118, 1150, 1194, 118, 118, 1134, 1210, 118,
	364, 1644, 1645, 1646, 1517, 1807, 1089, 1101, 1779, 1655,
	365, 1624, 1603, 365, 119, 365, 118, 365, 913, 1192,
	1539, 909, 118, 118, 118, 119, 119, 1213, 118, 364,
	1382, 1188, 1182, 674, 1597, 119, 1181, 64, 92, 90,
	119, 1205, 674, 1189, 1190, 797, 1432, 1171, 1229, 1172,
	1173, 1174, 1175, 1250, 1204, 1656, 64, 1254, 30, 1304,
	1647, 1802, 1248, 1511, 1512, 1183, 1184, 1185, 1186, 1541,
	1413, 737, 739, 1514, 995, 717, 716, 726, 727, 719,
	720, 721, 722, 723, 724, 725, 718, 1495, 1476, 728,
	716, 726, 727, 719, 720, 721, 722, 723, 724, 725,
	718, 1274, 752, 728, 1648, 1649, 757, 758, 759, 760,
	761, 762, 763, 764, 1414, 767, 770, 770, 770, 776,
	770, 770, 776, 770, 784, 785, 786, 787, 788, 789,
	790, 996, 1260, 1035, 1036, 977, 948, 1041, 1044, 1045,
	1516, 118, 1349, 1347, 30, 1311, 99, 1350, 1348, 1346,
	1345, 1782, 118, 118, 118, 118, 118, 1318, 1765, 453,
	1339, 1487, 1059, 1273, 118, 1062, 1063, 1314, 118, 810,
	834, 1351, 118, 1110, 1111, 1330, 1763, 118, 118, 1289,
	1327, 118, 118, 118, 1106, 1109, 1110, 1111, 1107, 1616,
	1108, 1112, 114, 1323, 1376, 1322, 364, 1756, 1753, 1334,
	1784, 1769, 1771, 1777, 1317, 1383, 1379, 1312, 1776, 1725,
	1389, 1389, 1326, 1328, 446, 1313, 1365, 1723, 943, 1356,
	1367, 468, 443, 1341, 1342, 1340, 1344, 1419, 1343, 953,
	1413, 1400, 1352, 917, 855, 469, 1047, 803, 655, 1393,
	98, 1147, 1399, 1363, 1401, 1402, 1403, 1368, 1362, 804,
	1048, 1416, 1390, 1371, 412, 1738, 1737, 119, 814, 815,
	471, 1424, 470, 1676, 468, 1397, 1398, 1381, 365, 1391,
	1384, 1385, 1386, 1387, 1610, 1563, 1074, 365, 469, 1081,
	1082, 118, 1417, 1302, 947, 1114, 629, 364, 456, 457,
	459, 365, 365, 1406, 1789, 1788, 1321, 1774, 364, 1757,
	1609, 465, 466, 471, 1320, 470, 460, 1415, 76, 363,
	1608, 1490, 1325, 685, 1809, 1808, 74, 1284, 1281, 30,
	824, 1426, 817, 364, 1809, 1726, 1636, 674, 1075, 1018,
	455, 79, 71, 1, 351, 1800, 1427, 105, 1429, 1566,
	490, 1652, 924, 621, 674, 628, 1703, 631, 1450, 674,
	674, 674, 1410, 674, 674, 364, 1198, 1153, 1449, 1144,
	1438, 1439, 87, 617, 86, 1440, 674, 674, 1448, 669,
	118, 1441, 1469, 1463, 1152, 1447, 1151, 1462, 1694, 1395,
	364, 1169, 1634, 1540, 1055, 1392, 364, 364, 1735, 1473,
	1030, 863, 1339, 861, 862, 1496, 860, 1493, 1029, 865,
	365, 1269, 1270, 119, 864, 119, 119, 859, 365, 1499,
	344, 978, 364, 361, 365, 118, 1506, 1113, 475, 851,
	818, 1231, 1287, 1230, 920, 1448, 1553, 1166, 341, 364,
	680, 364, 346, 364, 1515, 736, 1389, 1389, 1389, 1319,
	1372, 1532, 1523, 489, 1525, 482, 1526, 91, 1501, 1303,
	1522, 1545, 445, 1775, 1524, 1596, 1754, 1752, 1722, 1672,
	1755, 1720, 461, 1543, 1544, 1531, 1783, 1534, 1768, 1162,
	1533, 1073, 806, 1607, 1147, 1489, 1147, 1536, 1537, 1538,
	1288, 377, 765, 1567, 364, 364, 364, 1049, 118, 833,
	386, 988, 1557, 1556, 1558, 1559, 717, 716, 726, 727,
	719, 720, 721, 722, 723, 724, 725, 718, 401, 398,
	728, 399, 1084, 1331, 710, 384, 1576, 378, 832, 825,
	1105, 1103, 1572, 1573, 1117, 1102, 838, 118, 1513, 118,
	1509, 831, 1088, 1480, 1581, 1068, 1305, 1600, 796, 464,
	447, 1046, 1714, 119, 717, 716, 726, 727, 719, 720,
	721, 722, 723, 724, 725, 718, 380, 1593, 728, 463,
	56, 34, 365, 368, 1421, 1207, 119, 1339, 693, 472,
	28, 119, 23, 1611, 119, 22, 21, 119, 1606, 365,
	1621, 20, 364, 19, 365, 365, 365, 119, 365, 365,
	364, 1620, 1379, 25, 18, 17, 16, 1633, 490, 97,
	93, 365, 365, 1631, 43, 41, 40, 490, 1630, 39,
	644, 38, 27, 26, 15, 14, 364, 13, 12, 11,
	10, 692, 694, 9, 5, 4, 696, 1147, 24, 754,
	1659, 2, 0, 0, 0, 1578, 1579, 0, 1580, 674,
	1637, 1582, 1639, 1584, 0, 1106, 1109, 1110, 1111, 1107,
	1657, 1108, 1112, 0, 0, 1511, 1512, 0, 0, 0,
	1665, 1654, 0, 0, 0, 0, 364, 0, 364, 0,
	364, 0, 1658, 0, 0, 364, 365, 364, 364, 364,
	118, 1675, 1685, 1677, 1686, 1688, 1689, 1684, 1499, 0,
	0, 1681, 1499, 0, 0, 0, 0, 1691, 1670, 1690,
	0, 1692, 0, 1699, 1698, 1700, 364, 118, 0, 365,
	365, 0, 0, 1708, 0, 0, 1679, 119, 1271, 0,
	0, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	821, 0, 0, 0, 0, 365, 0, 0, 490, 0,
	0, 0, 119, 0, 852, 365, 0, 0, 0, 119,
	0, 119, 1733, 1727, 1499, 0, 364, 364, 364, 119,
	119, 119, 0, 0, 0, 0, 0, 365, 1743, 0,
	365, 1742, 0, 0, 0, 107, 108, 109, 0, 364,
	834, 365, 365, 0, 1749, 118, 1339, 1335, 1336, 1758,
	0, 834, 834, 834, 834, 834, 0, 0, 709, 1762,
	0, 1764, 1654, 1147, 0, 0, 1772, 1117, 1773, 1361,
	0, 0, 0, 0, 0, 0, 834, 0, 1781, 0,
	834, 0, 0, 0, 0, 0, 0, 0, 0, 333,
	364, 0, 0, 0, 377, 0, 365, 1790, 336, 0,
	0, 365, 0, 766, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 1817, 119, 119, 119, 119, 119, 0, 0, 119,
	119, 0, 0, 119, 365, 1590, 0, 0, 805, 808,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 350,
	119, 1589, 490, 0, 0, 0, 119, 119, 119, 0,
	0, 0, 119, 365, 0, 0, 0, 0, 0, 490,
	0, 0, 0, 0, 490, 490, 490, 0, 490, 490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	334, 490, 490, 0, 0, 0, 0, 674, 0, 0,
	0, 0, 0, 0, 0, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 0, 0, 347, 337, 0,
	348, 349, 356, 0, 0, 0, 340, 342, 353, 338,
	339, 358, 357, 0, 335, 355, 354, 717, 716, 726,
	727, 719, 720, 721, 722, 723, 724, 725, 718, 0,
	0, 728, 0, 717, 716, 726, 727, 719, 720, 721,
	722, 723, 724, 725, 718, 0, 1023, 728, 490, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 0,
	0, 0, 1053, 1500, 0, 30, 119, 119, 119, 119,
	119, 0, 0, 0, 0, 0, 0, 0, 119, 1057,
	1058, 1588, 119, 0, 0, 0, 119, 0, 0, 0,
	0, 119, 119, 0, 834, 119, 119, 119, 0, 1442,
	0, 0, 0, 0, 0, 1085, 0, 0, 0, 0,
	365, 0, 0, 0, 0, 821, 0, 957, 490, 717,
	716, 726, 727, 719, 720, 721, 722, 723, 724, 725,
	718, 0, 0, 728, 0, 0, 0, 490, 0, 0,
	490, 0, 0, 0, 975, 0, 0, 0, 0, 0,
	0, 490, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 984, 985, 986, 987, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	1033, 835, 0, 717, 716, 726, 727, 719, 720, 721,
	722, 723, 724, 725, 718, 119, 0, 728, 1592, 0,
	0, 365, 0, 0, 0, 0, 628, 0, 0, 0,
	0, 1209, 365, 0, 0, 0, 0, 0, 1037, 1038,
	0, 0, 0, 0, 0, 1072, 0, 0, 116, 0,
	0, 0, 1266, 0, 0, 0, 0, 365, 367, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 1626,
	1627, 1628, 717, 716, 726, 727, 719, 720, 721, 722,
	723, 724, 725, 718, 0, 0, 728, 0, 0, 365,
	0, 625, 0, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 636, 637, 119, 0, 0, 0, 0, 0,
	0, 0, 645, 1651, 365, 0, 0, 651, 0, 0,
	365, 365, 0, 0, 0, 0, 0, 993, 0, 1141,
	1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1014, 1015, 1016, 0, 365, 0, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1500, 365, 30, 365, 1500, 365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 712, 0, 715, 0, 0, 0, 1056, 1196, 729,
	730, 731, 732, 733, 734, 735, 0, 713, 714, 711,
	717, 716, 726, 727, 719, 720, 721, 722, 723, 724,
	725, 718, 0, 0, 728, 1053, 0, 0, 365, 365,
	365, 0, 119, 0, 0, 0, 0, 0, 1500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 119, 0, 119, 0, 1267, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1275, 1276, 413, 0, 0, 0, 1282, 0, 0, 1285,
	1286, 0, 0, 0, 0, 0, 0, 1292, 0, 0,
	0, 1294, 0, 0, 1297, 1298, 1299, 1300, 1301, 0,
	0, 0, 0, 0, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 117,
	1291, 0, 359, 0, 653, 0, 0, 0, 0, 117,
	0, 1798, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 1430, 0, 0, 0, 0, 1315, 1316, 808, 0,
	1354, 1355, 490, 476, 476, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 117, 0, 0, 490, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 117, 0,
	365, 0, 365, 0, 365, 0, 0, 0, 490, 365,
	0, 365, 365, 365, 119, 0, 1261, 1262, 1263, 1477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	365, 119, 0, 0, 490, 0, 0, 1053, 0, 0,
	1503, 1505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1505, 0, 0, 0,
	827, 0, 0, 839, 0, 0, 0, 0, 0, 0,
	365, 365, 365, 490, 0, 490, 0, 628, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 365, 1445, 1446, 0, 0, 0, 119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1568, 1569,
	1570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 365, 0, 0, 0, 0, 1471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1502, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 0, 0, 0, 0,
	858, 0, 1053, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 942, 0, 0, 490, 0, 839, 0,
	0, 949, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 961, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 1443, 1444, 0, 0, 0, 0, 0, 0,
	0, 0, 1575, 0, 0, 0, 1577, 1464, 1465, 0,
	1466, 1467, 0, 0, 0, 0, 0, 1586, 1587, 0,
	0, 0, 1474, 1475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 1682, 0, 1683, 0, 0, 0, 0, 631,
	0, 631, 631, 631, 0, 1613, 1614, 476, 0, 1618,
	0, 1595, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 117, 841, 0, 0, 1629, 0, 0,
	631, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 0, 0, 0, 0, 0, 1622, 0, 0,
	1623, 0, 0, 1625, 1064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 1092,
	1741, 490, 490, 0, 0, 0, 1096, 0, 1099, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1124, 0,
	0, 1053, 0, 1759, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1687, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 377, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 0, 1710, 1711, 1712, 1713, 0,
	1717, 0, 1718, 1719, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 0, 0, 117,
	0, 1730, 117, 1731, 1732, 952, 0, 0, 0, 1237,
	1238, 1239, 1240, 1241, 0, 117, 1245, 1246, 1739, 0,
	1247, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 1249, 0, 0,
	0, 0, 0, 0, 0, 1253, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1660, 1661, 1662, 1663, 1664,
	0, 0, 0, 1667, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 952, 0, 0, 0,
	476, 476, 0, 0, 476, 476, 476, 0, 1810, 1811,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 476,
	476, 476, 476, 476, 0, 117, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 952, 117, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 117, 1122, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1803, 0, 0, 0, 0,
	117, 117, 117, 117, 117, 0, 0, 117, 117, 0,
	0, 117, 1428, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 0, 0, 0, 1251, 1252, 117, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 476, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1488, 0, 0, 0, 0, 0, 0, 0, 476,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 476, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1054, 117, 117, 117, 117, 117, 0,
	0, 0, 0, 0, 0, 0, 1353, 0, 0, 0,
	117, 0, 0, 0, 1122, 0, 0, 0, 0, 117,
	117, 0, 0, 117, 1369, 952, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1571,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1598, 0,
	1599, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 952, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1054, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1054,
	0, 0, 0, 0, 602, 590, 0, 117, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 1148, 1149, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	1380, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 1148, 1149, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 1492, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 64,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 1370, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 1094, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 493, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	494, 492, 487, 486, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 843, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 493, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	494, 492, 487, 486, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 602, 590, 0, 0, 546, 605,
	519, 536, 614, 537, 540, 577, 503, 559, 228, 534,
	0, 523, 498, 530, 499, 521, 548, 157, 552, 518,
	592, 562, 604, 192, 0, 524, 240, 579, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 611, 195, 568, 0, 281, 214, 0, 0,
	0, 550, 594, 557, 587, 545, 578, 508, 567, 606,
	535, 575, 607, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 572, 601, 532, 574, 576,
	616, 497, 569, 0, 501, 504, 613, 597, 527, 528,
	0, 0, 0, 0, 0, 0, 0, 549, 558, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 525,
	0, 566, 0, 0, 0, 505, 502, 0, 0, 0,
	0, 547, 0, 0, 0, 507, 0, 526, 585, 0,
	495, 169, 589, 596, 544, 318, 600, 542, 541, 603,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 593, 522, 531, 148, 529, 261,
	237, 307, 565, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 484, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 493, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 500,
	0, 283, 311, 331, 139, 517, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	494, 492, 487, 486, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 512, 516, 510, 511, 560, 561, 513,
	608, 609, 610, 586, 506, 0, 514, 515, 0, 591,
	598, 599, 564, 120, 130, 194, 612, 254, 165, 312,
	496, 509, 153, 520, 0, 0, 533, 538, 539, 551,
	553, 554, 555, 556, 563, 570, 571, 573, 580, 581,
	582, 583, 588, 595, 615, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 228, 0, 0, 1025, 0, 382,
	0, 0, 0, 157, 0, 381, 0, 0, 0, 192,
	0, 1026, 240, 0, 272, 147, 200, 198, 294, 162,
	158, 156, 146, 179, 205, 239, 290, 233, 425, 195,
	0, 0, 281, 214, 0, 0, 0, 0, 0, 416,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	145, 124, 225, 282, 164, 64, 0, 0, 107, 108,
	109, 403, 402, 405, 406, 407, 408, 0, 0, 141,
	404, 409, 410, 411, 0, 0, 0, 0, 379, 396,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 474, 0, 0, 0, 439, 0, 395,
	0, 0, 388, 389, 391, 390, 392, 397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 438, 0,
	0, 318, 0, 0, 436, 0, 251, 0, 286, 173,
	191, 137, 188, 121, 132, 0, 171, 224, 259, 263,
	0, 0, 0, 148, 0, 261, 237, 307, 0, 241,
	260, 196, 296, 252, 306, 319, 320, 154, 218, 313,
	291, 316, 328, 133, 151, 231, 287, 310, 278, 0,
	213, 293, 187, 201, 277, 125, 289, 304, 142, 271,
	0, 0, 0, 127, 302, 285, 211, 184, 185, 126,
	0, 257, 155, 167, 150, 227, 299, 300, 149, 330,
	134, 315, 129, 135, 314, 220, 295, 303, 212, 204,
	128, 301, 210, 203, 190, 161, 175, 249, 199, 250,
	176, 216, 215, 217, 0, 0, 0, 283, 311, 331,
	139, 0, 292, 324, 327, 0, 253, 140, 168, 160,
	248, 166, 193, 323, 325, 326, 219, 136, 178, 279,
	189, 197, 256, 329, 236, 262, 143, 309, 280, 426,
	437, 432, 433, 430, 431, 0, 429, 428, 427, 440,
	418, 419, 420, 421, 423, 0, 434, 435, 422, 120,
	130, 194, 0, 254, 165, 312, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 123, 131, 138, 144, 152, 159, 163, 170,
	174, 177, 180, 181, 182, 186, 202, 206, 207, 208,
	209, 221, 222, 223, 226, 229, 230, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	284, 288, 297, 298, 308, 317, 321, 172, 305, 322,
	228, 0, 0, 0, 0, 382, 0, 0, 0, 157,
	0, 381, 0, 0, 0, 192, 0, 0, 240, 0,
	272, 147, 200, 198, 294, 162, 158, 156, 146, 179,
	205, 239, 290, 233, 425, 195, 0, 0, 281, 214,
	0, 0, 0, 0, 0, 416, 417, 0, 0, 0,
	0, 0, 0, 1139, 0, 183, 145, 124, 225, 282,
	164, 64, 0, 0, 107, 108, 109, 403, 402, 405,
	406, 407, 408, 0, 0, 141, 404, 409, 410, 411,
	1140, 0, 0, 0, 379, 396, 0, 424, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 394, 0,
	0, 0, 0, 439, 0, 395, 0, 0, 388, 389,
	391, 390, 392, 397, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 438, 0, 0, 318, 0, 0,
	436, 0, 251, 0, 286, 173, 191, 137, 188, 121,
	132, 0, 171, 224, 259, 263, 0, 0, 0, 148,
	0, 261, 237, 307, 0, 241, 260, 196, 296, 252,
	306, 319, 320, 154, 218, 313, 291, 316, 328, 133,
	151, 231, 287, 310, 278, 0, 213, 293, 187, 201,
	277, 125, 289, 304, 142, 271, 0, 0, 0, 127,
	302, 285, 211, 184, 185, 126, 0, 257, 155, 167,
	150, 227, 299, 300, 149, 330, 134, 315, 129, 135,
	314, 220, 295, 303, 212, 204, 128, 301, 210, 203,
	190, 161, 175, 249, 199, 250, 176, 216, 215, 217,
	0, 0, 0, 283, 311, 331, 139, 0, 292, 324,
	327, 0, 253, 140, 168, 160, 248, 166, 193, 323,
	325, 326, 219, 136, 178, 279, 189, 197, 256, 329,
	236, 262, 143, 309, 280, 426, 437, 432, 433, 430,
	431, 0, 429, 428, 427, 440, 418, 419, 420, 421,
	423, 0, 434, 435, 422, 120, 130, 194, 0, 254,
	165, 312, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 123, 131,
	138, 144, 152, 159, 163, 170, 174, 177, 180, 181,
	182, 186, 202, 206, 207, 208, 209, 221, 222, 223,
	226, 229, 230, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 284, 288, 297, 298,
	308, 317, 321, 172, 305, 322, 228, 0, 0, 0,
	0, 382, 0, 0, 0, 157, 0, 381, 0, 0,
	0, 192, 0, 0, 240, 0, 272, 147, 200, 198,
	294, 162, 158, 156, 146, 179, 205, 239, 290, 233,
	425, 195, 0, 0, 281, 214, 0, 0, 0, 0,
	0, 416, 417, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 145, 124, 225, 282, 164, 64, 0, 462,
	107, 108, 109, 403, 402, 405, 406, 407, 408, 0,
	0, 141, 404, 409, 410, 411, 0, 0, 0, 0,
	379, 396, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 394, 0, 0, 0, 0, 439,
	0, 395, 0, 0, 388, 389, 391, 390, 392, 397,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	438, 0, 0, 318, 0, 0, 436, 0, 251, 0,
	286, 173, 191, 137, 188, 121, 132, 0, 171, 224,
	259, 263, 0, 0, 0, 148, 0, 261, 237, 307,
	0, 241, 260, 196, 296, 252, 306, 319, 320, 154,
	218, 313, 291, 316, 328, 133, 151, 231, 287, 310,
	278, 0, 213, 293, 187, 201, 277, 125, 289, 304,
	142, 271, 0, 0, 0, 127, 302, 285, 211, 184,
	185, 126, 0, 257, 155, 167, 150, 227, 299, 300,
	149, 330, 134, 315, 129, 135, 314, 220, 295, 303,
	212, 204, 128, 301, 210, 203, 190, 161, 175, 249,
	199, 250, 176, 216, 215, 217, 0, 0, 0, 283,
	311, 331, 139, 0, 292, 324, 327, 0, 253, 140,
	168, 160, 248, 166, 193, 323, 325, 326, 219, 136,
	178, 279, 189, 197, 256, 329, 236, 262, 143, 309,
	280, 426, 437, 432, 433, 430, 431, 0, 429, 428,
	427, 440, 418, 419, 420, 421, 423, 0, 434, 435,
	422, 120, 130, 194, 0, 254, 165, 312, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 123, 131, 138, 144, 152, 159,
	163, 170, 174, 177, 180, 181, 182, 186, 202, 206,
	207, 208, 209, 221, 222, 223, 226, 229, 230, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 284, 288, 297, 298, 308, 317, 321, 172,
	305, 322, 228, 0, 0, 0, 0, 382, 0, 0,
	0, 157, 0, 381, 0, 0, 0, 192, 0, 0,
	240, 0, 272, 147, 200, 198, 294, 162, 158, 156,
	146, 179, 205, 239, 290, 233, 425, 195, 0, 0,
	281, 214, 0, 0, 0, 0, 0, 416, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 145, 124,
	225, 282, 164, 64, 0, 0, 107, 108, 109, 403,
	402, 405, 406, 407, 408, 0, 0, 141, 404, 409,
	410, 411, 0, 0, 0, 0, 379, 396, 0, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	394, 474, 0, 0, 0, 439, 0, 395, 0, 0,
	388, 389, 391, 390, 392, 397, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 438, 0, 0, 318,
	0, 0, 436, 0, 251, 0, 286, 173, 191, 137,
	188, 121, 132, 0, 171, 224, 259, 263, 0, 0,
	0, 148, 0, 261, 237, 307, 0, 241, 260, 196,
	296, 252, 306, 319, 320, 154, 218, 313, 291, 316,
	328, 133, 151, 231, 287, 310, 278, 0, 213, 293,
	187, 201, 277, 125, 289, 304, 142, 271, 0, 0,
	0, 127, 302, 285, 211, 184, 185, 126, 0, 257,
	155, 167, 150, 227, 299, 300, 149, 330, 134, 315,
	129, 135, 314, 220, 295, 303, 212, 204, 128, 301,
	210, 203, 190, 161, 175, 249, 199, 250, 176, 216,
	215, 217, 0, 0, 0, 283, 311, 331, 139, 0,
	292, 324, 327, 0, 253, 140, 168, 160, 248, 166,
	193, 323, 325, 326, 219, 136, 178, 279, 189, 197,
	256, 329, 236, 262, 143, 309, 280, 426, 437, 432,
	433, 430, 431, 0, 429, 428, 427, 440, 418, 419,
	420, 421, 423, 0, 434, 435, 422, 120, 130, 194,
	0, 254, 165, 312, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	123, 131, 138, 144, 152, 159, 163, 170, 174, 177,
	180, 181, 182, 186, 202, 206, 207, 208, 209, 221,
	222, 223, 226, 229, 230, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 284, 288,
	297, 298, 308, 317, 321, 172, 305, 322, 228, 0,
	0, 0, 0, 382, 0, 0, 0, 157, 0, 381,
	0, 0, 0, 192, 0, 0, 240, 0, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 425, 195, 0, 0, 281, 214, 0, 0,
	0, 0, 0, 416, 417, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 145, 124, 225, 282, 164, 64,
	0, 0, 107, 108, 109, 403, 1043, 405, 406, 407,
	408, 0, 0, 141, 404, 409, 410, 411, 0, 0,
	0, 0, 379, 396, 0, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 394, 474, 0, 0,
	0, 439, 0, 395, 0, 0, 388, 389, 391, 390,
	392, 397, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 438, 0, 0, 318, 0, 0, 436, 0,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 0, 0, 0, 148, 0, 261,
	237, 307, 0, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 0,
	0, 283, 311, 331, 139, 0, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 426, 437, 432, 433, 430, 431, 0,
	429, 428, 427, 440, 418, 419, 420, 421, 423, 0,
	434, 435, 422, 120, 130, 194, 0, 254, 165, 312,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 172, 305, 322, 228, 0, 0, 0, 0, 382,
	0, 0, 0, 157, 0, 381, 0, 0, 0, 192,
	0, 0, 240, 0, 272, 147, 200, 198, 294, 162,
	158, 156, 146, 179, 205, 239, 290, 233, 425, 195,
	0, 0, 281, 214, 0, 0, 0, 0, 0, 416,
	417, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	145, 124, 225, 282, 164, 64, 0, 0, 107, 108,
	109, 403, 1040, 405, 406, 407, 408, 0, 0, 141,
	404, 409, 410, 411, 0, 0, 0, 0, 379, 396,
	0, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 394, 474, 0, 0, 0, 439, 0, 395,
	0, 0, 388, 389, 391, 390, 392, 397, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 438, 0,
	0, 318, 0, 0, 436, 0, 251, 0, 286, 173,
	191, 137, 188, 121, 132, 0, 171, 224, 259, 263,
	0, 0, 0, 148, 0, 261, 237, 307, 0, 241,
	260, 196, 296, 252, 306, 319, 320, 154, 218, 313,
	291, 316, 328, 133, 151, 231, 287, 310, 278, 0,
	213, 293, 187, 201, 277, 125, 289, 304, 142, 271,
	0, 0, 0, 127, 302, 285, 211, 184, 185, 126,
	0, 257, 155, 167, 150, 227, 299, 300, 149, 330,
	134, 315, 129, 135, 314, 220, 295, 303, 212, 204,
	128, 301, 210, 203, 190, 161, 175, 249, 199, 250,
	176, 216, 215, 217, 0, 0, 0, 283, 311, 331,
	139, 0, 292, 324, 327, 0, 253, 140, 168, 160,
	248, 166, 193, 323, 325, 326, 219, 136, 178, 279,
	189, 197, 256, 329, 236, 262, 143, 309, 280, 426,
	437, 432, 433, 430, 431, 0, 429, 428, 427, 440,
	418, 419, 420, 421, 423, 0, 434, 435, 422, 120,
	130, 194, 0, 254, 165, 312, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 123, 131, 138, 144, 152, 159, 163, 170,
	174, 177, 180, 181, 182, 186, 202, 206, 207, 208,
	209, 221, 222, 223, 226, 229, 230, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	284, 288, 297, 298, 308, 317, 321, 172, 305, 322,
	455, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 0, 0, 382, 0,
	0, 0, 157, 0, 381, 0, 0, 0, 192, 0,
	0, 240, 0, 272, 147, 200, 198, 294, 162, 158,
	156, 146, 179, 205, 239, 290, 233, 425, 195, 0,
	0, 281, 214, 0, 0, 0, 0, 0, 416, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 145,
	124, 225, 282, 164, 64, 0, 0, 107, 108, 109,
	403, 402, 405, 406, 407, 408, 0, 0, 141, 404,
	409, 410, 411, 0, 0, 0, 0, 379, 396, 0,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 394, 0, 0, 0, 0, 439, 0, 395, 0,
	0, 388, 389, 391, 390, 392, 397, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 438, 0, 0,
	318, 0, 0, 436, 0, 251, 0, 286, 173, 191,
	137, 188, 121, 132, 0, 171, 224, 259, 263, 0,
	0, 0, 148, 0, 261, 237, 307, 0, 241, 260,
	196, 296, 252, 306, 319, 320, 154, 218, 313, 291,
	316, 328, 133, 151, 231, 287, 310, 278, 0, 213,
	293, 187, 201, 277, 125, 289, 304, 142, 271, 0,
	0, 0, 127, 302, 285, 211, 184, 185, 126, 0,
	257, 155, 167, 150, 227, 299, 300, 149, 330, 134,
	315, 129, 135, 314, 220, 295, 303, 212, 204, 128,
	301, 210, 203, 190, 161, 175, 249, 199, 250, 176,
	216, 215, 217, 0, 0, 0, 283, 311, 331, 139,
	0, 292, 324, 327, 0, 253, 140, 168, 160, 248,
	166, 193, 323, 325, 326, 219, 136, 178, 279, 189,
	197, 256, 329, 236, 262, 143, 309, 280, 426, 437,
	432, 433, 430, 431, 0, 429, 428, 427, 440, 418,
	419, 420, 421, 423, 0, 434, 435, 422, 120, 130,
	194, 0, 254, 165, 312, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 123, 131, 138, 144, 152, 159, 163, 170, 174,
	177, 180, 181, 182, 186, 202, 206, 207, 208, 209,
	221, 222, 223, 226, 229, 230, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 284,
	288, 297, 298, 308, 317, 321, 172, 305, 322, 228,
	0, 0, 0, 0, 382, 0, 0, 0, 157, 0,
	381, 0, 0, 0, 192, 0, 0, 240, 0, 272,
	147, 200, 198, 294, 162, 158, 156, 146, 179, 205,
	239, 290, 233, 425, 195, 0, 0, 281, 214, 0,
	0, 0, 0, 0, 416, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 145, 124, 225, 282, 164,
	64, 0, 0, 107, 108, 109, 403, 402, 405, 406,
	407, 408, 0, 0, 141, 404, 409, 410, 411, 0,
	0, 0, 0, 379, 396, 0, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 394, 0, 0,
	0, 0, 439, 0, 395, 0, 0, 388, 389, 391,
	390, 392, 397, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 438, 0, 0, 318, 0, 0, 436,
	0, 251, 0, 286, 173, 191, 137, 188, 121, 132,
	0, 171, 224, 259, 263, 0, 0, 0, 148, 0,
	261, 237, 307, 0, 241, 260, 196, 296, 252, 306,
	319, 320, 154, 218, 313, 291, 316, 328, 133, 151,
	231, 287, 310, 278, 0, 213, 293, 187, 201, 277,
	125, 289, 304, 142, 271, 0, 0, 0, 127, 302,
	285, 211, 184, 185, 126, 0, 257, 155, 167, 150,
	227, 299, 300, 149, 330, 134, 315, 129, 135, 314,
	220, 295, 303, 212, 204, 128, 301, 210, 203, 190,
	161, 175, 249, 199, 250, 176, 216, 215, 217, 0,
	0, 0, 283, 311, 331, 139, 0, 292, 324, 327,
	0, 253, 140, 168, 160, 248, 166, 193, 323, 325,
	326, 219, 136, 178, 279, 189, 197, 256, 329, 236,
	262, 143, 309, 280, 426, 437, 432, 433, 430, 431,
	0, 429, 428, 427, 440, 418, 419, 420, 421, 423,
	0, 434, 435, 422, 120, 130, 194, 0, 254, 165,
	312, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 123, 131, 138,
	144, 152, 159, 163, 170, 174, 177, 180, 181, 182,
	186, 202, 206, 207, 208, 209, 221, 222, 223, 226,
	229, 230, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 284, 288, 297, 298, 308,
	317, 321, 172, 305, 322, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	192, 0, 0, 240, 0, 272, 147, 200, 198, 294,
	162, 158, 156, 146, 179, 205, 239, 290, 233, 425,
	195, 0, 0, 281, 214, 0, 0, 0, 0, 0,
	416, 417, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 145, 124, 225, 282, 164, 64, 0, 0, 107,
	108, 109, 403, 402, 405, 406, 407, 408, 0, 0,
	141, 404, 409, 410, 411, 0, 0, 0, 0, 0,
	396, 0, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 394, 0, 0, 0, 0, 439, 0,
	395, 0, 0, 388, 389, 391, 390, 392, 397, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 438,
	0, 0, 318, 0, 0, 436, 0, 251, 0, 286,
	173, 191, 137, 188, 121, 132, 0, 171, 224, 259,
	263, 0, 0, 0, 148, 0, 261, 237, 307, 1804,
	241, 260, 196, 296, 252, 306, 319, 320, 154, 218,
	313, 291, 316, 328, 133, 151, 231, 287, 310, 278,
	0, 213, 293, 187, 201, 277, 125, 289, 304, 142,
	271, 0, 0, 0, 127, 302, 285, 211, 184, 185,
	126, 0, 257, 155, 167, 150, 227, 299, 300, 149,
	330, 134, 315, 129, 135, 314, 220, 295, 303, 212,
	204, 128, 301, 210, 203, 190, 161, 175, 249, 199,
	250, 176, 216, 215, 217, 0, 0, 0, 283, 311,
	331, 139, 0, 292, 324, 327, 0, 253, 140, 168,
	160, 248, 166, 193, 323, 325, 326, 219, 136, 178,
	279, 189, 197, 256, 329, 236, 262, 143, 309, 280,
	426, 437, 432, 433, 430, 431, 0, 429, 428, 427,
	440, 418, 419, 420, 421, 423, 0, 434, 435, 422,
	120, 130, 194, 0, 254, 165, 312, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 123, 131, 138, 144, 152, 159, 163,
	170, 174, 177, 180, 181, 182, 186, 202, 206, 207,
	208, 209, 221, 222, 223, 226, 229, 230, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 284, 288, 297, 298, 308, 317, 321, 172, 305,
	322, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 192, 0, 0, 240,
	0, 272, 147, 200, 198, 294, 162, 158, 156, 146,
	179, 205, 239, 290, 233, 425, 195, 0, 0, 281,
	214, 0, 0, 0, 0, 0, 416, 417, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 145, 124, 225,
	282, 164, 64, 0, 462, 107, 108, 109, 403, 402,
	405, 406, 407, 408, 0, 0, 141, 404, 409, 410,
	411, 0, 0, 0, 0, 0, 396, 0, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 394,
	0, 0, 0, 0, 439, 0, 395, 0, 0, 388,
	389, 391, 390, 392, 397, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 438, 0, 0, 318, 0,
	0, 436, 0, 251, 0, 286, 173, 191, 137, 188,
	121, 132, 0, 171, 224, 259, 263, 0, 0, 0,
	148, 0, 261, 237, 307, 0, 241, 260, 196, 296,
	252, 306, 319, 320, 154, 218, 313, 291, 316, 328,
	133, 151, 231, 287, 310, 278, 0, 213, 293, 187,
	201, 277, 125, 289, 304, 142, 271, 0, 0, 0,
	127, 302, 285, 211, 184, 185, 126, 0, 257, 155,
	167, 150, 227, 299, 300, 149, 330, 134, 315, 129,
	135, 314, 220, 295, 303, 212, 204, 128, 301, 210,
	203, 190, 161, 175, 249, 199, 250, 176, 216, 215,
	217, 0, 0, 0, 283, 311, 331, 139, 0, 292,
	324, 327, 0, 253, 140, 168, 160, 248, 166, 193,
	323, 325, 326, 219, 136, 178, 279, 189, 197, 256,
	329, 236, 262, 143, 309, 280, 426, 437, 432, 433,
	430, 431, 0, 429, 428, 427, 440, 418, 419, 420,
	421, 423, 0, 434, 435, 422, 120, 130, 194, 0,
	254, 165, 312, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 123,
	131, 138, 144, 152, 159, 163, 170, 174, 177, 180,
	181, 182, 186, 202, 206, 207, 208, 209, 221, 222,
	223, 226, 229, 230, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 284, 288, 297,
	298, 308, 317, 321, 172, 305, 322, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 192, 0, 0, 240, 0, 272, 147, 200,
	198, 294, 162, 158, 156, 146, 179, 205, 239, 290,
	233, 425, 195, 0, 0, 281, 214, 0, 0, 0,
	0, 0, 416, 417, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 145, 124, 225, 282, 164, 64, 0,
	0, 107, 108, 109, 403, 402, 405, 406, 407, 408,
	0, 0, 141, 404, 409, 410, 411, 0, 0, 0,
	0, 0, 396, 0, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 394, 0, 0, 0, 0,
	439, 0, 395, 0, 0, 388, 389, 391, 390, 392,
	397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 438, 0, 0, 318, 0, 0, 436, 0, 251,
	0, 286, 173, 191, 137, 188, 121, 132, 0, 171,
	224, 259, 263, 0, 0, 0, 148, 0, 261, 237,
	307, 0, 241, 260, 196, 296, 252, 306, 319, 320,
	154, 218, 313, 291, 316, 328, 133, 151, 231, 287,
	310, 278, 0, 213, 293, 187, 201, 277, 125, 289,
	304, 142, 271, 0, 0, 0, 127, 302, 285, 211,
	184, 185, 126, 0, 257, 155, 167, 150, 227, 299,
	300, 149, 330, 134, 315, 129, 135, 314, 220, 295,
	303, 212, 204, 128, 301, 210, 203, 190, 161, 175,
	249, 199, 250, 176, 216, 215, 217, 0, 0, 0,
	283, 311, 331, 139, 0, 292, 324, 327, 0, 253,
	140, 168, 160, 248, 166, 193, 323, 325, 326, 219,
	136, 178, 279, 189, 197, 256, 329, 236, 262, 143,
	309, 280, 426, 437, 432, 433, 430, 431, 0, 429,
	428, 427, 440, 418, 419, 420, 421, 423, 0, 434,
	435, 422, 120, 130, 194, 0, 254, 165, 312, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 123, 131, 138, 144, 152,
	159, 163, 170, 174, 177, 180, 181, 182, 186, 202,
	206, 207, 208, 209, 221, 222, 223, 226, 229, 230,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 284, 288, 297, 298, 308, 317, 321,
	172, 305, 322, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 192, 0,
	0, 240, 0, 272, 147, 200, 198, 294, 162, 158,
	156, 146, 179, 205, 239, 290, 233, 0, 195, 0,
	0, 281, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 145,
	124, 225, 282, 164, 0, 0, 0, 107, 108, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 717, 716, 726, 727,
	719, 720, 721, 722, 723, 724, 725, 718, 0, 0,
	728, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	318, 0, 0, 0, 0, 251, 0, 286, 173, 191,
	137, 188, 121, 132, 0, 171, 224, 259, 263, 0,
	0, 0, 148, 0, 261, 237, 307, 0, 241, 260,
	196, 296, 252, 306, 319, 320, 154, 218, 313, 291,
	316, 328, 133, 151, 231, 287, 310, 278, 0, 213,
	293, 187, 201, 277, 125, 289, 304, 142, 271, 0,
	0, 0, 127, 302, 285, 211, 184, 185, 126, 0,
	257, 155, 167, 150, 227, 299, 300, 149, 330, 134,
	315, 129, 135, 314, 220, 295, 303, 212, 204, 128,
	301, 210, 203, 190, 161, 175, 249, 199, 250, 176,
	216, 215, 217, 0, 0, 0, 283, 311, 331, 139,
	0, 292, 324, 327, 0, 253, 140, 168, 160, 248,
	166, 193, 323, 325, 326, 219, 136, 178, 279, 189,
	197, 256, 329, 236, 262, 143, 309, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 130,
	194, 0, 254, 165, 312, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 123, 131, 138, 144, 152, 159, 163, 170, 174,
	177, 180, 181, 182, 186, 202, 206, 207, 208, 209,
	221, 222, 223, 226, 229, 230, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 284,
	288, 297, 298, 308, 317, 321, 172, 305, 322, 228,
	0, 0, 0, 820, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 192, 0, 0, 240, 0, 272,
	147, 200, 198, 294, 162, 158, 156, 146, 179, 205,
	239, 290, 233, 0, 195, 0, 0, 281, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 145, 124, 225, 282, 164,
	0, 0, 0, 107, 108, 109, 0, 822, 0, 0,
	0, 0, 0, 0, 141, 0, 0, 0, 0, 0,
	706, 707, 705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 708, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 318, 0, 0, 0,
	0, 251, 0, 286, 173, 191, 137, 188, 121, 132,
	0, 171, 224, 259, 263, 0, 0, 0, 148, 0,
	261, 237, 307, 0, 241, 260, 196, 296, 252, 306,
	319, 320, 154, 218, 313, 291, 316, 328, 133, 151,
	231, 287, 310, 278, 0, 213, 293, 187, 201, 277,
	125, 289, 304, 142, 271, 0, 0, 0, 127, 302,
	285, 211, 184, 185, 126, 0, 257, 155, 167, 150,
	227, 299, 300, 149, 330, 134, 315, 129, 135, 314,
	220, 295, 303, 212, 204, 128, 301, 210, 203, 190,
	161, 175, 249, 199, 250, 176, 216, 215, 217, 0,
	0, 0, 283, 311, 331, 139, 0, 292, 324, 327,
	0, 253, 140, 168, 160, 248, 166, 193, 323, 325,
	326, 219, 136, 178, 279, 189, 197, 256, 329, 236,
	262, 143, 309, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 130, 194, 0, 254, 165,
	312, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 123, 131, 138,
	144, 152, 159, 163, 170, 174, 177, 180, 181, 182,
	186, 202, 206, 207, 208, 209, 221, 222, 223, 226,
	229, 230, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 284, 288, 297, 298, 308,
	317, 321, 172, 305, 322, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 1164, 0, 0, 0, 0,
	192, 0, 0, 240, 0, 272, 147, 200, 198, 294,
	162, 158, 156, 146, 179, 205, 239, 290, 233, 0,
	195, 0, 0, 281, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 145, 124, 225, 282, 164, 0, 0, 0, 107,
	108, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 1163, 318, 0, 0, 0, 1159, 1156, 0, 1157,
	1158, 191, 624, 188, 121, 132, 1154, 1161, 224, 259,
	263, 0, 0, 0, 148, 0, 261, 237, 307, 0,
	241, 260, 196, 296, 252, 306, 319, 320, 154, 218,
	313, 291, 316, 328, 133, 151, 231, 287, 310, 278,
	0, 213, 293, 187, 201, 277, 125, 289, 304, 142,
	271, 0, 0, 0, 127, 302, 285, 211, 184, 185,
	126, 0, 257, 155, 167, 150, 227, 299, 300, 149,
	330, 134, 315, 129, 135, 314, 220, 295, 303, 212,
	204, 128, 301, 210, 203, 190, 161, 175, 249, 199,
	250, 176, 216, 215, 217, 0, 0, 0, 283, 311,
	331, 139, 0, 292, 324, 327, 0, 253, 140, 168,
	160, 248, 166, 193, 323, 325, 326, 219, 136, 178,
	279, 189, 197, 256, 329, 236, 262, 143, 309, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 130, 194, 0, 254, 165, 312, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 123, 131, 138, 144, 152, 159, 163,
	170, 174, 177, 180, 181, 182, 186, 202, 206, 207,
	208, 209, 221, 222, 223, 226, 229, 230, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 284, 288, 297, 298, 308, 317, 321, 172, 305,
	322, 31, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 192,
	0, 0, 240, 0, 272, 147, 200, 198, 294, 162,
	158, 156, 146, 179, 205, 239, 290, 233, 0, 195,
	0, 0, 281, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	145, 124, 225, 282, 164, 64, 0, 462, 107, 108,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 0,
	0, 318, 0, 0, 0, 0, 251, 0, 286, 173,
	191, 137, 188, 121, 132, 0, 171, 224, 259, 263,
	0, 0, 0, 148, 0, 261, 237, 307, 0, 241,
	260, 196, 296, 252, 306, 319, 320, 154, 218, 313,
	291, 316, 328, 133, 151, 231, 287, 310, 278, 0,
	213, 293, 187, 201, 277, 125, 289, 304, 142, 271,
	0, 0, 0, 127, 302, 285, 211, 184, 185, 126,
	0, 257, 155, 167, 150, 227, 299, 300, 149, 330,
	134, 315, 129, 135, 314, 220, 295, 303, 212, 204,
	128, 301, 210, 203, 190, 161, 175, 249, 199, 250,
	176, 216, 215, 217, 0, 0, 0, 283, 311, 331,
	139, 0, 292, 324, 327, 0, 253, 140, 168, 160,
	248, 166, 193, 323, 325, 326, 219, 136, 178, 279,
	189, 197, 256, 329, 236, 262, 143, 309, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	130, 194, 0, 254, 165, 312, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 123, 131, 138, 144, 152, 159, 163, 170,
	174, 177, 180, 181, 182, 186, 202, 206, 207, 208,
	209, 221, 222, 223, 226, 229, 230, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	284, 288, 297, 298, 308, 317, 321, 172, 305, 322,
	228, 0, 0, 0, 1121, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 192, 0, 0, 240, 0,
	272, 147, 200, 198, 294, 162, 158, 156, 146, 179,
	205, 239, 290, 233, 0, 195, 0, 0, 281, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 145, 124, 225, 282,
	164, 0, 0, 0, 107, 108, 109, 0, 1123, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 318, 0, 0,
	0, 0, 251, 0, 286, 173, 191, 137, 188, 121,
	132, 0, 171, 224, 259, 263, 0, 0, 0, 148,
	0, 261, 237, 307, 0, 241, 260, 196, 296, 252,
	306, 319, 320, 154, 218, 313, 291, 316, 328, 133,
	151, 231, 287, 310, 278, 0, 213, 293, 187, 201,
	277, 125, 289, 304, 142, 271, 0, 0, 0, 127,
	302, 285, 211, 184, 185, 126, 0, 257, 155, 167,
	150, 227, 299, 300, 149, 330, 134, 315, 129, 135,
	314, 220, 295, 303, 212, 204, 128, 301, 210, 203,
	190, 161, 175, 249, 199, 250, 176, 216, 215, 217,
	0, 0, 0, 283, 311, 331, 139, 0, 292, 324,
	327, 0, 253, 140, 168, 160, 248, 166, 193, 323,
	325, 326, 219, 136, 178, 279, 189, 197, 256, 329,
	236, 262, 143, 309, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 130, 194, 0, 254,
	165, 312, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 123, 131,
	138, 144, 152, 159, 163, 170, 174, 177, 180, 181,
	182, 186, 202, 206, 207, 208, 209, 221, 222, 223,
	226, 229, 230, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 284, 288, 297, 298,
	308, 317, 321, 172, 305, 322, 31, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 192, 0, 0, 240, 0, 272,
	147, 200, 198, 294, 162, 158, 156, 146, 179, 205,
	239, 290, 233, 0, 195, 0, 0, 281, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 145, 124, 225, 282, 164,
	64, 0, 0, 107, 108, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 318, 0, 0, 0,
	0, 251, 0, 286, 173, 191, 137, 188, 121, 132,
	0, 171, 224, 259, 263, 0, 0, 0, 148, 0,
	261, 237, 307, 0, 241, 260, 196, 296, 252, 306,
	319, 320, 154, 218, 313, 291, 316, 328, 133, 151,
	231, 287, 310, 278, 0, 213, 293, 187, 201, 277,
	125, 289, 304, 142, 271, 0, 0, 0, 127, 302,
	285, 211, 184, 185, 126, 0, 257, 155, 167, 150,
	227, 299, 300, 149, 330, 134, 315, 129, 135, 314,
	220, 295, 303, 212, 204, 128, 301, 210, 203, 190,
	161, 175, 249, 199, 250, 176, 216, 215, 217, 0,
	0, 0, 283, 311, 331, 139, 0, 292, 324, 327,
	0, 253, 140, 168, 160, 248, 166, 193, 323, 325,
	326, 219, 136, 178, 279, 189, 197, 256, 329, 236,
	262, 143, 309, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 130, 194, 0, 254, 165,
	312, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 123, 131, 138,
	144, 152, 159, 163, 170, 174, 177, 180, 181, 182,
	186, 202, 206, 207, 208, 209, 221, 222, 223, 226,
	229, 230, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 284, 288, 297, 298, 308,
	317, 321, 172, 305, 322, 228, 0, 0, 0, 1121,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	192, 0, 0, 240, 0, 272, 147, 200, 198, 294,
	162, 158, 156, 146, 179, 205, 239, 290, 233, 0,
	195, 0, 0, 281, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 145, 124, 225, 282, 164, 0, 0, 0, 107,
	108, 109, 0, 1123, 0, 0, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 318, 0, 0, 0, 0, 251, 0, 286,
	173, 191, 137, 188, 121, 132, 0, 171, 224, 259,
	263, 0, 0, 0, 148, 0, 261, 237, 307, 0,
	1119, 260, 196, 296, 252, 306, 319, 320, 154, 218,
	313, 291, 316, 328, 133, 151, 231, 287, 310, 278,
	0, 213, 293, 187, 201, 277, 125, 289, 304, 142,
	271, 0, 0, 0, 127, 302, 285, 211, 184, 185,
	126, 0, 257, 155, 167, 150, 227, 299, 300, 149,
	330, 134, 315, 129, 135, 314, 220, 295, 303, 212,
	204, 128, 301, 210, 203, 190, 161, 175, 249, 199,
	250, 176, 216, 215, 217, 0, 0, 0, 283, 311,
	331, 139, 0, 292, 324, 327, 0, 253, 140, 168,
	160, 248, 166, 193, 323, 325, 326, 219, 136, 178,
	279, 189, 197, 256, 329, 236, 262, 143, 309, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 130, 194, 0, 254, 165, 312, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 123, 131, 138, 144, 152, 159, 163,
	170, 174, 177, 180, 181, 182, 186, 202, 206, 207,
	208, 209, 221, 222, 223, 226, 229, 230, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 284, 288, 297, 298, 308, 317, 321, 172, 305,
	322, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 192, 0, 0, 240,
	0, 272, 147, 200, 198, 294, 162, 158, 156, 146,
	179, 205, 239, 290, 233, 0, 195, 0, 0, 281,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 145, 124, 225,
	282, 164, 0, 0, 0, 107, 108, 109, 0, 0,
	1086, 0, 0, 1087, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 318, 0,
	0, 0, 0, 251, 0, 286, 173, 191, 137, 188,
	121, 132, 0, 171, 224, 259, 263, 0, 0, 0,
	148, 0, 261, 237, 307, 0, 241, 260, 196, 296,
	252, 306, 319, 320, 154, 218, 313, 291, 316, 328,
	133, 151, 231, 287, 310, 278, 0, 213, 293, 187,
	201, 277, 125, 289, 304, 142, 271, 0, 0, 0,
	127, 302, 285, 211, 184, 185, 126, 0, 257, 155,
	167, 150, 227, 299, 300, 149, 330, 134, 315, 129,
	135, 314, 220, 295, 303, 212, 204, 128, 301, 210,
	203, 190, 161, 175, 249, 199, 250, 176, 216, 215,
	217, 0, 0, 0, 283, 311, 331, 139, 0, 292,
	324, 327, 0, 253, 140, 168, 160, 248, 166, 193,
	323, 325, 326, 219, 136, 178, 279, 189, 197, 256,
	329, 236, 262, 143, 309, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 130, 194, 0,
	254, 165, 312, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 123,
	131, 138, 144, 152, 159, 163, 170, 174, 177, 180,
	181, 182, 186, 202, 206, 207, 208, 209, 221, 222,
	223, 226, 229, 230, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 284, 288, 297,
	298, 308, 317, 321, 172, 305, 322, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 854, 0,
	0, 0, 192, 0, 0, 240, 0, 272, 147, 200,
	198, 294, 162, 158, 156, 146, 179, 205, 239, 290,
	233, 0, 195, 0, 0, 281, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 145, 124, 225, 282, 164, 0, 0,
	0, 107, 108, 109, 0, 853, 0, 0, 0, 0,
	0, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 318, 0, 0, 0, 0, 251,
	0, 286, 173, 191, 137, 188, 121, 132, 0, 171,
	224, 259, 263, 0, 0, 0, 148, 0, 261, 237,
	307, 0, 241, 260, 196, 296, 252, 306, 319, 320,
	154, 218, 313, 291, 316, 328, 133, 151, 231, 287,
	310, 278, 0, 213, 293, 187, 201, 277, 125, 289,
	304, 142, 271, 0, 0, 0, 127, 302, 285, 211,
	184, 185, 126, 0, 257, 155, 167, 150, 227, 299,
	300, 149, 330, 134, 315, 129, 135, 314, 220, 295,
	303, 212, 204, 128, 301, 210, 203, 190, 161, 175,
	249, 199, 250, 176, 216, 215, 217, 0, 0, 0,
	283, 311, 331, 139, 0, 292, 324, 327, 0, 253,
	140, 168, 160, 248, 166, 193, 323, 325, 326, 219,
	136, 178, 279, 189, 197, 256, 329, 236, 262, 143,
	309, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 130, 194, 0, 254, 165, 312, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 123, 131, 138, 144, 152,
	159, 163, 170, 174, 177, 180, 181, 182, 186, 202,
	206, 207, 208, 209, 221, 222, 223, 226, 229, 230,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 284, 288, 297, 298, 308, 317, 321,
	172, 305, 322, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 192, 0,
	0, 240, 0, 272, 147, 200, 198, 294, 162, 158,
	156, 146, 179, 205, 239, 290, 233, 0, 195, 0,
	0, 281, 214, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 145,
	124, 225, 282, 164, 0, 0, 0, 107, 108, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 0, 0, 0,
	318, 0, 0, 0, 0, 251, 0, 286, 173, 191,
	624, 188, 121, 132, 622, 171, 224, 259, 263, 0,
	0, 0, 148, 0, 261, 237, 307, 0, 241, 260,
	196, 296, 252, 306, 319, 320, 154, 218, 313, 291,
	316, 328, 133, 151, 231, 287, 310, 278, 0, 213,
	293, 187, 201, 277, 125, 289, 304, 142, 271, 0,
	0, 0, 127, 302, 285, 211, 184, 185, 126, 0,
	257, 155, 167, 150, 227, 299, 300, 149, 330, 134,
	315, 129, 135, 314, 220, 295, 303, 212, 204, 128,
	301, 210, 203, 190, 161, 175, 249, 199, 250, 176,
	216, 215, 217, 0, 0, 0, 283, 311, 331, 139,
	0, 292, 324, 327, 0, 253, 140, 168, 160, 248,
	166, 193, 323, 325, 326, 219, 136, 178, 279, 189,
	197, 256, 329, 236, 262, 143, 309, 280, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 130,
	194, 0, 254, 165, 312, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 123, 131, 138, 144, 152, 159, 163, 170, 174,
	177, 180, 181, 182, 186, 202, 206, 207, 208, 209,
	221, 222, 223, 226, 229, 230, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 284,
	288, 297, 298, 308, 317, 321, 172, 305, 322, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 192, 0, 0, 240, 0, 272,
	147, 200, 198, 294, 162, 158, 156, 146, 179, 205,
	239, 290, 233, 0, 195, 0, 0, 281, 214, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 145, 124, 225, 282, 164,
	0, 0, 462, 107, 108, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 318, 0, 0, 0,
	0, 251, 0, 286, 173, 191, 137, 188, 121, 132,
	0, 171, 224, 259, 263, 0, 0, 0, 148, 0,
	261, 237, 307, 0, 241, 260, 196, 296, 252, 306,
	319, 320, 154, 218, 313, 291, 316, 328, 133, 151,
	231, 287, 310, 278, 0, 213, 293, 187, 201, 277,
	125, 289, 304, 142, 271, 0, 0, 0, 127, 302,
	285, 211, 184, 185, 126, 0, 257, 155, 167, 150,
	227, 299, 300, 149, 330, 134, 315, 129, 135, 314,
	220, 295, 303, 212, 204, 128, 301, 210, 203, 190,
	161, 175, 249, 199, 250, 176, 216, 215, 217, 0,
	0, 0, 283, 311, 331, 139, 0, 292, 324, 327,
	0, 253, 140, 168, 160, 248, 166, 193, 323, 325,
	326, 219, 136, 178, 279, 189, 197, 256, 329, 236,
	262, 143, 309, 280, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 130, 194, 0, 254, 165,
	312, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 123, 131, 138,
	144, 152, 159, 163, 170, 174, 177, 180, 181, 182,
	186, 202, 206, 207, 208, 209, 221, 222, 223, 226,
	229, 230, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 284, 288, 297, 298, 308,
	317, 321, 172, 305, 322, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 157, 0, 0, 0, 0, 0,
	192, 0, 0, 240, 0, 272, 147, 200, 198, 294,
	162, 158, 156, 146, 179, 205, 239, 290, 233, 0,
	195, 0, 0, 281, 214, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 145, 124, 225, 282, 164, 64, 0, 0, 107,
	108, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 0,
	0, 0, 318, 0, 0, 0, 0, 251, 0, 286,
	173, 191, 137, 188, 121, 132, 0, 171, 224, 259,
	263, 0, 0, 0, 148, 0, 261, 237, 307, 0,
	241, 260, 196, 296, 252, 306, 319, 320, 154, 218,
	313, 291, 316, 328, 133, 151, 231, 287, 310, 278,
	0, 213, 293, 187, 201, 277, 125, 289, 304, 142,
	271, 0, 0, 0, 127, 302, 285, 211, 184, 185,
	126, 0, 257, 155, 167, 150, 227, 299, 300, 149,
	330, 134, 315, 129, 135, 314, 220, 295, 303, 212,
	204, 128, 301, 210, 203, 190, 161, 175, 249, 199,
	250, 176, 216, 215, 217, 0, 0, 0, 283, 311,
	331, 139, 0, 292, 324, 327, 0, 253, 140, 168,
	160, 248, 166, 193, 323, 325, 326, 219, 136, 178,
	279, 189, 197, 256, 329, 236, 262, 143, 309, 280,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	120, 130, 194, 0, 254, 165, 312, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 123, 131, 138, 144, 152, 159, 163,
	170, 174, 177, 180, 181, 182, 186, 202, 206, 207,
	208, 209, 221, 222, 223, 226, 229, 230, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 284, 288, 297, 298, 308, 317, 321, 172, 305,
	322, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 192, 0, 0, 240,
	0, 272, 147, 200, 198, 294, 162, 158, 156, 146,
	179, 205, 239, 290, 233, 0, 195, 0, 0, 281,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 145, 124, 225,
	282, 164, 0, 0, 0, 107, 108, 109, 0, 1123,
	0, 0, 0, 0, 0, 0, 141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 0, 0, 0, 318, 0,
	0, 0, 0, 251, 0, 286, 173, 191, 137, 188,
	121, 132, 0, 171, 224, 259, 263, 0, 0, 0,
	148, 0, 261, 237, 307, 0, 241, 260, 196, 296,
	252, 306, 319, 320, 154, 218, 313, 291, 316, 328,
	133, 151, 231, 287, 310, 278, 0, 213, 293, 187,
	201, 277, 125, 289, 304, 142, 271, 0, 0, 0,
	127, 302, 285, 211, 184, 185, 126, 0, 257, 155,
	167, 150, 227, 299, 300, 149, 330, 134, 315, 129,
	135, 314, 220, 295, 303, 212, 204, 128, 301, 210,
	203, 190, 161, 175, 249, 199, 250, 176, 216, 215,
	217, 0, 0, 0, 283, 311, 331, 139, 0, 292,
	324, 327, 0, 253, 140, 168, 160, 248, 166, 193,
	323, 325, 326, 219, 136, 178, 279, 189, 197, 256,
	329, 236, 262, 143, 309, 280, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 120, 130, 194, 0,
	254, 165, 312, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 123,
	131, 138, 144, 152, 159, 163, 170, 174, 177, 180,
	181, 182, 186, 202, 206, 207, 208, 209, 221, 222,
	223, 226, 229, 230, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 284, 288, 297,
	298, 308, 317, 321, 172, 305, 322, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 192, 0, 0, 240, 0, 272, 147, 200,
	198, 294, 162, 158, 156, 146, 179, 205, 239, 290,
	233, 0, 195, 0, 0, 281, 214, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 145, 124, 225, 282, 164, 0, 0,
	0, 107, 108, 109, 0, 822, 0, 0, 0, 0,
	0, 0, 141, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 318, 0, 0, 0, 0, 251,
	0, 286, 173, 191, 137, 188, 121, 132, 0, 171,
	224, 259, 263, 0, 0, 0, 148, 0, 261, 237,
	307, 0, 241, 260, 196, 296, 252, 306, 319, 320,
	154, 218, 313, 291, 316, 328, 133, 151, 231, 287,
	310, 278, 0, 213, 293, 187, 201, 277, 125, 289,
	304, 142, 271, 0, 0, 0, 127, 302, 285, 211,
	184, 185, 126, 0, 257, 155, 167, 150, 227, 299,
	300, 149, 330, 134, 315, 129, 135, 314, 220, 295,
	303, 212, 204, 128, 301, 210, 203, 190, 161, 175,
	249, 199, 250, 176, 216, 215, 217, 0, 0, 0,
	283, 311, 331, 139, 0, 292, 324, 327, 0, 253,
	140, 168, 160, 248, 166, 193, 323, 325, 326, 219,
	136, 178, 279, 189, 197, 256, 329, 236, 262, 143,
	309, 280, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 120, 130, 194, 0, 254, 165, 312, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 123, 131, 138, 144, 152,
	159, 163, 170, 174, 177, 180, 181, 182, 186, 202,
	206, 207, 208, 209, 221, 222, 223, 226, 229, 230,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 284, 288, 297, 298, 308, 317, 321,
	172, 305, 322, 836, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 192, 0, 0, 240, 0,
	272, 147, 200, 198, 294, 162, 158, 156, 146, 179,
	205, 239, 290, 233, 0, 195, 0, 0, 281, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 145, 124, 225, 282,
	164, 0, 0, 0, 107, 108, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 318, 0, 0,
	0, 0, 251, 0, 286, 173, 191, 137, 188, 121,
	132, 0, 171, 224, 259, 263, 0, 0, 0, 148,
	0, 261, 237, 307, 0, 241, 260, 196, 296, 252,
	306, 319, 320, 154, 218, 313, 291, 316, 328, 133,
	151, 231, 287, 310, 278, 0, 213, 293, 187, 201,
	277, 125, 289, 304, 142, 271, 0, 0, 0, 127,
	302, 285, 211, 184, 185, 126, 0, 257, 155, 167,
	150, 227, 299, 300, 149, 330, 134, 315, 129, 135,
	314, 220, 295, 303, 212, 204, 128, 301, 210, 203,
	190, 161, 175, 249, 199, 250, 176, 216, 215, 217,
	0, 0, 0, 283, 311, 331, 139, 0, 292, 324,
	327, 0, 253, 140, 168, 160, 248, 166, 193, 323,
	325, 326, 219, 136, 178, 279, 189, 197, 256, 329,
	236, 262, 143, 309, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 130, 194, 0, 254,
	165, 312, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 123, 131,
	138, 144, 152, 159, 163, 170, 174, 177, 180, 181,
	182, 186, 202, 206, 207, 208, 209, 221, 222, 223,
	226, 229, 230, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 284, 288, 297, 298,
	308, 317, 321, 172, 305, 322, 228, 0, 0, 0,
	0, 0, 0, 0, 826, 157, 0, 0, 0, 0,
	0, 192, 0, 0, 240, 0, 272, 147, 200, 198,
	294, 162, 158, 156, 146, 179, 205, 239, 290, 233,
	0, 195, 0, 0, 281, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 145, 124, 225, 282, 164, 0, 0, 0,
	107, 108, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 0, 318, 0, 0, 0, 0, 251, 0,
	286, 173, 191, 137, 188, 121, 132, 0, 171, 224,
	259, 263, 0, 0, 0, 148, 0, 261, 237, 307,
	0, 241, 260, 196, 296, 252, 306, 319, 320, 154,
	218, 313, 291, 316, 328, 133, 151, 231, 287, 310,
	278, 0, 213, 293, 187, 201, 277, 125, 289, 304,
	142, 271, 0, 0, 0, 127, 302, 285, 211, 184,
	185, 126, 0, 257, 155, 167, 150, 227, 299, 300,
	149, 330, 134, 315, 129, 135, 314, 220, 295, 303,
	212, 204, 128, 301, 210, 203, 190, 161, 175, 249,
	199, 250, 176, 216, 215, 217, 0, 0, 0, 283,
	311, 331, 139, 0, 292, 324, 327, 0, 253, 140,
	168, 160, 248, 166, 193, 323, 325, 326, 219, 136,
	178, 279, 189, 197, 256, 329, 236, 262, 143, 309,
	280, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 120, 130, 194, 0, 254, 165, 312, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 123, 131, 138, 144, 152, 159,
	163, 170, 174, 177, 180, 181, 182, 186, 202, 206,
	207, 208, 209, 221, 222, 223, 226, 229, 230, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 284, 288, 297, 298, 308, 317, 321, 172,
	305, 322, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 157, 0, 0, 0, 0, 0, 192, 0, 0,
	240, 0, 272, 147, 200, 198, 294, 162, 158, 156,
	146, 179, 205, 239, 290, 233, 0, 195, 0, 0,
	281, 214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 145, 124,
	225, 282, 164, 0, 0, 0, 107, 108, 109, 0,
	695, 0, 0, 0, 0, 0, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 318,
	0, 0, 0, 0, 251, 0, 286, 173, 191, 137,
	188, 121, 132, 0, 171, 224, 259, 263, 0, 0,
	0, 148, 0, 261, 237, 307, 0, 241, 260, 196,
	296, 252, 306, 319, 320, 154, 218, 313, 291, 316,
	328, 133, 151, 231, 287, 310, 278, 0, 213, 293,
	187, 201, 277, 125, 289, 304, 142, 271, 0, 0,
	0, 127, 302, 285, 211, 184, 185, 126, 0, 257,
	155, 167, 150, 227, 299, 300, 149, 330, 134, 315,
	129, 135, 314, 220, 295, 303, 212, 204, 128, 301,
	210, 203, 190, 161, 175, 249, 199, 250, 176, 216,
	215, 217, 0, 0, 0, 283, 311, 331, 139, 0,
	292, 324, 327, 0, 253, 140, 168, 160, 248, 166,
	193, 323, 325, 326, 219, 136, 178, 279, 189, 197,
	256, 329, 236, 262, 143, 309, 280, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 120, 130, 194,
	0, 254, 165, 312, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	123, 131, 138, 144, 152, 159, 163, 170, 174, 177,
	180, 181, 182, 186, 202, 206, 207, 208, 209, 221,
	222, 223, 226, 229, 230, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 284, 288,
	297, 298, 308, 317, 321, 172, 305, 322, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 157, 0, 0,
	0, 0, 0, 192, 0, 0, 240, 0, 272, 147,
	200, 198, 294, 162, 158, 156, 146, 179, 205, 239,
	290, 233, 0, 195, 0, 0, 281, 214, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 145, 124, 225, 282, 164, 0,
	0, 0, 107, 108, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 370,
	0, 169, 0, 0, 0, 318, 0, 0, 0, 0,
	251, 0, 286, 173, 191, 137, 188, 121, 132, 0,
	171, 224, 259, 263, 0, 0, 0, 148, 0, 261,
	237, 307, 0, 241, 260, 196, 296, 252, 306, 319,
	320, 154, 218, 313, 291, 316, 328, 133, 151, 231,
	287, 310, 278, 0, 213, 293, 187, 201, 277, 125,
	289, 304, 142, 271, 0, 0, 0, 127, 302, 285,
	211, 184, 185, 126, 0, 257, 155, 167, 150, 227,
	299, 300, 149, 330, 134, 315, 129, 135, 314, 220,
	295, 303, 212, 204, 128, 301, 210, 203, 190, 161,
	175, 249, 199, 250, 176, 216, 215, 217, 0, 0,
	0, 283, 311, 331, 139, 0, 292, 324, 327, 0,
	253, 140, 168, 160, 248, 166, 193, 323, 325, 326,
	219, 136, 178, 279, 189, 197, 256, 329, 236, 262,
	143, 309, 280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 120, 130, 194, 0, 254, 165, 312,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 123, 131, 138, 144,
	152, 159, 163, 170, 174, 177, 180, 181, 182, 186,
	202, 206, 207, 208, 209, 221, 222, 223, 226, 229,
	230, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 284, 288, 297, 298, 308, 317,
	321, 369, 305, 322, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 192,
	0, 0, 240, 0, 272, 147, 200, 198, 294, 162,
	158, 156, 146, 179, 205, 239, 290, 233, 0, 195,
	0, 0, 281, 214, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	145, 124, 225, 282, 164, 0, 0, 0, 107, 108,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 0, 115,
	0, 318, 0, 0, 0, 0, 251, 0, 286, 173,
	191, 137, 188, 121, 132, 0, 171, 224, 259, 263,
	0, 0, 0, 148, 0, 261, 237, 307, 0, 241,
	260, 196, 296, 252, 306, 319, 320, 154, 218, 313,
	291, 316, 328, 133, 151, 231, 287, 310, 278, 0,
	213, 293, 187, 201, 277, 125, 289, 304, 142, 271,
	0, 0, 0, 127, 302, 285, 211, 184, 185, 126,
	0, 257, 155, 167, 150, 227, 299, 300, 149, 330,
	134, 315, 129, 135, 314, 220, 295, 303, 212, 204,
	128, 301, 210, 203, 190, 161, 175, 249, 199, 250,
	176, 216, 215, 217, 0, 0, 0, 283, 311, 331,
	139, 0, 292, 324, 327, 0, 253, 140, 168, 160,
	248, 166, 193, 323, 325, 326, 219, 136, 178, 279,
	189, 197, 256, 329, 236, 262, 143, 309, 280, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	130, 194, 0, 254, 165, 312, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 123, 131, 138, 144, 152, 159, 163, 170,
	174, 177, 180, 181, 182, 186, 202, 206, 207, 208,
	209, 221, 222, 223, 226, 229, 230, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	284, 288, 297, 298, 308, 317, 321, 172, 305, 322,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 0, 0, 0, 0, 192, 0, 0, 240, 0,
	272, 147, 200, 198, 294, 162, 158, 156, 146, 179,
	205, 239, 290, 233, 0, 195, 0, 0, 281, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 145, 124, 225, 282,
	164, 0, 0, 0, 107, 108, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 0, 0, 0, 318, 0, 0,
	0, 0, 251, 0, 286, 173, 191, 137, 188, 121,
	132, 0, 171, 224, 259, 263, 0, 0, 0, 148,
	0, 261, 237, 307, 0, 241, 260, 196, 296, 252,
	306, 319, 320, 154, 218, 313, 291, 316, 328, 133,
	151, 231, 287, 310, 278, 0, 213, 293, 187, 201,
	277, 125, 289, 304, 142, 271, 0, 0, 0, 127,
	302, 285, 211, 184, 185, 126, 0, 257, 155, 167,
	150, 227, 299, 300, 149, 330, 134, 315, 129, 135,
	314, 220, 295, 303, 212, 204, 128, 301, 210, 203,
	190, 161, 175, 249, 199, 250, 176, 216, 215, 217,
	0, 0, 0, 283, 311, 331, 139, 0, 292, 324,
	327, 0, 253, 140, 168, 160, 248, 166, 193, 323,
	325, 326, 219, 136, 178, 279, 189, 197, 256, 329,
	236, 262, 143, 309, 280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 120, 130, 194, 0, 254,
	165, 312, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 123, 131,
	138, 144, 152, 159, 163, 170, 174, 177, 180, 181,
	182, 186, 202, 206, 207, 208, 209, 221, 222, 223,
	226, 229, 230, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 284, 288, 297, 298,
	308, 317, 321, 172, 305, 322,
}
var yyPact = [...]int{

	136, -1000, -298, 1261, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1242,
	926, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 358, 909,
	908, 1160, 88, 661, 207, 48, 19325, 202, 1642, 19711,
	-1000, 39, -1000, 28, 19711, 35, 18939, -1000, -1000, -56,
	-94, -1000, 10800, 1132, -1000, -1000, -1000, 75, -1000, -1000,
	-1000, -1000, -1000, 907, 1217, 1222, 1239, 654, 1192, -1000,
	9243, 9243, 173, 173, 173, 7699, -1000, -1000, 15844, 19711,
	19711, 1213, 19711, -1000, 1160, -1000, -1000, 97, -1000, -1000,
	19711, 19711, 268, -1000, -1000, 1160, 84, -1000, -1000, -1000,
	19711, 171, 661, 171, 171, 19711, -1000, 255, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19711, 661, 1157, 412, 111, 292, 292, 292,
	-1000, 290, -1000, 5299, 80, 76, -24, 1250, 81, -15,
	-1000, 412, 5299, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 179, -1000, -1000, -1000, -1000, 19711, 18553, 150, 349,
	-1000, -1000, -1000, -1000, -1000, -1000, 708, 321, -1000, 10800,
	2168, 854, 854, -1000, -1000, 231, -1000, -1000, 11958, 11958,
	11958, 11958, 11958, 11958, 11958, 11958, 11958, 11958, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 854, 250, -1000, 10414, 854, 854, 854, 854,
	854, 854, 854, 854, 10800, 854, 854, 854, 854, 854,
	854, 854, 854, 854, 854, 854, 854, 854, 854, 854,
	854, -1000, -1000, -1000, 169, 200, 169, 919, -1000, -1000,
	-1000, -154, 1242, -1000, 926, -1000, -1000, -1000, 1167, 10800,
	10800, 1242, -1000, 1064, 9243, -1000, -1000, 1149, -1000, -1000,
	-1000, -1000, 409, 1260, -1000, 12730, 246, 1258, 18167, -1000,
	16616, 17781, 847, 7299, -130, -1000, -1000, -1000, 348, 15458,
	-1000, -1000, -1000, 1153, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 817, 19711, -1000,
	-1000, 341, 661, -1000, 891, -1000, 815, -1000, 888, 926,
	808, -1000, -1000, -1000, 1152, 326, 142, 5299, 102, 133,
	103, 19711, 1160, 1128, 846, 172, 19711, 1210, 1014, 19711,
	661, -1000, 6499, -1000, 5299, 412, -1000, 561, 10800, 5299,
	5299, 5299, 19711, 5299, 5299, -1000, 559, -1000, -1000, 406,
	-1000, -1000, -1000, -1000, -1000, -1000, 5299, 5299, 405, 406,
	405, -1000, -1000, -1000, -1000, 10800, 292, -1000, 1013, -1000,
	-1000, 31, -1000, -1000, -1000, -1000, -1000, 1261, -1000, -1000,
	-1000, -142, -1000, -1000, 10800, 10800, 10800, 10800, 589, 294,
	11958, 445, 308, 11958, 11958, 11958, 11958, 11958, 11958, 11958,
	11958, 11958, 11958, 11958, 11958, 11958, 11958, 11958, 722, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 661, -1000, 1274,
	764, 764, 267, 267, 267, 267, 267, 267, 267, 267,
	267, 12344, 8085, 6499, 654, 763, 1242, 9243, 9243, 10800,
	10800, 10015, 9629, 9243, 1164, 356, 321, 19711, -1000, -1000,
	11572, -1000, -1000, -1000, -1000, -1000, 597, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19711, 19711, 9243, 9243, 9243, 9243,
	9243, -1000, 19711, 368, 661, 661, 61, 345, -1000, 1222,
	654, 1149, 1199, 1268, 303, 674, 844, -1000, 632, 1222,
	15072, 875, -1000, 1149, -1000, -1000, -1000, 19711, -1000, -1000,
	17388, -1000, -1000, 6099, 19711, 114, 19711, -1000, 876, 1072,
	-1000, -1000, -1000, 1212, 14300, 14686, 19711, 819, 668, -1000,
	-1000, 245, 6899, -130, -1000, 6899, 824, -1000, -121, -97,
	8471, 258, -1000, -1000, -1000, -1000, 4499, 13116, 701, 389,
	-43, -1000, -1000, -1000, 888, -1000, 888, 888, 888, 888,
	-4, -4, -4, -4, -1000, -1000, -1000, -1000, -1000, 906,
	902, -1000, 888, 888, 888, 888, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 901, 901, 901, 889, 889, 153, 10800,
	54, 19711, 1204, 462, 124, -1000, 19711, 326, 797, -1000,
	-1000, 451, 451, 309, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 117, -1000, 19711, 19711, 19711,
	19711, 19711, 215, 89, 19711, 19711, 839, -1000, 19711, 5299,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 321, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19711, -1000, -1000, -1000, -1000,
	412, 19711, 19711, 19711, 412, 321, -1000, 19711, 19711, -1000,
	-1000, -1000, -1000, -1000, 321, 294, 331, 340, -1000, -1000,
	598, -1000, -1000, 1372, -1000, -1000, -1000, -1000, 445, 11958,
	11958, 11958, 579, 1372, 2040, 500, 917, 267, 472, 472,
	271, 271, 271, 271, 271, 735, 735, -1000, -1000, -1000,
	597, -1000, -1000, -1000, 597, 9243, 9243, 830, 854, 242,
	-1000, 907, -1000, -1000, 1222, 741, 741, 571, 702, 378,
	1256, 741, 353, 1255, 741, 741, 9243, -1000, -1000, 363,
	-1000, 10800, 597, -1000, 239, -1000, 637, 829, 827, 741,
	597, 597, 741, 741, -1000, 1209, 936, -1000, 58, 339,
	68, 1167, -1000, -1000, 1119, -1000, 1060, 10800, 10800, 10800,
	-1000, -1000, -1000, 1167, 1234, -1000, 1092, 1090, 1249, 9243,
	16616, 1149, -1000, -1000, -1000, 238, 1249, 842, 854, -1000,
	19711, 16616, 16616, 16616, 16616, 16616, -1000, 1038, 1037, -1000,
	1031, 1030, 1059, 19711, -1000, 752, 654, 14300, 251, 854,
	-1000, 17002, -1000, -1000, 114, 828, 16616, 19711, -1000, -1000,
	16616, 19711, 5699, -1000, 824, -130, -72, -1000, -1000, -1000,
	-1000, 321, -1000, 792, 813, 4099, -1000, -1000, -1000, -1000,
	144, -1000, -1000, 900, 661, -1000, 1191, 313, 313, 312,
	661, 1190, -1000, -1000, -1000, -1000, 1159, -1000, 398, -47,
	-1000, -1000, -4, -4, -1000, -1000, 258, 1150, 258, 258,
	258, 558, 558, -1000, -1000, -1000, -1000, -1000, 450, -1000,
	-1000, -1000, 440, -1000, -1000, 891, 373, 988, 54, -1000,
	661, 326, 556, 1140, -1000, -1000, 696, -1000, 60, -1000,
	745, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19711, -1000, -1000, -1000, -1000, -1000, 19711, 923, -1000, -1000,
	-1000, -1000, 34, 90, 86, 151, -1000, 5299, -1000, 405,
	-1000, -1000, -1000, 405, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 579, 1372, 1907, -1000, 11958, 11958, -1000, -1000, 741,
	741, 9243, 6499, 1242, 1167, -1000, -1000, 129, 722, 129,
	11958, 11958, -1000, 11958, 11958, -1000, -173, 856, 351, -1000,
	10800, 566, -1000, 6499, -1000, 11958, 11958, -1000, -1000, -1000,
	-1000, -1000, -1000, 966, 19711, 183, 47, 87, -1000, -1000,
	-1000, -1000, 494, 554, 1053, 321, 321, -1000, -1000, 19711,
	-1000, -1000, -1000, -1000, 1247, 10800, -1000, 802, -1000, 4899,
	1222, 965, 19711, 854, 1261, 13515, 19711, 825, -1000, 333,
	1072, 941, 951, 1533, -1000, -1000, -1000, -1000, 1028, -1000,
	892, -1000, -1000, -1000, -1000, -1000, 654, -1000, 199, 193,
	190, 19711, -1000, 1249, 16616, 738, -1000, 738, -1000, 236,
	-1000, -1000, -1000, -135, -128, -1000, -1000, -1000, 4499, -1000,
	4499, -1000, 19711, 138, -1000, 661, 661, 661, -1000, -1000,
	-1000, 890, 947, 11958, -1000, -1000, -1000, 258, 258, -1000,
	316, -1000, -1000, -1000, 733, -1000, 731, 766, 716, 7,
	-1000, 860, 1148, 326, 326, -1000, -1000, 436, -1000, 547,
	-1000, 149, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1198, -187, 661, 19711, 19711, 19711, -1000, 19711, -1000, 412,
	412, -1000, 11958, 1372, 1372, -1000, -1000, 597, -1000, 1222,
	-1000, 597, 888, 888, -1000, 888, 889, -1000, 888, 17,
	888, 14, 597, 597, 1971, 1821, 1805, 385, 854, -161,
	-1000, 321, 10800, -1000, 1324, 903, 19711, -1000, 19711, 65,
	-1000, 882, 570, -1000, 533, -4, -1000, -1000, -1000, 1245,
	1233, 321, -1000, -1000, -1000, 1196, 729, 703, -1000, -1000,
	8857, 706, 1086, 234, 699, -1000, 1242, 19711, 10800, -1000,
	-1000, 10800, 881, -1000, 10800, -1000, -1000, -1000, 1242, 854,
	854, 854, 699, 1242, 738, -1000, -1000, 282, -1000, -1000,
	-1000, 4099, -1000, 675, -1000, 1190, -1000, -1000, -1000, 19711,
	-29, 1266, 1372, -1000, -1000, -1000, -1000, -4, 531, -4,
	416, -1000, 411, -1000, -1000, -231, -1000, -1000, 874, 980,
	-1000, -1000, 69, 854, -1000, 6499, -1000, -1000, 879, 932,
	-1000, -1000, -1000, -1000, 1372, -1000, 1167, -1000, -1000, 170,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11958, 11958,
	11958, 11958, 11958, 1222, 529, 321, 11958, 11958, -1000, -1000,
	-1000, -1000, -1000, 646, -1000, -4, -75, -1000, 10800, 10800,
	1184, -1000, 854, -1000, 850, 19711, 854, 19711, -1000, 19711,
	1222, -1000, 321, 321, 19711, 321, 16230, 19711, 19711, 13901,
	1222, -1000, 54, 649, 291, -1000, -89, 258, -1000, 258,
	636, 634, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 113, 743, -1000, 325, 19711, 19711, -1000, -1000, -1000,
	637, 637, 637, 637, 57, 597, -1000, 637, 637, -1000,
	-293, -1000, 1125, 1116, 321, 708, 1265, -1000, 854, 1261,
	230, 703, -1000, -1000, -1000, 639, 616, -1000, 616, 616,
	251, -1000, -1000, 130, 402, 1177, -1000, 1176, -1000, -1000,
	-1000, -1000, -1000, 609, -1000, 19711, 6499, 4499, 601, -1000,
	-1000, -1000, -1000, -1000, 597, 71, -192, -1000, -1000, -1000,
	-75, 185, -1000, 1097, 1095, 1232, 19711, 703, 19711, -1000,
	-1000, -1000, -1000, -1000, 19711, -1000, 492, -1000, -1000, -1000,
	113, 1073, -1000, -1000, 923, -1000, 1050, -177, -195, 1102,
	1104, 1104, 1116, 1230, 1114, 1108, -1000, 479, 633, -1000,
	878, -1000, -1000, 110, -187, -1000, 1043, -1000, 1100, 433,
	-1000, -1000, -1000, -1000, 471, -1000, 1228, 1227, -1000, 19711,
	108, -1000, -189, -1000, 431, -1000, -1000, -1000, 470, 460,
	594, 854, -193, -1000, -1000, -1000, -1000, 939, 11186, -196,
	883, -1000, 1254, 637, 597, -1000, -1000, 1264, 274, 274,
	-1000, -1000, -1000, -1000, -1000, 134, 459, -1000, -1000, -1000,
	-1000,
}
var yyPgo = [...]int{

	0, 1581, 1579, 51, 77, 81, 1578, 1576, 1575, 1574,
	119, 117, 114, 1573, 1570, 1569, 1568, 1567, 1565, 1564,
	1563, 1562, 1561, 1560, 1559, 1556, 1555, 1554, 105, 104,
	501, 1550, 1549, 1546, 1545, 1544, 1543, 1533, 1531, 1526,
	1525, 1522, 1520, 100, 1519, 1518, 1515, 1514, 1513, 1511,
	1510, 1509, 1507, 1492, 1491, 94, 1490, 59, 325, 53,
	72, 1489, 71, 1488, 1487, 1486, 1485, 1483, 1368, 1482,
	39, 73, 70, 1481, 40, 1480, 1478, 96, 1476, 1475,
	69, 1471, 1470, 2091, 1469, 65, 1468, 11, 28, 1467,
	1465, 1464, 1463, 98, 1506, 1462, 1461, 17, 1459, 1458,
	120, 1441, 83, 21, 24, 25, 20, 1440, 82, 1439,
	9, 1437, 79, 1432, 1430, 1425, 1423, 34, 1422, 74,
	78, 16, 1421, 4, 13, 1418, 1416, 1411, 1410, 1409,
	1408, 5, 1407, 1406, 1403, 1402, 1399, 23, 1398, 7,
	1397, 68, 38, 26, 12, 1395, 1393, 22, 80, 67,
	103, 1390, 1389, 1385, 669, 1382, 61, 1380, 122, 1378,
	32, 95, 495, 106, 1377, 1376, 1374, 1373, 1371, 46,
	874, 1204, 45, 97, 1370, 1369, 2372, 54, 76, 19,
	1367, 1363, 1361, 56, 62, 48, 649, 1360, 43, 1357,
	1354, 1349, 1346, 1344, 1343, 1341, 132, 1338, 1335, 1333,
	42, 15, 88, 27, 1332, 1331, 1329, 1328, 60, 85,
	1326, 1324, 66, 63, 1319, 99, 41, 30, 1314, 1313,
	1312, 1309, 36, 10, 1307, 92, 37, 58, 29, 31,
	1306, 18, 1302, 33, 35, 1296, 8, 1292, 14, 1291,
	3, 0, 1289, 6, 1287, 75, 1096, 1, 1285, 2,
	1284, 1283, 1282, 639, 1334, 87, 1281, 112,
}
var yyR1 = [...]int{

	0, 251, 252, 252, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 241, 241, 241, 244, 244, 21, 42, 3, 3,
	3, 3, 2, 2, 8, 9, 4, 5, 5, 10,
	10, 49, 49, 11, 12, 12, 12, 12, 255, 255,
	77, 77, 78, 78, 141, 141, 13, 14, 14, 150,
	150, 149, 149, 149, 151, 151, 151, 151, 186, 186,
	15, 15, 15, 15, 15, 56, 56, 243, 243, 242,
	240, 240, 239, 239, 238, 22, 24, 26, 27, 246,
	246, 25, 218, 31, 31, 30, 30, 30, 30, 32,
	32, 29, 29, 28, 28, 220, 220, 219, 219, 219,
	219, 219, 219, 209, 189, 189, 189, 189, 192, 192,
	190, 190, 190, 190, 190, 190, 190, 190, 190, 191,
	191, 191, 191, 191, 193, 193, 193, 193, 193, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 195, 195, 195, 195, 195, 195,
	195, 195, 208, 208, 196, 196, 202, 202, 203, 203,
	203, 205, 205, 206, 206, 164, 164, 164, 198, 198,
	199, 199, 204, 204, 200, 200, 200, 201, 201, 201,
	207, 207, 207, 207, 207, 197, 197, 210, 231, 231,
	230, 230, 227, 227, 227, 227, 217, 217, 224, 224,
	224, 224, 224, 224, 214, 214, 214, 215, 215, 213,
	213, 216, 216, 226, 226, 225, 211, 211, 212, 212,
	233, 233, 233, 233, 233, 234, 248, 249, 247, 247,
	247, 247, 247, 165, 165, 165, 221, 221, 221, 222,
	222, 222, 223, 223, 223, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 245, 245, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 245, 237, 235, 235, 236,
	236, 17, 23, 23, 18, 18, 18, 18, 19, 19,
	33, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 157, 157, 250, 250, 159, 159, 155, 155, 158,
	158, 156, 156, 156, 160, 160, 160, 161, 161, 187,
	187, 187, 35, 35, 37, 37, 38, 39, 39, 181,
	181, 182, 182, 40, 41, 48, 48, 48, 48, 48,
	48, 50, 50, 50, 7, 7, 7, 7, 45, 45,
	45, 6, 6, 36, 36, 36, 36, 20, 256, 43,
	44, 44, 55, 55, 55, 51, 51, 51, 54, 54,
	54, 59, 59, 61, 61, 61, 61, 61, 62, 62,
	62, 62, 62, 62, 58, 58, 60, 60, 60, 60,
	174, 174, 174, 173, 173, 69, 69, 70, 70, 71,
	71, 72, 72, 72, 109, 86, 86, 140, 140, 139,
	139, 142, 142, 73, 73, 73, 73, 74, 74, 75,
	75, 76, 76, 180, 180, 179, 179, 179, 178, 178,
	79, 79, 79, 81, 80, 80, 80, 80, 82, 82,
	84, 84, 83, 83, 85, 87, 87, 87, 87, 87,
	88, 88, 68, 68, 68, 68, 68, 68, 68, 68,
	153, 153, 90, 90, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 101, 101, 101, 101, 101, 101,
	91, 91, 91, 91, 91, 91, 91, 57, 57, 102,
	102, 102, 108, 103, 103, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 98,
	98, 98, 98, 96, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 257, 257, 100, 99, 99, 99, 99, 99,
	99, 99, 53, 53, 53, 53, 53, 185, 185, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 113, 113, 52, 52, 111, 111, 112, 114,
	114, 110, 110, 110, 93, 93, 93, 93, 93, 93,
	93, 93, 95, 95, 95, 115, 115, 116, 116, 117,
	117, 118, 118, 119, 120, 120, 120, 121, 121, 121,
	121, 232, 232, 232, 232, 232, 228, 228, 228, 228,
	229, 229, 229, 63, 63, 63, 63, 65, 65, 64,
	64, 46, 46, 47, 47, 47, 66, 66, 67, 67,
	67, 67, 137, 137, 137, 122, 122, 122, 122, 127,
	127, 127, 123, 123, 125, 125, 125, 126, 126, 126,
	124, 130, 130, 132, 132, 131, 131, 129, 129, 134,
	134, 133, 133, 128, 128, 92, 92, 92, 92, 92,
	138, 138, 138, 138, 143, 143, 104, 104, 106, 106,
	105, 107, 144, 144, 147, 145, 145, 148, 148, 148,
	148, 148, 146, 146, 146, 175, 175, 175, 152, 152,
	162, 162, 163, 163, 154, 154, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 166, 167, 167, 167, 168,
	168, 135, 135, 135, 135, 136, 136, 171, 171, 172,
	172, 176, 176, 177, 177, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 170, 170, 170, 170, 253,
	254, 183, 184, 184, 184,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 2, 3, 5, 6,
	6, 7, 4, 6, 5, 7, 8, 1, 3, 7,
	8, 1, 1, 9, 9, 8, 7, 7, 1, 1,
	1, 3, 1, 3, 0, 4, 3, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 2, 6, 5, 2, 0, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 4, 7, 4, 2, 1,
	1, 7, 4, 0, 1, 1, 1, 2, 2, 0,
	1, 5, 5, 4, 4, 2, 4, 1, 1, 3,
	4, 3, 3, 8, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 0, 1, 0, 1, 2, 0, 2,
	0, 3, 0, 1, 0, 3, 3, 0, 2, 2,
	0, 2, 1, 2, 1, 0, 2, 5, 0, 1,
	1, 2, 2, 3, 2, 3, 0, 1, 2, 3,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	10, 11, 11, 12, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 5, 6, 6, 6, 6,
	4, 4, 3, 6, 7, 5, 5, 5, 12, 7,
	5, 9, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 3, 8,
	8, 3, 3, 5, 4, 6, 5, 4, 3, 2,
	3, 4, 4, 3, 4, 4, 4, 4, 4, 4,
	3, 3, 3, 2, 7, 2, 3, 4, 5, 7,
	5, 4, 2, 4, 4, 3, 3, 5, 2, 3,
	3, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 3, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 0, 2, 4, 0, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 4, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -251, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -33, -34, -35, -37,
	-38, -39, -40, -41, -6, -36, -20, -21, -42, -4,
	-253, 6, 7, 8, -49, 10, 11, 31, -22, -24,
	-25, -26, 147, -27, 149, 148, 182, 150, 175, 70,
	210, 211, 213, 214, 215, 216, -50, 180, 181, 32,
	33, 152, 35, 41, 80, 9, 304, 146, 177, 176,
	26, -252, 406, -55, 5, -117, 16, -3, -43, -256,
	-43, -43, -43, -43, -43, -43, -218, -220, 80, 119,
	80, -140, 80, -31, -30, -29, -28, -32, 30, -246,
	154, 156, 269, 295, 153, -244, -241, 83, 84, 85,
	154, 154, 155, 156, -246, 154, -83, -176, -241, -170,
	314, 168, 346, 347, 76, 210, 224, 218, 245, 237,
	315, 348, 169, 198, 235, 238, 282, 166, 349, 265,
	272, 94, 213, 291, 350, 75, 47, 40, 178, 233,
	229, 199, 351, 323, 192, 227, 46, 28, 45, 352,
	274, 250, 44, 353, 79, 319, 276, 228, 273, 152,
	354, 171, 402, 164, 355, 251, 255, 356, 283, 48,
	357, 358, 359, 74, 222, 223, 360, 207, 167, 285,
	249, 165, 34, 277, 316, 54, 186, 286, 42, 253,
	41, 208, 361, 248, 244, 49, 362, 363, 364, 365,
	247, 221, 243, 205, 58, 257, 256, 258, 193, 281,
	240, 366, 367, 368, 172, 77, 369, 230, 19, 370,
	371, 200, 372, 52, 373, 374, 289, 181, 375, 50,
	37, 184, 376, 377, 378, 379, 380, 381, 275, 252,
	254, 161, 188, 271, 318, 382, 287, 226, 383, 173,
	185, 180, 290, 174, 384, 385, 386, 387, 388, 389,
	390, 214, 39, 391, 392, 393, 394, 209, 203, 284,
	293, 57, 78, 262, 395, 220, 163, 201, 396, 211,
	51, 195, 267, 206, 43, 241, 187, 397, 398, 231,
	232, 246, 219, 242, 212, 403, 189, 182, 399, 292,
	202, 263, 320, 194, 239, 236, 196, 400, 156, 190,
	191, 401, 404, 278, 268, 279, 280, 269, 197, 288,
	234, 264, 154, 137, 238, 282, 146, 266, 277, 278,
	274, -159, 275, 188, -187, 154, -155, 265, 268, 269,
	197, -250, -241, 276, 284, 283, 270, 280, 279, -176,
	212, -181, 217, -171, -241, -170, 215, -83, -48, 402,
	150, -183, -183, 267, 267, -183, -103, -68, -89, 103,
	-94, 30, 24, -93, -90, -110, -107, -108, 137, 138,
	140, 139, 141, 126, 127, 134, 104, 142, -98, -96,
	-97, -99, 87, 86, 95, 88, 89, 90, 91, 96,
	97, 98, -171, -176, -105, -253, 64, 65, 305, 306,
	307, 308, 313, 309, 106, 53, 294, 303, 302, 301,
	298, 299, 296, 297, 311, 312, 159, 295, 153, 132,
	304, -241, -170, 40, 154, -135, -246, -56, 160, 163,
	164, 100, -5, -4, -253, 6, 21, 22, -121, 18,
	17, -254, 82, -51, -61, 59, 60, -62, 22, 36,
	63, 61, -44, -60, 128, -68, -176, -60, -154, 158,
	-154, -154, -145, -186, 212, -148, 284, 283, -172, -146,
	-171, -169, 282, 238, 281, 151, 321, 102, 23, 25,
	260, 105, 137, 17, 106, 136, 305, 146, 68, 322,
	296, 297, 294, 300, 307, 308, 295, 266, 30, 11,
	324, 26, 176, 22, 36, 130, 148, 109, 110, 179,
	24, 177, 98, 327, 20, 71, 12, 14, 328, 329,
	15, 159, 158, 121, 155, 66, 9, 142, 27, 118,
	62, 330, 29, 331, 332, 333, 334, 64, 119, 18,
	298, 299, 32, 335, 313, 183, 132, 69, 55, 103,
	336, 337, 96, 338, 99, 72, 100, 16, 67, 38,
	339, 340, 341, 342, 120, 149, 304, 65, 343, 153,
	6, 310, 31, 175, 63, 344, 154, 108, 311, 312,
	157, 97, 5, 160, 33, 10, 70, 73, 301, 302,
	303, 53, 317, 107, 13, 345, 101, -219, 119, -209,
	-212, -171, 170, -234, 166, -83, -226, -225, -171, 23,
	-139, -171, -28, -29, 238, 136, -83, -83, 146, 148,
	151, 72, -30, 194, -23, -83, -162, 159, -241, -162,
	-162, -83, 143, -83, -241, 31, -160, 119, 13, 295,
	-241, 188, 154, 189, 156, -161, 119, -161, -161, -214,
	155, 34, 167, -184, -253, -172, 195, 196, 195, -158,
	-157, 272, 273, 267, 271, 13, 196, 267, 191, -160,
	-184, 157, -171, -45, -171, 87, -7, -3, -11, -10,
	-12, 111, -183, -183, 81, 102, 100, 101, 118, -68,
	-91, 121, 103, 119, 120, 105, 123, 122, 133, 126,
	127, 128, 129, 130, 131, 132, 124, 125, 136, 111,
	112, 113, 114, 115, 116, 117, -153, -253, -108, -253,
	144, 145, -94, -94, -94, -94, -94, -94, -94, -94,
	-94, -94, -253, 143, -2, -103, -4, -253, -253, -253,
	-253, -253, -253, -253, -253, -113, -68, -253, -257, -100,
	-253, -257, -100, -257, -100, -257, -253, -257, -100, -257,
	-100, -257, -257, -100, -253, -253, -253, -253, -253, -253,
	-253, -183, -163, 159, 155, -163, -63, 76, 304, -117,
	-3, -43, -137, 20, 32, -68, -118, -119, -68, -117,
	55, -58, -60, -62, 59, 60, 93, 12, -174, -173,
	23, -171, 87, 143, 12, -84, 27, -83, -70, -71,
	-72, -73, -86, -109, -253, -83, 12, -77, -78, -83,
	-85, -176, 81, 212, -148, -186, -150, -149, 285, 287,
	111, -175, -171, 87, 30, 31, 82, 81, -83, -189,
	-192, -194, -193, -195, -190, -191, 235, 236, 137, 239,
	241, 242, 243, 244, 245, 246, 247, 248, 249, 250,
	31, 178, 231, 232, 233, 234, 251, 252, 253, 254,
	255, 256, 257, 258, 218, 237, 315, 219, 220, 221,
	222, 223, 224, 226, 227, 228, 229, 230, -241, 80,
	82, 81, -196, 80, -3, 82, 81, 31, -217, 111,
	-166, 151, 148, 149, -237, 147, 260, 238, 94, 30,
	16, 305, 184, 320, -241, 185, -184, 190, 190, 154,
	154, 203, -83, 40, 81, 157, -77, 24, 72, -83,
	-241, -177, -176, -169, -184, -160, 87, -68, -184, -184,
	-184, -83, -184, -184, 87, -215, 12, 121, -184, -184,
	-156, 12, 121, -215, -156, -68, -161, 72, -182, 215,
	249, 403, 404, 405, -68, -68, -68, -68, -101, 96,
	103, 97, 98, -94, -102, -105, -108, 92, 121, 119,
	120, 105, -94, -94, -94, -94, -94, -94, -94, -94,
	-94, -94, -94, -94, -94, -94, -94, -185, -241, 87,
	-241, -93, -93, -171, -59, 22, 36, -58, -172, -177,
	-169, -55, -254, -254, -117, -58, -58, -68, -68, -110,
	87, -58, -110, 87, -58, -58, -54, 22, 36, -111,
	-112, 107, -110, -171, -176, -254, -94, -171, -171, -58,
	-59, -59, -58, -58, -83, 103, -241, -241, -66, 199,
	111, -121, -254, -122, 27, 10, 121, 81, 19, 81,
	-120, 25, 26, -121, -95, -171, 88, 91, -69, 81,
	12, -62, -83, -173, 128, -177, -83, -141, 184, -83,
	31, 81, -79, -81, -80, -82, 62, 66, 68, 63,
	64, 65, 69, -180, 23, -70, -3, -253, -179, 184,
	-178, 23, -176, 87, -83, -77, -255, 81, 12, 73,
	-255, 81, 143, -148, -150, 81, 286, 288, 289, 72,
	99, -68, -201, 136, -221, -222, -223, -172, 87, 88,
	-209, -210, -211, -224, 170, -233, 161, 163, 164, 160,
	-213, 171, -234, 155, 29, 82, -164, 96, 103, -205,
	263, -196, -196, -196, -196, -196, -200, 238, -200, -200,
	-200, 80, 80, -196, -196, -196, -196, -202, 80, -202,
	-202, -203, 80, -203, -234, 166, -68, -231, -230, -227,
	73, 165, 94, 317, -225, -120, 88, -46, 317, -171,
	-217, -241, 87, -183, -245, 166, 162, 170, 171, 164,
	83, 84, 85, 155, 29, 161, 163, 184, 160, -245,
	-167, -168, 157, 23, 155, 29, 184, -83, -83, -83,
	-83, -83, 151, 148, 192, -83, -83, -83, -184, -83,
	-160, -176, -176, -83, -160, -83, -171, 96, 97, 98,
	-102, -94, -94, -94, -57, 179, 102, -254, -254, -58,
	-58, -253, 143, -5, -121, -254, -254, 81, 73, 23,
	12, 12, -254, 12, 12, -254, -254, -58, -114, -112,
	109, -68, -254, 143, -254, 81, 81, -254, -254, -254,
	-254, -254, 24, -136, 73, -65, 201, 111, 202, 205,
	206, -137, 38, 46, 57, -68, -68, -119, -137, -152,
	20, 12, 53, 53, -88, 13, -60, -70, -62, 143,
	-88, -92, 31, 53, -3, -253, -253, -144, -147, -110,
	-71, -72, -72, -71, -72, 62, 62, 62, 67, 62,
	67, 62, -80, -176, -254, -254, -3, -87, 70, 158,
	71, -253, -178, -141, 73, -70, -83, -70, -85, -176,
	128, -149, -151, 290, 287, 293, -241, 87, 81, -223,
	111, -212, 80, -241, 29, -213, -213, -213, -216, -241,
	-216, 29, -198, 30, 96, -206, 264, -200, -200, -201,
	31, -201, -201, -201, -208, 87, -208, 88, 88, 82,
	-232, -228, -229, 32, 76, -227, -241, -217, 87, 37,
	82, -47, 198, 208, -241, 87, -183, -183, -83, -183,
	-171, -243, 73, 190, 260, 190, 193, 157, -184, -156,
	-156, -57, 102, -94, -94, -254, -254, -59, -172, -117,
	-137, -188, 137, 235, 178, 233, 229, 249, 240, 262,
	231, 263, -185, -188, -94, -94, -94, -94, 314, -117,
	110, -68, 108, -172, -94, -94, 72, -171, 156, 209,
	-67, 300, 87, 83, 39, 87, 87, 58, -83, -115,
	14, -68, 128, -121, -143, 72, -144, -104, -106, -105,
	-253, -138, -254, -171, -142, -171, -88, 81, 111, -75,
	-74, 72, 73, -76, 72, -74, 62, 62, -254, 155,
	155, 155, -142, -88, -70, -88, -88, 143, 287, 291,
	292, -222, -223, -226, -233, 171, -216, -216, -216, 80,
	-199, 72, -94, -201, -201, -241, 137, 82, 81, 82,
	81, 82, 81, -165, 352, 103, -229, -228, -217, -217,
	88, 87, 166, 27, -240, 317, -242, -241, -171, -171,
	-171, -83, -160, -160, -94, -254, -121, -254, -196, -196,
	-196, -203, -196, 223, -196, 223, -254, -254, 20, 20,
	20, 20, -253, -52, 310, -68, 81, 81, -83, -83,
	-64, 199, 207, 80, 84, 87, -200, -116, 15, 17,
	28, -143, 81, -254, -254, 81, 53, 143, -254, 81,
	-117, -147, -68, -68, 80, -68, -253, -253, -253, -254,
	-117, -88, 82, -139, -204, 260, 10, -200, 87, -200,
	88, 88, 352, 30, 77, 78, 79, 30, 74, 75,
	200, -253, -239, -238, -172, 80, 73, -137, -200, -241,
	-94, -94, -94, -94, -94, -121, 87, -94, -94, 82,
	-200, -124, -129, -158, -68, -103, 29, -106, 53, -3,
	-171, -104, -171, -171, -121, -139, -139, -254, -139, -139,
	-179, -121, -231, 82, -207, 161, 29, 160, -97, -201,
	-201, 82, 82, -235, -236, 184, 81, 111, -139, -83,
	-254, -254, -254, -254, -53, 121, 317, -254, -254, -254,
	-127, 402, -130, 42, -131, 43, 10, -104, 143, 82,
	-254, -254, -254, -87, 173, -197, 94, 29, 29, -254,
	81, -171, -238, -223, 82, -254, 315, 69, 318, -124,
	47, 241, -132, 51, -133, -128, 52, 17, -144, -171,
	-83, 87, -236, 53, -243, 58, 316, 319, -125, 49,
	-123, 48, -123, -131, 17, -134, 44, 45, 87, 80,
	186, -240, 58, -126, 50, 72, 99, 87, 17, 17,
	-139, 187, 317, 72, 99, 87, 87, 82, -253, 318,
	-248, -249, 72, -94, 183, 319, -249, 72, 11, 10,
	-254, -254, -247, 174, 169, 172, 31, -247, 168, 30,
	96,
}
var yyDef = [...]int{

	30, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 659,
	0, 398, 398, 398, 398, 398, 398, 398, 0, 0,
	447, -2, 0, 34, 0, 0, 0, 0, -2, 363,
	364, 0, 366, -2, 0, 0, 375, 1141, 1141, 0,
	0, 1141, 0, 0, 1139, 51, 52, -2, 381, 382,
	383, 1, 3, 0, 402, 667, 0, 0, -2, 400,
	0, 0, 774, 774, 774, 0, 80, 81, 0, 0,
	0, 0, 0, 84, -2, 105, 106, 0, 110, 98,
	0, 0, 0, 99, 100, 109, 35, 31, 32, 33,
	0, 770, 0, 770, 770, 0, 309, 482, 801, 802,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 0, 0, 0, 354, 0, 357, 357, 357,
	323, 0, 325, 1142, 0, 0, 0, 332, 0, 0,
	338, 354, 1142, 346, 360, 361, 348, 343, 344, 362,
	365, 0, 370, 373, 797, 798, 0, 388, 0, 979,
	380, 393, 394, 1141, 1141, 397, 36, 533, 492, 0,
	498, 500, 0, 535, 536, 537, 538, 539, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 565, 566,
	567, 568, 644, 645, 646, 647, 648, 649, 650, 651,
	502, 503, 641, 0, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 632, 0, 602, 602, 602, 602,
	602, 602, 602, 602, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 1141, 772, 0, 772, 683, 792, 793,
	794, 0, 659, 47, 0, 398, 403, 404, 702, 0,
	0, 659, 1140, 0, 0, -2, -2, 414, 420, 421,
	422, 423, 399, 0, 426, 430, 0, 0, 0, 775,
	0, 0, 66, 0, 1111, 755, -2, -2, 0, 0,
	799, 800, -2, 942, -2, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 869,
	870, 871, 872, 873, 874, 875, 876, 877, 878, 879,
	880, 881, 882, 883, 884, 885, 886, 887, 888, 889,
	890, 891, 892, 893, 894, 895, 896, 897, 898, 899,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 0, 0, 117,
	118, 0, 0, 239, 944, 115, 0, 233, 174, 0,
	0, 449, 107, 108, 0, 216, 0, 1142, 0, 0,
	0, 0, -2, 0, 301, 0, 0, 0, 0, 0,
	0, 308, 0, 310, 1142, 354, 313, 0, 0, 1142,
	1142, 1142, 0, 1142, 1142, 320, 0, 321, 322, 0,
	224, 225, 226, 326, 1143, 1144, 1142, 1142, 351, 0,
	351, 349, 350, 341, 342, 0, 357, 335, 336, 339,
	340, 371, 374, 391, 389, 390, 392, 384, 385, 386,
	387, 0, 395, 396, 0, 0, 0, 0, 0, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 520,
	521, 522, 523, 524, 525, 526, 499, 0, 513, 0,
	0, 0, 555, 556, 557, 558, 559, 560, 561, 562,
	563, 0, 411, 0, 0, 0, 659, 0, 0, 0,
	0, 0, 0, 0, 408, 0, 633, 0, 586, 594,
	0, 587, 595, 588, 596, 589, 0, 590, 597, 591,
	598, 592, 593, 599, 0, 0, 0, 411, 411, 0,
	0, 37, 0, 0, 0, 0, 696, 0, 86, 667,
	0, 413, 705, 0, 0, 668, 660, 661, 664, 667,
	0, 435, 424, 415, 418, 419, 401, 0, 427, 431,
	0, 433, 434, 0, 0, 64, 0, 481, 0, 437,
	439, 440, 441, 463, 0, 465, 0, 0, 0, 60,
	62, 482, 0, 1111, 761, 0, 68, 69, 0, 0,
	0, 197, 765, 766, 767, 763, 256, 0, 0, 185,
	181, 125, 126, 127, 174, 129, 174, 174, 174, 174,
	194, 194, 194, 194, 157, 158, 159, 160, 161, 0,
	0, 144, 174, 174, 174, 174, 164, 165, 166, 167,
	168, 169, 170, 171, 130, 131, 132, 133, 134, 135,
	136, 137, 138, 176, 176, 176, 178, 178, 0, 0,
	208, 0, 664, 0, 691, 448, 0, 216, 0, 217,
	1141, 0, 0, 786, 271, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 0, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 771, 0, 1142,
	307, 483, 803, 804, 311, 312, 355, 356, 314, 315,
	316, 317, 318, 319, 358, 0, 227, 228, 327, 331,
	354, 0, 0, 0, 354, 333, 334, 0, 0, 372,
	376, 377, 378, 379, 534, 493, 494, 495, 497, 514,
	0, 516, 518, 504, 505, 529, 530, 531, 0, 0,
	0, 0, 527, 509, 0, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 549, 550, 551, 554, 617, 618,
	0, 552, 553, 564, 0, 0, 0, 412, 642, 0,
	-2, 0, 532, 750, 667, 0, 0, 0, 0, 537,
	644, 0, 537, 644, 0, 0, 0, 409, 410, 639,
	636, 0, 0, 641, 0, 603, 0, 0, 0, 0,
	0, 0, 0, 0, 95, 0, 795, 97, 687, 0,
	0, 702, 48, 38, 0, 703, 0, 0, 0, 0,
	663, 665, 666, 702, 0, 652, 0, 0, 490, 0,
	0, 416, 44, 432, 428, 0, 490, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 470, 0, 0, 473,
	0, 0, 0, 0, 464, 0, 0, 0, 485, 1048,
	466, 0, 468, 469, -2, 0, 0, 0, 58, 59,
	0, 0, 0, 756, 67, 0, 0, 72, 73, 757,
	758, 759, 760, 0, 102, 257, 259, 262, 263, 264,
	119, 121, 122, 0, 0, 237, 1058, 1093, 980, 231,
	231, 978, 244, 229, 230, 116, 188, 186, 0, 183,
	182, 128, 194, 194, 151, 152, 197, 0, 197, 197,
	197, 0, 0, 145, 146, 147, 148, 139, 0, 140,
	141, 142, 0, 143, 238, 0, 0, 671, 209, 210,
	0, 216, 0, 0, 234, 235, 0, 83, 693, 450,
	0, 113, 114, 265, 1141, 282, 283, 284, 285, 286,
	287, 288, 289, 290, 291, 292, 293, 294, 295, 1141,
	0, 1141, 787, 788, 789, 790, 0, 87, 275, 277,
	276, 280, 0, 0, 0, 0, 302, 1142, 306, 351,
	328, 352, 353, 351, 330, 337, 368, 515, 517, 519,
	506, 527, 510, 0, 507, 0, 0, 501, 569, 0,
	0, 411, 0, 659, 702, 573, 574, 0, 0, 0,
	0, 0, 610, 0, 0, 611, 0, 659, 0, 637,
	0, 0, 585, 0, 604, 0, 0, 605, 606, 607,
	608, 609, 773, 0, 0, 0, 0, 0, 684, 685,
	686, 40, 0, 0, 0, 669, 670, 662, 39, 0,
	768, 769, 653, 654, 655, 0, 425, 436, 417, 0,
	667, 744, 0, 0, 736, 0, 0, 490, 752, 0,
	438, 459, 461, 0, 456, 471, 472, 474, 0, 476,
	0, 478, 479, 442, 443, 444, 0, 445, 0, 0,
	0, 0, 467, 490, 0, 490, 61, 490, 63, 0,
	484, 70, 71, 0, 0, 77, 198, 199, 0, 260,
	0, 120, 0, 0, 218, 231, 231, 231, 222, 232,
	223, 0, 190, 0, 187, 124, 184, 197, 197, 153,
	0, 154, 155, 156, 0, 172, 0, 0, 0, 253,
	82, 675, 674, 216, 216, 211, 212, 0, 214, 0,
	175, 0, 694, 695, 111, 112, 266, 267, 268, 269,
	0, 90, 0, 0, 0, 0, 273, 0, 305, 354,
	354, 508, 0, 528, 511, 570, 571, 0, 643, 667,
	42, 0, 174, 174, 622, 174, 178, 625, 174, 627,
	174, 630, 0, 0, 0, 0, 0, 0, 0, 634,
	584, 640, 0, 642, 0, 0, 0, 796, 0, 0,
	697, 698, 0, 701, 0, 194, 707, 704, 41, 657,
	0, 491, 429, 45, 49, 0, 744, 735, 746, 748,
	0, 0, 0, 740, 0, 451, 659, 0, 0, 453,
	460, 0, 0, 454, 0, 455, 475, 477, -2, 0,
	0, 0, 0, 659, 490, 56, 57, 0, 74, 75,
	76, 258, 261, 0, 236, 0, 219, 220, 221, 0,
	192, 0, 189, 149, 150, 195, 196, 194, 0, 194,
	0, 179, 0, 245, 254, 0, 672, 673, 0, 0,
	213, 215, 0, 0, 274, 0, 88, 89, 0, 0,
	279, 303, 324, 329, 512, 572, 702, 575, 619, 194,
	623, 624, 626, 628, 629, 631, 577, 576, 0, 0,
	0, 0, 0, 667, 0, 638, 0, 0, 96, 101,
	688, 689, 690, 0, 700, 194, 727, 46, 0, 0,
	0, 50, 0, 749, 0, 0, 0, 0, 65, 0,
	667, 753, 754, 457, 0, 462, 0, 0, 0, 465,
	667, 55, 208, 0, 200, 193, 0, 197, 173, 197,
	0, 0, 255, 676, 677, 678, 679, 680, 681, 682,
	692, 0, 91, 92, 0, 0, 0, 43, 620, 621,
	0, 0, 0, 0, 612, 0, 635, 0, 0, 699,
	709, 708, 721, 725, 658, 656, 0, 747, 0, 739,
	742, 738, 741, 452, 53, 0, 0, 487, 0, 0,
	485, 54, 207, 0, 205, 0, 202, 204, 191, 162,
	163, 177, 180, 0, 297, 0, 0, 0, 0, 281,
	578, 580, 579, 581, 0, 0, 0, 583, 600, 601,
	727, 0, 720, 723, -2, 0, 0, 737, 0, 458,
	486, 488, 489, 446, 0, 123, 0, 201, 203, 296,
	0, 0, 93, 94, 87, 582, 0, 0, 0, 714,
	712, 712, 725, 0, 729, 0, 734, 0, 745, 743,
	0, 206, 298, 0, 90, 613, 0, 616, 717, 0,
	710, 713, 711, 722, 0, 728, 0, 0, 726, 0,
	0, 278, 614, 706, 0, 715, 716, 724, 0, 0,
	0, 0, 0, 718, 719, 730, 732, 240, 0, 0,
	241, 242, 0, 0, 0, 615, 243, 0, 0, 0,
	299, 300, 246, 248, 249, 0, 0, 247, 250, 251,
	252,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 406,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:377
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:382
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:383
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:387
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:416
		{
			setParseTree(yylex, nil)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:422
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:426
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:430
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:435
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:445
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:451
		{
			yyVAL.statement = &Load{}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:457
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:466
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:470
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:474
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:497
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:511
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:517
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:525
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:535
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:542
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:554
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.insertAction = InsertAct
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:570
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 53:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:576
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 54:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:582
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:586
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:590
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:594
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:599
		{
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:608
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:614
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:618
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:623
		{
			yyVAL.partitions = nil
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:627
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:639
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:643
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.characteristic = ReadWrite
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:667
		{
			yyVAL.characteristic = ReadOnly
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:673
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:677
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:681
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:685
		{
			yyVAL.isolationLevel = Serializable
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:691
		{
			yyVAL.scope = SessionScope
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:695
		{
			yyVAL.scope = GlobalScope
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:701
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:706
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:712
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:719
		{
			yyDollar[1].createView.FullyParsed = true
			yyDollar[1].createView.Columns = yyDollar[2].columns
			yyDollar[1].createView.Select = yyDollar[4].selStmt
			yyDollar[1].createView.CheckOption = yyDollar[5].str
			yyVAL.statement = yyDollar[1].createView
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:727
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:734
		{
			yyVAL.boolean = false
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:738
		{
			yyVAL.boolean = true
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:743
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:747
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:758
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:763
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:769
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:774
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:780
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:786
		{
			yyVAL.ddl = &DDL{Action: CreateDDLAction, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:793
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, IndexType: yyDollar[5].str, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:800
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:807
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:818
		{
			yyVAL.createView = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str}
			setDDL(yylex, yyVAL.createView)
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:825
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:831
		{
			yyVAL.collateAndCharsets = nil
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:835
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:841
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:849
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:853
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:858
		{
			yyVAL.boolean = false
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.boolean = true
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:868
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:872
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:878
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:882
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:889
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:893
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:899
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:904
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:909
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:918
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:922
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:928
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:939
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:950
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:955
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:985
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:989
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:993
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1023
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1065
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1077
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1085
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1144
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1150
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1155
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1160
		{
			yyVAL.literal = nil
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1164
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1169
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1173
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1181
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1185
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1191
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1199
		{
			yyVAL.boolean = false
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1203
		{
			yyVAL.boolean = true
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1208
		{
			yyVAL.boolean = false
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1212
		{
			yyVAL.boolean = true
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1218
		{
			yyVAL.boolean = false
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1231
		{
			yyVAL.optVal = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1240
		{
			yyVAL.optVal = nil
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1244
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1249
		{
			yyVAL.boolean = false
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolean = true
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1258
		{
			yyVAL.str = ""
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1266
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1271
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1288
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.colKeyOpt = colKey
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1300
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1305
		{
			yyVAL.literal = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1315
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.indexOptions = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1334
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = ""
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1373
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1377
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1381
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1403
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1424
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1449
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1455
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1465
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1475
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 241:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1479
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 242:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1483
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 243:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1487
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 245:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1497
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1503
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1509
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1523
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1531
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1536
		{
			yyVAL.boolean = true
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1540
		{
			yyVAL.boolean = true
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1544
		{
			yyVAL.boolean = false
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1549
		{
			yyVAL.str = ""
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1565
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1569
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1573
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1593
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1597
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1601
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1605
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1610
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1615
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1619
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1630
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1637
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1649
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1659
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1663
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 278:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1667
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 279:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1680
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1690
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 281:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1694
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 296:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1723
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 299:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1739
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1743
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1759
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1767
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1771
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1776
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1780
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1786
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1801
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1806
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1811
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1816
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1821
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1825
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1829
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1833
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1837
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1846
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1851
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 324:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1860
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1869
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1873
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1885
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1895
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1899
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1903
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1907
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1912
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1916
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1920
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1924
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = "extended "
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1979
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.str = "full "
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1999
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2003
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.showFilter = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2027
		{
			yyVAL.showFilter = nil
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2037
		{
			yyVAL.scope = ImplicitScope
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2041
		{
			yyVAL.scope = SessionScope
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.scope = GlobalScope
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = &Begin{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &Begin{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &Commit{}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.statement = &Rollback{}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2081
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2086
		{
			yyVAL.empty = struct{}{}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2091
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2104
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2109
		{
			yyVAL.explainType = EmptyType
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yyVAL.explainType = JSONType
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2117
		{
			yyVAL.explainType = TreeType
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2121
		{
			yyVAL.explainType = VitessType
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2125
		{
			yyVAL.explainType = TraditionalType
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.explainType = AnalyzeType
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2166
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.statement = &OtherRead{}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2184
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2190
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2194
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2212
		{
			setAllowComments(yylex, true)
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2222
		{
			yyVAL.bytes2 = nil
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.boolean = true
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.boolean = false
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2240
		{
			yyVAL.boolean = true
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2245
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2253
		{
			yyVAL.str = SQLCacheStr
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2258
		{
			yyVAL.boolean = false
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.boolean = true
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.boolean = true
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2271
		{
			yyVAL.selectExprs = nil
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2280
		{
			yyVAL.strs = nil
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2288
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2292
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2296
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2306
		{
			yyVAL.str = SQLCacheStr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = DistinctStr
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = DistinctStr
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = StraightJoinHint
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2322
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2338
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2350
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2355
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2363
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2375
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2379
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2403
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2413
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2419
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2423
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2428
		{
			yyVAL.columns = nil
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2465
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2469
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2473
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2477
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2483
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2485
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2497
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2500
		{
			yyVAL.empty = struct{}{}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.empty = struct{}{}
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2505
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2513
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2526
		{
			yyVAL.joinType = NormalJoinType
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.joinType = NormalJoinType
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2534
		{
			yyVAL.joinType = NormalJoinType
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.joinType = StraightJoinType
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2546
		{
			yyVAL.joinType = LeftJoinType
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2550
		{
			yyVAL.joinType = LeftJoinType
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.joinType = RightJoinType
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2558
		{
			yyVAL.joinType = RightJoinType
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2578
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2588
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2603
		{
			yyVAL.indexHints = nil
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2607
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2611
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2615
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2619
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2624
		{
			yyVAL.expr = nil
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2628
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2638
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2642
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2646
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2650
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2654
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2662
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2668
		{
			yyVAL.str = ""
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2672
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2696
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2700
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2704
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2708
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2712
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2716
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2720
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2724
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2730
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = nil
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2795
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2815
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2819
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2841
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2845
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2849
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2857
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2861
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2869
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2873
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2881
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2885
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2889
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2901
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2905
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2909
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2917
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2925
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2955
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2973
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 570:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2977
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2981
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 572:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2985
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2999
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3003
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 576:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3007
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3011
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3015
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3019
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 580:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3027
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 582:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3031
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3035
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3039
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3043
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3066
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3092
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3096
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 600:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3143
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3151
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3155
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3159
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3163
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3173
		{
			yyVAL.matchExprOption = NoOption
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3177
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3181
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 615:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3185
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3189
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3205
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3209
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3213
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3221
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3225
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3243
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3247
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3251
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3255
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3260
		{
			yyVAL.expr = nil
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3264
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3269
		{
			yyVAL.str = string("")
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3279
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3283
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3289
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = nil
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3308
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3312
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3326
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3342
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.expr = &NullVal{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3370
		{
			yyVAL.exprs = nil
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = nil
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3388
		{
			yyVAL.orderBy = nil
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3392
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3402
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3408
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3413
		{
			yyVAL.orderDirection = AscOrder
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.orderDirection = AscOrder
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3421
		{
			yyVAL.orderDirection = DescOrder
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3426
		{
			yyVAL.limit = nil
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3430
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3434
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3438
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3443
		{
			yyVAL.indexOptions = nil
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3447
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3459
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3474
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3478
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3488
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3492
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3509
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = ""
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = yyDollar[3].str
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = ""
		}
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3537
		{
			yyVAL.str = yyDollar[2].str
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = "cascaded"
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3546
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3550
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.str = yyDollar[3].str
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3565
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3573
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3577
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3582
		{
			yyVAL.lock = NoLock
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3586
		{
			yyVAL.lock = ForUpdateLock
		}
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3590
		{
			yyVAL.lock = ShareModeLock
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3595
		{
			yyVAL.selectInto = nil
		}
	case 706:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3599
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3603
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3607
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3612
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3616
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3620
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3625
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3629
		{
			yyVAL.str = " header"
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3634
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3638
		{
			yyVAL.str = " manifest on"
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3642
		{
			yyVAL.str = " manifest off"
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3647
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = " overwrite on"
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = " overwrite off"
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = ""
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3675
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 725:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3684
		{
			yyVAL.str = ""
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3688
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3711
		{
			yyVAL.str = ""
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3715
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3720
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = " optionally"
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 737:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3745
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3749
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3753
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3759
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3771
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3776
		{
			yyVAL.updateExprs = nil
		}
	case 745:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3780
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3786
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3790
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3800
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3806
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3826
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3832
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3842
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3848
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3856
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3860
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3864
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3872
		{
			yyVAL.bytes = []byte("charset")
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.expr = &Default{}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3896
		{
			yyVAL.boolean = false
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3898
		{
			yyVAL.boolean = true
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.boolean = false
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.boolean = true
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3906
		{
			yyVAL.ignore = false
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3908
		{
			yyVAL.ignore = true
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.empty = struct{}{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3918
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.empty = struct{}{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.empty = struct{}{}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.empty = struct{}{}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3930
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3934
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.empty = struct{}{}
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3938
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3942
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3944
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = ""
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = ""
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3966
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3973
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3990
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4349
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4358
		{
			decNesting(yylex)
		}
	case 1141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4363
		{
			skipToEnd(yylex)
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			skipToEnd(yylex)
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			skipToEnd(yylex)
		}
	case 1144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
