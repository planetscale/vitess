// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const REVERT = 57537
const SCHEMA = 57538
const TABLE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const KEY_BLOCK_SIZE = 57549
const CHECK = 57550
const INDEXES = 57551
const ACTION = 57552
const CASCADE = 57553
const CONSTRAINT = 57554
const FOREIGN = 57555
const NO = 57556
const REFERENCES = 57557
const RESTRICT = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const COALESCE = 57567
const EXCHANGE = 57568
const REBUILD = 57569
const PARTITIONING = 57570
const REMOVE = 57571
const PREPARE = 57572
const EXECUTE = 57573
const MAXVALUE = 57574
const PARTITION = 57575
const REORGANIZE = 57576
const LESS = 57577
const THAN = 57578
const PROCEDURE = 57579
const TRIGGER = 57580
const VINDEX = 57581
const VINDEXES = 57582
const DIRECTORY = 57583
const NAME = 57584
const UPGRADE = 57585
const STATUS = 57586
const VARIABLES = 57587
const WARNINGS = 57588
const CASCADED = 57589
const DEFINER = 57590
const OPTION = 57591
const SQL = 57592
const UNDEFINED = 57593
const SEQUENCE = 57594
const MERGE = 57595
const TEMPORARY = 57596
const TEMPTABLE = 57597
const INVOKER = 57598
const SECURITY = 57599
const FIRST = 57600
const AFTER = 57601
const LAST = 57602
const VITESS_MIGRATION = 57603
const CANCEL = 57604
const RETRY = 57605
const COMPLETE = 57606
const CLEANUP = 57607
const BEGIN = 57608
const START = 57609
const TRANSACTION = 57610
const COMMIT = 57611
const ROLLBACK = 57612
const SAVEPOINT = 57613
const RELEASE = 57614
const WORK = 57615
const BIT = 57616
const TINYINT = 57617
const SMALLINT = 57618
const MEDIUMINT = 57619
const INT = 57620
const INTEGER = 57621
const BIGINT = 57622
const INTNUM = 57623
const REAL = 57624
const DOUBLE = 57625
const FLOAT_TYPE = 57626
const DECIMAL_TYPE = 57627
const NUMERIC = 57628
const TIME = 57629
const TIMESTAMP = 57630
const DATETIME = 57631
const YEAR = 57632
const CHAR = 57633
const VARCHAR = 57634
const BOOL = 57635
const CHARACTER = 57636
const VARBINARY = 57637
const NCHAR = 57638
const TEXT = 57639
const TINYTEXT = 57640
const MEDIUMTEXT = 57641
const LONGTEXT = 57642
const BLOB = 57643
const TINYBLOB = 57644
const MEDIUMBLOB = 57645
const LONGBLOB = 57646
const JSON = 57647
const ENUM = 57648
const GEOMETRY = 57649
const POINT = 57650
const LINESTRING = 57651
const POLYGON = 57652
const GEOMETRYCOLLECTION = 57653
const MULTIPOINT = 57654
const MULTILINESTRING = 57655
const MULTIPOLYGON = 57656
const ASCII = 57657
const UNICODE = 57658
const NULLX = 57659
const AUTO_INCREMENT = 57660
const APPROXNUM = 57661
const SIGNED = 57662
const UNSIGNED = 57663
const ZEROFILL = 57664
const CODE = 57665
const COLLATION = 57666
const COLUMNS = 57667
const DATABASES = 57668
const ENGINES = 57669
const EVENT = 57670
const EXTENDED = 57671
const FIELDS = 57672
const FULL = 57673
const FUNCTION = 57674
const GTID_EXECUTED = 57675
const KEYSPACES = 57676
const OPEN = 57677
const PLUGINS = 57678
const PRIVILEGES = 57679
const PROCESSLIST = 57680
const SCHEMAS = 57681
const TABLES = 57682
const TRIGGERS = 57683
const USER = 57684
const VGTID_EXECUTED = 57685
const VITESS_KEYSPACES = 57686
const VITESS_METADATA = 57687
const VITESS_MIGRATIONS = 57688
const VITESS_REPLICATION_STATUS = 57689
const VITESS_SHARDS = 57690
const VITESS_TABLETS = 57691
const VSCHEMA = 57692
const NAMES = 57693
const GLOBAL = 57694
const SESSION = 57695
const ISOLATION = 57696
const LEVEL = 57697
const READ = 57698
const WRITE = 57699
const ONLY = 57700
const REPEATABLE = 57701
const COMMITTED = 57702
const UNCOMMITTED = 57703
const SERIALIZABLE = 57704
const CURRENT_TIMESTAMP = 57705
const DATABASE = 57706
const CURRENT_DATE = 57707
const CURRENT_TIME = 57708
const LOCALTIME = 57709
const LOCALTIMESTAMP = 57710
const CURRENT_USER = 57711
const UTC_DATE = 57712
const UTC_TIME = 57713
const UTC_TIMESTAMP = 57714
const DAY = 57715
const DAY_HOUR = 57716
const DAY_MICROSECOND = 57717
const DAY_MINUTE = 57718
const DAY_SECOND = 57719
const HOUR = 57720
const HOUR_MICROSECOND = 57721
const HOUR_MINUTE = 57722
const HOUR_SECOND = 57723
const MICROSECOND = 57724
const MINUTE = 57725
const MINUTE_MICROSECOND = 57726
const MINUTE_SECOND = 57727
const MONTH = 57728
const QUARTER = 57729
const SECOND = 57730
const SECOND_MICROSECOND = 57731
const YEAR_MONTH = 57732
const WEEK = 57733
const REPLACE = 57734
const CONVERT = 57735
const CAST = 57736
const SUBSTR = 57737
const SUBSTRING = 57738
const GROUP_CONCAT = 57739
const SEPARATOR = 57740
const TIMESTAMPADD = 57741
const TIMESTAMPDIFF = 57742
const WEIGHT_STRING = 57743
const MATCH = 57744
const AGAINST = 57745
const BOOLEAN = 57746
const LANGUAGE = 57747
const WITH = 57748
const QUERY = 57749
const EXPANSION = 57750
const WITHOUT = 57751
const VALIDATION = 57752
const UNUSED = 57753
const ARRAY = 57754
const CUME_DIST = 57755
const DESCRIPTION = 57756
const DENSE_RANK = 57757
const EMPTY = 57758
const EXCEPT = 57759
const FIRST_VALUE = 57760
const GROUPING = 57761
const GROUPS = 57762
const JSON_TABLE = 57763
const LAG = 57764
const LAST_VALUE = 57765
const LATERAL = 57766
const LEAD = 57767
const MEMBER = 57768
const NTH_VALUE = 57769
const NTILE = 57770
const OF = 57771
const OVER = 57772
const PERCENT_RANK = 57773
const RANK = 57774
const RECURSIVE = 57775
const ROW_NUMBER = 57776
const SYSTEM = 57777
const WINDOW = 57778
const ACTIVE = 57779
const ADMIN = 57780
const BUCKETS = 57781
const CLONE = 57782
const COMPONENT = 57783
const DEFINITION = 57784
const ENFORCED = 57785
const EXCLUDE = 57786
const FOLLOWING = 57787
const GEOMCOLLECTION = 57788
const GET_MASTER_PUBLIC_KEY = 57789
const HISTOGRAM = 57790
const HISTORY = 57791
const INACTIVE = 57792
const INVISIBLE = 57793
const LOCKED = 57794
const MASTER_COMPRESSION_ALGORITHMS = 57795
const MASTER_PUBLIC_KEY_PATH = 57796
const MASTER_TLS_CIPHERSUITES = 57797
const MASTER_ZSTD_COMPRESSION_LEVEL = 57798
const NESTED = 57799
const NETWORK_NAMESPACE = 57800
const NOWAIT = 57801
const NULLS = 57802
const OJ = 57803
const OLD = 57804
const OPTIONAL = 57805
const ORDINALITY = 57806
const ORGANIZATION = 57807
const OTHERS = 57808
const PATH = 57809
const PERSIST = 57810
const PERSIST_ONLY = 57811
const PRECEDING = 57812
const PRIVILEGE_CHECKS_USER = 57813
const PROCESS = 57814
const RANDOM = 57815
const REFERENCE = 57816
const REQUIRE_ROW_FORMAT = 57817
const RESOURCE = 57818
const RESPECT = 57819
const RESTART = 57820
const RETAIN = 57821
const REUSE = 57822
const ROLE = 57823
const SECONDARY = 57824
const SECONDARY_ENGINE = 57825
const SECONDARY_LOAD = 57826
const SECONDARY_UNLOAD = 57827
const SKIP = 57828
const SRID = 57829
const THREAD_PRIORITY = 57830
const TIES = 57831
const UNBOUNDED = 57832
const VCPU = 57833
const VISIBLE = 57834
const FORMAT = 57835
const TREE = 57836
const VITESS = 57837
const TRADITIONAL = 57838
const LOCAL = 57839
const LOW_PRIORITY = 57840
const NO_WRITE_TO_BINLOG = 57841
const LOGS = 57842
const ERROR = 57843
const GENERAL = 57844
const HOSTS = 57845
const OPTIMIZER_COSTS = 57846
const USER_RESOURCES = 57847
const SLOW = 57848
const CHANNEL = 57849
const RELAY = 57850
const EXPORT = 57851
const AVG_ROW_LENGTH = 57852
const CONNECTION = 57853
const CHECKSUM = 57854
const DELAY_KEY_WRITE = 57855
const ENCRYPTION = 57856
const ENGINE = 57857
const INSERT_METHOD = 57858
const MAX_ROWS = 57859
const MIN_ROWS = 57860
const PACK_KEYS = 57861
const PASSWORD = 57862
const FIXED = 57863
const DYNAMIC = 57864
const COMPRESSED = 57865
const REDUNDANT = 57866
const COMPACT = 57867
const ROW_FORMAT = 57868
const STATS_AUTO_RECALC = 57869
const STATS_PERSISTENT = 57870
const STATS_SAMPLE_PAGES = 57871
const STORAGE = 57872
const MEMORY = 57873
const DISK = 57874
const PARTITIONS = 57875
const LINEAR = 57876
const RANGE = 57877
const LIST = 57878
const SUBPARTITION = 57879
const SUBPARTITIONS = 57880
const HASH = 57881

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 46,
	11, 46,
	-2, 36,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 46,
	1, 139,
	557, 139,
	-2, 145,
	-1, 47,
	116, 145,
	156, 145,
	311, 145,
	-2, 446,
	-1, 54,
	33, 625,
	215, 625,
	226, 625,
	261, 639,
	262, 639,
	-2, 627,
	-1, 59,
	217, 650,
	-2, 648,
	-1, 112,
	214, 1117,
	-2, 118,
	-1, 114,
	1, 140,
	557, 140,
	-2, 145,
	-1, 124,
	117, 349,
	220, 349,
	-2, 440,
	-1, 143,
	116, 145,
	156, 145,
	311, 145,
	-2, 455,
	-1, 606,
	200, 1138,
	-2, 1134,
	-1, 607,
	200, 1139,
	-2, 1135,
	-1, 680,
	57, 718,
	-2, 732,
	-1, 717,
	132, 1499,
	-2, 111,
	-1, 718,
	132, 1376,
	-2, 112,
	-1, 724,
	132, 1430,
	-2, 1111,
	-1, 868,
	132, 1309,
	-2, 1108,
	-1, 906,
	225, 40,
	230, 40,
	-2, 360,
	-1, 983,
	1, 494,
	557, 494,
	-2, 145,
	-1, 1183,
	57, 719,
	-2, 737,
	-1, 1184,
	57, 720,
	-2, 738,
	-1, 1236,
	116, 145,
	156, 145,
	311, 145,
	-2, 390,
	-1, 1313,
	117, 349,
	220, 349,
	-2, 440,
	-1, 1322,
	225, 41,
	230, 41,
	-2, 361,
	-1, 1573,
	200, 1143,
	-2, 1137,
	-1, 1654,
	116, 145,
	156, 145,
	311, 145,
	-2, 391,
	-1, 1661,
	23, 164,
	-2, 166,
	-1, 1899,
	75, 93,
	84, 93,
	-2, 790,
	-1, 2068,
	47, 1079,
	-2, 1073,
	-1, 2272,
	5, 52,
	16, 52,
	18, 52,
	85, 52,
	-2, 765,
}

const yyPrivate = 57344

const yyLast = 34781

var yyAct = [...]int{
	606, 2532, 2526, 2331, 2497, 2483, 2189, 2410, 2119, 1597,
	2160, 2126, 2079, 601, 695, 673, 3, 1046, 600, 36,
	2082, 2356, 94, 2172, 1163, 2424, 1842, 2128, 561, 1714,
	1198, 557, 2171, 2083, 2080, 2243, 1587, 2237, 2361, 609,
	598, 1627, 2263, 599, 583, 2077, 554, 2174, 1895, 2069,
	180, 1864, 2230, 180, 1684, 521, 180, 553, 1931, 1612,
	555, 537, 2001, 180, 1704, 994, 1960, 1689, 1932, 152,
	1933, 180, 1640, 537, 537, 37, 35, 1872, 871, 1884,
	1336, 722, 1631, 696, 1857, 180, 936, 1185, 1844, 1567,
	1517, 549, 1723, 2017, 677, 1023, 681, 675, 1476, 138,
	1651, 1703, 896, 1756, 1524, 1691, 1925, 537, 1228, 1632,
	537, 180, 537, 566, 698, 901, 1207, 1901, 1634, 1494,
	93, 1589, 1320, 1166, 719, 1427, 1536, 1065, 1424, 1327,
	878, 875, 1701, 907, 1570, 1410, 1619, 902, 1680, 879,
	89, 903, 1227, 1044, 904, 1211, 1039, 687, 1432, 1288,
	155, 115, 116, 683, 682, 1312, 979, 1225, 121, 122,
	709, 685, 914, 95, 1135, 1613, 74, 544, 2455, 1131,
	1953, 87, 2533, 2157, 1716, 83, 1951, 96, 1580, 1716,
	1717, 1718, 1980, 1979, 1754, 2009, 2010, 684, 75, 8,
	1483, 7, 6, 1584, 1585, 1482, 1481, 117, 182, 183,
	184, 1480, 1479, 123, 1478, 703, 1465, 708, 1066, 547,
	1470, 548, 2511, 941, 88, 1396, 1840, 2065, 887, 1866,
	494, 882, 2296, 2143, 2406, 872, 2405, 938, 1293, 689,
	1066, 2324, 545, 100, 2325, 2536, 940, 939, 674, 2542,
	952, 953, 676, 956, 957, 958, 959, 76, 2493, 962,
	963, 964, 965, 966, 967, 968, 969, 970, 971, 972,
	973, 974, 975, 976, 716, 117, 893, 892, 690, 76,
	917, 697, 723, 102, 103, 2466, 106, 1794, 76, 112,
	176, 78, 177, 894, 2525, 489, 2332, 2484, 918, 942,
	943, 944, 76, 1875, 1742, 2492, 2374, 2465, 1696, 2016,
	2222, 1302, 1841, 1988, 118, 670, 140, 1987, 2116, 2117,
	680, 2115, 1076, 886, 949, 2008, 888, 160, 1876, 1791,
	1910, 954, 1694, 1909, 85, 1229, 1911, 1230, 982, 117,
	1030, 1645, 1032, 1013, 1076, 1586, 1097, 668, 711, 712,
	891, 1792, 988, 989, 667, 1565, 85, 1001, 150, 1646,
	1647, 1042, 1002, 139, 1954, 85, 1922, 2415, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1106, 1105, 1107, 1108, 85,
	1029, 1031, 1664, 1663, 157, 589, 158, 2191, 1014, 1018,
	1019, 2043, 127, 128, 149, 148, 175, 1007, 2213, 1001,
	524, 2211, 535, 1469, 1002, 539, 978, 1170, 889, 1471,
	1472, 1473, 1000, 1724, 999, 1072, 2240, 533, 1064, 891,
	1416, 883, 524, 1961, 524, 1983, 2184, 1757, 885, 884,
	2535, 1762, 1411, 524, 2185, 1016, 1017, 1072, 1557, 1546,
	1547, 1548, 1549, 1559, 1550, 1551, 1552, 1564, 1560, 1553,
	1554, 1561, 1562, 1563, 1555, 1556, 1558, 1693, 1022, 1386,
	1036, 1041, 955, 984, 895, 1773, 2192, 1015, 1996, 961,
	2122, 1027, 2512, 891, 977, 1028, 1008, 889, 1020, 1768,
	1765, 1767, 1766, 2317, 960, 1033, 1763, 2193, 1021, 144,
	125, 151, 132, 124, 1759, 145, 146, 1727, 925, 180,
	161, 180, 2168, 1387, 180, 1388, 1761, 1026, 923, 166,
	133, 1628, 1770, 85, 1771, 2123, 1772, 897, 890, 898,
	934, 898, 1034, 1305, 136, 134, 129, 130, 131, 135,
	933, 935, 537, 537, 537, 2132, 126, 932, 981, 931,
	2125, 930, 2044, 929, 2120, 137, 2537, 928, 1760, 927,
	537, 537, 922, 2523, 876, 1326, 1109, 876, 2130, 2131,
	1109, 909, 910, 876, 1011, 2121, 1425, 874, 1058, 2142,
	36, 997, 1702, 1003, 1004, 1005, 1006, 710, 1071, 1068,
	1069, 1070, 1075, 1077, 1074, 1997, 1073, 890, 1748, 951,
	1421, 1052, 2530, 1067, 945, 525, 1043, 2127, 2150, 1982,
	1071, 1068, 1069, 1070, 1075, 1077, 1074, 2018, 1073, 1417,
	1300, 1792, 2167, 1985, 1299, 1067, 2454, 525, 1952, 525,
	153, 1037, 1298, 1955, 2000, 916, 1972, 980, 525, 1422,
	1296, 493, 488, 1112, 1113, 1114, 1115, 926, 2012, 1035,
	2445, 890, 1805, 1120, 2277, 1123, 1161, 924, 2416, 1614,
	1615, 2259, 1995, 1906, 1156, 1994, 1695, 2464, 1325, 1871,
	1744, 2129, 1832, 602, 1579, 584, 586, 603, 604, 1215,
	582, 585, 605, 2132, 84, 1143, 1048, 1049, 180, 2402,
	992, 2241, 1110, 1111, 916, 1109, 1652, 2020, 1845, 1847,
	1793, 79, 1116, 2114, 916, 147, 84, 180, 1173, 587,
	588, 2387, 1176, 1175, 1162, 84, 1108, 1179, 141, 675,
	1178, 142, 692, 677, 114, 1024, 537, 1433, 990, 84,
	180, 987, 915, 1040, 2460, 537, 998, 996, 1415, 2313,
	2253, 537, 937, 1758, 1398, 1397, 1399, 1400, 1401, 75,
	916, 1061, 719, 1059, 1060, 109, 1010, 1418, 2036, 2030,
	2029, 2028, 2022, 1231, 2026, 2003, 2021, 1012, 2019, 1062,
	2002, 1137, 1133, 2024, 1134, 1162, 1537, 1537, 2003, 1819,
	1499, 1177, 2023, 2002, 1944, 93, 2124, 1149, 1150, 1151,
	1152, 915, 1081, 950, 1500, 1501, 1498, 2025, 2027, 916,
	2528, 915, 916, 2529, 2370, 2527, 1167, 909, 912, 913,
	2288, 876, 110, 2521, 2287, 906, 910, 182, 183, 184,
	2225, 1519, 154, 159, 156, 162, 163, 164, 165, 167,
	168, 169, 170, 1080, 1081, 1731, 905, 1335, 171, 172,
	173, 174, 96, 1334, 1846, 1743, 1741, 915, 1079, 1739,
	1080, 1081, 919, 909, 1164, 1025, 1079, 1434, 1080, 1081,
	674, 2503, 920, 1324, 995, 2501, 925, 1412, 1197, 1413,
	1174, 676, 1414, 2519, 2505, 2506, 1489, 1491, 1492, 2130,
	2131, 1194, 921, 1736, 2278, 1736, 2502, 923, 1520, 1620,
	1621, 180, 1221, 1222, 2471, 1289, 915, 1490, 1216, 915,
	723, 919, 909, 983, 1297, 909, 912, 913, 2540, 876,
	1740, 920, 1738, 906, 910, 1099, 1100, 1101, 1102, 1103,
	1104, 1106, 1105, 1107, 1108, 537, 2472, 1322, 1079, 2397,
	1080, 1081, 2438, 1180, 2347, 1331, 2538, 2038, 1079, 1333,
	1080, 1081, 537, 537, 2346, 537, 2295, 537, 537, 1097,
	537, 537, 537, 537, 537, 537, 1101, 1102, 1103, 1104,
	1106, 1105, 1107, 1108, 2439, 537, 1332, 1226, 2294, 180,
	1369, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106, 1105,
	1107, 1108, 2129, 85, 1079, 180, 1080, 1081, 1192, 2158,
	1827, 1364, 1365, 2148, 2132, 1541, 537, 1497, 180, 2520,
	1929, 1303, 1304, 1318, 2451, 1797, 1798, 1799, 2219, 1423,
	2539, 2442, 1928, 180, 1103, 1104, 1106, 1105, 1107, 1108,
	1311, 1405, 1699, 1338, 1406, 1339, 1391, 1341, 1343, 180,
	1390, 1347, 1349, 1351, 1353, 1355, 180, 1389, 1403, 1079,
	1380, 1080, 1081, 1366, 1374, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 537, 537, 537, 1330, 1295, 2441,
	1371, 1372, 1373, 1329, 620, 621, 622, 1378, 1379, 1370,
	1393, 1345, 1201, 1192, 714, 1308, 1321, 1810, 1309, 1307,
	2440, 2217, 1192, 2369, 1404, 180, 1809, 1079, 2367, 1080,
	1081, 2343, 2188, 1437, 1429, 1328, 1328, 1192, 2292, 1192,
	1441, 1402, 1443, 1444, 1445, 1446, 1382, 1808, 1079, 1450,
	1080, 1081, 2284, 1815, 1938, 1435, 1436, 1079, 1926, 1080,
	1081, 1202, 1079, 1464, 1080, 1081, 1495, 1752, 1751, 1440,
	1518, 1367, 1079, 1392, 1080, 1081, 1447, 1448, 1449, 1426,
	1611, 1301, 1593, 1527, 537, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1083, 2395, 117, 893, 892, 1522, 1051, 537,
	537, 1502, 1493, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1503, 1521, 1439, 1538,
	2224, 1571, 1466, 1205, 1430, 1814, 2252, 1394, 1079, 180,
	1080, 1081, 537, 537, 182, 183, 184, 1460, 1461, 1462,
	1381, 1377, 1376, 1463, 1079, 1375, 1080, 1081, 182, 183,
	184, 1599, 2285, 1600, 1592, 1203, 1079, 180, 1080, 1081,
	537, 1079, 2314, 1080, 1081, 1038, 1496, 1851, 2534, 1609,
	180, 1930, 2423, 537, 2254, 182, 183, 184, 180, 1913,
	180, 2422, 180, 180, 537, 1573, 2391, 537, 1204, 1851,
	2490, 90, 2390, 1571, 92, 1575, 1576, 1079, 537, 1080,
	1081, 719, 91, 2330, 719, 93, 1079, 1962, 1080, 1081,
	1851, 2477, 1523, 182, 183, 184, 1873, 1712, 2078, 1529,
	1530, 1851, 2475, 93, 1079, 1941, 1080, 1081, 2252, 1572,
	1630, 2467, 1192, 1605, 1851, 2456, 607, 2322, 2453, 1574,
	90, 1737, 1577, 1578, 182, 183, 184, 92, 1710, 1851,
	2398, 91, 1192, 537, 2322, 1192, 1192, 1573, 1660, 1705,
	1706, 1707, 1851, 2320, 1709, 1711, 1655, 1736, 1192, 98,
	1670, 1671, 1672, 1673, 2257, 1192, 1656, 1604, 537, 2140,
	2139, 1638, 2136, 2137, 537, 1331, 181, 1881, 1331, 181,
	1331, 1078, 181, 2136, 2135, 689, 1735, 538, 1736, 181,
	1661, 1625, 1686, 1725, 1607, 1192, 99, 181, 1873, 538,
	538, 1881, 1192, 1659, 1806, 1192, 1692, 98, 1623, 97,
	2459, 181, 1792, 1981, 1292, 1966, 537, 1643, 1518, 99,
	1958, 1959, 1851, 1518, 1518, 1658, 1097, 1806, 2011, 1657,
	98, 1642, 97, 538, 1880, 1902, 538, 181, 538, 723,
	1881, 92, 723, 1851, 1862, 1859, 1722, 2138, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1106, 1105, 1107, 1108, 180,
	92, 1902, 1078, 1192, 1292, 1291, 180, 1237, 1236, 2252,
	1687, 180, 180, 1682, 1683, 180, 1192, 180, 2109, 1644,
	1698, 1700, 1697, 180, 1708, 2297, 1806, 1792, 1881, 1824,
	180, 1823, 1736, 1719, 1745, 1618, 1196, 1730, 1903, 1192,
	1733, 1582, 1734, 1687, 1729, 1728, 1732, 1905, 1747, 1746,
	1474, 917, 1420, 1749, 1750, 1223, 1360, 1806, 180, 537,
	679, 900, 899, 1665, 1903, 1666, 1667, 1668, 1669, 918,
	2509, 2480, 2161, 1792, 85, 2298, 2299, 2300, 2412, 1328,
	1199, 1676, 1677, 1678, 1679, 2388, 2381, 2312, 2309, 2290,
	1097, 1783, 1784, 1093, 2228, 1094, 1786, 1755, 2227, 1294,
	1685, 1097, 1495, 1804, 2186, 1787, 1361, 1362, 1363, 1095,
	1096, 1092, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106,
	1105, 1107, 1108, 1098, 1099, 1100, 1101, 1102, 1103, 1104,
	1106, 1105, 1107, 1108, 2163, 2159, 1801, 85, 1803, 1967,
	1681, 1776, 1675, 1674, 1408, 1323, 1319, 1290, 111, 2301,
	1935, 1802, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1106,
	1105, 1107, 1108, 1934, 1886, 1889, 1890, 1891, 1887, 1357,
	1888, 1892, 982, 180, 2264, 2265, 1886, 1889, 1890, 1891,
	1887, 180, 1888, 1892, 2264, 2265, 2190, 1838, 2413, 1696,
	1172, 2516, 1790, 2498, 537, 2267, 2302, 2303, 2155, 2154,
	2153, 2078, 1496, 1945, 537, 1777, 2100, 1467, 1800, 2270,
	1935, 2101, 2269, 2098, 1190, 1186, 1358, 1359, 2099, 2351,
	2097, 2350, 1190, 1186, 2096, 2514, 1200, 180, 180, 1187,
	2102, 2491, 1890, 1891, 1877, 1610, 36, 1187, 1603, 2070,
	2072, 2258, 2059, 1912, 2058, 1897, 1964, 2437, 2073, 2360,
	2362, 1573, 1818, 2248, 1601, 1602, 1189, 1816, 1188, 2245,
	693, 1863, 1183, 1184, 1189, 2067, 1188, 2244, 694, 2349,
	1419, 666, 2134, 1920, 1939, 1533, 947, 946, 2200, 90,
	1934, 2006, 1050, 1860, 1974, 1973, 92, 537, 2250, 1534,
	91, 1167, 180, 1829, 1830, 1572, 1839, 90, 118, 180,
	1620, 1621, 1849, 1896, 2151, 92, 1780, 2452, 91, 2408,
	2133, 537, 1861, 1894, 1916, 1608, 1923, 1924, 537, 99,
	1957, 1769, 1331, 1331, 2231, 1870, 1900, 537, 701, 702,
	98, 1796, 97, 97, 2057, 1856, 2429, 2428, 2368, 1978,
	2366, 92, 2056, 1907, 2365, 1692, 1914, 1904, 99, 2358,
	180, 180, 180, 180, 180, 181, 2310, 181, 2249, 98,
	181, 97, 1917, 2247, 2164, 1720, 1306, 180, 180, 99,
	1937, 700, 1927, 98, 2357, 2238, 1873, 2518, 2517, 101,
	98, 1859, 1825, 180, 1217, 1209, 1936, 1171, 538, 538,
	538, 104, 105, 591, 1942, 2518, 2443, 1946, 1947, 1948,
	2283, 1518, 691, 1976, 86, 1, 538, 538, 615, 1311,
	2500, 506, 1583, 1165, 520, 2496, 1395, 1385, 2333, 2409,
	1963, 1726, 2035, 537, 2308, 1690, 908, 143, 1975, 675,
	1653, 1654, 2486, 108, 869, 107, 911, 1009, 1977, 537,
	2048, 1721, 537, 2323, 1968, 1969, 1921, 1662, 1243, 1241,
	180, 1242, 2013, 1240, 536, 1245, 2014, 1244, 1239, 1826,
	1468, 534, 537, 1893, 178, 1998, 671, 672, 2004, 537,
	537, 2005, 180, 180, 180, 180, 180, 2075, 1232, 2048,
	2084, 1210, 948, 2090, 180, 496, 2141, 681, 1753, 180,
	180, 2032, 180, 2031, 2081, 180, 180, 180, 2062, 2081,
	721, 2015, 502, 873, 1121, 880, 2055, 1179, 1908, 720,
	713, 2047, 1596, 2086, 2242, 2066, 2068, 1865, 2071, 2053,
	2064, 2436, 2049, 2359, 2478, 2061, 2108, 1918, 1206, 1817,
	2149, 2060, 1128, 1535, 181, 1635, 180, 1591, 2063, 1488,
	2110, 559, 558, 2111, 683, 682, 556, 1852, 1874, 537,
	2089, 1084, 610, 181, 2091, 1843, 1218, 2094, 537, 1885,
	1883, 1882, 2103, 180, 1778, 2107, 1639, 2170, 2112, 2266,
	2262, 93, 538, 180, 1633, 2118, 181, 1858, 1429, 567,
	2166, 538, 2092, 2093, 560, 2095, 552, 538, 180, 608,
	2280, 180, 2145, 2144, 2176, 1984, 2187, 1986, 2050, 2051,
	2052, 2201, 1919, 2183, 1063, 2178, 1182, 546, 2177, 881,
	1532, 2146, 2147, 2414, 2400, 1795, 2221, 1181, 1544, 1545,
	2156, 1692, 1713, 62, 2169, 40, 541, 2165, 2510, 1054,
	707, 32, 2181, 31, 30, 29, 28, 23, 22, 21,
	20, 19, 25, 18, 17, 16, 180, 113, 2196, 49,
	46, 2195, 44, 120, 119, 47, 43, 985, 41, 2202,
	2198, 2199, 27, 2203, 26, 15, 14, 2209, 13, 12,
	11, 10, 9, 5, 4, 34, 33, 1057, 24, 2,
	1950, 1715, 0, 1191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2232, 2233, 0, 0, 0, 0,
	180, 0, 0, 0, 0, 0, 2239, 0, 2246, 0,
	0, 0, 0, 0, 0, 2251, 0, 0, 2286, 0,
	0, 0, 0, 180, 0, 2271, 0, 2268, 2236, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	2273, 180, 0, 0, 180, 180, 180, 0, 2274, 0,
	0, 0, 0, 2178, 537, 537, 2177, 2281, 2261, 0,
	2282, 1168, 0, 2315, 2316, 0, 0, 0, 0, 0,
	0, 538, 2318, 0, 0, 0, 0, 0, 2275, 2276,
	0, 537, 537, 537, 537, 2291, 0, 2293, 538, 538,
	0, 538, 0, 538, 538, 0, 538, 538, 538, 538,
	538, 538, 0, 2329, 0, 0, 0, 0, 0, 2327,
	2328, 538, 0, 0, 491, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 180, 2342, 0, 0, 0,
	0, 181, 669, 0, 0, 0, 0, 2206, 2207, 0,
	2208, 2338, 538, 2210, 181, 2212, 0, 2214, 537, 0,
	537, 0, 0, 0, 0, 0, 0, 2339, 2084, 181,
	0, 2354, 2084, 2375, 2355, 36, 0, 2379, 2364, 2377,
	2363, 2081, 877, 0, 675, 181, 0, 2371, 2373, 0,
	0, 0, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	538, 538, 538, 537, 0, 2386, 0, 0, 0, 0,
	0, 0, 2396, 0, 0, 721, 721, 721, 0, 0,
	0, 2399, 0, 537, 0, 2392, 0, 0, 0, 0,
	2394, 181, 2393, 1053, 1055, 0, 2404, 0, 2403, 537,
	2411, 2383, 2384, 537, 537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2433, 2430, 2431,
	0, 2432, 537, 2435, 0, 0, 0, 0, 2084, 537,
	0, 2447, 0, 0, 2446, 2444, 0, 0, 2450, 2448,
	538, 0, 0, 0, 0, 0, 675, 0, 0, 0,
	0, 0, 0, 537, 180, 538, 538, 0, 0, 1159,
	0, 0, 2461, 0, 0, 2458, 0, 36, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 537, 0, 538, 538,
	0, 0, 0, 0, 0, 0, 2473, 0, 0, 0,
	537, 537, 0, 2476, 0, 0, 2481, 2485, 537, 2479,
	0, 36, 2081, 181, 0, 0, 538, 2411, 2487, 0,
	0, 0, 0, 0, 0, 2507, 181, 2499, 0, 538,
	2504, 0, 0, 0, 181, 0, 181, 2513, 181, 181,
	538, 2515, 0, 538, 0, 0, 0, 0, 0, 1213,
	537, 0, 0, 0, 538, 0, 0, 2524, 721, 2522,
	0, 2531, 0, 0, 1233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2541, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1956, 0, 0, 0, 0, 538,
	0, 0, 0, 0, 0, 176, 0, 118, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	160, 0, 0, 0, 538, 0, 0, 0, 0, 118,
	538, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 538, 0, 0, 0, 0, 157, 0, 158,
	0, 0, 0, 0, 1915, 1314, 1315, 149, 148, 175,
	986, 0, 991, 0, 0, 993, 0, 0, 0, 157,
	0, 158, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 0, 181, 181, 0,
	0, 181, 0, 181, 0, 0, 0, 0, 873, 181,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 1159, 0, 0, 0, 1337, 1337, 0, 1337, 0,
	1337, 1337, 0, 1346, 1337, 1337, 1337, 1337, 1337, 0,
	0, 0, 0, 0, 181, 538, 1159, 1159, 873, 0,
	0, 0, 144, 1316, 151, 0, 1313, 0, 145, 146,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 617,
	77, 0, 166, 0, 0, 0, 1193, 1195, 0, 1407,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 0, 721, 721, 721,
	0, 0, 0, 0, 0, 678, 0, 77, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 678, 0, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	538, 1220, 0, 153, 0, 179, 0, 0, 492, 0,
	538, 532, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 153, 492, 0, 0, 0,
	0, 0, 0, 181, 181, 0, 0, 0, 0, 0,
	688, 0, 0, 0, 0, 0, 0, 1528, 0, 0,
	0, 0, 0, 0, 1159, 0, 706, 0, 706, 0,
	0, 0, 1542, 1543, 0, 705, 492, 721, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 147, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 0, 538, 142, 1595, 1598, 118, 181, 0,
	0, 0, 0, 0, 0, 181, 0, 0, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 538, 0, 0,
	0, 0, 0, 1598, 538, 0, 0, 0, 0, 0,
	0, 0, 550, 538, 0, 0, 1213, 0, 0, 721,
	0, 0, 0, 0, 0, 0, 0, 721, 0, 0,
	721, 0, 0, 0, 0, 0, 181, 181, 181, 181,
	181, 873, 1238, 699, 0, 0, 0, 157, 0, 158,
	0, 0, 0, 181, 181, 0, 0, 0, 0, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 154, 159, 156, 162, 163,
	164, 165, 167, 168, 169, 170, 0, 0, 0, 0,
	0, 171, 172, 173, 174, 0, 880, 154, 159, 156,
	162, 163, 164, 165, 167, 168, 169, 170, 0, 538,
	0, 0, 0, 171, 172, 173, 174, 0, 0, 0,
	1368, 873, 0, 0, 0, 538, 0, 880, 538, 0,
	0, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 538, 1409,
	0, 0, 0, 0, 0, 538, 538, 0, 181, 181,
	181, 181, 181, 161, 0, 0, 0, 0, 0, 873,
	181, 0, 166, 0, 0, 181, 181, 0, 181, 0,
	1438, 181, 181, 181, 0, 0, 0, 1442, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 0, 0, 0, 1539, 0, 0, 0,
	1540, 0, 0, 0, 0, 538, 1477, 0, 0, 0,
	0, 0, 0, 0, 538, 0, 0, 0, 0, 181,
	0, 0, 0, 0, 0, 0, 1193, 1581, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 0, 181, 0, 0, 181, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 1606, 0,
	0, 1045, 1045, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 77, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 492, 0, 0, 492,
	0, 0, 181, 0, 0, 0, 0, 0, 678, 1117,
	1118, 1119, 0, 1122, 0, 1124, 1125, 1126, 1127, 0,
	1130, 1132, 1132, 0, 1132, 1136, 1136, 1138, 1139, 1140,
	1141, 1142, 0, 1144, 1145, 1146, 1147, 1148, 0, 0,
	0, 0, 1136, 1136, 1136, 1136, 0, 0, 0, 0,
	0, 1622, 0, 721, 0, 0, 181, 0, 0, 1626,
	0, 1629, 0, 0, 1477, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 181,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	181, 181, 181, 0, 0, 0, 0, 0, 0, 1169,
	538, 538, 0, 0, 678, 0, 0, 0, 678, 0,
	0, 1160, 0, 0, 678, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 538, 538, 538,
	538, 0, 0, 0, 0, 154, 159, 156, 162, 163,
	164, 165, 167, 168, 169, 170, 0, 0, 0, 0,
	0, 171, 172, 173, 174, 0, 0, 1082, 0, 0,
	1940, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 76, 38, 39, 78, 0, 0, 0,
	0, 0, 688, 0, 1598, 1129, 0, 0, 0, 0,
	0, 1965, 0, 82, 538, 0, 538, 42, 68, 69,
	1970, 66, 70, 0, 0, 492, 0, 0, 0, 0,
	67, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 55,
	1477, 0, 0, 0, 0, 0, 0, 1764, 0, 538,
	85, 0, 1774, 1775, 0, 0, 1779, 0, 0, 0,
	0, 0, 0, 0, 1782, 0, 0, 0, 0, 538,
	0, 1785, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 1811, 0, 1812, 1813, 538, 0, 0, 0, 538,
	538, 0, 1821, 0, 0, 1822, 721, 0, 0, 1788,
	0, 0, 0, 0, 0, 0, 1208, 0, 0, 0,
	0, 0, 1337, 0, 0, 2054, 0, 0, 538, 0,
	0, 1828, 0, 0, 0, 538, 0, 0, 1833, 1834,
	1835, 1836, 1837, 0, 1606, 721, 0, 0, 0, 1159,
	0, 0, 2088, 1337, 1159, 1850, 0, 0, 0, 538,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 492, 0, 0, 0,
	45, 48, 51, 50, 53, 0, 65, 0, 0, 71,
	0, 0, 538, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 538, 538, 0, 0,
	0, 54, 81, 80, 538, 0, 63, 64, 52, 0,
	0, 0, 0, 1160, 72, 73, 0, 0, 0, 0,
	0, 0, 873, 0, 0, 1159, 0, 0, 0, 0,
	0, 1598, 0, 0, 0, 0, 0, 0, 1160, 1160,
	0, 0, 0, 0, 492, 0, 538, 0, 0, 0,
	56, 57, 0, 58, 59, 60, 61, 0, 0, 0,
	1383, 0, 0, 1045, 1045, 1045, 0, 0, 0, 1899,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1428, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	1451, 1452, 492, 492, 492, 492, 492, 492, 492, 0,
	0, 0, 0, 1943, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 79, 0, 0, 0,
	2042, 0, 0, 2045, 2046, 0, 0, 0, 0, 0,
	84, 1989, 1990, 1991, 1992, 1993, 0, 0, 0, 0,
	0, 0, 1431, 0, 0, 0, 0, 0, 1477, 1999,
	0, 0, 0, 706, 0, 0, 0, 0, 0, 0,
	706, 706, 0, 0, 2007, 0, 1160, 1598, 1598, 0,
	0, 0, 2087, 0, 0, 0, 0, 0, 706, 1428,
	706, 706, 706, 706, 706, 0, 0, 0, 0, 2105,
	2106, 1636, 0, 0, 2334, 2335, 2336, 2337, 0, 0,
	0, 0, 0, 0, 1383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 0,
	0, 0, 0, 0, 1484, 1485, 1486, 1487, 0, 0,
	0, 0, 688, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 1428, 0, 492, 0, 492, 1159, 492, 1641, 0,
	0, 2376, 0, 2378, 1525, 1526, 0, 0, 0, 0,
	0, 0, 1531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 2205, 0, 0, 0, 550, 1598, 2152, 0, 0,
	0, 0, 0, 0, 0, 2215, 2216, 2218, 2220, 0,
	0, 0, 0, 0, 524, 2226, 721, 0, 0, 0,
	0, 2229, 0, 0, 2173, 0, 0, 2234, 0, 0,
	1616, 1617, 2426, 0, 2182, 0, 2426, 2426, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2194,
	0, 0, 2197, 0, 0, 511, 0, 1650, 0, 2255,
	2256, 0, 0, 2260, 0, 1598, 0, 0, 0, 0,
	0, 0, 1598, 0, 0, 0, 0, 0, 0, 0,
	0, 2272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 510, 0, 0, 0, 0, 0, 2235, 0, 0,
	0, 0, 508, 0, 0, 0, 1688, 0, 0, 0,
	0, 0, 0, 0, 492, 0, 0, 1159, 0, 2474,
	0, 492, 0, 0, 0, 0, 492, 492, 0, 0,
	492, 0, 1781, 721, 721, 2321, 0, 0, 492, 0,
	0, 2494, 505, 0, 0, 492, 0, 0, 0, 0,
	0, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 0, 0, 492, 2289, 0, 0, 0, 0, 0,
	0, 0, 0, 1598, 0, 0, 0, 0, 0, 0,
	0, 0, 2304, 0, 0, 2305, 2306, 2307, 0, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 495,
	0, 497, 512, 0, 527, 0, 526, 501, 706, 499,
	503, 513, 504, 0, 498, 0, 509, 0, 678, 500,
	514, 515, 517, 531, 530, 518, 0, 507, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 1878, 1879, 0,
	0, 0, 0, 0, 706, 706, 1898, 0, 0, 0,
	0, 0, 0, 0, 0, 1428, 0, 0, 492, 0,
	2407, 0, 0, 0, 0, 0, 1383, 0, 0, 0,
	0, 0, 0, 0, 2417, 2418, 2419, 0, 2420, 2421,
	0, 0, 2425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 492, 0, 0, 0, 0, 0, 2449,
	0, 0, 0, 1820, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1971, 2463, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2468, 0,
	0, 0, 0, 0, 2469, 2470, 0, 0, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 492, 0, 0,
	0, 0, 0, 0, 1949, 0, 0, 0, 0, 0,
	522, 2482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1260, 0, 0, 0,
	0, 0, 0, 0, 0, 2462, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 492, 492, 492, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 492, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 706, 0, 0, 0, 2085, 0, 77, 0,
	0, 1636, 1636, 1636, 1636, 1636, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 706, 1898, 0,
	0, 1636, 0, 0, 1636, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 1248, 0, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 1160, 492, 492, 492,
	492, 492, 0, 0, 0, 0, 0, 0, 0, 2104,
	0, 0, 0, 0, 492, 1383, 0, 492, 0, 0,
	492, 2113, 1428, 0, 2175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2033, 2034, 0, 0, 0, 2037, 0, 0, 0, 2039,
	2040, 2041, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 0, 1261, 0, 0, 2204, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 2076,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 492, 0, 0, 492, 1274, 1277, 1278,
	1279, 1280, 1281, 1282, 0, 1283, 1284, 1285, 1286, 1287,
	1262, 1263, 1264, 1265, 1246, 1247, 1275, 0, 1249, 0,
	1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 0, 1636,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 2279, 0, 0, 0, 0, 0, 0, 0,
	2162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2319, 0,
	0, 0, 0, 0, 0, 492, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1276, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2223, 0, 492, 0, 0, 492,
	492, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	2348, 0, 2352, 2353, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 77, 0, 2085, 0,
	0, 550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2401, 1160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2085, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1141, 0, 0,
	0, 0, 0, 2340, 0, 2341, 0, 0, 0, 0,
	2344, 2345, 0, 0, 0, 0, 0, 0, 77, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2372,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2380, 0, 0, 2382, 0, 0, 0, 0, 0, 0,
	0, 0, 77, 0, 0, 2385, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 550, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2434, 550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 851, 837, 414, 0, 784, 854, 753, 772, 864,
	775, 778, 818, 732, 797, 337, 769, 550, 757, 728,
	764, 729, 755, 786, 241, 752, 839, 801, 853, 293,
	238, 734, 758, 351, 774, 191, 820, 390, 226, 303,
	300, 421, 252, 244, 240, 225, 277, 309, 349, 408,
	343, 860, 297, 807, 0, 399, 322, 0, 0, 0,
	788, 843, 795, 833, 783, 819, 742, 806, 855, 770,
	815, 856, 283, 224, 190, 334, 400, 256, 0, 0,
	0, 0, 182, 183, 184, 0, 2488, 0, 2489, 0,
	0, 0, 0, 0, 0, 215, 2508, 222, 766, 812,
	850, 767, 814, 236, 281, 243, 235, 418, 861, 842,
	0, 0, 207, 852, 790, 0, 817, 0, 867, 727,
	809, 0, 730, 733, 863, 846, 761, 246, 0, 0,
	0, 0, 0, 0, 0, 787, 796, 830, 781, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 805, 0,
	0, 0, 738, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 0, 0, 0, 741,
	0, 760, 831, 0, 725, 264, 735, 323, 0, 835,
	845, 782, 451, 849, 780, 779, 825, 739, 841, 773,
	292, 737, 289, 186, 203, 0, 771, 333, 373, 379,
	840, 756, 765, 227, 762, 377, 347, 435, 211, 254,
	370, 352, 375, 824, 763, 804, 822, 376, 298, 423,
	365, 433, 452, 453, 234, 327, 442, 412, 448, 464,
	204, 231, 341, 405, 438, 396, 320, 419, 420, 288,
	395, 262, 189, 296, 458, 202, 385, 219, 209, 195,
	407, 431, 216, 388, 0, 0, 466, 197, 429, 404,
	316, 285, 286, 196, 0, 369, 239, 260, 229, 336,
	426, 427, 228, 467, 206, 447, 199, 1047, 446, 329,
	422, 430, 317, 308, 198, 428, 315, 307, 291, 250,
	271, 363, 301, 364, 272, 325, 324, 326, 192, 439,
	0, 193, 0, 401, 440, 468, 212, 213, 214, 751,
	249, 253, 259, 261, 267, 268, 275, 294, 340, 362,
	360, 366, 836, 417, 434, 443, 450, 456, 457, 459,
	460, 461, 462, 463, 328, 274, 397, 290, 299, 828,
	866, 346, 378, 217, 437, 398, 746, 750, 744, 745,
	799, 800, 747, 857, 858, 859, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 832, 740, 0, 748, 749,
	0, 838, 847, 848, 487, 803, 185, 200, 295, 862,
	367, 257, 465, 445, 441, 726, 743, 233, 754, 0,
	0, 768, 776, 777, 789, 791, 792, 793, 794, 319,
	810, 811, 813, 821, 823, 827, 829, 834, 844, 865,
	187, 188, 201, 210, 220, 232, 247, 255, 265, 270,
	273, 278, 279, 282, 287, 305, 310, 311, 312, 313,
	330, 331, 332, 335, 338, 339, 342, 344, 345, 348,
	355, 356, 357, 358, 359, 361, 368, 372, 380, 381,
	382, 383, 384, 386, 387, 391, 392, 393, 394, 402,
	406, 424, 425, 436, 449, 454, 266, 432, 455, 0,
	304, 802, 808, 306, 251, 269, 280, 816, 444, 403,
	205, 374, 258, 194, 223, 208, 230, 245, 248, 284,
	314, 321, 350, 354, 263, 242, 221, 371, 218, 389,
	409, 410, 411, 413, 318, 237, 353, 798, 826, 302,
	415, 416, 276, 851, 837, 414, 0, 784, 854, 753,
	772, 864, 775, 778, 818, 732, 797, 337, 769, 0,
	757, 728, 764, 729, 755, 786, 241, 752, 839, 801,
	853, 293, 238, 734, 758, 351, 774, 191, 820, 390,
	226, 303, 300, 421, 252, 244, 240, 225, 277, 309,
	349, 408, 343, 860, 297, 807, 0, 399, 322, 0,
	0, 0, 788, 843, 795, 833, 783, 819, 742, 806,
	855, 770, 815, 856, 283, 224, 190, 334, 400, 256,
	0, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 222,
	766, 812, 850, 767, 814, 236, 281, 243, 235, 418,
	861, 842, 0, 0, 207, 852, 790, 0, 817, 0,
	867, 727, 809, 0, 730, 733, 863, 846, 761, 246,
	0, 0, 0, 0, 0, 0, 0, 787, 796, 830,
	781, 0, 0, 0, 0, 0, 2114, 0, 759, 0,
	805, 0, 0, 0, 738, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 785, 0, 0,
	0, 741, 0, 760, 831, 0, 725, 264, 735, 323,
	0, 835, 845, 782, 451, 849, 780, 779, 825, 739,
	841, 773, 292, 737, 289, 186, 203, 0, 771, 333,
	373, 379, 840, 756, 765, 227, 762, 377, 347, 435,
	211, 254, 370, 352, 375, 824, 763, 804, 822, 376,
	298, 423, 365, 433, 452, 453, 234, 327, 442, 412,
	448, 464, 204, 231, 341, 405, 438, 396, 320, 419,
	420, 288, 395, 262, 189, 296, 458, 202, 385, 219,
	209, 195, 407, 431, 216, 388, 0, 0, 466, 197,
	429, 404, 316, 285, 286, 196, 0, 369, 239, 260,
	229, 336, 426, 427, 228, 467, 206, 447, 199, 1047,
	446, 329, 422, 430, 317, 308, 198, 428, 315, 307,
	291, 250, 271, 363, 301, 364, 272, 325, 324, 326,
	192, 439, 0, 193, 0, 401, 440, 468, 212, 213,
	214, 751, 249, 253, 259, 261, 267, 268, 275, 294,
	340, 362, 360, 366, 836, 417, 434, 443, 450, 456,
	457, 459, 460, 461, 462, 463, 328, 274, 397, 290,
	299, 828, 866, 346, 378, 217, 437, 398, 746, 750,
	744, 745, 799, 800, 747, 857, 858, 859, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 832, 740, 0,
	748, 749, 0, 838, 847, 848, 487, 803, 185, 200,
	295, 862, 367, 257, 465, 445, 441, 726, 743, 233,
	754, 0, 0, 768, 776, 777, 789, 791, 792, 793,
	794, 319, 810, 811, 813, 821, 823, 827, 829, 834,
	844, 865, 187, 188, 201, 210, 220, 232, 247, 255,
	265, 270, 273, 278, 279, 282, 287, 305, 310, 311,
	312, 313, 330, 331, 332, 335, 338, 339, 342, 344,
	345, 348, 355, 356, 357, 358, 359, 361, 368, 372,
	380, 381, 382, 383, 384, 386, 387, 391, 392, 393,
	394, 402, 406, 424, 425, 436, 449, 454, 266, 432,
	455, 0, 304, 802, 808, 306, 251, 269, 280, 816,
	444, 403, 205, 374, 258, 194, 223, 208, 230, 245,
	248, 284, 314, 321, 350, 354, 263, 242, 221, 371,
	218, 389, 409, 410, 411, 413, 318, 237, 353, 798,
	826, 302, 415, 416, 276, 851, 837, 414, 0, 784,
	854, 753, 772, 864, 775, 778, 818, 732, 797, 337,
	769, 0, 757, 728, 764, 729, 755, 786, 241, 752,
	839, 801, 853, 293, 238, 734, 758, 351, 774, 191,
	820, 390, 226, 303, 300, 421, 252, 244, 240, 225,
	277, 309, 349, 408, 343, 860, 297, 807, 0, 399,
	322, 0, 0, 0, 788, 843, 795, 833, 783, 819,
	742, 806, 855, 770, 815, 856, 283, 224, 190, 334,
	400, 256, 0, 0, 0, 0, 182, 183, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 222, 766, 812, 850, 767, 814, 236, 281, 243,
	235, 418, 861, 842, 0, 0, 207, 852, 790, 0,
	817, 0, 867, 727, 809, 0, 730, 733, 863, 846,
	761, 246, 0, 0, 0, 0, 0, 0, 0, 787,
	796, 830, 781, 0, 0, 0, 0, 0, 2074, 0,
	759, 0, 805, 0, 0, 0, 738, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	0, 0, 0, 741, 0, 760, 831, 0, 725, 264,
	735, 323, 0, 835, 845, 782, 451, 849, 780, 779,
	825, 739, 841, 773, 292, 737, 289, 186, 203, 0,
	771, 333, 373, 379, 840, 756, 765, 227, 762, 377,
	347, 435, 211, 254, 370, 352, 375, 824, 763, 804,
	822, 376, 298, 423, 365, 433, 452, 453, 234, 327,
	442, 412, 448, 464, 204, 231, 341, 405, 438, 396,
	320, 419, 420, 288, 395, 262, 189, 296, 458, 202,
	385, 219, 209, 195, 407, 431, 216, 388, 0, 0,
	466, 197, 429, 404, 316, 285, 286, 196, 0, 369,
	239, 260, 229, 336, 426, 427, 228, 467, 206, 447,
	199, 1047, 446, 329, 422, 430, 317, 308, 198, 428,
	315, 307, 291, 250, 271, 363, 301, 364, 272, 325,
	324, 326, 192, 439, 0, 193, 0, 401, 440, 468,
	212, 213, 214, 751, 249, 253, 259, 261, 267, 268,
	275, 294, 340, 362, 360, 366, 836, 417, 434, 443,
	450, 456, 457, 459, 460, 461, 462, 463, 328, 274,
	397, 290, 299, 828, 866, 346, 378, 217, 437, 398,
	746, 750, 744, 745, 799, 800, 747, 857, 858, 859,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 832,
	740, 0, 748, 749, 0, 838, 847, 848, 487, 803,
	185, 200, 295, 862, 367, 257, 465, 445, 441, 726,
	743, 233, 754, 0, 0, 768, 776, 777, 789, 791,
	792, 793, 794, 319, 810, 811, 813, 821, 823, 827,
	829, 834, 844, 865, 187, 188, 201, 210, 220, 232,
	247, 255, 265, 270, 273, 278, 279, 282, 287, 305,
	310, 311, 312, 313, 330, 331, 332, 335, 338, 339,
	342, 344, 345, 348, 355, 356, 357, 358, 359, 361,
	368, 372, 380, 381, 382, 383, 384, 386, 387, 391,
	392, 393, 394, 402, 406, 424, 425, 436, 449, 454,
	266, 432, 455, 0, 304, 802, 808, 306, 251, 269,
	280, 816, 444, 403, 205, 374, 258, 194, 223, 208,
	230, 245, 248, 284, 314, 321, 350, 354, 263, 242,
	221, 371, 218, 389, 409, 410, 411, 413, 318, 237,
	353, 798, 826, 302, 415, 416, 276, 851, 837, 414,
	0, 784, 854, 753, 772, 864, 775, 778, 818, 732,
	797, 337, 769, 0, 757, 728, 764, 729, 755, 786,
	241, 752, 839, 801, 853, 293, 238, 734, 758, 351,
	774, 191, 820, 390, 226, 303, 300, 421, 252, 244,
	240, 225, 277, 309, 349, 408, 343, 860, 297, 807,
	0, 399, 322, 0, 0, 0, 788, 843, 795, 833,
	783, 819, 742, 806, 855, 770, 815, 856, 283, 224,
	190, 334, 400, 256, 0, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 222, 766, 812, 850, 767, 814, 236,
	281, 243, 235, 418, 861, 842, 0, 0, 207, 852,
	790, 0, 817, 0, 867, 727, 809, 0, 730, 733,
	863, 846, 761, 246, 0, 0, 0, 0, 0, 0,
	0, 787, 796, 830, 781, 0, 0, 0, 0, 0,
	1624, 0, 759, 0, 805, 0, 0, 0, 738, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 0, 0, 0, 741, 0, 760, 831, 0,
	725, 264, 735, 323, 0, 835, 845, 782, 451, 849,
	780, 779, 825, 739, 841, 773, 292, 737, 289, 186,
	203, 0, 771, 333, 373, 379, 840, 756, 765, 227,
	762, 377, 347, 435, 211, 254, 370, 352, 375, 824,
	763, 804, 822, 376, 298, 423, 365, 433, 452, 453,
	234, 327, 442, 412, 448, 464, 204, 231, 341, 405,
	438, 396, 320, 419, 420, 288, 395, 262, 189, 296,
	458, 202, 385, 219, 209, 195, 407, 431, 216, 388,
	0, 0, 466, 197, 429, 404, 316, 285, 286, 196,
	0, 369, 239, 260, 229, 336, 426, 427, 228, 467,
	206, 447, 199, 1047, 446, 329, 422, 430, 317, 308,
	198, 428, 315, 307, 291, 250, 271, 363, 301, 364,
	272, 325, 324, 326, 192, 439, 0, 193, 0, 401,
	440, 468, 212, 213, 214, 751, 249, 253, 259, 261,
	267, 268, 275, 294, 340, 362, 360, 366, 836, 417,
	434, 443, 450, 456, 457, 459, 460, 461, 462, 463,
	328, 274, 397, 290, 299, 828, 866, 346, 378, 217,
	437, 398, 746, 750, 744, 745, 799, 800, 747, 857,
	858, 859, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 832, 740, 0, 748, 749, 0, 838, 847, 848,
	487, 803, 185, 200, 295, 862, 367, 257, 465, 445,
	441, 726, 743, 233, 754, 0, 0, 768, 776, 777,
	789, 791, 792, 793, 794, 319, 810, 811, 813, 821,
	823, 827, 829, 834, 844, 865, 187, 188, 201, 210,
	220, 232, 247, 255, 265, 270, 273, 278, 279, 282,
	287, 305, 310, 311, 312, 313, 330, 331, 332, 335,
	338, 339, 342, 344, 345, 348, 355, 356, 357, 358,
	359, 361, 368, 372, 380, 381, 382, 383, 384, 386,
	387, 391, 392, 393, 394, 402, 406, 424, 425, 436,
	449, 454, 266, 432, 455, 0, 304, 802, 808, 306,
	251, 269, 280, 816, 444, 403, 205, 374, 258, 194,
	223, 208, 230, 245, 248, 284, 314, 321, 350, 354,
	263, 242, 221, 371, 218, 389, 409, 410, 411, 413,
	318, 237, 353, 798, 826, 302, 415, 416, 276, 851,
	837, 414, 0, 784, 854, 753, 772, 864, 775, 778,
	818, 732, 797, 337, 769, 0, 757, 728, 764, 729,
	755, 786, 241, 752, 839, 801, 853, 293, 238, 734,
	758, 351, 774, 191, 820, 390, 226, 303, 300, 421,
	252, 244, 240, 225, 277, 309, 349, 408, 343, 860,
	297, 807, 0, 399, 322, 0, 0, 0, 788, 843,
	795, 833, 783, 819, 742, 806, 855, 770, 815, 856,
	283, 224, 190, 334, 400, 256, 0, 85, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 222, 766, 812, 850, 767,
	814, 236, 281, 243, 235, 418, 861, 842, 0, 0,
	207, 852, 790, 0, 817, 0, 867, 727, 809, 0,
	730, 733, 863, 846, 761, 246, 0, 0, 0, 0,
	0, 0, 0, 787, 796, 830, 781, 0, 0, 0,
	0, 0, 0, 0, 759, 0, 805, 0, 0, 0,
	738, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 785, 0, 0, 0, 741, 0, 760,
	831, 0, 725, 264, 735, 323, 0, 835, 845, 782,
	451, 849, 780, 779, 825, 739, 841, 773, 292, 737,
	289, 186, 203, 0, 771, 333, 373, 379, 840, 756,
	765, 227, 762, 377, 347, 435, 211, 254, 370, 352,
	375, 824, 763, 804, 822, 376, 298, 423, 365, 433,
	452, 453, 234, 327, 442, 412, 448, 464, 204, 231,
	341, 405, 438, 396, 320, 419, 420, 288, 395, 262,
	189, 296, 458, 202, 385, 219, 209, 195, 407, 431,
	216, 388, 0, 0, 466, 197, 429, 404, 316, 285,
	286, 196, 0, 369, 239, 260, 229, 336, 426, 427,
	228, 467, 206, 447, 199, 1047, 446, 329, 422, 430,
	317, 308, 198, 428, 315, 307, 291, 250, 271, 363,
	301, 364, 272, 325, 324, 326, 192, 439, 0, 193,
	0, 401, 440, 468, 212, 213, 214, 751, 249, 253,
	259, 261, 267, 268, 275, 294, 340, 362, 360, 366,
	836, 417, 434, 443, 450, 456, 457, 459, 460, 461,
	462, 463, 328, 274, 397, 290, 299, 828, 866, 346,
	378, 217, 437, 398, 746, 750, 744, 745, 799, 800,
	747, 857, 858, 859, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 832, 740, 0, 748, 749, 0, 838,
	847, 848, 487, 803, 185, 200, 295, 862, 367, 257,
	465, 445, 441, 726, 743, 233, 754, 0, 0, 768,
	776, 777, 789, 791, 792, 793, 794, 319, 810, 811,
	813, 821, 823, 827, 829, 834, 844, 865, 187, 188,
	201, 210, 220, 232, 247, 255, 265, 270, 273, 278,
	279, 282, 287, 305, 310, 311, 312, 313, 330, 331,
	332, 335, 338, 339, 342, 344, 345, 348, 355, 356,
	357, 358, 359, 361, 368, 372, 380, 381, 382, 383,
	384, 386, 387, 391, 392, 393, 394, 402, 406, 424,
	425, 436, 449, 454, 266, 432, 455, 0, 304, 802,
	808, 306, 251, 269, 280, 816, 444, 403, 205, 374,
	258, 194, 223, 208, 230, 245, 248, 284, 314, 321,
	350, 354, 263, 242, 221, 371, 218, 389, 409, 410,
	411, 413, 318, 237, 353, 798, 826, 302, 415, 416,
	276, 851, 837, 414, 0, 784, 854, 753, 772, 864,
	775, 778, 818, 732, 797, 337, 769, 0, 757, 728,
	764, 729, 755, 786, 241, 752, 839, 801, 853, 293,
	238, 734, 758, 351, 774, 191, 820, 390, 226, 303,
	300, 421, 252, 244, 240, 225, 277, 309, 349, 408,
	343, 860, 297, 807, 0, 399, 322, 0, 0, 0,
	788, 843, 795, 833, 783, 819, 742, 806, 855, 770,
	815, 856, 283, 224, 190, 334, 400, 256, 0, 0,
	0, 0, 182, 183, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 222, 766, 812,
	850, 767, 814, 236, 281, 243, 235, 418, 861, 842,
	0, 0, 207, 852, 790, 0, 817, 0, 867, 727,
	809, 0, 730, 733, 863, 846, 761, 246, 0, 0,
	0, 0, 0, 0, 0, 787, 796, 830, 781, 0,
	0, 0, 0, 0, 0, 0, 759, 0, 805, 0,
	0, 0, 738, 731, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 785, 0, 0, 0, 741,
	0, 760, 831, 0, 725, 264, 735, 323, 0, 835,
	845, 782, 451, 849, 780, 779, 825, 739, 841, 773,
	292, 737, 289, 186, 203, 0, 771, 333, 373, 379,
	840, 756, 765, 227, 762, 377, 347, 435, 211, 254,
	370, 352, 375, 824, 763, 804, 822, 376, 298, 423,
	365, 433, 452, 453, 234, 327, 442, 412, 448, 464,
	204, 231, 341, 405, 438, 396, 320, 419, 420, 288,
	395, 262, 189, 296, 458, 202, 385, 219, 209, 195,
	407, 431, 216, 388, 0, 0, 466, 197, 429, 404,
	316, 285, 286, 196, 0, 369, 239, 260, 229, 336,
	426, 427, 228, 467, 206, 447, 199, 1047, 446, 329,
	422, 430, 317, 308, 198, 428, 315, 307, 291, 250,
	271, 363, 301, 364, 272, 325, 324, 326, 192, 439,
	0, 193, 0, 401, 440, 468, 212, 213, 214, 751,
	249, 253, 259, 261, 267, 268, 275, 294, 340, 362,
	360, 366, 836, 417, 434, 443, 450, 456, 457, 459,
	460, 461, 462, 463, 328, 274, 397, 290, 299, 828,
	866, 346, 378, 217, 437, 398, 746, 750, 744, 745,
	799, 800, 747, 857, 858, 859, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 832, 740, 0, 748, 749,
	0, 838, 847, 848, 487, 803, 185, 200, 295, 862,
	367, 257, 465, 445, 441, 726, 743, 233, 754, 0,
	0, 768, 776, 777, 789, 791, 792, 793, 794, 319,
	810, 811, 813, 821, 823, 827, 829, 834, 844, 865,
	187, 188, 201, 210, 220, 232, 247, 255, 265, 270,
	273, 278, 279, 282, 287, 305, 310, 311, 312, 313,
	330, 331, 332, 335, 338, 339, 342, 344, 345, 348,
	355, 356, 357, 358, 359, 361, 368, 372, 380, 381,
	382, 383, 384, 386, 387, 391, 392, 393, 394, 402,
	406, 424, 425, 436, 449, 454, 266, 432, 455, 0,
	304, 802, 808, 306, 251, 269, 280, 816, 444, 403,
	205, 374, 258, 194, 223, 208, 230, 245, 248, 284,
	314, 321, 350, 354, 263, 242, 221, 371, 218, 389,
	409, 410, 411, 413, 318, 237, 353, 798, 826, 302,
	415, 416, 276, 851, 837, 414, 0, 784, 854, 753,
	772, 864, 775, 778, 818, 732, 797, 337, 769, 0,
	757, 728, 764, 729, 755, 786, 241, 752, 839, 801,
	853, 293, 238, 734, 758, 351, 774, 191, 820, 390,
	226, 303, 300, 421, 252, 244, 240, 225, 277, 309,
	349, 408, 343, 860, 297, 807, 0, 399, 322, 0,
	0, 0, 788, 843, 795, 833, 783, 819, 742, 806,
	855, 770, 815, 856, 283, 224, 190, 334, 400, 256,
	0, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 222,
	766, 812, 850, 767, 814, 236, 281, 243, 235, 418,
	861, 842, 0, 0, 868, 852, 790, 0, 817, 0,
	867, 727, 809, 0, 730, 733, 863, 846, 761, 246,
	0, 0, 0, 0, 0, 0, 0, 787, 796, 830,
	781, 0, 0, 0, 0, 0, 0, 0, 759, 0,
	805, 0, 0, 0, 738, 731, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 785, 0, 0,
	0, 741, 0, 760, 831, 0, 725, 264, 735, 323,
	0, 835, 845, 782, 451, 849, 780, 779, 825, 739,
	841, 773, 292, 737, 289, 186, 203, 0, 771, 333,
	373, 379, 840, 756, 765, 227, 762, 377, 347, 435,
	211, 254, 370, 352, 375, 824, 763, 804, 822, 376,
	298, 423, 365, 433, 452, 453, 234, 327, 442, 412,
	448, 464, 204, 231, 341, 405, 438, 396, 320, 419,
	420, 288, 395, 262, 189, 296, 458, 202, 385, 219,
	209, 195, 407, 431, 216, 388, 0, 0, 466, 197,
	429, 404, 316, 285, 286, 196, 0, 369, 239, 260,
	229, 336, 426, 427, 228, 467, 206, 447, 199, 736,
	446, 329, 422, 430, 317, 308, 198, 428, 315, 307,
	291, 250, 271, 363, 301, 364, 272, 325, 324, 326,
	192, 439, 0, 193, 0, 401, 440, 468, 212, 213,
	214, 751, 249, 253, 259, 261, 267, 268, 275, 294,
	340, 362, 360, 366, 836, 417, 434, 443, 450, 456,
	457, 459, 460, 461, 462, 463, 724, 718, 717, 290,
	299, 828, 866, 346, 378, 217, 437, 398, 746, 750,
	744, 745, 799, 800, 747, 857, 858, 859, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 832, 740, 0,
	748, 749, 0, 838, 847, 848, 487, 803, 185, 200,
	295, 862, 367, 257, 465, 445, 441, 726, 743, 233,
	754, 0, 0, 768, 776, 777, 789, 791, 792, 793,
	794, 319, 810, 811, 813, 821, 823, 827, 829, 834,
	844, 865, 187, 188, 201, 210, 220, 232, 247, 255,
	265, 270, 273, 278, 279, 282, 287, 305, 310, 311,
	312, 313, 330, 331, 332, 335, 338, 339, 342, 344,
	345, 348, 355, 356, 357, 358, 359, 361, 368, 372,
	380, 381, 382, 383, 384, 386, 387, 391, 392, 393,
	394, 402, 406, 424, 425, 436, 449, 454, 266, 432,
	455, 0, 304, 802, 808, 306, 251, 269, 280, 816,
	444, 403, 205, 374, 258, 194, 223, 208, 230, 245,
	248, 284, 314, 321, 350, 354, 263, 242, 221, 371,
	218, 389, 409, 410, 411, 413, 318, 237, 353, 798,
	826, 302, 415, 416, 276, 851, 837, 414, 0, 784,
	854, 753, 772, 864, 775, 778, 818, 732, 797, 337,
	769, 0, 757, 728, 764, 729, 755, 786, 241, 752,
	839, 801, 853, 293, 238, 734, 758, 351, 774, 191,
	820, 390, 226, 303, 300, 421, 252, 244, 240, 225,
	277, 309, 349, 408, 343, 860, 297, 807, 0, 399,
	322, 0, 0, 0, 788, 843, 795, 833, 783, 819,
	742, 806, 855, 770, 815, 856, 283, 224, 190, 334,
	400, 256, 0, 0, 0, 0, 182, 183, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 222, 766, 812, 850, 767, 814, 236, 281, 243,
	235, 418, 861, 842, 0, 0, 868, 852, 790, 0,
	817, 0, 867, 727, 809, 0, 730, 733, 863, 846,
	761, 246, 0, 0, 0, 0, 0, 0, 0, 787,
	796, 830, 781, 0, 0, 0, 0, 0, 0, 0,
	759, 0, 805, 0, 0, 0, 738, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 785,
	0, 0, 0, 741, 0, 760, 831, 0, 725, 264,
	735, 323, 0, 835, 845, 782, 451, 849, 780, 779,
	825, 739, 841, 773, 292, 737, 289, 186, 203, 0,
	771, 333, 373, 379, 840, 756, 765, 227, 762, 377,
	347, 435, 211, 254, 370, 352, 375, 824, 763, 804,
	822, 376, 298, 423, 365, 433, 452, 453, 234, 327,
	442, 412, 448, 464, 204, 231, 341, 405, 438, 396,
	320, 419, 420, 288, 395, 262, 189, 296, 458, 202,
	385, 219, 209, 195, 407, 1224, 216, 388, 0, 0,
	466, 197, 429, 404, 316, 285, 286, 196, 0, 369,
	239, 260, 229, 336, 426, 427, 228, 467, 206, 447,
	199, 736, 446, 329, 422, 430, 317, 308, 198, 428,
	315, 307, 291, 250, 271, 363, 301, 364, 272, 325,
	324, 326, 192, 439, 0, 193, 0, 401, 440, 468,
	212, 213, 214, 751, 249, 253, 259, 261, 267, 268,
	275, 294, 340, 362, 360, 366, 836, 417, 434, 443,
	450, 456, 457, 459, 460, 461, 462, 463, 724, 718,
	717, 290, 299, 828, 866, 346, 378, 217, 437, 398,
	746, 750, 744, 745, 799, 800, 747, 857, 858, 859,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 832,
	740, 0, 748, 749, 0, 838, 847, 848, 487, 803,
	185, 200, 295, 862, 367, 257, 465, 445, 441, 726,
	743, 233, 754, 0, 0, 768, 776, 777, 789, 791,
	792, 793, 794, 319, 810, 811, 813, 821, 823, 827,
	829, 834, 844, 865, 187, 188, 201, 210, 220, 232,
	247, 255, 265, 270, 273, 278, 279, 282, 287, 305,
	310, 311, 312, 313, 330, 331, 332, 335, 338, 339,
	342, 344, 345, 348, 355, 356, 357, 358, 359, 361,
	368, 372, 380, 381, 382, 383, 384, 386, 387, 391,
	392, 393, 394, 402, 406, 424, 425, 436, 449, 454,
	266, 432, 455, 0, 304, 802, 808, 306, 251, 269,
	280, 816, 444, 403, 205, 374, 258, 194, 223, 208,
	230, 245, 248, 284, 314, 321, 350, 354, 263, 242,
	221, 371, 218, 389, 409, 410, 411, 413, 318, 237,
	353, 798, 826, 302, 415, 416, 276, 851, 837, 414,
	0, 784, 854, 753, 772, 864, 775, 778, 818, 732,
	797, 337, 769, 0, 757, 728, 764, 729, 755, 786,
	241, 752, 839, 801, 853, 293, 238, 734, 758, 351,
	774, 191, 820, 390, 226, 303, 300, 421, 252, 244,
	240, 225, 277, 309, 349, 408, 343, 860, 297, 807,
	0, 399, 322, 0, 0, 0, 788, 843, 795, 833,
	783, 819, 742, 806, 855, 770, 815, 856, 283, 224,
	190, 334, 400, 256, 0, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 222, 766, 812, 850, 767, 814, 236,
	281, 243, 235, 418, 861, 842, 0, 0, 868, 852,
	790, 0, 817, 0, 867, 727, 809, 0, 730, 733,
	863, 846, 761, 246, 0, 0, 0, 0, 0, 0,
	0, 787, 796, 830, 781, 0, 0, 0, 0, 0,
	0, 0, 759, 0, 805, 0, 0, 0, 738, 731,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 785, 0, 0, 0, 741, 0, 760, 831, 0,
	725, 264, 735, 323, 0, 835, 845, 782, 451, 849,
	780, 779, 825, 739, 841, 773, 292, 737, 289, 186,
	203, 0, 771, 333, 373, 379, 840, 756, 765, 227,
	762, 377, 347, 435, 211, 254, 370, 352, 375, 824,
	763, 804, 822, 376, 298, 423, 365, 433, 452, 453,
	234, 327, 442, 412, 448, 464, 204, 231, 341, 405,
	438, 396, 320, 419, 420, 288, 395, 262, 189, 296,
	458, 202, 385, 219, 209, 195, 407, 715, 216, 388,
	0, 0, 466, 197, 429, 404, 316, 285, 286, 196,
	0, 369, 239, 260, 229, 336, 426, 427, 228, 467,
	206, 447, 199, 736, 446, 329, 422, 430, 317, 308,
	198, 428, 315, 307, 291, 250, 271, 363, 301, 364,
	272, 325, 324, 326, 192, 439, 0, 193, 0, 401,
	440, 468, 212, 213, 214, 751, 249, 253, 259, 261,
	267, 268, 275, 294, 340, 362, 360, 366, 836, 417,
	434, 443, 450, 456, 457, 459, 460, 461, 462, 463,
	724, 718, 717, 290, 299, 828, 866, 346, 378, 217,
	437, 398, 746, 750, 744, 745, 799, 800, 747, 857,
	858, 859, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 832, 740, 0, 748, 749, 0, 838, 847, 848,
	487, 803, 185, 200, 295, 862, 367, 257, 465, 445,
	441, 726, 743, 233, 754, 0, 0, 768, 776, 777,
	789, 791, 792, 793, 794, 319, 810, 811, 813, 821,
	823, 827, 829, 834, 844, 865, 187, 188, 201, 210,
	220, 232, 247, 255, 265, 270, 273, 278, 279, 282,
	287, 305, 310, 311, 312, 313, 330, 331, 332, 335,
	338, 339, 342, 344, 345, 348, 355, 356, 357, 358,
	359, 361, 368, 372, 380, 381, 382, 383, 384, 386,
	387, 391, 392, 393, 394, 402, 406, 424, 425, 436,
	449, 454, 266, 432, 455, 0, 304, 802, 808, 306,
	251, 269, 280, 816, 444, 403, 205, 374, 258, 194,
	223, 208, 230, 245, 248, 284, 314, 321, 350, 354,
	263, 242, 221, 371, 218, 389, 409, 410, 411, 413,
	318, 237, 353, 798, 826, 302, 415, 416, 276, 414,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 1568, 0, 568, 0, 0, 0,
	241, 573, 0, 0, 0, 293, 238, 0, 1569, 351,
	0, 191, 0, 390, 226, 303, 300, 421, 252, 244,
	240, 225, 277, 309, 349, 408, 343, 580, 297, 0,
	0, 399, 322, 0, 0, 0, 0, 0, 575, 576,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 224,
	190, 334, 400, 256, 0, 85, 0, 0, 182, 183,
	184, 611, 618, 619, 620, 621, 622, 612, 614, 0,
	0, 215, 613, 222, 589, 616, 623, 624, 0, 236,
	281, 243, 235, 418, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 551, 565, 0, 579,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 563,
	704, 0, 0, 0, 596, 0, 564, 0, 0, 572,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 659, 660, 661, 662, 663, 664,
	665, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 323, 0, 595, 0, 0, 451, 0,
	0, 593, 0, 0, 0, 0, 292, 0, 289, 186,
	203, 0, 0, 333, 373, 379, 0, 0, 0, 227,
	0, 377, 347, 435, 211, 254, 370, 352, 375, 0,
	0, 0, 0, 376, 298, 423, 365, 433, 452, 453,
	234, 327, 442, 412, 448, 464, 204, 231, 341, 405,
	438, 396, 320, 419, 420, 288, 395, 262, 189, 296,
	458, 202, 385, 219, 209, 195, 407, 431, 216, 388,
	0, 0, 466, 197, 429, 404, 316, 285, 286, 196,
	0, 369, 239, 260, 229, 336, 426, 427, 228, 467,
	206, 447, 199, 0, 446, 329, 422, 430, 317, 308,
	198, 428, 315, 307, 291, 250, 271, 363, 301, 364,
	272, 325, 324, 326, 192, 439, 0, 193, 0, 401,
	440, 468, 212, 213, 214, 0, 249, 253, 259, 261,
	267, 268, 275, 294, 340, 362, 360, 366, 0, 417,
	434, 443, 450, 456, 457, 459, 460, 461, 462, 463,
	328, 274, 397, 290, 299, 0, 0, 346, 378, 217,
	437, 398, 602, 594, 584, 586, 603, 604, 581, 582,
	585, 605, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 597, 571, 570, 0, 577, 578, 0, 587, 588,
	590, 569, 185, 200, 295, 0, 367, 257, 465, 445,
	441, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 201, 210,
	220, 232, 247, 255, 265, 270, 273, 278, 279, 282,
	287, 305, 310, 311, 312, 313, 330, 331, 332, 335,
	338, 339, 342, 344, 345, 348, 355, 356, 357, 358,
	359, 361, 368, 372, 380, 381, 382, 383, 384, 386,
	387, 391, 392, 393, 394, 402, 406, 424, 425, 436,
	449, 454, 266, 432, 455, 0, 304, 0, 0, 306,
	251, 269, 280, 0, 444, 403, 205, 374, 258, 194,
	223, 208, 230, 245, 248, 284, 314, 321, 350, 354,
	263, 242, 221, 371, 218, 389, 409, 410, 411, 413,
	318, 237, 353, 414, 0, 302, 415, 416, 276, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	568, 0, 0, 0, 241, 573, 0, 0, 0, 293,
	238, 0, 0, 351, 0, 191, 0, 390, 226, 303,
	300, 421, 252, 244, 240, 225, 277, 309, 349, 408,
	343, 580, 297, 0, 0, 399, 322, 0, 0, 0,
	0, 0, 575, 576, 0, 0, 0, 0, 0, 0,
	1648, 0, 283, 224, 190, 334, 400, 256, 0, 85,
	0, 0, 182, 183, 184, 611, 618, 619, 620, 621,
	622, 612, 614, 0, 0, 215, 613, 222, 589, 616,
	623, 624, 1649, 236, 281, 243, 235, 418, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	551, 565, 0, 579, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 563, 0, 0, 0, 0, 596, 0,
	564, 0, 0, 572, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 323, 0, 595,
	0, 0, 451, 0, 0, 593, 0, 0, 0, 0,
	292, 0, 289, 186, 203, 0, 0, 333, 373, 379,
	0, 0, 0, 227, 0, 377, 347, 435, 211, 254,
	370, 352, 375, 0, 0, 0, 0, 376, 298, 423,
	365, 433, 452, 453, 234, 327, 442, 412, 448, 464,
	204, 231, 341, 405, 438, 396, 320, 419, 420, 288,
	395, 262, 189, 296, 458, 202, 385, 219, 209, 195,
	407, 431, 216, 388, 0, 0, 466, 197, 429, 404,
	316, 285, 286, 196, 0, 369, 239, 260, 229, 336,
	426, 427, 228, 467, 206, 447, 199, 0, 446, 329,
	422, 430, 317, 308, 198, 428, 315, 307, 291, 250,
	271, 363, 301, 364, 272, 325, 324, 326, 192, 439,
	0, 193, 0, 401, 440, 468, 212, 213, 214, 0,
	249, 253, 259, 261, 267, 268, 275, 294, 340, 362,
	360, 366, 0, 417, 434, 443, 450, 456, 457, 459,
	460, 461, 462, 463, 328, 274, 397, 290, 299, 0,
	0, 346, 378, 217, 437, 398, 602, 594, 584, 586,
	603, 604, 581, 582, 585, 605, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 597, 571, 570, 0, 577,
	578, 0, 587, 588, 590, 569, 185, 200, 295, 0,
	367, 257, 465, 445, 441, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 188, 201, 210, 220, 232, 247, 255, 265, 270,
	273, 278, 279, 282, 287, 305, 310, 311, 312, 313,
	330, 331, 332, 335, 338, 339, 342, 344, 345, 348,
	355, 356, 357, 358, 359, 361, 368, 372, 380, 381,
	382, 383, 384, 386, 387, 391, 392, 393, 394, 402,
	406, 424, 425, 436, 449, 454, 266, 432, 455, 0,
	304, 0, 0, 306, 251, 269, 280, 0, 444, 403,
	205, 374, 258, 194, 223, 208, 230, 245, 248, 284,
	314, 321, 350, 354, 263, 242, 221, 371, 218, 389,
	409, 410, 411, 413, 318, 237, 353, 76, 414, 302,
	415, 416, 276, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 568, 0, 0, 0, 241,
	573, 0, 0, 0, 293, 238, 0, 0, 351, 0,
	191, 0, 390, 226, 303, 300, 421, 252, 244, 240,
	225, 277, 309, 349, 408, 343, 580, 297, 0, 0,
	399, 322, 0, 0, 0, 0, 0, 575, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 224, 190,
	334, 400, 256, 0, 85, 0, 0, 182, 183, 184,
	611, 618, 619, 620, 621, 622, 612, 614, 0, 0,
	215, 613, 222, 589, 616, 623, 624, 0, 236, 281,
	243, 235, 418, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 551, 565, 0, 579, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 596, 0, 564, 0, 0, 572, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 323, 0, 595, 0, 0, 451, 0, 0,
	593, 0, 0, 0, 0, 292, 0, 289, 186, 203,
	0, 0, 333, 373, 379, 0, 0, 0, 227, 0,
	377, 347, 435, 211, 254, 370, 352, 375, 0, 0,
	0, 0, 376, 298, 423, 365, 433, 452, 453, 234,
	327, 442, 412, 448, 464, 204, 231, 341, 405, 438,
	396, 320, 419, 420, 288, 395, 262, 189, 296, 458,
	202, 385, 219, 209, 195, 407, 431, 216, 388, 0,
	0, 466, 197, 429, 404, 316, 285, 286, 196, 0,
	369, 239, 260, 229, 336, 426, 427, 228, 467, 206,
	447, 199, 0, 446, 329, 422, 430, 317, 308, 198,
	428, 315, 307, 291, 250, 271, 363, 301, 364, 272,
	325, 324, 326, 192, 439, 0, 193, 0, 401, 440,
	468, 212, 213, 214, 0, 249, 253, 259, 261, 267,
	268, 275, 294, 340, 362, 360, 366, 0, 417, 434,
	443, 450, 456, 457, 459, 460, 461, 462, 463, 328,
	274, 397, 290, 299, 0, 0, 346, 378, 217, 437,
	398, 602, 594, 584, 586, 603, 604, 581, 582, 585,
	605, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	597, 571, 570, 0, 577, 578, 0, 587, 588, 590,
	569, 185, 200, 295, 84, 367, 257, 465, 445, 441,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 188, 201, 210, 220,
	232, 247, 255, 265, 270, 273, 278, 279, 282, 287,
	305, 310, 311, 312, 313, 330, 331, 332, 335, 338,
	339, 342, 344, 345, 348, 355, 356, 357, 358, 359,
	361, 368, 372, 380, 381, 382, 383, 384, 386, 387,
	391, 392, 393, 394, 402, 406, 424, 425, 436, 449,
	454, 266, 432, 455, 0, 304, 0, 0, 306, 251,
	269, 280, 0, 444, 403, 205, 374, 258, 194, 223,
	208, 230, 245, 248, 284, 314, 321, 350, 354, 263,
	242, 221, 371, 218, 389, 409, 410, 411, 413, 318,
	237, 353, 414, 0, 302, 415, 416, 276, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 568,
	0, 0, 0, 241, 573, 0, 0, 0, 293, 238,
	0, 0, 351, 0, 191, 0, 390, 226, 303, 300,
	421, 252, 244, 240, 225, 277, 309, 349, 408, 343,
	580, 297, 0, 0, 399, 322, 0, 0, 0, 0,
	0, 575, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 224, 190, 334, 400, 256, 0, 85, 0,
	0, 182, 183, 184, 611, 618, 619, 620, 621, 622,
	612, 614, 0, 0, 215, 613, 222, 589, 616, 623,
	624, 0, 236, 281, 243, 235, 418, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 551,
	565, 0, 579, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 562, 563, 0, 0, 0, 0, 596, 0, 564,
	0, 0, 572, 625, 626, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 323, 0, 595, 0,
	0, 451, 0, 0, 593, 0, 0, 0, 0, 292,
	0, 289, 186, 203, 0, 0, 333, 373, 379, 0,
	0, 0, 227, 0, 377, 347, 435, 211, 254, 370,
	352, 375, 0, 0, 2457, 0, 376, 298, 423, 365,
	433, 452, 453, 234, 327, 442, 412, 448, 464, 204,
	231, 341, 405, 438, 396, 320, 419, 420, 288, 395,
	262, 189, 296, 458, 202, 385, 219, 209, 195, 407,
	431, 216, 388, 0, 0, 466, 197, 429, 404, 316,
	285, 286, 196, 0, 369, 239, 260, 229, 336, 426,
	427, 228, 467, 206, 447, 199, 0, 446, 329, 422,
	430, 317, 308, 198, 428, 315, 307, 291, 250, 271,
	363, 301, 364, 272, 325, 324, 326, 192, 439, 0,
	193, 0, 401, 440, 468, 212, 213, 214, 0, 249,
	253, 259, 261, 267, 268, 275, 294, 340, 362, 360,
	366, 0, 417, 434, 443, 450, 456, 457, 459, 460,
	461, 462, 463, 328, 274, 397, 290, 299, 0, 0,
	346, 378, 217, 437, 398, 602, 594, 584, 586, 603,
	604, 581, 582, 585, 605, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 597, 571, 570, 0, 577, 578,
	0, 587, 588, 590, 569, 185, 200, 295, 0, 367,
	257, 465, 445, 441, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 201, 210, 220, 232, 247, 255, 265, 270, 273,
	278, 279, 282, 287, 305, 310, 311, 312, 313, 330,
	331, 332, 335, 338, 339, 342, 344, 345, 348, 355,
	356, 357, 358, 359, 361, 368, 372, 380, 381, 382,
	383, 384, 386, 387, 391, 392, 393, 394, 402, 406,
	424, 425, 436, 449, 454, 266, 432, 455, 0, 304,
	0, 0, 306, 251, 269, 280, 0, 444, 403, 205,
	374, 258, 194, 223, 208, 230, 245, 248, 284, 314,
	321, 350, 354, 263, 242, 221, 371, 218, 389, 409,
	410, 411, 413, 318, 237, 353, 414, 0, 302, 415,
	416, 276, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 568, 0, 0, 0, 241, 573, 0,
	0, 0, 293, 238, 0, 0, 351, 0, 191, 0,
	390, 226, 303, 300, 421, 252, 244, 240, 225, 277,
	309, 349, 408, 343, 580, 297, 0, 0, 399, 322,
	0, 0, 0, 0, 0, 575, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 224, 190, 334, 400,
	256, 0, 85, 0, 1192, 182, 183, 184, 611, 618,
	619, 620, 621, 622, 612, 614, 0, 0, 215, 613,
	222, 589, 616, 623, 624, 0, 236, 281, 243, 235,
	418, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 551, 565, 0, 579, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 562, 563, 0, 0, 0,
	0, 596, 0, 564, 0, 0, 572, 625, 626, 627,
	628, 629, 630, 631, 632, 633, 634, 635, 636, 637,
	638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 650, 651, 652, 653, 654, 655, 656, 657,
	658, 659, 660, 661, 662, 663, 664, 665, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	323, 0, 595, 0, 0, 451, 0, 0, 593, 0,
	0, 0, 0, 292, 0, 289, 186, 203, 0, 0,
	333, 373, 379, 0, 0, 0, 227, 0, 377, 347,
	435, 211, 254, 370, 352, 375, 0, 0, 0, 0,
	376, 298, 423, 365, 433, 452, 453, 234, 327, 442,
	412, 448, 464, 204, 231, 341, 405, 438, 396, 320,
	419, 420, 288, 395, 262, 189, 296, 458, 202, 385,
	219, 209, 195, 407, 431, 216, 388, 0, 0, 466,
	197, 429, 404, 316, 285, 286, 196, 0, 369, 239,
	260, 229, 336, 426, 427, 228, 467, 206, 447, 199,
	0, 446, 329, 422, 430, 317, 308, 198, 428, 315,
	307, 291, 250, 271, 363, 301, 364, 272, 325, 324,
	326, 192, 439, 0, 193, 0, 401, 440, 468, 212,
	213, 214, 0, 249, 253, 259, 261, 267, 268, 275,
	294, 340, 362, 360, 366, 0, 417, 434, 443, 450,
	456, 457, 459, 460, 461, 462, 463, 328, 274, 397,
	290, 299, 0, 0, 346, 378, 217, 437, 398, 602,
	594, 584, 586, 603, 604, 581, 582, 585, 605, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 597, 571,
	570, 0, 577, 578, 0, 587, 588, 590, 569, 185,
	200, 295, 0, 367, 257, 465, 445, 441, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 188, 201, 210, 220, 232, 247,
	255, 265, 270, 273, 278, 279, 282, 287, 305, 310,
	311, 312, 313, 330, 331, 332, 335, 338, 339, 342,
	344, 345, 348, 355, 356, 357, 358, 359, 361, 368,
	372, 380, 381, 382, 383, 384, 386, 387, 391, 392,
	393, 394, 402, 406, 424, 425, 436, 449, 454, 266,
	432, 455, 0, 304, 0, 0, 306, 251, 269, 280,
	0, 444, 403, 205, 374, 258, 194, 223, 208, 230,
	245, 248, 284, 314, 321, 350, 354, 263, 242, 221,
	371, 218, 389, 409, 410, 411, 413, 318, 237, 353,
	414, 0, 302, 415, 416, 276, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 568, 0, 0,
	0, 241, 573, 0, 0, 0, 293, 238, 0, 0,
	351, 0, 191, 0, 390, 226, 303, 300, 421, 252,
	244, 240, 225, 277, 309, 349, 408, 343, 580, 297,
	0, 0, 399, 322, 0, 0, 0, 0, 0, 575,
	576, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	224, 190, 334, 400, 256, 0, 85, 0, 0, 182,
	183, 184, 611, 618, 619, 620, 621, 622, 612, 614,
	0, 0, 215, 613, 222, 589, 616, 623, 624, 0,
	236, 281, 243, 235, 418, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 551, 565, 0,
	579, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	563, 704, 0, 0, 0, 596, 0, 564, 0, 0,
	572, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 659, 660, 661, 662, 663,
	664, 665, 574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 323, 0, 595, 0, 0, 451,
	0, 0, 593, 0, 0, 0, 0, 292, 0, 289,
	186, 203, 0, 0, 333, 373, 379, 0, 0, 0,
	227, 0, 377, 347, 435, 211, 254, 370, 352, 375,
	0, 0, 0, 0, 376, 298, 423, 365, 433, 452,
	453, 234, 327, 442, 412, 448, 464, 204, 231, 341,
	405, 438, 396, 320, 419, 420, 288, 395, 262, 189,
	296, 458, 202, 385, 219, 209, 195, 407, 431, 216,
	388, 0, 0, 466, 197, 429, 404, 316, 285, 286,
	196, 0, 369, 239, 260, 229, 336, 426, 427, 228,
	467, 206, 447, 199, 0, 446, 329, 422, 430, 317,
	308, 198, 428, 315, 307, 291, 250, 271, 363, 301,
	364, 272, 325, 324, 326, 192, 439, 0, 193, 0,
	401, 440, 468, 212, 213, 214, 0, 249, 253, 259,
	261, 267, 268, 275, 294, 340, 362, 360, 366, 0,
	417, 434, 443, 450, 456, 457, 459, 460, 461, 462,
	463, 328, 274, 397, 290, 299, 0, 0, 346, 378,
	217, 437, 398, 602, 594, 584, 586, 603, 604, 581,
	582, 585, 605, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 597, 571, 570, 0, 577, 578, 0, 587,
	588, 590, 569, 185, 200, 295, 0, 367, 257, 465,
	445, 441, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 201,
	210, 220, 232, 247, 255, 265, 270, 273, 278, 279,
	282, 287, 305, 310, 311, 312, 313, 330, 331, 332,
	335, 338, 339, 342, 344, 345, 348, 355, 356, 357,
	358, 359, 361, 368, 372, 380, 381, 382, 383, 384,
	386, 387, 391, 392, 393, 394, 402, 406, 424, 425,
	436, 449, 454, 266, 432, 455, 0, 304, 0, 0,
	306, 251, 269, 280, 0, 444, 403, 205, 374, 258,
	194, 223, 208, 230, 245, 248, 284, 314, 321, 350,
	354, 263, 242, 221, 371, 218, 389, 409, 410, 411,
	413, 318, 237, 353, 414, 0, 302, 415, 416, 276,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 568, 0, 0, 0, 241, 573, 0, 0, 0,
	293, 238, 0, 0, 351, 0, 191, 0, 390, 226,
	303, 300, 421, 252, 244, 240, 225, 277, 309, 349,
	408, 343, 580, 297, 0, 0, 399, 322, 0, 0,
	0, 0, 0, 575, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 224, 190, 334, 400, 256, 0,
	85, 0, 0, 182, 183, 184, 611, 618, 619, 620,
	621, 622, 612, 614, 0, 0, 215, 613, 222, 589,
	616, 623, 624, 0, 236, 281, 243, 235, 418, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 551, 565, 0, 579, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 562, 563, 0, 0, 0, 0, 596,
	0, 564, 0, 0, 572, 625, 626, 627, 628, 629,
	630, 631, 632, 633, 634, 635, 636, 637, 638, 639,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 652, 653, 654, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 664, 665, 574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 323, 0,
	595, 0, 0, 451, 0, 0, 593, 0, 0, 0,
	0, 292, 0, 289, 186, 203, 0, 0, 333, 373,
	379, 0, 0, 0, 227, 0, 377, 347, 435, 211,
	254, 370, 352, 375, 0, 0, 0, 0, 376, 298,
	423, 365, 433, 452, 453, 234, 327, 442, 412, 448,
	464, 204, 231, 341, 405, 438, 396, 320, 419, 420,
	288, 395, 262, 189, 296, 458, 202, 385, 219, 209,
	195, 407, 431, 216, 388, 0, 0, 466, 197, 429,
	404, 316, 285, 286, 196, 0, 369, 239, 260, 229,
	336, 426, 427, 228, 467, 206, 447, 199, 0, 446,
	329, 422, 430, 317, 308, 198, 428, 315, 307, 291,
	250, 271, 363, 301, 364, 272, 325, 324, 326, 192,
	439, 0, 193, 0, 401, 440, 468, 212, 213, 214,
	0, 249, 253, 259, 261, 267, 268, 275, 294, 340,
	362, 360, 366, 0, 417, 434, 443, 450, 456, 457,
	459, 460, 461, 462, 463, 328, 274, 397, 290, 299,
	0, 0, 346, 378, 217, 437, 398, 602, 594, 584,
	586, 603, 604, 581, 582, 585, 605, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 597, 571, 570, 0,
	577, 578, 0, 587, 588, 590, 569, 185, 200, 295,
	0, 367, 257, 465, 445, 441, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 201, 210, 220, 232, 247, 255, 265,
	270, 273, 278, 279, 282, 287, 305, 310, 311, 312,
	313, 330, 331, 332, 335, 338, 339, 342, 344, 345,
	348, 355, 356, 357, 358, 359, 361, 368, 372, 380,
	381, 382, 383, 384, 386, 387, 391, 392, 393, 394,
	402, 406, 424, 425, 436, 449, 454, 266, 432, 455,
	0, 304, 0, 0, 306, 251, 269, 280, 0, 444,
	403, 205, 374, 258, 194, 223, 208, 230, 245, 248,
	284, 314, 321, 350, 354, 263, 242, 221, 371, 218,
	389, 409, 410, 411, 413, 318, 237, 353, 414, 0,
	302, 415, 416, 276, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 568, 0, 0, 0, 241,
	573, 0, 0, 0, 293, 238, 0, 0, 351, 0,
	191, 0, 390, 226, 303, 300, 421, 252, 244, 240,
	225, 277, 309, 349, 408, 343, 580, 297, 0, 0,
	399, 322, 0, 0, 0, 0, 0, 575, 576, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 224, 190,
	334, 400, 256, 0, 85, 0, 0, 182, 183, 184,
	611, 618, 619, 620, 621, 622, 612, 614, 0, 0,
	215, 613, 222, 589, 616, 623, 624, 0, 236, 281,
	243, 235, 418, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 565, 0, 579, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 563, 0,
	0, 0, 0, 596, 0, 564, 0, 0, 572, 625,
	626, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 323, 0, 595, 0, 0, 451, 0, 0,
	593, 0, 0, 0, 0, 292, 0, 289, 186, 203,
	0, 0, 333, 373, 379, 0, 0, 0, 227, 0,
	377, 347, 435, 211, 254, 370, 352, 375, 0, 0,
	0, 0, 376, 298, 423, 365, 433, 452, 453, 234,
	327, 442, 412, 448, 464, 204, 231, 341, 405, 438,
	396, 320, 419, 420, 288, 395, 262, 189, 296, 458,
	202, 385, 219, 209, 195, 407, 431, 216, 388, 0,
	0, 466, 197, 429, 404, 316, 285, 286, 196, 0,
	369, 239, 260, 229, 336, 426, 427, 228, 467, 206,
	447, 199, 0, 446, 329, 422, 430, 317, 308, 198,
	428, 315, 307, 291, 250, 271, 363, 301, 364, 272,
	325, 324, 326, 192, 439, 0, 193, 0, 401, 440,
	468, 212, 213, 214, 0, 249, 253, 259, 261, 267,
	268, 275, 294, 340, 362, 360, 366, 0, 417, 434,
	443, 450, 456, 457, 459, 460, 461, 462, 463, 328,
	274, 397, 290, 299, 0, 0, 346, 378, 217, 437,
	398, 602, 594, 584, 586, 603, 604, 581, 582, 585,
	605, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	597, 571, 570, 0, 577, 578, 0, 587, 588, 590,
	569, 185, 200, 295, 0, 367, 257, 465, 445, 441,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 188, 201, 210, 220,
	232, 247, 255, 265, 270, 273, 278, 279, 282, 287,
	305, 310, 311, 312, 313, 330, 331, 332, 335, 338,
	339, 342, 344, 345, 348, 355, 356, 357, 358, 359,
	361, 368, 372, 380, 381, 382, 383, 384, 386, 387,
	391, 392, 393, 394, 402, 406, 424, 425, 436, 449,
	454, 266, 432, 455, 0, 304, 0, 0, 306, 251,
	269, 280, 0, 444, 403, 205, 374, 258, 194, 223,
	208, 230, 245, 248, 284, 314, 321, 350, 354, 263,
	242, 221, 371, 218, 389, 409, 410, 411, 413, 318,
	237, 353, 414, 0, 302, 415, 416, 276, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 293, 238,
	0, 0, 351, 0, 191, 0, 390, 226, 303, 300,
	421, 252, 244, 240, 225, 277, 309, 349, 408, 343,
	0, 297, 0, 0, 399, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 224, 190, 334, 400, 256, 0, 0, 0,
	0, 182, 183, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 222, 0, 0, 0,
	0, 0, 236, 281, 243, 235, 418, 0, 0, 0,
	0, 207, 0, 916, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 323, 0, 0, 0,
	915, 451, 0, 0, 0, 0, 0, 912, 913, 292,
	876, 289, 186, 203, 906, 910, 333, 373, 379, 0,
	0, 0, 227, 0, 377, 347, 435, 211, 254, 370,
	352, 375, 0, 0, 0, 0, 376, 298, 423, 365,
	433, 452, 453, 234, 327, 442, 412, 448, 464, 204,
	231, 341, 405, 438, 396, 320, 419, 420, 288, 395,
	262, 189, 296, 458, 202, 385, 219, 209, 195, 407,
	431, 216, 388, 0, 0, 466, 197, 429, 404, 316,
	285, 286, 196, 0, 369, 239, 260, 229, 336, 426,
	427, 228, 467, 206, 447, 199, 0, 446, 329, 422,
	430, 317, 308, 198, 428, 315, 307, 291, 250, 271,
	363, 301, 364, 272, 325, 324, 326, 192, 439, 0,
	193, 0, 401, 440, 468, 212, 213, 214, 0, 249,
	253, 259, 261, 267, 268, 275, 294, 340, 362, 360,
	366, 0, 417, 434, 443, 450, 456, 457, 459, 460,
	461, 462, 463, 328, 274, 397, 290, 299, 0, 0,
	346, 378, 217, 437, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 185, 200, 295, 0, 367,
	257, 465, 445, 441, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 201, 210, 220, 232, 247, 255, 265, 270, 273,
	278, 279, 282, 287, 305, 310, 311, 312, 313, 330,
	331, 332, 335, 338, 339, 342, 344, 345, 348, 355,
	356, 357, 358, 359, 361, 368, 372, 380, 381, 382,
	383, 384, 386, 387, 391, 392, 393, 394, 402, 406,
	424, 425, 436, 449, 454, 266, 432, 455, 0, 304,
	0, 0, 306, 251, 269, 280, 0, 444, 403, 205,
	374, 258, 194, 223, 208, 230, 245, 248, 284, 314,
	321, 350, 354, 263, 242, 221, 371, 218, 389, 409,
	410, 411, 413, 318, 237, 353, 414, 0, 302, 415,
	416, 276, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 1212, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 293, 238, 0, 0, 351, 0, 191, 0,
	390, 226, 303, 300, 421, 252, 244, 240, 225, 277,
	309, 349, 408, 343, 0, 297, 0, 0, 399, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 224, 190, 334, 400,
	256, 0, 0, 0, 0, 182, 183, 184, 0, 1214,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	222, 0, 0, 0, 0, 0, 236, 281, 243, 235,
	418, 0, 0, 0, 0, 207, 0, 0, 0, 1079,
	0, 1080, 1081, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	323, 0, 0, 0, 0, 451, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 289, 186, 203, 0, 0,
	333, 373, 379, 0, 0, 0, 227, 0, 377, 347,
	435, 211, 254, 370, 352, 375, 0, 0, 0, 0,
	376, 298, 423, 365, 433, 452, 453, 234, 327, 442,
	412, 448, 464, 204, 231, 341, 405, 438, 396, 320,
	419, 420, 288, 395, 262, 189, 296, 458, 202, 385,
	219, 209, 195, 407, 431, 216, 388, 0, 0, 466,
	197, 429, 404, 316, 285, 286, 196, 0, 369, 239,
	260, 229, 336, 426, 427, 228, 467, 206, 447, 199,
	0, 446, 329, 422, 430, 317, 308, 198, 428, 315,
	307, 291, 250, 271, 363, 301, 364, 272, 325, 324,
	326, 192, 439, 0, 193, 0, 401, 440, 468, 212,
	213, 214, 0, 249, 253, 259, 261, 267, 268, 275,
	294, 340, 362, 360, 366, 0, 417, 434, 443, 450,
	456, 457, 459, 460, 461, 462, 463, 328, 274, 397,
	290, 299, 0, 0, 346, 378, 217, 437, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 185,
	200, 295, 0, 367, 257, 465, 445, 441, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 188, 201, 210, 220, 232, 247,
	255, 265, 270, 273, 278, 279, 282, 287, 305, 310,
	311, 312, 313, 330, 331, 332, 335, 338, 339, 342,
	344, 345, 348, 355, 356, 357, 358, 359, 361, 368,
	372, 380, 381, 382, 383, 384, 386, 387, 391, 392,
	393, 394, 402, 406, 424, 425, 436, 449, 454, 266,
	432, 455, 0, 304, 0, 0, 306, 251, 269, 280,
	0, 444, 403, 205, 374, 258, 194, 223, 208, 230,
	245, 248, 284, 314, 321, 350, 354, 263, 242, 221,
	371, 218, 389, 409, 410, 411, 413, 318, 237, 353,
	414, 0, 302, 415, 416, 276, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 293, 238, 0, 0,
	351, 0, 191, 0, 390, 226, 303, 300, 421, 252,
	244, 240, 225, 277, 309, 349, 408, 343, 0, 297,
	0, 0, 399, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	224, 190, 334, 400, 256, 0, 0, 0, 0, 182,
	183, 184, 1155, 1158, 0, 0, 0, 0, 1154, 1157,
	0, 0, 215, 1153, 222, 0, 0, 0, 0, 0,
	236, 281, 243, 235, 418, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 323, 0, 0, 0, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 289,
	186, 203, 0, 0, 333, 373, 379, 0, 0, 0,
	227, 0, 377, 347, 435, 211, 254, 370, 352, 375,
	0, 0, 0, 0, 376, 298, 423, 365, 433, 452,
	453, 234, 327, 442, 412, 448, 464, 204, 231, 341,
	405, 438, 396, 320, 419, 420, 288, 395, 262, 189,
	296, 458, 202, 385, 219, 209, 195, 407, 431, 216,
	388, 0, 0, 466, 197, 429, 404, 316, 285, 286,
	196, 0, 369, 239, 260, 229, 336, 426, 427, 228,
	467, 206, 447, 199, 0, 446, 329, 422, 430, 317,
	308, 198, 428, 315, 307, 291, 250, 271, 363, 301,
	364, 272, 325, 324, 326, 192, 439, 0, 193, 0,
	401, 440, 468, 212, 213, 214, 0, 249, 253, 259,
	261, 267, 268, 275, 294, 340, 362, 360, 366, 0,
	417, 434, 443, 450, 456, 457, 459, 460, 461, 462,
	463, 328, 274, 397, 290, 299, 0, 0, 346, 378,
	217, 437, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 185, 200, 295, 0, 367, 257, 465,
	445, 441, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 201,
	210, 220, 232, 247, 255, 265, 270, 273, 278, 279,
	282, 287, 305, 310, 311, 312, 313, 330, 331, 332,
	335, 338, 339, 342, 344, 345, 348, 355, 356, 357,
	358, 359, 361, 368, 372, 380, 381, 382, 383, 384,
	386, 387, 391, 392, 393, 394, 402, 406, 424, 425,
	436, 449, 454, 266, 432, 455, 0, 304, 0, 0,
	306, 251, 269, 280, 0, 444, 403, 205, 374, 258,
	194, 223, 208, 230, 245, 248, 284, 314, 321, 350,
	354, 263, 242, 221, 371, 218, 389, 409, 410, 411,
	413, 318, 237, 353, 76, 414, 302, 415, 416, 276,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 293, 238, 0, 0, 351, 0, 191, 0, 390,
	226, 303, 300, 421, 252, 244, 240, 225, 277, 309,
	349, 408, 343, 0, 297, 0, 0, 399, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 224, 190, 334, 400, 256,
	0, 85, 0, 1192, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 222,
	0, 0, 0, 0, 0, 236, 281, 243, 235, 418,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 323,
	0, 0, 0, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 289, 186, 203, 0, 0, 333,
	373, 379, 0, 0, 0, 227, 0, 377, 347, 435,
	211, 254, 370, 352, 375, 0, 0, 0, 0, 376,
	298, 423, 365, 433, 452, 453, 234, 327, 442, 412,
	448, 464, 204, 231, 341, 405, 438, 396, 320, 419,
	420, 288, 395, 262, 189, 296, 458, 202, 385, 219,
	209, 195, 407, 431, 216, 388, 0, 0, 466, 197,
	429, 404, 316, 285, 286, 196, 0, 369, 239, 260,
	229, 336, 426, 427, 228, 467, 206, 447, 199, 0,
	446, 329, 422, 430, 317, 308, 198, 428, 315, 307,
	291, 250, 271, 363, 301, 364, 272, 325, 324, 326,
	192, 439, 0, 193, 0, 401, 440, 468, 212, 213,
	214, 0, 249, 253, 259, 261, 267, 268, 275, 294,
	340, 362, 360, 366, 0, 417, 434, 443, 450, 456,
	457, 459, 460, 461, 462, 463, 328, 274, 397, 290,
	299, 0, 0, 346, 378, 217, 437, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 185, 200,
	295, 84, 367, 257, 465, 445, 441, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 201, 210, 220, 232, 247, 255,
	265, 270, 273, 278, 279, 282, 287, 305, 310, 311,
	312, 313, 330, 331, 332, 335, 338, 339, 342, 344,
	345, 348, 355, 356, 357, 358, 359, 361, 368, 372,
	380, 381, 382, 383, 384, 386, 387, 391, 392, 393,
	394, 402, 406, 424, 425, 436, 449, 454, 266, 432,
	455, 0, 304, 0, 0, 306, 251, 269, 280, 0,
	444, 403, 205, 374, 258, 194, 223, 208, 230, 245,
	248, 284, 314, 321, 350, 354, 263, 242, 221, 371,
	218, 389, 409, 410, 411, 413, 318, 237, 353, 76,
	414, 302, 415, 416, 276, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 293, 238, 0, 0,
	351, 0, 191, 0, 390, 226, 303, 300, 421, 252,
	244, 240, 225, 277, 309, 349, 408, 343, 0, 297,
	0, 0, 399, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	224, 190, 334, 400, 256, 0, 85, 0, 0, 182,
	183, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 222, 0, 0, 0, 0, 0,
	236, 281, 243, 235, 418, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 323, 0, 0, 0, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 289,
	186, 203, 0, 0, 333, 373, 379, 0, 0, 0,
	227, 0, 377, 347, 435, 211, 254, 370, 352, 375,
	0, 0, 0, 0, 376, 298, 423, 365, 433, 452,
	453, 234, 327, 442, 412, 448, 464, 204, 231, 341,
	405, 438, 396, 320, 419, 420, 288, 395, 262, 189,
	296, 458, 202, 385, 219, 209, 195, 407, 431, 216,
	388, 0, 0, 466, 197, 429, 404, 316, 285, 286,
	196, 0, 369, 239, 260, 229, 336, 426, 427, 228,
	467, 206, 447, 199, 0, 446, 329, 422, 430, 317,
	308, 198, 428, 315, 307, 291, 250, 271, 363, 301,
	364, 272, 325, 324, 326, 192, 439, 0, 193, 0,
	401, 440, 468, 212, 213, 214, 0, 249, 253, 259,
	261, 267, 268, 275, 294, 340, 362, 360, 366, 0,
	417, 434, 443, 450, 456, 457, 459, 460, 461, 462,
	463, 328, 274, 397, 290, 299, 0, 0, 346, 378,
	217, 437, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 185, 200, 295, 84, 367, 257, 465,
	445, 441, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 201,
	210, 220, 232, 247, 255, 265, 270, 273, 278, 279,
	282, 287, 305, 310, 311, 312, 313, 330, 331, 332,
	335, 338, 339, 342, 344, 345, 348, 355, 356, 357,
	358, 359, 361, 368, 372, 380, 381, 382, 383, 384,
	386, 387, 391, 392, 393, 394, 402, 406, 424, 425,
	436, 449, 454, 266, 432, 455, 0, 304, 0, 0,
	306, 251, 269, 280, 0, 444, 403, 205, 374, 258,
	194, 223, 208, 230, 245, 248, 284, 314, 321, 350,
	354, 263, 242, 221, 371, 218, 389, 409, 410, 411,
	413, 318, 237, 353, 414, 0, 302, 415, 416, 276,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	1590, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	293, 238, 0, 0, 351, 0, 191, 0, 390, 226,
	303, 300, 421, 252, 244, 240, 225, 277, 309, 349,
	408, 343, 0, 297, 0, 0, 399, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 224, 190, 334, 400, 256, 0,
	0, 0, 0, 182, 183, 184, 0, 1384, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 222, 0,
	0, 0, 0, 0, 236, 281, 243, 235, 418, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 323, 0,
	0, 0, 0, 451, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 289, 186, 203, 0, 0, 333, 373,
	379, 0, 0, 0, 227, 0, 377, 347, 435, 211,
	254, 370, 352, 375, 0, 0, 0, 1588, 376, 298,
	423, 365, 433, 452, 453, 234, 327, 442, 412, 448,
	464, 204, 231, 341, 405, 438, 396, 320, 419, 420,
	288, 395, 262, 189, 296, 458, 202, 385, 219, 209,
	195, 407, 431, 216, 388, 0, 0, 466, 197, 429,
	404, 316, 285, 286, 196, 0, 369, 239, 260, 229,
	336, 426, 427, 228, 467, 206, 447, 199, 0, 446,
	329, 422, 430, 317, 308, 198, 428, 315, 307, 291,
	250, 271, 363, 301, 364, 272, 325, 324, 326, 192,
	439, 0, 193, 0, 401, 440, 468, 212, 213, 214,
	0, 249, 253, 259, 261, 267, 268, 275, 294, 340,
	362, 360, 366, 0, 417, 434, 443, 450, 456, 457,
	459, 460, 461, 462, 463, 328, 274, 397, 290, 299,
	0, 0, 346, 378, 217, 437, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 185, 200, 295,
	0, 367, 257, 465, 445, 441, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 201, 210, 220, 232, 247, 255, 265,
	270, 273, 278, 279, 282, 287, 305, 310, 311, 312,
	313, 330, 331, 332, 335, 338, 339, 342, 344, 345,
	348, 355, 356, 357, 358, 359, 361, 368, 372, 380,
	381, 382, 383, 384, 386, 387, 391, 392, 393, 394,
	402, 406, 424, 425, 436, 449, 454, 266, 432, 455,
	0, 304, 0, 0, 306, 251, 269, 280, 0, 444,
	403, 205, 374, 258, 194, 223, 208, 230, 245, 248,
	284, 314, 321, 350, 354, 263, 242, 221, 371, 218,
	389, 409, 410, 411, 413, 318, 237, 353, 414, 0,
	302, 415, 416, 276, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 293, 238, 0, 0, 351, 0,
	191, 0, 390, 226, 303, 300, 421, 252, 244, 240,
	225, 277, 309, 349, 408, 343, 0, 297, 0, 0,
	399, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 224, 190,
	334, 400, 256, 0, 0, 0, 0, 182, 183, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 222, 0, 0, 0, 0, 0, 236, 281,
	243, 235, 418, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 323, 0, 0, 0, 0, 451, 0, 0,
	0, 0, 0, 0, 0, 292, 876, 289, 186, 203,
	874, 0, 333, 373, 379, 0, 0, 0, 227, 0,
	377, 347, 435, 211, 254, 370, 352, 375, 0, 0,
	0, 0, 376, 298, 423, 365, 433, 452, 453, 234,
	327, 442, 412, 448, 464, 204, 231, 341, 405, 438,
	396, 320, 419, 420, 288, 395, 262, 189, 296, 458,
	202, 385, 219, 209, 195, 407, 431, 216, 388, 0,
	0, 466, 197, 429, 404, 316, 285, 286, 196, 0,
	369, 239, 260, 229, 336, 426, 427, 228, 467, 206,
	447, 199, 0, 446, 329, 422, 430, 317, 308, 198,
	428, 315, 307, 291, 250, 271, 363, 301, 364, 272,
	325, 324, 326, 192, 439, 0, 193, 0, 401, 440,
	468, 212, 213, 214, 0, 249, 253, 259, 261, 267,
	268, 275, 294, 340, 362, 360, 366, 0, 417, 434,
	443, 450, 456, 457, 459, 460, 461, 462, 463, 328,
	274, 397, 290, 299, 0, 0, 346, 378, 217, 437,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 487,
	0, 185, 200, 295, 0, 367, 257, 465, 445, 441,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 188, 201, 210, 220,
	232, 247, 255, 265, 270, 273, 278, 279, 282, 287,
	305, 310, 311, 312, 313, 330, 331, 332, 335, 338,
	339, 342, 344, 345, 348, 355, 356, 357, 358, 359,
	361, 368, 372, 380, 381, 382, 383, 384, 386, 387,
	391, 392, 393, 394, 402, 406, 424, 425, 436, 449,
	454, 266, 432, 455, 0, 304, 0, 0, 306, 251,
	269, 280, 0, 444, 403, 205, 374, 258, 194, 223,
	208, 230, 245, 248, 284, 314, 321, 350, 354, 263,
	242, 221, 371, 218, 389, 409, 410, 411, 413, 318,
	237, 353, 414, 0, 302, 415, 416, 276, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 293, 238,
	0, 0, 351, 0, 191, 0, 390, 226, 303, 300,
	421, 252, 244, 240, 225, 277, 309, 349, 408, 343,
	0, 297, 0, 0, 399, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 224, 190, 334, 400, 256, 0, 0, 0,
	1192, 182, 183, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 222, 0, 0, 0,
	0, 0, 236, 281, 243, 235, 418, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 323, 0, 0, 0,
	0, 451, 0, 0, 0, 2427, 0, 0, 0, 292,
	0, 289, 186, 203, 0, 0, 333, 373, 379, 0,
	0, 0, 227, 0, 377, 347, 435, 211, 254, 370,
	352, 375, 0, 0, 0, 0, 376, 298, 423, 365,
	433, 452, 453, 234, 327, 442, 412, 448, 464, 204,
	231, 341, 405, 438, 396, 320, 419, 420, 288, 395,
	262, 189, 296, 458, 202, 385, 219, 209, 195, 407,
	431, 216, 388, 0, 0, 466, 197, 429, 404, 316,
	285, 286, 196, 0, 369, 239, 260, 229, 336, 426,
	427, 228, 467, 206, 447, 199, 0, 446, 329, 422,
	430, 317, 308, 198, 428, 315, 307, 291, 250, 271,
	363, 301, 364, 272, 325, 324, 326, 192, 439, 0,
	193, 0, 401, 440, 468, 212, 213, 214, 0, 249,
	253, 259, 261, 267, 268, 275, 294, 340, 362, 360,
	366, 0, 417, 434, 443, 450, 456, 457, 459, 460,
	461, 462, 463, 328, 274, 397, 290, 299, 0, 0,
	346, 378, 217, 437, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 185, 200, 295, 0, 367,
	257, 465, 445, 441, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 201, 210, 220, 232, 247, 255, 265, 270, 273,
	278, 279, 282, 287, 305, 310, 311, 312, 313, 330,
	331, 332, 335, 338, 339, 342, 344, 345, 348, 355,
	356, 357, 358, 359, 361, 368, 372, 380, 381, 382,
	383, 384, 386, 387, 391, 392, 393, 394, 402, 406,
	424, 425, 436, 449, 454, 266, 432, 455, 0, 304,
	0, 0, 306, 251, 269, 280, 0, 444, 403, 205,
	374, 258, 194, 223, 208, 230, 245, 248, 284, 314,
	321, 350, 354, 263, 242, 221, 371, 218, 389, 409,
	410, 411, 413, 318, 237, 353, 414, 0, 302, 415,
	416, 276, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 1590, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 293, 238, 0, 0, 351, 0, 191, 0,
	390, 226, 303, 300, 421, 252, 244, 240, 225, 277,
	309, 349, 408, 343, 0, 297, 0, 0, 399, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 224, 190, 334, 400,
	256, 0, 0, 0, 0, 182, 183, 184, 0, 1384,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	222, 0, 0, 0, 0, 0, 236, 281, 243, 235,
	418, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	323, 0, 0, 0, 0, 451, 0, 0, 0, 0,
	0, 0, 0, 292, 0, 289, 186, 203, 0, 0,
	333, 373, 379, 0, 0, 0, 227, 0, 377, 347,
	435, 211, 254, 370, 352, 375, 0, 0, 0, 0,
	376, 298, 423, 365, 433, 452, 453, 234, 327, 442,
	412, 448, 464, 204, 231, 341, 405, 438, 396, 320,
	419, 420, 288, 395, 262, 189, 296, 458, 202, 385,
	219, 209, 195, 407, 431, 216, 388, 0, 0, 466,
	197, 429, 404, 316, 285, 286, 196, 0, 369, 239,
	260, 229, 336, 426, 427, 228, 467, 206, 447, 199,
	0, 446, 329, 422, 430, 317, 308, 198, 428, 315,
	307, 291, 250, 271, 363, 301, 364, 272, 325, 324,
	326, 192, 439, 0, 193, 0, 401, 440, 468, 212,
	213, 214, 0, 249, 253, 259, 261, 267, 268, 275,
	294, 340, 362, 360, 366, 0, 417, 434, 443, 450,
	456, 457, 459, 460, 461, 462, 463, 328, 274, 397,
	290, 299, 0, 0, 346, 378, 217, 437, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 185,
	200, 295, 0, 367, 257, 465, 445, 441, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 188, 201, 210, 220, 232, 247,
	255, 265, 270, 273, 278, 279, 282, 287, 305, 310,
	311, 312, 313, 330, 331, 332, 335, 338, 339, 342,
	344, 345, 348, 355, 356, 357, 358, 359, 361, 368,
	372, 380, 381, 382, 383, 384, 386, 387, 391, 392,
	393, 394, 402, 406, 424, 425, 436, 449, 454, 266,
	432, 455, 0, 304, 0, 0, 306, 251, 269, 280,
	0, 444, 403, 205, 374, 258, 194, 223, 208, 230,
	245, 248, 284, 314, 321, 350, 354, 263, 242, 221,
	371, 218, 389, 409, 410, 411, 413, 318, 237, 353,
	414, 0, 302, 415, 416, 276, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 293, 238, 0, 0,
	351, 0, 191, 0, 390, 226, 303, 300, 421, 252,
	244, 240, 225, 277, 309, 349, 408, 343, 0, 297,
	0, 0, 399, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	224, 190, 334, 400, 256, 0, 0, 0, 0, 182,
	183, 184, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 222, 0, 0, 0, 0, 0,
	236, 281, 243, 235, 418, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1869, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 323, 0, 0, 0, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 289,
	186, 203, 0, 0, 333, 373, 379, 0, 0, 0,
	227, 0, 377, 347, 435, 211, 254, 370, 352, 375,
	0, 0, 0, 0, 376, 298, 423, 365, 433, 452,
	453, 234, 327, 442, 412, 448, 464, 204, 231, 341,
	405, 438, 396, 320, 419, 420, 288, 395, 262, 189,
	296, 458, 202, 385, 219, 209, 195, 407, 431, 216,
	388, 0, 0, 466, 197, 429, 404, 316, 285, 286,
	196, 0, 369, 239, 260, 229, 336, 426, 427, 228,
	467, 206, 447, 199, 0, 446, 329, 422, 430, 317,
	308, 198, 428, 315, 307, 291, 250, 271, 363, 301,
	364, 272, 325, 324, 326, 192, 439, 0, 193, 0,
	401, 440, 468, 212, 213, 214, 0, 249, 253, 259,
	261, 267, 268, 275, 294, 340, 362, 360, 366, 0,
	417, 434, 443, 450, 456, 457, 459, 460, 461, 462,
	463, 328, 274, 397, 290, 299, 0, 0, 346, 378,
	217, 437, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 185, 200, 295, 0, 367, 257, 465,
	445, 441, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 201,
	210, 220, 232, 247, 255, 265, 270, 273, 278, 279,
	282, 287, 305, 310, 311, 312, 313, 330, 331, 332,
	335, 338, 339, 342, 344, 345, 348, 355, 356, 357,
	358, 359, 361, 368, 372, 380, 381, 382, 383, 384,
	386, 387, 391, 392, 393, 394, 402, 406, 424, 425,
	436, 449, 454, 266, 432, 455, 0, 304, 0, 0,
	306, 251, 269, 280, 0, 444, 403, 205, 374, 258,
	194, 223, 208, 230, 245, 248, 284, 314, 321, 350,
	354, 263, 242, 221, 371, 218, 389, 409, 410, 411,
	413, 318, 237, 353, 414, 0, 302, 415, 416, 276,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	293, 238, 0, 0, 351, 0, 191, 0, 390, 226,
	303, 300, 421, 252, 244, 240, 225, 277, 309, 349,
	408, 343, 0, 297, 0, 0, 399, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 224, 190, 334, 400, 256, 0,
	0, 0, 0, 182, 183, 184, 0, 0, 0, 1854,
	0, 0, 0, 1855, 0, 0, 215, 0, 222, 0,
	0, 0, 0, 0, 236, 281, 243, 235, 418, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 323, 0,
	0, 0, 0, 451, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 289, 186, 203, 0, 0, 333, 373,
	379, 0, 0, 0, 227, 0, 377, 347, 435, 211,
	254, 370, 352, 375, 0, 0, 0, 0, 376, 298,
	423, 365, 433, 452, 453, 234, 327, 442, 412, 448,
	464, 204, 231, 341, 405, 438, 396, 320, 419, 420,
	288, 395, 262, 189, 296, 458, 202, 385, 219, 209,
	195, 407, 431, 216, 388, 0, 0, 466, 197, 429,
	404, 316, 285, 286, 196, 0, 369, 239, 260, 229,
	336, 426, 427, 228, 467, 206, 447, 199, 0, 446,
	329, 422, 430, 317, 308, 198, 428, 315, 307, 291,
	250, 271, 363, 301, 364, 272, 325, 324, 326, 192,
	439, 0, 193, 0, 401, 440, 468, 212, 213, 214,
	0, 249, 253, 259, 261, 267, 268, 275, 294, 340,
	362, 360, 366, 0, 417, 434, 443, 450, 456, 457,
	459, 460, 461, 462, 463, 328, 274, 397, 290, 299,
	0, 0, 346, 378, 217, 437, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 185, 200, 295,
	0, 367, 257, 465, 445, 441, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 201, 210, 220, 232, 247, 255, 265,
	270, 273, 278, 279, 282, 287, 305, 310, 311, 312,
	313, 330, 331, 332, 335, 338, 339, 342, 344, 345,
	348, 355, 356, 357, 358, 359, 361, 368, 372, 380,
	381, 382, 383, 384, 386, 387, 391, 392, 393, 394,
	402, 406, 424, 425, 436, 449, 454, 266, 432, 455,
	0, 304, 0, 0, 306, 251, 269, 280, 0, 444,
	403, 205, 374, 258, 194, 223, 208, 230, 245, 248,
	284, 314, 321, 350, 354, 263, 242, 221, 371, 218,
	389, 409, 410, 411, 413, 318, 237, 353, 414, 0,
	302, 415, 416, 276, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	1235, 0, 0, 0, 293, 238, 0, 0, 351, 0,
	191, 0, 390, 226, 303, 300, 421, 252, 244, 240,
	225, 277, 309, 349, 408, 343, 0, 297, 0, 0,
	399, 322, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 283, 224, 190,
	334, 400, 256, 0, 0, 0, 0, 182, 183, 184,
	0, 1234, 0, 0, 0, 0, 0, 0, 0, 0,
	215, 0, 222, 0, 0, 0, 0, 0, 236, 281,
	243, 235, 418, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 323, 0, 0, 0, 0, 451, 0, 0,
	0, 0, 0, 0, 0, 292, 0, 289, 186, 203,
	0, 0, 333, 373, 379, 0, 0, 0, 227, 0,
	377, 347, 435, 211, 254, 370, 352, 375, 0, 0,
	0, 0, 376, 298, 423, 365, 433, 452, 453, 234,
	327, 442, 412, 448, 464, 204, 231, 341, 405, 438,
	396, 320, 419, 420, 288, 395, 262, 189, 296, 458,
	202, 385, 219, 209, 195, 407, 431, 216, 388, 0,
	0, 466, 197, 429, 404, 316, 285, 286, 196, 0,
	369, 239, 260, 229, 336, 426, 427, 228, 467, 206,
	447, 199, 0, 446, 329, 422, 430, 317, 308, 198,
	428, 315, 307, 291, 250, 271, 363, 301, 364, 272,
	325, 324, 326, 192, 439, 0, 193, 0, 401, 440,
	468, 212, 213, 214, 0, 249, 253, 259, 261, 267,
	268, 275, 294, 340, 362, 360, 366, 0, 417, 434,
	443, 450, 456, 457, 459, 460, 461, 462, 463, 328,
	274, 397, 290, 299, 0, 0, 346, 378, 217, 437,
	398, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 487,
	0, 185, 200, 295, 0, 367, 257, 465, 445, 441,
	0, 0, 233, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 188, 201, 210, 220,
	232, 247, 255, 265, 270, 273, 278, 279, 282, 287,
	305, 310, 311, 312, 313, 330, 331, 332, 335, 338,
	339, 342, 344, 345, 348, 355, 356, 357, 358, 359,
	361, 368, 372, 380, 381, 382, 383, 384, 386, 387,
	391, 392, 393, 394, 402, 406, 424, 425, 436, 449,
	454, 266, 432, 455, 0, 304, 0, 0, 306, 251,
	269, 280, 0, 444, 403, 205, 374, 258, 194, 223,
	208, 230, 245, 248, 284, 314, 321, 350, 354, 263,
	242, 221, 371, 218, 389, 409, 410, 411, 413, 318,
	237, 353, 414, 0, 302, 415, 416, 276, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 293, 238,
	0, 0, 351, 0, 191, 0, 390, 226, 303, 300,
	421, 252, 244, 240, 225, 277, 309, 349, 408, 343,
	0, 297, 0, 0, 399, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 224, 190, 334, 400, 256, 0, 0, 0,
	0, 182, 183, 184, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 215, 0, 222, 0, 0, 0,
	0, 0, 236, 281, 243, 235, 418, 0, 0, 0,
	0, 207, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 264, 0, 323, 0, 0, 0,
	0, 451, 0, 0, 0, 2495, 0, 0, 0, 292,
	0, 289, 186, 203, 0, 0, 333, 373, 379, 0,
	0, 0, 227, 0, 377, 347, 435, 211, 254, 370,
	352, 375, 0, 0, 0, 0, 376, 298, 423, 365,
	433, 452, 453, 234, 327, 442, 412, 448, 464, 204,
	231, 341, 405, 438, 396, 320, 419, 420, 288, 395,
	262, 189, 296, 458, 202, 385, 219, 209, 195, 407,
	431, 216, 388, 0, 0, 466, 197, 429, 404, 316,
	285, 286, 196, 0, 369, 239, 260, 229, 336, 426,
	427, 228, 467, 206, 447, 199, 0, 446, 329, 422,
	430, 317, 308, 198, 428, 315, 307, 291, 250, 271,
	363, 301, 364, 272, 325, 324, 326, 192, 439, 0,
	193, 0, 401, 440, 468, 212, 213, 214, 0, 249,
	253, 259, 261, 267, 268, 275, 294, 340, 362, 360,
	366, 0, 417, 434, 443, 450, 456, 457, 459, 460,
	461, 462, 463, 328, 274, 397, 290, 299, 0, 0,
	346, 378, 217, 437, 398, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 0, 185, 200, 295, 0, 367,
	257, 465, 445, 441, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	188, 201, 210, 220, 232, 247, 255, 265, 270, 273,
	278, 279, 282, 287, 305, 310, 311, 312, 313, 330,
	331, 332, 335, 338, 339, 342, 344, 345, 348, 355,
	356, 357, 358, 359, 361, 368, 372, 380, 381, 382,
	383, 384, 386, 387, 391, 392, 393, 394, 402, 406,
	424, 425, 436, 449, 454, 266, 432, 455, 0, 304,
	0, 0, 306, 251, 269, 280, 0, 444, 403, 205,
	374, 258, 194, 223, 208, 230, 245, 248, 284, 314,
	321, 350, 354, 263, 242, 221, 371, 218, 389, 409,
	410, 411, 413, 318, 237, 353, 414, 0, 302, 415,
	416, 276, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 293, 238, 0, 0, 351, 0, 191, 0,
	390, 226, 303, 300, 421, 252, 244, 240, 225, 277,
	309, 349, 408, 343, 0, 297, 0, 0, 399, 322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 283, 224, 190, 334, 400,
	256, 0, 0, 0, 0, 182, 183, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 215, 0,
	222, 0, 0, 0, 0, 0, 236, 281, 243, 235,
	418, 0, 0, 0, 0, 207, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	246, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 264, 0,
	323, 0, 0, 0, 0, 451, 0, 0, 0, 2427,
	0, 0, 0, 292, 0, 289, 186, 203, 0, 0,
	333, 373, 379, 0, 0, 0, 227, 0, 377, 347,
	435, 211, 254, 370, 352, 375, 0, 0, 0, 0,
	376, 298, 423, 365, 433, 452, 453, 234, 327, 442,
	412, 448, 464, 204, 231, 341, 405, 438, 396, 320,
	419, 420, 288, 395, 262, 189, 296, 458, 202, 385,
	219, 209, 195, 407, 431, 216, 388, 0, 0, 466,
	197, 429, 404, 316, 285, 286, 196, 0, 369, 239,
	260, 229, 336, 426, 427, 228, 467, 206, 447, 199,
	0, 446, 329, 422, 430, 317, 308, 198, 428, 315,
	307, 291, 250, 271, 363, 301, 364, 272, 325, 324,
	326, 192, 439, 0, 193, 0, 401, 440, 468, 212,
	213, 214, 0, 249, 253, 259, 261, 267, 268, 275,
	294, 340, 362, 360, 366, 0, 417, 434, 443, 450,
	456, 457, 459, 460, 461, 462, 463, 328, 274, 397,
	290, 299, 0, 0, 346, 378, 217, 437, 398, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 487, 0, 185,
	200, 295, 0, 367, 257, 465, 445, 441, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 188, 201, 210, 220, 232, 247,
	255, 265, 270, 273, 278, 279, 282, 287, 305, 310,
	311, 312, 313, 330, 331, 332, 335, 338, 339, 342,
	344, 345, 348, 355, 356, 357, 358, 359, 361, 368,
	372, 380, 381, 382, 383, 384, 386, 387, 391, 392,
	393, 394, 402, 406, 424, 425, 436, 449, 454, 266,
	432, 455, 0, 304, 0, 0, 306, 251, 269, 280,
	0, 444, 403, 205, 374, 258, 194, 223, 208, 230,
	245, 248, 284, 314, 321, 350, 354, 263, 242, 221,
	371, 218, 389, 409, 410, 411, 413, 318, 237, 353,
	414, 0, 302, 415, 416, 276, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 293, 238, 0, 0,
	351, 0, 191, 0, 390, 226, 303, 300, 421, 252,
	244, 240, 225, 277, 309, 349, 408, 343, 0, 297,
	0, 0, 399, 322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 283,
	224, 190, 334, 400, 256, 0, 85, 0, 0, 182,
	183, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 215, 0, 222, 0, 0, 0, 0, 0,
	236, 281, 243, 235, 418, 0, 0, 0, 0, 207,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 264, 0, 323, 0, 0, 0, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 292, 0, 289,
	186, 203, 0, 0, 333, 373, 379, 0, 0, 0,
	227, 0, 377, 347, 435, 211, 254, 370, 352, 375,
	0, 0, 0, 0, 376, 298, 423, 365, 433, 452,
	453, 234, 327, 442, 412, 448, 464, 204, 231, 341,
	405, 438, 396, 320, 419, 420, 288, 395, 262, 189,
	296, 458, 202, 385, 219, 209, 195, 407, 431, 216,
	388, 0, 0, 466, 197, 429, 404, 316, 285, 286,
	196, 0, 369, 239, 260, 229, 336, 426, 427, 228,
	467, 206, 447, 199, 0, 446, 329, 422, 430, 317,
	308, 198, 428, 315, 307, 291, 250, 271, 363, 301,
	364, 272, 325, 324, 326, 192, 439, 0, 193, 0,
	401, 440, 468, 212, 213, 214, 0, 249, 253, 259,
	261, 267, 268, 275, 294, 340, 362, 360, 366, 0,
	417, 434, 443, 450, 456, 457, 459, 460, 461, 462,
	463, 328, 274, 397, 290, 299, 0, 0, 346, 378,
	217, 437, 398, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 487, 0, 185, 200, 295, 0, 367, 257, 465,
	445, 441, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 188, 201,
	210, 220, 232, 247, 255, 265, 270, 273, 278, 279,
	282, 287, 305, 310, 311, 312, 313, 330, 331, 332,
	335, 338, 339, 342, 344, 345, 348, 355, 356, 357,
	358, 359, 361, 368, 372, 380, 381, 382, 383, 384,
	386, 387, 391, 392, 393, 394, 402, 406, 424, 425,
	436, 449, 454, 266, 432, 455, 0, 304, 0, 0,
	306, 251, 269, 280, 0, 444, 403, 205, 374, 258,
	194, 223, 208, 230, 245, 248, 284, 314, 321, 350,
	354, 263, 242, 221, 371, 218, 389, 409, 410, 411,
	413, 318, 237, 353, 414, 0, 302, 415, 416, 276,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	293, 238, 0, 0, 351, 0, 191, 0, 390, 226,
	303, 300, 421, 252, 244, 240, 225, 277, 309, 349,
	408, 343, 0, 297, 0, 0, 399, 322, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 283, 224, 190, 334, 400, 256, 0,
	0, 0, 0, 182, 183, 184, 0, 1384, 0, 0,
	0, 0, 0, 0, 0, 0, 215, 0, 222, 0,
	0, 0, 0, 0, 236, 281, 243, 235, 418, 0,
	0, 0, 0, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 246, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 264, 0, 323, 0,
	0, 0, 0, 451, 0, 0, 0, 0, 0, 0,
	0, 292, 0, 289, 186, 203, 0, 0, 333, 373,
	379, 0, 0, 0, 227, 0, 377, 347, 435, 211,
	254, 370, 352, 375, 0, 0, 0, 0, 376, 298,
	423, 365, 433, 452, 453, 234, 327, 442, 412, 448,
	464, 204, 231, 341, 405, 438, 396, 320, 419, 420,
	288, 395, 262, 189, 296, 458, 202, 385, 219, 209,
	195, 407, 431, 216, 388, 0, 0, 466, 197, 429,
	404, 316, 285, 286, 196, 0, 369, 239, 260, 229,
	336, 426, 427, 228, 467, 206, 447, 199, 0, 446,
	329, 422, 430, 317, 308, 198, 428, 315, 307, 291,
	250, 271, 363, 301, 364, 272, 325, 324, 326, 192,
	439, 0, 193, 0, 401, 440, 468, 212, 213, 214,
	0, 249, 253, 259, 261, 267, 268, 275, 294, 340,
	362, 360, 366, 0, 417, 434, 443, 450, 456, 457,
	459, 460, 461, 462, 463, 328, 274, 397, 290, 299,
	0, 0, 346, 378, 217, 437, 398, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 487, 0, 185, 200, 295,
	0, 367, 257, 465, 445, 441, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 188, 201, 210, 220, 232, 247, 255, 265,
	270, 273, 278, 279, 282, 287, 305, 310, 311, 312,
	313, 330, 331, 332, 335, 338, 339, 342, 344, 345,
	348, 355, 356, 357, 358, 359, 361, 368, 372, 380,
	381, 382, 383, 384, 386, 387, 391, 392, 393, 394,
	402, 406, 424, 425, 436, 449, 454, 266, 432, 455,
	0, 304, 0, 0, 306, 251, 269, 280, 0, 444,
	403, 205, 374, 258, 194, 223, 208, 230, 245, 248,
	284, 314, 321, 350, 354, 263, 242, 221, 371, 218,
	389, 409, 410, 411, 413, 318, 237, 353, 0, 414,
	302, 415, 416, 276, 1637, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 293, 238, 0, 0, 351,
	0, 191, 0, 390, 226, 303, 300, 421, 252, 244,
	240, 225, 277, 309, 349, 408, 343, 0, 297, 0,
	0, 399, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 224,
	190, 334, 400, 256, 0, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 222, 0, 0, 0, 0, 0, 236,
	281, 243, 235, 418, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 323, 0, 0, 0, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 289, 186,
	203, 0, 0, 333, 373, 379, 0, 0, 0, 227,
	0, 377, 347, 435, 211, 254, 370, 352, 375, 0,
	0, 0, 0, 376, 298, 423, 365, 433, 452, 453,
	234, 327, 442, 412, 448, 464, 204, 231, 341, 405,
	438, 396, 320, 419, 420, 288, 395, 262, 189, 296,
	458, 202, 385, 219, 209, 195, 407, 431, 216, 388,
	0, 0, 466, 197, 429, 404, 316, 285, 286, 196,
	0, 369, 239, 260, 229, 336, 426, 427, 228, 467,
	206, 447, 199, 0, 446, 329, 422, 430, 317, 308,
	198, 428, 315, 307, 291, 250, 271, 363, 301, 364,
	272, 325, 324, 326, 192, 439, 0, 193, 0, 401,
	440, 468, 212, 213, 214, 0, 249, 253, 259, 261,
	267, 268, 275, 294, 340, 362, 360, 366, 0, 417,
	434, 443, 450, 456, 457, 459, 460, 461, 462, 463,
	328, 274, 397, 290, 299, 0, 0, 346, 378, 217,
	437, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 185, 200, 295, 0, 367, 257, 465, 445,
	441, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 201, 210,
	220, 232, 247, 255, 265, 270, 273, 278, 279, 282,
	287, 305, 310, 311, 312, 313, 330, 331, 332, 335,
	338, 339, 342, 344, 345, 348, 355, 356, 357, 358,
	359, 361, 368, 372, 380, 381, 382, 383, 384, 386,
	387, 391, 392, 393, 394, 402, 406, 424, 425, 436,
	449, 454, 266, 432, 455, 0, 304, 0, 0, 306,
	251, 269, 280, 0, 444, 403, 205, 374, 258, 194,
	223, 208, 230, 245, 248, 284, 314, 321, 350, 354,
	263, 242, 221, 371, 218, 389, 409, 410, 411, 413,
	318, 237, 353, 414, 0, 302, 415, 416, 276, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 293,
	238, 0, 0, 351, 0, 191, 0, 390, 226, 303,
	300, 421, 252, 244, 240, 225, 277, 309, 349, 408,
	343, 0, 297, 0, 0, 399, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 224, 190, 334, 400, 256, 0, 0,
	0, 0, 182, 183, 184, 0, 1214, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 222, 0, 0,
	0, 0, 0, 236, 281, 243, 235, 418, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 323, 0, 0,
	0, 0, 451, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 289, 186, 203, 0, 0, 333, 373, 379,
	0, 0, 0, 227, 0, 377, 347, 435, 211, 254,
	370, 352, 375, 0, 0, 0, 0, 376, 298, 423,
	365, 433, 452, 453, 234, 327, 442, 412, 448, 464,
	204, 231, 341, 405, 438, 396, 320, 419, 420, 288,
	395, 262, 189, 296, 458, 202, 385, 219, 209, 195,
	407, 431, 216, 388, 0, 0, 466, 197, 429, 404,
	316, 285, 286, 196, 0, 369, 239, 260, 229, 336,
	426, 427, 228, 467, 206, 447, 199, 0, 446, 329,
	422, 430, 317, 308, 198, 428, 315, 307, 291, 250,
	271, 363, 301, 364, 272, 325, 324, 326, 192, 439,
	0, 193, 0, 401, 440, 468, 212, 213, 214, 0,
	249, 253, 259, 261, 267, 268, 275, 294, 340, 362,
	360, 366, 0, 417, 434, 443, 450, 456, 457, 459,
	460, 461, 462, 463, 328, 274, 397, 290, 299, 0,
	0, 346, 378, 217, 437, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 185, 200, 295, 0,
	367, 257, 465, 445, 441, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 188, 201, 210, 220, 232, 247, 255, 265, 270,
	273, 278, 279, 282, 287, 305, 310, 311, 312, 313,
	330, 331, 332, 335, 338, 339, 342, 344, 345, 348,
	355, 356, 357, 358, 359, 361, 368, 372, 380, 381,
	382, 383, 384, 386, 387, 391, 392, 393, 394, 402,
	406, 424, 425, 436, 449, 454, 266, 432, 455, 0,
	304, 0, 0, 306, 251, 269, 280, 0, 444, 403,
	205, 374, 258, 194, 223, 208, 230, 245, 248, 284,
	314, 321, 350, 354, 263, 242, 221, 371, 218, 389,
	409, 410, 411, 413, 318, 237, 353, 414, 0, 302,
	415, 416, 276, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 293, 238, 0, 0, 351, 0, 191,
	0, 390, 226, 303, 300, 421, 252, 244, 240, 225,
	277, 309, 349, 408, 343, 0, 297, 0, 0, 399,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 224, 190, 334,
	400, 256, 0, 0, 0, 0, 182, 183, 184, 0,
	1594, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 222, 0, 0, 0, 0, 0, 236, 281, 243,
	235, 418, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 323, 0, 0, 0, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 289, 186, 203, 0,
	0, 333, 373, 379, 0, 0, 0, 227, 0, 377,
	347, 435, 211, 254, 370, 352, 375, 0, 0, 0,
	0, 376, 298, 423, 365, 433, 452, 453, 234, 327,
	442, 412, 448, 464, 204, 231, 341, 405, 438, 396,
	320, 419, 420, 288, 395, 262, 189, 296, 458, 202,
	385, 219, 209, 195, 407, 431, 216, 388, 0, 0,
	466, 197, 429, 404, 316, 285, 286, 196, 0, 369,
	239, 260, 229, 336, 426, 427, 228, 467, 206, 447,
	199, 0, 446, 329, 422, 430, 317, 308, 198, 428,
	315, 307, 291, 250, 271, 363, 301, 364, 272, 325,
	324, 326, 192, 439, 0, 193, 0, 401, 440, 468,
	212, 213, 214, 0, 249, 253, 259, 261, 267, 268,
	275, 294, 340, 362, 360, 366, 0, 417, 434, 443,
	450, 456, 457, 459, 460, 461, 462, 463, 328, 274,
	397, 290, 299, 0, 0, 346, 378, 217, 437, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	185, 200, 295, 0, 367, 257, 465, 445, 441, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 201, 210, 220, 232,
	247, 255, 265, 270, 273, 278, 279, 282, 287, 305,
	310, 311, 312, 313, 330, 331, 332, 335, 338, 339,
	342, 344, 345, 348, 355, 356, 357, 358, 359, 361,
	368, 372, 380, 381, 382, 383, 384, 386, 387, 391,
	392, 393, 394, 402, 406, 424, 425, 436, 449, 454,
	266, 432, 455, 0, 304, 0, 0, 306, 251, 269,
	280, 0, 444, 403, 205, 374, 258, 194, 223, 208,
	230, 245, 248, 284, 314, 321, 350, 354, 263, 242,
	221, 371, 218, 389, 409, 410, 411, 413, 318, 237,
	353, 414, 0, 302, 415, 416, 276, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 293, 238, 0,
	0, 351, 0, 191, 0, 390, 226, 303, 300, 421,
	252, 244, 240, 225, 277, 309, 349, 408, 343, 0,
	297, 0, 0, 399, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 224, 190, 334, 400, 256, 0, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 222, 0, 0, 0, 0,
	0, 236, 281, 243, 235, 418, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 323, 0, 0, 0, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	289, 186, 203, 0, 0, 333, 373, 379, 0, 0,
	0, 227, 0, 377, 347, 435, 211, 254, 370, 352,
	375, 0, 0, 0, 0, 376, 298, 423, 365, 433,
	452, 453, 234, 327, 442, 412, 448, 464, 204, 231,
	341, 405, 438, 396, 320, 419, 420, 288, 395, 262,
	189, 296, 458, 202, 385, 219, 209, 195, 407, 431,
	216, 388, 0, 0, 466, 197, 429, 404, 316, 285,
	286, 196, 0, 369, 239, 260, 229, 336, 426, 427,
	228, 467, 206, 447, 199, 0, 446, 329, 422, 430,
	317, 308, 198, 428, 315, 307, 291, 250, 271, 363,
	301, 364, 272, 325, 324, 326, 192, 439, 0, 193,
	0, 401, 440, 468, 212, 213, 214, 0, 249, 253,
	259, 261, 267, 268, 275, 294, 340, 362, 360, 366,
	0, 417, 434, 443, 450, 456, 457, 459, 460, 461,
	462, 463, 328, 274, 397, 290, 299, 0, 0, 346,
	378, 217, 437, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 185, 200, 295, 0, 367, 257,
	465, 445, 441, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 188,
	201, 210, 220, 232, 247, 255, 265, 270, 273, 278,
	279, 282, 287, 305, 310, 311, 312, 313, 330, 331,
	332, 335, 338, 339, 342, 344, 345, 348, 355, 356,
	357, 358, 359, 361, 368, 372, 380, 381, 382, 383,
	384, 386, 387, 391, 392, 393, 394, 402, 406, 424,
	425, 436, 449, 454, 266, 432, 455, 0, 304, 0,
	0, 306, 251, 269, 280, 0, 444, 403, 205, 374,
	258, 194, 223, 208, 230, 245, 248, 284, 314, 321,
	350, 354, 263, 242, 221, 371, 218, 389, 409, 410,
	411, 413, 318, 237, 353, 414, 0, 302, 415, 416,
	276, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 293, 238, 0, 0, 351, 0, 191, 0, 390,
	226, 303, 300, 421, 252, 244, 240, 225, 277, 309,
	349, 408, 343, 0, 297, 0, 0, 399, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 224, 190, 334, 400, 256,
	0, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 222,
	0, 0, 0, 0, 0, 236, 281, 243, 235, 418,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 323,
	0, 0, 0, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 289, 186, 203, 0, 0, 333,
	373, 379, 0, 0, 0, 227, 0, 377, 347, 435,
	211, 254, 370, 352, 375, 0, 0, 0, 0, 376,
	298, 423, 365, 433, 452, 453, 234, 327, 442, 412,
	448, 464, 204, 231, 341, 405, 438, 396, 320, 419,
	420, 288, 395, 262, 189, 296, 458, 202, 385, 219,
	209, 195, 407, 431, 216, 388, 0, 0, 466, 197,
	429, 404, 316, 285, 286, 196, 0, 369, 239, 260,
	229, 336, 426, 427, 228, 467, 206, 447, 199, 0,
	446, 329, 422, 430, 317, 308, 198, 428, 315, 307,
	291, 250, 271, 363, 301, 364, 272, 325, 324, 326,
	192, 439, 0, 193, 0, 401, 440, 468, 212, 213,
	214, 0, 249, 253, 259, 261, 267, 268, 275, 294,
	340, 362, 360, 366, 0, 417, 434, 443, 450, 456,
	457, 459, 460, 461, 462, 463, 328, 274, 397, 290,
	299, 0, 0, 346, 378, 217, 437, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 185, 200,
	295, 1475, 367, 257, 465, 445, 441, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 201, 210, 220, 232, 247, 255,
	265, 270, 273, 278, 279, 282, 287, 305, 310, 311,
	312, 313, 330, 331, 332, 335, 338, 339, 342, 344,
	345, 348, 355, 356, 357, 358, 359, 361, 368, 372,
	380, 381, 382, 383, 384, 386, 387, 391, 392, 393,
	394, 402, 406, 424, 425, 436, 449, 454, 266, 432,
	455, 0, 304, 0, 0, 306, 251, 269, 280, 0,
	444, 403, 205, 374, 258, 194, 223, 208, 230, 245,
	248, 284, 314, 321, 350, 354, 263, 242, 221, 371,
	218, 389, 409, 410, 411, 413, 318, 237, 353, 414,
	0, 302, 415, 416, 276, 0, 0, 0, 0, 0,
	0, 337, 0, 1356, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 293, 238, 0, 0, 351,
	0, 191, 0, 390, 226, 303, 300, 421, 252, 244,
	240, 225, 277, 309, 349, 408, 343, 0, 297, 0,
	0, 399, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 224,
	190, 334, 400, 256, 0, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 222, 0, 0, 0, 0, 0, 236,
	281, 243, 235, 418, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 323, 0, 0, 0, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 289, 186,
	203, 0, 0, 333, 373, 379, 0, 0, 0, 227,
	0, 377, 347, 435, 211, 254, 370, 352, 375, 0,
	0, 0, 0, 376, 298, 423, 365, 433, 452, 453,
	234, 327, 442, 412, 448, 464, 204, 231, 341, 405,
	438, 396, 320, 419, 420, 288, 395, 262, 189, 296,
	458, 202, 385, 219, 209, 195, 407, 431, 216, 388,
	0, 0, 466, 197, 429, 404, 316, 285, 286, 196,
	0, 369, 239, 260, 229, 336, 426, 427, 228, 467,
	206, 447, 199, 0, 446, 329, 422, 430, 317, 308,
	198, 428, 315, 307, 291, 250, 271, 363, 301, 364,
	272, 325, 324, 326, 192, 439, 0, 193, 0, 401,
	440, 468, 212, 213, 214, 0, 249, 253, 259, 261,
	267, 268, 275, 294, 340, 362, 360, 366, 0, 417,
	434, 443, 450, 456, 457, 459, 460, 461, 462, 463,
	328, 274, 397, 290, 299, 0, 0, 346, 378, 217,
	437, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 185, 200, 295, 0, 367, 257, 465, 445,
	441, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 201, 210,
	220, 232, 247, 255, 265, 270, 273, 278, 279, 282,
	287, 305, 310, 311, 312, 313, 330, 331, 332, 335,
	338, 339, 342, 344, 345, 348, 355, 356, 357, 358,
	359, 361, 368, 372, 380, 381, 382, 383, 384, 386,
	387, 391, 392, 393, 394, 402, 406, 424, 425, 436,
	449, 454, 266, 432, 455, 0, 304, 0, 0, 306,
	251, 269, 280, 0, 444, 403, 205, 374, 258, 194,
	223, 208, 230, 245, 248, 284, 314, 321, 350, 354,
	263, 242, 221, 371, 218, 389, 409, 410, 411, 413,
	318, 237, 353, 414, 0, 302, 415, 416, 276, 0,
	0, 0, 0, 0, 0, 337, 0, 1354, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 293,
	238, 0, 0, 351, 0, 191, 0, 390, 226, 303,
	300, 421, 252, 244, 240, 225, 277, 309, 349, 408,
	343, 0, 297, 0, 0, 399, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 224, 190, 334, 400, 256, 0, 0,
	0, 0, 182, 183, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 222, 0, 0,
	0, 0, 0, 236, 281, 243, 235, 418, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 323, 0, 0,
	0, 0, 451, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 289, 186, 203, 0, 0, 333, 373, 379,
	0, 0, 0, 227, 0, 377, 347, 435, 211, 254,
	370, 352, 375, 0, 0, 0, 0, 376, 298, 423,
	365, 433, 452, 453, 234, 327, 442, 412, 448, 464,
	204, 231, 341, 405, 438, 396, 320, 419, 420, 288,
	395, 262, 189, 296, 458, 202, 385, 219, 209, 195,
	407, 431, 216, 388, 0, 0, 466, 197, 429, 404,
	316, 285, 286, 196, 0, 369, 239, 260, 229, 336,
	426, 427, 228, 467, 206, 447, 199, 0, 446, 329,
	422, 430, 317, 308, 198, 428, 315, 307, 291, 250,
	271, 363, 301, 364, 272, 325, 324, 326, 192, 439,
	0, 193, 0, 401, 440, 468, 212, 213, 214, 0,
	249, 253, 259, 261, 267, 268, 275, 294, 340, 362,
	360, 366, 0, 417, 434, 443, 450, 456, 457, 459,
	460, 461, 462, 463, 328, 274, 397, 290, 299, 0,
	0, 346, 378, 217, 437, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 185, 200, 295, 0,
	367, 257, 465, 445, 441, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 188, 201, 210, 220, 232, 247, 255, 265, 270,
	273, 278, 279, 282, 287, 305, 310, 311, 312, 313,
	330, 331, 332, 335, 338, 339, 342, 344, 345, 348,
	355, 356, 357, 358, 359, 361, 368, 372, 380, 381,
	382, 383, 384, 386, 387, 391, 392, 393, 394, 402,
	406, 424, 425, 436, 449, 454, 266, 432, 455, 0,
	304, 0, 0, 306, 251, 269, 280, 0, 444, 403,
	205, 374, 258, 194, 223, 208, 230, 245, 248, 284,
	314, 321, 350, 354, 263, 242, 221, 371, 218, 389,
	409, 410, 411, 413, 318, 237, 353, 414, 0, 302,
	415, 416, 276, 0, 0, 0, 0, 0, 0, 337,
	0, 1352, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 293, 238, 0, 0, 351, 0, 191,
	0, 390, 226, 303, 300, 421, 252, 244, 240, 225,
	277, 309, 349, 408, 343, 0, 297, 0, 0, 399,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 224, 190, 334,
	400, 256, 0, 0, 0, 0, 182, 183, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 222, 0, 0, 0, 0, 0, 236, 281, 243,
	235, 418, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 323, 0, 0, 0, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 289, 186, 203, 0,
	0, 333, 373, 379, 0, 0, 0, 227, 0, 377,
	347, 435, 211, 254, 370, 352, 375, 0, 0, 0,
	0, 376, 298, 423, 365, 433, 452, 453, 234, 327,
	442, 412, 448, 464, 204, 231, 341, 405, 438, 396,
	320, 419, 420, 288, 395, 262, 189, 296, 458, 202,
	385, 219, 209, 195, 407, 431, 216, 388, 0, 0,
	466, 197, 429, 404, 316, 285, 286, 196, 0, 369,
	239, 260, 229, 336, 426, 427, 228, 467, 206, 447,
	199, 0, 446, 329, 422, 430, 317, 308, 198, 428,
	315, 307, 291, 250, 271, 363, 301, 364, 272, 325,
	324, 326, 192, 439, 0, 193, 0, 401, 440, 468,
	212, 213, 214, 0, 249, 253, 259, 261, 267, 268,
	275, 294, 340, 362, 360, 366, 0, 417, 434, 443,
	450, 456, 457, 459, 460, 461, 462, 463, 328, 274,
	397, 290, 299, 0, 0, 346, 378, 217, 437, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	185, 200, 295, 0, 367, 257, 465, 445, 441, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 201, 210, 220, 232,
	247, 255, 265, 270, 273, 278, 279, 282, 287, 305,
	310, 311, 312, 313, 330, 331, 332, 335, 338, 339,
	342, 344, 345, 348, 355, 356, 357, 358, 359, 361,
	368, 372, 380, 381, 382, 383, 384, 386, 387, 391,
	392, 393, 394, 402, 406, 424, 425, 436, 449, 454,
	266, 432, 455, 0, 304, 0, 0, 306, 251, 269,
	280, 0, 444, 403, 205, 374, 258, 194, 223, 208,
	230, 245, 248, 284, 314, 321, 350, 354, 263, 242,
	221, 371, 218, 389, 409, 410, 411, 413, 318, 237,
	353, 414, 0, 302, 415, 416, 276, 0, 0, 0,
	0, 0, 0, 337, 0, 1350, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 293, 238, 0,
	0, 351, 0, 191, 0, 390, 226, 303, 300, 421,
	252, 244, 240, 225, 277, 309, 349, 408, 343, 0,
	297, 0, 0, 399, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 224, 190, 334, 400, 256, 0, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 222, 0, 0, 0, 0,
	0, 236, 281, 243, 235, 418, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 323, 0, 0, 0, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	289, 186, 203, 0, 0, 333, 373, 379, 0, 0,
	0, 227, 0, 377, 347, 435, 211, 254, 370, 352,
	375, 0, 0, 0, 0, 376, 298, 423, 365, 433,
	452, 453, 234, 327, 442, 412, 448, 464, 204, 231,
	341, 405, 438, 396, 320, 419, 420, 288, 395, 262,
	189, 296, 458, 202, 385, 219, 209, 195, 407, 431,
	216, 388, 0, 0, 466, 197, 429, 404, 316, 285,
	286, 196, 0, 369, 239, 260, 229, 336, 426, 427,
	228, 467, 206, 447, 199, 0, 446, 329, 422, 430,
	317, 308, 198, 428, 315, 307, 291, 250, 271, 363,
	301, 364, 272, 325, 324, 326, 192, 439, 0, 193,
	0, 401, 440, 468, 212, 213, 214, 0, 249, 253,
	259, 261, 267, 268, 275, 294, 340, 362, 360, 366,
	0, 417, 434, 443, 450, 456, 457, 459, 460, 461,
	462, 463, 328, 274, 397, 290, 299, 0, 0, 346,
	378, 217, 437, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 185, 200, 295, 0, 367, 257,
	465, 445, 441, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 188,
	201, 210, 220, 232, 247, 255, 265, 270, 273, 278,
	279, 282, 287, 305, 310, 311, 312, 313, 330, 331,
	332, 335, 338, 339, 342, 344, 345, 348, 355, 356,
	357, 358, 359, 361, 368, 372, 380, 381, 382, 383,
	384, 386, 387, 391, 392, 393, 394, 402, 406, 424,
	425, 436, 449, 454, 266, 432, 455, 0, 304, 0,
	0, 306, 251, 269, 280, 0, 444, 403, 205, 374,
	258, 194, 223, 208, 230, 245, 248, 284, 314, 321,
	350, 354, 263, 242, 221, 371, 218, 389, 409, 410,
	411, 413, 318, 237, 353, 414, 0, 302, 415, 416,
	276, 0, 0, 0, 0, 0, 0, 337, 0, 1348,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 293, 238, 0, 0, 351, 0, 191, 0, 390,
	226, 303, 300, 421, 252, 244, 240, 225, 277, 309,
	349, 408, 343, 0, 297, 0, 0, 399, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 224, 190, 334, 400, 256,
	0, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 222,
	0, 0, 0, 0, 0, 236, 281, 243, 235, 418,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 323,
	0, 0, 0, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 289, 186, 203, 0, 0, 333,
	373, 379, 0, 0, 0, 227, 0, 377, 347, 435,
	211, 254, 370, 352, 375, 0, 0, 0, 0, 376,
	298, 423, 365, 433, 452, 453, 234, 327, 442, 412,
	448, 464, 204, 231, 341, 405, 438, 396, 320, 419,
	420, 288, 395, 262, 189, 296, 458, 202, 385, 219,
	209, 195, 407, 431, 216, 388, 0, 0, 466, 197,
	429, 404, 316, 285, 286, 196, 0, 369, 239, 260,
	229, 336, 426, 427, 228, 467, 206, 447, 199, 0,
	446, 329, 422, 430, 317, 308, 198, 428, 315, 307,
	291, 250, 271, 363, 301, 364, 272, 325, 324, 326,
	192, 439, 0, 193, 0, 401, 440, 468, 212, 213,
	214, 0, 249, 253, 259, 261, 267, 268, 275, 294,
	340, 362, 360, 366, 0, 417, 434, 443, 450, 456,
	457, 459, 460, 461, 462, 463, 328, 274, 397, 290,
	299, 0, 0, 346, 378, 217, 437, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 185, 200,
	295, 0, 367, 257, 465, 445, 441, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 201, 210, 220, 232, 247, 255,
	265, 270, 273, 278, 279, 282, 287, 305, 310, 311,
	312, 313, 330, 331, 332, 335, 338, 339, 342, 344,
	345, 348, 355, 356, 357, 358, 359, 361, 368, 372,
	380, 381, 382, 383, 384, 386, 387, 391, 392, 393,
	394, 402, 406, 424, 425, 436, 449, 454, 266, 432,
	455, 0, 304, 0, 0, 306, 251, 269, 280, 0,
	444, 403, 205, 374, 258, 194, 223, 208, 230, 245,
	248, 284, 314, 321, 350, 354, 263, 242, 221, 371,
	218, 389, 409, 410, 411, 413, 318, 237, 353, 414,
	0, 302, 415, 416, 276, 0, 0, 0, 0, 0,
	0, 337, 0, 1344, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 293, 238, 0, 0, 351,
	0, 191, 0, 390, 226, 303, 300, 421, 252, 244,
	240, 225, 277, 309, 349, 408, 343, 0, 297, 0,
	0, 399, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 224,
	190, 334, 400, 256, 0, 0, 0, 0, 182, 183,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 222, 0, 0, 0, 0, 0, 236,
	281, 243, 235, 418, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 323, 0, 0, 0, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 289, 186,
	203, 0, 0, 333, 373, 379, 0, 0, 0, 227,
	0, 377, 347, 435, 211, 254, 370, 352, 375, 0,
	0, 0, 0, 376, 298, 423, 365, 433, 452, 453,
	234, 327, 442, 412, 448, 464, 204, 231, 341, 405,
	438, 396, 320, 419, 420, 288, 395, 262, 189, 296,
	458, 202, 385, 219, 209, 195, 407, 431, 216, 388,
	0, 0, 466, 197, 429, 404, 316, 285, 286, 196,
	0, 369, 239, 260, 229, 336, 426, 427, 228, 467,
	206, 447, 199, 0, 446, 329, 422, 430, 317, 308,
	198, 428, 315, 307, 291, 250, 271, 363, 301, 364,
	272, 325, 324, 326, 192, 439, 0, 193, 0, 401,
	440, 468, 212, 213, 214, 0, 249, 253, 259, 261,
	267, 268, 275, 294, 340, 362, 360, 366, 0, 417,
	434, 443, 450, 456, 457, 459, 460, 461, 462, 463,
	328, 274, 397, 290, 299, 0, 0, 346, 378, 217,
	437, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 185, 200, 295, 0, 367, 257, 465, 445,
	441, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 201, 210,
	220, 232, 247, 255, 265, 270, 273, 278, 279, 282,
	287, 305, 310, 311, 312, 313, 330, 331, 332, 335,
	338, 339, 342, 344, 345, 348, 355, 356, 357, 358,
	359, 361, 368, 372, 380, 381, 382, 383, 384, 386,
	387, 391, 392, 393, 394, 402, 406, 424, 425, 436,
	449, 454, 266, 432, 455, 0, 304, 0, 0, 306,
	251, 269, 280, 0, 444, 403, 205, 374, 258, 194,
	223, 208, 230, 245, 248, 284, 314, 321, 350, 354,
	263, 242, 221, 371, 218, 389, 409, 410, 411, 413,
	318, 237, 353, 414, 0, 302, 415, 416, 276, 0,
	0, 0, 0, 0, 0, 337, 0, 1342, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 293,
	238, 0, 0, 351, 0, 191, 0, 390, 226, 303,
	300, 421, 252, 244, 240, 225, 277, 309, 349, 408,
	343, 0, 297, 0, 0, 399, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 224, 190, 334, 400, 256, 0, 0,
	0, 0, 182, 183, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 222, 0, 0,
	0, 0, 0, 236, 281, 243, 235, 418, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 323, 0, 0,
	0, 0, 451, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 289, 186, 203, 0, 0, 333, 373, 379,
	0, 0, 0, 227, 0, 377, 347, 435, 211, 254,
	370, 352, 375, 0, 0, 0, 0, 376, 298, 423,
	365, 433, 452, 453, 234, 327, 442, 412, 448, 464,
	204, 231, 341, 405, 438, 396, 320, 419, 420, 288,
	395, 262, 189, 296, 458, 202, 385, 219, 209, 195,
	407, 431, 216, 388, 0, 0, 466, 197, 429, 404,
	316, 285, 286, 196, 0, 369, 239, 260, 229, 336,
	426, 427, 228, 467, 206, 447, 199, 0, 446, 329,
	422, 430, 317, 308, 198, 428, 315, 307, 291, 250,
	271, 363, 301, 364, 272, 325, 324, 326, 192, 439,
	0, 193, 0, 401, 440, 468, 212, 213, 214, 0,
	249, 253, 259, 261, 267, 268, 275, 294, 340, 362,
	360, 366, 0, 417, 434, 443, 450, 456, 457, 459,
	460, 461, 462, 463, 328, 274, 397, 290, 299, 0,
	0, 346, 378, 217, 437, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 185, 200, 295, 0,
	367, 257, 465, 445, 441, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 188, 201, 210, 220, 232, 247, 255, 265, 270,
	273, 278, 279, 282, 287, 305, 310, 311, 312, 313,
	330, 331, 332, 335, 338, 339, 342, 344, 345, 348,
	355, 356, 357, 358, 359, 361, 368, 372, 380, 381,
	382, 383, 384, 386, 387, 391, 392, 393, 394, 402,
	406, 424, 425, 436, 449, 454, 266, 432, 455, 0,
	304, 0, 0, 306, 251, 269, 280, 0, 444, 403,
	205, 374, 258, 194, 223, 208, 230, 245, 248, 284,
	314, 321, 350, 354, 263, 242, 221, 371, 218, 389,
	409, 410, 411, 413, 318, 237, 353, 414, 0, 302,
	415, 416, 276, 0, 0, 0, 0, 0, 0, 337,
	0, 1340, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 293, 238, 0, 0, 351, 0, 191,
	0, 390, 226, 303, 300, 421, 252, 244, 240, 225,
	277, 309, 349, 408, 343, 0, 297, 0, 0, 399,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 224, 190, 334,
	400, 256, 0, 0, 0, 0, 182, 183, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 222, 0, 0, 0, 0, 0, 236, 281, 243,
	235, 418, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 264,
	0, 323, 0, 0, 0, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 289, 186, 203, 0,
	0, 333, 373, 379, 0, 0, 0, 227, 0, 377,
	347, 435, 211, 254, 370, 352, 375, 0, 0, 0,
	0, 376, 298, 423, 365, 433, 452, 453, 234, 327,
	442, 412, 448, 464, 204, 231, 341, 405, 438, 396,
	320, 419, 420, 288, 395, 262, 189, 296, 458, 202,
	385, 219, 209, 195, 407, 431, 216, 388, 0, 0,
	466, 197, 429, 404, 316, 285, 286, 196, 0, 369,
	239, 260, 229, 336, 426, 427, 228, 467, 206, 447,
	199, 0, 446, 329, 422, 430, 317, 308, 198, 428,
	315, 307, 291, 250, 271, 363, 301, 364, 272, 325,
	324, 326, 192, 439, 0, 193, 0, 401, 440, 468,
	212, 213, 214, 0, 249, 253, 259, 261, 267, 268,
	275, 294, 340, 362, 360, 366, 0, 417, 434, 443,
	450, 456, 457, 459, 460, 461, 462, 463, 328, 274,
	397, 290, 299, 0, 0, 346, 378, 217, 437, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	185, 200, 295, 0, 367, 257, 465, 445, 441, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 201, 210, 220, 232,
	247, 255, 265, 270, 273, 278, 279, 282, 287, 305,
	310, 311, 312, 313, 330, 331, 332, 335, 338, 339,
	342, 344, 345, 348, 355, 356, 357, 358, 359, 361,
	368, 372, 380, 381, 382, 383, 384, 386, 387, 391,
	392, 393, 394, 402, 406, 424, 425, 436, 449, 454,
	266, 432, 455, 0, 304, 0, 0, 306, 251, 269,
	280, 0, 444, 403, 205, 374, 258, 194, 223, 208,
	230, 245, 248, 284, 314, 321, 350, 354, 263, 242,
	221, 371, 218, 389, 409, 410, 411, 413, 318, 237,
	353, 414, 0, 302, 415, 416, 276, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 293, 238, 0,
	0, 351, 0, 191, 0, 390, 226, 303, 300, 421,
	252, 244, 240, 225, 277, 309, 349, 408, 343, 0,
	297, 0, 0, 399, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 224, 190, 334, 400, 256, 0, 1317, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 222, 0, 0, 0, 0,
	0, 236, 281, 243, 235, 418, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 323, 0, 0, 0, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	289, 186, 203, 0, 0, 333, 373, 379, 0, 0,
	0, 227, 0, 377, 347, 435, 211, 254, 370, 352,
	375, 0, 0, 0, 0, 376, 298, 423, 365, 433,
	452, 453, 234, 327, 442, 412, 448, 464, 204, 231,
	341, 405, 438, 396, 320, 419, 420, 288, 395, 262,
	189, 296, 458, 202, 385, 219, 209, 195, 407, 431,
	216, 388, 0, 0, 466, 197, 429, 404, 316, 285,
	286, 196, 0, 369, 239, 260, 229, 336, 426, 427,
	228, 467, 206, 447, 199, 0, 446, 329, 422, 430,
	317, 308, 198, 428, 315, 307, 291, 250, 271, 363,
	301, 364, 272, 325, 324, 326, 192, 439, 0, 193,
	0, 401, 440, 468, 212, 213, 214, 0, 249, 253,
	259, 261, 267, 268, 275, 294, 340, 362, 360, 366,
	0, 417, 434, 443, 450, 456, 457, 459, 460, 461,
	462, 463, 328, 274, 397, 290, 299, 0, 0, 346,
	378, 217, 437, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 185, 200, 295, 0, 367, 257,
	465, 445, 441, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 188,
	201, 210, 220, 232, 247, 255, 265, 270, 273, 278,
	279, 282, 287, 305, 310, 311, 312, 313, 330, 331,
	332, 335, 338, 339, 342, 344, 345, 348, 355, 356,
	357, 358, 359, 361, 368, 372, 380, 381, 382, 383,
	384, 386, 387, 391, 392, 393, 394, 402, 406, 424,
	425, 436, 449, 454, 266, 432, 455, 0, 304, 0,
	0, 306, 251, 269, 280, 0, 444, 403, 205, 374,
	258, 194, 223, 208, 230, 245, 248, 284, 314, 321,
	350, 354, 263, 242, 221, 371, 218, 389, 409, 410,
	411, 413, 318, 237, 353, 414, 0, 302, 415, 416,
	276, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 1219, 241, 0, 0, 0,
	0, 293, 238, 0, 0, 351, 0, 191, 0, 390,
	226, 303, 300, 421, 252, 244, 240, 225, 277, 309,
	349, 408, 343, 0, 297, 0, 0, 399, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 224, 190, 334, 400, 256,
	0, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 222,
	0, 0, 0, 0, 0, 236, 281, 243, 235, 418,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 323,
	0, 0, 0, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 289, 186, 203, 0, 0, 333,
	373, 379, 0, 0, 0, 227, 0, 377, 347, 435,
	211, 254, 370, 352, 375, 0, 0, 0, 0, 376,
	298, 423, 365, 433, 452, 453, 234, 327, 442, 412,
	448, 464, 204, 231, 341, 405, 438, 396, 320, 419,
	420, 288, 395, 262, 189, 296, 458, 202, 385, 219,
	209, 195, 407, 431, 216, 388, 0, 0, 466, 197,
	429, 404, 316, 285, 286, 196, 0, 369, 239, 260,
	229, 336, 426, 427, 228, 467, 206, 447, 199, 0,
	446, 329, 422, 430, 317, 308, 198, 428, 315, 307,
	291, 250, 271, 363, 301, 364, 272, 325, 324, 326,
	192, 439, 0, 193, 0, 401, 440, 468, 212, 213,
	214, 0, 249, 253, 259, 261, 267, 268, 275, 294,
	340, 362, 360, 366, 0, 417, 434, 443, 450, 456,
	457, 459, 460, 461, 462, 463, 328, 274, 397, 290,
	299, 0, 0, 346, 378, 217, 437, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 185, 200,
	295, 0, 367, 257, 465, 445, 441, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 201, 210, 220, 232, 247, 255,
	265, 270, 273, 278, 279, 282, 287, 305, 310, 311,
	312, 313, 330, 331, 332, 335, 338, 339, 342, 344,
	345, 348, 355, 356, 357, 358, 359, 361, 368, 372,
	380, 381, 382, 383, 384, 386, 387, 391, 392, 393,
	394, 402, 406, 424, 425, 436, 449, 454, 266, 432,
	455, 0, 304, 0, 0, 306, 251, 269, 280, 0,
	444, 403, 205, 374, 258, 194, 223, 208, 230, 245,
	248, 284, 314, 321, 350, 354, 263, 242, 221, 371,
	218, 389, 409, 410, 411, 413, 318, 237, 353, 414,
	0, 302, 415, 416, 276, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 293, 238, 0, 0, 351,
	0, 191, 0, 390, 226, 303, 300, 421, 252, 244,
	240, 225, 277, 309, 349, 408, 343, 0, 297, 0,
	0, 399, 322, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 283, 224,
	190, 334, 400, 256, 0, 0, 0, 0, 182, 183,
	184, 0, 1056, 0, 0, 0, 0, 0, 0, 0,
	0, 215, 0, 222, 0, 0, 0, 0, 0, 236,
	281, 243, 235, 418, 0, 0, 0, 0, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 246, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 264, 0, 323, 0, 0, 0, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 289, 186,
	203, 0, 0, 333, 373, 379, 0, 0, 0, 227,
	0, 377, 347, 435, 211, 254, 370, 352, 375, 0,
	0, 0, 0, 376, 298, 423, 365, 433, 452, 453,
	234, 327, 442, 412, 448, 464, 204, 231, 341, 405,
	438, 396, 320, 419, 420, 288, 395, 262, 189, 296,
	458, 202, 385, 219, 209, 195, 407, 431, 216, 388,
	0, 0, 466, 197, 429, 404, 316, 285, 286, 196,
	0, 369, 239, 260, 229, 336, 426, 427, 228, 467,
	206, 447, 199, 0, 446, 329, 422, 430, 317, 308,
	198, 428, 315, 307, 291, 250, 271, 363, 301, 364,
	272, 325, 324, 326, 192, 439, 0, 193, 0, 401,
	440, 468, 212, 213, 214, 0, 249, 253, 259, 261,
	267, 268, 275, 294, 340, 362, 360, 366, 0, 417,
	434, 443, 450, 456, 457, 459, 460, 461, 462, 463,
	328, 274, 397, 290, 299, 0, 0, 346, 378, 217,
	437, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 185, 200, 295, 0, 367, 257, 465, 445,
	441, 0, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 188, 201, 210,
	220, 232, 247, 255, 265, 270, 273, 278, 279, 282,
	287, 305, 310, 311, 312, 313, 330, 331, 332, 335,
	338, 339, 342, 344, 345, 348, 355, 356, 357, 358,
	359, 361, 368, 372, 380, 381, 382, 383, 384, 386,
	387, 391, 392, 393, 394, 402, 406, 424, 425, 436,
	449, 454, 266, 432, 455, 0, 304, 0, 0, 306,
	251, 269, 280, 0, 444, 403, 205, 374, 258, 194,
	223, 208, 230, 245, 248, 284, 314, 321, 350, 354,
	263, 242, 221, 371, 218, 389, 409, 410, 411, 413,
	318, 237, 353, 414, 0, 302, 415, 416, 276, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 293,
	238, 0, 0, 351, 0, 191, 0, 390, 226, 303,
	300, 421, 252, 244, 240, 225, 277, 309, 349, 408,
	343, 0, 297, 0, 0, 399, 322, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 283, 224, 190, 334, 400, 256, 0, 0,
	0, 0, 182, 183, 184, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 215, 0, 222, 0, 0,
	0, 0, 0, 236, 281, 243, 235, 418, 0, 0,
	0, 0, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 264, 0, 323, 0, 0,
	0, 0, 451, 0, 0, 0, 0, 0, 0, 0,
	292, 0, 289, 186, 203, 0, 0, 333, 373, 379,
	0, 0, 0, 227, 0, 377, 347, 435, 211, 254,
	370, 352, 375, 0, 0, 0, 0, 376, 298, 423,
	365, 433, 452, 453, 234, 327, 442, 412, 448, 464,
	204, 231, 341, 405, 438, 396, 320, 419, 420, 288,
	395, 262, 189, 296, 458, 202, 385, 219, 209, 195,
	407, 431, 216, 388, 0, 0, 466, 197, 429, 404,
	316, 285, 286, 196, 0, 369, 239, 260, 229, 336,
	426, 427, 228, 467, 206, 447, 199, 0, 446, 329,
	422, 430, 317, 308, 198, 428, 315, 307, 291, 250,
	271, 363, 301, 364, 272, 325, 324, 326, 192, 439,
	0, 193, 0, 401, 440, 468, 212, 213, 214, 0,
	249, 253, 259, 261, 267, 268, 275, 294, 340, 362,
	360, 366, 0, 417, 434, 443, 450, 456, 457, 459,
	460, 461, 462, 463, 328, 274, 397, 290, 299, 0,
	0, 346, 378, 217, 437, 398, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 487, 0, 185, 200, 295, 0,
	367, 257, 465, 445, 441, 0, 0, 233, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 319,
	0, 0, 0, 0, 0, 0, 686, 0, 0, 0,
	187, 188, 201, 210, 220, 232, 247, 255, 265, 270,
	273, 278, 279, 282, 287, 305, 310, 311, 312, 313,
	330, 331, 332, 335, 338, 339, 342, 344, 345, 348,
	355, 356, 357, 358, 359, 361, 368, 372, 380, 381,
	382, 383, 384, 386, 387, 391, 392, 393, 394, 402,
	406, 424, 425, 436, 449, 454, 266, 432, 455, 0,
	304, 0, 0, 306, 251, 269, 280, 0, 444, 403,
	205, 374, 258, 194, 223, 208, 230, 245, 248, 284,
	314, 321, 350, 354, 263, 242, 221, 371, 218, 389,
	409, 410, 411, 413, 318, 237, 353, 414, 0, 302,
	415, 416, 276, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 293, 238, 0, 0, 351, 0, 191,
	0, 390, 226, 303, 300, 421, 252, 244, 240, 225,
	277, 309, 349, 408, 343, 0, 297, 0, 0, 399,
	322, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 283, 224, 190, 334,
	400, 256, 0, 0, 0, 0, 182, 183, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 215,
	0, 222, 0, 0, 0, 0, 0, 236, 281, 243,
	235, 418, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 543, 0, 264,
	0, 323, 0, 0, 0, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 289, 186, 203, 0,
	0, 333, 373, 379, 0, 0, 0, 227, 0, 377,
	347, 435, 211, 254, 370, 352, 375, 0, 0, 0,
	0, 376, 298, 423, 365, 433, 452, 453, 234, 327,
	442, 412, 448, 464, 204, 231, 341, 405, 438, 396,
	320, 419, 420, 288, 395, 262, 189, 296, 458, 202,
	385, 219, 209, 195, 407, 431, 216, 388, 0, 0,
	466, 197, 429, 404, 316, 285, 286, 196, 0, 369,
	239, 260, 229, 336, 426, 427, 228, 467, 206, 447,
	199, 0, 446, 329, 422, 430, 317, 308, 198, 428,
	315, 307, 291, 250, 271, 363, 301, 364, 272, 325,
	324, 326, 192, 439, 0, 193, 0, 401, 440, 468,
	212, 213, 214, 0, 249, 253, 259, 261, 267, 268,
	275, 294, 340, 362, 360, 366, 0, 417, 434, 443,
	450, 456, 457, 459, 460, 461, 462, 463, 328, 274,
	397, 290, 299, 0, 0, 346, 378, 217, 437, 398,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 487, 0,
	185, 200, 295, 0, 367, 257, 465, 445, 441, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 188, 201, 210, 220, 232,
	247, 255, 265, 270, 273, 278, 279, 282, 287, 305,
	310, 311, 312, 313, 330, 331, 332, 335, 338, 339,
	342, 344, 345, 348, 355, 356, 357, 358, 359, 361,
	368, 372, 380, 381, 382, 383, 384, 386, 387, 391,
	392, 393, 394, 402, 406, 424, 425, 436, 449, 454,
	542, 432, 455, 0, 304, 0, 0, 306, 251, 269,
	280, 0, 444, 403, 205, 374, 258, 194, 223, 208,
	230, 245, 248, 284, 314, 321, 350, 354, 263, 242,
	221, 371, 218, 389, 409, 410, 411, 413, 318, 237,
	353, 414, 0, 302, 415, 416, 276, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 293, 238, 0,
	0, 351, 0, 191, 0, 390, 226, 303, 300, 421,
	252, 244, 240, 225, 277, 309, 349, 408, 343, 0,
	297, 0, 0, 399, 322, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	283, 224, 190, 334, 400, 256, 0, 0, 0, 0,
	182, 183, 184, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 215, 0, 222, 0, 0, 0, 0,
	0, 236, 281, 243, 235, 418, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 246, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 264, 0, 323, 0, 0, 490, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	289, 186, 203, 0, 0, 333, 373, 379, 0, 0,
	0, 227, 0, 377, 347, 435, 211, 254, 370, 352,
	375, 0, 0, 0, 0, 376, 298, 423, 365, 433,
	452, 453, 234, 327, 442, 412, 448, 464, 204, 231,
	341, 405, 438, 396, 320, 419, 420, 288, 395, 262,
	189, 296, 458, 202, 385, 219, 209, 195, 407, 431,
	216, 388, 0, 0, 466, 197, 429, 404, 316, 285,
	286, 196, 0, 369, 239, 260, 229, 336, 426, 427,
	228, 467, 206, 447, 199, 0, 446, 329, 422, 430,
	317, 308, 198, 428, 315, 307, 291, 250, 271, 363,
	301, 364, 272, 325, 324, 326, 192, 439, 0, 193,
	0, 401, 440, 468, 212, 213, 214, 0, 249, 253,
	259, 261, 267, 268, 275, 294, 340, 362, 360, 366,
	0, 417, 434, 443, 450, 456, 457, 459, 460, 461,
	462, 463, 328, 274, 397, 290, 299, 0, 0, 346,
	378, 217, 437, 398, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 487, 0, 185, 200, 295, 0, 367, 257,
	465, 445, 441, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 188,
	201, 210, 220, 232, 247, 255, 265, 270, 273, 278,
	279, 282, 287, 305, 310, 311, 312, 313, 330, 331,
	332, 335, 338, 339, 342, 344, 345, 348, 355, 356,
	357, 358, 359, 361, 368, 372, 380, 381, 382, 383,
	384, 386, 387, 391, 392, 393, 394, 402, 406, 424,
	425, 436, 449, 454, 266, 432, 455, 0, 304, 0,
	0, 306, 251, 269, 280, 0, 444, 403, 205, 374,
	258, 194, 223, 208, 230, 245, 248, 284, 314, 321,
	350, 354, 263, 242, 221, 371, 218, 389, 409, 410,
	411, 413, 318, 237, 353, 414, 0, 302, 415, 416,
	276, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 293, 238, 0, 0, 351, 0, 191, 0, 390,
	226, 303, 300, 421, 252, 244, 240, 225, 277, 309,
	349, 408, 343, 0, 297, 0, 0, 399, 322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 283, 224, 190, 334, 400, 256,
	0, 0, 0, 0, 182, 183, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 215, 0, 222,
	0, 0, 0, 0, 0, 236, 281, 243, 235, 418,
	0, 0, 0, 0, 207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 264, 0, 323,
	0, 0, 0, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 292, 0, 289, 186, 203, 0, 0, 333,
	373, 379, 0, 0, 0, 227, 0, 377, 347, 435,
	211, 254, 370, 352, 375, 0, 0, 0, 0, 376,
	298, 423, 365, 433, 452, 453, 234, 327, 442, 412,
	448, 464, 204, 231, 341, 405, 438, 396, 320, 419,
	420, 288, 395, 262, 189, 296, 458, 202, 385, 219,
	209, 195, 407, 431, 216, 388, 0, 0, 466, 197,
	429, 404, 316, 285, 286, 196, 0, 369, 239, 260,
	229, 336, 426, 427, 228, 467, 206, 447, 199, 0,
	446, 329, 422, 430, 317, 308, 198, 428, 315, 307,
	291, 250, 271, 363, 301, 364, 272, 325, 324, 326,
	192, 439, 0, 193, 0, 401, 440, 468, 212, 213,
	214, 0, 249, 253, 259, 261, 267, 268, 275, 294,
	340, 362, 360, 366, 0, 417, 434, 443, 450, 456,
	457, 459, 460, 461, 462, 463, 328, 274, 397, 290,
	299, 0, 0, 346, 378, 217, 437, 398, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	481, 482, 483, 484, 485, 486, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 487, 0, 185, 200,
	295, 0, 367, 257, 465, 445, 441, 0, 0, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 188, 201, 210, 220, 232, 247, 255,
	265, 270, 273, 278, 279, 282, 287, 305, 310, 311,
	312, 313, 330, 331, 332, 335, 338, 339, 342, 344,
	345, 348, 355, 356, 357, 358, 359, 361, 368, 372,
	380, 381, 382, 383, 384, 386, 387, 391, 392, 393,
	394, 402, 406, 424, 425, 436, 449, 454, 266, 432,
	455, 0, 304, 0, 0, 306, 251, 269, 280, 0,
	444, 403, 205, 374, 258, 194, 223, 208, 230, 245,
	248, 284, 314, 321, 350, 354, 263, 242, 221, 371,
	218, 389, 409, 410, 411, 413, 318, 237, 353, 176,
	0, 302, 415, 416, 276, 0, 0, 0, 0, 0,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 118, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 85, 0, 0, 160, 0, 0, 611,
	618, 619, 620, 621, 622, 612, 614, 0, 0, 0,
	613, 0, 0, 616, 623, 624, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 157, 0, 158, 2179, 2180, 0, 0,
	0, 1314, 1315, 149, 148, 175, 0, 0, 625, 626,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 85,
	0, 0, 0, 0, 0, 611, 618, 619, 620, 621,
	622, 612, 614, 0, 0, 0, 613, 0, 0, 616,
	623, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 1316,
	151, 0, 1313, 0, 145, 146, 0, 0, 0, 161,
	0, 0, 2179, 2180, 0, 0, 0, 0, 166, 0,
	0, 0, 0, 0, 625, 626, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	602, 0, 0, 0, 603, 604, 0, 0, 0, 605,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 147, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 154, 159, 156, 162, 163, 164, 165, 167, 168,
	169, 170, 0, 0, 0, 0, 0, 171, 172, 173,
	174,
}

var yyPact = [...]int{
	3507, -1000, -386, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1669, 1724, -1000, -1000, -1000,
	-1000, 1791, -1000, 652, 1475, -1000, 1679, 275, -1000, 33688,
	408, -1000, 33144, 407, 4018, 33688, -1000, 122, -1000, 102,
	33688, 107, 32600, -1000, -1000, -305, 13557, 1639, -13, -20,
	33688, -1000, 33688, 33688, 1774, 1464, -1000, 286, -1000, -1000,
	-1000, -1000, -1000, -1000, 32056, -1000, -1000, -1000, 1688, 1687,
	1802, 560, 1630, -1000, 1725, 1464, -1000, 13557, 1764, 1717,
	13013, -1000, 13013, 349, -1000, -1000, 9742, -1000, -1000, 17911,
	33688, 33688, 196, -1000, 1679, -1000, -1000, 298, -1000, 261,
	1388, -1000, 1387, -1000, 566, 612, 292, 387, 377, 289,
	287, 283, 281, 279, 277, 270, 260, 276, -1000, 590,
	590, -190, -191, 2948, 330, 330, 330, 367, 1654, 1653,
	-1000, 556, -1000, 590, 590, 296, 590, 590, 590, 590,
	216, 201, 590, 590, 590, 590, 590, 590, 590, 590,
	590, 590, 590, 590, 590, 590, 590, 250, 1679, 193,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 33688, 127,
	33688, -1000, 470, 33688, 704, 704, 47, 704, 704, 704,
	704, 126, 521, -24, -1000, 117, 164, 118, 187, 693,
	116, 112, -1000, -1000, 188, 693, 1115, 573, 94, -1000,
	704, 7534, 7534, 7534, -1000, 1662, -1000, -1000, -1000, -1000,
	-1000, -1000, 1051, -1000, 364, -1000, -1000, -1000, -1000, 33688,
	31512, 272, 617, -1000, -1000, -1000, 51, -1000, -1000, 1247,
	798, 13557, 993, -1000, 1379, 519, -1000, -1000, -1000, -1000,
	-1000, 471, 14101, 14101, 14101, 14101, -1000, -1000, 1401, 1401,
	1401, 1401, 14101, 1401, 14101, 1401, 1401, 1401, 1401, 13557,
	1401, 1401, 1401, -1000, 1401, 1401, 1401, 1401, 1401, 1401,
	1401, 1401, 465, 1401, 1401, 1401, 1401, 1401, -1000, -1000,
	-1000, -1000, 1401, 1401, 1401, 1401, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 15733, -1000, 11381, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33688, -1000, 1401,
	119, 1785, 1525, 1725, 1464, -1000, 1774, 1753, 286, -1000,
	1611, 1364, 1260, 994, 1464, 1362, 33688, -1000, 1407, -1000,
	-1000, -1000, 1577, 1011, 1105, -1000, -1000, -1000, -1000, 1144,
	13557, -1000, -1000, 1783, -1000, 15189, 459, 780, 1782, 30968,
	-1000, 349, 349, 1381, 9190, -46, -1000, -1000, -1000, 611,
	20631, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1662, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1333,
	33688, -1000, -1000, 4546, 1088, -1000, 1474, -1000, 1330, -1000,
	1426, 1504, 406, 1088, 397, 389, 385, -1000, -108, -1000,
	-1000, -1000, -1000, -1000, 590, 590, -1000, 268, 1759, 275,
	34234, -1000, -1000, -1000, 30424, 1473, 1088, -1000, 1472, -1000,
	725, 428, 497, 497, 1088, -1000, -1000, 33688, 1088, 705,
	699, 33688, 33688, -1000, 29880, -1000, 29336, 28792, 959, 33688,
	28248, 27704, 27160, 26616, 26072, -1000, 1550, -1000, 1437, -1000,
	-1000, -1000, 33688, 33688, 33688, 274, -1000, -1000, 33688, 1088,
	-1000, -1000, 957, 948, 590, 590, 932, 1095, 1092, 1091,
	590, 590, 928, 1090, 22807, 218, 925, 918, 914, 1021,
	1077, 186, 989, 972, 912, 33688, 1471, 33688, -1000, 157,
	644, 320, 605, 1679, 1638, 1378, 363, 405, 1088, 337,
	337, -1000, 8086, -1000, -1000, 1074, 13557, -1000, 695, 693,
	693, -1000, -1000, -1000, -1000, -1000, -1000, 704, 33688, 695,
	-1000, -1000, -1000, 693, 704, 33688, 704, 704, 704, 704,
	693, 693, 693, 704, 33688, 33688, 33688, 33688, 33688, 33688,
	33688, 33688, 33688, 7534, 7534, 7534, 573, 704, -311, -1000,
	1072, -1000, 1543, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 105, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -112, 1376, 25528, -1000, -313, -315, -316, -321,
	-1000, -1000, -1000, -322, -327, -1000, -1000, -1000, 13557, 13557,
	13557, 13557, -1000, 753, 14101, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 880, 634, 14101, 14101, 14101, 14101, 14101, 14101,
	14101, 14101, 14101, 14101, 14101, 14101, 14101, 14101, 14101, 711,
	1067, 1047, 519, 519, 519, 519, -1000, 13013, 13557, 13557,
	519, -1000, 1088, 24984, 13013, 13013, 13557, 1663, 628, 798,
	33688, -1000, 994, -1000, -1000, -1000, 883, -1000, 33688, 33688,
	38, 13557, 10292, 8086, 13013, 13013, 13013, 13013, 13013, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	454, 1341, 1211, 1328, -1000, 1367, -1000, -180, 17367, 13557,
	1032, 24440, 33688, -1000, -1000, -1000, 1725, -1000, 1725, 1341,
	1603, 1591, 13013, -1000, -1000, 1603, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1207, -1000, 33688, 1362, 1702, 33688,
	1585, 1030, 307, -1000, 13557, 13557, 1361, -1000, 844, 33688,
	-1000, -1000, 23896, -1000, -1000, 6982, -1000, 33688, 251, 33688,
	-1000, 22263, 23352, 8638, -46, -1000, 8638, 1345, -1000, -41,
	-25, 10836, 520, -1000, -1000, -1000, 2948, 14645, 1213, 520,
	35, -1000, -1000, -1000, 1426, -1000, 1426, 1426, 1426, 1426,
	307, 307, 307, 307, -1000, -1000, -1000, -1000, -1000, 1470,
	1469, -1000, 1426, 1426, 1426, 1426, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1467, 1467, 1467, 1427, 1427, 319, -1000,
	13557, 223, 33688, 1685, 910, 157, 343, 1524, 1088, 1088,
	1088, 343, -1000, 1198, 1167, -1000, -372, 1359, -1000, -1000,
	1758, -1000, -1000, 664, 756, 735, 661, 33688, 128, 237,
	-1000, 322, -1000, 33688, 1088, 697, 497, 1088, -1000, 1088,
	-1000, -1000, -1000, -1000, -1000, 1088, 1358, -1000, 1254, 781,
	718, 779, 715, 1358, -1000, -1000, -129, 1358, -1000, 1358,
	-1000, 1358, -1000, 1358, -1000, 1358, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 620, 33688, 128, 711, -1000, 361,
	-1000, -1000, 711, 711, -1000, -1000, -1000, -1000, 1018, 1017,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -363, 33688, -1000,
	150, 591, 228, 282, 207, 33688, 190, 1710, 234, 197,
	33688, 33688, 337, 1541, 33688, 1692, 33688, -1000, -1000, -1000,
	-1000, 798, 33688, -1000, -1000, 704, 704, -1000, -1000, 33688,
	704, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 704,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 33688, 33688, -1000,
	-1000, -1000, -1000, -1000, 73, -54, 257, -1000, -1000, -1000,
	-1000, -1000, 1721, -1000, 798, 691, 649, -1000, -1000, -1000,
	882, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 880, 14101,
	14101, 14101, 1390, 394, 808, 1419, 751, 790, 790, 846,
	846, 543, 543, 543, 543, 543, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1270, -1000, 1064, 982, 994, -1000, 1270,
	1270, 1081, 13013, -1000, -1000, 629, -1000, 13557, 994, -1000,
	-1000, 994, 1357, 1355, 1780, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 947, 994, 13013, 13013,
	1352, 1401, 452, -1000, 1270, 994, 994, 1270, 1270, 8086,
	994, -1000, 33688, -1000, -298, -1000, -72, 606, 1401, -1000,
	22807, 994, 1247, -1000, -1000, -1000, -1000, 1288, -1000, -1000,
	-1000, -1000, -1000, 20087, 1383, 1603, -1000, -1000, 1401, 1309,
	-1000, 307, 5, 19543, -1000, -1000, 798, 798, 13557, -1000,
	-1000, -1000, -1000, -1000, -1000, 449, 1773, 263, 1401, -1000,
	1354, 1522, -1000, -1000, -1000, 1700, 16823, 33688, 1399, 1373,
	-1000, 443, -1000, 1345, -46, -53, -1000, -1000, -1000, -1000,
	798, -1000, 1129, 259, 2570, -1000, 328, -1000, -1000, -1000,
	-1000, 1645, 17, -1000, -1000, -1000, 307, 307, -1000, -1000,
	-1000, -1000, -1000, -1000, 1008, 1008, -1000, -1000, -1000, -1000,
	-1000, 900, -1000, -1000, -1000, 888, -1000, -1000, 1126, 1542,
	223, -1000, -1000, 590, 1004, 1647, 33688, -1000, -1000, 1180,
	150, 33688, 640, 1539, -1000, 1524, 1524, 1524, 33688, -1000,
	-1000, -1000, -1000, -374, 52, 271, -1000, -1000, -1000, 2548,
	33688, 1286, -1000, 137, -1000, 1162, 1601, 33688, -1000, 1280,
	1466, 1088, 1088, -1000, -1000, -1000, 33688, 1401, -1000, -1000,
	-1000, -1000, 402, 1666, 1665, 128, 137, 520, 1088, -1000,
	-1000, -1000, -1000, -1000, -366, 1278, 373, 141, 217, 33688,
	33688, 33688, 33688, 33688, 437, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 199, 358, -1000, 33688, 33688, 530, -1000,
	-1000, -1000, 693, -1000, -1000, 693, -1000, -1000, -1000, -1000,
	-1000, 1660, 33688, -58, -341, -1000, -338, -1000, -1000, -1000,
	-1000, 1255, 390, 808, 14101, 14101, 13013, -121, 440, 440,
	711, -1000, -1000, -1000, 13557, 13557, 1293, 607, -1000, 13557,
	788, -1000, -1000, 13557, 13557, 13557, 994, 224, -1000, 1270,
	1270, 13013, 8086, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 606, -1000, 497, 497, 497, 33688, -1000,
	-1000, 33688, 1732, -1000, 1599, 1597, 1779, 1773, -1000, 22263,
	1603, -1000, -1000, -293, -1000, 1631, 1604, -1000, -1000, -1000,
	-1000, 6430, 1725, 13557, 1537, 33688, 1401, -1000, 16278, 33688,
	33688, 22263, 22263, 22263, 22263, 22263, -1000, 1570, 1566, -1000,
	1559, 1552, 1576, 33688, -1000, 1267, 994, 1753, 16823, 18999,
	1353, 22263, -1000, -1000, 22263, 33688, 5878, -1000, -1000, -62,
	-69, -1000, -1000, -1000, -1000, 2948, -1000, -1000, 431, 1697,
	1643, -1000, -1000, -1000, -1000, 1249, -1000, 1238, 1313, 1235,
	99, -1000, 1482, 1659, 590, 590, -1000, 881, -1000, 1088,
	-1000, -1000, 372, -1000, 1690, 33688, 1536, 1535, 1534, -1000,
	-381, 877, 1462, 1404, 13557, 1461, 1757, 1288, 33688, -1000,
	-1000, 33688, -1000, -1000, 350, -1000, 223, 33688, -1000, -1000,
	-1000, 237, 33688, -1000, 34306, 137, -1000, -1000, -1000, -1000,
	-1000, -1000, 33688, 151, -1000, 1431, 985, -1000, -1000, 1521,
	-1000, -1000, -1000, -1000, 121, 221, -1000, 33688, 517, 1542,
	33688, -1000, -1000, -1000, 704, 704, -1000, -1000, 1657, -1000,
	1088, 14101, 14101, -1000, 519, -1000, 1401, 994, 1426, 1426,
	-1000, 1426, 1427, -1000, 1426, 95, 1426, 92, 1426, -1000,
	-1000, 994, 994, 977, 968, -115, -1000, 798, 13557, 1076,
	716, 992, -1000, 1425, 1421, -1000, -1000, 994, -1000, -1000,
	1714, 1714, 1714, 1223, -1000, 33688, -1000, -1000, -1000, -1000,
	1773, 1771, 1306, -1000, 5, 357, -1000, 1624, 1604, -1000,
	1756, 1616, 1751, -1000, -1000, -1000, 798, -1000, 1670, 1184,
	-1000, 588, 1130, -1000, -1000, 12469, 1230, 1596, 441, 1223,
	1335, 1522, 1520, 1531, 1510, -1000, -1000, -1000, -1000, 1558,
	-1000, 1555, -1000, -1000, 1407, -1000, -1000, 1211, 251, 22263,
	1243, 1243, -1000, 434, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 761, 34190, 1800, -1000, 1002, -1000, 1102, -1000, 676,
	672, -1000, 33688, 1416, -1000, 307, 988, 307, 856, -1000,
	834, -1000, -1000, -238, -1000, -1000, 1406, 1530, -1000, -1000,
	33688, -1000, -1000, 33688, 33688, 33688, 1415, 1749, -1000, 13557,
	1414, 587, 1117, 33688, 33688, -1000, -1000, 220, 1401, -1000,
	1218, 1210, -1000, -192, -1000, 13557, -1000, -1000, -1000, 952,
	952, -1000, 1407, -1000, -1000, -1000, 1158, -1000, -1000, -137,
	33688, 33688, 33688, 33688, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 519, 14101, -1000, -1000, 307, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 13557, -1000, 13557,
	-1000, 1725, 981, 798, 13557, 13557, -1000, 832, 822, -1000,
	1401, 1615, 1401, 1401, 18999, -1000, 1771, 1769, 1742, 1608,
	1610, 1610, 1624, -1000, 1737, 1733, -1000, 978, 1731, 973,
	666, -1000, 33688, 13557, 1401, -1000, 241, 33688, 1401, 33688,
	-1000, 1767, -1000, -1000, 13557, 1413, -1000, 13557, -1000, -1000,
	-1000, -1000, -1000, 1773, 1243, -1000, -1000, 535, -1000, 13557,
	-1000, -1000, -1000, 273, -1000, -1000, -1000, -1000, -1000, 1412,
	13557, -1000, -1000, -1000, 1147, 1141, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1407, -1000, -1000, -1000, -1000, 237,
	-377, 1048, 33688, 817, -1000, 1205, 1288, 420, -1000, 13557,
	293, -1000, 237, -1000, -201, -203, 992, -1000, -1000, 1696,
	-1000, -1000, 8086, -1000, -1000, 1405, 1523, -1000, 215, -1000,
	992, 992, 994, -1000, 992, 992, 1136, 1127, 18455, -1000,
	1730, 1729, 21719, 21719, 606, 1769, -1000, 13557, 13557, 1605,
	838, -1000, -1000, -1000, -1000, 970, 949, -1000, 901, -1000,
	1796, -1000, 798, -1000, 1401, -1000, 430, 1130, -1000, 1725,
	798, 33688, 798, 1767, -1000, 992, -1000, 1401, 33688, 899,
	-1000, -1000, 1694, 1193, 50, -1000, 1190, -1000, -1000, -1000,
	-1000, 11925, -1000, -1000, -1000, -1000, -1000, -1000, 286, 1276,
	-1000, 582, 33688, 33688, 994, 226, -149, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1187, -1000, -1000, -1000, -1000, -1000,
	1187, 1187, -1000, -1000, 798, 1247, -1000, 800, -1000, -1000,
	-1000, -1000, -1000, 33688, 1130, 33688, -1000, 1177, 1725, -1000,
	1166, -1000, 286, -1000, 1398, 1404, -1000, 994, -136, 8086,
	5326, 1145, -1000, -1000, 1581, -127, -177, 21175, -1000, -1000,
	-1000, -1000, -1000, 1082, -1000, -1000, -1000, 1529, 742, -136,
	13557, 1397, -1000, -1000, -52, -1000, -1000, -1000, -1000, -1000,
	1521, -1000, 1575, -1000, -1000, -1000, 1527, -1000, 1777, -1000,
	-1000, -1000, 750, 889, -1000, -1000, -1000, -1000, 708, 33688,
	318, -1000, -1000, -137, -139, -1000, 1795, 552, 552, -1000,
	-1000, -383, 1123, 154, -1000, -189, -1000, -1000, -1000, 309,
	887, -1000, -1000, 796, -383, -1000, -186, -1000, -1000, -1000,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2091, 2090, 10, 1, 2089, 18, 76, 166, 16,
	175, 75, 2088, 2087, 2086, 2085, 2084, 2083, 192, 191,
	189, 2082, 2081, 2080, 2079, 2078, 2076, 2075, 2074, 2072,
	2068, 187, 147, 161, 2067, 2066, 2065, 99, 155, 68,
	70, 159, 2064, 2063, 58, 2062, 2060, 2059, 152, 151,
	704, 2057, 150, 92, 29, 2055, 2054, 2053, 2052, 2051,
	2050, 2049, 2048, 2047, 2046, 2045, 2044, 2043, 2041, 233,
	2040, 2039, 5, 2038, 62, 2036, 2035, 2033, 102, 2032,
	2030, 2029, 2028, 2027, 2026, 127, 2025, 2024, 2023, 2020,
	163, 2019, 2017, 134, 89, 104, 2016, 2014, 87, 156,
	2013, 103, 2012, 2007, 2006, 135, 2005, 2945, 2004, 47,
	43, 2000, 46, 60, 40, 39, 1999, 1996, 1994, 44,
	57, 1989, 84, 48, 1987, 82, 109, 1984, 42, 1980,
	1979, 98, 1976, 1974, 1971, 79, 1970, 1969, 2171, 1966,
	72, 118, 88, 52, 1965, 26, 77, 1962, 1961, 1958,
	1957, 1956, 31, 1952, 1951, 1949, 119, 24, 1947, 20,
	13, 33, 113, 1945, 28, 66, 1943, 126, 1942, 1939,
	37, 21, 15, 1938, 22, 116, 136, 14, 83, 140,
	1937, 1934, 38, 51, 1933, 1931, 1930, 1928, 1927, 1926,
	49, 1925, 35, 1924, 178, 1923, 9, 30, 25, 1922,
	41, 80, 45, 12, 1920, 165, 1919, 34, 157, 108,
	142, 1918, 1916, 1914, 160, 219, 1912, 1898, 65, 146,
	128, 132, 1896, 221, 1895, 1892, 81, 1276, 1803, 17,
	145, 1891, 1888, 2835, 125, 121, 36, 1874, 95, 1873,
	1871, 1870, 167, 143, 90, 947, 93, 1869, 1868, 1867,
	1865, 1863, 1861, 1859, 1858, 228, 164, 59, 100, 138,
	54, 1857, 1856, 1853, 106, 78, 1851, 141, 137, 115,
	162, 1847, 148, 129, 122, 1846, 86, 1845, 1844, 1843,
	1842, 69, 1841, 1840, 1837, 1836, 139, 130, 105, 64,
	1835, 67, 101, 133, 131, 32, 1834, 23, 1831, 1830,
	158, 7, 1829, 3, 0, 1828, 6, 149, 218, 144,
	1827, 1826, 2, 1825, 4, 1824, 1823, 123, 1822, 1821,
	1820, 11, 27, 8, 1818, 1815, 1814, 2769, 2093, 117,
	1789, 169,
}

//line sql.y:6189
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 325, 326, 326, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 304, 304, 304,
	307, 307, 29, 64, 31, 31, 30, 30, 33, 33,
	32, 6, 6, 6, 7, 7, 7, 7, 7, 7,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 9,
	9, 11, 11, 11, 11, 11, 16, 17, 10, 10,
	18, 18, 76, 76, 19, 20, 20, 20, 20, 329,
	329, 133, 133, 131, 131, 132, 132, 200, 200, 21,
	22, 22, 210, 210, 209, 209, 209, 211, 211, 211,
	211, 245, 245, 23, 23, 23, 23, 23, 91, 91,
	306, 306, 305, 303, 303, 302, 302, 301, 35, 36,
	45, 45, 45, 45, 46, 47, 308, 308, 277, 51,
	51, 50, 50, 50, 50, 52, 52, 49, 49, 48,
	48, 279, 279, 266, 266, 278, 278, 278, 278, 278,
	278, 278, 265, 265, 102, 102, 180, 180, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 320, 320, 181,
	181, 181, 181, 181, 181, 111, 111, 119, 119, 119,
	119, 109, 109, 110, 108, 108, 108, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	118, 118, 115, 115, 115, 116, 116, 116, 321, 321,
	321, 321, 248, 248, 248, 248, 251, 251, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 250, 250, 250,
	250, 250, 252, 252, 252, 252, 252, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 254, 254, 254, 254, 254, 254, 254, 254,
	264, 264, 255, 255, 259, 259, 260, 260, 260, 261,
	261, 261, 262, 262, 257, 257, 257, 257, 257, 257,
	258, 258, 258, 267, 291, 291, 290, 290, 288, 288,
	288, 288, 276, 276, 285, 285, 285, 285, 285, 275,
	275, 271, 271, 271, 272, 272, 273, 273, 270, 270,
	274, 274, 287, 287, 286, 268, 268, 269, 269, 293,
	322, 322, 322, 322, 323, 323, 294, 313, 314, 312,
	312, 312, 312, 312, 74, 74, 74, 222, 222, 222,
	283, 283, 282, 282, 282, 284, 284, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 281, 281, 281, 281, 217, 217, 217, 311, 311,
	311, 311, 311, 311, 310, 310, 310, 280, 280, 280,
	309, 309, 53, 53, 165, 165, 42, 42, 42, 42,
	42, 42, 41, 41, 41, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 43, 43,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 24,
	24, 24, 24, 24, 24, 24, 24, 24, 24, 78,
	78, 79, 79, 79, 79, 80, 80, 80, 296, 296,
	54, 54, 3, 3, 1, 1, 2, 2, 4, 4,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 263, 263, 263, 295, 295, 297, 299, 299,
	299, 299, 298, 87, 87, 25, 34, 34, 26, 26,
	26, 26, 27, 27, 55, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 56, 56, 56, 56, 56, 56, 56,
	56, 56, 56, 315, 315, 216, 216, 224, 224, 215,
	215, 238, 238, 238, 218, 218, 218, 219, 219, 319,
	319, 319, 57, 57, 57, 59, 59, 60, 61, 61,
	240, 240, 241, 241, 62, 63, 75, 75, 75, 75,
	75, 75, 77, 77, 77, 13, 13, 13, 13, 71,
	71, 71, 12, 12, 58, 58, 65, 316, 316, 317,
	318, 318, 318, 318, 66, 68, 28, 28, 28, 28,
	28, 28, 97, 97, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 92, 92, 92, 86,
	86, 330, 69, 70, 70, 90, 90, 90, 83, 83,
	83, 89, 89, 89, 14, 14, 15, 15, 199, 199,
	94, 94, 96, 96, 96, 96, 96, 98, 98, 98,
	98, 98, 98, 98, 93, 93, 95, 95, 95, 95,
	231, 231, 231, 230, 230, 122, 122, 124, 123, 123,
	125, 125, 126, 126, 126, 163, 141, 141, 197, 197,
	196, 196, 198, 198, 198, 198, 201, 201, 127, 127,
	127, 127, 128, 128, 129, 129, 130, 130, 239, 239,
	236, 236, 236, 235, 235, 134, 134, 134, 136, 135,
	135, 135, 135, 137, 137, 139, 139, 138, 138, 140,
	145, 145, 144, 144, 142, 142, 142, 142, 143, 143,
	143, 143, 146, 146, 107, 107, 107, 107, 107, 107,
	117, 117, 117, 117, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 213, 213, 147, 147, 155, 155, 155, 155, 148,
	148, 148, 148, 148, 148, 148, 156, 156, 156, 162,
	157, 157, 153, 153, 153, 153, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 152, 152, 152, 152,
	152, 152, 152, 152, 152, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 331, 331, 256, 256,
	256, 154, 154, 154, 154, 154, 88, 88, 88, 88,
	88, 244, 244, 244, 247, 247, 247, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 168, 168, 84, 84, 166, 166, 167, 169,
	169, 164, 164, 164, 150, 150, 150, 170, 170, 171,
	171, 172, 172, 174, 173, 173, 175, 176, 176, 176,
	177, 177, 178, 178, 178, 44, 44, 44, 44, 44,
	39, 39, 39, 39, 40, 40, 40, 99, 99, 99,
	99, 101, 101, 100, 100, 72, 72, 73, 73, 73,
	105, 105, 106, 106, 106, 103, 103, 104, 104, 194,
	194, 179, 179, 179, 186, 186, 186, 182, 182, 184,
	184, 184, 185, 185, 185, 183, 191, 191, 193, 193,
	192, 192, 188, 188, 189, 189, 190, 190, 190, 187,
	187, 149, 149, 149, 149, 149, 195, 195, 195, 195,
	202, 202, 159, 159, 161, 161, 160, 121, 203, 203,
	207, 204, 204, 208, 208, 208, 208, 208, 205, 205,
	206, 206, 232, 232, 232, 212, 212, 223, 223, 220,
	220, 221, 221, 214, 214, 225, 225, 225, 67, 158,
	158, 292, 292, 289, 228, 228, 229, 229, 233, 233,
	237, 237, 234, 234, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	327, 328, 242, 243, 243, 243,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 2, 3, 2, 3, 0, 1, 3, 1,
	4, 3, 3, 4, 3, 2, 3, 4, 3, 4,
	2, 7, 1, 3, 3, 3, 3, 1, 2, 1,
	1, 3, 2, 3, 3, 2, 5, 7, 9, 8,
	7, 8, 1, 1, 10, 11, 9, 8, 8, 1,
	1, 1, 3, 1, 3, 1, 3, 0, 4, 3,
	5, 4, 1, 3, 3, 2, 2, 2, 2, 2,
	1, 1, 1, 2, 2, 6, 12, 2, 0, 2,
	0, 2, 1, 0, 2, 1, 3, 3, 6, 4,
	7, 8, 8, 8, 6, 3, 1, 1, 5, 0,
	1, 1, 1, 2, 2, 0, 1, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 1, 1, 0,
	2, 2, 3, 3, 2, 1, 1, 2, 2, 2,
	2, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 2, 2, 2, 1, 1,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 6, 5, 5, 2, 2, 2,
	2, 3, 3, 3, 4, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	4, 4, 2, 11, 3, 6, 8, 6, 6, 6,
	13, 8, 6, 10, 5, 5, 5, 5, 5, 0,
	6, 5, 6, 4, 5, 0, 8, 9, 0, 3,
	0, 1, 0, 3, 1, 1, 0, 2, 0, 2,
	5, 3, 7, 4, 4, 4, 4, 3, 3, 3,
	7, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 0, 2, 2, 1, 3, 2, 0, 4,
	4, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 4, 4, 4, 3, 3, 3, 5, 2, 3,
	3, 3, 3, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 3, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 4, 4, 2, 4, 0, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 1, 3, 3, 1, 3, 4, 4,
	4, 3, 2, 4, 0, 1, 0, 2, 0, 1,
	0, 1, 2, 1, 1, 1, 2, 2, 1, 2,
	3, 2, 3, 2, 2, 2, 1, 1, 3, 3,
	0, 1, 1, 2, 6, 5, 6, 6, 0, 2,
	3, 3, 0, 2, 3, 3, 3, 2, 3, 1,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 3, 1, 1, 2, 2, 2, 2, 1,
	1, 2, 9, 6, 6, 6, 2, 2, 3, 3,
	3, 0, 3, 1, 1, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 5, 5, 6, 4, 4, 8, 6,
	8, 6, 8, 5, 4, 2, 2, 1, 2, 2,
	2, 8, 8, 6, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 2,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 2, 2, 0, 3, 0,
	2, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 1, 0, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -325, -5, -9, -16, -17, -18, -19, -20, -21,
	-22, -23, -24, -25, -26, -27, -55, -56, -57, -59,
	-60, -61, -62, -63, -12, -58, -28, -29, -64, -65,
	-66, -67, -68, -14, -15, -7, -6, -11, 7, 8,
	-76, -30, 30, -35, -45, 203, -46, -36, 204, -47,
	206, 205, 241, 207, 234, 72, 283, 284, 286, 287,
	288, 289, -77, 239, 240, 209, 34, 43, 31, 32,
	35, 212, 247, 248, -8, -31, 6, -327, 9, 409,
	236, 235, 26, -10, 423, 83, -326, 557, -194, -179,
	20, 31, 27, -178, -174, -90, -179, 18, 16, 5,
	-69, -330, -69, -69, 10, 11, -69, -277, -279, 83,
	140, 83, -69, -51, -50, -49, -48, -52, 29, -42,
	-43, -300, -41, -38, 208, 205, 251, 107, 108, 241,
	242, 243, 207, 225, 240, 244, 239, 260, -37, 78,
	31, 423, 426, -284, 204, 210, 211, 410, 110, 109,
	73, 206, -281, 335, 527, -52, 529, 99, 101, 528,
	42, 215, 530, 531, 532, 533, 224, 534, 535, 536,
	537, 543, 544, 545, 546, 111, 5, -69, -237, -233,
	-304, -227, 86, 87, 88, 420, 227, 454, 455, 276,
	78, 39, 332, 335, 527, 283, 297, 291, 318, 310,
	421, 456, 279, 228, 264, 524, 308, 116, 529, 282,
	457, 242, 340, 341, 342, 99, 286, 377, 542, 281,
	458, 540, 101, 528, 77, 49, 42, 237, 306, 302,
	530, 265, 459, 431, 258, 110, 107, 549, 34, 300,
	48, 28, 539, 109, 47, 531, 131, 460, 532, 344,
	323, 518, 46, 345, 243, 461, 81, 425, 526, 346,
	301, 347, 275, 538, 209, 462, 510, 348, 349, 519,
	463, 324, 328, 464, 369, 350, 556, 50, 465, 466,
	520, 108, 467, 76, 533, 295, 296, 468, 273, 226,
	371, 322, 224, 33, 351, 422, 277, 56, 252, 372,
	44, 326, 553, 43, 514, 469, 517, 321, 317, 51,
	470, 471, 472, 473, 534, 320, 294, 316, 548, 443,
	270, 535, 60, 211, 330, 329, 331, 259, 368, 313,
	474, 475, 476, 231, 79, 477, 303, 19, 478, 479,
	352, 266, 480, 54, 481, 482, 375, 240, 483, 52,
	536, 37, 245, 550, 537, 484, 485, 486, 487, 488,
	354, 489, 353, 325, 327, 254, 355, 424, 490, 299,
	244, 541, 491, 232, 525, 246, 251, 239, 376, 233,
	492, 493, 494, 495, 496, 280, 497, 498, 287, 543,
	41, 499, 500, 501, 502, 274, 269, 370, 379, 59,
	80, 337, 503, 523, 293, 267, 504, 284, 53, 544,
	545, 546, 261, 547, 7, 554, 555, 357, 111, 271,
	272, 45, 314, 253, 505, 506, 304, 305, 319, 292,
	315, 285, 511, 255, 358, 241, 507, 378, 268, 333,
	338, 428, 260, 359, 522, 427, 312, 309, 262, 508,
	360, 216, 256, 257, 509, 512, 361, 362, 278, 363,
	364, 365, 366, 367, 263, 426, 290, 307, 339, 390,
	391, 392, 393, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 418, 214, -69,
	214, -138, -233, 214, -205, 341, -224, 343, 356, 351,
	361, 349, -216, 352, 354, 254, -319, 369, 214, 358,
	203, 157, 344, 353, 362, 363, 278, 364, 367, 263,
	-315, -304, 532, 547, 116, 311, 348, 346, 370, 514,
	366, 365, -233, 285, -240, 290, -228, -304, -227, 288,
	-138, -75, 510, 207, -242, -242, -92, 514, 516, -157,
	-107, 124, -117, -120, -112, -113, -151, -152, -153, -154,
	-118, -164, 146, 147, 154, 125, -162, -121, 24, 419,
	411, 410, 157, 29, 199, 66, 67, 413, 414, 127,
	55, 386, 387, -119, 382, 388, 383, 416, 417, 102,
	418, -228, -233, 219, 381, 213, 152, 409, -114, -110,
	-6, -160, 380, 384, 385, 389, -304, -227, -116, -115,
	-147, 89, 95, 100, 96, -324, 103, -327, 90, 91,
	92, 93, 94, 104, 105, 158, 159, 160, 161, 162,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 188, 189, 190, 191, 192,
	193, 194, 195, 196, 197, 198, 42, 357, 357, -138,
	-69, -228, -228, -172, -90, -174, -8, -6, -327, 6,
	-69, -6, -7, -11, -31, -33, 450, -32, -233, -179,
	-194, 10, 142, 40, 48, -177, -178, -10, -6, -107,
	17, 21, 22, -95, 148, -107, -233, -70, -95, -214,
	218, -69, -69, -204, -245, 285, -208, 370, 369, -229,
	-206, -228, -226, -205, 368, 208, 429, 123, 23, 25,
	126, 157, 17, 127, 35, 210, 311, 225, 156, 221,
	410, 203, 70, 430, 382, 383, 380, 386, 412, 413,
	381, 343, 29, 11, 432, 26, 235, 22, 36, 150,
	205, 130, 238, 248, 24, 236, 102, 105, 435, 20,
	73, 230, 12, 223, 38, 14, 436, 437, 15, 219,
	218, 142, 215, 68, 9, 199, 27, 139, 64, 438,
	118, 439, 440, 441, 442, 66, 140, 18, 551, 384,
	385, 31, 515, 419, 249, 152, 71, 57, 516, 124,
	444, 445, 103, 446, 106, 74, 521, 120, 16, 69,
	40, 447, 250, 448, 247, 220, 552, 449, 373, 450,
	141, 206, 409, 67, 451, 213, 356, 6, 415, 30,
	234, 222, 113, 65, 452, 214, 129, 416, 417, 217,
	104, 5, 117, 32, 10, 72, 75, 387, 388, 389,
	55, 112, 423, 128, 13, 453, 374, 122, 116, -278,
	140, -265, -269, -228, 229, -294, 225, -138, -287, -286,
	-228, -91, -223, 215, 223, 222, 117, -308, 120, 271,
	381, 213, -48, -49, -205, 156, -78, 246, 250, 84,
	84, -269, -268, -267, -309, 250, 229, -293, -285, 221,
	230, -275, 222, 223, -270, 215, 118, -309, -270, 220,
	230, 250, 250, 111, 250, 111, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 245, -276, 132, -276, 427,
	427, -281, -309, -309, -309, 217, 33, 33, -225, -270,
	217, 23, -276, -276, -205, 156, -276, -276, -276, -276,
	258, 258, -276, -276, -276, -276, -276, -276, -276, -276,
	-276, -276, -276, -276, -276, -276, -276, 214, -308, -99,
	367, 278, 78, -50, 260, -34, -138, -223, 215, 216,
	-308, -138, 200, -138, -218, 140, 13, -218, -215, 357,
	355, 342, 347, -218, -218, -218, -218, 261, 340, -271,
	215, 33, 226, 357, 261, 340, 261, 262, 261, 262,
	350, 360, 261, -238, 12, 142, 381, 345, 349, 254,
	214, 255, 216, 359, -304, 517, 262, -238, 90, -219,
	140, 357, 257, -218, -243, -327, -229, 311, -243, -243,
	30, 87, 217, -228, -71, -228, 90, -13, -9, -19,
	-18, -20, 132, -97, 357, -85, 157, 532, 518, 519,
	520, 517, 354, 525, 523, 521, 261, 522, 84, 120,
	122, 123, -107, 139, -148, 132, 133, 134, 135, 136,
	137, 138, 142, 124, 126, 140, 141, 121, 143, 144,
	145, 146, 147, 148, 149, 151, 150, 152, 153, 156,
	201, 202, -113, -113, -113, -113, -162, -327, -327, -327,
	-113, -213, -327, -113, -327, -327, -327, -327, -168, -107,
	-327, -331, -327, -331, -331, -256, -327, -256, -327, -327,
	-327, -327, -327, 200, -327, -327, -327, -327, -327, -256,
	-256, -256, -256, 100, 95, 89, -164, 96, 90, -228,
	-233, -6, -7, -157, -242, -316, -317, -141, -138, -327,
	278, 12, 75, -177, -10, -6, -172, -178, -174, -6,
	-69, -83, -96, 61, 62, -98, 22, 36, 65, 63,
	21, -328, 85, -328, -194, -328, 84, -33, -197, 83,
	59, 41, 90, 90, 84, 19, -173, -175, -107, 12,
	-231, -230, 23, -228, 90, 200, 98, 12, -139, 27,
	-138, -214, -214, 84, 285, -208, -245, -210, -209, 371,
	373, 132, -232, -228, 90, 29, 85, 84, -138, -248,
	-251, -253, -252, -254, -249, -250, 308, 309, 157, 312,
	314, 315, 316, 317, 318, 319, 320, 321, 322, 323,
	30, 237, 304, 305, 306, 307, 324, 325, 326, 327,
	328, 329, 330, 331, 291, 310, 421, 292, 293, 294,
	295, 296, 297, 299, 300, 301, 302, 303, -307, -304,
	83, 85, 84, -255, 83, -99, 214, -304, 215, 215,
	215, -69, 409, -276, -276, 245, 17, -41, -38, -300,
	16, -37, -38, 208, 107, 108, 205, 83, -265, 83,
	-274, -307, -304, 83, 118, 220, 117, -273, -270, -273,
	-274, -304, -164, -304, 118, 118, -201, -228, -201, -201,
	21, -201, 21, -201, 21, 92, -228, -201, 21, -201,
	21, -201, 21, -201, 21, -201, 21, 29, 76, 77,
	29, 79, 80, 81, -164, -164, -265, -205, -138, -304,
	92, 92, -276, -276, 92, 90, 90, 90, -276, -276,
	92, 90, -235, -233, 90, -310, 231, 275, 277, 92,
	92, 92, 92, 29, 90, -311, 29, 539, 538, 540,
	541, 542, 92, 29, 92, 29, 92, -228, 83, -138,
	-105, 265, 203, 205, 208, 74, 90, 279, 132, 42,
	84, 217, 214, -304, -220, 219, -220, -234, -233, -226,
	90, -107, -272, 12, 142, -238, -238, -218, -138, -272,
	-238, -218, -138, -218, -218, -218, -218, -238, -238, -238,
	-218, -233, -233, -138, -138, -138, -138, -138, -138, -138,
	-243, -243, -243, -219, -218, 517, 90, 74, -241, 288,
	322, 511, 512, 513, 84, 423, -131, -138, 517, 517,
	517, 517, 517, 517, -107, -107, -107, -107, -155, 103,
	124, 104, 105, -120, -156, -160, -162, 97, 142, 126,
	140, 141, -112, -113, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -244, -304, 90,
	157, 90, 90, -93, -95, -107, -107, -304, -228, -93,
	-93, -107, -89, 22, 36, -166, -167, 128, -164, -328,
	-328, 92, -228, -228, -82, -81, 391, 392, 393, 394,
	396, 397, 398, 401, 402, 406, 407, 390, 408, 395,
	400, 403, 404, 405, 399, 307, -107, -94, 22, 36,
	-93, -229, -234, -226, -93, -94, -94, -93, -93, 200,
	-194, -328, 84, -318, 373, 374, 515, -236, 250, -235,
	23, -158, -157, 90, 90, -228, -199, -196, -228, -177,
	-177, 61, 62, 57, -93, -98, -328, -32, 23, -196,
	60, 90, -257, -205, 332, 333, -107, -107, 84, -176,
	25, 26, -138, -230, 148, -234, -138, -200, 250, -138,
	-123, -125, -126, -127, -141, -163, -327, 12, -131, -132,
	-140, -233, -208, -210, 84, 372, 374, 375, 74, 106,
	-107, -258, 156, -283, -282, -281, -265, -267, -268, -269,
	85, -258, -261, 338, 337, -255, -255, -255, -255, -255,
	-257, -257, -257, -257, 83, 83, -255, -255, -255, -255,
	-259, 83, -259, -259, -260, 83, -260, -294, -107, -291,
	-290, -288, -289, 224, 99, 423, 75, -286, -176, 92,
	-105, -221, 219, -292, -289, -304, -304, -304, -221, -304,
	90, -304, 90, -79, -54, -1, 551, 552, 553, 84,
	17, -266, -265, -53, 275, -297, -298, 250, -293, -287,
	-274, 118, -273, -274, -274, -304, 84, 27, 111, 111,
	111, 111, 423, 205, 30, -265, -53, -244, 217, -244,
	-244, 90, 90, -217, 547, -131, -101, 267, 132, 256,
	256, 214, 214, 269, -138, 280, 282, 281, 279, 21,
	268, 270, 272, 258, -138, -138, -220, 74, -133, -138,
	24, -233, -138, -218, -218, -138, -218, -218, -138, -228,
	-85, 373, 84, 423, 20, -86, 20, 103, 104, 105,
	-156, -112, -113, -112, 123, 238, 84, -328, 23, 84,
	75, -328, -328, -328, 84, 12, -93, -169, -167, 130,
	-107, -328, -328, 84, 84, 12, -247, 23, -328, -93,
	-93, -327, 200, -328, -328, -328, -328, -328, -229, -317,
	514, 374, -145, -144, -142, 72, 218, 73, -327, -235,
	-328, 84, -150, -228, 92, 96, -179, -122, -124, 12,
	-98, -162, 85, -257, -183, -188, -215, -228, 90, 157,
	-175, 200, -146, 13, -149, 30, 55, -9, -327, -327,
	30, 84, -134, -136, -135, -137, 64, 68, 70, 65,
	66, 67, 71, -239, 23, -123, -7, -6, -327, -138,
	-131, -329, 12, 75, -329, 84, 200, -209, -211, 376,
	373, 379, -304, 90, -78, 84, -281, -269, -180, -102,
	38, -262, 339, -257, -257, -264, 90, -264, 92, 92,
	85, -44, -39, -40, 31, 78, -288, -276, 90, 37,
	-228, 85, -101, -138, 124, 74, -292, -292, -292, -233,
	-2, 550, 556, 118, 83, 342, 16, -196, 84, 85,
	-165, 276, 85, -299, 55, -228, 85, 83, -274, -274,
	-228, -327, 214, 29, 29, -53, -165, -258, -304, 549,
	548, 85, 216, 274, -106, 386, -103, 90, 86, -138,
	-138, -138, -138, -138, 208, 205, 259, 217, -131, -138,
	84, -74, 233, 228, -238, -238, 31, -138, 373, 526,
	524, 123, 238, -120, -113, -95, 420, -246, 157, 308,
	237, 306, 302, 322, 313, 337, 304, 338, 301, 300,
	299, -246, -244, -107, -107, -172, 131, -107, 129, -107,
	-107, -107, -328, 157, 308, -328, -328, -94, -229, -142,
	-270, -270, -270, -201, -228, -212, 20, 12, 55, 55,
	-122, -146, -123, -98, -186, 510, -191, 44, -189, -190,
	45, -187, 46, 54, 148, -177, -107, -202, 74, -203,
	-207, -164, -159, -161, -160, -327, -195, -328, -228, -201,
	-203, -125, -126, -126, -125, -126, 64, 64, 64, 69,
	64, 69, 64, -135, -233, -328, -328, -7, -236, 75,
	-123, -123, -140, -233, 148, 373, 377, 378, -281, -323,
	103, 124, 29, 74, 335, 99, -321, 156, -322, 220,
	117, 118, 232, 23, 39, 85, 84, 85, 84, 85,
	84, -222, 460, 124, -40, -39, -276, -276, 92, -304,
	216, 24, -138, 74, 74, 74, -80, 554, 92, 83,
	-3, 78, -107, 83, 17, -265, -164, 252, 142, -291,
	-196, -295, -297, -138, -109, -327, -108, -110, -114, 146,
	147, -165, -138, -100, 265, 273, 83, -104, 87, -306,
	75, 256, 335, 256, -138, -74, -44, -138, -218, -218,
	31, -304, -120, -113, -327, -328, -255, -255, -255, -260,
	-255, 296, -255, 296, -255, -328, -328, 84, -328, 20,
	-328, -84, 415, -107, 84, 84, -328, 83, 83, -328,
	-143, 20, -143, -143, -328, -138, -146, -170, 14, -183,
	49, 314, -193, -192, 53, 45, -190, 17, 47, 17,
	28, -202, 84, 132, 84, -328, -328, 84, 55, 200,
	-328, -146, -129, -128, 74, 75, -130, 74, -128, 64,
	64, -197, -328, -200, -123, -146, -146, 200, 103, -327,
	-111, -119, -109, 10, 90, 90, -304, 118, 118, -138,
	83, -257, 90, -257, 92, 92, 460, 29, 79, 80,
	81, 29, 76, 77, -138, -138, -138, -138, -296, 83,
	17, -107, 83, 132, 85, -196, -196, 253, -160, -327,
	85, -328, 84, -263, 423, 426, -107, -115, -115, -197,
	85, -303, 423, -305, -228, -228, -228, -228, -112, -257,
	-107, -107, -177, 90, -107, -107, 92, 92, -327, 64,
	16, 14, -327, -327, -236, -170, -171, 15, 17, -184,
	51, -182, 50, -182, -192, 17, 17, 90, 17, 90,
	118, -207, -107, -161, 55, -9, -228, -159, -228, -172,
	-107, 83, -107, -146, -146, -107, -152, 418, 83, -107,
	85, 85, -197, -295, -54, 85, -196, 92, 85, -160,
	-87, -327, 249, -322, -297, 427, 427, -328, 23, -302,
	-301, -229, 83, 75, -88, 142, 423, -328, -328, -328,
	-328, -328, 85, 85, -198, -328, -228, 220, 17, 17,
	-198, -198, -145, -171, -107, -157, -185, 52, 74, 106,
	90, 90, 90, 10, -159, 200, -177, -196, -172, -328,
	-196, 85, 23, 85, 556, 118, 85, 249, -9, 84,
	132, -196, -138, -328, 421, 71, 424, 84, -328, -328,
	-328, 74, 106, -203, -228, 85, -177, 85, -181, -9,
	83, -3, -328, -72, 423, -301, -280, -229, 90, 92,
	85, 60, 422, 425, -228, 220, -313, -314, 74, -323,
	-320, 103, 124, 99, -321, 112, 113, -72, -107, 83,
	-73, 264, 514, -306, 60, -314, 74, 11, 10, 103,
	90, 85, -196, 225, -303, 423, -312, 233, 228, 231,
	30, -312, -4, 555, 85, 266, 424, 227, 29, 103,
	92, -4, 425,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 67, 69, 70, 711, 711,
	711, 0, 711, 0, 0, 711, -2, -2, 711, 1140,
	0, 711, 0, 0, -2, 643, 645, 0, 647, -2,
	0, 0, 656, 1592, 1592, 706, 0, 0, 0, 0,
	0, 711, 0, 0, 1001, 47, 711, 0, 82, 83,
	662, 663, 664, 62, 0, 1590, 1, 3, 68, 72,
	0, 0, 0, 55, 1010, 0, 75, 0, 0, 715,
	0, 713, 0, 1123, 711, 711, 0, 113, 114, 0,
	0, 0, -2, 117, -2, 141, 142, 0, 146, 509,
	449, 492, 447, 478, -2, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 452, 342,
	342, 0, 0, -2, 440, 440, 440, 0, 0, 0,
	475, 1125, 395, 342, 342, 0, 342, 342, 342, 342,
	0, 0, 342, 342, 342, 342, 342, 342, 342, 342,
	342, 342, 342, 342, 342, 342, 342, 1027, 145, 1141,
	1138, 1139, 37, 38, 39, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461,
	1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471,
	1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481,
	1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491,
	1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501,
	1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531,
	1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551,
	1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561,
	1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571,
	1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581,
	1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 0, 1117,
	0, 573, 807, 0, 634, 634, 0, 634, 634, 634,
	634, 0, 0, 0, 585, 0, 0, 0, 0, 631,
	0, 0, 604, 606, 0, 631, 0, 637, 0, 618,
	634, 1593, 1593, 1593, 1108, 0, 628, 626, 640, 641,
	623, 624, 642, 646, 0, 651, 654, 1134, 1135, 0,
	669, 46, 1368, 661, 674, 675, 0, 707, 708, 42,
	900, 0, 829, 833, 844, 857, 858, 859, 860, 861,
	863, 864, 0, 0, 0, 0, 869, 870, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 982,
	0, 946, 946, 917, 946, 948, 948, 0, 0, 0,
	1589, 991, 0, 0, 0, 0, 0, 0, 250, 251,
	899, 1097, 948, 948, 948, 948, -2, -2, 197, 198,
	199, 200, 201, 202, 203, 0, 193, 0, 255, 256,
	252, 253, 254, 883, 884, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 248, 249, 1592, 0, 684, 0,
	0, 0, 726, 1010, 0, 1002, 1001, 60, 0, 711,
	-2, 0, 0, 0, 0, 44, 0, 49, 768, 74,
	73, 1049, 0, 0, 0, 56, 1011, 64, 66, 1012,
	0, 716, 717, 0, 746, 750, 0, 712, 0, 0,
	1124, 1123, 1123, 99, 0, 1533, 1101, -2, -2, 0,
	0, 1136, 1137, 1110, -2, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, -2, 0,
	0, 155, 156, 0, 40, 368, 0, 151, 0, 362,
	312, 1027, 0, 0, 0, 0, 0, 711, 0, 1118,
	136, 137, 143, 144, 342, 342, 489, 0, 0, 145,
	145, 456, 457, 458, 0, 0, -2, 366, 0, 441,
	0, 0, 356, 356, 360, 358, 359, 0, 0, 0,
	0, 0, 0, 469, 0, 470, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 551, 0, 343, 0, 487,
	488, 396, 0, 0, 0, 0, 467, 468, 0, 0,
	1126, 1127, 0, 0, 342, 342, 0, 0, 0, 0,
	342, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 1040,
	0, 0, 0, -2, 0, 565, 0, 0, 0, 1119,
	1119, 572, 0, 574, 575, 0, 0, 576, 0, 631,
	631, 629, 630, 578, 579, 580, 581, 634, 0, 0,
	351, 352, 353, 631, 634, 0, 634, 634, 634, 634,
	631, 631, 631, 634, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1593, 1593, 1593, 637, 634, 0, 614,
	0, 615, 616, 619, 620, 1594, 1595, 1155, 621, 622,
	1109, 644, 652, 655, 672, 670, 671, 673, 665, 666,
	667, 668, 0, 686, 687, 692, 0, 0, 0, 0,
	698, 699, 700, 0, 0, 703, 704, 705, 0, 0,
	0, 0, 827, 0, 0, 889, 890, 891, 892, 893,
	894, 895, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 865, 866, 867, 868, 871, 0, 0, 0,
	876, 877, 0, 0, 0, 0, 0, 721, 0, 983,
	0, 915, 0, 916, 918, 919, 0, 920, 0, 0,
	0, 0, 730, 0, 0, 730, 730, 0, 0, 187,
	188, 189, 190, 204, 205, 206, 207, 208, 257, 991,
	0, 899, 0, 0, 43, 676, 677, 0, 790, 1129,
	0, 0, 728, 54, 63, 65, 1010, 58, 1010, 0,
	732, 0, 0, -2, -2, 733, 739, 740, 741, 742,
	743, 51, 1591, 52, 0, 71, 0, 45, 0, 0,
	0, 0, 324, 1052, 0, 0, 1003, 1004, 1007, 0,
	747, 751, 0, 753, 754, 0, 714, 0, 97, 0,
	806, 0, 0, 0, 1533, 1107, 0, 101, 102, 0,
	0, 0, 330, 1112, 1113, 1114, -2, 349, 0, 330,
	319, 263, 264, 265, 312, 267, 312, 312, 312, 312,
	324, 324, 324, 324, 295, 296, 297, 298, 299, 0,
	0, 282, 312, 312, 312, 312, 302, 303, 304, 305,
	306, 307, 308, 309, 268, 269, 270, 271, 272, 273,
	274, 275, 276, 314, 314, 314, 316, 316, 0, 41,
	0, 334, 0, 1007, 0, 1040, 1121, 1131, 0, 0,
	0, 1121, 119, 0, 0, 490, 520, 450, 479, 491,
	0, 453, 454, -2, 0, 0, 440, 0, 442, 0,
	350, 0, -2, 0, 360, 0, 356, 360, 357, 360,
	348, 361, 471, 472, 473, 0, 531, 776, 0, 0,
	0, 0, 0, 537, 538, 539, 0, 541, 542, 543,
	544, 545, 546, 547, 548, 549, 550, 480, 481, 482,
	483, 484, 485, 486, 0, 0, 442, 0, 476, 0,
	397, 398, 0, 0, 401, 402, 403, 404, 0, 0,
	407, 408, 409, 793, 794, 410, 434, 435, 436, 411,
	412, 413, 414, 415, 416, 417, 428, 429, 430, 431,
	432, 433, 418, 419, 420, 421, 422, 425, 0, 129,
	1031, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1119, 0, 0, 0, 0, 808, 1142, 1143,
	635, 636, 0, 354, 355, 634, 634, 582, 605, 0,
	634, 586, 607, 587, 589, 588, 590, 609, 610, 634,
	593, 632, 633, 594, 595, 596, 597, 598, 599, 600,
	601, 602, 603, 611, 612, 613, 638, 0, 0, 653,
	657, 658, 659, 660, 0, 0, 689, 93, 694, 695,
	696, 697, 709, 702, 901, 824, 825, 826, 828, 830,
	0, 885, 887, 832, 834, 896, 897, 898, 0, 0,
	0, 0, 0, 838, 842, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 862, 961, 962,
	963, 879, 880, 0, 744, 0, 0, 0, 878, 0,
	0, 0, 0, 722, 723, 989, 986, 0, 0, 947,
	949, 0, 0, 0, 0, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 964, 0, 0, 0,
	731, 992, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1096, 0, 679, 680, 682, 0, 810, 0, 791,
	0, 0, 1130, 685, 724, 725, 727, 729, 770, 57,
	59, 737, 738, 0, 755, 734, 53, 48, 0, 0,
	1050, 324, 1072, 0, 328, 329, 1013, 1014, 0, 1006,
	1008, 1009, 76, 752, 748, 0, 822, 0, 0, 805,
	0, 758, 760, 761, 762, 788, 0, 0, 0, 0,
	95, 807, 1102, 100, 0, 0, 105, 106, 1103, 1104,
	1105, 1106, 0, 509, -2, 392, 157, 159, 160, 161,
	152, -2, 322, 320, 321, 266, 324, 324, 289, 290,
	291, 292, 293, 294, 0, 0, 283, 284, 285, 286,
	277, 0, 278, 279, 280, 0, 281, 367, 0, 1015,
	335, 336, 338, 342, 0, 0, 0, 363, 364, 0,
	1031, 0, 0, 0, 1132, 1131, 1131, 1131, 0, 147,
	148, 149, 150, 526, 0, 0, 521, 524, 525, 145,
	0, 0, 153, 444, 443, 0, 558, 0, 365, 0,
	0, 360, 360, 345, 346, 474, 0, 0, 533, 534,
	535, 536, 0, 0, 0, 442, 444, 330, 0, 399,
	400, 405, 406, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 504, 505, 506, 507, 508,
	1028, 1029, 1030, 0, 0, 566, 0, 0, 384, 91,
	1120, 571, 631, 592, 608, 631, 584, 591, 617, 649,
	693, 0, 0, 0, 0, 701, 0, 831, 886, 888,
	835, 0, 839, 843, 0, 0, 0, 0, 0, 0,
	0, 882, 906, 907, 0, 0, 1001, 0, 987, 0,
	0, 914, 950, 0, 0, 0, 0, 0, 902, 0,
	0, 730, 0, 951, 952, 953, 954, 955, 992, 678,
	681, 683, 766, 811, 812, 0, 0, 0, 0, 792,
	1128, 0, 0, 994, 0, 0, 755, 822, 756, 0,
	735, 50, 769, 1054, 1053, 1066, 1079, 325, 326, 327,
	1005, 0, 1010, 0, 1090, 0, 0, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 795, 0, 0, 798,
	0, 0, 0, 0, 789, 0, 0, 0, 0, -2,
	0, 0, 89, 90, 0, 0, 0, 103, 104, 0,
	0, 110, 331, 332, 138, 145, 394, 158, 374, 0,
	0, 262, 323, 287, 288, 0, 310, 0, 0, 0,
	387, 115, 1019, 1018, 342, 342, 337, 0, 340, 0,
	1133, 313, 0, 128, 0, 0, 0, 0, 0, 134,
	515, 0, 0, 522, 0, 0, 0, 448, 0, 459,
	460, 0, 530, 557, 0, 562, 334, 0, 344, 347,
	777, 0, 0, 461, 0, 444, 465, 466, 477, 426,
	427, 424, 0, 0, 1041, 1042, 1047, 1045, 1046, 120,
	497, 499, 498, 502, 0, 0, 495, 0, 384, 1015,
	0, 570, 385, 386, 634, 634, 688, 94, 0, 691,
	0, 0, 0, 836, 840, 745, 0, 0, 312, 312,
	969, 312, 316, 972, 312, 974, 312, 977, 312, 980,
	981, 0, 0, 0, 0, 984, 913, 990, 0, 0,
	0, 0, 924, 0, 0, 903, 904, 0, 993, 813,
	818, 818, 818, 0, 771, 0, 1115, 1116, 995, 996,
	822, 997, 757, 736, 1072, 0, 1065, 0, -2, 1074,
	0, 0, 0, 1080, 749, 77, 823, 80, 0, 1090,
	1098, 0, 1081, 1092, 1094, 0, 0, 0, 1086, 0,
	822, 759, 784, 786, 0, 781, 796, 797, 799, 0,
	801, 0, 803, 804, 768, 764, 765, 0, 97, 0,
	822, 822, 96, 0, 809, 107, 108, 109, 393, 162,
	167, 0, 0, 0, 172, 0, 174, 0, 375, 0,
	259, 261, 0, 0, 165, 324, 0, 324, 0, 317,
	0, 376, 388, 0, 1016, 1017, 0, 0, 339, 341,
	0, 1122, 130, 0, 0, 0, 518, 0, 527, 0,
	0, 0, 0, 0, 0, 154, 445, 0, 0, 333,
	0, 0, 555, 552, 462, 0, 191, 192, 194, 0,
	0, 464, 768, 1032, 1033, 1034, 0, 1044, 1048, 123,
	0, 0, 0, 0, 567, 568, 569, 92, 577, 583,
	690, 710, 837, 841, 0, 873, 967, 324, 970, 971,
	973, 975, 976, 978, 979, 874, 875, 0, 909, 0,
	911, 1010, 0, 988, 0, 0, 923, 0, 0, 905,
	0, 0, 0, 0, 790, 61, 997, 999, 0, 1059,
	1057, 1057, 1067, 1068, 0, 0, 1075, 0, 0, 0,
	0, 81, 0, 0, 0, 1095, 0, 0, 0, 0,
	98, 1001, 778, 785, 0, 0, 779, 0, 780, 800,
	802, 763, -2, 822, 822, 87, 88, 0, 168, 0,
	170, 185, 186, 0, 173, 175, 176, 258, 260, 0,
	0, 300, 311, 301, 0, 0, 389, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 768, 131, 132, 133, 510, 0,
	520, 0, 0, 0, 513, 0, 451, 0, 561, 0,
	0, 532, 0, 540, 0, 0, 0, 195, 196, 0,
	1043, 496, 0, 121, 122, 0, 0, 501, 956, 968,
	0, 0, 0, 985, 0, 0, 0, 0, 0, 819,
	0, 0, 0, 0, 810, 999, 79, 0, 0, 1062,
	0, 1055, 1058, 1056, 1069, 0, 0, 1076, 0, 1078,
	0, 1099, 1100, 1093, 0, 1085, 1088, 1084, 1087, 1010,
	782, 0, 787, 1001, 86, 0, 171, 0, 0, 0,
	315, 318, 0, 0, 0, 511, 0, 523, 514, 559,
	560, 0, 563, 369, 556, 553, 554, 463, 0, 124,
	125, 0, 0, 0, 0, 0, 0, 908, 910, 912,
	921, 922, 965, 966, 0, 815, 772, 773, 820, 821,
	0, 0, 767, 78, 1000, 998, 1051, 0, 1060, 1061,
	1070, 1071, 1077, 0, 1083, 0, 84, 0, 1010, 169,
	0, 179, 0, 519, 0, 522, 512, 0, 1035, 0,
	0, 0, 503, 872, 0, 0, 0, 0, 814, 816,
	817, 1063, 1064, 1091, 1089, 783, 85, 370, 374, 1035,
	0, 0, 564, 493, 1037, 126, 127, 437, 438, 439,
	120, 957, 0, 960, 774, 775, 371, 372, 0, 163,
	180, 181, 0, 0, 184, 177, 178, 116, 0, 0,
	0, 1038, 1039, 123, 958, 373, 0, 0, 0, 182,
	183, 528, 0, 0, 500, 0, 377, 379, 380, 0,
	0, 378, 516, 0, 528, 1036, 0, 381, 382, 383,
	529, 517, 959,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 557,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:475
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:480
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:481
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:485
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:520
		{
			setParseTree(yylex, nil)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:526
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:530
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:534
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:539
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:543
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:549
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:555
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:561
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:565
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:570
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:574
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:580
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:584
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:590
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:600
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:604
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:627
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:633
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:638
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:644
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:678
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:709
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:730
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:736
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:743
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:749
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:761
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:769
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:781
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:793
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:797
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:803
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:809
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:813
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:817
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:821
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:831
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:841
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:851
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:860
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:864
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:870
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:876
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:880
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:886
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:896
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:900
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:904
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:910
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:914
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:918
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:922
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:928
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:932
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:938
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:951
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:960
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:964
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:971
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:980
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:984
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:995
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1000
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1006
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1011
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1023
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1030
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1037
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1042
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1047
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1052
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1059
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1066
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1077
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1088
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1094
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1098
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1102
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1112
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1116
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1122
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1126
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1132
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1136
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1143
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1147
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1153
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1157
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1163
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1168
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1177
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1182
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1186
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1201
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1210
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1219
		{
			yyVAL.str = ""
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1223
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1236
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1248
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1253
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1263
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1268
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1278
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1282
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1289
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1293
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1298
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1313
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1319
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1324
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1331
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1338
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1342
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1346
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1350
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1361
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1368
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1372
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1378
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1382
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1386
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1390
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1394
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1398
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1402
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1407
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1411
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1423
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = Armscii8Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = ASCIIStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = Big5Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1442
		{
			yyVAL.str = UBinaryStr
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.str = Cp1250Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = Cp1251Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = Cp1256Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.str = Cp1257Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.str = Cp850Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1466
		{
			yyVAL.str = Cp852Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = Cp866Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = Cp932Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = Dec8Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = EucjpmsStr
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = EuckrStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = Gb18030Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = Gb2312Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = GbkStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = Geostd8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = GreekStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = HebrewStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = Hp8Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = Keybcs2Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = Koi8rStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1526
		{
			yyVAL.str = Koi8uStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = Latin1Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = Latin2Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = Latin5Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = Latin7Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = MacceStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = MacromanStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = SjisStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1558
		{
			yyVAL.str = Swe7Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.str = Tis620Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1566
		{
			yyVAL.str = Ucs2Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.str = UjisStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.str = Utf16Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Utf16leStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = Utf32Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Utf8Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = Utf8mb4Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1604
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1608
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1615
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1619
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1623
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1629
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1633
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1637
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1641
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1647
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1669
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1673
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1677
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1707
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1713
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1868
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1872
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1877
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 315:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1889
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1893
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1899
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1911
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1915
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1920
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1924
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1929
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1933
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1937
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1956
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1971
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1976
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1980
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1986
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1996
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2000
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2005
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2009
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2025
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2029
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2033
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2037
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2041
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = yyDollar[2].str
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2056
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2071
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2080
		{
			yyVAL.str = "key"
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2084
		{
			yyVAL.str = yyDollar[1].str
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = ""
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2109
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2113
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2119
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2125
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2129
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2135
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2139
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2145
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2151
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2155
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2159
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2163
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2172
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2178
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2184
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2190
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2196
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2200
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2204
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2208
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2212
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2217
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2221
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2225
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2230
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2238
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2243
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2247
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2253
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2257
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2261
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2267
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2277
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2281
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2285
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2289
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2293
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2297
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2301
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2305
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2309
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2313
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2317
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2321
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2325
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2329
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2333
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2337
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2341
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2345
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2349
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2353
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2357
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2361
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2365
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2369
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2373
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2377
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2381
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2385
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2390
		{
			yyVAL.str = ""
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2398
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2430
		{
			yyVAL.str = ""
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2445
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2449
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2454
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2458
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2462
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2466
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 451:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2474
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2480
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2488
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2494
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2498
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2502
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2506
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2510
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2514
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2518
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2522
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2526
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2530
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2534
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2538
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2542
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2546
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2550
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2554
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2558
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2562
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2566
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2570
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2574
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2578
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2582
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2588
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2598
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2602
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2606
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2610
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2614
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2618
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2622
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2626
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2630
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2636
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2650
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2657
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2674
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2681
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2693
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2703
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2724
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2738
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2763
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2784
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2788
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2797
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2805
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2814
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2821
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2829
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2833
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2842
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2857
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2862
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2871
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2875
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2881
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2885
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2890
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2894
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2899
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2903
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2909
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2913
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2917
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2921
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2925
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2929
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2933
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2937
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2941
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2945
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2949
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2953
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2957
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2961
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2965
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2969
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2973
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2977
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2981
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2985
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2989
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2993
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2998
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3002
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3006
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3013
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3028
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3032
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3039
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3046
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3055
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.str = ""
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3077
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3081
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3100
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3104
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3110
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3125
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3129
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3133
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3141
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3149
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3153
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3157
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3185
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3193
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3209
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3213
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3217
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3257
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3265
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3274
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3282
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3287
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3291
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3295
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3318
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3322
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3326
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3342
		{
			yyVAL.str = ""
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.str = "extended "
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3352
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3356
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3362
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3372
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3376
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3380
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3386
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3390
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3394
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3404
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3410
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3414
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3418
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3428
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3438
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3442
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3448
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3454
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3458
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3463
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3468
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3481
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3486
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3490
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3494
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3498
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3502
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3506
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = yyDollar[1].str
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3526
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3530
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3534
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3538
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3557
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3561
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3577
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3583
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3593
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3599
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3603
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3607
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3611
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3617
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3629
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3633
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3637
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3641
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3645
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3649
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3697
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3701
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3714
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3718
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3722
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3727
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3736
		{
			setAllowComments(yylex, true)
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3740
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			yyVAL.strs = nil
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3750
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3760
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3764
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = SQLCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3782
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3786
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3796
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[2].colIdent, Statement: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[2].colIdent, StatementIdentifier: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3810
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[2].colIdent, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3819
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3824
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3828
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3833
		{
			yyVAL.strs = nil
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3845
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3849
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.str = SQLCacheStr
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = DistinctStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = DistinctStr
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.str = StraightJoinHint
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3885
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3889
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3895
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3899
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3903
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3907
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3912
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3920
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3927
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3932
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3936
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3942
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3948
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3952
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3962
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3966
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3970
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3976
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3982
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3986
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3995
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4001
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4005
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4011
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4015
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4019
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4023
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4029
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4033
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4046
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4050
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4054
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4058
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4064
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 783:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4066
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4072
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4076
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4078
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4081
		{
			yyVAL.empty = struct{}{}
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.empty = struct{}{}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4086
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4094
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4101
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4107
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4111
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4115
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4121
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4127
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4131
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4135
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4139
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4145
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4149
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4159
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4163
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4179
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4184
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4188
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4194
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4198
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 814:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4204
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4208
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4212
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4216
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4221
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4225
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4229
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4233
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4239
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4243
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4277
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4281
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4285
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4295
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4299
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4303
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4307
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4311
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4315
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4319
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4323
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4327
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4331
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4335
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4341
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4345
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4349
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4353
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4357
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4361
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4365
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4369
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4373
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4377
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4381
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4385
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4389
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4395
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4403
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4407
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4411
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4415
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4419
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4423
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4427
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4431
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4435
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4439
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4443
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4447
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4451
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4455
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4459
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4463
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4467
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4475
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4479
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.str = ""
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4502
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4508
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4512
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4519
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4523
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4527
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4531
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4537
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4541
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4545
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4549
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4553
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4557
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4561
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4567
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4571
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4575
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4582
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4588
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4592
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4606
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4610
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4614
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4624
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4628
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4632
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4636
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4640
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4644
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4648
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4652
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4656
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4660
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4671
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4675
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4681
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4685
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4714
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4718
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4722
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4726
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4730
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4734
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4738
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4742
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4746
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4750
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4754
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4760
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4764
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4768
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4772
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4776
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4780
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4784
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4788
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4792
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4802
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4806
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4810
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4820
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4824
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4828
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4832
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4836
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4842
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4846
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4850
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4854
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4858
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4864
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 962:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4878
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4882
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4886
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4892
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4896
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4900
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4904
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4908
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4914
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4918
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4922
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4926
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4930
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4934
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4938
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4942
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4946
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4950
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4956
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4960
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4965
		{
			yyVAL.str = string("")
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4969
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4975
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4979
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4985
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5000
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5004
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5008
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5014
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5033
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5037
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5042
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5046
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5051
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5055
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5061
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5067
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5071
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5077
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5082
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5086
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5090
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5099
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5105
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5109
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5113
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5122
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5126
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5130
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5134
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5141
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5145
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5149
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5153
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5159
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5163
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5167
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5172
		{
			yyVAL.str = ""
		}
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5176
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5180
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5184
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5189
		{
			yyVAL.str = ""
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5193
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1033:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5199
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5203
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5208
		{
			yyVAL.str = ""
		}
	case 1036:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5212
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5217
		{
			yyVAL.str = "cascaded"
		}
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1040:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5230
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5234
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5240
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5246
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5252
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5261
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5265
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1047:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5270
		{
			yyVAL.str = ""
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5274
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5280
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5284
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5290
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5294
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5298
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5303
		{
			yyVAL.str = ""
		}
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5307
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5311
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5316
		{
			yyVAL.str = ""
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5320
		{
			yyVAL.str = " header"
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5325
		{
			yyVAL.str = ""
		}
	case 1060:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5329
		{
			yyVAL.str = " manifest on"
		}
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5333
		{
			yyVAL.str = " manifest off"
		}
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5338
		{
			yyVAL.str = ""
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5342
		{
			yyVAL.str = " overwrite on"
		}
	case 1064:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5346
		{
			yyVAL.str = " overwrite off"
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5352
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5357
		{
			yyVAL.str = ""
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5361
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5367
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5371
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5377
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5381
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1072:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5386
		{
			yyVAL.str = ""
		}
	case 1073:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5390
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5396
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5400
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5406
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1077:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5410
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5414
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5419
		{
			yyVAL.str = ""
		}
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5423
		{
			yyVAL.str = " optionally"
		}
	case 1081:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5436
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5440
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5444
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5448
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5452
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5458
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5462
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5466
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1089:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5470
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5479
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5485
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5489
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5495
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5499
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5505
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5520
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5524
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5530
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5536
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5540
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5546
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5550
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5554
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5558
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5562
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5570
		{
			yyVAL.str = "charset"
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5580
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5584
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5588
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5597
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5599
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5602
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5604
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5607
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5609
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5612
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5614
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5617
		{
			yyVAL.empty = struct{}{}
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5619
		{
			yyVAL.empty = struct{}{}
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5621
		{
			yyVAL.empty = struct{}{}
		}
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5625
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5630
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5634
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5641
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5645
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5651
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5655
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5668
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5672
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5678
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5682
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6160
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6169
		{
			decNesting(yylex)
		}
	case 1592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6174
		{
			skipToEnd(yylex)
		}
	case 1593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6179
		{
			skipToEnd(yylex)
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6183
		{
			skipToEnd(yylex)
		}
	case 1595:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6187
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
