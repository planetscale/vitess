// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const BEGIN = 57533
const START = 57534
const TRANSACTION = 57535
const COMMIT = 57536
const ROLLBACK = 57537
const SAVEPOINT = 57538
const RELEASE = 57539
const WORK = 57540
const BIT = 57541
const TINYINT = 57542
const SMALLINT = 57543
const MEDIUMINT = 57544
const INT = 57545
const INTEGER = 57546
const BIGINT = 57547
const INTNUM = 57548
const REAL = 57549
const DOUBLE = 57550
const FLOAT_TYPE = 57551
const DECIMAL = 57552
const NUMERIC = 57553
const TIME = 57554
const TIMESTAMP = 57555
const DATETIME = 57556
const YEAR = 57557
const CHAR = 57558
const VARCHAR = 57559
const BOOL = 57560
const CHARACTER = 57561
const VARBINARY = 57562
const NCHAR = 57563
const TEXT = 57564
const TINYTEXT = 57565
const MEDIUMTEXT = 57566
const LONGTEXT = 57567
const BLOB = 57568
const TINYBLOB = 57569
const MEDIUMBLOB = 57570
const LONGBLOB = 57571
const JSON = 57572
const ENUM = 57573
const GEOMETRY = 57574
const POINT = 57575
const LINESTRING = 57576
const POLYGON = 57577
const GEOMETRYCOLLECTION = 57578
const MULTIPOINT = 57579
const MULTILINESTRING = 57580
const MULTIPOLYGON = 57581
const NULLX = 57582
const AUTO_INCREMENT = 57583
const APPROXNUM = 57584
const SIGNED = 57585
const UNSIGNED = 57586
const ZEROFILL = 57587
const COLLATION = 57588
const DATABASES = 57589
const SCHEMAS = 57590
const TABLES = 57591
const VITESS_METADATA = 57592
const VSCHEMA = 57593
const FULL = 57594
const PROCESSLIST = 57595
const COLUMNS = 57596
const FIELDS = 57597
const ENGINES = 57598
const PLUGINS = 57599
const EXTENDED = 57600
const KEYSPACES = 57601
const VITESS_KEYSPACES = 57602
const VITESS_SHARDS = 57603
const VITESS_TABLETS = 57604
const CODE = 57605
const PRIVILEGES = 57606
const FUNCTION = 57607
const NAMES = 57608
const CHARSET = 57609
const GLOBAL = 57610
const SESSION = 57611
const ISOLATION = 57612
const LEVEL = 57613
const READ = 57614
const WRITE = 57615
const ONLY = 57616
const REPEATABLE = 57617
const COMMITTED = 57618
const UNCOMMITTED = 57619
const SERIALIZABLE = 57620
const CURRENT_TIMESTAMP = 57621
const DATABASE = 57622
const CURRENT_DATE = 57623
const CURRENT_TIME = 57624
const LOCALTIME = 57625
const LOCALTIMESTAMP = 57626
const CURRENT_USER = 57627
const UTC_DATE = 57628
const UTC_TIME = 57629
const UTC_TIMESTAMP = 57630
const REPLACE = 57631
const CONVERT = 57632
const CAST = 57633
const SUBSTR = 57634
const SUBSTRING = 57635
const GROUP_CONCAT = 57636
const SEPARATOR = 57637
const TIMESTAMPADD = 57638
const TIMESTAMPDIFF = 57639
const MATCH = 57640
const AGAINST = 57641
const BOOLEAN = 57642
const LANGUAGE = 57643
const WITH = 57644
const QUERY = 57645
const EXPANSION = 57646
const UNUSED = 57647
const ARRAY = 57648
const CUME_DIST = 57649
const DESCRIPTION = 57650
const DENSE_RANK = 57651
const EMPTY = 57652
const EXCEPT = 57653
const FIRST_VALUE = 57654
const GROUPING = 57655
const GROUPS = 57656
const JSON_TABLE = 57657
const LAG = 57658
const LAST_VALUE = 57659
const LATERAL = 57660
const LEAD = 57661
const MEMBER = 57662
const NTH_VALUE = 57663
const NTILE = 57664
const OF = 57665
const OVER = 57666
const PERCENT_RANK = 57667
const RANK = 57668
const RECURSIVE = 57669
const ROW_NUMBER = 57670
const SYSTEM = 57671
const WINDOW = 57672
const ACTIVE = 57673
const ADMIN = 57674
const BUCKETS = 57675
const CLONE = 57676
const COMPONENT = 57677
const DEFINITION = 57678
const ENFORCED = 57679
const EXCLUDE = 57680
const FOLLOWING = 57681
const GEOMCOLLECTION = 57682
const GET_MASTER_PUBLIC_KEY = 57683
const HISTOGRAM = 57684
const HISTORY = 57685
const INACTIVE = 57686
const INVISIBLE = 57687
const LOCKED = 57688
const MASTER_COMPRESSION_ALGORITHMS = 57689
const MASTER_PUBLIC_KEY_PATH = 57690
const MASTER_TLS_CIPHERSUITES = 57691
const MASTER_ZSTD_COMPRESSION_LEVEL = 57692
const NESTED = 57693
const NETWORK_NAMESPACE = 57694
const NOWAIT = 57695
const NULLS = 57696
const OJ = 57697
const OLD = 57698
const OPTIONAL = 57699
const ORDINALITY = 57700
const ORGANIZATION = 57701
const OTHERS = 57702
const PATH = 57703
const PERSIST = 57704
const PERSIST_ONLY = 57705
const PRECEDING = 57706
const PRIVILEGE_CHECKS_USER = 57707
const PROCESS = 57708
const RANDOM = 57709
const REFERENCE = 57710
const REQUIRE_ROW_FORMAT = 57711
const RESOURCE = 57712
const RESPECT = 57713
const RESTART = 57714
const RETAIN = 57715
const REUSE = 57716
const ROLE = 57717
const SECONDARY = 57718
const SECONDARY_ENGINE = 57719
const SECONDARY_LOAD = 57720
const SECONDARY_UNLOAD = 57721
const SKIP = 57722
const SRID = 57723
const THREAD_PRIORITY = 57724
const TIES = 57725
const UNBOUNDED = 57726
const VCPU = 57727
const VISIBLE = 57728
const FORMAT = 57729
const TREE = 57730
const VITESS = 57731
const TRADITIONAL = 57732
const LOCAL = 57733
const LOW_PRIORITY = 57734

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 809,
	-2, 87,
	-1, 43,
	136, 111,
	236, 111,
	-2, 105,
	-1, 51,
	34, 356,
	155, 356,
	167, 356,
	195, 370,
	196, 370,
	-2, 358,
	-1, 56,
	157, 380,
	-2, 378,
	-1, 80,
	55, 423,
	-2, 431,
	-1, 104,
	136, 111,
	236, 111,
	-2, 106,
	-1, 457,
	143, 820,
	-2, 816,
	-1, 458,
	143, 821,
	-2, 817,
	-1, 475,
	55, 424,
	-2, 436,
	-1, 476,
	55, 425,
	-2, 437,
	-1, 496,
	111, 1111,
	-2, 80,
	-1, 497,
	111, 1010,
	-2, 81,
	-1, 502,
	111, 966,
	-2, 780,
	-1, 504,
	111, 1051,
	-2, 782,
	-1, 675,
	136, 111,
	236, 111,
	-2, 276,
	-1, 1069,
	143, 823,
	-2, 819,
	-1, 1161,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1519,
	5, 677,
	18, 677,
	20, 677,
	32, 677,
	82, 677,
	-2, 462,
	-1, 1717,
	45, 751,
	-2, 749,
}

const yyPrivate = 57344

const yyLast = 19553

var yyAct = [...]int{
	457, 1782, 1562, 1758, 1717, 1436, 1795, 1356, 401, 1668,
	1645, 1499, 1324, 416, 1206, 1183, 430, 79, 3, 1357,
	1496, 792, 1500, 1226, 1434, 1182, 1179, 843, 836, 1221,
	1414, 956, 1108, 1343, 468, 1415, 1511, 688, 984, 1484,
	1158, 501, 1456, 1228, 1056, 1283, 1063, 118, 998, 880,
	130, 1407, 370, 130, 873, 846, 1147, 666, 382, 77,
	130, 727, 1140, 841, 1110, 477, 729, 633, 863, 31,
	1089, 866, 1033, 830, 636, 658, 403, 639, 1229, 864,
	462, 1123, 1217, 640, 966, 392, 655, 877, 382, 656,
	632, 382, 130, 382, 853, 1163, 75, 1001, 870, 879,
	111, 117, 399, 805, 1019, 105, 74, 946, 106, 1105,
	1106, 806, 1768, 1322, 130, 1714, 130, 8, 119, 120,
	121, 7, 6, 130, 1670, 681, 1545, 80, 130, 1631,
	1233, 1801, 1755, 1794, 389, 431, 32, 76, 483, 487,
	1754, 1736, 1784, 1563, 1735, 463, 1473, 1592, 648, 1429,
	1323, 1231, 33, 1428, 498, 68, 37, 38, 1526, 1527,
	1525, 97, 82, 83, 84, 85, 86, 87, 32, 881,
	1387, 882, 361, 1386, 1173, 495, 1388, 461, 1174, 1175,
	654, 362, 460, 442, 698, 448, 449, 446, 447, 359,
	445, 444, 443, 696, 707, 708, 390, 391, 725, 1399,
	450, 451, 102, 123, 124, 125, 1200, 1438, 1624, 1738,
	650, 464, 1207, 649, 102, 94, 1583, 1581, 119, 120,
	121, 98, 1230, 356, 99, 100, 67, 652, 380, 1107,
	378, 1018, 368, 1704, 754, 753, 763, 764, 756, 757,
	758, 759, 760, 761, 762, 755, 384, 1554, 765, 102,
	113, 709, 115, 1425, 1555, 710, 707, 708, 119, 120,
	121, 1238, 1020, 1021, 1022, 1789, 949, 1066, 704, 699,
	723, 347, 676, 724, 1240, 1439, 1241, 1242, 697, 973,
	702, 703, 700, 701, 1141, 1441, 1262, 1440, 970, 716,
	972, 718, 668, 1642, 1802, 1780, 660, 1799, 349, 350,
	351, 661, 366, 367, 373, 660, 1325, 1327, 363, 365,
	374, 352, 353, 376, 375, 721, 355, 354, 1457, 348,
	358, 371, 1769, 715, 717, 660, 971, 651, 974, 635,
	680, 645, 489, 1442, 978, 730, 1424, 1483, 1482, 1481,
	646, 346, 122, 112, 777, 778, 101, 130, 1685, 1261,
	1721, 668, 1260, 1613, 1524, 1302, 485, 1348, 101, 1459,
	1312, 1291, 711, 714, 116, 1299, 1169, 857, 1427, 790,
	674, 382, 685, 1180, 765, 755, 1232, 1544, 765, 1383,
	1119, 1124, 1125, 1015, 999, 382, 382, 691, 692, 693,
	694, 695, 1734, 101, 1326, 745, 119, 120, 121, 668,
	679, 1739, 1696, 957, 736, 744, 742, 726, 1461, 1002,
	1465, 1207, 1460, 1509, 1458, 690, 1239, 713, 667, 1463,
	393, 90, 745, 665, 662, 950, 663, 664, 1462, 660,
	1475, 1705, 712, 657, 661, 1797, 720, 883, 1798, 104,
	1796, 1464, 1466, 372, 671, 740, 672, 952, 722, 673,
	1536, 1750, 69, 119, 120, 121, 743, 744, 742, 1090,
	91, 130, 754, 753, 763, 764, 756, 757, 758, 759,
	760, 761, 762, 755, 745, 775, 765, 667, 1397, 1686,
	1684, 1724, 834, 742, 850, 705, 382, 777, 778, 130,
	833, 130, 130, 1000, 382, 1197, 1785, 777, 778, 745,
	382, 793, 1198, 1090, 739, 1309, 728, 1630, 737, 738,
	756, 757, 758, 759, 760, 761, 762, 755, 1003, 1284,
	765, 689, 32, 1786, 1629, 667, 682, 683, 743, 744,
	742, 862, 831, 774, 776, 1775, 758, 759, 760, 761,
	762, 755, 67, 847, 765, 1550, 745, 808, 810, 812,
	814, 816, 818, 819, 1036, 809, 811, 675, 815, 817,
	498, 820, 1776, 1803, 789, 1276, 1277, 1278, 794, 795,
	796, 797, 798, 799, 800, 801, 644, 804, 807, 807,
	807, 813, 807, 807, 813, 807, 821, 822, 823, 824,
	825, 826, 827, 835, 828, 749, 1486, 752, 1411, 1410,
	32, 1236, 1788, 766, 767, 768, 769, 770, 771, 772,
	1787, 750, 751, 748, 754, 753, 763, 764, 756, 757,
	758, 759, 760, 761, 762, 755, 868, 1040, 765, 1804,
	1777, 1766, 130, 1412, 1748, 1658, 942, 1627, 743, 744,
	742, 1038, 1039, 1037, 1487, 130, 1477, 953, 954, 1601,
	1557, 743, 744, 742, 76, 1488, 745, 1420, 942, 878,
	1408, 1273, 1121, 1028, 1030, 1031, 967, 967, 988, 745,
	1029, 382, 472, 647, 1691, 130, 488, 119, 120, 121,
	130, 1058, 1690, 130, 983, 1641, 130, 763, 764, 756,
	757, 758, 759, 760, 761, 762, 755, 1423, 130, 765,
	130, 1297, 119, 120, 121, 78, 1432, 1195, 1298, 1296,
	1561, 1770, 382, 382, 130, 382, 382, 130, 382, 382,
	1508, 963, 964, 965, 1120, 987, 1497, 986, 743, 744,
	742, 472, 969, 1608, 990, 1508, 992, 941, 994, 995,
	996, 997, 845, 743, 744, 742, 745, 493, 119, 120,
	121, 968, 746, 741, 958, 1004, 119, 120, 121, 959,
	1390, 745, 490, 491, 1377, 1034, 1057, 119, 120, 121,
	1132, 1248, 1164, 1005, 1006, 1059, 1008, 1009, 979, 1011,
	1012, 650, 1561, 1732, 649, 743, 744, 742, 393, 382,
	419, 418, 421, 422, 423, 424, 1695, 803, 1540, 420,
	425, 1561, 1728, 745, 1561, 1722, 728, 1078, 1081, 1561,
	472, 1600, 472, 1091, 1611, 472, 1133, 1013, 1561, 1560,
	1144, 1073, 382, 382, 458, 1035, 839, 842, 1165, 1068,
	1542, 1541, 1069, 130, 1538, 1539, 1538, 1537, 1132, 472,
	945, 1433, 1144, 472, 1143, 382, 793, 728, 728, 33,
	728, 728, 130, 728, 728, 382, 1391, 1067, 1172, 130,
	472, 130, 741, 472, 945, 944, 890, 889, 1114, 130,
	130, 1099, 1100, 1344, 131, 1344, 382, 131, 1126, 382,
	1060, 1061, 383, 1315, 131, 1132, 1159, 1314, 1070, 1166,
	382, 382, 1132, 1164, 1144, 1122, 1138, 1168, 1103, 1069,
	754, 753, 763, 764, 756, 757, 758, 759, 760, 761,
	762, 755, 383, 1134, 765, 383, 131, 383, 977, 1208,
	1209, 1210, 33, 67, 1067, 754, 753, 763, 764, 756,
	757, 758, 759, 760, 761, 762, 755, 33, 131, 765,
	131, 1144, 498, 1508, 1632, 498, 382, 131, 465, 1136,
	875, 653, 131, 1729, 67, 1647, 1184, 1247, 1190, 1640,
	1619, 382, 1351, 1170, 967, 967, 967, 1167, 1162, 1675,
	1223, 130, 130, 130, 130, 130, 1171, 1189, 130, 130,
	1188, 1187, 130, 382, 1352, 947, 1222, 1246, 1556, 1251,
	1165, 1633, 1634, 1635, 1437, 1218, 67, 1212, 1211, 943,
	130, 130, 130, 960, 1160, 1201, 92, 1202, 1203, 1204,
	1205, 67, 1636, 1417, 130, 643, 1224, 130, 382, 1589,
	1219, 1220, 67, 1213, 1214, 1215, 1216, 1648, 1235, 1234,
	1595, 1233, 1245, 1791, 1224, 1249, 1267, 1783, 1250, 1416,
	1512, 1513, 1271, 1531, 1266, 1515, 1497, 989, 1252, 1253,
	1254, 1166, 1430, 1016, 1034, 981, 1637, 1638, 1518, 1164,
	1368, 1772, 1074, 1075, 1366, 1369, 1080, 1083, 1084, 1367,
	1517, 754, 753, 763, 764, 756, 757, 758, 759, 760,
	761, 762, 755, 1417, 1365, 765, 1149, 1152, 1153, 1154,
	1150, 1098, 1151, 1155, 1101, 1102, 1512, 1513, 1023, 1024,
	1025, 1026, 1364, 1370, 130, 1153, 1154, 1753, 1293, 1489,
	1279, 1333, 130, 844, 1035, 1612, 1342, 1341, 728, 1744,
	1741, 754, 753, 763, 764, 756, 757, 758, 759, 760,
	761, 762, 755, 1774, 130, 765, 96, 1757, 1759, 1765,
	463, 1764, 1331, 1330, 1718, 130, 130, 130, 130, 130,
	1332, 1292, 1358, 1076, 1077, 1337, 1716, 130, 1353, 1308,
	976, 130, 459, 1421, 130, 130, 1086, 837, 130, 130,
	130, 131, 1416, 1349, 1346, 831, 1329, 1321, 1375, 838,
	1087, 1389, 114, 382, 1403, 126, 1336, 955, 1345, 888,
	1149, 1152, 1153, 1154, 1150, 383, 1151, 1155, 1392, 687,
	1347, 1396, 108, 1290, 1378, 478, 464, 1726, 1380, 383,
	383, 986, 1371, 1359, 1725, 1673, 1362, 1400, 1401, 479,
	961, 962, 1384, 1381, 1376, 1360, 1361, 1606, 1363, 1124,
	1125, 1243, 1117, 1402, 382, 1404, 1405, 1406, 980, 1692,
	1178, 1157, 848, 849, 481, 1328, 480, 1431, 469, 1184,
	963, 964, 382, 466, 467, 1394, 478, 1340, 1779, 1778,
	1762, 1745, 1419, 1605, 1409, 1339, 382, 470, 78, 868,
	479, 1418, 1604, 1492, 1344, 1303, 1354, 1355, 1793, 1792,
	868, 868, 868, 868, 868, 131, 1300, 858, 851, 1793,
	1719, 1625, 382, 475, 476, 481, 1160, 480, 1057, 868,
	1225, 1118, 465, 868, 76, 81, 73, 1, 357, 1104,
	383, 829, 369, 131, 1781, 131, 131, 1564, 383, 1444,
	1454, 1445, 1455, 1644, 383, 1244, 1446, 1443, 1413, 382,
	1227, 659, 1288, 1289, 1474, 1181, 89, 1452, 630, 130,
	88, 1468, 1467, 719, 1683, 1398, 1199, 1623, 1530, 382,
	1395, 1068, 1723, 1306, 1069, 382, 382, 896, 1453, 1498,
	1358, 894, 895, 893, 898, 897, 892, 1017, 379, 1501,
	1156, 884, 852, 1543, 1196, 1014, 364, 706, 130, 1478,
	360, 773, 1338, 1385, 1495, 499, 492, 1639, 1503, 95,
	1507, 1763, 382, 1742, 382, 1506, 1740, 1715, 1669, 1516,
	1743, 728, 1713, 1773, 1535, 1756, 1116, 840, 1603, 1529,
	1520, 1491, 1522, 1307, 1523, 1453, 802, 1528, 1521, 1088,
	867, 402, 1551, 1027, 417, 130, 414, 1533, 1534, 415,
	1127, 130, 1350, 747, 400, 394, 859, 1148, 1565, 382,
	382, 382, 1146, 130, 1145, 871, 1547, 1310, 1548, 1549,
	1546, 1514, 1510, 865, 1131, 1426, 131, 1559, 1184, 948,
	1184, 1237, 1553, 642, 474, 93, 1085, 1703, 1591, 131,
	473, 59, 36, 386, 1767, 1749, 732, 1334, 1335, 842,
	482, 30, 1570, 1571, 29, 28, 23, 22, 1502, 1574,
	32, 1579, 21, 20, 19, 383, 25, 18, 17, 131,
	16, 107, 1602, 103, 131, 46, 43, 131, 41, 109,
	131, 110, 44, 868, 40, 677, 27, 1358, 26, 1607,
	15, 14, 131, 13, 131, 12, 11, 10, 1616, 382,
	9, 5, 4, 735, 24, 1615, 383, 383, 131, 383,
	383, 131, 383, 383, 1392, 791, 2, 0, 1621, 0,
	0, 0, 1626, 0, 1628, 1622, 0, 0, 0, 1447,
	0, 0, 382, 0, 382, 1576, 1577, 0, 1578, 0,
	0, 1580, 0, 1582, 0, 0, 0, 0, 1651, 754,
	753, 763, 764, 756, 757, 758, 759, 760, 761, 762,
	755, 0, 1650, 765, 0, 1184, 0, 382, 382, 382,
	130, 382, 0, 1649, 0, 0, 0, 0, 0, 1590,
	0, 0, 382, 383, 382, 0, 1667, 1596, 1597, 1598,
	382, 1661, 1663, 1664, 1678, 1501, 1657, 1672, 1676, 1501,
	1646, 1674, 1665, 0, 0, 0, 0, 0, 0, 1687,
	0, 382, 0, 130, 1681, 0, 383, 383, 382, 130,
	1680, 0, 0, 1688, 0, 1689, 1682, 131, 429, 0,
	0, 0, 0, 0, 0, 1693, 1476, 0, 0, 383,
	0, 0, 1697, 0, 0, 0, 131, 0, 1712, 383,
	0, 0, 0, 131, 0, 131, 0, 1720, 0, 0,
	0, 0, 1501, 131, 131, 0, 382, 382, 0, 0,
	383, 1493, 0, 383, 0, 0, 1730, 0, 129, 0,
	1727, 377, 1731, 0, 383, 383, 0, 0, 129, 0,
	0, 0, 382, 1737, 0, 0, 0, 1746, 1358, 0,
	382, 0, 0, 0, 0, 0, 0, 0, 1752, 0,
	0, 486, 486, 1760, 1502, 1761, 32, 0, 1502, 0,
	129, 0, 0, 0, 1751, 1771, 0, 1094, 0, 0,
	0, 0, 1646, 1184, 0, 0, 0, 0, 0, 0,
	383, 0, 129, 0, 129, 0, 0, 0, 0, 0,
	0, 129, 0, 1790, 0, 383, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 131, 131, 131, 131, 131,
	1800, 0, 131, 131, 0, 1594, 131, 383, 0, 0,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 131, 131, 0, 32, 428,
	0, 0, 0, 0, 1593, 0, 0, 471, 131, 0,
	0, 131, 383, 0, 0, 0, 754, 753, 763, 764,
	756, 757, 758, 759, 760, 761, 762, 755, 0, 393,
	765, 0, 0, 0, 0, 0, 1617, 0, 0, 1618,
	0, 0, 1620, 0, 0, 0, 0, 0, 0, 0,
	0, 33, 34, 35, 68, 37, 38, 381, 0, 0,
	832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 72, 0, 0, 0, 0, 39, 65, 66, 0,
	63, 0, 0, 0, 0, 0, 64, 500, 0, 0,
	634, 0, 641, 0, 0, 0, 1588, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	128, 0, 0, 0, 0, 52, 0, 0, 0, 0,
	385, 0, 0, 0, 0, 67, 0, 1587, 131, 0,
	0, 1671, 393, 0, 0, 0, 0, 0, 0, 131,
	131, 131, 131, 131, 0, 0, 0, 0, 0, 0,
	0, 131, 638, 0, 0, 131, 0, 0, 131, 131,
	1586, 0, 131, 131, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 129, 670, 383, 0, 0,
	0, 0, 0, 678, 0, 0, 0, 0, 684, 0,
	0, 42, 45, 48, 47, 50, 0, 62, 754, 753,
	763, 764, 756, 757, 758, 759, 760, 761, 762, 755,
	0, 0, 765, 0, 0, 0, 0, 0, 0, 0,
	51, 71, 70, 0, 0, 60, 61, 49, 383, 754,
	753, 763, 764, 756, 757, 758, 759, 760, 761, 762,
	755, 0, 0, 765, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 53, 54, 0, 55, 56, 57, 58,
	383, 0, 754, 753, 763, 764, 756, 757, 758, 759,
	760, 761, 762, 755, 0, 0, 765, 0, 0, 0,
	0, 0, 0, 0, 1285, 0, 383, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 486, 754, 753, 763, 764, 756, 757,
	758, 759, 760, 761, 762, 755, 0, 129, 765, 129,
	874, 0, 0, 383, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 396, 383, 0, 0, 0, 0, 0, 383,
	383, 69, 753, 763, 764, 756, 757, 758, 759, 760,
	761, 762, 755, 0, 0, 765, 0, 0, 0, 0,
	500, 0, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 731, 733, 383, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 0, 0, 0, 131, 0, 0, 0, 0,
	0, 0, 0, 383, 383, 383, 0, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 855, 0, 0, 0, 0,
	0, 0, 0, 500, 0, 0, 0, 0, 0, 885,
	0, 0, 0, 129, 0, 0, 0, 0, 129, 0,
	0, 129, 0, 0, 985, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 129, 0, 129, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 129, 0, 0, 0, 861,
	0, 0, 872, 0, 0, 0, 383, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 383, 383, 131, 383, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 383, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 486, 985,
	0, 0, 0, 486, 486, 0, 0, 486, 486, 486,
	0, 0, 0, 1093, 0, 383, 0, 131, 0, 0,
	0, 0, 383, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 486, 486, 486, 486, 486, 0, 0, 0,
	0, 1112, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 0, 0, 0, 985, 129, 0, 129,
	383, 383, 891, 0, 0, 0, 0, 129, 129, 0,
	0, 0, 0, 0, 0, 951, 0, 0, 0, 0,
	0, 500, 500, 0, 500, 500, 383, 500, 500, 1071,
	1072, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 975, 0, 0, 0, 0,
	872, 0, 0, 982, 0, 0, 0, 779, 780, 781,
	782, 783, 784, 785, 786, 787, 788, 0, 991, 0,
	993, 0, 1115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1007, 0, 0, 1010, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1062, 0,
	500, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	129, 129, 129, 129, 1092, 0, 129, 129, 0, 0,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1096, 1097, 0, 0, 0, 0, 0, 1268, 1269,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 1128, 129, 0, 0, 0, 0,
	0, 0, 0, 0, 855, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	634, 0, 0, 486, 486, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1135, 0, 486, 0, 0, 0, 0, 1139,
	0, 1142, 0, 0, 0, 0, 0, 0, 0, 0,
	1161, 0, 129, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 641, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	641, 486, 129, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1093, 129, 129, 129, 129, 129, 0, 0,
	0, 0, 500, 0, 0, 1372, 0, 1286, 0, 129,
	0, 1287, 129, 129, 0, 0, 129, 1382, 985, 0,
	0, 0, 1294, 1295, 0, 0, 0, 0, 1301, 0,
	0, 1304, 1305, 0, 0, 0, 0, 1275, 0, 1311,
	0, 0, 0, 1313, 0, 0, 1316, 1317, 1318, 1319,
	1320, 1255, 1256, 1257, 1258, 1259, 0, 0, 1263, 1264,
	0, 0, 1265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 1373, 1374, 0, 0,
	1032, 0, 0, 1041, 1042, 1043, 1044, 1045, 1046, 1047,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 985, 0, 1092, 0, 0, 0, 0, 0, 0,
	1095, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1093, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1450, 1451, 0, 0,
	0, 0, 0, 0, 0, 1379, 0, 0, 0, 0,
	0, 0, 0, 1422, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1435, 0, 129, 0, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 500, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1504, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1519, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1485, 0,
	0, 0, 0, 0, 0, 0, 0, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 0,
	0, 1092, 0, 0, 1505, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1573, 1280, 1281, 1282, 1575, 0, 0, 0, 0, 0,
	0, 500, 0, 500, 0, 1584, 1585, 0, 0, 1490,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1599, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1112, 0,
	1609, 1610, 0, 0, 1614, 0, 0, 0, 1566, 1567,
	1568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 0, 0, 0,
	0, 1558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1662, 0, 0, 0, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1643, 0, 500, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1699, 1700, 1701, 1702, 0, 1706, 0, 1707, 1708, 1709,
	0, 1710, 1711, 0, 0, 0, 1435, 1435, 1435, 0,
	1666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1677, 0, 1679, 0, 0, 0, 0, 0, 1435,
	0, 0, 0, 0, 0, 0, 0, 1448, 1449, 0,
	0, 1733, 0, 0, 0, 0, 0, 0, 0, 0,
	1435, 0, 1469, 1470, 0, 1471, 1472, 1435, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1479, 1480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 500, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 1698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1092,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 1435,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 614,
	602, 0, 0, 555, 617, 528, 545, 626, 546, 549,
	587, 512, 568, 243, 543, 0, 532, 508, 539, 509,
	530, 557, 171, 561, 527, 604, 571, 616, 207, 0,
	533, 255, 589, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 623, 210, 578,
	0, 296, 229, 0, 0, 0, 559, 606, 566, 598,
	554, 588, 517, 577, 618, 544, 585, 619, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 1185, 1186, 0, 0, 0, 0, 0, 155, 0,
	582, 613, 541, 584, 586, 629, 507, 579, 0, 510,
	513, 625, 609, 536, 537, 1393, 0, 0, 0, 0,
	0, 0, 558, 567, 595, 552, 0, 0, 0, 1652,
	1653, 1654, 1655, 1656, 534, 0, 576, 1659, 1660, 0,
	514, 511, 0, 0, 0, 0, 556, 0, 0, 0,
	516, 0, 535, 596, 0, 505, 183, 600, 608, 553,
	333, 612, 551, 550, 615, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 605,
	531, 540, 162, 538, 276, 252, 322, 575, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 526, 601,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 593, 628, 251, 277, 157, 324, 295,
	521, 525, 519, 520, 569, 570, 522, 620, 621, 622,
	597, 515, 0, 523, 524, 0, 603, 610, 611, 574,
	132, 143, 209, 624, 270, 179, 327, 506, 518, 167,
	529, 0, 0, 542, 547, 548, 560, 562, 563, 564,
	565, 573, 580, 581, 583, 590, 591, 592, 594, 599,
	607, 627, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 0, 216, 572, 614, 602, 0, 0, 555, 617,
	528, 545, 626, 546, 549, 587, 512, 568, 243, 543,
	0, 532, 508, 539, 509, 530, 557, 171, 561, 527,
	604, 571, 616, 207, 0, 533, 255, 589, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 623, 210, 578, 0, 296, 229, 0, 0,
	0, 559, 606, 566, 598, 554, 588, 517, 577, 618,
	544, 585, 619, 198, 159, 136, 240, 297, 178, 0,
	0, 0, 119, 120, 121, 0, 1185, 1186, 0, 0,
	0, 0, 0, 155, 0, 582, 613, 541, 584, 586,
	629, 507, 579, 0, 510, 513, 625, 609, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 558, 567, 595,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 576, 0, 0, 0, 514, 511, 0, 0, 0,
	0, 556, 0, 0, 0, 516, 0, 535, 596, 0,
	505, 183, 600, 608, 553, 333, 612, 551, 550, 615,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 605, 531, 540, 162, 538, 276,
	252, 322, 575, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 148, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 526, 601, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 234, 149, 193, 294, 204, 212, 593, 628,
	251, 277, 157, 324, 295, 521, 525, 519, 520, 569,
	570, 522, 620, 621, 622, 597, 515, 0, 523, 524,
	0, 603, 610, 611, 574, 132, 143, 209, 624, 270,
	179, 327, 506, 518, 167, 529, 0, 0, 542, 547,
	548, 560, 562, 563, 564, 565, 573, 580, 581, 583,
	590, 591, 592, 594, 599, 607, 627, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 0, 216, 572, 614,
	602, 0, 0, 555, 617, 528, 545, 626, 546, 549,
	587, 512, 568, 243, 543, 0, 532, 508, 539, 509,
	530, 557, 171, 561, 527, 604, 571, 616, 207, 0,
	533, 255, 589, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 623, 210, 578,
	0, 296, 229, 0, 0, 0, 559, 606, 566, 598,
	554, 588, 517, 577, 618, 544, 585, 619, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	582, 613, 541, 584, 586, 629, 507, 579, 0, 510,
	513, 625, 609, 536, 537, 0, 0, 0, 0, 0,
	0, 0, 558, 567, 595, 552, 0, 0, 0, 0,
	0, 0, 1494, 0, 534, 0, 576, 0, 0, 0,
	514, 511, 0, 0, 0, 0, 556, 0, 0, 0,
	516, 0, 535, 596, 0, 505, 183, 600, 608, 553,
	333, 612, 551, 550, 615, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 605,
	531, 540, 162, 538, 276, 252, 322, 575, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 526, 601,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 593, 628, 251, 277, 157, 324, 295,
	521, 525, 519, 520, 569, 570, 522, 620, 621, 622,
	597, 515, 0, 523, 524, 0, 603, 610, 611, 574,
	132, 143, 209, 624, 270, 179, 327, 506, 518, 167,
	529, 0, 0, 542, 547, 548, 560, 562, 563, 564,
	565, 573, 580, 581, 583, 590, 591, 592, 594, 599,
	607, 627, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 0, 216, 572, 614, 602, 0, 0, 555, 617,
	528, 545, 626, 546, 549, 587, 512, 568, 243, 543,
	0, 532, 508, 539, 509, 530, 557, 171, 561, 527,
	604, 571, 616, 207, 0, 533, 255, 589, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 623, 210, 578, 0, 296, 229, 0, 0,
	0, 559, 606, 566, 598, 554, 588, 517, 577, 618,
	544, 585, 619, 198, 159, 136, 240, 297, 178, 67,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 582, 613, 541, 584, 586,
	629, 507, 579, 0, 510, 513, 625, 609, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 558, 567, 595,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 576, 0, 0, 0, 514, 511, 0, 0, 0,
	0, 556, 0, 0, 0, 516, 0, 535, 596, 0,
	505, 183, 600, 608, 553, 333, 612, 551, 550, 615,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 605, 531, 540, 162, 538, 276,
	252, 322, 575, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 148, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 526, 601, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 234, 149, 193, 294, 204, 212, 593, 628,
	251, 277, 157, 324, 295, 521, 525, 519, 520, 569,
	570, 522, 620, 621, 622, 597, 515, 0, 523, 524,
	0, 603, 610, 611, 574, 132, 143, 209, 624, 270,
	179, 327, 506, 518, 167, 529, 0, 0, 542, 547,
	548, 560, 562, 563, 564, 565, 573, 580, 581, 583,
	590, 591, 592, 594, 599, 607, 627, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 0, 216, 572, 614,
	602, 0, 0, 555, 617, 528, 545, 626, 546, 549,
	587, 512, 568, 243, 543, 0, 532, 508, 539, 509,
	530, 557, 171, 561, 527, 604, 571, 616, 207, 0,
	533, 255, 589, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 623, 210, 578,
	0, 296, 229, 0, 0, 0, 559, 606, 566, 598,
	554, 588, 517, 577, 618, 544, 585, 619, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	582, 613, 541, 584, 586, 629, 507, 579, 0, 510,
	513, 625, 609, 536, 537, 0, 0, 0, 0, 0,
	0, 0, 558, 567, 595, 552, 0, 0, 0, 0,
	0, 0, 1383, 0, 534, 0, 576, 0, 0, 0,
	514, 511, 0, 0, 0, 0, 556, 0, 0, 0,
	516, 0, 535, 596, 0, 505, 183, 600, 608, 553,
	333, 612, 551, 550, 615, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 605,
	531, 540, 162, 538, 276, 252, 322, 575, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 526, 601,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 593, 628, 251, 277, 157, 324, 295,
	521, 525, 519, 520, 569, 570, 522, 620, 621, 622,
	597, 515, 0, 523, 524, 0, 603, 610, 611, 574,
	132, 143, 209, 624, 270, 179, 327, 506, 518, 167,
	529, 0, 0, 542, 547, 548, 560, 562, 563, 564,
	565, 573, 580, 581, 583, 590, 591, 592, 594, 599,
	607, 627, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 0, 216, 572, 614, 602, 0, 0, 555, 617,
	528, 545, 626, 546, 549, 587, 512, 568, 243, 543,
	0, 532, 508, 539, 509, 530, 557, 171, 561, 527,
	604, 571, 616, 207, 0, 533, 255, 589, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 623, 210, 578, 0, 296, 229, 0, 0,
	0, 559, 606, 566, 598, 554, 588, 517, 577, 618,
	544, 585, 619, 198, 159, 136, 240, 297, 178, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 582, 613, 541, 584, 586,
	629, 507, 579, 0, 510, 513, 625, 609, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 558, 567, 595,
	552, 0, 0, 0, 0, 0, 0, 1137, 0, 534,
	0, 576, 0, 0, 0, 514, 511, 0, 0, 0,
	0, 556, 0, 0, 0, 516, 0, 535, 596, 0,
	505, 183, 600, 608, 553, 333, 612, 551, 550, 615,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 605, 531, 540, 162, 538, 276,
	252, 322, 575, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 148, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 526, 601, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 234, 149, 193, 294, 204, 212, 593, 628,
	251, 277, 157, 324, 295, 521, 525, 519, 520, 569,
	570, 522, 620, 621, 622, 597, 515, 0, 523, 524,
	0, 603, 610, 611, 574, 132, 143, 209, 624, 270,
	179, 327, 506, 518, 167, 529, 0, 0, 542, 547,
	548, 560, 562, 563, 564, 565, 573, 580, 581, 583,
	590, 591, 592, 594, 599, 607, 627, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 0, 216, 572, 614,
	602, 0, 0, 555, 617, 528, 545, 626, 546, 549,
	587, 512, 568, 243, 543, 0, 532, 508, 539, 509,
	530, 557, 171, 561, 527, 604, 571, 616, 207, 0,
	533, 255, 589, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 623, 210, 578,
	0, 296, 229, 0, 0, 0, 559, 606, 566, 598,
	554, 588, 517, 577, 618, 544, 585, 619, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	582, 613, 541, 584, 586, 629, 507, 579, 0, 510,
	513, 625, 609, 536, 537, 0, 0, 0, 0, 0,
	0, 0, 558, 567, 595, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 576, 0, 0, 0,
	514, 511, 0, 0, 0, 0, 556, 0, 0, 0,
	516, 0, 535, 596, 0, 505, 183, 600, 608, 553,
	333, 612, 551, 550, 615, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 605,
	531, 540, 162, 538, 276, 252, 322, 575, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 526, 601,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 593, 628, 251, 277, 157, 324, 295,
	521, 525, 519, 520, 569, 570, 522, 620, 621, 622,
	597, 515, 0, 523, 524, 0, 603, 610, 611, 574,
	132, 143, 209, 624, 270, 179, 327, 506, 518, 167,
	529, 0, 0, 542, 547, 548, 560, 562, 563, 564,
	565, 573, 580, 581, 583, 590, 591, 592, 594, 599,
	607, 627, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 0, 216, 572, 614, 602, 0, 0, 555, 617,
	528, 545, 626, 546, 549, 587, 512, 568, 243, 543,
	0, 532, 508, 539, 509, 530, 557, 171, 561, 527,
	604, 571, 616, 207, 0, 533, 255, 589, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 623, 210, 578, 0, 296, 229, 0, 0,
	0, 559, 606, 566, 598, 554, 588, 517, 577, 618,
	544, 585, 619, 198, 159, 136, 240, 297, 178, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 582, 613, 541, 584, 586,
	629, 507, 579, 0, 510, 513, 625, 609, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 558, 567, 595,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 576, 0, 0, 0, 514, 511, 0, 0, 0,
	0, 556, 0, 0, 0, 516, 0, 535, 596, 0,
	505, 183, 600, 608, 553, 333, 612, 551, 550, 615,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 605, 531, 540, 162, 538, 276,
	252, 322, 575, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 503, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 526, 601, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 504, 502, 497, 496, 204, 212, 593, 628,
	251, 277, 157, 324, 295, 521, 525, 519, 520, 569,
	570, 522, 620, 621, 622, 597, 515, 0, 523, 524,
	0, 603, 610, 611, 574, 132, 143, 209, 624, 270,
	179, 327, 506, 518, 167, 529, 0, 0, 542, 547,
	548, 560, 562, 563, 564, 565, 573, 580, 581, 583,
	590, 591, 592, 594, 599, 607, 627, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 0, 216, 572, 614,
	602, 0, 0, 555, 617, 528, 545, 626, 546, 549,
	587, 512, 568, 243, 543, 0, 532, 508, 539, 509,
	530, 557, 171, 561, 527, 604, 571, 616, 207, 0,
	533, 255, 589, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 623, 210, 578,
	0, 296, 229, 0, 0, 0, 559, 606, 566, 598,
	554, 588, 517, 577, 618, 544, 585, 619, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	582, 613, 541, 584, 586, 629, 507, 579, 0, 510,
	513, 625, 609, 536, 537, 0, 0, 0, 0, 0,
	0, 0, 558, 567, 595, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 534, 0, 576, 0, 0, 0,
	514, 511, 0, 0, 0, 0, 556, 0, 0, 0,
	516, 0, 535, 596, 0, 505, 183, 600, 608, 553,
	333, 612, 551, 550, 615, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 605,
	531, 540, 162, 538, 276, 252, 322, 575, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 876, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	503, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 526, 601,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 504, 502, 497,
	496, 204, 212, 593, 628, 251, 277, 157, 324, 295,
	521, 525, 519, 520, 569, 570, 522, 620, 621, 622,
	597, 515, 0, 523, 524, 0, 603, 610, 611, 574,
	132, 143, 209, 624, 270, 179, 327, 506, 518, 167,
	529, 0, 0, 542, 547, 548, 560, 562, 563, 564,
	565, 573, 580, 581, 583, 590, 591, 592, 594, 599,
	607, 627, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 0, 216, 572, 614, 602, 0, 0, 555, 617,
	528, 545, 626, 546, 549, 587, 512, 568, 243, 543,
	0, 532, 508, 539, 509, 530, 557, 171, 561, 527,
	604, 571, 616, 207, 0, 533, 255, 589, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 623, 210, 578, 0, 296, 229, 0, 0,
	0, 559, 606, 566, 598, 554, 588, 517, 577, 618,
	544, 585, 619, 198, 159, 136, 240, 297, 178, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 582, 613, 541, 584, 586,
	629, 507, 579, 0, 510, 513, 625, 609, 536, 537,
	0, 0, 0, 0, 0, 0, 0, 558, 567, 595,
	552, 0, 0, 0, 0, 0, 0, 0, 0, 534,
	0, 576, 0, 0, 0, 514, 511, 0, 0, 0,
	0, 556, 0, 0, 0, 516, 0, 535, 596, 0,
	505, 183, 600, 608, 553, 333, 612, 551, 550, 615,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 605, 531, 540, 162, 538, 276,
	252, 322, 575, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 494,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 503, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 526, 601, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 504, 502, 497, 496, 204, 212, 593, 628,
	251, 277, 157, 324, 295, 521, 525, 519, 520, 569,
	570, 522, 620, 621, 622, 597, 515, 0, 523, 524,
	0, 603, 610, 611, 574, 132, 143, 209, 624, 270,
	179, 327, 506, 518, 167, 529, 0, 0, 542, 547,
	548, 560, 562, 563, 564, 565, 573, 580, 581, 583,
	590, 591, 592, 594, 599, 607, 627, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 243, 216, 572, 1064,
	0, 398, 0, 0, 0, 171, 0, 397, 0, 0,
	0, 207, 0, 1065, 255, 0, 287, 161, 215, 213,
	309, 176, 172, 170, 160, 194, 220, 254, 305, 248,
	441, 210, 0, 0, 296, 229, 0, 0, 0, 0,
	0, 432, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 159, 136, 240, 297, 178, 67, 0, 0,
	119, 120, 121, 419, 418, 421, 422, 423, 424, 0,
	0, 155, 420, 425, 426, 427, 0, 0, 0, 0,
	395, 412, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 484, 0, 0, 0, 455,
	0, 411, 0, 0, 404, 405, 407, 406, 408, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	454, 0, 0, 333, 0, 0, 452, 0, 267, 0,
	301, 187, 206, 150, 203, 133, 145, 0, 185, 239,
	274, 278, 0, 0, 0, 162, 0, 276, 252, 322,
	0, 256, 275, 211, 311, 268, 321, 334, 335, 168,
	233, 328, 306, 331, 343, 146, 165, 246, 302, 325,
	293, 228, 308, 202, 292, 138, 304, 319, 156, 286,
	0, 0, 0, 140, 317, 300, 226, 199, 200, 139,
	0, 272, 169, 181, 164, 242, 314, 315, 163, 344,
	147, 330, 142, 148, 329, 235, 310, 318, 227, 219,
	141, 316, 225, 218, 205, 175, 190, 265, 214, 266,
	191, 231, 230, 232, 0, 137, 0, 298, 326, 345,
	153, 0, 0, 307, 339, 342, 0, 269, 154, 182,
	174, 264, 180, 208, 338, 340, 341, 152, 262, 188,
	234, 149, 193, 294, 204, 212, 0, 0, 251, 277,
	157, 324, 295, 442, 453, 448, 449, 446, 447, 0,
	445, 444, 443, 456, 434, 435, 436, 437, 439, 0,
	450, 451, 438, 132, 143, 209, 0, 270, 179, 327,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 144, 151, 158,
	166, 173, 177, 184, 189, 192, 195, 196, 197, 201,
	217, 221, 222, 223, 224, 236, 237, 238, 241, 244,
	245, 247, 249, 250, 253, 257, 258, 259, 260, 261,
	263, 271, 273, 279, 280, 281, 282, 283, 284, 285,
	288, 289, 290, 291, 299, 303, 312, 313, 323, 332,
	336, 186, 320, 337, 243, 216, 0, 0, 0, 398,
	0, 0, 0, 171, 0, 397, 0, 0, 0, 207,
	0, 0, 255, 0, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 441, 210,
	0, 0, 296, 229, 0, 0, 0, 0, 0, 432,
	433, 0, 0, 0, 0, 0, 0, 1176, 0, 198,
	159, 136, 240, 297, 178, 67, 0, 0, 119, 120,
	121, 419, 418, 421, 422, 423, 424, 0, 0, 155,
	420, 425, 426, 427, 1177, 0, 0, 0, 395, 412,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 0, 455, 0, 411,
	0, 0, 404, 405, 407, 406, 408, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 454, 0,
	0, 333, 0, 0, 452, 0, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	0, 0, 0, 162, 0, 276, 252, 322, 0, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 0,
	0, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 0, 0, 251, 277, 157, 324,
	295, 442, 453, 448, 449, 446, 447, 0, 445, 444,
	443, 456, 434, 435, 436, 437, 439, 0, 450, 451,
	438, 132, 143, 209, 0, 270, 179, 327, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 243, 216, 0, 0, 0, 398, 0, 0,
	0, 171, 0, 397, 0, 0, 0, 207, 0, 0,
	255, 0, 287, 161, 215, 213, 309, 176, 172, 170,
	160, 194, 220, 254, 305, 248, 441, 210, 0, 0,
	296, 229, 0, 0, 0, 0, 0, 432, 433, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 159, 136,
	240, 297, 178, 67, 0, 472, 119, 120, 121, 419,
	418, 421, 422, 423, 424, 0, 0, 155, 420, 425,
	426, 427, 0, 0, 0, 0, 395, 412, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 409,
	410, 0, 0, 0, 0, 455, 0, 411, 0, 0,
	404, 405, 407, 406, 408, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 454, 0, 0, 333,
	0, 0, 452, 0, 267, 0, 301, 187, 206, 150,
	203, 133, 145, 0, 185, 239, 274, 278, 0, 0,
	0, 162, 0, 276, 252, 322, 0, 256, 275, 211,
	311, 268, 321, 334, 335, 168, 233, 328, 306, 331,
	343, 146, 165, 246, 302, 325, 293, 228, 308, 202,
	292, 138, 304, 319, 156, 286, 0, 0, 0, 140,
	317, 300, 226, 199, 200, 139, 0, 272, 169, 181,
	164, 242, 314, 315, 163, 344, 147, 330, 142, 148,
	329, 235, 310, 318, 227, 219, 141, 316, 225, 218,
	205, 175, 190, 265, 214, 266, 191, 231, 230, 232,
	0, 137, 0, 298, 326, 345, 153, 0, 0, 307,
	339, 342, 0, 269, 154, 182, 174, 264, 180, 208,
	338, 340, 341, 152, 262, 188, 234, 149, 193, 294,
	204, 212, 0, 0, 251, 277, 157, 324, 295, 442,
	453, 448, 449, 446, 447, 0, 445, 444, 443, 456,
	434, 435, 436, 437, 439, 0, 450, 451, 438, 132,
	143, 209, 0, 270, 179, 327, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 144, 151, 158, 166, 173, 177, 184,
	189, 192, 195, 196, 197, 201, 217, 221, 222, 223,
	224, 236, 237, 238, 241, 244, 245, 247, 249, 250,
	253, 257, 258, 259, 260, 261, 263, 271, 273, 279,
	280, 281, 282, 283, 284, 285, 288, 289, 290, 291,
	299, 303, 312, 313, 323, 332, 336, 186, 320, 337,
	243, 216, 0, 0, 0, 398, 0, 0, 0, 171,
	0, 397, 0, 0, 0, 207, 0, 0, 255, 0,
	287, 161, 215, 213, 309, 176, 172, 170, 160, 194,
	220, 254, 305, 248, 441, 210, 0, 0, 296, 229,
	0, 0, 0, 0, 0, 432, 433, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 159, 136, 240, 297,
	178, 67, 0, 0, 119, 120, 121, 419, 418, 421,
	422, 423, 424, 0, 0, 155, 420, 425, 426, 427,
	0, 0, 0, 0, 395, 412, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 409, 410, 484,
	0, 0, 0, 455, 0, 411, 0, 0, 404, 405,
	407, 406, 408, 413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 454, 0, 0, 333, 0, 0,
	452, 0, 267, 0, 301, 187, 206, 150, 203, 133,
	145, 0, 185, 239, 274, 278, 0, 0, 0, 162,
	0, 276, 252, 322, 0, 256, 275, 211, 311, 268,
	321, 334, 335, 168, 233, 328, 306, 331, 343, 146,
	165, 246, 302, 325, 293, 228, 308, 202, 292, 138,
	304, 319, 156, 286, 0, 0, 0, 140, 317, 300,
	226, 199, 200, 139, 0, 272, 169, 181, 164, 242,
	314, 315, 163, 344, 147, 330, 142, 148, 329, 235,
	310, 318, 227, 219, 141, 316, 225, 218, 205, 175,
	190, 265, 214, 266, 191, 231, 230, 232, 0, 137,
	0, 298, 326, 345, 153, 0, 0, 307, 339, 342,
	0, 269, 154, 182, 174, 264, 180, 208, 338, 340,
	341, 152, 262, 188, 234, 149, 193, 294, 204, 212,
	0, 0, 251, 277, 157, 324, 295, 442, 453, 448,
	449, 446, 447, 0, 445, 444, 443, 456, 434, 435,
	436, 437, 439, 0, 450, 451, 438, 132, 143, 209,
	0, 270, 179, 327, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	135, 144, 151, 158, 166, 173, 177, 184, 189, 192,
	195, 196, 197, 201, 217, 221, 222, 223, 224, 236,
	237, 238, 241, 244, 245, 247, 249, 250, 253, 257,
	258, 259, 260, 261, 263, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 303,
	312, 313, 323, 332, 336, 186, 320, 337, 243, 216,
	0, 0, 0, 398, 0, 0, 0, 171, 0, 397,
	0, 0, 0, 207, 0, 0, 255, 0, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 441, 210, 0, 0, 296, 229, 0, 0,
	0, 0, 0, 432, 433, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 159, 136, 240, 297, 178, 67,
	0, 0, 119, 120, 121, 419, 1082, 421, 422, 423,
	424, 0, 0, 155, 420, 425, 426, 427, 0, 0,
	0, 0, 395, 412, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 410, 484, 0, 0,
	0, 455, 0, 411, 0, 0, 404, 405, 407, 406,
	408, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 454, 0, 0, 333, 0, 0, 452, 0,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 0, 0, 0, 162, 0, 276,
	252, 322, 0, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 148, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 0, 0, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 234, 149, 193, 294, 204, 212, 0, 0,
	251, 277, 157, 324, 295, 442, 453, 448, 449, 446,
	447, 0, 445, 444, 443, 456, 434, 435, 436, 437,
	439, 0, 450, 451, 438, 132, 143, 209, 0, 270,
	179, 327, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 186, 320, 337, 243, 216, 0, 0,
	0, 398, 0, 0, 0, 171, 0, 397, 0, 0,
	0, 207, 0, 0, 255, 0, 287, 161, 215, 213,
	309, 176, 172, 170, 160, 194, 220, 254, 305, 248,
	441, 210, 0, 0, 296, 229, 0, 0, 0, 0,
	0, 432, 433, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 159, 136, 240, 297, 178, 67, 0, 0,
	119, 120, 121, 419, 1079, 421, 422, 423, 424, 0,
	0, 155, 420, 425, 426, 427, 0, 0, 0, 0,
	395, 412, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 409, 410, 484, 0, 0, 0, 455,
	0, 411, 0, 0, 404, 405, 407, 406, 408, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	454, 0, 0, 333, 0, 0, 452, 0, 267, 0,
	301, 187, 206, 150, 203, 133, 145, 0, 185, 239,
	274, 278, 0, 0, 0, 162, 0, 276, 252, 322,
	0, 256, 275, 211, 311, 268, 321, 334, 335, 168,
	233, 328, 306, 331, 343, 146, 165, 246, 302, 325,
	293, 228, 308, 202, 292, 138, 304, 319, 156, 286,
	0, 0, 0, 140, 317, 300, 226, 199, 200, 139,
	0, 272, 169, 181, 164, 242, 314, 315, 163, 344,
	147, 330, 142, 148, 329, 235, 310, 318, 227, 219,
	141, 316, 225, 218, 205, 175, 190, 265, 214, 266,
	191, 231, 230, 232, 0, 137, 0, 298, 326, 345,
	153, 0, 0, 307, 339, 342, 0, 269, 154, 182,
	174, 264, 180, 208, 338, 340, 341, 152, 262, 188,
	234, 149, 193, 294, 204, 212, 0, 0, 251, 277,
	157, 324, 295, 442, 453, 448, 449, 446, 447, 0,
	445, 444, 443, 456, 434, 435, 436, 437, 439, 0,
	450, 451, 438, 132, 143, 209, 0, 270, 179, 327,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 144, 151, 158,
	166, 173, 177, 184, 189, 192, 195, 196, 197, 201,
	217, 221, 222, 223, 224, 236, 237, 238, 241, 244,
	245, 247, 249, 250, 253, 257, 258, 259, 260, 261,
	263, 271, 273, 279, 280, 281, 282, 283, 284, 285,
	288, 289, 290, 291, 299, 303, 312, 313, 323, 332,
	336, 186, 320, 337, 465, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 398, 0, 0, 0, 171, 0, 397, 0,
	0, 0, 207, 0, 0, 255, 0, 287, 161, 215,
	213, 309, 176, 172, 170, 160, 194, 220, 254, 305,
	248, 441, 210, 0, 0, 296, 229, 0, 0, 0,
	0, 0, 432, 433, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 159, 136, 240, 297, 178, 67, 0,
	0, 119, 120, 121, 419, 418, 421, 422, 423, 424,
	0, 0, 155, 420, 425, 426, 427, 0, 0, 0,
	0, 395, 412, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 0, 0, 0, 0,
	455, 0, 411, 0, 0, 404, 405, 407, 406, 408,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 454, 0, 0, 333, 0, 0, 452, 0, 267,
	0, 301, 187, 206, 150, 203, 133, 145, 0, 185,
	239, 274, 278, 0, 0, 0, 162, 0, 276, 252,
	322, 0, 256, 275, 211, 311, 268, 321, 334, 335,
	168, 233, 328, 306, 331, 343, 146, 165, 246, 302,
	325, 293, 228, 308, 202, 292, 138, 304, 319, 156,
	286, 0, 0, 0, 140, 317, 300, 226, 199, 200,
	139, 0, 272, 169, 181, 164, 242, 314, 315, 163,
	344, 147, 330, 142, 148, 329, 235, 310, 318, 227,
	219, 141, 316, 225, 218, 205, 175, 190, 265, 214,
	266, 191, 231, 230, 232, 0, 137, 0, 298, 326,
	345, 153, 0, 0, 307, 339, 342, 0, 269, 154,
	182, 174, 264, 180, 208, 338, 340, 341, 152, 262,
	188, 234, 149, 193, 294, 204, 212, 0, 0, 251,
	277, 157, 324, 295, 442, 453, 448, 449, 446, 447,
	0, 445, 444, 443, 456, 434, 435, 436, 437, 439,
	0, 450, 451, 438, 132, 143, 209, 0, 270, 179,
	327, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 144, 151,
	158, 166, 173, 177, 184, 189, 192, 195, 196, 197,
	201, 217, 221, 222, 223, 224, 236, 237, 238, 241,
	244, 245, 247, 249, 250, 253, 257, 258, 259, 260,
	261, 263, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 303, 312, 313, 323,
	332, 336, 186, 320, 337, 243, 216, 0, 0, 0,
	398, 0, 0, 0, 171, 0, 397, 0, 0, 0,
	207, 0, 0, 255, 0, 287, 161, 215, 213, 309,
	176, 172, 170, 160, 194, 220, 254, 305, 248, 441,
	210, 0, 0, 296, 229, 0, 0, 0, 0, 0,
	432, 433, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 159, 136, 240, 297, 178, 67, 0, 0, 119,
	120, 121, 419, 418, 421, 422, 423, 424, 0, 0,
	155, 420, 425, 426, 427, 0, 0, 0, 0, 395,
	412, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 409, 410, 0, 0, 0, 0, 455, 0,
	411, 0, 0, 404, 405, 407, 406, 408, 413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 454,
	0, 0, 333, 0, 0, 452, 0, 267, 0, 301,
	187, 206, 150, 203, 133, 145, 0, 185, 239, 274,
	278, 0, 0, 0, 162, 0, 276, 252, 322, 0,
	256, 275, 211, 311, 268, 321, 334, 335, 168, 233,
	328, 306, 331, 343, 146, 165, 246, 302, 325, 293,
	228, 308, 202, 292, 138, 304, 319, 156, 286, 0,
	0, 0, 140, 317, 300, 226, 199, 200, 139, 0,
	272, 169, 181, 164, 242, 314, 315, 163, 344, 147,
	330, 142, 148, 329, 235, 310, 318, 227, 219, 141,
	316, 225, 218, 205, 175, 190, 265, 214, 266, 191,
	231, 230, 232, 0, 137, 0, 298, 326, 345, 153,
	0, 0, 307, 339, 342, 0, 269, 154, 182, 174,
	264, 180, 208, 338, 340, 341, 152, 262, 188, 234,
	149, 193, 294, 204, 212, 0, 0, 251, 277, 157,
	324, 295, 442, 453, 448, 449, 446, 447, 0, 445,
	444, 443, 456, 434, 435, 436, 437, 439, 0, 450,
	451, 438, 132, 143, 209, 0, 270, 179, 327, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 144, 151, 158, 166,
	173, 177, 184, 189, 192, 195, 196, 197, 201, 217,
	221, 222, 223, 224, 236, 237, 238, 241, 244, 245,
	247, 249, 250, 253, 257, 258, 259, 260, 261, 263,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 303, 312, 313, 323, 332, 336,
	186, 320, 337, 243, 216, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 207, 0,
	0, 255, 0, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 441, 210, 0,
	0, 296, 229, 0, 0, 0, 0, 0, 432, 433,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 159,
	136, 240, 297, 178, 67, 0, 472, 119, 120, 121,
	419, 418, 421, 422, 423, 424, 0, 0, 155, 420,
	425, 426, 427, 0, 0, 0, 0, 0, 412, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	409, 410, 0, 0, 0, 0, 455, 0, 411, 0,
	0, 404, 405, 407, 406, 408, 413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 454, 0, 0,
	333, 0, 0, 452, 0, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 0,
	0, 0, 162, 0, 276, 252, 322, 0, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 0, 0,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 0, 0, 251, 277, 157, 324, 295,
	442, 453, 448, 449, 446, 447, 0, 445, 444, 443,
	456, 434, 435, 436, 437, 439, 0, 450, 451, 438,
	132, 143, 209, 0, 270, 179, 327, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 243, 216, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 207, 0, 0, 255,
	0, 287, 161, 215, 213, 309, 176, 172, 170, 160,
	194, 220, 254, 305, 248, 441, 210, 0, 0, 296,
	229, 0, 0, 0, 0, 0, 432, 433, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 159, 136, 240,
	297, 178, 67, 0, 0, 119, 120, 121, 419, 418,
	421, 422, 423, 424, 0, 0, 155, 420, 425, 426,
	427, 0, 0, 0, 0, 0, 412, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 409, 410,
	0, 0, 0, 0, 455, 0, 411, 0, 0, 404,
	405, 407, 406, 408, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 454, 0, 0, 333, 0,
	0, 452, 0, 267, 0, 301, 187, 206, 150, 203,
	133, 145, 0, 185, 239, 274, 278, 0, 0, 0,
	162, 0, 276, 252, 322, 0, 256, 275, 211, 311,
	268, 321, 334, 335, 168, 233, 328, 306, 331, 343,
	146, 165, 246, 302, 325, 293, 228, 308, 202, 292,
	138, 304, 319, 156, 286, 0, 0, 0, 140, 317,
	300, 226, 199, 200, 139, 0, 272, 169, 181, 164,
	242, 314, 315, 163, 344, 147, 330, 142, 148, 329,
	235, 310, 318, 227, 219, 141, 316, 225, 218, 205,
	175, 190, 265, 214, 266, 191, 231, 230, 232, 0,
	137, 0, 298, 326, 345, 153, 0, 0, 307, 339,
	342, 0, 269, 154, 182, 174, 264, 180, 208, 338,
	340, 341, 152, 262, 188, 234, 149, 193, 294, 204,
	212, 0, 0, 251, 277, 157, 324, 295, 442, 453,
	448, 449, 446, 447, 0, 445, 444, 443, 456, 434,
	435, 436, 437, 439, 0, 450, 451, 438, 132, 143,
	209, 0, 270, 179, 327, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 144, 151, 158, 166, 173, 177, 184, 189,
	192, 195, 196, 197, 201, 217, 221, 222, 223, 224,
	236, 237, 238, 241, 244, 245, 247, 249, 250, 253,
	257, 258, 259, 260, 261, 263, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	303, 312, 313, 323, 332, 336, 186, 320, 337, 243,
	216, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 207, 0, 0, 255, 0, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 0, 210, 0, 0, 296, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 753, 763, 764, 756, 757, 758, 759,
	760, 761, 762, 755, 0, 0, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 333, 0, 0, 0,
	0, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 0, 0, 0, 162, 0,
	276, 252, 322, 0, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 0, 0, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 0,
	0, 251, 277, 157, 324, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 143, 209, 0,
	270, 179, 327, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 243, 216, 0,
	0, 854, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 207, 0, 0, 255, 0, 287, 161, 215,
	213, 309, 176, 172, 170, 160, 194, 220, 254, 305,
	248, 0, 210, 0, 0, 296, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 159, 136, 240, 297, 178, 0, 0,
	0, 119, 120, 121, 0, 856, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 743, 744,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 333, 0, 0, 0, 0, 267,
	0, 301, 187, 206, 150, 203, 133, 145, 0, 185,
	239, 274, 278, 0, 0, 0, 162, 0, 276, 252,
	322, 0, 256, 275, 211, 311, 268, 321, 334, 335,
	168, 233, 328, 306, 331, 343, 146, 165, 246, 302,
	325, 293, 228, 308, 202, 292, 138, 304, 319, 156,
	286, 0, 0, 0, 140, 317, 300, 226, 199, 200,
	139, 0, 272, 169, 181, 164, 242, 314, 315, 163,
	344, 147, 330, 142, 148, 329, 235, 310, 318, 227,
	219, 141, 316, 225, 218, 205, 175, 190, 265, 214,
	266, 191, 231, 230, 232, 0, 137, 0, 298, 326,
	345, 153, 0, 0, 307, 339, 342, 0, 269, 154,
	182, 174, 264, 180, 208, 338, 340, 341, 152, 262,
	188, 234, 149, 193, 294, 204, 212, 0, 0, 251,
	277, 157, 324, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 143, 209, 0, 270, 179,
	327, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 144, 151,
	158, 166, 173, 177, 184, 189, 192, 195, 196, 197,
	201, 217, 221, 222, 223, 224, 236, 237, 238, 241,
	244, 245, 247, 249, 250, 253, 257, 258, 259, 260,
	261, 263, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 303, 312, 313, 323,
	332, 336, 186, 320, 337, 243, 216, 0, 0, 0,
	0, 0, 0, 0, 171, 668, 0, 0, 0, 0,
	207, 0, 0, 255, 0, 287, 161, 215, 213, 309,
	176, 172, 170, 160, 194, 220, 254, 305, 248, 0,
	210, 0, 0, 296, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 159, 136, 240, 297, 178, 0, 0, 0, 119,
	120, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 667, 333, 0, 0, 0, 665, 1191, 0, 1192,
	1193, 206, 637, 203, 133, 145, 657, 1194, 239, 274,
	278, 0, 0, 0, 162, 0, 276, 252, 322, 0,
	256, 275, 211, 311, 268, 321, 334, 335, 168, 233,
	328, 306, 331, 343, 146, 165, 246, 302, 325, 293,
	228, 308, 202, 292, 138, 304, 319, 156, 286, 0,
	0, 0, 140, 317, 300, 226, 199, 200, 139, 0,
	272, 169, 181, 164, 242, 314, 315, 163, 344, 147,
	330, 142, 148, 329, 235, 310, 318, 227, 219, 141,
	316, 225, 218, 205, 175, 190, 265, 214, 266, 191,
	231, 230, 232, 0, 137, 0, 298, 326, 345, 153,
	0, 0, 307, 339, 342, 0, 269, 154, 182, 174,
	264, 180, 208, 338, 340, 341, 152, 262, 188, 234,
	149, 193, 294, 204, 212, 0, 0, 251, 277, 157,
	324, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 143, 209, 0, 270, 179, 327, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 144, 151, 158, 166,
	173, 177, 184, 189, 192, 195, 196, 197, 201, 217,
	221, 222, 223, 224, 236, 237, 238, 241, 244, 245,
	247, 249, 250, 253, 257, 258, 259, 260, 261, 263,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 303, 312, 313, 323, 332, 336,
	186, 320, 337, 33, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 207, 0, 0, 255, 0, 287, 161, 215, 213,
	309, 176, 172, 170, 160, 194, 220, 254, 305, 248,
	0, 210, 0, 0, 296, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 159, 136, 240, 297, 178, 67, 0, 472,
	119, 120, 121, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 333, 0, 0, 0, 0, 267, 0,
	301, 187, 206, 150, 203, 133, 145, 0, 185, 239,
	274, 278, 0, 0, 0, 162, 0, 276, 252, 322,
	0, 256, 275, 211, 311, 268, 321, 334, 335, 168,
	233, 328, 306, 331, 343, 146, 165, 246, 302, 325,
	293, 228, 308, 202, 292, 138, 304, 319, 156, 286,
	0, 0, 0, 140, 317, 300, 226, 199, 200, 139,
	0, 272, 169, 181, 164, 242, 314, 315, 163, 344,
	147, 330, 142, 148, 329, 235, 310, 318, 227, 219,
	141, 316, 225, 218, 205, 175, 190, 265, 214, 266,
	191, 231, 230, 232, 0, 137, 0, 298, 326, 345,
	153, 0, 0, 307, 339, 342, 0, 269, 154, 182,
	174, 264, 180, 208, 338, 340, 341, 152, 262, 188,
	234, 149, 193, 294, 204, 212, 0, 0, 251, 277,
	157, 324, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 143, 209, 0, 270, 179, 327,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 144, 151, 158,
	166, 173, 177, 184, 189, 192, 195, 196, 197, 201,
	217, 221, 222, 223, 224, 236, 237, 238, 241, 244,
	245, 247, 249, 250, 253, 257, 258, 259, 260, 261,
	263, 271, 273, 279, 280, 281, 282, 283, 284, 285,
	288, 289, 290, 291, 299, 303, 312, 313, 323, 332,
	336, 186, 320, 337, 243, 216, 0, 0, 1111, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 207,
	0, 0, 255, 0, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 0, 210,
	0, 0, 296, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 1113, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 333, 0, 0, 0, 0, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	0, 0, 0, 162, 0, 276, 252, 322, 0, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 0,
	0, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 0, 0, 251, 277, 157, 324,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 143, 209, 0, 270, 179, 327, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 33, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	207, 0, 0, 255, 0, 287, 161, 215, 213, 309,
	176, 172, 170, 160, 194, 220, 254, 305, 248, 0,
	210, 0, 0, 296, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 159, 136, 240, 297, 178, 67, 0, 0, 119,
	120, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 333, 0, 0, 0, 0, 267, 0, 301,
	187, 206, 150, 203, 133, 145, 0, 185, 239, 274,
	278, 0, 0, 0, 162, 0, 276, 252, 322, 0,
	256, 275, 211, 311, 268, 321, 334, 335, 168, 233,
	328, 306, 331, 343, 146, 165, 246, 302, 325, 293,
	228, 308, 202, 292, 138, 304, 319, 156, 286, 0,
	0, 0, 140, 317, 300, 226, 199, 200, 139, 0,
	272, 169, 181, 164, 242, 314, 315, 163, 344, 147,
	330, 142, 148, 329, 235, 310, 318, 227, 219, 141,
	316, 225, 218, 205, 175, 190, 265, 214, 266, 191,
	231, 230, 232, 0, 137, 0, 298, 326, 345, 153,
	0, 0, 307, 339, 342, 0, 269, 154, 182, 174,
	264, 180, 208, 338, 340, 341, 152, 262, 188, 234,
	149, 193, 294, 204, 212, 0, 0, 251, 277, 157,
	324, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 143, 209, 0, 270, 179, 327, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 144, 151, 158, 166,
	173, 177, 184, 189, 192, 195, 196, 197, 201, 217,
	221, 222, 223, 224, 236, 237, 238, 241, 244, 245,
	247, 249, 250, 253, 257, 258, 259, 260, 261, 263,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 303, 312, 313, 323, 332, 336,
	186, 320, 337, 243, 216, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 207, 0,
	0, 255, 0, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 0, 210, 0,
	0, 296, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 159,
	136, 240, 297, 178, 0, 0, 0, 119, 120, 121,
	0, 0, 1129, 0, 0, 1130, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	333, 0, 0, 0, 0, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 0,
	0, 0, 162, 0, 276, 252, 322, 0, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 0, 0,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 0, 0, 251, 277, 157, 324, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 143, 209, 0, 270, 179, 327, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 243, 216, 0, 0, 1111, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 207, 0, 0, 255,
	0, 287, 161, 215, 213, 309, 176, 172, 170, 160,
	194, 220, 254, 305, 248, 0, 210, 0, 0, 296,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 159, 136, 240,
	297, 178, 0, 0, 0, 119, 120, 121, 0, 1113,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 333, 0,
	0, 0, 0, 267, 0, 301, 187, 206, 150, 203,
	133, 145, 0, 185, 239, 274, 278, 0, 0, 0,
	162, 0, 276, 252, 322, 0, 1109, 275, 211, 311,
	268, 321, 334, 335, 168, 233, 328, 306, 331, 343,
	146, 165, 246, 302, 325, 293, 228, 308, 202, 292,
	138, 304, 319, 156, 286, 0, 0, 0, 140, 317,
	300, 226, 199, 200, 139, 0, 272, 169, 181, 164,
	242, 314, 315, 163, 344, 147, 330, 142, 148, 329,
	235, 310, 318, 227, 219, 141, 316, 225, 218, 205,
	175, 190, 265, 214, 266, 191, 231, 230, 232, 0,
	137, 0, 298, 326, 345, 153, 0, 0, 307, 339,
	342, 0, 269, 154, 182, 174, 264, 180, 208, 338,
	340, 341, 152, 262, 188, 234, 149, 193, 294, 204,
	212, 0, 0, 251, 277, 157, 324, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 143,
	209, 0, 270, 179, 327, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 144, 151, 158, 166, 173, 177, 184, 189,
	192, 195, 196, 197, 201, 217, 221, 222, 223, 224,
	236, 237, 238, 241, 244, 245, 247, 249, 250, 253,
	257, 258, 259, 260, 261, 263, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	303, 312, 313, 323, 332, 336, 186, 320, 337, 243,
	216, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	887, 0, 0, 0, 207, 0, 0, 255, 0, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 0, 210, 0, 0, 296, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 886, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 333, 0, 0, 0,
	0, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 0, 0, 0, 162, 0,
	276, 252, 322, 0, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 0, 0, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 0,
	0, 251, 277, 157, 324, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 143, 209, 0,
	270, 179, 327, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 243, 216, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 207, 0, 0, 255, 0, 287, 161, 215,
	213, 309, 176, 172, 170, 160, 194, 220, 254, 305,
	248, 0, 210, 0, 0, 296, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 159, 136, 240, 297, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 333, 0, 0, 0, 0, 267,
	0, 301, 187, 206, 637, 203, 133, 145, 635, 185,
	239, 274, 278, 0, 0, 0, 162, 0, 276, 252,
	322, 0, 256, 275, 211, 311, 268, 321, 334, 335,
	168, 233, 328, 306, 331, 343, 146, 165, 246, 302,
	325, 293, 228, 308, 202, 292, 138, 304, 319, 156,
	286, 0, 0, 0, 140, 317, 300, 226, 199, 200,
	139, 0, 272, 169, 181, 164, 242, 314, 315, 163,
	344, 147, 330, 142, 148, 329, 235, 310, 318, 227,
	219, 141, 316, 225, 218, 205, 175, 190, 265, 214,
	266, 191, 231, 230, 232, 0, 137, 0, 298, 326,
	345, 153, 0, 0, 307, 339, 342, 0, 269, 154,
	182, 174, 264, 180, 208, 338, 340, 341, 152, 262,
	188, 234, 149, 193, 294, 204, 212, 0, 0, 251,
	277, 157, 324, 295, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 143, 209, 0, 270, 179,
	327, 0, 0, 167, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 144, 151,
	158, 166, 173, 177, 184, 189, 192, 195, 196, 197,
	201, 217, 221, 222, 223, 224, 236, 237, 238, 241,
	244, 245, 247, 249, 250, 253, 257, 258, 259, 260,
	261, 263, 271, 273, 279, 280, 281, 282, 283, 284,
	285, 288, 289, 290, 291, 299, 303, 312, 313, 323,
	332, 336, 186, 320, 337, 243, 216, 0, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	207, 0, 0, 255, 0, 287, 161, 215, 213, 309,
	176, 172, 170, 160, 194, 220, 254, 305, 248, 0,
	210, 0, 0, 296, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	198, 159, 136, 240, 297, 178, 0, 0, 472, 119,
	120, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 333, 0, 0, 0, 0, 267, 0, 301,
	187, 206, 150, 203, 133, 145, 0, 185, 239, 274,
	278, 0, 0, 0, 162, 0, 276, 252, 322, 0,
	256, 275, 211, 311, 268, 321, 334, 335, 168, 233,
	328, 306, 331, 343, 146, 165, 246, 302, 325, 293,
	228, 308, 202, 292, 138, 304, 319, 156, 286, 0,
	0, 0, 140, 317, 300, 226, 199, 200, 139, 0,
	272, 169, 181, 164, 242, 314, 315, 163, 344, 147,
	330, 142, 148, 329, 235, 310, 318, 227, 219, 141,
	316, 225, 218, 205, 175, 190, 265, 214, 266, 191,
	231, 230, 232, 0, 137, 0, 298, 326, 345, 153,
	0, 0, 307, 339, 342, 0, 269, 154, 182, 174,
	264, 180, 208, 338, 340, 341, 152, 262, 188, 234,
	149, 193, 294, 204, 212, 0, 0, 251, 277, 157,
	324, 295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 132, 143, 209, 0, 270, 179, 327, 0,
	0, 167, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 135, 144, 151, 158, 166,
	173, 177, 184, 189, 192, 195, 196, 197, 201, 217,
	221, 222, 223, 224, 236, 237, 238, 241, 244, 245,
	247, 249, 250, 253, 257, 258, 259, 260, 261, 263,
	271, 273, 279, 280, 281, 282, 283, 284, 285, 288,
	289, 290, 291, 299, 303, 312, 313, 323, 332, 336,
	186, 320, 337, 243, 216, 0, 0, 0, 0, 0,
	0, 0, 171, 0, 0, 0, 0, 0, 207, 0,
	0, 255, 0, 287, 161, 215, 213, 309, 176, 172,
	170, 160, 194, 220, 254, 305, 248, 0, 210, 0,
	0, 296, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 159,
	136, 240, 297, 178, 67, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	333, 0, 0, 0, 0, 267, 0, 301, 187, 206,
	150, 203, 133, 145, 0, 185, 239, 274, 278, 0,
	0, 0, 162, 0, 276, 252, 322, 0, 256, 275,
	211, 311, 268, 321, 334, 335, 168, 233, 328, 306,
	331, 343, 146, 165, 246, 302, 325, 293, 228, 308,
	202, 292, 138, 304, 319, 156, 286, 0, 0, 0,
	140, 317, 300, 226, 199, 200, 139, 0, 272, 169,
	181, 164, 242, 314, 315, 163, 344, 147, 330, 142,
	148, 329, 235, 310, 318, 227, 219, 141, 316, 225,
	218, 205, 175, 190, 265, 214, 266, 191, 231, 230,
	232, 0, 137, 0, 298, 326, 345, 153, 0, 0,
	307, 339, 342, 0, 269, 154, 182, 174, 264, 180,
	208, 338, 340, 341, 152, 262, 188, 234, 149, 193,
	294, 204, 212, 0, 0, 251, 277, 157, 324, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	132, 143, 209, 0, 270, 179, 327, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 144, 151, 158, 166, 173, 177,
	184, 189, 192, 195, 196, 197, 201, 217, 221, 222,
	223, 224, 236, 237, 238, 241, 244, 245, 247, 249,
	250, 253, 257, 258, 259, 260, 261, 263, 271, 273,
	279, 280, 281, 282, 283, 284, 285, 288, 289, 290,
	291, 299, 303, 312, 313, 323, 332, 336, 186, 320,
	337, 243, 216, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 207, 0, 0, 255,
	0, 287, 161, 215, 213, 309, 176, 172, 170, 160,
	194, 220, 254, 305, 248, 0, 210, 0, 0, 296,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 159, 136, 240,
	297, 178, 0, 0, 0, 119, 120, 121, 0, 1113,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 333, 0,
	0, 0, 0, 267, 0, 301, 187, 206, 150, 203,
	133, 145, 0, 185, 239, 274, 278, 0, 0, 0,
	162, 0, 276, 252, 322, 0, 256, 275, 211, 311,
	268, 321, 334, 335, 168, 233, 328, 306, 331, 343,
	146, 165, 246, 302, 325, 293, 228, 308, 202, 292,
	138, 304, 319, 156, 286, 0, 0, 0, 140, 317,
	300, 226, 199, 200, 139, 0, 272, 169, 181, 164,
	242, 314, 315, 163, 344, 147, 330, 142, 148, 329,
	235, 310, 318, 227, 219, 141, 316, 225, 218, 205,
	175, 190, 265, 214, 266, 191, 231, 230, 232, 0,
	137, 0, 298, 326, 345, 153, 0, 0, 307, 339,
	342, 0, 269, 154, 182, 174, 264, 180, 208, 338,
	340, 341, 152, 262, 188, 234, 149, 193, 294, 204,
	212, 0, 0, 251, 277, 157, 324, 295, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 143,
	209, 0, 270, 179, 327, 0, 0, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	134, 135, 144, 151, 158, 166, 173, 177, 184, 189,
	192, 195, 196, 197, 201, 217, 221, 222, 223, 224,
	236, 237, 238, 241, 244, 245, 247, 249, 250, 253,
	257, 258, 259, 260, 261, 263, 271, 273, 279, 280,
	281, 282, 283, 284, 285, 288, 289, 290, 291, 299,
	303, 312, 313, 323, 332, 336, 186, 320, 337, 243,
	216, 0, 0, 0, 0, 0, 0, 0, 171, 0,
	0, 0, 0, 0, 207, 0, 0, 255, 0, 287,
	161, 215, 213, 309, 176, 172, 170, 160, 194, 220,
	254, 305, 248, 0, 210, 0, 0, 296, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 159, 136, 240, 297, 178,
	0, 0, 0, 119, 120, 121, 0, 856, 0, 0,
	0, 0, 0, 0, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 333, 0, 0, 0,
	0, 267, 0, 301, 187, 206, 150, 203, 133, 145,
	0, 185, 239, 274, 278, 0, 0, 0, 162, 0,
	276, 252, 322, 0, 256, 275, 211, 311, 268, 321,
	334, 335, 168, 233, 328, 306, 331, 343, 146, 165,
	246, 302, 325, 293, 228, 308, 202, 292, 138, 304,
	319, 156, 286, 0, 0, 0, 140, 317, 300, 226,
	199, 200, 139, 0, 272, 169, 181, 164, 242, 314,
	315, 163, 344, 147, 330, 142, 148, 329, 235, 310,
	318, 227, 219, 141, 316, 225, 218, 205, 175, 190,
	265, 214, 266, 191, 231, 230, 232, 0, 137, 0,
	298, 326, 345, 153, 0, 0, 307, 339, 342, 0,
	269, 154, 182, 174, 264, 180, 208, 338, 340, 341,
	152, 262, 188, 234, 149, 193, 294, 204, 212, 0,
	0, 251, 277, 157, 324, 295, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 143, 209, 0,
	270, 179, 327, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	144, 151, 158, 166, 173, 177, 184, 189, 192, 195,
	196, 197, 201, 217, 221, 222, 223, 224, 236, 237,
	238, 241, 244, 245, 247, 249, 250, 253, 257, 258,
	259, 260, 261, 263, 271, 273, 279, 280, 281, 282,
	283, 284, 285, 288, 289, 290, 291, 299, 303, 312,
	313, 323, 332, 336, 186, 320, 337, 869, 216, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 207,
	0, 0, 255, 0, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 0, 210,
	0, 0, 296, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 333, 0, 0, 0, 0, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	0, 0, 0, 162, 0, 276, 252, 322, 0, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 0,
	0, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 0, 0, 251, 277, 157, 324,
	295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 143, 209, 0, 270, 179, 327, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 243, 216, 0, 0, 0, 0, 0, 0,
	860, 171, 0, 0, 0, 0, 0, 207, 0, 0,
	255, 0, 287, 161, 215, 213, 309, 176, 172, 170,
	160, 194, 220, 254, 305, 248, 0, 210, 0, 0,
	296, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 159, 136,
	240, 297, 178, 0, 0, 0, 119, 120, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 333,
	0, 0, 0, 0, 267, 0, 301, 187, 206, 150,
	203, 133, 145, 0, 185, 239, 274, 278, 0, 0,
	0, 162, 0, 276, 252, 322, 0, 256, 275, 211,
	311, 268, 321, 334, 335, 168, 233, 328, 306, 331,
	343, 146, 165, 246, 302, 325, 293, 228, 308, 202,
	292, 138, 304, 319, 156, 286, 0, 0, 0, 140,
	317, 300, 226, 199, 200, 139, 0, 272, 169, 181,
	164, 242, 314, 315, 163, 344, 147, 330, 142, 148,
	329, 235, 310, 318, 227, 219, 141, 316, 225, 218,
	205, 175, 190, 265, 214, 266, 191, 231, 230, 232,
	0, 137, 0, 298, 326, 345, 153, 0, 0, 307,
	339, 342, 0, 269, 154, 182, 174, 264, 180, 208,
	338, 340, 341, 152, 262, 188, 234, 149, 193, 294,
	204, 212, 0, 0, 251, 277, 157, 324, 295, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	143, 209, 0, 270, 179, 327, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 144, 151, 158, 166, 173, 177, 184,
	189, 192, 195, 196, 197, 201, 217, 221, 222, 223,
	224, 236, 237, 238, 241, 244, 245, 247, 249, 250,
	253, 257, 258, 259, 260, 261, 263, 271, 273, 279,
	280, 281, 282, 283, 284, 285, 288, 289, 290, 291,
	299, 303, 312, 313, 323, 332, 336, 186, 320, 337,
	243, 216, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 207, 0, 0, 255, 0,
	287, 161, 215, 213, 309, 176, 172, 170, 160, 194,
	220, 254, 305, 248, 0, 210, 0, 0, 296, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 159, 136, 240, 297,
	178, 0, 0, 0, 119, 120, 121, 0, 734, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 333, 0, 0,
	0, 0, 267, 0, 301, 187, 206, 150, 203, 133,
	145, 0, 185, 239, 274, 278, 0, 0, 0, 162,
	0, 276, 252, 322, 0, 256, 275, 211, 311, 268,
	321, 334, 335, 168, 233, 328, 306, 331, 343, 146,
	165, 246, 302, 325, 293, 228, 308, 202, 292, 138,
	304, 319, 156, 286, 0, 0, 0, 140, 317, 300,
	226, 199, 200, 139, 0, 272, 169, 181, 164, 242,
	314, 315, 163, 344, 147, 330, 142, 148, 329, 235,
	310, 318, 227, 219, 141, 316, 225, 218, 205, 175,
	190, 265, 214, 266, 191, 231, 230, 232, 0, 137,
	0, 298, 326, 345, 153, 0, 0, 307, 339, 342,
	0, 269, 154, 182, 174, 264, 180, 208, 338, 340,
	341, 152, 262, 188, 234, 149, 193, 294, 204, 212,
	0, 0, 251, 277, 157, 324, 295, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 143, 209,
	0, 270, 179, 327, 0, 0, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 134,
	135, 144, 151, 158, 166, 173, 177, 184, 189, 192,
	195, 196, 197, 201, 217, 221, 222, 223, 224, 236,
	237, 238, 241, 244, 245, 247, 249, 250, 253, 257,
	258, 259, 260, 261, 263, 271, 273, 279, 280, 281,
	282, 283, 284, 285, 288, 289, 290, 291, 299, 303,
	312, 313, 323, 332, 336, 186, 320, 337, 243, 216,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 207, 0, 0, 255, 0, 287, 161,
	215, 213, 309, 176, 172, 170, 160, 194, 220, 254,
	305, 248, 0, 210, 0, 0, 296, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 159, 136, 240, 297, 178, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 388,
	0, 183, 0, 0, 0, 333, 0, 0, 0, 0,
	267, 0, 301, 187, 206, 150, 203, 133, 145, 0,
	185, 239, 274, 278, 0, 0, 0, 162, 0, 276,
	252, 322, 0, 256, 275, 211, 311, 268, 321, 334,
	335, 168, 233, 328, 306, 331, 343, 146, 165, 246,
	302, 325, 293, 228, 308, 202, 292, 138, 304, 319,
	156, 286, 0, 0, 0, 140, 317, 300, 226, 199,
	200, 139, 0, 272, 169, 181, 164, 242, 314, 315,
	163, 344, 147, 330, 142, 148, 329, 235, 310, 318,
	227, 219, 141, 316, 225, 218, 205, 175, 190, 265,
	214, 266, 191, 231, 230, 232, 0, 137, 0, 298,
	326, 345, 153, 0, 0, 307, 339, 342, 0, 269,
	154, 182, 174, 264, 180, 208, 338, 340, 341, 152,
	262, 188, 234, 149, 193, 294, 204, 212, 0, 0,
	251, 277, 157, 324, 295, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 143, 209, 0, 270,
	179, 327, 0, 0, 167, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 135, 144,
	151, 158, 166, 173, 177, 184, 189, 192, 195, 196,
	197, 201, 217, 221, 222, 223, 224, 236, 237, 238,
	241, 244, 245, 247, 249, 250, 253, 257, 258, 259,
	260, 261, 263, 271, 273, 279, 280, 281, 282, 283,
	284, 285, 288, 289, 290, 291, 299, 303, 312, 313,
	323, 332, 336, 387, 320, 337, 243, 216, 0, 0,
	0, 0, 0, 0, 0, 171, 0, 0, 0, 0,
	0, 207, 0, 0, 255, 0, 287, 161, 215, 213,
	309, 176, 172, 170, 160, 194, 220, 254, 305, 248,
	0, 210, 0, 0, 296, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 159, 136, 240, 297, 178, 0, 0, 0,
	119, 120, 121, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 127, 0, 333, 0, 0, 0, 0, 267, 0,
	301, 187, 206, 150, 203, 133, 145, 0, 185, 239,
	274, 278, 0, 0, 0, 162, 0, 276, 252, 322,
	0, 256, 275, 211, 311, 268, 321, 334, 335, 168,
	233, 328, 306, 331, 343, 146, 165, 246, 302, 325,
	293, 228, 308, 202, 292, 138, 304, 319, 156, 286,
	0, 0, 0, 140, 317, 300, 226, 199, 200, 139,
	0, 272, 169, 181, 164, 242, 314, 315, 163, 344,
	147, 330, 142, 148, 329, 235, 310, 318, 227, 219,
	141, 316, 225, 218, 205, 175, 190, 265, 214, 266,
	191, 231, 230, 232, 0, 137, 0, 298, 326, 345,
	153, 0, 0, 307, 339, 342, 0, 269, 154, 182,
	174, 264, 180, 208, 338, 340, 341, 152, 262, 188,
	234, 149, 193, 294, 204, 212, 0, 0, 251, 277,
	157, 324, 295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 143, 209, 0, 270, 179, 327,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 144, 151, 158,
	166, 173, 177, 184, 189, 192, 195, 196, 197, 201,
	217, 221, 222, 223, 224, 236, 237, 238, 241, 244,
	245, 247, 249, 250, 253, 257, 258, 259, 260, 261,
	263, 271, 273, 279, 280, 281, 282, 283, 284, 285,
	288, 289, 290, 291, 299, 303, 312, 313, 323, 332,
	336, 186, 320, 337, 243, 216, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 207,
	0, 0, 255, 0, 287, 161, 215, 213, 309, 176,
	172, 170, 160, 194, 220, 254, 305, 248, 0, 210,
	0, 0, 296, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	159, 136, 240, 297, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 333, 0, 0, 0, 0, 267, 0, 301, 187,
	206, 150, 203, 133, 145, 0, 185, 239, 274, 278,
	0, 0, 0, 162, 0, 276, 252, 322, 0, 256,
	275, 211, 311, 268, 321, 334, 335, 168, 233, 328,
	306, 331, 343, 146, 165, 246, 302, 325, 293, 228,
	308, 202, 292, 138, 304, 319, 156, 286, 0, 0,
	0, 140, 317, 300, 226, 199, 200, 139, 0, 272,
	169, 181, 164, 242, 314, 315, 163, 344, 147, 330,
	142, 148, 329, 235, 310, 318, 227, 219, 141, 316,
	225, 218, 205, 175, 190, 265, 214, 266, 191, 231,
	230, 232, 0, 137, 0, 298, 326, 345, 153, 0,
	0, 307, 339, 342, 0, 269, 154, 182, 174, 264,
	180, 208, 338, 340, 341, 152, 262, 188, 234, 149,
	193, 294, 204, 212, 0, 0, 251, 277, 157, 324,
	295, 0, 0, 0, 0, 0, 913, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 132, 143, 209, 0, 270, 179, 327, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 134, 135, 144, 151, 158, 166, 173,
	177, 184, 189, 192, 195, 196, 197, 201, 217, 221,
	222, 223, 224, 236, 237, 238, 241, 244, 245, 247,
	249, 250, 253, 257, 258, 259, 260, 261, 263, 271,
	273, 279, 280, 281, 282, 283, 284, 285, 288, 289,
	290, 291, 299, 303, 312, 313, 323, 332, 336, 186,
	320, 337, 901, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 914, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 927, 930, 931, 932, 933, 934, 935, 0, 936,
	937, 938, 939, 940, 915, 916, 917, 918, 899, 900,
	928, 0, 902, 0, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 919, 920, 921, 922, 923, 924,
	925, 926, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 929,
}

var yyPact = [...]int{
	1875, -1000, -304, 1299, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1252, 843, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	341, 926, 61, 1172, 192, 96, 665, 188, 49, 18577,
	187, 35, 18965, -1000, 20, -1000, 13, 18965, 33, 18189,
	-1000, -1000, -1000, 10396, 1122, -84, -89, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 942, 1232, 1230, 1250, 649,
	1234, -1000, 8831, 8831, 174, 174, 174, 7279, -1000, -1000,
	15078, 18965, 18965, 939, 172, 185, 172, -158, -1000, -1000,
	-1000, -1000, -1000, -1000, 1172, -1000, -1000, 91, -1000, -1000,
	870, -1000, 263, 18965, -1000, 18965, 298, 1172, 78, -1000,
	-1000, -1000, 18965, 171, 665, 171, 171, 18965, -1000, 229,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18965, 1168, 402, 402,
	402, 402, 402, 402, -2, -1000, -11, 87, 85, 73,
	-15, 665, 135, -1000, 281, -1000, 74, 7, -1000, 402,
	4849, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 178,
	-1000, -1000, -1000, -1000, 18965, 17801, 146, 334, -1000, -1000,
	-1000, -1000, 672, 428, -1000, 10396, 492, 874, 874, -1000,
	-1000, 200, -1000, -1000, 11172, 11172, 11172, 11172, 11172, 11172,
	11172, 11172, 11172, 11172, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 874, 226,
	-1000, 10008, 874, 874, 874, 874, 874, 874, 874, 874,
	10396, 874, 874, 874, 874, 874, 874, 874, 874, 874,
	874, 874, 874, 874, 874, 874, 874, -1000, -1000, -1000,
	18965, -1000, 1252, -1000, 843, -1000, -1000, -1000, 1147, 10396,
	10396, 1252, -1000, 1058, 8831, -1000, -1000, 1183, -1000, -1000,
	-1000, -1000, 391, 1276, -1000, 11948, 224, 1275, 17413, -1000,
	15854, 17025, 869, 6874, -118, -1000, -1000, -1000, 326, 14690,
	-1000, -1000, -1000, 1158, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	785, 18965, -1000, -1000, 19235, 665, -1000, 919, -1000, 783,
	-1000, 905, 67, 314, 18965, 344, 665, 665, -1000, -1000,
	-1000, 1156, 292, 192, -1000, -1000, -1000, 665, -1000, 923,
	919, 1191, 1192, 322, 322, 370, 665, -1000, -1000, -1000,
	4849, 98, 136, 125, 18965, 1172, 1120, 837, 177, 18965,
	1214, 983, 18965, 665, -1000, 6064, -1000, 402, -1000, 581,
	10396, -1000, -1000, -1000, -1000, -1000, 402, 18965, 402, 18965,
	402, 402, 402, 402, 372, 397, 372, -1000, -1000, -1000,
	-1000, 4849, 4849, 18965, 4849, 4849, 18965, 4849, 4849, 397,
	-1000, -1000, -1000, 264, -1000, 981, -1000, -1000, -1000, -1000,
	18, -1000, -1000, -1000, -1000, -1000, 1299, -1000, -1000, -1000,
	-143, 10396, 10396, 10396, 10396, 567, 277, 11172, 462, 522,
	11172, 11172, 11172, 11172, 11172, 11172, 11172, 11172, 11172, 11172,
	11172, 11172, 11172, 11172, 11172, 594, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 665, -1000, 1296, 704, 704, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 11560, 7667,
	6064, 649, 781, 1252, 8831, 8831, 10396, 10396, 9607, 9219,
	8831, 1144, 352, 428, 18965, -1000, -1000, 10784, -1000, -1000,
	-1000, -1000, -1000, 590, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 18965, 18965, 8831, 8831, 8831, 8831, 8831, -1000, 817,
	-1000, -180, 14302, 1230, 649, 1183, 1205, 1291, 259, 643,
	814, -1000, 356, 1230, 13914, 804, -1000, 1183, -1000, -1000,
	-1000, 18965, -1000, -1000, 16630, -1000, -1000, 5659, 18965, 100,
	18965, -1000, 813, 1128, -1000, -1000, -1000, 1218, 13526, 18965,
	978, 816, -1000, -1000, 223, 6469, -118, -1000, 6469, 777,
	-1000, -114, -112, 8055, 237, -1000, -1000, -1000, -1000, 4039,
	12336, 625, 399, -55, -1000, -1000, -1000, 905, -1000, 905,
	905, 905, 905, -24, -24, -24, -24, -1000, -1000, -1000,
	-1000, -1000, 918, 917, -1000, 905, 905, 905, 905, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 915, 915, 915, 906,
	906, 139, -1000, 10396, 57, 18965, 1204, 513, 60, 305,
	72, -1000, 1207, 958, -1000, 292, 684, -1000, -1000, 130,
	18965, 909, -1000, 665, 665, 665, -1000, -1000, -1000, -1000,
	18965, 18965, 18965, 18965, 18965, 201, 94, 18965, 18965, 812,
	-1000, 18965, 4849, -1000, -1000, -1000, -1000, -1000, -1000, 428,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 402, 18965,
	18965, 18965, -1000, -1000, 402, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18965, -1000, 574, 18965, 18965, -1000, -1000,
	-1000, -1000, -1000, 428, 277, 304, 381, -1000, -1000, 469,
	-1000, -1000, 803, -1000, -1000, -1000, -1000, 462, 11172, 11172,
	11172, 340, 803, 2012, 563, 2059, 238, 408, 408, 242,
	242, 242, 242, 242, 384, 384, -1000, -1000, -1000, 590,
	-1000, -1000, -1000, 590, 8831, 8831, 811, 874, 218, -1000,
	942, -1000, -1000, 1230, 757, 757, 628, 685, 353, 1274,
	757, 343, 1263, 757, 757, 8831, -1000, -1000, 396, -1000,
	10396, 590, -1000, 217, -1000, 778, 806, 802, 757, 590,
	590, 757, 757, 18965, -1000, -295, -1000, -140, 236, 874,
	-1000, 16242, -1000, -1000, 1147, -1000, -1000, 1104, -1000, 1054,
	10396, 10396, 10396, -1000, -1000, -1000, 1147, 1245, -1000, 1064,
	1063, 1261, 8831, 15854, 1183, -1000, -1000, -1000, 214, 1261,
	931, 874, -1000, 18965, 15854, 15854, 15854, 15854, 15854, -1000,
	1040, 1022, -1000, 1002, 998, 1041, 18965, -1000, 761, 649,
	13526, 100, 691, 15854, 18965, -1000, -1000, 15854, 18965, 5254,
	-1000, 777, -118, -119, -1000, -1000, -1000, -1000, 428, -1000,
	673, 775, 3634, -1000, -1000, -1000, -1000, 159, -1000, -1000,
	-1000, 1192, 322, 322, 1191, -1000, 1171, -1000, 382, -63,
	-1000, -1000, -24, -24, -1000, -1000, 237, 1153, 237, 237,
	237, 573, 573, -1000, -1000, -1000, -1000, -1000, 511, -1000,
	-1000, -1000, 510, -1000, -1000, 551, 1007, 57, -1000, -1000,
	292, 570, 1126, 18965, -1000, -1000, 615, 180, 46, 66,
	-1000, -1000, -1000, -1000, 980, -1000, 619, -1000, -1000, -1000,
	759, 18965, -1000, -1000, -1000, 921, -1000, -1000, -1000, -1000,
	17, 97, 92, 176, -1000, 4849, -1000, -1000, -1000, -1000,
	372, -1000, 372, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	340, 803, 1457, -1000, 11172, 11172, -1000, -1000, 757, 757,
	8831, 6064, 1252, 1147, -1000, -1000, 181, 594, 181, 11172,
	11172, -1000, 11172, 11172, -1000, -170, 689, 320, -1000, 10396,
	538, -1000, 6064, -1000, 11172, 11172, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 184, 183, 182, 18965, -1000,
	-1000, 557, 568, 1051, 428, 428, -1000, -1000, 18965, -1000,
	-1000, -1000, -1000, 1259, 10396, -1000, 739, -1000, 4444, 1230,
	974, 18965, 874, 1299, 12737, 18965, 862, -1000, 302, 1128,
	968, 973, 1024, -1000, -1000, -1000, -1000, 1008, -1000, 996,
	-1000, -1000, -1000, -1000, -1000, 649, 1261, 15854, 860, -1000,
	860, -1000, 211, -1000, -1000, -1000, -129, -135, -1000, -1000,
	-1000, 4039, -1000, 4039, -1000, 971, 11172, -1000, -1000, -1000,
	237, 237, -1000, 313, -1000, -1000, -1000, 755, -1000, 753,
	717, 749, 23, -1000, 937, 1140, 292, 292, -1000, 457,
	-1000, 665, -1000, -1000, 18965, 48, -1000, 908, 566, -1000,
	18965, -1000, -1000, 57, 737, -1000, -176, 665, 18965, 18965,
	18965, -1000, 18965, -1000, 402, 402, -1000, 11172, 803, 803,
	-1000, -1000, 590, -1000, 1230, -1000, 590, 905, 905, -1000,
	905, 906, -1000, 905, -4, 905, -5, 590, 590, 1970,
	1937, 1906, 999, 874, -165, -1000, 428, 10396, -1000, 1724,
	949, 874, 874, 874, 730, -1000, 562, -24, -1000, -1000,
	-1000, 1257, 1246, 428, -1000, -1000, -1000, 1199, 654, 652,
	-1000, -1000, 8443, 733, 1062, 210, 730, 1252, 18965, 10396,
	-1000, -1000, 10396, 880, -1000, 10396, -1000, -1000, -1000, 1252,
	1252, 860, -1000, -1000, 251, -1000, -1000, -1000, 3634, -1000,
	-50, 1281, 803, -1000, -1000, -1000, -1000, -24, 550, -24,
	436, -1000, 419, -1000, -1000, -225, -1000, -1000, 914, 982,
	-1000, -1000, 879, -1000, -1000, -1000, 603, -1000, -1000, -1000,
	120, 18965, -1000, 6064, -1000, -1000, 875, 954, -1000, -1000,
	-1000, -1000, 803, -1000, 1147, -1000, -1000, 175, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11172, 11172, 11172, 11172,
	11172, 1230, 548, 428, 11172, 11172, 15466, 18965, 18965, 13125,
	18965, -24, -77, -1000, 10396, 10396, 1186, -1000, 874, -1000,
	916, 18965, 874, 18965, -1000, 1230, -1000, 428, 428, 18965,
	428, 1230, -1000, 319, -1000, -113, 237, -1000, 237, 600,
	592, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1216,
	18965, -1000, 18965, -1000, 715, -1000, 291, 18965, 18965, -1000,
	-1000, -1000, 778, 778, 778, 778, 112, 590, -1000, 778,
	778, 728, -1000, 728, 728, 236, -1000, -289, -1000, 1114,
	1101, 428, 672, 1280, -1000, 874, 1299, 207, 652, -1000,
	-1000, 723, -1000, 387, 1185, -1000, 1178, -1000, -1000, -1000,
	-1000, -1000, 843, 720, 873, 6064, 4039, 701, -1000, -1000,
	-1000, -1000, -1000, 590, 75, -179, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -77, 162, -1000, 1069, 1067, 1244, 18965,
	652, 18965, -1000, -1000, 547, -1000, -1000, 132, -1000, 18965,
	-1000, -1000, 921, -1000, 1049, -178, -189, 1088, 1090, 1090,
	1101, 1243, 1097, 1094, -1000, 544, 639, -1000, -1000, -1000,
	-86, 629, -176, -1000, 1003, -1000, 1083, 463, -1000, -1000,
	-1000, -1000, 543, -1000, 1242, 1241, -1000, 129, -1000, -1000,
	965, -1000, -177, -1000, 424, -1000, -1000, -1000, 523, 515,
	65, 961, -1000, 1268, -187, -1000, -1000, -1000, -1000, -1000,
	-1000, 1279, 266, 266, -190, -1000, -1000, -1000, 126, 533,
	-1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1546, 1545, 17, 69, 80, 1534, 1533, 1532, 1531,
	122, 121, 117, 1530, 1527, 1526, 1525, 1523, 1521, 1520,
	1518, 1516, 1515, 1514, 1512, 100, 1511, 1509, 1508, 1506,
	1505, 108, 105, 439, 1503, 1501, 1500, 1498, 1497, 1496,
	1494, 1493, 1492, 1487, 1486, 1485, 1484, 1481, 127, 1480,
	1476, 1475, 1474, 1473, 1472, 1471, 1470, 1468, 1467, 1466,
	96, 1465, 45, 267, 46, 55, 1464, 65, 1463, 1462,
	1461, 1459, 1455, 356, 1454, 40, 68, 79, 1453, 36,
	1452, 1451, 98, 1445, 1444, 56, 1442, 1437, 1890, 1436,
	54, 71, 12, 33, 1435, 1434, 1433, 1432, 102, 2172,
	1430, 1429, 13, 1426, 1424, 111, 1423, 72, 21, 11,
	16, 22, 1421, 76, 1420, 8, 1419, 70, 1416, 1413,
	1411, 1408, 27, 1407, 63, 81, 34, 1406, 3, 9,
	1405, 1403, 1402, 1400, 1398, 1397, 4, 1396, 1393, 1391,
	1389, 28, 1388, 24, 1387, 62, 39, 20, 7, 1386,
	1385, 19, 87, 49, 99, 1383, 1382, 1381, 676, 1380,
	48, 1377, 124, 1376, 37, 1375, 400, 576, 1374, 1373,
	1373, 1373, 1373, 41, 824, 1829, 66, 94, 1372, 1371,
	1658, 38, 64, 32, 1370, 1368, 1367, 134, 61, 44,
	659, 42, 1366, 1365, 1364, 1363, 1362, 1361, 1357, 107,
	1352, 1350, 1348, 14, 26, 82, 29, 1347, 1346, 1345,
	1344, 51, 90, 89, 86, 67, 57, 1343, 97, 84,
	31, 1340, 1338, 1336, 1335, 25, 15, 1331, 83, 77,
	43, 30, 35, 78, 1330, 23, 1328, 1325, 75, 74,
	1325, 1325, 1325, 10, 1323, 2, 0, 1317, 5, 101,
	1317, 1136, 6, 1314, 1, 1312, 1311, 73, 1309, 1308,
	1307, 1306, 135, 1757, 95, 1305, 103,
}

var yyR1 = [...]int{
	0, 260, 261, 261, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 246, 246, 246, 249, 249, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	264, 264, 82, 82, 83, 83, 145, 145, 13, 14,
	14, 154, 154, 153, 153, 153, 155, 155, 155, 155,
	190, 190, 15, 15, 15, 15, 15, 61, 61, 248,
	248, 247, 245, 245, 244, 244, 243, 23, 24, 28,
	29, 30, 251, 251, 221, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 223, 223, 222,
	222, 222, 222, 222, 222, 222, 212, 192, 192, 192,
	192, 195, 195, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 194, 194, 194, 194, 194, 196, 196, 196,
	196, 196, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 198, 198, 198,
	198, 198, 198, 198, 198, 211, 211, 199, 199, 205,
	205, 206, 206, 206, 208, 208, 209, 209, 168, 168,
	168, 201, 201, 202, 202, 207, 207, 203, 203, 203,
	204, 204, 204, 210, 210, 210, 210, 210, 200, 200,
	213, 235, 235, 234, 234, 230, 230, 230, 230, 220,
	220, 227, 227, 227, 227, 227, 227, 217, 217, 217,
	218, 218, 216, 216, 219, 219, 229, 229, 228, 214,
	214, 215, 215, 238, 238, 238, 238, 239, 253, 254,
	252, 252, 252, 252, 252, 169, 169, 169, 224, 224,
	224, 225, 225, 225, 226, 226, 226, 27, 27, 26,
	26, 25, 25, 25, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	242, 240, 240, 241, 241, 17, 22, 22, 18, 18,
	18, 18, 19, 19, 36, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 161, 161, 255, 255, 163, 163, 159, 159,
	162, 162, 160, 160, 160, 164, 164, 164, 165, 165,
	259, 259, 259, 38, 38, 40, 40, 41, 42, 42,
	185, 185, 186, 186, 43, 44, 53, 53, 53, 53,
	53, 53, 55, 55, 55, 7, 7, 7, 7, 50,
	50, 50, 6, 6, 39, 39, 46, 256, 256, 257,
	258, 258, 258, 258, 47, 20, 265, 48, 49, 49,
	60, 60, 60, 56, 56, 56, 59, 59, 59, 64,
	64, 66, 66, 66, 66, 66, 67, 67, 67, 67,
	67, 67, 63, 63, 65, 65, 65, 65, 178, 178,
	178, 177, 177, 74, 74, 75, 75, 76, 76, 77,
	77, 77, 114, 91, 91, 144, 144, 143, 143, 146,
	146, 78, 78, 78, 78, 79, 79, 80, 80, 81,
	81, 184, 184, 183, 183, 183, 182, 182, 84, 84,
	84, 86, 85, 85, 85, 85, 87, 87, 89, 89,
	88, 88, 90, 92, 92, 92, 92, 92, 93, 93,
	73, 73, 73, 73, 73, 73, 73, 73, 157, 157,
	95, 95, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 106, 106, 106, 106, 106, 106, 96, 96,
	96, 96, 96, 96, 96, 62, 62, 107, 107, 107,
	113, 108, 108, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 103, 103, 103,
	103, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	266, 266, 105, 104, 104, 104, 104, 104, 104, 104,
	58, 58, 58, 58, 58, 189, 189, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	118, 118, 57, 57, 116, 116, 117, 119, 119, 115,
	115, 115, 98, 98, 98, 98, 98, 98, 98, 98,
	100, 100, 100, 120, 120, 121, 121, 122, 122, 123,
	123, 124, 125, 125, 125, 126, 126, 126, 126, 236,
	236, 236, 236, 236, 231, 231, 231, 231, 232, 232,
	232, 68, 68, 68, 68, 70, 70, 69, 69, 51,
	51, 52, 52, 52, 71, 71, 72, 72, 72, 72,
	141, 141, 141, 127, 127, 127, 127, 132, 132, 132,
	128, 128, 130, 130, 130, 131, 131, 131, 129, 135,
	135, 137, 137, 136, 136, 134, 134, 139, 139, 138,
	138, 133, 133, 97, 97, 97, 97, 97, 142, 142,
	142, 142, 147, 147, 109, 109, 111, 111, 110, 112,
	148, 148, 151, 149, 149, 152, 152, 152, 152, 152,
	150, 150, 150, 179, 179, 179, 156, 156, 166, 166,
	167, 167, 158, 158, 170, 170, 170, 170, 170, 170,
	170, 170, 170, 170, 171, 171, 171, 172, 172, 140,
	140, 140, 140, 237, 237, 233, 175, 175, 176, 176,
	180, 180, 181, 181, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 173, 173, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 174, 174, 174, 174, 174, 174, 174,
	174, 174, 174, 262, 263, 187, 188, 188, 188,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	1, 3, 4, 3, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 3, 0,
	1, 2, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 10, 11, 11, 12, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 0, 1,
	3, 1, 2, 3, 1, 1, 1, 0, 1, 1,
	3, 2, 2, 2, 2, 4, 3, 6, 7, 5,
	5, 5, 12, 7, 5, 9, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	7, 1, 3, 8, 8, 3, 3, 5, 4, 6,
	5, 4, 3, 2, 3, 4, 3, 3, 3, 3,
	3, 3, 4, 2, 4, 4, 4, 4, 4, 5,
	7, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 7, 2, 4, 5, 4, 3, 3, 5, 2,
	3, 3, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 2, 1, 3, 1, 1, 1,
	3, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 5,
	6, 4, 4, 6, 6, 6, 8, 8, 8, 8,
	9, 8, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	0, 2, 4, 0, 9, 3, 5, 0, 3, 3,
	0, 1, 0, 2, 2, 0, 2, 2, 2, 0,
	3, 0, 3, 0, 3, 0, 4, 0, 3, 0,
	4, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -260, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -262, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 146, -29, -24, 147, -30, 149, 148, 182,
	150, 175, 70, 208, 209, 211, 212, 213, 214, -55,
	180, 181, 152, 35, 41, 32, 33, 80, 9, 306,
	177, 176, 26, -261, 410, -60, 5, -122, 16, -3,
	-48, -265, -48, -48, -48, -48, -48, -48, -221, -223,
	80, 119, 80, -61, 154, -140, -251, 100, 160, 163,
	164, 297, 153, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 151, 154, -251, 156, 268, -249, -246, 83,
	84, 85, 154, 154, 155, 156, -251, 154, -88, -180,
	-246, -174, 316, 168, 348, 349, 76, 258, 208, 222,
	216, 243, 235, 317, 350, 169, 198, 233, 236, 284,
	166, 351, 280, 263, 271, 94, 211, 293, 352, 75,
	47, 40, 178, 231, 227, 199, 353, 325, 192, 225,
	46, 28, 45, 354, 273, 248, 44, 355, 79, 321,
	275, 226, 272, 152, 356, 171, 404, 164, 282, 357,
	249, 253, 358, 285, 48, 359, 360, 361, 74, 220,
	221, 362, 206, 167, 287, 247, 165, 34, 276, 318,
	54, 186, 288, 42, 251, 41, 408, 363, 246, 242,
	49, 364, 365, 366, 367, 245, 219, 241, 204, 58,
	255, 254, 256, 193, 283, 238, 368, 369, 370, 172,
	77, 371, 228, 19, 372, 373, 200, 374, 52, 375,
	376, 291, 181, 377, 50, 37, 184, 378, 379, 380,
	381, 382, 281, 383, 274, 250, 252, 161, 188, 270,
	320, 384, 224, 385, 173, 185, 180, 292, 174, 386,
	387, 388, 389, 390, 391, 392, 212, 39, 393, 394,
	395, 396, 207, 203, 286, 295, 57, 78, 260, 397,
	218, 163, 201, 398, 209, 51, 195, 266, 205, 43,
	239, 187, 399, 400, 229, 230, 244, 217, 240, 210,
	405, 189, 182, 401, 294, 202, 261, 322, 194, 237,
	234, 196, 402, 156, 190, 191, 403, 406, 277, 267,
	278, 279, 268, 197, 232, 262, 154, 236, 284, 263,
	264, 265, 276, 277, 282, 281, 188, -259, 285, 154,
	-159, 137, 146, 273, -163, 274, 267, 268, 197, -255,
	-246, 286, 408, 269, 275, 279, 278, -180, 210, -185,
	215, -175, -246, -174, 213, -88, -53, 404, 150, -187,
	-187, -187, -108, -73, -94, 103, -99, 30, 24, -98,
	-95, -115, -112, -113, 137, 138, 140, 139, 141, 126,
	127, 134, 104, 142, -103, -101, -102, -104, 87, 86,
	95, 88, 89, 90, 91, 96, 97, 98, -175, -180,
	-110, -262, 64, 65, 307, 308, 309, 310, 315, 311,
	106, 53, 296, 305, 304, 303, 300, 301, 298, 299,
	313, 314, 159, 297, 153, 132, 306, -246, -174, 40,
	266, 266, -5, -4, -262, 6, 21, 22, -126, 18,
	17, -263, 82, -56, -66, 59, 60, -67, 22, 36,
	63, 61, -49, -65, 128, -73, -180, -65, -158, 158,
	-158, -158, -149, -190, 210, -152, 286, 285, -176, -150,
	-175, -173, 284, 236, 283, 151, 323, 102, 23, 25,
	105, 137, 17, 106, 136, 307, 146, 68, 324, 298,
	299, 296, 302, 309, 310, 297, 264, 30, 11, 326,
	26, 176, 22, 36, 130, 148, 109, 110, 179, 24,
	177, 98, 329, 20, 71, 12, 14, 330, 331, 15,
	159, 158, 121, 155, 66, 9, 142, 27, 118, 62,
	332, 29, 333, 334, 335, 336, 64, 119, 18, 300,
	301, 32, 409, 337, 315, 183, 132, 69, 55, 103,
	338, 339, 96, 340, 99, 72, 100, 16, 67, 38,
	341, 342, 343, 289, 344, 120, 149, 306, 65, 345,
	153, 265, 6, 312, 31, 175, 63, 346, 154, 108,
	313, 314, 157, 97, 5, 160, 33, 10, 70, 73,
	303, 304, 305, 53, 319, 107, 13, 347, 290, 101,
	-222, 119, -212, -215, -175, 170, -239, 166, -88, -229,
	-228, -175, -68, 76, -167, 159, 155, -167, 306, -31,
	-32, 236, 136, 81, -215, -214, -213, 170, -238, -227,
	166, 171, 161, 163, 164, 160, -216, 155, 29, -88,
	-88, 146, 148, 151, 72, -33, 194, -22, -88, -166,
	159, -246, -166, -166, -88, 143, -88, 31, -164, 119,
	13, -164, -164, -164, -164, -164, 195, 280, 195, 280,
	195, 196, 195, 196, 195, -162, -161, 271, 272, 266,
	270, -246, 297, 282, -246, 188, 154, 189, 156, -217,
	155, 34, 167, 196, 266, 191, -164, -188, -262, -176,
	157, -175, -50, -175, 87, -7, -3, -11, -10, -12,
	111, 81, 102, 100, 101, 118, -73, -96, 121, 103,
	119, 120, 105, 123, 122, 133, 126, 127, 128, 129,
	130, 131, 132, 124, 125, 136, 111, 112, 113, 114,
	115, 116, 117, -157, -262, -113, -262, 144, 145, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -262,
	143, -2, -108, -4, -262, -262, -262, -262, -262, -262,
	-262, -262, -118, -73, -262, -266, -105, -262, -266, -105,
	-266, -105, -266, -262, -266, -105, -266, -105, -266, -266,
	-105, -262, -262, -262, -262, -262, -262, -262, -187, -256,
	-257, -91, -88, -122, -3, -48, -141, 20, 32, -73,
	-123, -124, -73, -122, 55, -63, -65, -67, 59, 60,
	93, 12, -178, -177, 23, -175, 87, 143, 12, -89,
	27, -88, -75, -76, -77, -78, -91, -114, -262, 12,
	-82, -83, -88, -90, -180, 81, 210, -152, -190, -154,
	-153, 287, 289, 111, -179, -175, 87, 30, 31, 82,
	81, -88, -192, -195, -197, -196, -198, -193, -194, 233,
	234, 137, 237, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 31, 178, 229, 230, 231, 232, 249,
	250, 251, 252, 253, 254, 255, 256, 216, 235, 317,
	217, 218, 219, 220, 221, 222, 224, 225, 226, 227,
	228, -249, -246, 80, 82, 81, -199, 80, -71, 199,
	111, -88, 103, -246, -246, 31, -220, 111, -25, -249,
	80, 29, 29, -216, -216, -216, -219, -246, -219, -188,
	190, 190, 154, 154, 203, -88, 40, 81, 157, -82,
	24, 72, -88, -246, -181, -180, -173, -164, 87, -73,
	-164, -88, -164, -88, -164, -164, -164, -164, -160, 12,
	121, -218, 12, 121, -160, -188, -188, -88, -188, -188,
	-88, -188, -188, -218, -165, 119, 72, -186, 213, 247,
	405, 406, 407, -73, -73, -73, -73, -106, 96, 103,
	97, 98, -99, -107, -110, -113, 92, 121, 119, 120,
	105, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -189, -246, 87, -246,
	-98, -98, -175, -64, 22, 36, -63, -176, -181, -173,
	-60, -263, -263, -122, -63, -63, -73, -73, -115, 87,
	-63, -115, 87, -63, -63, -59, 22, 36, -116, -117,
	107, -115, -175, -180, -263, -99, -175, -175, -63, -64,
	-64, -63, -63, 81, -258, 289, 290, 409, -183, 184,
	-182, 23, -180, 87, -126, -263, -127, 27, 10, 121,
	81, 19, 81, -125, 25, 26, -126, -100, -175, 88,
	91, -74, 81, 12, -67, -88, -177, 128, -181, -88,
	-145, 184, -88, 31, 81, -84, -86, -85, -87, 62,
	66, 68, 63, 64, 65, 69, -184, 23, -75, -3,
	-262, -88, -82, -264, 81, 12, 73, -264, 81, 143,
	-152, -154, 81, 288, 290, 291, 72, 99, -73, -204,
	136, -224, -225, -226, -176, 87, 88, -212, -213, -214,
	-215, 161, 163, 164, 171, 82, -168, 96, 103, -208,
	261, -199, -199, -199, -199, -199, -203, 236, -203, -203,
	-203, 80, 80, -199, -199, -199, -199, -205, 80, -205,
	-205, -206, 80, -206, -239, -73, -235, -234, -230, -233,
	165, 94, 319, 73, -228, -125, 88, -70, 201, 111,
	202, 204, 205, 24, -237, -233, -220, -246, 87, -238,
	-229, 80, -219, -219, -219, -88, -88, -88, -88, -88,
	151, 148, 192, -88, -88, -88, -188, -164, -180, -180,
	-88, -164, -88, 87, -88, -175, 96, 97, 98, -107,
	-99, -99, -99, -62, 179, 102, -263, -263, -63, -63,
	-262, 143, -5, -126, -263, -263, 81, 73, 23, 12,
	12, -263, 12, 12, -263, -263, -63, -119, -117, 109,
	-73, -263, 143, -263, 81, 81, -263, -263, -263, -263,
	-263, -257, 408, 290, -92, 70, 158, 71, -262, -182,
	-141, 38, 46, 57, -73, -73, -124, -141, -156, 20,
	12, 53, 53, -93, 13, -65, -75, -67, 143, -93,
	-97, 31, 53, -3, -262, -262, -148, -151, -115, -76,
	-77, -77, -76, -77, 62, 62, 62, 67, 62, 67,
	62, -85, -180, -263, -263, -3, -145, 73, -75, -88,
	-75, -90, -180, 128, -153, -155, 292, 289, 295, -246,
	87, 81, -226, 111, -215, -201, 30, 96, -209, 262,
	-203, -203, -204, 31, -204, -204, -204, -211, 87, -211,
	88, 88, 82, -236, -231, -232, 32, 76, -230, -220,
	87, 37, -175, 82, 156, 207, -72, 302, 87, 83,
	72, -246, 87, 82, -143, -175, -248, 73, 190, 258,
	190, 193, 157, -188, -160, -160, -62, 102, -99, -99,
	-263, -263, -64, -176, -122, -141, -191, 137, 233, 178,
	231, 227, 247, 238, 260, 229, 261, -189, -191, -99,
	-99, -99, -99, 316, -122, 110, -73, 108, -176, -99,
	-99, 155, 155, 155, -146, -175, 39, 87, 87, 58,
	-88, -120, 14, -73, 128, -126, -147, 72, -148, -109,
	-111, -110, -262, -142, -263, -175, -146, -93, 81, 111,
	-80, -79, 72, 73, -81, 72, -79, 62, 62, -263,
	-93, -75, -93, -93, 143, 289, 293, 294, -225, -226,
	-202, 72, -99, -204, -204, -246, 137, 82, 81, 82,
	81, 82, 81, -169, 354, 103, -232, -231, -220, -220,
	88, -246, -88, -69, 199, 206, 80, 84, -88, -235,
	82, 81, -245, 319, -247, -246, -175, -175, -175, -88,
	-164, -164, -99, -263, -126, -263, -199, -199, -199, -206,
	-199, 221, -199, 221, -263, -263, 20, 20, 20, 20,
	-262, -57, 312, -73, 81, 81, -262, -262, -262, -263,
	81, 87, -203, -121, 15, 17, 28, -147, 81, -263,
	-263, 81, 53, 143, -263, -122, -151, -73, -73, 80,
	-73, -122, -93, -207, 258, 10, -203, 87, -203, 88,
	88, 354, 30, 77, 78, 79, 30, 74, 75, -144,
	80, 82, 173, -175, -244, -243, -176, 80, 73, -141,
	-203, -246, -99, -99, -99, -99, -99, -126, 87, -99,
	-99, -143, -263, -143, -143, -183, -175, -203, -129, -134,
	-162, -73, -108, 29, -111, 53, -3, -175, -109, -175,
	-126, -143, -126, -210, 161, 29, 160, -102, -204, -204,
	82, 82, 23, -143, -88, 81, 111, -143, -88, -263,
	-263, -263, -263, -58, 121, 319, -263, -263, -263, -263,
	-263, -263, -92, -132, 404, -135, 42, -136, 43, 10,
	-109, 143, 82, -200, 94, 29, 29, -3, 82, 80,
	-243, -226, 82, -263, 317, 69, 320, -129, 47, 239,
	-137, 51, -138, -133, 52, 17, -148, -175, 87, -51,
	319, -143, -248, 58, 318, 321, -130, 49, -128, 48,
	-128, -136, 17, -139, 44, 45, 87, -52, 198, 408,
	82, -245, 58, -131, 50, 72, 99, 87, 17, 17,
	166, -253, -254, 72, 319, 72, 99, 87, 87, 200,
	-254, 72, 11, 10, 320, -252, 174, 169, 172, 31,
	-252, 321, 168, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 677, 0, 416, 416, 416, 416, 416, 416, 416,
	0, 0, -2, -2, 267, 0, 36, 0, 0, 0,
	0, -2, 374, 375, 0, 377, -2, 0, 0, 386,
	1165, 1165, 1165, 0, 0, 0, 0, 1163, 53, 54,
	392, 393, 394, 1, 3, 0, 420, 685, 0, 0,
	-2, 418, 0, 0, 792, 792, 792, 0, 82, 83,
	0, 0, 0, 701, 790, 0, 790, 0, 810, 811,
	812, 102, 103, 86, -2, 107, 108, 0, 112, 274,
	268, 269, 0, 0, 101, 0, 0, 111, 37, 33,
	34, 35, 0, 788, 0, 788, 788, 0, 313, 500,
	820, 821, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156,
	1157, 1158, 1159, 1160, 1161, 1162, 0, 0, 365, 365,
	365, 365, 365, 365, 0, 323, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 342, 0, 0, 349, 365,
	1166, 371, 372, 359, 357, 354, 355, 373, 376, 0,
	381, 384, 816, 817, 0, 399, 0, 1003, 391, 404,
	405, 415, 38, 551, 510, 0, 516, 518, 0, 553,
	554, 555, 556, 557, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 583, 584, 585, 586, 662, 663,
	664, 665, 666, 667, 668, 669, 520, 521, 659, 0,
	769, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	650, 0, 620, 620, 620, 620, 620, 620, 620, 620,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 1165,
	0, 414, 677, 49, 0, 416, 421, 422, 720, 0,
	0, 677, 1164, 0, 0, -2, -2, 432, 438, 439,
	440, 441, 417, 0, 444, 448, 0, 0, 0, 793,
	0, 0, 68, 0, 1136, 773, -2, -2, 0, 0,
	818, 819, -2, 965, -2, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	0, 0, 119, 120, 0, 36, 242, 967, 117, 0,
	236, 177, 714, 0, 0, 0, 0, 0, 88, 109,
	110, 0, 219, 0, 271, 272, 273, 36, 240, 0,
	0, 0, 0, 0, 0, 234, 234, 232, 233, 98,
	1166, 0, 0, 0, 0, -2, 0, 305, 0, 0,
	0, 0, 0, 0, 312, 0, 314, 365, 316, 0,
	0, 317, 318, 319, 320, 321, 365, 0, 365, 0,
	365, 365, 365, 365, 362, 0, 362, 360, 361, 352,
	353, 1166, 1166, 0, 1166, 1166, 0, 1166, 1166, 0,
	227, 228, 229, 368, 346, 347, 350, 351, 1167, 1168,
	382, 385, 402, 400, 401, 403, 395, 396, 397, 398,
	0, 0, 0, 0, 0, 0, 514, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 538, 539, 540, 541,
	542, 543, 544, 517, 0, 531, 0, 0, 0, 573,
	574, 575, 576, 577, 578, 579, 580, 581, 0, 429,
	0, 0, 0, 677, 0, 0, 0, 0, 0, 0,
	0, 426, 0, 651, 0, 604, 612, 0, 605, 613,
	606, 614, 607, 0, 608, 615, 609, 616, 610, 611,
	617, 0, 0, 0, 429, 429, 0, 0, 39, 406,
	407, 0, 483, 685, 0, 431, 723, 0, 0, 686,
	678, 679, 682, 685, 0, 453, 442, 433, 436, 437,
	419, 0, 445, 449, 0, 451, 452, 0, 0, 66,
	0, 499, 0, 455, 457, 458, 459, 481, 0, 0,
	0, 0, 62, 64, 500, 0, 1136, 779, 0, 70,
	71, 0, 0, 0, 200, 783, 784, 785, 781, 258,
	0, 0, 188, 184, 128, 129, 130, 177, 132, 177,
	177, 177, 177, 197, 197, 197, 197, 160, 161, 162,
	163, 164, 0, 0, 147, 177, 177, 177, 177, 167,
	168, 169, 170, 171, 172, 173, 174, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 179, 179, 179, 181,
	181, 0, 37, 0, 211, 0, 682, 0, 705, 0,
	0, 97, 0, 813, 100, 219, 0, 220, 270, 0,
	0, 0, 221, 234, 234, 234, 225, 235, 226, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 308,
	789, 0, 1166, 311, 501, 822, 823, 315, 366, 367,
	322, 340, 324, 343, 325, 327, 326, 328, 365, 0,
	0, 0, 230, 231, 365, 331, 332, 333, 334, 335,
	336, 337, 338, 0, 345, 0, 0, 0, 383, 387,
	388, 389, 390, 552, 511, 512, 513, 515, 532, 0,
	534, 536, 522, 523, 547, 548, 549, 0, 0, 0,
	0, 545, 527, 0, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 569, 572, 635, 636, 0,
	570, 571, 582, 0, 0, 0, 430, 660, 0, -2,
	0, 550, 768, 685, 0, 0, 0, 0, 555, 662,
	0, 555, 662, 0, 0, 0, 427, 428, 657, 654,
	0, 0, 659, 0, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 410, 412, 0, 503, 1073,
	484, 0, 486, 487, 720, 50, 40, 0, 721, 0,
	0, 0, 0, 681, 683, 684, 720, 0, 670, 0,
	0, 508, 0, 0, 434, 46, 450, 446, 0, 508,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 488,
	0, 0, 491, 0, 0, 0, 0, 482, 0, 0,
	0, -2, 0, 0, 0, 60, 61, 0, 0, 0,
	774, 69, 0, 0, 74, 75, 775, 776, 777, 778,
	0, 104, 259, 261, 264, 265, 266, 121, 123, 124,
	125, 1084, 1118, 1004, 1002, 118, 191, 189, 0, 186,
	185, 131, 197, 197, 154, 155, 200, 0, 200, 200,
	200, 0, 0, 148, 149, 150, 151, 142, 0, 143,
	144, 145, 0, 146, 241, 0, 689, 212, 213, 215,
	219, 0, 0, 0, 237, 238, 0, 0, 0, 0,
	702, 703, 704, 791, 0, 814, 0, 115, 116, 239,
	0, 0, 222, 223, 224, 89, 279, 281, 280, 284,
	0, 0, 0, 0, 306, 1166, 310, 329, 363, 364,
	362, 344, 362, 369, 348, 379, 533, 535, 537, 524,
	545, 528, 0, 525, 0, 0, 519, 587, 0, 0,
	429, 0, 677, 720, 591, 592, 0, 0, 0, 0,
	0, 628, 0, 0, 629, 0, 677, 0, 655, 0,
	0, 603, 0, 622, 0, 0, 623, 624, 625, 626,
	627, 408, 411, 413, 463, 0, 0, 0, 0, 485,
	42, 0, 0, 0, 687, 688, 680, 41, 0, 786,
	787, 671, 672, 673, 0, 443, 454, 435, 0, 685,
	762, 0, 0, 754, 0, 0, 508, 770, 0, 456,
	477, 479, 0, 474, 489, 490, 492, 0, 494, 0,
	496, 497, 460, 461, 462, 0, 508, 0, 508, 63,
	508, 65, 0, 502, 72, 73, 0, 0, 79, 201,
	202, 0, 262, 0, 122, 193, 0, 190, 127, 187,
	200, 200, 156, 0, 157, 158, 159, 0, 175, 0,
	0, 0, 255, 84, 693, 692, 219, 219, 214, 0,
	217, 0, 815, 178, 0, 0, 715, 716, 0, 719,
	0, 113, 114, 211, 0, 467, 92, 0, 0, 0,
	0, 277, 0, 309, 365, 365, 526, 0, 546, 529,
	588, 589, 0, 661, 685, 44, 0, 177, 177, 640,
	177, 181, 643, 177, 645, 177, 648, 0, 0, 0,
	0, 0, 0, 0, 652, 602, 658, 0, 660, 0,
	0, 0, 0, 0, 0, 469, 0, 197, 725, 722,
	43, 675, 0, 509, 447, 47, 51, 0, 762, 753,
	764, 766, 0, 0, 0, 758, 0, 677, 0, 0,
	471, 478, 0, 0, 472, 0, 473, 493, 495, -2,
	677, 508, 58, 59, 0, 76, 77, 78, 260, 263,
	195, 0, 192, 152, 153, 198, 199, 197, 0, 197,
	0, 182, 0, 247, 256, 0, 690, 691, 0, 0,
	216, 218, 465, 706, 707, 708, 0, 718, 99, 210,
	0, 0, 278, 0, 90, 91, 0, 0, 283, 307,
	330, 341, 530, 590, 720, 593, 637, 197, 641, 642,
	644, 646, 647, 649, 595, 594, 0, 0, 0, 0,
	0, 685, 0, 656, 0, 0, 0, 0, 0, 483,
	0, 197, 745, 48, 0, 0, 0, 52, 0, 767,
	0, 0, 0, 0, 67, 685, 771, 772, 475, 0,
	480, 685, 57, 203, 196, 0, 200, 176, 200, 0,
	0, 257, 694, 695, 696, 697, 698, 699, 700, 0,
	0, 717, 0, 468, 93, 94, 0, 0, 0, 45,
	638, 639, 0, 0, 0, 0, 630, 0, 653, 0,
	0, 0, 505, 0, 0, 503, 470, 727, 726, 739,
	743, 676, 674, 0, 765, 0, 757, 760, 756, 759,
	55, 0, 56, 208, 0, 205, 207, 194, 165, 166,
	180, 183, 0, 0, 0, 0, 0, 0, 285, 596,
	598, 597, 599, 0, 0, 0, 601, 618, 619, 504,
	506, 507, 464, 745, 0, 738, 741, -2, 0, 0,
	755, 0, 476, 126, 0, 204, 206, 709, 466, 0,
	95, 96, 89, 600, 0, 0, 0, 732, 730, 730,
	743, 0, 747, 0, 752, 0, 763, 761, 209, 85,
	711, 0, 92, 631, 0, 634, 735, 0, 728, 731,
	729, 740, 0, 746, 0, 0, 744, 0, 712, 713,
	243, 282, 632, 724, 0, 733, 734, 742, 0, 0,
	0, 244, 245, 0, 0, 736, 737, 748, 750, 710,
	246, 0, 0, 0, 0, 248, 250, 251, 0, 0,
	249, 633, 252, 253, 254,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 410,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:395
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:400
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:401
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:405
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:436
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:442
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:446
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:450
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:455
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:459
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:465
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:471
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:477
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:486
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:490
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:494
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:517
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:525
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:537
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:545
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:555
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:562
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:574
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:596
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:602
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:606
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:610
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:614
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:619
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:620
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:624
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:628
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:638
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:643
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:647
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:659
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:663
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:673
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:679
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:693
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:697
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:701
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:711
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:721
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:727
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:734
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:742
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:753
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:762
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:766
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:772
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:777
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:782
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:788
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:793
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:799
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:805
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:812
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:819
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:826
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:833
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:844
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:850
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:854
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:864
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:868
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:872
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:877
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:887
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:908
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:912
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:923
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:928
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:951
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:962
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:973
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1178
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1183
		{
			yyVAL.literal = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1187
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1192
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1196
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1208
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1214
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1222
		{
			yyVAL.boolean = false
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.boolean = true
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1231
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1235
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1241
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.boolean = false
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1249
		{
			yyVAL.boolean = true
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1258
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1272
		{
			yyVAL.boolean = false
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.boolean = true
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1281
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1285
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.str = ""
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1298
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1302
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1307
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1315
		{
			yyVAL.colKeyOpt = colKey
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.literal = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1338
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1343
		{
			yyVAL.indexOptions = nil
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1353
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1357
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1372
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = ""
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1386
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1392
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1400
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = ""
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1456
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1466
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1478
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1488
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 243:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1498
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 244:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1502
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 245:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1506
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 246:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1510
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 247:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1516
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1538
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 255:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1555
		{
			yyVAL.boolean = true
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.boolean = true
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.boolean = false
		}
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = ""
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1576
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.str = yyDollar[1].str
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1592
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1611
		{
			yyVAL.alterOptions = nil
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1625
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1631
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1639
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1645
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1677
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 277:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1688
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 278:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1695
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1717
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1721
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 282:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1725
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 283:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1738
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1748
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 285:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1752
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 300:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1781
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1791
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 303:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1797
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 304:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1801
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1813
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1817
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1825
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1829
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1844
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1853
		{
			yyVAL.statement = &OtherRead{}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1875
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1879
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1883
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1887
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1891
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1895
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1899
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1903
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1907
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1911
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1915
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1919
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1923
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1927
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1931
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1940
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1944
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1952
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1956
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1960
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1964
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1977
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1987
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1992
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1996
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2000
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2004
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2049
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.str = "extended "
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2059
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2063
		{
			yyVAL.str = "full "
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = ""
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2093
		{
			yyVAL.showFilter = nil
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2097
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2101
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2107
		{
			yyVAL.showFilter = nil
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2117
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2141
		{
			yyVAL.statement = &Begin{}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.statement = &Begin{}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statement = &Commit{}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statement = &Rollback{}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2166
		{
			yyVAL.empty = struct{}{}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.empty = struct{}{}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2171
		{
			yyVAL.empty = struct{}{}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.empty = struct{}{}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2178
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2184
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2189
		{
			yyVAL.explainType = EmptyType
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.explainType = JSONType
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.explainType = TreeType
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.explainType = VitessType
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.explainType = TraditionalType
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.explainType = AnalyzeType
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2219
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2229
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2233
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2237
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = ""
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2254
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2260
		{
			yyVAL.statement = &OtherRead{}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2264
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2270
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2274
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2280
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2290
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2296
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2302
		{
			yyVAL.lockType = Read
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2306
		{
			yyVAL.lockType = ReadLocal
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2310
		{
			yyVAL.lockType = Write
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2326
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2330
		{
			setAllowComments(yylex, true)
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2334
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2340
		{
			yyVAL.bytes2 = nil
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2344
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2350
		{
			yyVAL.boolean = true
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			yyVAL.boolean = false
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2358
		{
			yyVAL.boolean = true
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2363
		{
			yyVAL.str = ""
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2367
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.str = SQLCacheStr
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2376
		{
			yyVAL.boolean = false
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.boolean = true
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.boolean = true
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2389
		{
			yyVAL.selectExprs = nil
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2398
		{
			yyVAL.strs = nil
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2410
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2414
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2420
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2424
		{
			yyVAL.str = SQLCacheStr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.str = DistinctStr
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = DistinctStr
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = StraightJoinHint
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2460
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2464
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2468
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2473
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2481
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2488
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2493
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2497
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2507
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2521
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2525
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 464:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2541
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2546
		{
			yyVAL.columns = nil
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2550
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2560
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2583
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2587
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2591
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2603
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2607
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2615
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2618
		{
			yyVAL.empty = struct{}{}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2620
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2623
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2627
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2631
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2644
		{
			yyVAL.joinType = NormalJoinType
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2648
		{
			yyVAL.joinType = NormalJoinType
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2652
		{
			yyVAL.joinType = NormalJoinType
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.joinType = StraightJoinType
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2664
		{
			yyVAL.joinType = LeftJoinType
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2668
		{
			yyVAL.joinType = LeftJoinType
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2672
		{
			yyVAL.joinType = RightJoinType
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2676
		{
			yyVAL.joinType = RightJoinType
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2682
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2700
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2706
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2710
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2721
		{
			yyVAL.indexHints = nil
		}
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2725
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2729
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2733
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2737
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2742
		{
			yyVAL.expr = nil
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2752
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2756
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2760
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2764
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2786
		{
			yyVAL.str = ""
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2806
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2810
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2814
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2818
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2822
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2830
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2834
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2838
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2868
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = nil
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2917
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2927
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2933
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2937
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2955
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2967
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2975
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2983
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2987
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3003
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3011
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3015
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3019
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3031
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3035
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3039
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3113
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3117
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 593:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3121
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3125
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 595:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3129
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 596:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3141
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3145
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 600:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3149
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3153
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3157
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3161
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3184
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3189
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3194
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3200
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3205
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3210
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3214
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3218
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 618:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3237
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 619:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3241
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3251
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3261
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3265
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3277
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3281
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3285
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3291
		{
			yyVAL.matchExprOption = NoOption
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3295
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3299
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 633:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3303
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3307
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3317
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3323
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3331
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3339
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3343
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3361
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3365
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3369
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3373
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.expr = nil
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3382
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3387
		{
			yyVAL.str = string("")
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3391
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3401
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3407
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3412
		{
			yyVAL.expr = nil
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3416
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3422
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3430
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3444
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3448
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3452
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3460
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			yyVAL.expr = &NullVal{}
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3470
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3488
		{
			yyVAL.exprs = nil
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3492
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = nil
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3506
		{
			yyVAL.orderBy = nil
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3510
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3516
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3520
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3526
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3531
		{
			yyVAL.orderDirection = AscOrder
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3535
		{
			yyVAL.orderDirection = AscOrder
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3539
		{
			yyVAL.orderDirection = DescOrder
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3544
		{
			yyVAL.limit = nil
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3548
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3552
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3556
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3561
		{
			yyVAL.indexOptions = nil
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3565
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3569
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3573
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3577
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3584
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3592
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3596
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3606
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3610
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = yyDollar[3].str
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3642
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = yyDollar[2].str
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = "cascaded"
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3664
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3668
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = yyDollar[3].str
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3700
		{
			yyVAL.lock = NoLock
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.lock = ForUpdateLock
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3708
		{
			yyVAL.lock = ShareModeLock
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3713
		{
			yyVAL.selectInto = nil
		}
	case 724:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3717
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3725
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3730
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3738
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = ""
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = " header"
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = ""
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = " manifest on"
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyVAL.str = " manifest off"
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3765
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.str = " overwrite on"
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = " overwrite off"
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3779
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3788
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3793
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3802
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3806
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3811
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3815
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3820
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3824
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3829
		{
			yyVAL.str = ""
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3833
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = ""
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = " optionally"
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3855
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3859
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3863
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3867
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3871
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3881
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3885
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 761:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3889
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3894
		{
			yyVAL.updateExprs = nil
		}
	case 763:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3898
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 767:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3918
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3930
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3940
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3944
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3950
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3970
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3978
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3982
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3990
		{
			yyVAL.bytes = []byte("charset")
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4005
		{
			yyVAL.expr = &Default{}
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4014
		{
			yyVAL.boolean = false
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4016
		{
			yyVAL.boolean = true
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4019
		{
			yyVAL.boolean = false
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4021
		{
			yyVAL.boolean = true
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4024
		{
			yyVAL.ignore = false
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4026
		{
			yyVAL.ignore = true
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4030
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4038
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4042
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4046
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4052
		{
			yyVAL.empty = struct{}{}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4054
		{
			yyVAL.empty = struct{}{}
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.empty = struct{}{}
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4062
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = ""
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4069
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4071
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4074
		{
			yyVAL.indexOptions = nil
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4076
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4080
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4103
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4107
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			decNesting(yylex)
		}
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4492
		{
			skipToEnd(yylex)
		}
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4497
		{
			skipToEnd(yylex)
		}
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			skipToEnd(yylex)
		}
	case 1168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
