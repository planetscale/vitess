// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
	columnTypeOptions      *ColumnTypeOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const SCHEMA = 57487
const TABLE = 57488
const INDEX = 57489
const VIEW = 57490
const TO = 57491
const IGNORE = 57492
const IF = 57493
const UNIQUE = 57494
const PRIMARY = 57495
const COLUMN = 57496
const SPATIAL = 57497
const FULLTEXT = 57498
const KEY_BLOCK_SIZE = 57499
const CHECK = 57500
const INDEXES = 57501
const ACTION = 57502
const CASCADE = 57503
const CONSTRAINT = 57504
const FOREIGN = 57505
const NO = 57506
const REFERENCES = 57507
const RESTRICT = 57508
const SHOW = 57509
const DESCRIBE = 57510
const EXPLAIN = 57511
const DATE = 57512
const ESCAPE = 57513
const REPAIR = 57514
const OPTIMIZE = 57515
const TRUNCATE = 57516
const COALESCE = 57517
const EXCHANGE = 57518
const REBUILD = 57519
const PARTITIONING = 57520
const REMOVE = 57521
const MAXVALUE = 57522
const PARTITION = 57523
const REORGANIZE = 57524
const LESS = 57525
const THAN = 57526
const PROCEDURE = 57527
const TRIGGER = 57528
const VINDEX = 57529
const VINDEXES = 57530
const DIRECTORY = 57531
const NAME = 57532
const UPGRADE = 57533
const STATUS = 57534
const VARIABLES = 57535
const WARNINGS = 57536
const CASCADED = 57537
const DEFINER = 57538
const OPTION = 57539
const SQL = 57540
const UNDEFINED = 57541
const SEQUENCE = 57542
const MERGE = 57543
const TEMPORARY = 57544
const TEMPTABLE = 57545
const INVOKER = 57546
const SECURITY = 57547
const FIRST = 57548
const AFTER = 57549
const LAST = 57550
const BEGIN = 57551
const START = 57552
const TRANSACTION = 57553
const COMMIT = 57554
const ROLLBACK = 57555
const SAVEPOINT = 57556
const RELEASE = 57557
const WORK = 57558
const BIT = 57559
const TINYINT = 57560
const SMALLINT = 57561
const MEDIUMINT = 57562
const INT = 57563
const INTEGER = 57564
const BIGINT = 57565
const INTNUM = 57566
const REAL = 57567
const DOUBLE = 57568
const FLOAT_TYPE = 57569
const DECIMAL = 57570
const NUMERIC = 57571
const TIME = 57572
const TIMESTAMP = 57573
const DATETIME = 57574
const YEAR = 57575
const CHAR = 57576
const VARCHAR = 57577
const BOOL = 57578
const CHARACTER = 57579
const VARBINARY = 57580
const NCHAR = 57581
const TEXT = 57582
const TINYTEXT = 57583
const MEDIUMTEXT = 57584
const LONGTEXT = 57585
const BLOB = 57586
const TINYBLOB = 57587
const MEDIUMBLOB = 57588
const LONGBLOB = 57589
const JSON = 57590
const ENUM = 57591
const GEOMETRY = 57592
const POINT = 57593
const LINESTRING = 57594
const POLYGON = 57595
const GEOMETRYCOLLECTION = 57596
const MULTIPOINT = 57597
const MULTILINESTRING = 57598
const MULTIPOLYGON = 57599
const NULLX = 57600
const AUTO_INCREMENT = 57601
const APPROXNUM = 57602
const SIGNED = 57603
const UNSIGNED = 57604
const ZEROFILL = 57605
const COLLATION = 57606
const DATABASES = 57607
const SCHEMAS = 57608
const TABLES = 57609
const VITESS_METADATA = 57610
const VSCHEMA = 57611
const FULL = 57612
const PROCESSLIST = 57613
const COLUMNS = 57614
const FIELDS = 57615
const ENGINES = 57616
const PLUGINS = 57617
const EXTENDED = 57618
const KEYSPACES = 57619
const VITESS_KEYSPACES = 57620
const VITESS_SHARDS = 57621
const VITESS_TABLETS = 57622
const CODE = 57623
const PRIVILEGES = 57624
const FUNCTION = 57625
const OPEN = 57626
const TRIGGERS = 57627
const NAMES = 57628
const CHARSET = 57629
const GLOBAL = 57630
const SESSION = 57631
const ISOLATION = 57632
const LEVEL = 57633
const READ = 57634
const WRITE = 57635
const ONLY = 57636
const REPEATABLE = 57637
const COMMITTED = 57638
const UNCOMMITTED = 57639
const SERIALIZABLE = 57640
const CURRENT_TIMESTAMP = 57641
const DATABASE = 57642
const CURRENT_DATE = 57643
const CURRENT_TIME = 57644
const LOCALTIME = 57645
const LOCALTIMESTAMP = 57646
const CURRENT_USER = 57647
const UTC_DATE = 57648
const UTC_TIME = 57649
const UTC_TIMESTAMP = 57650
const REPLACE = 57651
const CONVERT = 57652
const CAST = 57653
const SUBSTR = 57654
const SUBSTRING = 57655
const GROUP_CONCAT = 57656
const SEPARATOR = 57657
const TIMESTAMPADD = 57658
const TIMESTAMPDIFF = 57659
const MATCH = 57660
const AGAINST = 57661
const BOOLEAN = 57662
const LANGUAGE = 57663
const WITH = 57664
const QUERY = 57665
const EXPANSION = 57666
const WITHOUT = 57667
const VALIDATION = 57668
const UNUSED = 57669
const ARRAY = 57670
const CUME_DIST = 57671
const DESCRIPTION = 57672
const DENSE_RANK = 57673
const EMPTY = 57674
const EXCEPT = 57675
const FIRST_VALUE = 57676
const GROUPING = 57677
const GROUPS = 57678
const JSON_TABLE = 57679
const LAG = 57680
const LAST_VALUE = 57681
const LATERAL = 57682
const LEAD = 57683
const MEMBER = 57684
const NTH_VALUE = 57685
const NTILE = 57686
const OF = 57687
const OVER = 57688
const PERCENT_RANK = 57689
const RANK = 57690
const RECURSIVE = 57691
const ROW_NUMBER = 57692
const SYSTEM = 57693
const WINDOW = 57694
const ACTIVE = 57695
const ADMIN = 57696
const BUCKETS = 57697
const CLONE = 57698
const COMPONENT = 57699
const DEFINITION = 57700
const ENFORCED = 57701
const EXCLUDE = 57702
const FOLLOWING = 57703
const GEOMCOLLECTION = 57704
const GET_MASTER_PUBLIC_KEY = 57705
const HISTOGRAM = 57706
const HISTORY = 57707
const INACTIVE = 57708
const INVISIBLE = 57709
const LOCKED = 57710
const MASTER_COMPRESSION_ALGORITHMS = 57711
const MASTER_PUBLIC_KEY_PATH = 57712
const MASTER_TLS_CIPHERSUITES = 57713
const MASTER_ZSTD_COMPRESSION_LEVEL = 57714
const NESTED = 57715
const NETWORK_NAMESPACE = 57716
const NOWAIT = 57717
const NULLS = 57718
const OJ = 57719
const OLD = 57720
const OPTIONAL = 57721
const ORDINALITY = 57722
const ORGANIZATION = 57723
const OTHERS = 57724
const PATH = 57725
const PERSIST = 57726
const PERSIST_ONLY = 57727
const PRECEDING = 57728
const PRIVILEGE_CHECKS_USER = 57729
const PROCESS = 57730
const RANDOM = 57731
const REFERENCE = 57732
const REQUIRE_ROW_FORMAT = 57733
const RESOURCE = 57734
const RESPECT = 57735
const RESTART = 57736
const RETAIN = 57737
const REUSE = 57738
const ROLE = 57739
const SECONDARY = 57740
const SECONDARY_ENGINE = 57741
const SECONDARY_LOAD = 57742
const SECONDARY_UNLOAD = 57743
const SKIP = 57744
const SRID = 57745
const THREAD_PRIORITY = 57746
const TIES = 57747
const UNBOUNDED = 57748
const VCPU = 57749
const VISIBLE = 57750
const FORMAT = 57751
const TREE = 57752
const VITESS = 57753
const TRADITIONAL = 57754
const LOCAL = 57755
const LOW_PRIORITY = 57756
const NO_WRITE_TO_BINLOG = 57757
const LOGS = 57758
const ERROR = 57759
const GENERAL = 57760
const HOSTS = 57761
const OPTIMIZER_COSTS = 57762
const USER_RESOURCES = 57763
const SLOW = 57764
const CHANNEL = 57765
const RELAY = 57766
const EXPORT = 57767
const AVG_ROW_LENGTH = 57768
const CONNECTION = 57769
const CHECKSUM = 57770
const DELAY_KEY_WRITE = 57771
const ENCRYPTION = 57772
const ENGINE = 57773
const INSERT_METHOD = 57774
const MAX_ROWS = 57775
const MIN_ROWS = 57776
const PACK_KEYS = 57777
const PASSWORD = 57778
const FIXED = 57779
const DYNAMIC = 57780
const COMPRESSED = 57781
const REDUNDANT = 57782
const COMPACT = 57783
const ROW_FORMAT = 57784
const STATS_AUTO_RECALC = 57785
const STATS_PERSISTENT = 57786
const STATS_SAMPLE_PAGES = 57787
const STORAGE = 57788
const MEMORY = 57789
const DISK = 57790

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	163, 922,
	-2, 90,
	-1, 44,
	1, 111,
	466, 111,
	-2, 117,
	-1, 45,
	143, 117,
	254, 117,
	304, 117,
	-2, 324,
	-1, 52,
	34, 464,
	164, 464,
	176, 464,
	209, 478,
	210, 478,
	-2, 466,
	-1, 57,
	166, 488,
	-2, 486,
	-1, 82,
	56, 555,
	-2, 563,
	-1, 107,
	1, 112,
	466, 112,
	-2, 117,
	-1, 117,
	169, 229,
	170, 229,
	-2, 318,
	-1, 136,
	143, 117,
	254, 117,
	304, 117,
	-2, 333,
	-1, 568,
	150, 943,
	-2, 939,
	-1, 569,
	150, 944,
	-2, 940,
	-1, 587,
	56, 556,
	-2, 568,
	-1, 588,
	56, 557,
	-2, 569,
	-1, 608,
	118, 1281,
	-2, 83,
	-1, 609,
	118, 1164,
	-2, 84,
	-1, 615,
	118, 1214,
	-2, 916,
	-1, 752,
	118, 1103,
	-2, 913,
	-1, 787,
	175, 37,
	180, 37,
	-2, 240,
	-1, 866,
	1, 371,
	466, 371,
	-2, 117,
	-1, 1101,
	1, 267,
	466, 267,
	-2, 117,
	-1, 1179,
	169, 229,
	170, 229,
	-2, 318,
	-1, 1188,
	175, 38,
	180, 38,
	-2, 241,
	-1, 1395,
	150, 946,
	-2, 942,
	-1, 1487,
	74, 65,
	82, 65,
	-2, 69,
	-1, 1508,
	1, 268,
	466, 268,
	-2, 117,
	-1, 1916,
	5, 810,
	18, 810,
	20, 810,
	32, 810,
	83, 810,
	-2, 594,
	-1, 2128,
	46, 884,
	-2, 882,
}

const yyPrivate = 57344

const yyLast = 27769

var yyAct = [...]int{
	568, 2209, 2196, 1968, 2128, 1829, 1798, 2173, 2057, 2137,
	1719, 2079, 1686, 1571, 81, 3, 1896, 1004, 1505, 1897,
	1432, 1965, 527, 923, 541, 1056, 1049, 1720, 1523, 1538,
	1893, 1543, 1163, 878, 1802, 1783, 1908, 1706, 510, 1784,
	1389, 1855, 1484, 512, 1646, 1782, 1204, 613, 176, 1621,
	145, 188, 1186, 475, 188, 1545, 1297, 1776, 79, 491,
	1381, 188, 580, 756, 1569, 131, 1093, 1086, 1473, 188,
	782, 905, 1466, 589, 1059, 1054, 1434, 1079, 1042, 1077,
	32, 574, 503, 1415, 1076, 940, 514, 1158, 1358, 763,
	491, 785, 1083, 491, 188, 491, 1162, 760, 768, 1276,
	788, 1193, 1449, 1534, 783, 817, 784, 764, 1092, 1066,
	1489, 1302, 77, 610, 1090, 872, 148, 114, 175, 859,
	1178, 115, 498, 772, 108, 109, 8, 76, 1392, 1017,
	7, 6, 1821, 1820, 1600, 1524, 1018, 1263, 2081, 1843,
	1844, 1347, 941, 177, 178, 179, 1346, 1345, 1344, 1343,
	1342, 501, 1335, 502, 1429, 1430, 82, 1684, 575, 595,
	599, 110, 2125, 757, 795, 2036, 116, 2103, 177, 178,
	179, 188, 2102, 821, 2165, 1942, 597, 2052, 820, 1164,
	2053, 188, 2215, 871, 2170, 499, 188, 822, 451, 2208,
	78, 921, 84, 85, 86, 87, 88, 89, 1636, 2148,
	1548, 2199, 1969, 1588, 607, 2169, 2147, 951, 1872, 2000,
	798, 2115, 966, 965, 975, 976, 968, 969, 970, 971,
	972, 973, 974, 967, 110, 614, 977, 774, 467, 823,
	824, 825, 776, 775, 1607, 1685, 941, 468, 1606, 819,
	174, 504, 105, 1922, 182, 183, 777, 465, 1750, 1923,
	1924, 1749, 833, 834, 1751, 837, 838, 839, 840, 1842,
	1490, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 1431, 1500, 1501, 1547,
	1634, 1499, 939, 799, 835, 34, 462, 102, 70, 38,
	39, 1094, 110, 1095, 836, 473, 778, 947, 479, 103,
	874, 951, 897, 553, 898, 559, 560, 557, 558, 830,
	556, 555, 554, 891, 1336, 1337, 1338, 177, 178, 179,
	561, 562, 919, 883, 572, 105, 170, 884, 885, 886,
	885, 886, 571, 1767, 177, 178, 179, 169, 479, 1517,
	2150, 1991, 105, 489, 97, 1831, 1334, 1989, 478, 100,
	493, 487, 99, 98, 1253, 1803, 1570, 1603, 1282, 1285,
	69, 1286, 111, 1287, 1277, 452, 454, 455, 2198, 471,
	472, 480, 860, 153, 1825, 469, 470, 481, 456, 457,
	485, 484, 1826, 461, 458, 460, 466, 917, 478, 464,
	482, 947, 2166, 899, 1834, 904, 1254, 104, 1255, 103,
	1856, 918, 892, 902, 903, 479, 867, 479, 900, 901,
	1615, 842, 1283, 914, 1754, 916, 841, 1832, 1281, 1833,
	1279, 2099, 2116, 2047, 806, 1572, 804, 150, 1467, 151,
	815, 946, 943, 944, 945, 950, 952, 949, 168, 948,
	814, 1941, 797, 1858, 1549, 813, 942, 812, 1172, 173,
	811, 188, 913, 915, 816, 478, 810, 478, 809, 1280,
	808, 803, 779, 2213, 2048, 761, 2216, 873, 908, 912,
	791, 761, 1605, 2146, 797, 759, 491, 491, 491, 1490,
	104, 2185, 107, 761, 790, 1620, 881, 479, 887, 888,
	889, 890, 909, 797, 491, 491, 154, 104, 1192, 1191,
	895, 1860, 773, 1864, 601, 1859, 159, 1857, 920, 832,
	933, 797, 1862, 1835, 483, 797, 807, 1635, 805, 1594,
	1290, 1861, 927, 826, 2138, 946, 943, 944, 945, 950,
	952, 949, 476, 948, 1863, 1865, 1792, 478, 1602, 797,
	942, 1687, 1689, 1881, 1880, 1879, 771, 477, 770, 2151,
	911, 769, 1813, 870, 767, 450, 180, 1614, 1590, 2132,
	1613, 1265, 1264, 1266, 1267, 1268, 2020, 910, 989, 990,
	1764, 1759, 188, 1921, 1665, 1623, 1711, 796, 1662, 1654,
	1622, 1623, 1746, 800, 790, 864, 1622, 1580, 1495, 1070,
	1002, 1047, 882, 801, 876, 1506, 987, 977, 491, 967,
	1046, 188, 977, 188, 188, 71, 491, 1445, 146, 796,
	2211, 802, 491, 2212, 1760, 2210, 790, 793, 794, 880,
	761, 92, 936, 1005, 787, 791, 934, 935, 796, 610,
	894, 956, 954, 1331, 800, 790, 1762, 1688, 957, 1757,
	954, 1874, 896, 786, 801, 1075, 796, 2107, 957, 1043,
	796, 1758, 831, 790, 793, 794, 957, 761, 866, 1416,
	818, 787, 791, 1060, 1906, 861, 93, 862, 924, 925,
	863, 906, 1278, 1303, 796, 177, 178, 179, 1096, 1383,
	1169, 937, 1589, 958, 1020, 1022, 1024, 1026, 1028, 1030,
	1031, 1021, 1023, 1040, 1027, 1029, 865, 1032, 966, 965,
	975, 976, 968, 969, 970, 971, 972, 973, 974, 967,
	1765, 1763, 977, 989, 990, 1058, 1582, 989, 990, 504,
	968, 969, 970, 971, 972, 973, 974, 967, 1015, 1416,
	977, 1672, 879, 1587, 1048, 1384, 1585, 177, 178, 179,
	1586, 614, 965, 975, 976, 968, 969, 970, 971, 972,
	973, 974, 967, 806, 804, 977, 188, 1647, 1052, 1055,
	1154, 970, 971, 972, 973, 974, 967, 2200, 1926, 977,
	1165, 1166, 1167, 1168, 2190, 147, 152, 149, 155, 156,
	157, 158, 160, 161, 162, 163, 491, 907, 1188, 1304,
	1660, 164, 165, 166, 167, 2201, 1197, 1772, 1659, 1063,
	1201, 2217, 2191, 491, 491, 1365, 491, 172, 491, 491,
	69, 491, 491, 491, 491, 491, 491, 1761, 1883, 1363,
	1364, 1362, 1361, 955, 956, 954, 491, 955, 956, 954,
	188, 1237, 1353, 1355, 1356, 1876, 569, 2035, 1450, 1451,
	1272, 957, 1198, 2034, 1354, 957, 1250, 1177, 1196, 1184,
	1206, 1947, 1207, 1780, 1209, 1211, 1582, 491, 1215, 1217,
	1219, 1221, 1223, 2203, 1447, 188, 1884, 1232, 1233, 2218,
	955, 956, 954, 188, 1270, 1296, 1091, 188, 1153, 1661,
	1584, 1779, 1552, 1170, 1171, 1273, 1160, 189, 957, 1234,
	189, 1161, 1258, 188, 1257, 492, 1195, 189, 1175, 1271,
	188, 1174, 1173, 766, 1256, 189, 1187, 188, 188, 491,
	491, 491, 188, 491, 491, 188, 491, 491, 1260, 1781,
	955, 956, 954, 1248, 1299, 1307, 492, 1446, 1242, 492,
	189, 492, 1311, 1269, 1313, 1314, 1315, 1316, 957, 1318,
	188, 1240, 1241, 955, 956, 954, 1239, 1246, 1247, 1639,
	1640, 1641, 955, 956, 954, 1305, 1306, 1238, 1194, 1194,
	600, 957, 1235, 955, 956, 954, 605, 1213, 2202, 1310,
	957, 177, 178, 179, 2192, 1753, 1317, 1259, 1382, 2181,
	2070, 957, 2032, 110, 2008, 1359, 1291, 1385, 177, 178,
	179, 776, 775, 530, 529, 532, 533, 534, 535, 1929,
	1885, 491, 531, 1789, 536, 1309, 1777, 189, 177, 178,
	179, 1630, 1564, 1598, 177, 178, 179, 189, 1562, 177,
	178, 179, 189, 1251, 1597, 1300, 1393, 1261, 1386, 1387,
	1249, 1399, 1341, 1245, 491, 491, 1244, 1243, 1828, 1954,
	2184, 1954, 2144, 1954, 2133, 188, 78, 1360, 602, 603,
	1395, 1954, 584, 584, 1404, 1407, 2097, 1301, 491, 1394,
	1417, 1954, 2105, 1439, 2096, 188, 2050, 584, 491, 1005,
	1582, 584, 188, 1967, 188, 2018, 584, 1423, 1424, 1954,
	1959, 34, 188, 188, 1939, 1938, 1935, 1936, 1805, 491,
	1935, 1934, 491, 1491, 1393, 1791, 1485, 1458, 584, 1491,
	1321, 1322, 1323, 491, 1325, 1326, 1714, 1328, 1329, 1440,
	1490, 1822, 610, 1157, 1807, 610, 1396, 80, 1395, 1452,
	1800, 1801, 1470, 584, 584, 953, 584, 1464, 1514, 1715,
	1348, 1349, 1350, 1351, 1460, 1400, 1401, 1157, 1156, 1406,
	1409, 1410, 1102, 1101, 34, 1525, 1526, 1527, 1905, 2015,
	1894, 1583, 1509, 953, 1707, 1492, 69, 1707, 491, 1905,
	1469, 1492, 188, 1494, 1422, 491, 1510, 1425, 1426, 1490,
	1740, 1561, 1563, 1513, 1459, 1488, 2106, 1462, 1490, 1954,
	2037, 1937, 1540, 1458, 491, 1402, 1403, 1470, 1498, 1546,
	491, 34, 2086, 1677, 1197, 1493, 1197, 1518, 1497, 1519,
	1520, 1521, 1522, 1496, 1581, 1676, 1582, 1512, 1228, 1511,
	1458, 1470, 1582, 1565, 1448, 1530, 1531, 1532, 1533, 69,
	577, 1427, 504, 1470, 614, 1339, 1905, 614, 2038, 2039,
	2040, 1289, 2187, 1088, 491, 781, 1382, 780, 2136, 69,
	2059, 1382, 1382, 1786, 1458, 1966, 1578, 1568, 1579, 2026,
	1159, 1541, 1539, 1536, 1537, 1827, 1229, 1230, 1231, 2041,
	1553, 1551, 1557, 1558, 1559, 1550, 69, 1830, 1575, 584,
	1535, 1529, 1528, 1504, 798, 1275, 188, 1189, 1185, 1574,
	188, 188, 188, 188, 188, 1541, 1155, 189, 1573, 1418,
	188, 188, 188, 188, 1577, 69, 1593, 1591, 94, 1592,
	1785, 1595, 1596, 188, 2042, 2043, 2060, 174, 1225, 1164,
	188, 2205, 492, 492, 492, 966, 965, 975, 976, 968,
	969, 970, 971, 972, 973, 974, 967, 1909, 1910, 977,
	492, 492, 1542, 188, 491, 2197, 1912, 1894, 1796, 1625,
	1626, 2168, 1795, 1794, 1628, 1786, 1555, 799, 1332, 1292,
	1731, 1629, 1846, 1226, 1227, 1732, 1915, 1194, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 1601, 1914,
	977, 583, 966, 965, 975, 976, 968, 969, 970, 971,
	972, 973, 974, 967, 1618, 1729, 977, 1359, 1728, 1733,
	1730, 1479, 1480, 961, 1727, 964, 1886, 1696, 1057, 2019,
	1957, 978, 979, 980, 981, 982, 983, 984, 189, 962,
	963, 960, 966, 965, 975, 976, 968, 969, 970, 971,
	972, 973, 974, 967, 1705, 1633, 977, 1704, 188, 2156,
	2153, 2189, 2172, 2174, 492, 2179, 188, 189, 2180, 189,
	189, 2129, 492, 96, 2127, 1288, 590, 570, 492, 1360,
	101, 1642, 1475, 1478, 1479, 1480, 1476, 1694, 1477, 1481,
	188, 591, 1656, 1790, 828, 1695, 827, 1693, 1050, 1978,
	1785, 188, 188, 188, 188, 188, 1841, 575, 1655, 1700,
	1051, 1716, 926, 188, 1061, 1062, 593, 188, 592, 590,
	188, 188, 1815, 181, 188, 188, 188, 171, 1671, 1412,
	184, 1738, 1709, 1712, 591, 1043, 1683, 1752, 1814, 111,
	2084, 1931, 1691, 1721, 1413, 1930, 1576, 1203, 1202, 1651,
	1652, 1190, 2013, 1443, 1699, 1771, 1560, 587, 588, 593,
	1295, 592, 1741, 1708, 1710, 1638, 1743, 1450, 1451, 2098,
	1669, 2054, 1770, 1299, 1773, 1774, 1775, 1483, 1768, 1769,
	1734, 1723, 1724, 1703, 1726, 1722, 188, 581, 1725, 1755,
	1739, 1702, 1744, 578, 579, 1747, 2194, 491, 2193, 2177,
	2157, 2012, 1953, 491, 1566, 582, 491, 1546, 1197, 80,
	2011, 1756, 1808, 491, 1889, 1707, 1666, 1778, 2207, 2206,
	2207, 1663, 189, 1673, 1071, 1819, 1064, 2130, 1928, 1444,
	1787, 577, 78, 188, 1810, 83, 75, 1, 463, 1428,
	1041, 474, 1818, 2195, 1804, 1262, 1252, 1970, 2056, 1960,
	1544, 188, 492, 1697, 1698, 1055, 789, 1817, 1395, 136,
	1809, 1177, 1507, 1508, 2140, 91, 754, 1394, 90, 492,
	492, 792, 492, 893, 492, 492, 1567, 492, 492, 492,
	492, 492, 492, 1788, 2051, 491, 1816, 1766, 1516, 1108,
	1106, 1382, 492, 1107, 1105, 1837, 189, 1110, 1836, 1475,
	1478, 1479, 1480, 1476, 1109, 1477, 1481, 1104, 1852, 1909,
	1910, 1853, 1333, 1854, 488, 1482, 1097, 1065, 1845, 829,
	453, 491, 1940, 492, 1851, 1873, 1839, 1330, 1599, 1840,
	459, 189, 188, 1867, 985, 1701, 1748, 611, 604, 189,
	1900, 2178, 491, 189, 2154, 2152, 2126, 2080, 491, 491,
	2155, 1866, 2124, 2188, 2171, 1895, 1515, 1442, 1053, 189,
	2010, 1888, 1670, 1014, 1414, 1852, 189, 1882, 1080, 513,
	1898, 188, 1438, 189, 189, 492, 492, 492, 189, 492,
	492, 189, 492, 492, 1352, 528, 525, 1904, 1721, 526,
	1453, 1713, 1913, 959, 511, 1903, 505, 1072, 1474, 1472,
	1471, 1293, 1084, 1911, 1907, 1892, 189, 1917, 1078, 1919,
	1457, 1920, 1604, 1918, 1824, 938, 586, 1932, 1933, 500,
	95, 1948, 1411, 188, 2114, 188, 188, 188, 1637, 1999,
	585, 491, 60, 37, 495, 1925, 2164, 929, 594, 31,
	30, 29, 28, 23, 188, 22, 21, 20, 19, 25,
	1944, 18, 17, 1943, 16, 106, 1961, 47, 44, 42,
	113, 1971, 491, 491, 491, 112, 188, 492, 45, 1958,
	1546, 41, 868, 27, 26, 1979, 15, 1956, 14, 1875,
	13, 1964, 12, 11, 1963, 10, 9, 5, 4, 932,
	24, 1003, 2, 0, 1955, 0, 0, 0, 0, 0,
	492, 492, 0, 1976, 1977, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 1890, 0, 0, 0, 0, 0,
	1987, 1945, 1946, 0, 492, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 492, 0, 0, 0, 189, 0,
	189, 0, 0, 2009, 0, 0, 1982, 0, 189, 189,
	0, 0, 0, 0, 0, 492, 2014, 0, 492, 0,
	2022, 0, 0, 2023, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 2028, 1984, 1985, 0, 1986, 0, 1721,
	1988, 2030, 1990, 0, 491, 491, 2029, 0, 0, 0,
	2045, 0, 0, 2031, 0, 2033, 0, 491, 0, 0,
	491, 2044, 0, 2055, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 2063, 540, 0, 0,
	0, 0, 0, 2058, 492, 0, 0, 0, 189, 0,
	0, 492, 0, 0, 0, 491, 491, 491, 188, 2061,
	0, 2073, 2075, 2076, 2062, 0, 0, 0, 0, 491,
	492, 491, 0, 0, 0, 0, 492, 491, 2077, 0,
	2083, 0, 2087, 2092, 0, 2085, 2089, 2078, 187, 0,
	1898, 486, 0, 0, 1898, 0, 0, 0, 187, 188,
	2094, 0, 2095, 2001, 0, 0, 187, 0, 0, 0,
	491, 188, 2069, 0, 2101, 0, 2108, 1997, 0, 2104,
	492, 0, 598, 598, 169, 0, 504, 0, 0, 0,
	0, 187, 0, 2024, 0, 2091, 2025, 0, 0, 2027,
	2123, 2093, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 0, 0, 2131, 0, 0, 0, 491, 491, 0,
	153, 1898, 189, 2134, 0, 2139, 189, 189, 189, 189,
	189, 0, 0, 0, 0, 0, 189, 189, 189, 189,
	2058, 2141, 0, 491, 0, 0, 2149, 491, 0, 189,
	0, 2158, 0, 2163, 2160, 0, 189, 0, 0, 0,
	2167, 0, 0, 0, 0, 0, 0, 2176, 187, 2175,
	0, 0, 0, 2003, 150, 1996, 151, 0, 187, 189,
	492, 2186, 0, 187, 1721, 168, 966, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 2082, 504,
	977, 0, 0, 0, 0, 0, 0, 2002, 2204, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2214,
	966, 965, 975, 976, 968, 969, 970, 971, 972, 973,
	974, 967, 0, 0, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 154, 0, 0, 0, 1995, 0, 0,
	0, 0, 0, 159, 966, 965, 975, 976, 968, 969,
	970, 971, 972, 973, 974, 967, 0, 1994, 977, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 966, 965, 975, 976, 968, 969,
	970, 971, 972, 973, 974, 967, 0, 0, 977, 0,
	0, 0, 0, 1397, 1398, 0, 189, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 539, 189, 189, 189,
	189, 189, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 189, 0, 0, 189, 189, 0, 0,
	189, 189, 189, 0, 0, 0, 0, 1441, 0, 0,
	0, 0, 0, 0, 0, 146, 966, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 0, 0,
	977, 0, 0, 0, 0, 490, 966, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 0, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 612, 0, 0, 758,
	0, 765, 0, 492, 0, 0, 0, 0, 0, 492,
	0, 0, 492, 0, 0, 0, 0, 0, 0, 492,
	34, 35, 36, 70, 38, 39, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 189,
	74, 1648, 0, 0, 0, 40, 66, 67, 0, 64,
	68, 0, 0, 0, 0, 0, 65, 189, 0, 0,
	0, 966, 965, 975, 976, 968, 969, 970, 971, 972,
	973, 974, 967, 0, 0, 977, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 53, 0, 0, 0, 0,
	0, 492, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 0, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 0, 0, 0, 0, 492, 164, 165,
	166, 167, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 0,
	0, 0, 0, 0, 492, 492, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 43, 46, 49,
	48, 51, 0, 63, 598, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	187, 1087, 0, 0, 0, 0, 0, 0, 52, 73,
	72, 0, 0, 61, 62, 50, 966, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 0, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 189, 189, 189, 0, 0, 0, 492, 0, 0,
	54, 55, 0, 56, 57, 58, 59, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 492, 492,
	492, 0, 189, 0, 0, 1649, 0, 0, 0, 1650,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 1658, 0, 0, 0, 0, 1664, 0, 0, 1667,
	1668, 0, 0, 0, 0, 0, 0, 1674, 0, 1675,
	0, 0, 1678, 1679, 1680, 1681, 1682, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1692, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	71, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1736, 1737, 0, 0, 0, 0,
	0, 0, 612, 612, 612, 0, 1200, 0, 0, 0,
	492, 492, 0, 0, 0, 0, 0, 0, 0, 0,
	928, 930, 0, 492, 0, 0, 492, 0, 0, 0,
	0, 1200, 1200, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 492, 492, 492, 189, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 492, 0, 492, 0, 0,
	187, 0, 0, 492, 1298, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 189, 0, 187, 0, 0,
	0, 0, 0, 0, 1319, 1320, 492, 189, 0, 187,
	0, 0, 187, 0, 1068, 0, 0, 0, 0, 0,
	0, 0, 612, 0, 0, 0, 0, 0, 1098, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 1850, 492, 492, 1357, 0, 0, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1379, 1380, 0, 0, 0, 0, 0, 0, 492,
	0, 0, 0, 492, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	1298, 0, 0, 0, 598, 598, 0, 0, 598, 598,
	598, 0, 0, 0, 1200, 1419, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 598, 598, 598, 598, 1916, 0,
	0, 0, 1436, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 1298, 187,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 758, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1199, 0, 0, 0, 1205,
	1205, 0, 1205, 0, 1205, 1205, 0, 1214, 1205, 1205,
	1205, 1205, 1205, 0, 0, 0, 0, 0, 0, 0,
	1199, 1199, 758, 0, 0, 1044, 0, 0, 0, 0,
	0, 1981, 0, 0, 0, 1983, 0, 0, 0, 187,
	542, 33, 0, 0, 0, 0, 1992, 1993, 0, 0,
	0, 0, 0, 1274, 0, 0, 0, 0, 0, 0,
	0, 0, 2007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 33, 0, 186, 0, 0, 2016,
	2017, 0, 0, 2021, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 573, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 612, 612, 612, 0, 612,
	612, 0, 612, 612, 0, 0, 0, 0, 576, 762,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 187, 187, 187,
	187, 187, 0, 0, 0, 0, 0, 187, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 2074, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 858, 1388, 0, 612,
	0, 0, 0, 0, 0, 0, 869, 0, 0, 0,
	187, 875, 0, 1199, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1420, 1421, 0, 0, 0, 0, 0, 0, 0, 1643,
	1644, 1645, 0, 0, 2110, 2111, 2112, 2113, 0, 2117,
	0, 2118, 2119, 2120, 1454, 2121, 2122, 0, 0, 0,
	0, 0, 0, 0, 1068, 0, 0, 612, 598, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 612, 0, 0, 612, 598,
	0, 169, 0, 0, 2145, 0, 0, 0, 0, 758,
	0, 0, 1797, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 1436, 0, 0, 111, 0, 133, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 187, 0, 0,
	0, 2182, 2183, 0, 0, 0, 0, 1200, 187, 187,
	187, 187, 187, 0, 765, 0, 0, 0, 143, 0,
	1735, 1556, 0, 132, 187, 0, 0, 187, 187, 0,
	0, 187, 1745, 1298, 0, 0, 0, 0, 0, 0,
	758, 150, 0, 151, 0, 0, 765, 0, 1180, 1181,
	142, 141, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	758, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	137, 1182, 144, 0, 1179, 0, 138, 139, 1200, 0,
	154, 0, 0, 0, 0, 0, 0, 0, 1298, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 877, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 922, 922, 922, 0,
	0, 0, 0, 1847, 1848, 0, 0, 0, 0, 0,
	1632, 598, 0, 0, 0, 0, 33, 0, 1868, 1869,
	0, 1870, 1871, 0, 0, 0, 0, 0, 0, 986,
	988, 0, 1877, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	1001, 0, 0, 0, 1006, 1007, 1008, 1009, 1010, 1011,
	1012, 1013, 1200, 1016, 1019, 1019, 1019, 1025, 1019, 1019,
	1025, 1019, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 0,
	0, 0, 0, 140, 1045, 0, 0, 33, 187, 0,
	0, 0, 0, 0, 0, 134, 1074, 0, 135, 1085,
	0, 0, 0, 0, 0, 1927, 0, 0, 0, 0,
	0, 0, 0, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1199, 0, 0, 0,
	187, 0, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 1200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 147,
	152, 149, 155, 156, 157, 158, 160, 161, 162, 163,
	0, 0, 0, 0, 0, 164, 165, 166, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 0, 1199, 0, 1806,
	0, 0, 1799, 0, 0, 0, 0, 612, 0, 1811,
	0, 1103, 0, 1200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 612, 0, 0, 0, 1236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2064, 2065, 2066, 2067, 2068, 0, 0, 0, 2071, 2072,
	0, 0, 0, 0, 0, 1436, 0, 1205, 0, 0,
	1284, 0, 0, 0, 0, 0, 0, 0, 1294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 612, 0,
	0, 1199, 0, 0, 1902, 1205, 0, 0, 1308, 0,
	0, 0, 0, 0, 0, 1312, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1324, 187, 0,
	1327, 0, 0, 0, 0, 0, 0, 0, 0, 922,
	922, 922, 0, 922, 922, 0, 922, 922, 0, 0,
	169, 0, 0, 0, 0, 1085, 0, 0, 0, 0,
	0, 1176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 758, 0, 0,
	1199, 0, 0, 0, 0, 0, 0, 0, 1200, 0,
	0, 2161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 1972, 1973,
	1974, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	169, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 151, 0, 0, 0, 0, 1180, 1181, 142,
	141, 168, 0, 0, 0, 111, 0, 133, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1461, 0, 0, 0, 0, 0, 0, 1465, 0, 1468,
	0, 0, 1199, 0, 0, 0, 0, 143, 1487, 137,
	1182, 144, 132, 1179, 0, 138, 139, 0, 0, 154,
	0, 0, 1486, 0, 0, 0, 0, 0, 0, 159,
	150, 0, 151, 0, 0, 0, 0, 120, 121, 142,
	141, 168, 0, 0, 0, 0, 0, 0, 0, 0,
	1799, 2046, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 0, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1554, 0, 137,
	118, 144, 125, 117, 0, 138, 139, 0, 0, 154,
	0, 1799, 1799, 1799, 0, 0, 0, 0, 0, 159,
	126, 0, 0, 0, 0, 2088, 0, 2090, 0, 0,
	0, 0, 0, 1799, 129, 127, 122, 123, 124, 128,
	0, 146, 0, 0, 119, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 135, 0, 0,
	0, 1085, 0, 612, 612, 1608, 1609, 1610, 1611, 1612,
	0, 146, 0, 0, 0, 1616, 1617, 1085, 1619, 0,
	0, 0, 0, 0, 0, 0, 0, 1199, 1624, 2159,
	0, 0, 0, 1799, 1125, 1627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 140, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 147, 152,
	149, 155, 156, 157, 158, 160, 161, 162, 163, 0,
	0, 0, 0, 0, 164, 165, 166, 167, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1653, 0, 0, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1690, 0, 0, 0, 147, 152,
	149, 155, 156, 157, 158, 160, 161, 162, 163, 0,
	1126, 0, 0, 0, 164, 165, 166, 167, 0, 0,
	1081, 0, 0, 0, 0, 0, 0, 1717, 1718, 0,
	0, 1081, 1081, 1081, 1081, 1081, 1742, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1486, 0, 0,
	1081, 0, 0, 0, 1081, 0, 0, 1139, 1142, 1143,
	1144, 1145, 1146, 1147, 0, 1148, 1149, 1150, 1151, 1152,
	1127, 1128, 1129, 1130, 1111, 1112, 1140, 0, 1114, 0,
	1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 0, 0,
	0, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1141, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1887, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1899, 0, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1949, 0,
	1950, 1951, 1952, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1962,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1975, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1998, 0, 0, 0, 0, 0, 0,
	2004, 2005, 2006, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1899, 0, 33, 0,
	1899, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2109, 0, 0, 0,
	0, 0, 0, 0, 0, 33, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 736, 723, 33,
	2135, 672, 739, 643, 661, 748, 663, 666, 706, 623,
	685, 330, 658, 0, 647, 619, 654, 620, 645, 674,
	241, 678, 642, 725, 688, 738, 288, 0, 625, 648,
	344, 708, 381, 227, 297, 295, 409, 251, 244, 240,
	226, 272, 303, 342, 399, 336, 745, 292, 695, 0,
	390, 315, 0, 0, 0, 676, 728, 683, 719, 671,
	707, 632, 694, 740, 659, 703, 741, 278, 225, 195,
	327, 391, 254, 0, 0, 0, 177, 178, 179, 0,
	2142, 2143, 0, 0, 0, 0, 0, 217, 0, 223,
	700, 735, 656, 702, 237, 276, 243, 236, 406, 705,
	751, 618, 697, 0, 621, 624, 747, 731, 651, 652,
	0, 0, 0, 0, 0, 0, 0, 675, 684, 716,
	669, 0, 0, 0, 0, 0, 0, 0, 0, 649,
	0, 693, 0, 0, 0, 628, 622, 0, 0, 0,
	0, 673, 0, 0, 0, 631, 0, 650, 717, 0,
	616, 262, 626, 316, 721, 730, 670, 436, 734, 668,
	667, 737, 712, 629, 727, 662, 287, 627, 284, 191,
	205, 0, 660, 326, 365, 371, 726, 646, 655, 228,
	653, 369, 340, 423, 213, 252, 362, 345, 367, 692,
	710, 368, 293, 411, 357, 421, 437, 438, 235, 320,
	429, 403, 434, 446, 206, 232, 334, 396, 426, 387,
	313, 407, 408, 283, 386, 260, 194, 291, 198, 398,
	419, 218, 379, 0, 0, 0, 200, 417, 395, 310,
	280, 281, 199, 0, 361, 239, 258, 230, 329, 414,
	415, 229, 448, 208, 433, 202, 209, 432, 322, 410,
	418, 311, 302, 201, 416, 309, 301, 286, 249, 268,
	355, 296, 356, 269, 318, 317, 319, 0, 196, 0,
	392, 427, 449, 215, 641, 722, 405, 442, 445, 0,
	358, 216, 259, 248, 354, 257, 289, 441, 443, 444,
	214, 352, 265, 333, 422, 321, 210, 271, 388, 285,
	294, 714, 750, 339, 370, 219, 425, 389, 636, 640,
	634, 635, 686, 687, 637, 742, 743, 744, 718, 630,
	0, 638, 639, 0, 724, 732, 733, 691, 190, 203,
	290, 746, 359, 255, 447, 431, 428, 617, 633, 234,
	644, 0, 0, 657, 664, 665, 677, 679, 680, 681,
	682, 690, 698, 699, 701, 709, 711, 713, 715, 720,
	729, 749, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 377, 378, 382, 383, 384,
	385, 393, 397, 412, 413, 424, 435, 439, 264, 420,
	440, 0, 298, 689, 696, 300, 250, 266, 275, 704,
	430, 394, 207, 366, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 343, 346, 261, 242, 222, 363,
	220, 380, 400, 401, 402, 404, 312, 238, 736, 723,
	0, 0, 672, 739, 643, 661, 748, 663, 666, 706,
	623, 685, 330, 658, 0, 647, 619, 654, 620, 645,
	674, 241, 678, 642, 725, 688, 738, 288, 0, 625,
	648, 344, 708, 381, 227, 297, 295, 409, 251, 244,
	240, 226, 272, 303, 342, 399, 336, 745, 292, 695,
	0, 390, 315, 0, 0, 0, 676, 728, 683, 719,
	671, 707, 632, 694, 740, 659, 703, 741, 278, 225,
	195, 327, 391, 254, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 700, 735, 656, 702, 237, 276, 243, 236, 406,
	705, 751, 618, 697, 0, 621, 624, 747, 731, 651,
	652, 0, 0, 0, 0, 0, 0, 0, 675, 684,
	716, 669, 0, 0, 0, 0, 0, 0, 1891, 0,
	649, 0, 693, 0, 0, 0, 628, 622, 0, 0,
	0, 0, 673, 0, 0, 0, 631, 0, 650, 717,
	0, 616, 262, 626, 316, 721, 730, 670, 436, 734,
	668, 667, 737, 712, 629, 727, 662, 287, 627, 284,
	191, 205, 0, 660, 326, 365, 371, 726, 646, 655,
	228, 653, 369, 340, 423, 213, 252, 362, 345, 367,
	692, 710, 368, 293, 411, 357, 421, 437, 438, 235,
	320, 429, 403, 434, 446, 206, 232, 334, 396, 426,
	387, 313, 407, 408, 283, 386, 260, 194, 291, 198,
	398, 419, 218, 379, 0, 0, 0, 200, 417, 395,
	310, 280, 281, 199, 0, 361, 239, 258, 230, 329,
	414, 415, 229, 448, 208, 433, 202, 209, 432, 322,
	410, 418, 311, 302, 201, 416, 309, 301, 286, 249,
	268, 355, 296, 356, 269, 318, 317, 319, 0, 196,
	0, 392, 427, 449, 215, 641, 722, 405, 442, 445,
	0, 358, 216, 259, 248, 354, 257, 289, 441, 443,
	444, 214, 352, 265, 333, 422, 321, 210, 271, 388,
	285, 294, 714, 750, 339, 370, 219, 425, 389, 636,
	640, 634, 635, 686, 687, 637, 742, 743, 744, 718,
	630, 0, 638, 639, 0, 724, 732, 733, 691, 190,
	203, 290, 746, 359, 255, 447, 431, 428, 617, 633,
	234, 644, 0, 0, 657, 664, 665, 677, 679, 680,
	681, 682, 690, 698, 699, 701, 709, 711, 713, 715,
	720, 729, 749, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 377, 378, 382, 383,
	384, 385, 393, 397, 412, 413, 424, 435, 439, 264,
	420, 440, 0, 298, 689, 696, 300, 250, 266, 275,
	704, 430, 394, 207, 366, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 343, 346, 261, 242, 222,
	363, 220, 380, 400, 401, 402, 404, 312, 238, 736,
	723, 0, 0, 672, 739, 643, 661, 748, 663, 666,
	706, 623, 685, 330, 658, 0, 647, 619, 654, 620,
	645, 674, 241, 678, 642, 725, 688, 738, 288, 0,
	625, 648, 344, 708, 381, 227, 297, 295, 409, 251,
	244, 240, 226, 272, 303, 342, 399, 336, 745, 292,
	695, 0, 390, 315, 0, 0, 0, 676, 728, 683,
	719, 671, 707, 632, 694, 740, 659, 703, 741, 278,
	225, 195, 327, 391, 254, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 223, 700, 735, 656, 702, 237, 276, 243, 236,
	406, 705, 751, 618, 697, 0, 621, 624, 747, 731,
	651, 652, 0, 0, 0, 0, 0, 0, 0, 675,
	684, 716, 669, 0, 0, 0, 0, 0, 0, 1746,
	0, 649, 0, 693, 0, 0, 0, 628, 622, 0,
	0, 0, 0, 673, 0, 0, 0, 631, 0, 650,
	717, 0, 616, 262, 626, 316, 721, 730, 670, 436,
	734, 668, 667, 737, 712, 629, 727, 662, 287, 627,
	284, 191, 205, 0, 660, 326, 365, 371, 726, 646,
	655, 228, 653, 369, 340, 423, 213, 252, 362, 345,
	367, 692, 710, 368, 293, 411, 357, 421, 437, 438,
	235, 320, 429, 403, 434, 446, 206, 232, 334, 396,
	426, 387, 313, 407, 408, 283, 386, 260, 194, 291,
	198, 398, 419, 218, 379, 0, 0, 0, 200, 417,
	395, 310, 280, 281, 199, 0, 361, 239, 258, 230,
	329, 414, 415, 229, 448, 208, 433, 202, 209, 432,
	322, 410, 418, 311, 302, 201, 416, 309, 301, 286,
	249, 268, 355, 296, 356, 269, 318, 317, 319, 0,
	196, 0, 392, 427, 449, 215, 641, 722, 405, 442,
	445, 0, 358, 216, 259, 248, 354, 257, 289, 441,
	443, 444, 214, 352, 265, 333, 422, 321, 210, 271,
	388, 285, 294, 714, 750, 339, 370, 219, 425, 389,
	636, 640, 634, 635, 686, 687, 637, 742, 743, 744,
	718, 630, 0, 638, 639, 0, 724, 732, 733, 691,
	190, 203, 290, 746, 359, 255, 447, 431, 428, 617,
	633, 234, 644, 0, 0, 657, 664, 665, 677, 679,
	680, 681, 682, 690, 698, 699, 701, 709, 711, 713,
	715, 720, 729, 749, 192, 193, 204, 212, 221, 233,
	246, 253, 263, 267, 270, 273, 274, 277, 282, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 377, 378, 382,
	383, 384, 385, 393, 397, 412, 413, 424, 435, 439,
	264, 420, 440, 0, 298, 689, 696, 300, 250, 266,
	275, 704, 430, 394, 207, 366, 256, 197, 224, 211,
	231, 245, 247, 279, 308, 314, 343, 346, 261, 242,
	222, 363, 220, 380, 400, 401, 402, 404, 312, 238,
	736, 723, 0, 0, 672, 739, 643, 661, 748, 663,
	666, 706, 623, 685, 330, 658, 0, 647, 619, 654,
	620, 645, 674, 241, 678, 642, 725, 688, 738, 288,
	0, 625, 648, 344, 708, 381, 227, 297, 295, 409,
	251, 244, 240, 226, 272, 303, 342, 399, 336, 745,
	292, 695, 0, 390, 315, 0, 0, 0, 676, 728,
	683, 719, 671, 707, 632, 694, 740, 659, 703, 741,
	278, 225, 195, 327, 391, 254, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 700, 735, 656, 702, 237, 276, 243,
	236, 406, 705, 751, 618, 697, 0, 621, 624, 747,
	731, 651, 652, 0, 0, 0, 0, 0, 0, 0,
	675, 684, 716, 669, 0, 0, 0, 0, 0, 0,
	1463, 0, 649, 0, 693, 0, 0, 0, 628, 622,
	0, 0, 0, 0, 673, 0, 0, 0, 631, 0,
	650, 717, 0, 616, 262, 626, 316, 721, 730, 670,
	436, 734, 668, 667, 737, 712, 629, 727, 662, 287,
	627, 284, 191, 205, 0, 660, 326, 365, 371, 726,
	646, 655, 228, 653, 369, 340, 423, 213, 252, 362,
	345, 367, 692, 710, 368, 293, 411, 357, 421, 437,
	438, 235, 320, 429, 403, 434, 446, 206, 232, 334,
	396, 426, 387, 313, 407, 408, 283, 386, 260, 194,
	291, 198, 398, 419, 218, 379, 0, 0, 0, 200,
	417, 395, 310, 280, 281, 199, 0, 361, 239, 258,
	230, 329, 414, 415, 229, 448, 208, 433, 202, 209,
	432, 322, 410, 418, 311, 302, 201, 416, 309, 301,
	286, 249, 268, 355, 296, 356, 269, 318, 317, 319,
	0, 196, 0, 392, 427, 449, 215, 641, 722, 405,
	442, 445, 0, 358, 216, 259, 248, 354, 257, 289,
	441, 443, 444, 214, 352, 265, 333, 422, 321, 210,
	271, 388, 285, 294, 714, 750, 339, 370, 219, 425,
	389, 636, 640, 634, 635, 686, 687, 637, 742, 743,
	744, 718, 630, 0, 638, 639, 0, 724, 732, 733,
	691, 190, 203, 290, 746, 359, 255, 447, 431, 428,
	617, 633, 234, 644, 0, 0, 657, 664, 665, 677,
	679, 680, 681, 682, 690, 698, 699, 701, 709, 711,
	713, 715, 720, 729, 749, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 377, 378,
	382, 383, 384, 385, 393, 397, 412, 413, 424, 435,
	439, 264, 420, 440, 0, 298, 689, 696, 300, 250,
	266, 275, 704, 430, 394, 207, 366, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 343, 346, 261,
	242, 222, 363, 220, 380, 400, 401, 402, 404, 312,
	238, 736, 723, 0, 0, 672, 739, 643, 661, 748,
	663, 666, 706, 623, 685, 330, 658, 0, 647, 619,
	654, 620, 645, 674, 241, 678, 642, 725, 688, 738,
	288, 0, 625, 648, 344, 708, 381, 227, 297, 295,
	409, 251, 244, 240, 226, 272, 303, 342, 399, 336,
	745, 292, 695, 0, 390, 315, 0, 0, 0, 676,
	728, 683, 719, 671, 707, 632, 694, 740, 659, 703,
	741, 278, 225, 195, 327, 391, 254, 69, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 223, 700, 735, 656, 702, 237, 276,
	243, 236, 406, 705, 751, 618, 697, 0, 621, 624,
	747, 731, 651, 652, 0, 0, 0, 0, 0, 0,
	0, 675, 684, 716, 669, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 0, 693, 0, 0, 0, 628,
	622, 0, 0, 0, 0, 673, 0, 0, 0, 631,
	0, 650, 717, 0, 616, 262, 626, 316, 721, 730,
	670, 436, 734, 668, 667, 737, 712, 629, 727, 662,
	287, 627, 284, 191, 205, 0, 660, 326, 365, 371,
	726, 646, 655, 228, 653, 369, 340, 423, 213, 252,
	362, 345, 367, 692, 710, 368, 293, 411, 357, 421,
	437, 438, 235, 320, 429, 403, 434, 446, 206, 232,
	334, 396, 426, 387, 313, 407, 408, 283, 386, 260,
	194, 291, 198, 398, 419, 218, 379, 0, 0, 0,
	200, 417, 395, 310, 280, 281, 199, 0, 361, 239,
	258, 230, 329, 414, 415, 229, 448, 208, 433, 202,
	209, 432, 322, 410, 418, 311, 302, 201, 416, 309,
	301, 286, 249, 268, 355, 296, 356, 269, 318, 317,
	319, 0, 196, 0, 392, 427, 449, 215, 641, 722,
	405, 442, 445, 0, 358, 216, 259, 248, 354, 257,
	289, 441, 443, 444, 214, 352, 265, 333, 422, 321,
	210, 271, 388, 285, 294, 714, 750, 339, 370, 219,
	425, 389, 636, 640, 634, 635, 686, 687, 637, 742,
	743, 744, 718, 630, 0, 638, 639, 0, 724, 732,
	733, 691, 190, 203, 290, 746, 359, 255, 447, 431,
	428, 617, 633, 234, 644, 0, 0, 657, 664, 665,
	677, 679, 680, 681, 682, 690, 698, 699, 701, 709,
	711, 713, 715, 720, 729, 749, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 377,
	378, 382, 383, 384, 385, 393, 397, 412, 413, 424,
	435, 439, 264, 420, 440, 0, 298, 689, 696, 300,
	250, 266, 275, 704, 430, 394, 207, 366, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 343, 346,
	261, 242, 222, 363, 220, 380, 400, 401, 402, 404,
	312, 238, 736, 723, 0, 0, 672, 739, 643, 661,
	748, 663, 666, 706, 623, 685, 330, 658, 0, 647,
	619, 654, 620, 645, 674, 241, 678, 642, 725, 688,
	738, 288, 0, 625, 648, 344, 708, 381, 227, 297,
	295, 409, 251, 244, 240, 226, 272, 303, 342, 399,
	336, 745, 292, 695, 0, 390, 315, 0, 0, 0,
	676, 728, 683, 719, 671, 707, 632, 694, 740, 659,
	703, 741, 278, 225, 195, 327, 391, 254, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 700, 735, 656, 702, 237,
	276, 243, 236, 406, 705, 751, 618, 697, 0, 621,
	624, 747, 731, 651, 652, 0, 0, 0, 0, 0,
	0, 0, 675, 684, 716, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 649, 0, 693, 0, 0, 0,
	628, 622, 0, 0, 0, 0, 673, 0, 0, 0,
	631, 0, 650, 717, 0, 616, 262, 626, 316, 721,
	730, 670, 436, 734, 668, 667, 737, 712, 629, 727,
	662, 287, 627, 284, 191, 205, 0, 660, 326, 365,
	371, 726, 646, 655, 228, 653, 369, 340, 423, 213,
	252, 362, 345, 367, 692, 710, 368, 293, 411, 357,
	421, 437, 438, 235, 320, 429, 403, 434, 446, 206,
	232, 334, 396, 426, 387, 313, 407, 408, 283, 386,
	260, 194, 291, 198, 398, 419, 218, 379, 0, 0,
	0, 200, 417, 395, 310, 280, 281, 199, 0, 361,
	239, 258, 230, 329, 414, 415, 229, 448, 208, 433,
	202, 209, 432, 322, 410, 418, 311, 302, 201, 416,
	309, 301, 286, 249, 268, 355, 296, 356, 269, 318,
	317, 319, 0, 196, 0, 392, 427, 449, 215, 641,
	722, 405, 442, 445, 0, 358, 216, 259, 248, 354,
	257, 289, 441, 443, 444, 214, 352, 265, 333, 422,
	321, 210, 271, 388, 285, 294, 714, 750, 339, 370,
	219, 425, 389, 636, 640, 634, 635, 686, 687, 637,
	742, 743, 744, 718, 630, 0, 638, 639, 0, 724,
	732, 733, 691, 190, 203, 290, 746, 359, 255, 447,
	431, 428, 617, 633, 234, 644, 0, 0, 657, 664,
	665, 677, 679, 680, 681, 682, 690, 698, 699, 701,
	709, 711, 713, 715, 720, 729, 749, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	377, 378, 382, 383, 384, 385, 393, 397, 412, 413,
	424, 435, 439, 264, 420, 440, 0, 298, 689, 696,
	300, 250, 266, 275, 704, 430, 394, 207, 366, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 343,
	346, 261, 242, 222, 363, 220, 380, 400, 401, 402,
	404, 312, 238, 736, 723, 0, 0, 672, 739, 643,
	661, 748, 663, 666, 706, 623, 685, 330, 658, 0,
	647, 619, 654, 620, 645, 674, 241, 678, 642, 725,
	688, 738, 288, 0, 625, 648, 344, 708, 381, 227,
	297, 295, 409, 251, 244, 240, 226, 272, 303, 342,
	399, 336, 745, 292, 695, 0, 390, 315, 0, 0,
	0, 676, 728, 683, 719, 671, 707, 632, 694, 740,
	659, 703, 741, 278, 225, 195, 327, 391, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 700, 735, 656, 702,
	237, 276, 243, 236, 406, 705, 751, 618, 697, 0,
	621, 624, 747, 731, 651, 652, 0, 0, 0, 0,
	0, 0, 0, 675, 684, 716, 669, 0, 0, 0,
	0, 0, 0, 0, 0, 649, 0, 693, 0, 0,
	0, 628, 622, 0, 0, 0, 0, 673, 0, 0,
	0, 631, 0, 650, 717, 0, 616, 262, 626, 316,
	721, 730, 670, 436, 734, 668, 667, 737, 712, 629,
	727, 662, 287, 627, 284, 191, 205, 0, 660, 326,
	365, 371, 726, 646, 655, 228, 653, 369, 340, 423,
	213, 252, 362, 345, 367, 692, 710, 368, 293, 411,
	357, 421, 437, 438, 235, 320, 429, 403, 434, 446,
	206, 232, 334, 396, 426, 387, 313, 407, 408, 283,
	386, 260, 194, 291, 198, 398, 419, 218, 379, 0,
	0, 0, 200, 417, 395, 310, 280, 281, 199, 0,
	361, 239, 258, 230, 329, 414, 415, 229, 448, 208,
	433, 202, 753, 432, 322, 410, 418, 311, 302, 201,
	416, 309, 301, 286, 249, 268, 355, 296, 356, 269,
	318, 317, 319, 0, 196, 0, 392, 427, 449, 215,
	641, 722, 405, 442, 445, 0, 358, 216, 259, 248,
	354, 257, 289, 441, 443, 444, 214, 352, 265, 333,
	422, 615, 752, 609, 608, 285, 294, 714, 750, 339,
	370, 219, 425, 389, 636, 640, 634, 635, 686, 687,
	637, 742, 743, 744, 718, 630, 0, 638, 639, 0,
	724, 732, 733, 691, 190, 203, 290, 746, 359, 255,
	447, 431, 428, 617, 633, 234, 644, 0, 0, 657,
	664, 665, 677, 679, 680, 681, 682, 690, 698, 699,
	701, 709, 711, 713, 715, 720, 729, 749, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 377, 378, 382, 383, 384, 385, 393, 397, 412,
	413, 424, 435, 439, 264, 420, 440, 0, 298, 689,
	696, 300, 250, 266, 275, 704, 430, 394, 207, 366,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	343, 346, 261, 242, 222, 363, 220, 380, 400, 401,
	402, 404, 312, 238, 736, 723, 0, 0, 672, 739,
	643, 661, 748, 663, 666, 706, 623, 685, 330, 658,
	0, 647, 619, 654, 620, 645, 674, 241, 678, 642,
	725, 688, 738, 288, 0, 625, 648, 344, 708, 381,
	227, 297, 295, 409, 251, 244, 240, 226, 272, 303,
	342, 399, 336, 745, 292, 695, 0, 390, 315, 0,
	0, 0, 676, 728, 683, 719, 671, 707, 632, 694,
	740, 659, 703, 741, 278, 225, 195, 327, 391, 254,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 223, 700, 735, 656,
	702, 237, 276, 243, 236, 406, 705, 751, 618, 697,
	0, 621, 624, 747, 731, 651, 652, 0, 0, 0,
	0, 0, 0, 0, 675, 684, 716, 669, 0, 0,
	0, 0, 0, 0, 0, 0, 649, 0, 693, 0,
	0, 0, 628, 622, 0, 0, 0, 0, 673, 0,
	0, 0, 631, 0, 650, 717, 0, 616, 262, 626,
	316, 721, 730, 670, 436, 734, 668, 667, 737, 712,
	629, 727, 662, 287, 627, 284, 191, 205, 0, 660,
	326, 365, 371, 726, 646, 655, 228, 653, 369, 340,
	423, 213, 252, 362, 345, 367, 692, 710, 368, 293,
	411, 357, 421, 437, 438, 235, 320, 429, 403, 434,
	446, 206, 232, 334, 396, 426, 387, 313, 407, 408,
	283, 386, 260, 194, 291, 198, 398, 1089, 218, 379,
	0, 0, 0, 200, 417, 395, 310, 280, 281, 199,
	0, 361, 239, 258, 230, 329, 414, 415, 229, 448,
	208, 433, 202, 753, 432, 322, 410, 418, 311, 302,
	201, 416, 309, 301, 286, 249, 268, 355, 296, 356,
	269, 318, 317, 319, 0, 196, 0, 392, 427, 449,
	215, 641, 722, 405, 442, 445, 0, 358, 216, 259,
	248, 354, 257, 289, 441, 443, 444, 214, 352, 265,
	333, 422, 615, 752, 609, 608, 285, 294, 714, 750,
	339, 370, 219, 425, 389, 636, 640, 634, 635, 686,
	687, 637, 742, 743, 744, 718, 630, 0, 638, 639,
	0, 724, 732, 733, 691, 190, 203, 290, 746, 359,
	255, 447, 431, 428, 617, 633, 234, 644, 0, 0,
	657, 664, 665, 677, 679, 680, 681, 682, 690, 698,
	699, 701, 709, 711, 713, 715, 720, 729, 749, 192,
	193, 204, 212, 221, 233, 246, 253, 263, 267, 270,
	273, 274, 277, 282, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 377, 378, 382, 383, 384, 385, 393, 397,
	412, 413, 424, 435, 439, 264, 420, 440, 0, 298,
	689, 696, 300, 250, 266, 275, 704, 430, 394, 207,
	366, 256, 197, 224, 211, 231, 245, 247, 279, 308,
	314, 343, 346, 261, 242, 222, 363, 220, 380, 400,
	401, 402, 404, 312, 238, 736, 723, 0, 0, 672,
	739, 643, 661, 748, 663, 666, 706, 623, 685, 330,
	658, 0, 647, 619, 654, 620, 645, 674, 241, 678,
	642, 725, 688, 738, 288, 0, 625, 648, 344, 708,
	381, 227, 297, 295, 409, 251, 244, 240, 226, 272,
	303, 342, 399, 336, 745, 292, 695, 0, 390, 315,
	0, 0, 0, 676, 728, 683, 719, 671, 707, 632,
	694, 740, 659, 703, 741, 278, 225, 195, 327, 391,
	254, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 700, 735,
	656, 702, 237, 276, 243, 236, 406, 705, 751, 618,
	697, 0, 621, 624, 747, 731, 651, 652, 0, 0,
	0, 0, 0, 0, 0, 675, 684, 716, 669, 0,
	0, 0, 0, 0, 0, 0, 0, 649, 0, 693,
	0, 0, 0, 628, 622, 0, 0, 0, 0, 673,
	0, 0, 0, 631, 0, 650, 717, 0, 616, 262,
	626, 316, 721, 730, 670, 436, 734, 668, 667, 737,
	712, 629, 727, 662, 287, 627, 284, 191, 205, 0,
	660, 326, 365, 371, 726, 646, 655, 228, 653, 369,
	340, 423, 213, 252, 362, 345, 367, 692, 710, 368,
	293, 411, 357, 421, 437, 438, 235, 320, 429, 403,
	434, 446, 206, 232, 334, 396, 426, 387, 313, 407,
	408, 283, 386, 260, 194, 291, 198, 398, 606, 218,
	379, 0, 0, 0, 200, 417, 395, 310, 280, 281,
	199, 0, 361, 239, 258, 230, 329, 414, 415, 229,
	448, 208, 433, 202, 753, 432, 322, 410, 418, 311,
	302, 201, 416, 309, 301, 286, 249, 268, 355, 296,
	356, 269, 318, 317, 319, 0, 196, 0, 392, 427,
	449, 215, 641, 722, 405, 442, 445, 0, 358, 216,
	259, 248, 354, 257, 289, 441, 443, 444, 214, 352,
	265, 333, 422, 615, 752, 609, 608, 285, 294, 714,
	750, 339, 370, 219, 425, 389, 636, 640, 634, 635,
	686, 687, 637, 742, 743, 744, 718, 630, 0, 638,
	639, 0, 724, 732, 733, 691, 190, 203, 290, 746,
	359, 255, 447, 431, 428, 617, 633, 234, 644, 0,
	0, 657, 664, 665, 677, 679, 680, 681, 682, 690,
	698, 699, 701, 709, 711, 713, 715, 720, 729, 749,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 377, 378, 382, 383, 384, 385, 393,
	397, 412, 413, 424, 435, 439, 264, 420, 440, 0,
	298, 689, 696, 300, 250, 266, 275, 704, 430, 394,
	207, 366, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 343, 346, 261, 242, 222, 363, 220, 380,
	400, 401, 402, 404, 312, 238, 330, 0, 0, 1390,
	0, 509, 0, 0, 0, 241, 0, 508, 0, 0,
	0, 288, 0, 0, 1391, 344, 0, 381, 227, 297,
	295, 409, 251, 244, 240, 226, 272, 303, 342, 399,
	336, 552, 292, 0, 0, 390, 315, 0, 0, 0,
	0, 0, 543, 544, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 391, 254, 69, 0,
	0, 177, 178, 179, 530, 529, 532, 533, 534, 535,
	0, 0, 217, 531, 223, 536, 537, 538, 0, 237,
	276, 243, 236, 406, 0, 0, 0, 506, 523, 0,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	520, 521, 596, 0, 0, 0, 566, 0, 522, 0,
	0, 515, 516, 518, 517, 519, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 565,
	0, 0, 436, 0, 0, 563, 0, 0, 0, 0,
	0, 287, 0, 284, 191, 205, 0, 0, 326, 365,
	371, 0, 0, 0, 228, 0, 369, 340, 423, 213,
	252, 362, 345, 367, 0, 0, 368, 293, 411, 357,
	421, 437, 438, 235, 320, 429, 403, 434, 446, 206,
	232, 334, 396, 426, 387, 313, 407, 408, 283, 386,
	260, 194, 291, 198, 398, 419, 218, 379, 0, 0,
	0, 200, 417, 395, 310, 280, 281, 199, 0, 361,
	239, 258, 230, 329, 414, 415, 229, 448, 208, 433,
	202, 209, 432, 322, 410, 418, 311, 302, 201, 416,
	309, 301, 286, 249, 268, 355, 296, 356, 269, 318,
	317, 319, 0, 196, 0, 392, 427, 449, 215, 0,
	0, 405, 442, 445, 0, 358, 216, 259, 248, 354,
	257, 289, 441, 443, 444, 214, 352, 265, 333, 422,
	321, 210, 271, 388, 285, 294, 0, 0, 339, 370,
	219, 425, 389, 553, 564, 559, 560, 557, 558, 0,
	556, 555, 554, 567, 545, 546, 547, 548, 550, 0,
	561, 562, 549, 190, 203, 290, 0, 359, 255, 447,
	431, 428, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	377, 378, 382, 383, 384, 385, 393, 397, 412, 413,
	424, 435, 439, 264, 420, 440, 0, 298, 0, 0,
	300, 250, 266, 275, 0, 430, 394, 207, 366, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 343,
	346, 261, 242, 222, 363, 220, 380, 400, 401, 402,
	404, 312, 238, 330, 0, 0, 0, 0, 509, 0,
	0, 0, 241, 0, 508, 0, 0, 0, 288, 0,
	0, 0, 344, 0, 381, 227, 297, 295, 409, 251,
	244, 240, 226, 272, 303, 342, 399, 336, 552, 292,
	0, 0, 390, 315, 0, 0, 0, 0, 0, 543,
	544, 0, 0, 0, 0, 0, 0, 1502, 0, 278,
	225, 195, 327, 391, 254, 69, 0, 0, 177, 178,
	179, 530, 529, 532, 533, 534, 535, 0, 0, 217,
	531, 223, 536, 537, 538, 1503, 237, 276, 243, 236,
	406, 0, 0, 0, 506, 523, 0, 551, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 520, 521, 0,
	0, 0, 0, 566, 0, 522, 0, 0, 515, 516,
	518, 517, 519, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 316, 565, 0, 0, 436,
	0, 0, 563, 0, 0, 0, 0, 0, 287, 0,
	284, 191, 205, 0, 0, 326, 365, 371, 0, 0,
	0, 228, 0, 369, 340, 423, 213, 252, 362, 345,
	367, 0, 0, 368, 293, 411, 357, 421, 437, 438,
	235, 320, 429, 403, 434, 446, 206, 232, 334, 396,
	426, 387, 313, 407, 408, 283, 386, 260, 194, 291,
	198, 398, 419, 218, 379, 0, 0, 0, 200, 417,
	395, 310, 280, 281, 199, 0, 361, 239, 258, 230,
	329, 414, 415, 229, 448, 208, 433, 202, 209, 432,
	322, 410, 418, 311, 302, 201, 416, 309, 301, 286,
	249, 268, 355, 296, 356, 269, 318, 317, 319, 0,
	196, 0, 392, 427, 449, 215, 0, 0, 405, 442,
	445, 0, 358, 216, 259, 248, 354, 257, 289, 441,
	443, 444, 214, 352, 265, 333, 422, 321, 210, 271,
	388, 285, 294, 0, 0, 339, 370, 219, 425, 389,
	553, 564, 559, 560, 557, 558, 0, 556, 555, 554,
	567, 545, 546, 547, 548, 550, 0, 561, 562, 549,
	190, 203, 290, 0, 359, 255, 447, 431, 428, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 204, 212, 221, 233,
	246, 253, 263, 267, 270, 273, 274, 277, 282, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 377, 378, 382,
	383, 384, 385, 393, 397, 412, 413, 424, 435, 439,
	264, 420, 440, 0, 298, 0, 0, 300, 250, 266,
	275, 0, 430, 394, 207, 366, 256, 197, 224, 211,
	231, 245, 247, 279, 308, 314, 343, 346, 261, 242,
	222, 363, 220, 380, 400, 401, 402, 404, 312, 238,
	330, 0, 0, 0, 0, 509, 0, 0, 0, 241,
	0, 508, 0, 0, 0, 288, 0, 0, 0, 344,
	0, 381, 227, 297, 295, 409, 251, 244, 240, 226,
	272, 303, 342, 399, 336, 552, 292, 0, 0, 390,
	315, 0, 0, 0, 0, 0, 543, 544, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 225, 195, 327,
	391, 254, 69, 0, 584, 177, 178, 179, 530, 529,
	532, 533, 534, 535, 0, 0, 217, 531, 223, 536,
	537, 538, 0, 237, 276, 243, 236, 406, 0, 0,
	0, 506, 523, 0, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 520, 521, 0, 0, 0, 0,
	566, 0, 522, 0, 0, 515, 516, 518, 517, 519,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 316, 565, 0, 0, 436, 0, 0, 563,
	0, 0, 0, 0, 0, 287, 0, 284, 191, 205,
	0, 0, 326, 365, 371, 0, 0, 0, 228, 0,
	369, 340, 423, 213, 252, 362, 345, 367, 0, 0,
	368, 293, 411, 357, 421, 437, 438, 235, 320, 429,
	403, 434, 446, 206, 232, 334, 396, 426, 387, 313,
	407, 408, 283, 386, 260, 194, 291, 198, 398, 419,
	218, 379, 0, 0, 0, 200, 417, 395, 310, 280,
	281, 199, 0, 361, 239, 258, 230, 329, 414, 415,
	229, 448, 208, 433, 202, 209, 432, 322, 410, 418,
	311, 302, 201, 416, 309, 301, 286, 249, 268, 355,
	296, 356, 269, 318, 317, 319, 0, 196, 0, 392,
	427, 449, 215, 0, 0, 405, 442, 445, 0, 358,
	216, 259, 248, 354, 257, 289, 441, 443, 444, 214,
	352, 265, 333, 422, 321, 210, 271, 388, 285, 294,
	0, 0, 339, 370, 219, 425, 389, 553, 564, 559,
	560, 557, 558, 0, 556, 555, 554, 567, 545, 546,
	547, 548, 550, 0, 561, 562, 549, 190, 203, 290,
	0, 359, 255, 447, 431, 428, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 377, 378, 382, 383, 384, 385,
	393, 397, 412, 413, 424, 435, 439, 264, 420, 440,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 430,
	394, 207, 366, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 343, 346, 261, 242, 222, 363, 220,
	380, 400, 401, 402, 404, 312, 238, 330, 0, 0,
	0, 0, 509, 0, 0, 0, 241, 0, 508, 0,
	0, 0, 288, 0, 0, 0, 344, 0, 381, 227,
	297, 295, 409, 251, 244, 240, 226, 272, 303, 342,
	399, 336, 552, 292, 0, 0, 390, 315, 0, 0,
	0, 0, 0, 543, 544, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 391, 254, 69,
	0, 0, 177, 178, 179, 530, 529, 532, 533, 534,
	535, 0, 0, 217, 531, 223, 536, 537, 538, 0,
	237, 276, 243, 236, 406, 0, 0, 0, 506, 523,
	0, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 520, 521, 596, 0, 0, 0, 566, 0, 522,
	0, 0, 515, 516, 518, 517, 519, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	565, 0, 0, 436, 0, 0, 563, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	365, 371, 0, 0, 0, 228, 0, 369, 340, 423,
	213, 252, 362, 345, 367, 0, 0, 368, 293, 411,
	357, 421, 437, 438, 235, 320, 429, 403, 434, 446,
	206, 232, 334, 396, 426, 387, 313, 407, 408, 283,
	386, 260, 194, 291, 198, 398, 419, 218, 379, 0,
	0, 0, 200, 417, 395, 310, 280, 281, 199, 0,
	361, 239, 258, 230, 329, 414, 415, 229, 448, 208,
	433, 202, 209, 432, 322, 410, 418, 311, 302, 201,
	416, 309, 301, 286, 249, 268, 355, 296, 356, 269,
	318, 317, 319, 0, 196, 0, 392, 427, 449, 215,
	0, 0, 405, 442, 445, 0, 358, 216, 259, 248,
	354, 257, 289, 441, 443, 444, 214, 352, 265, 333,
	422, 321, 210, 271, 388, 285, 294, 0, 0, 339,
	370, 219, 425, 389, 553, 564, 559, 560, 557, 558,
	0, 556, 555, 554, 567, 545, 546, 547, 548, 550,
	0, 561, 562, 549, 190, 203, 290, 0, 359, 255,
	447, 431, 428, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 377, 378, 382, 383, 384, 385, 393, 397, 412,
	413, 424, 435, 439, 264, 420, 440, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 430, 394, 207, 366,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	343, 346, 261, 242, 222, 363, 220, 380, 400, 401,
	402, 404, 312, 238, 330, 0, 0, 0, 0, 509,
	0, 0, 0, 241, 0, 508, 0, 0, 0, 288,
	0, 0, 0, 344, 0, 381, 227, 297, 295, 409,
	251, 244, 240, 226, 272, 303, 342, 399, 336, 552,
	292, 0, 0, 390, 315, 0, 0, 0, 0, 0,
	543, 544, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 391, 254, 69, 0, 0, 177,
	178, 179, 530, 1408, 532, 533, 534, 535, 0, 0,
	217, 531, 223, 536, 537, 538, 0, 237, 276, 243,
	236, 406, 0, 0, 0, 506, 523, 0, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 520, 521,
	596, 0, 0, 0, 566, 0, 522, 0, 0, 515,
	516, 518, 517, 519, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 565, 0, 0,
	436, 0, 0, 563, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 365, 371, 0,
	0, 0, 228, 0, 369, 340, 423, 213, 252, 362,
	345, 367, 0, 0, 368, 293, 411, 357, 421, 437,
	438, 235, 320, 429, 403, 434, 446, 206, 232, 334,
	396, 426, 387, 313, 407, 408, 283, 386, 260, 194,
	291, 198, 398, 419, 218, 379, 0, 0, 0, 200,
	417, 395, 310, 280, 281, 199, 0, 361, 239, 258,
	230, 329, 414, 415, 229, 448, 208, 433, 202, 209,
	432, 322, 410, 418, 311, 302, 201, 416, 309, 301,
	286, 249, 268, 355, 296, 356, 269, 318, 317, 319,
	0, 196, 0, 392, 427, 449, 215, 0, 0, 405,
	442, 445, 0, 358, 216, 259, 248, 354, 257, 289,
	441, 443, 444, 214, 352, 265, 333, 422, 321, 210,
	271, 388, 285, 294, 0, 0, 339, 370, 219, 425,
	389, 553, 564, 559, 560, 557, 558, 0, 556, 555,
	554, 567, 545, 546, 547, 548, 550, 0, 561, 562,
	549, 190, 203, 290, 0, 359, 255, 447, 431, 428,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 377, 378,
	382, 383, 384, 385, 393, 397, 412, 413, 424, 435,
	439, 264, 420, 440, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 430, 394, 207, 366, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 343, 346, 261,
	242, 222, 363, 220, 380, 400, 401, 402, 404, 312,
	238, 330, 0, 0, 0, 0, 509, 0, 0, 0,
	241, 0, 508, 0, 0, 0, 288, 0, 0, 0,
	344, 0, 381, 227, 297, 295, 409, 251, 244, 240,
	226, 272, 303, 342, 399, 336, 552, 292, 0, 0,
	390, 315, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 391, 254, 69, 0, 0, 177, 178, 179, 530,
	1405, 532, 533, 534, 535, 0, 0, 217, 531, 223,
	536, 537, 538, 0, 237, 276, 243, 236, 406, 0,
	0, 0, 506, 523, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 596, 0, 0,
	0, 566, 0, 522, 0, 0, 515, 516, 518, 517,
	519, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 565, 0, 0, 436, 0, 0,
	563, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 365, 371, 0, 0, 0, 228,
	0, 369, 340, 423, 213, 252, 362, 345, 367, 0,
	0, 368, 293, 411, 357, 421, 437, 438, 235, 320,
	429, 403, 434, 446, 206, 232, 334, 396, 426, 387,
	313, 407, 408, 283, 386, 260, 194, 291, 198, 398,
	419, 218, 379, 0, 0, 0, 200, 417, 395, 310,
	280, 281, 199, 0, 361, 239, 258, 230, 329, 414,
	415, 229, 448, 208, 433, 202, 209, 432, 322, 410,
	418, 311, 302, 201, 416, 309, 301, 286, 249, 268,
	355, 296, 356, 269, 318, 317, 319, 0, 196, 0,
	392, 427, 449, 215, 0, 0, 405, 442, 445, 0,
	358, 216, 259, 248, 354, 257, 289, 441, 443, 444,
	214, 352, 265, 333, 422, 321, 210, 271, 388, 285,
	294, 0, 0, 339, 370, 219, 425, 389, 553, 564,
	559, 560, 557, 558, 0, 556, 555, 554, 567, 545,
	546, 547, 548, 550, 0, 561, 562, 549, 190, 203,
	290, 0, 359, 255, 447, 431, 428, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 377, 378, 382, 383, 384,
	385, 393, 397, 412, 413, 424, 435, 439, 264, 420,
	440, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	430, 394, 207, 366, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 343, 346, 261, 242, 222, 363,
	220, 380, 400, 401, 402, 404, 312, 238, 577, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 509, 0, 0, 0,
	241, 0, 508, 0, 0, 0, 288, 0, 0, 0,
	344, 0, 381, 227, 297, 295, 409, 251, 244, 240,
	226, 272, 303, 342, 399, 336, 552, 292, 0, 0,
	390, 315, 0, 0, 0, 0, 0, 543, 544, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 391, 254, 69, 0, 0, 177, 178, 179, 530,
	529, 532, 533, 534, 535, 0, 0, 217, 531, 223,
	536, 537, 538, 0, 237, 276, 243, 236, 406, 0,
	0, 0, 506, 523, 0, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 520, 521, 0, 0, 0,
	0, 566, 0, 522, 0, 0, 515, 516, 518, 517,
	519, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 565, 0, 0, 436, 0, 0,
	563, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 365, 371, 0, 0, 0, 228,
	0, 369, 340, 423, 213, 252, 362, 345, 367, 0,
	0, 368, 293, 411, 357, 421, 437, 438, 235, 320,
	429, 403, 434, 446, 206, 232, 334, 396, 426, 387,
	313, 407, 408, 283, 386, 260, 194, 291, 198, 398,
	419, 218, 379, 0, 0, 0, 200, 417, 395, 310,
	280, 281, 199, 0, 361, 239, 258, 230, 329, 414,
	415, 229, 448, 208, 433, 202, 209, 432, 322, 410,
	418, 311, 302, 201, 416, 309, 301, 286, 249, 268,
	355, 296, 356, 269, 318, 317, 319, 0, 196, 0,
	392, 427, 449, 215, 0, 0, 405, 442, 445, 0,
	358, 216, 259, 248, 354, 257, 289, 441, 443, 444,
	214, 352, 265, 333, 422, 321, 210, 271, 388, 285,
	294, 0, 0, 339, 370, 219, 425, 389, 553, 564,
	559, 560, 557, 558, 0, 556, 555, 554, 567, 545,
	546, 547, 548, 550, 0, 561, 562, 549, 190, 203,
	290, 0, 359, 255, 447, 431, 428, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 377, 378, 382, 383, 384,
	385, 393, 397, 412, 413, 424, 435, 439, 264, 420,
	440, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	430, 394, 207, 366, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 343, 346, 261, 242, 222, 363,
	220, 380, 400, 401, 402, 404, 312, 238, 330, 0,
	0, 0, 0, 509, 0, 0, 0, 241, 0, 508,
	0, 0, 0, 288, 0, 0, 0, 344, 0, 381,
	227, 297, 295, 409, 251, 244, 240, 226, 272, 303,
	342, 399, 336, 552, 292, 0, 0, 390, 315, 0,
	0, 0, 0, 0, 543, 544, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 225, 195, 327, 391, 254,
	69, 0, 0, 177, 178, 179, 530, 529, 532, 533,
	534, 535, 0, 0, 217, 531, 223, 536, 537, 538,
	0, 237, 276, 243, 236, 406, 0, 0, 0, 506,
	523, 0, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 520, 521, 0, 0, 0, 0, 566, 0,
	522, 0, 0, 515, 516, 518, 517, 519, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	316, 565, 0, 0, 436, 0, 0, 563, 0, 0,
	0, 0, 0, 287, 0, 284, 191, 205, 0, 0,
	326, 365, 371, 0, 0, 0, 228, 0, 369, 340,
	423, 213, 252, 362, 345, 367, 0, 0, 368, 293,
	411, 357, 421, 437, 438, 235, 320, 429, 403, 434,
	446, 206, 232, 334, 396, 426, 387, 313, 407, 408,
	283, 386, 260, 194, 291, 198, 398, 419, 218, 379,
	0, 0, 0, 200, 417, 395, 310, 280, 281, 199,
	0, 361, 239, 258, 230, 329, 414, 415, 229, 448,
	208, 433, 202, 209, 432, 322, 410, 418, 311, 302,
	201, 416, 309, 301, 286, 249, 268, 355, 296, 356,
	269, 318, 317, 319, 0, 196, 0, 392, 427, 449,
	215, 0, 0, 405, 442, 445, 0, 358, 216, 259,
	248, 354, 257, 289, 441, 443, 444, 214, 352, 265,
	333, 422, 321, 210, 271, 388, 285, 294, 0, 0,
	339, 370, 219, 425, 389, 553, 564, 559, 560, 557,
	558, 0, 556, 555, 554, 567, 545, 546, 547, 548,
	550, 0, 561, 562, 549, 190, 203, 290, 0, 359,
	255, 447, 431, 428, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 204, 212, 221, 233, 246, 253, 263, 267, 270,
	273, 274, 277, 282, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 377, 378, 382, 383, 384, 385, 393, 397,
	412, 413, 424, 435, 439, 264, 420, 440, 0, 298,
	0, 0, 300, 250, 266, 275, 0, 430, 394, 207,
	366, 256, 197, 224, 211, 231, 245, 247, 279, 308,
	314, 343, 346, 261, 242, 222, 363, 220, 380, 400,
	401, 402, 404, 312, 238, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 344, 0, 381, 227, 297, 295,
	409, 251, 244, 240, 226, 272, 303, 342, 399, 336,
	552, 292, 0, 0, 390, 315, 0, 0, 0, 0,
	0, 543, 544, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 225, 195, 327, 391, 254, 69, 0, 0,
	177, 178, 179, 530, 529, 532, 533, 534, 535, 0,
	0, 217, 531, 223, 536, 537, 538, 0, 237, 276,
	243, 236, 406, 0, 0, 0, 0, 523, 0, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 520,
	521, 0, 0, 0, 0, 566, 0, 522, 0, 0,
	515, 516, 518, 517, 519, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 316, 565, 0,
	0, 436, 0, 0, 563, 0, 0, 0, 0, 0,
	287, 0, 284, 191, 205, 0, 0, 326, 365, 371,
	0, 0, 0, 228, 0, 369, 340, 423, 213, 252,
	362, 345, 367, 2162, 0, 368, 293, 411, 357, 421,
	437, 438, 235, 320, 429, 403, 434, 446, 206, 232,
	334, 396, 426, 387, 313, 407, 408, 283, 386, 260,
	194, 291, 198, 398, 419, 218, 379, 0, 0, 0,
	200, 417, 395, 310, 280, 281, 199, 0, 361, 239,
	258, 230, 329, 414, 415, 229, 448, 208, 433, 202,
	209, 432, 322, 410, 418, 311, 302, 201, 416, 309,
	301, 286, 249, 268, 355, 296, 356, 269, 318, 317,
	319, 0, 196, 0, 392, 427, 449, 215, 0, 0,
	405, 442, 445, 0, 358, 216, 259, 248, 354, 257,
	289, 441, 443, 444, 214, 352, 265, 333, 422, 321,
	210, 271, 388, 285, 294, 0, 0, 339, 370, 219,
	425, 389, 553, 564, 559, 560, 557, 558, 0, 556,
	555, 554, 567, 545, 546, 547, 548, 550, 0, 561,
	562, 549, 190, 203, 290, 0, 359, 255, 447, 431,
	428, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 377,
	378, 382, 383, 384, 385, 393, 397, 412, 413, 424,
	435, 439, 264, 420, 440, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 430, 394, 207, 366, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 343, 346,
	261, 242, 222, 363, 220, 380, 400, 401, 402, 404,
	312, 238, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 344, 0, 381, 227, 297, 295, 409, 251, 244,
	240, 226, 272, 303, 342, 399, 336, 552, 292, 0,
	0, 390, 315, 0, 0, 0, 0, 0, 543, 544,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 391, 254, 69, 0, 584, 177, 178, 179,
	530, 529, 532, 533, 534, 535, 0, 0, 217, 531,
	223, 536, 537, 538, 0, 237, 276, 243, 236, 406,
	0, 0, 0, 0, 523, 0, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 520, 521, 0, 0,
	0, 0, 566, 0, 522, 0, 0, 515, 516, 518,
	517, 519, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 565, 0, 0, 436, 0,
	0, 563, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 365, 371, 0, 0, 0,
	228, 0, 369, 340, 423, 213, 252, 362, 345, 367,
	0, 0, 368, 293, 411, 357, 421, 437, 438, 235,
	320, 429, 403, 434, 446, 206, 232, 334, 396, 426,
	387, 313, 407, 408, 283, 386, 260, 194, 291, 198,
	398, 419, 218, 379, 0, 0, 0, 200, 417, 395,
	310, 280, 281, 199, 0, 361, 239, 258, 230, 329,
	414, 415, 229, 448, 208, 433, 202, 209, 432, 322,
	410, 418, 311, 302, 201, 416, 309, 301, 286, 249,
	268, 355, 296, 356, 269, 318, 317, 319, 0, 196,
	0, 392, 427, 449, 215, 0, 0, 405, 442, 445,
	0, 358, 216, 259, 248, 354, 257, 289, 441, 443,
	444, 214, 352, 265, 333, 422, 321, 210, 271, 388,
	285, 294, 0, 0, 339, 370, 219, 425, 389, 553,
	564, 559, 560, 557, 558, 0, 556, 555, 554, 567,
	545, 546, 547, 548, 550, 0, 561, 562, 549, 190,
	203, 290, 0, 359, 255, 447, 431, 428, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 377, 378, 382, 383,
	384, 385, 393, 397, 412, 413, 424, 435, 439, 264,
	420, 440, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 430, 394, 207, 366, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 343, 346, 261, 242, 222,
	363, 220, 380, 400, 401, 402, 404, 312, 238, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 344, 0,
	381, 227, 297, 295, 409, 251, 244, 240, 226, 272,
	303, 342, 399, 336, 552, 292, 0, 0, 390, 315,
	0, 0, 0, 0, 0, 543, 544, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 391,
	254, 69, 0, 0, 177, 178, 179, 530, 529, 532,
	533, 534, 535, 0, 0, 217, 531, 223, 536, 537,
	538, 0, 237, 276, 243, 236, 406, 0, 0, 0,
	0, 523, 0, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 520, 521, 0, 0, 0, 0, 566,
	0, 522, 0, 0, 515, 516, 518, 517, 519, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 316, 565, 0, 0, 436, 0, 0, 563, 0,
	0, 0, 0, 0, 287, 0, 284, 191, 205, 0,
	0, 326, 365, 371, 0, 0, 0, 228, 0, 369,
	340, 423, 213, 252, 362, 345, 367, 0, 0, 368,
	293, 411, 357, 421, 437, 438, 235, 320, 429, 403,
	434, 446, 206, 232, 334, 396, 426, 387, 313, 407,
	408, 283, 386, 260, 194, 291, 198, 398, 419, 218,
	379, 0, 0, 0, 200, 417, 395, 310, 280, 281,
	199, 0, 361, 239, 258, 230, 329, 414, 415, 229,
	448, 208, 433, 202, 209, 432, 322, 410, 418, 311,
	302, 201, 416, 309, 301, 286, 249, 268, 355, 296,
	356, 269, 318, 317, 319, 0, 196, 0, 392, 427,
	449, 215, 0, 0, 405, 442, 445, 0, 358, 216,
	259, 248, 354, 257, 289, 441, 443, 444, 214, 352,
	265, 333, 422, 321, 210, 271, 388, 285, 294, 0,
	0, 339, 370, 219, 425, 389, 553, 564, 559, 560,
	557, 558, 0, 556, 555, 554, 567, 545, 546, 547,
	548, 550, 0, 561, 562, 549, 190, 203, 290, 0,
	359, 255, 447, 431, 428, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 377, 378, 382, 383, 384, 385, 393,
	397, 412, 413, 424, 435, 439, 264, 420, 440, 0,
	298, 0, 0, 300, 250, 266, 275, 0, 430, 394,
	207, 366, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 343, 346, 261, 242, 222, 363, 220, 380,
	400, 401, 402, 404, 312, 238, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 344, 0, 381, 227, 297,
	295, 409, 251, 244, 240, 226, 272, 303, 342, 399,
	336, 0, 292, 0, 0, 390, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 391, 254, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 0, 0, 0, 0, 237,
	276, 243, 236, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 966, 965, 975, 976,
	968, 969, 970, 971, 972, 973, 974, 967, 0, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 191, 205, 0, 0, 326, 365,
	371, 0, 0, 0, 228, 0, 369, 340, 423, 213,
	252, 362, 345, 367, 0, 0, 368, 293, 411, 357,
	421, 437, 438, 235, 320, 429, 403, 434, 446, 206,
	232, 334, 396, 426, 387, 313, 407, 408, 283, 386,
	260, 194, 291, 198, 398, 419, 218, 379, 0, 0,
	0, 200, 417, 395, 310, 280, 281, 199, 0, 361,
	239, 258, 230, 329, 414, 415, 229, 448, 208, 433,
	202, 209, 432, 322, 410, 418, 311, 302, 201, 416,
	309, 301, 286, 249, 268, 355, 296, 356, 269, 318,
	317, 319, 0, 196, 0, 392, 427, 449, 215, 0,
	0, 405, 442, 445, 0, 358, 216, 259, 248, 354,
	257, 289, 441, 443, 444, 214, 352, 265, 333, 422,
	321, 210, 271, 388, 285, 294, 0, 0, 339, 370,
	219, 425, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 203, 290, 0, 359, 255, 447,
	431, 428, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	377, 378, 382, 383, 384, 385, 393, 397, 412, 413,
	424, 435, 439, 264, 420, 440, 0, 298, 0, 0,
	300, 250, 266, 275, 0, 430, 394, 207, 366, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 343,
	346, 261, 242, 222, 363, 220, 380, 400, 401, 402,
	404, 312, 238, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 797, 0, 0, 0, 0, 288, 0,
	0, 0, 344, 0, 381, 227, 297, 295, 409, 251,
	244, 240, 226, 272, 303, 342, 399, 336, 0, 292,
	0, 0, 390, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	225, 195, 327, 391, 254, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 223, 0, 0, 0, 0, 237, 276, 243, 236,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 316, 0, 0, 796, 436,
	0, 0, 0, 0, 0, 0, 793, 794, 287, 761,
	284, 191, 205, 787, 791, 326, 365, 371, 0, 0,
	0, 228, 0, 369, 340, 423, 213, 252, 362, 345,
	367, 0, 0, 368, 293, 411, 357, 421, 437, 438,
	235, 320, 429, 403, 434, 446, 206, 232, 334, 396,
	426, 387, 313, 407, 408, 283, 386, 260, 194, 291,
	198, 398, 419, 218, 379, 0, 0, 0, 200, 417,
	395, 310, 280, 281, 199, 0, 361, 239, 258, 230,
	329, 414, 415, 229, 448, 208, 433, 202, 209, 432,
	322, 410, 418, 311, 302, 201, 416, 309, 301, 286,
	249, 268, 355, 296, 356, 269, 318, 317, 319, 0,
	196, 0, 392, 427, 449, 215, 0, 0, 405, 442,
	445, 0, 358, 216, 259, 248, 354, 257, 289, 441,
	443, 444, 214, 352, 265, 333, 422, 321, 210, 271,
	388, 285, 294, 0, 0, 339, 370, 219, 425, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 203, 290, 0, 359, 255, 447, 431, 428, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 204, 212, 221, 233,
	246, 253, 263, 267, 270, 273, 274, 277, 282, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 377, 378, 382,
	383, 384, 385, 393, 397, 412, 413, 424, 435, 439,
	264, 420, 440, 0, 298, 0, 0, 300, 250, 266,
	275, 0, 430, 394, 207, 366, 256, 197, 224, 211,
	231, 245, 247, 279, 308, 314, 343, 346, 261, 242,
	222, 363, 220, 380, 400, 401, 402, 404, 312, 238,
	330, 0, 0, 0, 1067, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 344,
	0, 381, 227, 297, 295, 409, 251, 244, 240, 226,
	272, 303, 342, 399, 336, 0, 292, 0, 0, 390,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 225, 195, 327,
	391, 254, 0, 0, 0, 177, 178, 179, 0, 1069,
	0, 0, 0, 0, 0, 0, 217, 0, 223, 0,
	0, 0, 0, 237, 276, 243, 236, 406, 955, 956,
	954, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 957, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 316, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 191, 205,
	0, 0, 326, 365, 371, 0, 0, 0, 228, 0,
	369, 340, 423, 213, 252, 362, 345, 367, 0, 0,
	368, 293, 411, 357, 421, 437, 438, 235, 320, 429,
	403, 434, 446, 206, 232, 334, 396, 426, 387, 313,
	407, 408, 283, 386, 260, 194, 291, 198, 398, 419,
	218, 379, 0, 0, 0, 200, 417, 395, 310, 280,
	281, 199, 0, 361, 239, 258, 230, 329, 414, 415,
	229, 448, 208, 433, 202, 209, 432, 322, 410, 418,
	311, 302, 201, 416, 309, 301, 286, 249, 268, 355,
	296, 356, 269, 318, 317, 319, 0, 196, 0, 392,
	427, 449, 215, 0, 0, 405, 442, 445, 0, 358,
	216, 259, 248, 354, 257, 289, 441, 443, 444, 214,
	352, 265, 333, 422, 321, 210, 271, 388, 285, 294,
	0, 0, 339, 370, 219, 425, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 359, 255, 447, 431, 428, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 377, 378, 382, 383, 384, 385,
	393, 397, 412, 413, 424, 435, 439, 264, 420, 440,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 430,
	394, 207, 366, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 343, 346, 261, 242, 222, 363, 220,
	380, 400, 401, 402, 404, 312, 238, 34, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 344,
	0, 381, 227, 297, 295, 409, 251, 244, 240, 226,
	272, 303, 342, 399, 336, 0, 292, 0, 0, 390,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 225, 195, 327,
	391, 254, 69, 0, 584, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 223, 0,
	0, 0, 0, 237, 276, 243, 236, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 316, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 191, 205,
	0, 0, 326, 365, 371, 0, 0, 0, 228, 0,
	369, 340, 423, 213, 252, 362, 345, 367, 0, 0,
	368, 293, 411, 357, 421, 437, 438, 235, 320, 429,
	403, 434, 446, 206, 232, 334, 396, 426, 387, 313,
	407, 408, 283, 386, 260, 194, 291, 198, 398, 419,
	218, 379, 0, 0, 0, 200, 417, 395, 310, 280,
	281, 199, 0, 361, 239, 258, 230, 329, 414, 415,
	229, 448, 208, 433, 202, 209, 432, 322, 410, 418,
	311, 302, 201, 416, 309, 301, 286, 249, 268, 355,
	296, 356, 269, 318, 317, 319, 0, 196, 0, 392,
	427, 449, 215, 0, 0, 405, 442, 445, 0, 358,
	216, 259, 248, 354, 257, 289, 441, 443, 444, 214,
	352, 265, 333, 422, 321, 210, 271, 388, 285, 294,
	0, 0, 339, 370, 219, 425, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	0, 359, 255, 447, 431, 428, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 377, 378, 382, 383, 384, 385,
	393, 397, 412, 413, 424, 435, 439, 264, 420, 440,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 430,
	394, 207, 366, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 343, 346, 261, 242, 222, 363, 220,
	380, 400, 401, 402, 404, 312, 238, 330, 0, 0,
	0, 1435, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 344, 0, 381, 227,
	297, 295, 409, 251, 244, 240, 226, 272, 303, 342,
	399, 336, 0, 292, 0, 0, 390, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 391, 254, 0,
	0, 0, 177, 178, 179, 0, 1437, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	365, 371, 0, 0, 0, 228, 0, 369, 340, 423,
	213, 252, 362, 345, 367, 0, 1433, 368, 293, 411,
	357, 421, 437, 438, 235, 320, 429, 403, 434, 446,
	206, 232, 334, 396, 426, 387, 313, 407, 408, 283,
	386, 260, 194, 291, 198, 398, 419, 218, 379, 0,
	0, 0, 200, 417, 395, 310, 280, 281, 199, 0,
	361, 239, 258, 230, 329, 414, 415, 229, 448, 208,
	433, 202, 209, 432, 322, 410, 418, 311, 302, 201,
	416, 309, 301, 286, 249, 268, 355, 296, 356, 269,
	318, 317, 319, 0, 196, 0, 392, 427, 449, 215,
	0, 0, 405, 442, 445, 0, 358, 216, 259, 248,
	354, 257, 289, 441, 443, 444, 214, 352, 265, 333,
	422, 321, 210, 271, 388, 285, 294, 0, 0, 339,
	370, 219, 425, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 359, 255,
	447, 431, 428, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 377, 378, 382, 383, 384, 385, 393, 397, 412,
	413, 424, 435, 439, 264, 420, 440, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 430, 394, 207, 366,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	343, 346, 261, 242, 222, 363, 220, 380, 400, 401,
	402, 404, 312, 238, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 344, 0, 381, 227, 297, 295, 409,
	251, 244, 240, 226, 272, 303, 342, 399, 336, 0,
	292, 0, 0, 390, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 391, 254, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	761, 284, 191, 205, 759, 0, 326, 365, 371, 0,
	0, 0, 228, 0, 369, 340, 423, 213, 252, 362,
	345, 367, 0, 0, 368, 293, 411, 357, 421, 437,
	438, 235, 320, 429, 403, 434, 446, 206, 232, 334,
	396, 426, 387, 313, 407, 408, 283, 386, 260, 194,
	291, 198, 398, 419, 218, 379, 0, 0, 0, 200,
	417, 395, 310, 280, 281, 199, 0, 361, 239, 258,
	230, 329, 414, 415, 229, 448, 208, 433, 202, 209,
	432, 322, 410, 418, 311, 302, 201, 416, 309, 301,
	286, 249, 268, 355, 296, 356, 269, 318, 317, 319,
	0, 196, 0, 392, 427, 449, 215, 0, 0, 405,
	442, 445, 0, 358, 216, 259, 248, 354, 257, 289,
	441, 443, 444, 214, 352, 265, 333, 422, 321, 210,
	271, 388, 285, 294, 0, 0, 339, 370, 219, 425,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 203, 290, 0, 359, 255, 447, 431, 428,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 377, 378,
	382, 383, 384, 385, 393, 397, 412, 413, 424, 435,
	439, 264, 420, 440, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 430, 394, 207, 366, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 343, 346, 261,
	242, 222, 363, 220, 380, 400, 401, 402, 404, 312,
	238, 330, 0, 0, 0, 1435, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	344, 0, 381, 227, 297, 295, 409, 251, 244, 240,
	226, 272, 303, 342, 399, 336, 0, 292, 0, 0,
	390, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 391, 254, 0, 0, 0, 177, 178, 179, 0,
	1437, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 276, 243, 236, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 365, 371, 0, 0, 0, 228,
	0, 369, 340, 423, 213, 252, 362, 345, 367, 0,
	0, 368, 293, 411, 357, 421, 437, 438, 235, 320,
	429, 403, 434, 446, 206, 232, 334, 396, 426, 387,
	313, 407, 408, 283, 386, 260, 194, 291, 198, 398,
	419, 218, 379, 0, 0, 0, 200, 417, 395, 310,
	280, 281, 199, 0, 361, 239, 258, 230, 329, 414,
	415, 229, 448, 208, 433, 202, 209, 432, 322, 410,
	418, 311, 302, 201, 416, 309, 301, 286, 249, 268,
	355, 296, 356, 269, 318, 317, 319, 0, 196, 0,
	392, 427, 449, 215, 0, 0, 405, 442, 445, 0,
	358, 216, 259, 248, 354, 257, 289, 441, 443, 444,
	214, 352, 265, 333, 422, 321, 210, 271, 388, 285,
	294, 0, 0, 339, 370, 219, 425, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 203,
	290, 0, 359, 255, 447, 431, 428, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 377, 378, 382, 383, 384,
	385, 393, 397, 412, 413, 424, 435, 439, 264, 420,
	440, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	430, 394, 207, 366, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 343, 346, 261, 242, 222, 363,
	220, 380, 400, 401, 402, 404, 312, 238, 34, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	344, 0, 381, 227, 297, 295, 409, 251, 244, 240,
	226, 272, 303, 342, 399, 336, 0, 292, 0, 0,
	390, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 391, 254, 69, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 276, 243, 236, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 365, 371, 0, 0, 0, 228,
	0, 369, 340, 423, 213, 252, 362, 345, 367, 0,
	0, 368, 293, 411, 357, 421, 437, 438, 235, 320,
	429, 403, 434, 446, 206, 232, 334, 396, 426, 387,
	313, 407, 408, 283, 386, 260, 194, 291, 198, 398,
	419, 218, 379, 0, 0, 0, 200, 417, 395, 310,
	280, 281, 199, 0, 361, 239, 258, 230, 329, 414,
	415, 229, 448, 208, 433, 202, 209, 432, 322, 410,
	418, 311, 302, 201, 416, 309, 301, 286, 249, 268,
	355, 296, 356, 269, 318, 317, 319, 0, 196, 0,
	392, 427, 449, 215, 0, 0, 405, 442, 445, 0,
	358, 216, 259, 248, 354, 257, 289, 441, 443, 444,
	214, 352, 265, 333, 422, 321, 210, 271, 388, 285,
	294, 0, 0, 339, 370, 219, 425, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 203,
	290, 0, 359, 255, 447, 431, 428, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 377, 378, 382, 383, 384,
	385, 393, 397, 412, 413, 424, 435, 439, 264, 420,
	440, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	430, 394, 207, 366, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 343, 346, 261, 242, 222, 363,
	220, 380, 400, 401, 402, 404, 312, 238, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 344, 0, 381,
	227, 297, 295, 409, 251, 244, 240, 226, 272, 303,
	342, 399, 336, 0, 292, 0, 0, 390, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 225, 195, 327, 391, 254,
	0, 0, 0, 177, 178, 179, 0, 0, 1455, 0,
	0, 1456, 0, 0, 217, 0, 223, 0, 0, 0,
	0, 237, 276, 243, 236, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	316, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 191, 205, 0, 0,
	326, 365, 371, 0, 0, 0, 228, 0, 369, 340,
	423, 213, 252, 362, 345, 367, 0, 0, 368, 293,
	411, 357, 421, 437, 438, 235, 320, 429, 403, 434,
	446, 206, 232, 334, 396, 426, 387, 313, 407, 408,
	283, 386, 260, 194, 291, 198, 398, 419, 218, 379,
	0, 0, 0, 200, 417, 395, 310, 280, 281, 199,
	0, 361, 239, 258, 230, 329, 414, 415, 229, 448,
	208, 433, 202, 209, 432, 322, 410, 418, 311, 302,
	201, 416, 309, 301, 286, 249, 268, 355, 296, 356,
	269, 318, 317, 319, 0, 196, 0, 392, 427, 449,
	215, 0, 0, 405, 442, 445, 0, 358, 216, 259,
	248, 354, 257, 289, 441, 443, 444, 214, 352, 265,
	333, 422, 321, 210, 271, 388, 285, 294, 0, 0,
	339, 370, 219, 425, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 203, 290, 0, 359,
	255, 447, 431, 428, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 204, 212, 221, 233, 246, 253, 263, 267, 270,
	273, 274, 277, 282, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 377, 378, 382, 383, 384, 385, 393, 397,
	412, 413, 424, 435, 439, 264, 420, 440, 0, 298,
	0, 0, 300, 250, 266, 275, 0, 430, 394, 207,
	366, 256, 197, 224, 211, 231, 245, 247, 279, 308,
	314, 343, 346, 261, 242, 222, 363, 220, 380, 400,
	401, 402, 404, 312, 238, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 1100, 0, 0, 0,
	288, 0, 0, 0, 344, 0, 381, 227, 297, 295,
	409, 251, 244, 240, 226, 272, 303, 342, 399, 336,
	0, 292, 0, 0, 390, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 225, 195, 327, 391, 254, 0, 0, 0,
	177, 178, 179, 0, 1099, 0, 0, 0, 0, 0,
	0, 217, 0, 223, 0, 0, 0, 0, 237, 276,
	243, 236, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 316, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 191, 205, 0, 0, 326, 365, 371,
	0, 0, 0, 228, 0, 369, 340, 423, 213, 252,
	362, 345, 367, 0, 0, 368, 293, 411, 357, 421,
	437, 438, 235, 320, 429, 403, 434, 446, 206, 232,
	334, 396, 426, 387, 313, 407, 408, 283, 386, 260,
	194, 291, 198, 398, 419, 218, 379, 0, 0, 0,
	200, 417, 395, 310, 280, 281, 199, 0, 361, 239,
	258, 230, 329, 414, 415, 229, 448, 208, 433, 202,
	209, 432, 322, 410, 418, 311, 302, 201, 416, 309,
	301, 286, 249, 268, 355, 296, 356, 269, 318, 317,
	319, 0, 196, 0, 392, 427, 449, 215, 0, 0,
	405, 442, 445, 0, 358, 216, 259, 248, 354, 257,
	289, 441, 443, 444, 214, 352, 265, 333, 422, 321,
	210, 271, 388, 285, 294, 0, 0, 339, 370, 219,
	425, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 359, 255, 447, 431,
	428, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 377,
	378, 382, 383, 384, 385, 393, 397, 412, 413, 424,
	435, 439, 264, 420, 440, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 430, 394, 207, 366, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 343, 346,
	261, 242, 222, 363, 220, 380, 400, 401, 402, 404,
	312, 238, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 344, 0, 381, 227, 297, 295, 409, 251, 244,
	240, 226, 272, 303, 342, 399, 336, 0, 292, 0,
	0, 390, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 391, 254, 0, 0, 584, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 365, 371, 0, 0, 0,
	228, 0, 369, 340, 423, 213, 252, 362, 345, 367,
	0, 0, 368, 293, 411, 357, 421, 437, 438, 235,
	320, 429, 403, 434, 446, 206, 232, 334, 396, 426,
	387, 313, 407, 408, 283, 386, 260, 194, 291, 198,
	398, 419, 218, 379, 0, 0, 0, 200, 417, 395,
	310, 280, 281, 199, 0, 361, 239, 258, 230, 329,
	414, 415, 229, 448, 208, 433, 202, 209, 432, 322,
	410, 418, 311, 302, 201, 416, 309, 301, 286, 249,
	268, 355, 296, 356, 269, 318, 317, 319, 0, 196,
	0, 392, 427, 449, 215, 0, 0, 405, 442, 445,
	0, 358, 216, 259, 248, 354, 257, 289, 441, 443,
	444, 214, 352, 265, 333, 422, 321, 210, 271, 388,
	285, 294, 0, 0, 339, 370, 219, 425, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 359, 255, 447, 431, 428, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 377, 378, 382, 383,
	384, 385, 393, 397, 412, 413, 424, 435, 439, 264,
	420, 440, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 430, 394, 207, 366, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 343, 346, 261, 242, 222,
	363, 220, 380, 400, 401, 402, 404, 312, 238, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 344, 0,
	381, 227, 297, 295, 409, 251, 244, 240, 226, 272,
	303, 342, 399, 336, 0, 292, 0, 0, 390, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 391,
	254, 69, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 276, 243, 236, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 316, 0, 0, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 191, 205, 0,
	0, 326, 365, 371, 0, 0, 0, 228, 0, 369,
	340, 423, 213, 252, 362, 345, 367, 0, 0, 368,
	293, 411, 357, 421, 437, 438, 235, 320, 429, 403,
	434, 446, 206, 232, 334, 396, 426, 387, 313, 407,
	408, 283, 386, 260, 194, 291, 198, 398, 419, 218,
	379, 0, 0, 0, 200, 417, 395, 310, 280, 281,
	199, 0, 361, 239, 258, 230, 329, 414, 415, 229,
	448, 208, 433, 202, 209, 432, 322, 410, 418, 311,
	302, 201, 416, 309, 301, 286, 249, 268, 355, 296,
	356, 269, 318, 317, 319, 0, 196, 0, 392, 427,
	449, 215, 0, 0, 405, 442, 445, 0, 358, 216,
	259, 248, 354, 257, 289, 441, 443, 444, 214, 352,
	265, 333, 422, 321, 210, 271, 388, 285, 294, 0,
	0, 339, 370, 219, 425, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 203, 290, 0,
	359, 255, 447, 431, 428, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 377, 378, 382, 383, 384, 385, 393,
	397, 412, 413, 424, 435, 439, 264, 420, 440, 0,
	298, 0, 0, 300, 250, 266, 275, 0, 430, 394,
	207, 366, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 343, 346, 261, 242, 222, 363, 220, 380,
	400, 401, 402, 404, 312, 238, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 344, 0, 381, 227, 297,
	295, 409, 251, 244, 240, 226, 272, 303, 342, 399,
	336, 0, 292, 0, 0, 390, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 391, 254, 0, 0,
	0, 177, 178, 179, 0, 1437, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 0, 0, 0, 0, 237,
	276, 243, 236, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 191, 205, 0, 0, 326, 365,
	371, 0, 0, 0, 228, 0, 369, 340, 423, 213,
	252, 362, 345, 367, 0, 0, 368, 293, 411, 357,
	421, 437, 438, 235, 320, 429, 403, 434, 446, 206,
	232, 334, 396, 426, 387, 313, 407, 408, 283, 386,
	260, 194, 291, 198, 398, 419, 218, 379, 0, 0,
	0, 200, 417, 395, 310, 280, 281, 199, 0, 361,
	239, 258, 230, 329, 414, 415, 229, 448, 208, 433,
	202, 209, 432, 322, 410, 418, 311, 302, 201, 416,
	309, 301, 286, 249, 268, 355, 296, 356, 269, 318,
	317, 319, 0, 196, 0, 392, 427, 449, 215, 0,
	0, 405, 442, 445, 0, 358, 216, 259, 248, 354,
	257, 289, 441, 443, 444, 214, 352, 265, 333, 422,
	321, 210, 271, 388, 285, 294, 0, 0, 339, 370,
	219, 425, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 203, 290, 0, 359, 255, 447,
	431, 428, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	377, 378, 382, 383, 384, 385, 393, 397, 412, 413,
	424, 435, 439, 264, 420, 440, 0, 298, 0, 0,
	300, 250, 266, 275, 0, 430, 394, 207, 366, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 343,
	346, 261, 242, 222, 363, 220, 380, 400, 401, 402,
	404, 312, 238, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 344, 0, 381, 227, 297, 295, 409, 251,
	244, 240, 226, 272, 303, 342, 399, 336, 0, 292,
	0, 0, 390, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	225, 195, 327, 391, 254, 0, 0, 0, 177, 178,
	179, 0, 1069, 0, 0, 0, 0, 0, 0, 217,
	0, 223, 0, 0, 0, 0, 237, 276, 243, 236,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 316, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 191, 205, 0, 0, 326, 365, 371, 0, 0,
	0, 228, 0, 369, 340, 423, 213, 252, 362, 345,
	367, 0, 0, 368, 293, 411, 357, 421, 437, 438,
	235, 320, 429, 403, 434, 446, 206, 232, 334, 396,
	426, 387, 313, 407, 408, 283, 386, 260, 194, 291,
	198, 398, 419, 218, 379, 0, 0, 0, 200, 417,
	395, 310, 280, 281, 199, 0, 361, 239, 258, 230,
	329, 414, 415, 229, 448, 208, 433, 202, 209, 432,
	322, 410, 418, 311, 302, 201, 416, 309, 301, 286,
	249, 268, 355, 296, 356, 269, 318, 317, 319, 0,
	196, 0, 392, 427, 449, 215, 0, 0, 405, 442,
	445, 0, 358, 216, 259, 248, 354, 257, 289, 441,
	443, 444, 214, 352, 265, 333, 422, 321, 210, 271,
	388, 285, 294, 0, 0, 339, 370, 219, 425, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 203, 290, 0, 359, 255, 447, 431, 428, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 204, 212, 221, 233,
	246, 253, 263, 267, 270, 273, 274, 277, 282, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 377, 378, 382,
	383, 384, 385, 393, 397, 412, 413, 424, 435, 439,
	264, 420, 440, 0, 298, 0, 0, 300, 250, 266,
	275, 0, 430, 394, 207, 366, 256, 197, 224, 211,
	231, 245, 247, 279, 308, 314, 343, 346, 261, 242,
	222, 363, 220, 380, 400, 401, 402, 404, 312, 238,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 288, 0, 0, 0, 344,
	0, 381, 227, 297, 295, 409, 251, 244, 240, 226,
	272, 303, 342, 399, 336, 0, 292, 0, 0, 390,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 225, 195, 327,
	391, 254, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 223, 0,
	0, 0, 0, 237, 276, 243, 236, 406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 316, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 191, 205,
	0, 0, 326, 365, 371, 0, 0, 0, 228, 0,
	369, 340, 423, 213, 252, 362, 345, 367, 0, 0,
	368, 293, 411, 357, 421, 437, 438, 235, 320, 429,
	403, 434, 446, 206, 232, 334, 396, 426, 387, 313,
	407, 408, 283, 386, 260, 194, 291, 198, 398, 419,
	218, 379, 0, 0, 0, 200, 417, 395, 310, 280,
	281, 199, 0, 361, 239, 258, 230, 329, 414, 415,
	229, 448, 208, 433, 202, 209, 432, 322, 410, 418,
	311, 302, 201, 416, 309, 301, 286, 249, 268, 355,
	296, 356, 269, 318, 317, 319, 0, 196, 0, 392,
	427, 449, 215, 0, 0, 405, 442, 445, 0, 358,
	216, 259, 248, 354, 257, 289, 441, 443, 444, 214,
	352, 265, 333, 422, 321, 210, 271, 388, 285, 294,
	0, 0, 339, 370, 219, 425, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 203, 290,
	1340, 359, 255, 447, 431, 428, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 204, 212, 221, 233, 246, 253, 263,
	267, 270, 273, 274, 277, 282, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 347, 348, 349, 350, 351, 353, 360, 364, 372,
	373, 374, 375, 376, 377, 378, 382, 383, 384, 385,
	393, 397, 412, 413, 424, 435, 439, 264, 420, 440,
	0, 298, 0, 0, 300, 250, 266, 275, 0, 430,
	394, 207, 366, 256, 197, 224, 211, 231, 245, 247,
	279, 308, 314, 343, 346, 261, 242, 222, 363, 220,
	380, 400, 401, 402, 404, 312, 238, 330, 0, 1224,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 344, 0, 381, 227,
	297, 295, 409, 251, 244, 240, 226, 272, 303, 342,
	399, 336, 0, 292, 0, 0, 390, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 391, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	365, 371, 0, 0, 0, 228, 0, 369, 340, 423,
	213, 252, 362, 345, 367, 0, 0, 368, 293, 411,
	357, 421, 437, 438, 235, 320, 429, 403, 434, 446,
	206, 232, 334, 396, 426, 387, 313, 407, 408, 283,
	386, 260, 194, 291, 198, 398, 419, 218, 379, 0,
	0, 0, 200, 417, 395, 310, 280, 281, 199, 0,
	361, 239, 258, 230, 329, 414, 415, 229, 448, 208,
	433, 202, 209, 432, 322, 410, 418, 311, 302, 201,
	416, 309, 301, 286, 249, 268, 355, 296, 356, 269,
	318, 317, 319, 0, 196, 0, 392, 427, 449, 215,
	0, 0, 405, 442, 445, 0, 358, 216, 259, 248,
	354, 257, 289, 441, 443, 444, 214, 352, 265, 333,
	422, 321, 210, 271, 388, 285, 294, 0, 0, 339,
	370, 219, 425, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 359, 255,
	447, 431, 428, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 377, 378, 382, 383, 384, 385, 393, 397, 412,
	413, 424, 435, 439, 264, 420, 440, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 430, 394, 207, 366,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	343, 346, 261, 242, 222, 363, 220, 380, 400, 401,
	402, 404, 312, 238, 330, 0, 1222, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 344, 0, 381, 227, 297, 295, 409,
	251, 244, 240, 226, 272, 303, 342, 399, 336, 0,
	292, 0, 0, 390, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 391, 254, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 365, 371, 0,
	0, 0, 228, 0, 369, 340, 423, 213, 252, 362,
	345, 367, 0, 0, 368, 293, 411, 357, 421, 437,
	438, 235, 320, 429, 403, 434, 446, 206, 232, 334,
	396, 426, 387, 313, 407, 408, 283, 386, 260, 194,
	291, 198, 398, 419, 218, 379, 0, 0, 0, 200,
	417, 395, 310, 280, 281, 199, 0, 361, 239, 258,
	230, 329, 414, 415, 229, 448, 208, 433, 202, 209,
	432, 322, 410, 418, 311, 302, 201, 416, 309, 301,
	286, 249, 268, 355, 296, 356, 269, 318, 317, 319,
	0, 196, 0, 392, 427, 449, 215, 0, 0, 405,
	442, 445, 0, 358, 216, 259, 248, 354, 257, 289,
	441, 443, 444, 214, 352, 265, 333, 422, 321, 210,
	271, 388, 285, 294, 0, 0, 339, 370, 219, 425,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 203, 290, 0, 359, 255, 447, 431, 428,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 377, 378,
	382, 383, 384, 385, 393, 397, 412, 413, 424, 435,
	439, 264, 420, 440, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 430, 394, 207, 366, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 343, 346, 261,
	242, 222, 363, 220, 380, 400, 401, 402, 404, 312,
	238, 330, 0, 1220, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	344, 0, 381, 227, 297, 295, 409, 251, 244, 240,
	226, 272, 303, 342, 399, 336, 0, 292, 0, 0,
	390, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 391, 254, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 276, 243, 236, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 365, 371, 0, 0, 0, 228,
	0, 369, 340, 423, 213, 252, 362, 345, 367, 0,
	0, 368, 293, 411, 357, 421, 437, 438, 235, 320,
	429, 403, 434, 446, 206, 232, 334, 396, 426, 387,
	313, 407, 408, 283, 386, 260, 194, 291, 198, 398,
	419, 218, 379, 0, 0, 0, 200, 417, 395, 310,
	280, 281, 199, 0, 361, 239, 258, 230, 329, 414,
	415, 229, 448, 208, 433, 202, 209, 432, 322, 410,
	418, 311, 302, 201, 416, 309, 301, 286, 249, 268,
	355, 296, 356, 269, 318, 317, 319, 0, 196, 0,
	392, 427, 449, 215, 0, 0, 405, 442, 445, 0,
	358, 216, 259, 248, 354, 257, 289, 441, 443, 444,
	214, 352, 265, 333, 422, 321, 210, 271, 388, 285,
	294, 0, 0, 339, 370, 219, 425, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 203,
	290, 0, 359, 255, 447, 431, 428, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 377, 378, 382, 383, 384,
	385, 393, 397, 412, 413, 424, 435, 439, 264, 420,
	440, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	430, 394, 207, 366, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 343, 346, 261, 242, 222, 363,
	220, 380, 400, 401, 402, 404, 312, 238, 330, 0,
	1218, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 344, 0, 381,
	227, 297, 295, 409, 251, 244, 240, 226, 272, 303,
	342, 399, 336, 0, 292, 0, 0, 390, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 225, 195, 327, 391, 254,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 223, 0, 0, 0,
	0, 237, 276, 243, 236, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	316, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 191, 205, 0, 0,
	326, 365, 371, 0, 0, 0, 228, 0, 369, 340,
	423, 213, 252, 362, 345, 367, 0, 0, 368, 293,
	411, 357, 421, 437, 438, 235, 320, 429, 403, 434,
	446, 206, 232, 334, 396, 426, 387, 313, 407, 408,
	283, 386, 260, 194, 291, 198, 398, 419, 218, 379,
	0, 0, 0, 200, 417, 395, 310, 280, 281, 199,
	0, 361, 239, 258, 230, 329, 414, 415, 229, 448,
	208, 433, 202, 209, 432, 322, 410, 418, 311, 302,
	201, 416, 309, 301, 286, 249, 268, 355, 296, 356,
	269, 318, 317, 319, 0, 196, 0, 392, 427, 449,
	215, 0, 0, 405, 442, 445, 0, 358, 216, 259,
	248, 354, 257, 289, 441, 443, 444, 214, 352, 265,
	333, 422, 321, 210, 271, 388, 285, 294, 0, 0,
	339, 370, 219, 425, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 203, 290, 0, 359,
	255, 447, 431, 428, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 204, 212, 221, 233, 246, 253, 263, 267, 270,
	273, 274, 277, 282, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 377, 378, 382, 383, 384, 385, 393, 397,
	412, 413, 424, 435, 439, 264, 420, 440, 0, 298,
	0, 0, 300, 250, 266, 275, 0, 430, 394, 207,
	366, 256, 197, 224, 211, 231, 245, 247, 279, 308,
	314, 343, 346, 261, 242, 222, 363, 220, 380, 400,
	401, 402, 404, 312, 238, 330, 0, 1216, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 344, 0, 381, 227, 297, 295,
	409, 251, 244, 240, 226, 272, 303, 342, 399, 336,
	0, 292, 0, 0, 390, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 225, 195, 327, 391, 254, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 223, 0, 0, 0, 0, 237, 276,
	243, 236, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 316, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 191, 205, 0, 0, 326, 365, 371,
	0, 0, 0, 228, 0, 369, 340, 423, 213, 252,
	362, 345, 367, 0, 0, 368, 293, 411, 357, 421,
	437, 438, 235, 320, 429, 403, 434, 446, 206, 232,
	334, 396, 426, 387, 313, 407, 408, 283, 386, 260,
	194, 291, 198, 398, 419, 218, 379, 0, 0, 0,
	200, 417, 395, 310, 280, 281, 199, 0, 361, 239,
	258, 230, 329, 414, 415, 229, 448, 208, 433, 202,
	209, 432, 322, 410, 418, 311, 302, 201, 416, 309,
	301, 286, 249, 268, 355, 296, 356, 269, 318, 317,
	319, 0, 196, 0, 392, 427, 449, 215, 0, 0,
	405, 442, 445, 0, 358, 216, 259, 248, 354, 257,
	289, 441, 443, 444, 214, 352, 265, 333, 422, 321,
	210, 271, 388, 285, 294, 0, 0, 339, 370, 219,
	425, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 359, 255, 447, 431,
	428, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 377,
	378, 382, 383, 384, 385, 393, 397, 412, 413, 424,
	435, 439, 264, 420, 440, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 430, 394, 207, 366, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 343, 346,
	261, 242, 222, 363, 220, 380, 400, 401, 402, 404,
	312, 238, 330, 0, 1212, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 344, 0, 381, 227, 297, 295, 409, 251, 244,
	240, 226, 272, 303, 342, 399, 336, 0, 292, 0,
	0, 390, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 391, 254, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 365, 371, 0, 0, 0,
	228, 0, 369, 340, 423, 213, 252, 362, 345, 367,
	0, 0, 368, 293, 411, 357, 421, 437, 438, 235,
	320, 429, 403, 434, 446, 206, 232, 334, 396, 426,
	387, 313, 407, 408, 283, 386, 260, 194, 291, 198,
	398, 419, 218, 379, 0, 0, 0, 200, 417, 395,
	310, 280, 281, 199, 0, 361, 239, 258, 230, 329,
	414, 415, 229, 448, 208, 433, 202, 209, 432, 322,
	410, 418, 311, 302, 201, 416, 309, 301, 286, 249,
	268, 355, 296, 356, 269, 318, 317, 319, 0, 196,
	0, 392, 427, 449, 215, 0, 0, 405, 442, 445,
	0, 358, 216, 259, 248, 354, 257, 289, 441, 443,
	444, 214, 352, 265, 333, 422, 321, 210, 271, 388,
	285, 294, 0, 0, 339, 370, 219, 425, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 359, 255, 447, 431, 428, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 377, 378, 382, 383,
	384, 385, 393, 397, 412, 413, 424, 435, 439, 264,
	420, 440, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 430, 394, 207, 366, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 343, 346, 261, 242, 222,
	363, 220, 380, 400, 401, 402, 404, 312, 238, 330,
	0, 1210, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 288, 0, 0, 0, 344, 0,
	381, 227, 297, 295, 409, 251, 244, 240, 226, 272,
	303, 342, 399, 336, 0, 292, 0, 0, 390, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 225, 195, 327, 391,
	254, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 276, 243, 236, 406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 316, 0, 0, 0, 436, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 191, 205, 0,
	0, 326, 365, 371, 0, 0, 0, 228, 0, 369,
	340, 423, 213, 252, 362, 345, 367, 0, 0, 368,
	293, 411, 357, 421, 437, 438, 235, 320, 429, 403,
	434, 446, 206, 232, 334, 396, 426, 387, 313, 407,
	408, 283, 386, 260, 194, 291, 198, 398, 419, 218,
	379, 0, 0, 0, 200, 417, 395, 310, 280, 281,
	199, 0, 361, 239, 258, 230, 329, 414, 415, 229,
	448, 208, 433, 202, 209, 432, 322, 410, 418, 311,
	302, 201, 416, 309, 301, 286, 249, 268, 355, 296,
	356, 269, 318, 317, 319, 0, 196, 0, 392, 427,
	449, 215, 0, 0, 405, 442, 445, 0, 358, 216,
	259, 248, 354, 257, 289, 441, 443, 444, 214, 352,
	265, 333, 422, 321, 210, 271, 388, 285, 294, 0,
	0, 339, 370, 219, 425, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 203, 290, 0,
	359, 255, 447, 431, 428, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 253, 263, 267,
	270, 273, 274, 277, 282, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	347, 348, 349, 350, 351, 353, 360, 364, 372, 373,
	374, 375, 376, 377, 378, 382, 383, 384, 385, 393,
	397, 412, 413, 424, 435, 439, 264, 420, 440, 0,
	298, 0, 0, 300, 250, 266, 275, 0, 430, 394,
	207, 366, 256, 197, 224, 211, 231, 245, 247, 279,
	308, 314, 343, 346, 261, 242, 222, 363, 220, 380,
	400, 401, 402, 404, 312, 238, 330, 0, 1208, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 288, 0, 0, 0, 344, 0, 381, 227, 297,
	295, 409, 251, 244, 240, 226, 272, 303, 342, 399,
	336, 0, 292, 0, 0, 390, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 225, 195, 327, 391, 254, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 0, 0, 0, 0, 237,
	276, 243, 236, 406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 316, 0,
	0, 0, 436, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 191, 205, 0, 0, 326, 365,
	371, 0, 0, 0, 228, 0, 369, 340, 423, 213,
	252, 362, 345, 367, 0, 0, 368, 293, 411, 357,
	421, 437, 438, 235, 320, 429, 403, 434, 446, 206,
	232, 334, 396, 426, 387, 313, 407, 408, 283, 386,
	260, 194, 291, 198, 398, 419, 218, 379, 0, 0,
	0, 200, 417, 395, 310, 280, 281, 199, 0, 361,
	239, 258, 230, 329, 414, 415, 229, 448, 208, 433,
	202, 209, 432, 322, 410, 418, 311, 302, 201, 416,
	309, 301, 286, 249, 268, 355, 296, 356, 269, 318,
	317, 319, 0, 196, 0, 392, 427, 449, 215, 0,
	0, 405, 442, 445, 0, 358, 216, 259, 248, 354,
	257, 289, 441, 443, 444, 214, 352, 265, 333, 422,
	321, 210, 271, 388, 285, 294, 0, 0, 339, 370,
	219, 425, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 203, 290, 0, 359, 255, 447,
	431, 428, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 253, 263, 267, 270, 273, 274,
	277, 282, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 347, 348, 349,
	350, 351, 353, 360, 364, 372, 373, 374, 375, 376,
	377, 378, 382, 383, 384, 385, 393, 397, 412, 413,
	424, 435, 439, 264, 420, 440, 0, 298, 0, 0,
	300, 250, 266, 275, 0, 430, 394, 207, 366, 256,
	197, 224, 211, 231, 245, 247, 279, 308, 314, 343,
	346, 261, 242, 222, 363, 220, 380, 400, 401, 402,
	404, 312, 238, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 288, 0,
	0, 0, 344, 0, 381, 227, 297, 295, 409, 251,
	244, 240, 226, 272, 303, 342, 399, 336, 0, 292,
	0, 0, 390, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	225, 195, 327, 391, 254, 1183, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 223, 0, 0, 0, 0, 237, 276, 243, 236,
	406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 316, 0, 0, 0, 436,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 191, 205, 0, 0, 326, 365, 371, 0, 0,
	0, 228, 0, 369, 340, 423, 213, 252, 362, 345,
	367, 0, 0, 368, 293, 411, 357, 421, 437, 438,
	235, 320, 429, 403, 434, 446, 206, 232, 334, 396,
	426, 387, 313, 407, 408, 283, 386, 260, 194, 291,
	198, 398, 419, 218, 379, 0, 0, 0, 200, 417,
	395, 310, 280, 281, 199, 0, 361, 239, 258, 230,
	329, 414, 415, 229, 448, 208, 433, 202, 209, 432,
	322, 410, 418, 311, 302, 201, 416, 309, 301, 286,
	249, 268, 355, 296, 356, 269, 318, 317, 319, 0,
	196, 0, 392, 427, 449, 215, 0, 0, 405, 442,
	445, 0, 358, 216, 259, 248, 354, 257, 289, 441,
	443, 444, 214, 352, 265, 333, 422, 321, 210, 271,
	388, 285, 294, 0, 0, 339, 370, 219, 425, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 203, 290, 0, 359, 255, 447, 431, 428, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 204, 212, 221, 233,
	246, 253, 263, 267, 270, 273, 274, 277, 282, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 347, 348, 349, 350, 351, 353,
	360, 364, 372, 373, 374, 375, 376, 377, 378, 382,
	383, 384, 385, 393, 397, 412, 413, 424, 435, 439,
	264, 420, 440, 0, 298, 0, 0, 300, 250, 266,
	275, 0, 430, 394, 207, 366, 256, 197, 224, 211,
	231, 245, 247, 279, 308, 314, 343, 346, 261, 242,
	222, 363, 220, 380, 400, 401, 402, 404, 312, 238,
	1082, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 288, 0, 0, 0, 344, 0, 381, 227,
	297, 295, 409, 251, 244, 240, 226, 272, 303, 342,
	399, 336, 0, 292, 0, 0, 390, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 225, 195, 327, 391, 254, 0,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 0, 0, 0, 0,
	237, 276, 243, 236, 406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 316,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 191, 205, 0, 0, 326,
	365, 371, 0, 0, 0, 228, 0, 369, 340, 423,
	213, 252, 362, 345, 367, 0, 0, 368, 293, 411,
	357, 421, 437, 438, 235, 320, 429, 403, 434, 446,
	206, 232, 334, 396, 426, 387, 313, 407, 408, 283,
	386, 260, 194, 291, 198, 398, 419, 218, 379, 0,
	0, 0, 200, 417, 395, 310, 280, 281, 199, 0,
	361, 239, 258, 230, 329, 414, 415, 229, 448, 208,
	433, 202, 209, 432, 322, 410, 418, 311, 302, 201,
	416, 309, 301, 286, 249, 268, 355, 296, 356, 269,
	318, 317, 319, 0, 196, 0, 392, 427, 449, 215,
	0, 0, 405, 442, 445, 0, 358, 216, 259, 248,
	354, 257, 289, 441, 443, 444, 214, 352, 265, 333,
	422, 321, 210, 271, 388, 285, 294, 0, 0, 339,
	370, 219, 425, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 203, 290, 0, 359, 255,
	447, 431, 428, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	204, 212, 221, 233, 246, 253, 263, 267, 270, 273,
	274, 277, 282, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 347, 348,
	349, 350, 351, 353, 360, 364, 372, 373, 374, 375,
	376, 377, 378, 382, 383, 384, 385, 393, 397, 412,
	413, 424, 435, 439, 264, 420, 440, 0, 298, 0,
	0, 300, 250, 266, 275, 0, 430, 394, 207, 366,
	256, 197, 224, 211, 231, 245, 247, 279, 308, 314,
	343, 346, 261, 242, 222, 363, 220, 380, 400, 401,
	402, 404, 312, 238, 330, 0, 0, 0, 0, 0,
	0, 0, 1073, 241, 0, 0, 0, 0, 0, 288,
	0, 0, 0, 344, 0, 381, 227, 297, 295, 409,
	251, 244, 240, 226, 272, 303, 342, 399, 336, 0,
	292, 0, 0, 390, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 225, 195, 327, 391, 254, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 223, 0, 0, 0, 0, 237, 276, 243,
	236, 406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 316, 0, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 191, 205, 0, 0, 326, 365, 371, 0,
	0, 0, 228, 0, 369, 340, 423, 213, 252, 362,
	345, 367, 0, 0, 368, 293, 411, 357, 421, 437,
	438, 235, 320, 429, 403, 434, 446, 206, 232, 334,
	396, 426, 387, 313, 407, 408, 283, 386, 260, 194,
	291, 198, 398, 419, 218, 379, 0, 0, 0, 200,
	417, 395, 310, 280, 281, 199, 0, 361, 239, 258,
	230, 329, 414, 415, 229, 448, 208, 433, 202, 209,
	432, 322, 410, 418, 311, 302, 201, 416, 309, 301,
	286, 249, 268, 355, 296, 356, 269, 318, 317, 319,
	0, 196, 0, 392, 427, 449, 215, 0, 0, 405,
	442, 445, 0, 358, 216, 259, 248, 354, 257, 289,
	441, 443, 444, 214, 352, 265, 333, 422, 321, 210,
	271, 388, 285, 294, 0, 0, 339, 370, 219, 425,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 203, 290, 0, 359, 255, 447, 431, 428,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 204, 212, 221,
	233, 246, 253, 263, 267, 270, 273, 274, 277, 282,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 347, 348, 349, 350, 351,
	353, 360, 364, 372, 373, 374, 375, 376, 377, 378,
	382, 383, 384, 385, 393, 397, 412, 413, 424, 435,
	439, 264, 420, 440, 0, 298, 0, 0, 300, 250,
	266, 275, 0, 430, 394, 207, 366, 256, 197, 224,
	211, 231, 245, 247, 279, 308, 314, 343, 346, 261,
	242, 222, 363, 220, 380, 400, 401, 402, 404, 312,
	238, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 288, 0, 0, 0,
	344, 0, 381, 227, 297, 295, 409, 251, 244, 240,
	226, 272, 303, 342, 399, 336, 0, 292, 0, 0,
	390, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 225, 195,
	327, 391, 254, 0, 0, 0, 177, 178, 179, 0,
	931, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	0, 0, 0, 0, 237, 276, 243, 236, 406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 316, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 191,
	205, 0, 0, 326, 365, 371, 0, 0, 0, 228,
	0, 369, 340, 423, 213, 252, 362, 345, 367, 0,
	0, 368, 293, 411, 357, 421, 437, 438, 235, 320,
	429, 403, 434, 446, 206, 232, 334, 396, 426, 387,
	313, 407, 408, 283, 386, 260, 194, 291, 198, 398,
	419, 218, 379, 0, 0, 0, 200, 417, 395, 310,
	280, 281, 199, 0, 361, 239, 258, 230, 329, 414,
	415, 229, 448, 208, 433, 202, 209, 432, 322, 410,
	418, 311, 302, 201, 416, 309, 301, 286, 249, 268,
	355, 296, 356, 269, 318, 317, 319, 0, 196, 0,
	392, 427, 449, 215, 0, 0, 405, 442, 445, 0,
	358, 216, 259, 248, 354, 257, 289, 441, 443, 444,
	214, 352, 265, 333, 422, 321, 210, 271, 388, 285,
	294, 0, 0, 339, 370, 219, 425, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 203,
	290, 0, 359, 255, 447, 431, 428, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 204, 212, 221, 233, 246, 253,
	263, 267, 270, 273, 274, 277, 282, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 347, 348, 349, 350, 351, 353, 360, 364,
	372, 373, 374, 375, 376, 377, 378, 382, 383, 384,
	385, 393, 397, 412, 413, 424, 435, 439, 264, 420,
	440, 0, 298, 0, 0, 300, 250, 266, 275, 0,
	430, 394, 207, 366, 256, 197, 224, 211, 231, 245,
	247, 279, 308, 314, 343, 346, 261, 242, 222, 363,
	220, 380, 400, 401, 402, 404, 312, 238, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 288, 0, 0, 0, 344, 0, 381,
	227, 297, 295, 409, 251, 244, 240, 226, 272, 303,
	342, 399, 336, 0, 292, 0, 0, 390, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 225, 195, 327, 391, 254,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 223, 0, 0, 0,
	0, 237, 276, 243, 236, 406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 262, 0,
	316, 0, 0, 0, 436, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 191, 205, 0, 0,
	326, 365, 371, 0, 0, 0, 228, 0, 369, 340,
	423, 213, 252, 362, 345, 367, 0, 0, 368, 293,
	411, 357, 421, 437, 438, 235, 320, 429, 403, 434,
	446, 206, 232, 334, 396, 426, 387, 313, 407, 408,
	283, 386, 260, 194, 291, 198, 398, 419, 218, 379,
	0, 0, 0, 200, 417, 395, 310, 280, 281, 199,
	0, 361, 239, 258, 230, 329, 414, 415, 229, 448,
	208, 433, 202, 209, 432, 322, 410, 418, 311, 302,
	201, 416, 309, 301, 286, 249, 268, 355, 296, 356,
	269, 318, 317, 319, 0, 196, 0, 392, 427, 449,
	215, 0, 0, 405, 442, 445, 0, 358, 216, 259,
	248, 354, 257, 289, 441, 443, 444, 214, 352, 265,
	333, 422, 321, 210, 271, 388, 285, 294, 0, 0,
	339, 370, 219, 425, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 203, 290, 0, 359,
	255, 447, 431, 428, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 204, 212, 221, 233, 246, 253, 263, 267, 270,
	273, 274, 277, 282, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 347,
	348, 349, 350, 351, 353, 360, 364, 372, 373, 374,
	375, 376, 377, 378, 382, 383, 384, 385, 393, 397,
	412, 413, 424, 435, 439, 496, 420, 440, 0, 298,
	0, 0, 300, 250, 266, 275, 0, 430, 394, 207,
	366, 256, 197, 224, 211, 231, 245, 247, 279, 308,
	314, 343, 346, 261, 242, 222, 363, 220, 380, 400,
	401, 402, 404, 312, 238, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	288, 0, 0, 0, 344, 0, 381, 227, 297, 295,
	409, 251, 244, 240, 226, 272, 303, 342, 399, 336,
	0, 292, 0, 0, 390, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 225, 195, 327, 391, 254, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 223, 0, 0, 0, 0, 237, 276,
	243, 236, 406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 316, 0, 185,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 191, 205, 0, 0, 326, 365, 371,
	0, 0, 0, 228, 0, 369, 340, 423, 213, 252,
	362, 345, 367, 0, 0, 368, 293, 411, 357, 421,
	437, 438, 235, 320, 429, 403, 434, 446, 206, 232,
	334, 396, 426, 387, 313, 407, 408, 283, 386, 260,
	194, 291, 198, 398, 419, 218, 379, 0, 0, 0,
	200, 417, 395, 310, 280, 281, 199, 0, 361, 239,
	258, 230, 329, 414, 415, 229, 448, 208, 433, 202,
	209, 432, 322, 410, 418, 311, 302, 201, 416, 309,
	301, 286, 249, 268, 355, 296, 356, 269, 318, 317,
	319, 0, 196, 0, 392, 427, 449, 215, 0, 0,
	405, 442, 445, 0, 358, 216, 259, 248, 354, 257,
	289, 441, 443, 444, 214, 352, 265, 333, 422, 321,
	210, 271, 388, 285, 294, 0, 0, 339, 370, 219,
	425, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 290, 0, 359, 255, 447, 431,
	428, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 253, 263, 267, 270, 273, 274, 277,
	282, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 347, 348, 349, 350,
	351, 353, 360, 364, 372, 373, 374, 375, 376, 377,
	378, 382, 383, 384, 385, 393, 397, 412, 413, 424,
	435, 439, 264, 420, 440, 0, 298, 0, 0, 300,
	250, 266, 275, 0, 430, 394, 207, 366, 256, 197,
	224, 211, 231, 245, 247, 279, 308, 314, 343, 346,
	261, 242, 222, 363, 220, 380, 400, 401, 402, 404,
	312, 238, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 288, 0, 0,
	0, 344, 0, 381, 227, 297, 295, 409, 251, 244,
	240, 226, 272, 303, 342, 399, 336, 0, 292, 0,
	0, 390, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 225,
	195, 327, 391, 254, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 276, 243, 236, 406,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 316, 0, 0, 0, 436, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	191, 205, 0, 0, 326, 365, 371, 0, 0, 0,
	228, 0, 369, 340, 423, 213, 252, 362, 345, 367,
	0, 0, 368, 293, 411, 357, 421, 437, 438, 235,
	320, 429, 403, 434, 446, 206, 232, 334, 396, 426,
	387, 313, 407, 408, 283, 386, 260, 194, 291, 198,
	398, 419, 218, 379, 0, 0, 0, 200, 417, 395,
	310, 280, 281, 199, 0, 361, 239, 258, 230, 329,
	414, 415, 229, 448, 208, 433, 202, 209, 432, 322,
	410, 418, 311, 302, 201, 416, 309, 301, 286, 249,
	268, 355, 296, 356, 269, 318, 317, 319, 0, 196,
	0, 392, 427, 449, 215, 0, 0, 405, 442, 445,
	0, 358, 216, 259, 248, 354, 257, 289, 441, 443,
	444, 214, 352, 265, 333, 422, 321, 210, 271, 388,
	285, 294, 0, 0, 339, 370, 219, 425, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 290, 0, 359, 255, 447, 431, 428, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	253, 263, 267, 270, 273, 274, 277, 282, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 347, 348, 349, 350, 351, 353, 360,
	364, 372, 373, 374, 375, 376, 377, 378, 382, 383,
	384, 385, 393, 397, 412, 413, 424, 435, 439, 264,
	420, 440, 0, 298, 0, 0, 300, 250, 266, 275,
	0, 430, 394, 207, 366, 256, 197, 224, 211, 231,
	245, 247, 279, 308, 314, 343, 346, 261, 242, 222,
	363, 220, 380, 400, 401, 402, 404, 312, 238,
}

var yyPact = [...]int{
	2414, -1000, -339, 1597, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1563, 1185, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 540, 1217, 180, 1479, 4145, 163, 904, 393, 80,
	26856, 392, 84, 27303, -1000, 123, -1000, 110, 27303, 119,
	26409, -1000, -1000, -279, 12519, 1406, 48, 40, 27303, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1214, 1542, 1539,
	1558, 1041, 1467, -1000, 10718, 10718, 337, 337, 337, 8930,
	-1000, -1000, 16555, 27303, 27303, 1230, 391, 904, 387, 384,
	382, 334, -99, -1000, -1000, -1000, -1000, 1479, -1000, -1000,
	153, -1000, 266, 1155, -1000, 1153, -1000, 445, 413, 263,
	320, 318, 262, 260, 258, 252, 249, 247, 242, 232,
	259, -1000, 542, 542, -165, -170, 2069, 313, 313, 313,
	357, 1432, 1430, -1000, 486, -1000, 542, 542, 151, 542,
	542, 542, 542, 210, 205, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	27303, -1000, 159, 512, 578, 1479, 198, -1000, -1000, -1000,
	27303, 390, 904, 299, 299, 27303, -1000, 444, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27303, 606, 606, 39, 606, 606, 606, 606, 104, 466,
	18, -1000, 95, 199, 194, 186, 659, 59, 250, -1000,
	-1000, 177, 117, -1000, 606, 7086, 7086, 7086, -1000, 1451,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 356, -1000,
	-1000, -1000, -1000, 27303, 25962, 279, 563, -1000, -1000, -1000,
	-2, -1000, -1000, 1071, 763, -1000, 12519, 1283, 1158, 1158,
	-1000, -1000, 417, -1000, -1000, 13860, 13860, 13860, 13860, 13860,
	13860, 13860, 13860, 13860, 13860, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1158,
	440, -1000, 12072, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 12519, 1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158,
	1158, 1158, 1158, 1158, 1158, 1158, 1158, 1158, -1000, -1000,
	-1000, 27303, -1000, 1158, 1563, -1000, 1185, -1000, -1000, -1000,
	1448, 12519, 12519, 1563, -1000, 1342, 10718, -1000, -1000, 1424,
	-1000, -1000, -1000, -1000, 705, 1584, -1000, 15201, 439, 1582,
	25515, -1000, 19250, 25068, 1151, 8469, -16, -1000, -1000, -1000,
	560, 18356, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1451, 1060, 27303, -1000, -1000, 4413, 904,
	-1000, 1205, -1000, 1055, -1000, 1169, 159, 334, 1235, 904,
	904, 904, 904, 570, -1000, -1000, -1000, 542, 542, 253,
	4145, 4065, -1000, -1000, -1000, 24614, 1197, 904, -1000, 1196,
	-1000, 1492, 329, 510, 510, 904, -1000, -1000, 27303, 904,
	1489, 1488, 27303, 27303, -1000, 24167, -1000, 23720, 23273, 878,
	27303, 22826, 22379, 21932, 21485, 21038, -1000, 1278, -1000, 1178,
	-1000, -1000, -1000, 27303, 27303, 27303, 44, -1000, -1000, 27303,
	904, -1000, -1000, 868, 857, 542, 542, 839, 949, 948,
	945, 542, 542, 834, 942, 935, 173, 815, 805, 803,
	888, 939, 107, 844, 810, 796, 27303, 1194, -1000, 149,
	554, 216, 255, 195, 27303, 143, 1479, 1404, 1149, 354,
	299, 1276, 27303, 1506, 904, -1000, 7547, -1000, -1000, 937,
	12519, -1000, 661, 659, 659, -1000, -1000, -1000, -1000, -1000,
	-1000, 606, 27303, 661, -1000, -1000, -1000, 659, 606, 27303,
	606, 606, 606, 606, 659, 606, 27303, 27303, 7086, 7086,
	7086, 27303, 7086, 7086, 27303, 7086, 7086, 507, -1000, 1275,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 115, -1000, -1000,
	-1000, -1000, -1000, 1597, -1000, -1000, -1000, -113, 1143, 20591,
	-1000, -283, -284, -285, -286, -1000, -1000, -1000, -287, -292,
	-1000, -1000, -1000, 12519, 12519, 12519, 12519, 734, 513, 13860,
	729, 693, 13860, 13860, 13860, 13860, 13860, 13860, 13860, 13860,
	13860, 13860, 13860, 13860, 13860, 13860, 13860, 591, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 904, -1000, 1595, 906,
	906, 454, 454, 454, 454, 454, 454, 454, 454, 454,
	14307, 9377, 7547, 1041, 1043, 1563, 10718, 10718, 12519, 12519,
	11612, 11165, 10718, 1477, 545, 763, 27303, -1000, -1000, 13413,
	-1000, -1000, -1000, -1000, -1000, 970, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27303, 27303, 10718, 10718, 10718, 10718, 10718,
	-1000, 1139, -1000, -155, 16108, 12519, 1539, 1041, 1424, 1496,
	1589, 479, 845, 1132, -1000, 813, 1539, 17909, 1162, -1000,
	1424, -1000, -1000, -1000, 27303, -1000, -1000, 20144, -1000, -1000,
	6625, 27303, 230, 27303, -1000, 1129, 1389, -1000, -1000, -1000,
	1524, 17462, 27303, 1087, 1081, -1000, -1000, 438, 8008, -16,
	-1000, 8008, 1106, -1000, -27, -33, 9824, 452, -1000, -1000,
	-1000, 2069, 14754, 1045, -1000, 60, -1000, -1000, -1000, 1169,
	-1000, 1169, 1169, 1169, 1169, 44, 44, 44, 44, -1000,
	-1000, -1000, -1000, -1000, 1191, 1190, -1000, 1169, 1169, 1169,
	1169, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1189, 1189,
	1189, 1171, 1171, 308, -1000, 12519, 105, 27303, 1512, 793,
	149, 27303, 1273, -1000, 27303, 1235, 1235, 1235, -1000, 1502,
	930, 924, -1000, 1131, -1000, -1000, 1557, -1000, -1000, 482,
	648, 647, 464, 27303, 133, 227, -1000, 290, -1000, 27303,
	1187, 1487, 510, 904, -1000, 904, -1000, -1000, -1000, -1000,
	437, -1000, -1000, 904, 1130, -1000, 1124, 774, 630, 634,
	627, 1130, -1000, -1000, -136, 1130, -1000, 1130, -1000, 1130,
	-1000, 1130, -1000, 1130, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 527, 27303, 133, 591, -1000, 353, -1000, -1000,
	591, 591, -1000, -1000, -1000, -1000, 936, 925, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -329, 27303, 373, 135, 150, 27303,
	27303, 27303, 27303, 27303, 402, -1000, -1000, -1000, 204, 27303,
	27303, 27303, 27303, 403, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 763, 27303, -1000, -1000, 606, 606, -1000, -1000, 27303,
	606, -1000, -1000, -1000, -1000, -1000, -1000, 606, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 923, 27303, 27303, -1000, -1000, -1000, -1000, -1000, 92,
	-29, 178, -1000, -1000, -1000, -1000, 1515, -1000, 763, 513,
	523, 531, -1000, -1000, 851, -1000, -1000, 2477, -1000, -1000,
	-1000, -1000, 729, 13860, 13860, 13860, 569, 2477, 2332, 1227,
	612, 454, 626, 626, 459, 459, 459, 459, 459, 587,
	587, -1000, -1000, -1000, -1000, 970, -1000, -1000, -1000, 970,
	10718, 10718, 1128, 1158, 429, -1000, 1214, -1000, -1000, 1539,
	1015, 1015, 716, 856, 566, 1579, 1015, 562, 1574, 1015,
	1015, 10718, -1000, -1000, 615, -1000, 12519, 970, -1000, 1186,
	1123, 1111, 1015, 970, 970, 1015, 1015, 27303, -1000, -273,
	-1000, -75, 470, 1158, -1000, 19697, -1000, -1000, 970, 1071,
	1448, -1000, -1000, 1418, -1000, 1339, 12519, 12519, 12519, -1000,
	-1000, -1000, 1448, 1541, -1000, 1373, 1370, 1572, 10718, 19250,
	1424, -1000, -1000, -1000, 426, 1572, 1075, 1158, -1000, 27303,
	19250, 19250, 19250, 19250, 19250, -1000, 1331, 1325, -1000, 1322,
	1287, 1326, 27303, -1000, 1040, 1041, 17462, 230, 1096, 19250,
	27303, -1000, -1000, 19250, 27303, 6164, -1000, 1106, -16, -61,
	-1000, -1000, -1000, -1000, 763, -1000, 887, -1000, 332, -1000,
	296, -1000, -1000, -1000, -1000, 541, 53, -1000, -1000, 44,
	44, -1000, -1000, 452, 653, 452, 452, 452, 918, 918,
	-1000, -1000, -1000, -1000, -1000, 792, -1000, -1000, -1000, 764,
	-1000, -1000, 836, 1268, 105, -1000, -1000, 542, 915, 1425,
	-1000, -1000, 1012, 371, -1000, 27303, -1000, 1270, 1269, 1265,
	-1000, -1000, -1000, -1000, -1000, 3396, 27303, 1038, -1000, 131,
	27303, 1005, 27303, -1000, 1031, 27303, -1000, 904, -1000, -1000,
	7547, -1000, 27303, 1158, -1000, -1000, -1000, -1000, 389, 1478,
	1462, 133, 131, 452, 904, -1000, -1000, -1000, -1000, -1000,
	-332, 1028, 27303, 161, -1000, 1174, 953, -1000, 1193, -1000,
	-1000, -1000, -1000, 141, 215, 187, 347, -1000, 397, 1268,
	27303, -1000, -1000, -1000, 659, -1000, -1000, 659, -1000, -1000,
	-1000, -1000, -1000, -1000, 1444, -50, -303, -1000, -300, -1000,
	-1000, -1000, -1000, 569, 2477, 1243, -1000, 13860, 13860, -1000,
	-1000, 1015, 1015, 10718, 7547, 1563, 1448, -1000, -1000, 256,
	591, 256, 13860, 13860, -1000, 13860, 13860, -1000, -128, 1101,
	524, -1000, 12519, 720, -1000, -1000, 13860, 13860, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 381, 380, 379,
	27303, -1000, -1000, -1000, 778, 912, 1337, 763, 763, -1000,
	-1000, 27303, -1000, -1000, -1000, -1000, 1570, 12519, -1000, 1105,
	-1000, 5703, 1539, 1264, 27303, 1158, 1597, 15661, 27303, 1144,
	-1000, 546, 1389, 1254, 1263, 1606, -1000, -1000, -1000, -1000,
	1306, -1000, 1293, -1000, -1000, -1000, -1000, -1000, 1041, 1572,
	19250, 1141, -1000, 1141, -1000, 423, -1000, -1000, -1000, -66,
	-64, -1000, -1000, -1000, 2069, -1000, -1000, -1000, 670, 13860,
	1588, -1000, 911, 1486, -1000, 1482, -1000, -1000, 452, 452,
	-1000, -1000, -1000, -1000, -1000, -1000, 1008, -1000, 1004, 1099,
	1002, 65, -1000, 1166, 1438, 542, 542, -1000, 762, -1000,
	904, -1000, 27303, -1000, 27303, 27303, 27303, 1555, 1097, -1000,
	27303, -1000, -1000, 27303, -1000, -1000, 1346, 105, 997, -1000,
	-1000, -1000, 227, 27303, -1000, 906, 131, -1000, -1000, -1000,
	-1000, -1000, -1000, 1164, -1000, -1000, -1000, 990, -1000, -137,
	904, 27303, 27303, 27303, -1000, 27303, -1000, -1000, -1000, 606,
	606, -1000, 1437, -1000, 904, -1000, 13860, 2477, 2477, -1000,
	-1000, 970, -1000, 1539, -1000, 970, 1169, 1169, -1000, 1169,
	1171, -1000, 1169, 108, 1169, 102, 970, 970, 2237, 2217,
	2145, 2047, 1158, -123, -1000, 763, 12519, 2115, 2081, 1158,
	1158, 1158, 988, 896, 44, -1000, -1000, -1000, 1565, 1554,
	763, -1000, -1000, -1000, 1494, 1077, 1067, -1000, -1000, 10271,
	993, 1345, 416, 988, 1563, 27303, 12519, -1000, -1000, 12519,
	1168, -1000, 12519, -1000, -1000, -1000, 1563, 1563, 1141, -1000,
	-1000, 447, -1000, -1000, -1000, -1000, -1000, 2477, -13, -1000,
	-1000, -1000, -1000, -1000, 44, 894, 44, 754, -1000, 748,
	-1000, -1000, -211, -1000, -1000, 1150, 1229, -1000, -1000, 1164,
	-1000, -1000, -1000, 27303, 27303, -1000, -1000, 223, -1000, 282,
	984, -1000, -162, -1000, -1000, 1518, 27303, -1000, -1000, 7547,
	-1000, -1000, 1159, 1232, -1000, -1000, -1000, -1000, -1000, -1000,
	2477, -1000, 1448, -1000, -1000, 233, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13860, 13860, 13860, 13860, 13860, 1539,
	892, 763, 13860, 13860, 18803, 27303, 27303, 17002, 44, 41,
	-1000, 12519, 12519, 1481, -1000, 1158, -1000, 1138, 27303, 1158,
	27303, -1000, 1539, -1000, 763, 763, 27303, 763, 1539, -1000,
	-1000, 452, -1000, 452, 981, 973, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1516, 1097, -1000, 220, 27303, -1000,
	227, -1000, -171, -176, 1185, 979, 1094, -1000, 529, 27303,
	27303, -1000, -1000, -1000, 1186, 1186, 1186, 1186, 83, 970,
	-1000, 1186, 1186, 969, -1000, 969, 969, 470, -264, -1000,
	1401, 1397, 763, 1071, 1587, -1000, 1158, 1597, 409, 1067,
	-1000, -1000, 961, -1000, -1000, -1000, -1000, -1000, 1185, 1158,
	1157, -1000, -1000, -1000, 185, -1000, 7547, 5242, 959, -1000,
	-1000, -1000, -1000, -1000, 970, 136, -141, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 41, 292, -1000, 1378, 1376, 1553,
	27303, 1067, 27303, -1000, 185, 12966, 27303, -1000, -38, -1000,
	-1000, -1000, -1000, -1000, 1193, -1000, 1282, -133, -157, 1382,
	1384, 1384, 1397, 1552, 1390, 1392, -1000, 891, 1066, -1000,
	-1000, 1186, 970, 957, 306, -1000, -1000, -137, -1000, 1173,
	-1000, 1380, 701, -1000, -1000, -1000, -1000, 886, -1000, 1551,
	1549, -1000, -1000, -1000, 1262, 154, -1000, -138, -1000, 694,
	-1000, -1000, -1000, 880, 775, 1238, -1000, 1578, -1000, -151,
	-1000, -1000, -1000, -1000, -1000, 1580, 432, 432, -159, -1000,
	-1000, -1000, 289, 771, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1862, 1861, 14, 80, 81, 1860, 1859, 1858, 1857,
	131, 130, 126, 1856, 1855, 1853, 1852, 1850, 1848, 1846,
	1844, 1843, 1842, 1841, 1838, 65, 120, 35, 39, 121,
	1835, 1830, 45, 1829, 1828, 1827, 125, 124, 482, 1825,
	116, 1824, 1822, 1821, 1819, 1818, 1817, 1816, 1815, 1813,
	1812, 1811, 1810, 1809, 156, 1808, 1807, 9, 1806, 49,
	1804, 1803, 1802, 1800, 1799, 85, 1798, 1794, 1792, 112,
	1790, 1789, 44, 128, 40, 74, 1786, 1785, 73, 807,
	1784, 99, 119, 1782, 176, 1780, 42, 84, 79, 1778,
	36, 1774, 1773, 92, 1772, 1771, 1770, 68, 1769, 1768,
	3135, 1767, 67, 77, 12, 37, 1766, 1764, 1763, 1761,
	38, 1985, 1760, 1759, 22, 1756, 1755, 136, 1754, 88,
	17, 1742, 16, 24, 19, 1739, 86, 1738, 43, 64,
	34, 1734, 83, 1733, 1732, 1731, 1730, 25, 1728, 75,
	102, 62, 1727, 1726, 7, 11, 1724, 1723, 1722, 1720,
	1717, 1716, 4, 1715, 1714, 1711, 26, 1710, 6, 21,
	72, 46, 30, 10, 1708, 135, 1707, 27, 114, 66,
	108, 1706, 1705, 1704, 960, 71, 138, 1700, 1698, 33,
	1697, 115, 123, 1692, 1443, 1690, 1689, 47, 836, 2306,
	23, 109, 1687, 1686, 1987, 56, 76, 20, 1685, 1684,
	1682, 122, 191, 60, 876, 41, 1677, 1674, 1667, 1664,
	1663, 1660, 1659, 87, 28, 18, 103, 29, 1658, 1657,
	1654, 57, 63, 1646, 106, 104, 70, 164, 1643, 111,
	101, 52, 1641, 105, 1638, 1636, 1635, 1634, 50, 1633,
	1632, 1629, 1626, 107, 89, 55, 32, 1620, 31, 96,
	100, 97, 1619, 13, 117, 8, 1618, 3, 0, 1617,
	5, 118, 1450, 91, 1616, 1615, 1, 1613, 2, 1611,
	1610, 78, 1609, 1608, 1607, 1606, 3150, 1289, 110, 1605,
	129,
}

var yyR1 = [...]int{
	0, 274, 275, 275, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 258, 258, 258, 261, 261, 21,
	50, 3, 3, 3, 3, 2, 2, 8, 9, 4,
	5, 5, 10, 10, 61, 61, 11, 12, 12, 12,
	12, 278, 278, 95, 95, 93, 93, 94, 94, 160,
	160, 13, 14, 14, 170, 170, 169, 169, 169, 171,
	171, 171, 171, 204, 204, 15, 15, 15, 15, 15,
	70, 70, 260, 260, 259, 257, 257, 256, 256, 255,
	23, 24, 33, 33, 33, 33, 34, 35, 262, 262,
	234, 39, 39, 38, 38, 38, 38, 40, 40, 37,
	37, 36, 36, 236, 236, 223, 223, 235, 235, 235,
	235, 235, 235, 235, 222, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 206, 206, 206, 206,
	209, 209, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 208, 208, 208, 208, 208, 210, 210, 210, 210,
	210, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 221, 221, 213, 213, 216, 216,
	217, 217, 217, 218, 218, 219, 219, 214, 214, 214,
	215, 215, 215, 224, 248, 248, 247, 247, 245, 245,
	245, 245, 233, 233, 242, 242, 242, 242, 242, 232,
	232, 228, 228, 228, 229, 229, 230, 230, 227, 227,
	231, 231, 244, 244, 243, 225, 225, 226, 226, 250,
	250, 250, 250, 251, 267, 268, 266, 266, 266, 266,
	266, 59, 59, 59, 183, 183, 183, 240, 240, 239,
	239, 239, 241, 241, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 178, 178, 178, 265, 265, 265, 265,
	265, 265, 264, 264, 264, 237, 237, 237, 263, 263,
	129, 129, 130, 130, 30, 30, 30, 30, 30, 30,
	29, 29, 29, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 31, 31, 26, 26, 26,
	26, 26, 26, 26, 26, 26, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 220, 220, 220, 252, 252, 253, 253,
	17, 22, 22, 18, 18, 18, 18, 19, 19, 41,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 269, 269, 177, 177, 185, 185, 176, 176,
	175, 175, 175, 179, 179, 179, 180, 180, 273, 273,
	273, 43, 43, 45, 45, 46, 47, 47, 199, 199,
	200, 200, 48, 49, 60, 60, 60, 60, 60, 60,
	62, 62, 62, 7, 7, 7, 7, 56, 56, 56,
	6, 6, 44, 44, 51, 270, 270, 271, 272, 272,
	272, 272, 52, 20, 20, 20, 20, 20, 20, 77,
	77, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 71, 71, 71, 66, 66, 279, 54,
	55, 55, 69, 69, 69, 63, 63, 63, 68, 68,
	68, 74, 74, 76, 76, 76, 76, 76, 78, 78,
	78, 78, 78, 78, 73, 73, 75, 75, 75, 75,
	192, 192, 192, 191, 191, 85, 85, 86, 86, 87,
	87, 88, 88, 88, 127, 103, 103, 159, 159, 158,
	158, 161, 161, 89, 89, 89, 89, 90, 90, 91,
	91, 92, 92, 198, 198, 197, 197, 197, 196, 196,
	96, 96, 96, 98, 97, 97, 97, 97, 99, 99,
	101, 101, 100, 100, 102, 104, 104, 104, 104, 104,
	105, 105, 84, 84, 84, 84, 84, 84, 84, 84,
	173, 173, 107, 107, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 118, 118, 118, 118, 118, 118,
	108, 108, 108, 108, 108, 108, 108, 72, 72, 119,
	119, 119, 126, 120, 120, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 115,
	115, 115, 115, 113, 113, 113, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 280, 280, 117, 116, 116, 116, 116, 116,
	116, 116, 67, 67, 67, 67, 67, 203, 203, 203,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 133, 133, 64, 64, 131, 131, 132,
	134, 134, 128, 128, 128, 110, 110, 110, 110, 110,
	110, 110, 110, 112, 112, 112, 135, 135, 136, 136,
	137, 137, 138, 138, 139, 140, 140, 140, 141, 141,
	141, 141, 32, 32, 32, 32, 32, 27, 27, 27,
	27, 28, 28, 28, 79, 79, 79, 79, 81, 81,
	80, 80, 57, 57, 58, 58, 58, 82, 82, 83,
	83, 83, 83, 156, 156, 156, 142, 142, 142, 142,
	148, 148, 148, 144, 144, 146, 146, 146, 147, 147,
	147, 145, 151, 151, 153, 153, 152, 152, 150, 150,
	155, 155, 154, 154, 149, 149, 109, 109, 109, 109,
	109, 157, 157, 157, 157, 162, 162, 122, 122, 124,
	124, 123, 125, 163, 163, 167, 164, 164, 168, 168,
	168, 168, 168, 165, 165, 166, 166, 193, 193, 193,
	172, 172, 184, 184, 181, 181, 182, 182, 174, 174,
	186, 186, 186, 53, 121, 121, 249, 249, 246, 189,
	189, 190, 190, 194, 194, 195, 195, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 276, 277, 201, 202, 202, 202,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 5, 6, 6, 7, 4, 6, 5, 7, 8,
	1, 3, 7, 8, 1, 1, 9, 9, 8, 7,
	7, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 6, 11, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	5, 3, 6, 7, 7, 7, 4, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 3, 0, 2, 3, 3, 4,
	2, 3, 3, 2, 3, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 0, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 3, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 10,
	11, 11, 12, 5, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 0, 1, 2, 0, 1, 1,
	3, 2, 1, 2, 3, 3, 4, 4, 3, 3,
	3, 3, 4, 4, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 6, 5, 5, 2, 2, 2, 2, 3, 3,
	3, 4, 1, 3, 5, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 4, 4, 2,
	10, 3, 6, 7, 5, 5, 5, 12, 7, 5,
	9, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 8, 8,
	3, 3, 5, 6, 6, 5, 4, 3, 2, 3,
	3, 3, 7, 3, 3, 3, 3, 4, 7, 5,
	2, 4, 4, 4, 4, 4, 5, 5, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 3, 3, 6, 4, 7, 6, 1,
	3, 2, 2, 2, 2, 1, 1, 1, 3, 2,
	1, 1, 1, 0, 1, 1, 0, 3, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 4, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 3, 0, 1,
	0, 1, 1, 5, 0, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -274, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -4, -276, 6, 7, 8, -61, 10, 11,
	31, -23, -33, 153, -34, -24, 154, -35, 156, 155,
	191, 157, 184, 71, 226, 227, 229, 230, 231, 232,
	-62, 189, 190, 159, 35, 42, 32, 33, 36, 81,
	9, 326, 186, 185, 26, -275, 466, -69, 5, -137,
	16, -3, -54, -279, -54, -54, -54, -54, -54, -54,
	-234, -236, 81, 126, 81, -70, -184, 164, 173, 172,
	169, -262, 107, 219, 317, 162, -39, -38, -37, -36,
	-40, 30, -30, -31, -254, -29, -26, 158, 155, 199,
	102, 103, 191, 192, 193, 157, 175, 190, 194, 189,
	208, -25, 77, 32, 339, 342, -241, 154, 160, 161,
	327, 105, 104, 72, 156, -238, 276, 443, -40, 445,
	95, 97, 444, 41, 164, 446, 447, 448, 449, 174,
	450, 451, 452, 453, 459, 460, 461, 462, 106, 5,
	163, -262, -79, 286, 77, -261, -258, 84, 85, 86,
	163, -184, 164, 165, -262, 163, -100, -194, -258, -188,
	336, 177, 370, 371, 224, 77, 276, 443, 226, 240,
	234, 261, 253, 337, 372, 178, 212, 440, 251, 254,
	304, 445, 373, 192, 298, 281, 289, 95, 229, 313,
	458, 374, 456, 97, 444, 76, 48, 41, 187, 249,
	245, 446, 213, 375, 347, 206, 105, 102, 465, 243,
	47, 28, 455, 104, 46, 447, 376, 448, 291, 266,
	434, 45, 193, 377, 80, 341, 442, 293, 244, 290,
	223, 454, 159, 378, 426, 300, 435, 379, 267, 271,
	380, 305, 49, 381, 382, 436, 103, 383, 75, 449,
	238, 239, 384, 221, 176, 307, 265, 174, 34, 294,
	338, 225, 55, 200, 308, 43, 269, 42, 430, 385,
	433, 264, 260, 50, 386, 387, 388, 389, 450, 263,
	237, 259, 464, 218, 451, 59, 161, 273, 272, 274,
	207, 303, 256, 390, 391, 392, 181, 78, 393, 246,
	19, 394, 395, 301, 214, 396, 53, 397, 398, 311,
	190, 399, 51, 452, 38, 195, 453, 400, 401, 402,
	403, 404, 299, 405, 292, 268, 270, 202, 288, 340,
	406, 242, 194, 457, 407, 182, 441, 196, 199, 189,
	312, 183, 408, 409, 410, 411, 412, 413, 414, 230,
	459, 40, 415, 416, 417, 418, 222, 217, 306, 315,
	58, 79, 278, 419, 439, 236, 215, 420, 227, 52,
	460, 461, 462, 209, 463, 284, 106, 219, 220, 44,
	257, 201, 421, 422, 247, 248, 262, 235, 258, 228,
	427, 203, 302, 191, 423, 314, 216, 279, 344, 208,
	438, 343, 255, 252, 210, 424, 165, 204, 205, 425,
	428, 295, 285, 296, 297, 286, 211, 342, 250, 280,
	163, -165, 281, -185, 282, 283, 294, 295, 300, -177,
	301, 299, 202, -273, 305, 163, 302, 144, 153, 291,
	292, 285, 286, 211, -269, -258, 448, 463, 304, 254,
	287, 293, 306, 430, 297, 296, -194, 228, -199, 233,
	-189, -258, -188, 231, -100, -60, 426, 157, -201, -201,
	-71, 430, 432, -120, -84, -106, 110, -111, 30, 24,
	-110, -107, -128, -125, -126, 144, 145, 147, 146, 148,
	133, 134, 141, 111, 149, -115, -113, -114, -116, 88,
	87, 96, 89, 90, 91, 92, 98, 99, 100, -189,
	-194, -123, -276, 65, 66, 327, 328, 329, 330, 335,
	331, 113, 54, 316, 325, 324, 323, 320, 321, 318,
	319, 333, 334, 168, 317, 162, 139, 326, -258, -188,
	41, 284, 284, -100, -5, -4, -276, 6, 21, 22,
	-141, 18, 17, -277, 83, -63, -76, 60, 61, -78,
	22, 37, 64, 62, -55, -75, 135, -84, -194, -75,
	-174, 167, -174, -174, -164, -204, 228, -168, 306, 305,
	-190, -166, -189, -187, -165, 303, 158, 345, 109, 23,
	25, 112, 144, 17, 113, 36, 160, 175, 143, 171,
	327, 153, 69, 346, 318, 319, 316, 322, 329, 330,
	317, 282, 30, 11, 348, 26, 185, 22, 37, 137,
	155, 116, 117, 188, 24, 186, 100, 351, 20, 72,
	180, 12, 173, 14, 352, 353, 15, 168, 167, 128,
	164, 67, 9, 149, 27, 125, 63, 354, 29, 355,
	356, 357, 358, 65, 126, 18, 320, 321, 32, 431,
	359, 335, 197, 139, 70, 56, 432, 110, 360, 361,
	98, 362, 101, 73, 437, 107, 16, 68, 39, 363,
	198, 364, 170, 365, 309, 366, 127, 156, 326, 66,
	367, 162, 283, 6, 332, 31, 184, 172, 64, 368,
	163, 115, 333, 334, 166, 99, 5, 169, 33, 10,
	71, 74, 323, 324, 325, 54, 339, 114, 13, 369,
	310, 108, 304, 254, -235, 126, -222, -226, -189, 179,
	-251, 175, -100, -244, -243, -189, -79, 163, -258, 164,
	164, 164, -182, 168, 326, -36, -37, -165, 143, 196,
	82, 82, -226, -225, -224, -263, 198, 179, -250, -242,
	171, 180, -232, 172, 173, -227, 164, 29, -263, -227,
	170, 180, 198, 198, 106, 198, 106, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 195, -233, 118, -233,
	343, 343, -238, -263, -263, -263, 166, 34, 34, -186,
	-227, 166, 23, -233, -233, -165, 143, -233, -233, -233,
	-233, 206, 206, -233, -233, -233, -233, -233, -233, -233,
	-233, -233, -233, -233, -233, -233, -233, -233, -100, -82,
	213, 153, 155, 158, 73, 118, -38, 208, -22, -100,
	163, -258, -181, 168, -181, -100, 150, -100, -179, 126,
	13, -179, -176, 284, 288, 289, 290, -179, -179, -179,
	-179, 209, 298, -228, 164, 34, 176, 284, 209, 298,
	209, 210, 209, 210, 209, -175, 12, 128, -258, 433,
	317, 300, -258, 202, 163, 203, 165, 210, 284, 205,
	-179, -202, -276, -190, -202, -202, 31, 166, -189, -56,
	-189, 88, -7, -3, -11, -10, -12, 118, -77, 284,
	-65, 144, 448, 434, 435, 436, 433, 299, 441, 439,
	437, 209, 438, 82, 109, 107, 108, 125, -84, -108,
	128, 110, 126, 127, 112, 130, 129, 140, 133, 134,
	135, 136, 137, 138, 139, 131, 132, 143, 118, 119,
	120, 121, 122, 123, 124, -173, -276, -126, -276, 151,
	152, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -276, 150, -2, -120, -4, -276, -276, -276, -276,
	-276, -276, -276, -276, -133, -84, -276, -280, -117, -276,
	-280, -117, -280, -117, -280, -276, -280, -117, -280, -117,
	-280, -280, -117, -276, -276, -276, -276, -276, -276, -276,
	-201, -270, -271, -103, -100, -276, -137, -3, -54, -156,
	20, 32, -84, -138, -139, -84, -137, 56, -73, -75,
	-78, 60, 61, 94, 12, -192, -191, 23, -189, 88,
	150, 12, -101, 27, -100, -86, -87, -88, -89, -103,
	-127, -276, 12, -93, -94, -100, -102, -194, 82, 228,
	-168, -204, -170, -169, 307, 309, 118, -193, -189, 88,
	30, 83, 82, -100, -206, -209, -211, -210, -212, -207,
	-208, 251, 252, 144, 255, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 31, 187, 247, 248, 249,
	250, 267, 268, 269, 270, 271, 272, 273, 274, 234,
	253, 337, 235, 236, 237, 238, 239, 240, 242, 243,
	244, 245, 246, -261, -258, 81, 83, 82, -213, 81,
	-82, -182, -249, -246, 74, -258, -258, -258, -258, 110,
	-233, -233, 195, -29, -26, -254, 16, -25, -26, 158,
	102, 103, 155, 81, -222, 81, -231, -261, -258, 81,
	29, 170, 169, -230, -227, -230, -231, -258, -128, -189,
	-194, -258, 29, 29, -161, -189, -161, -161, 21, -161,
	21, -161, 21, 89, -189, -161, 21, -161, 21, -161,
	21, -161, 21, -161, 21, 30, 75, 76, 30, 78,
	79, 80, -128, -128, -222, -165, -100, -258, 89, 89,
	-233, -233, 89, 88, 88, 88, -233, -233, 89, 88,
	-258, 88, -264, 181, 223, 225, 89, 89, 89, 89,
	30, 88, -265, 30, 455, 454, 456, 457, 458, 89,
	30, 89, 30, 89, -189, 81, -81, 215, 118, 204,
	204, 163, 163, 217, -100, 216, 218, 220, 41, 82,
	166, -181, 73, -95, -100, 24, -258, -195, -194, -187,
	88, -84, -229, 12, 128, -175, -175, -179, -100, -229,
	-175, -179, -100, -179, -179, -179, -179, -175, -179, -194,
	-194, -202, -202, -202, -100, -202, -202, -100, -202, -202,
	-180, 126, 73, -200, 231, 265, 427, 428, 429, 82,
	339, -93, 433, 433, 433, 433, 433, 433, -84, -84,
	-84, -84, -118, 98, 110, 99, 100, -111, -119, -123,
	-126, 93, 128, 126, 127, 112, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -203, -258, 88, 144, -258, -110, -110, -189, -74,
	22, 37, -73, -190, -195, -187, -69, -277, -277, -137,
	-73, -73, -84, -84, -128, 88, -73, -128, 88, -73,
	-73, -68, 22, 37, -131, -132, 114, -128, -277, -111,
	-189, -189, -73, -74, -74, -73, -73, 82, -272, 309,
	310, 431, -197, 198, -196, 23, -194, 88, -121, -120,
	-141, -277, -142, 27, 10, 128, 82, 19, 82, -140,
	25, 26, -141, -112, -189, 89, 92, -85, 82, 12,
	-78, -100, -191, 135, -195, -100, -160, 198, -100, 31,
	82, -96, -98, -97, -99, 63, 67, 69, 64, 65,
	66, 70, -198, 23, -86, -3, -276, -100, -93, -278,
	82, 12, 74, -278, 82, 150, -168, -170, 82, 308,
	310, 311, 73, 101, -84, -215, 143, -240, -239, -238,
	-222, -224, -225, -226, 83, -143, -218, 279, -213, -213,
	-213, -213, -213, -214, -165, -214, -214, -214, 81, 81,
	-213, -213, -213, -213, -216, 81, -216, -216, -217, 81,
	-217, -251, -84, -248, -247, -245, -246, 174, 95, 339,
	-243, -140, 89, -81, -100, 73, -189, -249, -249, -249,
	24, -258, 88, -258, 88, 82, 17, -223, -222, -129,
	223, -253, 198, -250, -244, 81, 29, -230, -231, -231,
	150, -258, 82, 27, 106, 106, 106, 106, 339, 155,
	31, -222, -129, -203, 166, -203, -203, 88, 88, -178,
	463, -93, 165, 222, -83, 322, 88, 84, -100, -100,
	-100, -100, -100, 158, 155, 206, -100, -100, -93, -100,
	82, -59, 183, 178, -100, -179, -179, -100, -179, -179,
	88, -100, -189, -65, 309, 339, 20, -66, 20, 98,
	99, 100, -119, -111, -111, -111, -72, 188, 109, -277,
	-277, -73, -73, -276, 150, -5, -141, -277, -277, 82,
	74, 23, 12, 12, -277, 12, 12, -277, -277, -73,
	-134, -132, 116, -84, -277, -277, 82, 82, -277, -277,
	-277, -277, -277, -271, 430, 310, -104, 71, 167, 72,
	-276, -196, -277, -156, 39, 47, 58, -84, -84, -139,
	-156, -172, 20, 12, 54, 54, -105, 13, -75, -86,
	-78, 150, -105, -109, 31, 54, -3, -276, -276, -163,
	-167, -128, -87, -88, -88, -87, -88, 63, 63, 63,
	68, 63, 68, 63, -97, -194, -277, -277, -3, -160,
	74, -86, -100, -86, -102, -194, 135, -169, -171, 312,
	309, 315, -258, 88, 82, -238, -226, 98, 110, 30,
	73, 276, 95, 170, 29, 169, -219, 280, -214, -214,
	-215, -258, 144, -215, -215, -215, -221, 88, -221, 89,
	89, 83, -32, -27, -28, 32, 77, -245, -233, 88,
	38, 83, 165, -100, 73, 73, 73, 16, -158, -189,
	82, 83, -130, 224, -128, 83, -189, 83, -158, -231,
	-190, -189, -276, 163, 30, 30, -129, -130, -215, -258,
	465, 464, 83, -100, -80, 213, 221, 81, 85, -260,
	74, 204, 276, 204, 207, 166, -59, -32, -100, -175,
	-175, 32, 309, 442, 440, -72, 109, -111, -111, -277,
	-277, -74, -190, -137, -156, -205, 144, 251, 187, 249,
	245, 265, 256, 278, 247, 279, -203, -205, -111, -111,
	-111, -111, 336, -137, 117, -84, 115, -111, -111, 164,
	164, 164, -161, 40, 88, 88, 59, -100, -135, 14,
	-84, 135, -141, -162, 73, -163, -122, -124, -123, -276,
	-157, -277, -189, -161, -105, 82, 118, -91, -90, 73,
	74, -92, 73, -90, 63, 63, -277, -105, -86, -105,
	-105, 150, 309, 313, 314, -238, 98, -111, 10, 88,
	29, 29, -215, -215, 83, 82, 83, 82, 83, 82,
	-183, 376, 110, -28, -27, -233, -233, 89, -258, -100,
	-100, -100, -100, 17, 82, -222, -128, 54, -248, 83,
	-252, -253, -100, -110, -130, -159, 81, 83, -257, 339,
	-259, -258, -189, -189, -189, -100, -179, -179, 32, -258,
	-111, -277, -141, -277, -213, -213, -213, -217, -213, 239,
	-213, 239, -277, -277, 20, 20, 20, 20, -276, -64,
	332, -84, 82, 82, -276, -276, -276, -277, 88, -214,
	-136, 15, 17, 28, -162, 82, -277, -277, 82, 54,
	150, -277, -137, -167, -84, -84, 81, -84, -137, -105,
	-114, -214, 88, -214, 89, 89, 376, 30, 78, 79,
	80, 30, 75, 76, -159, -158, -189, 200, 182, -277,
	82, -220, 339, 342, 23, -158, -256, -255, -190, 81,
	74, -156, -214, -258, -111, -111, -111, -111, -111, -141,
	88, -111, -111, -158, -277, -158, -158, -197, -214, -145,
	-150, -176, -84, -120, 29, -124, 54, -3, -189, -122,
	-189, -141, -158, -141, -215, -215, 83, 83, 23, 201,
	-100, -253, 343, 343, -3, 83, 82, 118, -158, -100,
	-277, -277, -277, -277, -67, 128, 339, -277, -277, -277,
	-277, -277, -277, -104, -148, 426, -151, 43, -152, 44,
	10, -122, 150, 83, -3, -276, 81, -57, 339, -255,
	-237, -190, 88, 89, 83, -277, 337, 70, 340, -145,
	48, 257, -153, 52, -154, -149, 53, 17, -163, -189,
	-57, -111, 197, -158, -58, 212, 430, -260, 59, 338,
	341, -146, 50, -144, 49, -144, -152, 17, -155, 45,
	46, 88, -277, -277, 83, 175, -257, 59, -147, 51,
	73, 101, 88, 17, 17, -267, -268, 73, 214, 339,
	73, 101, 88, 88, -268, 73, 11, 10, 340, -266,
	183, 178, 181, 31, -266, 341, 177, 30, 98,
}

var yyDef = [...]int{
	33, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 810, 0, 548, 548, 548, 548, 548, 548,
	548, 0, 0, -2, -2, -2, 834, 37, 0, 922,
	0, 0, -2, 482, 483, 0, 485, -2, 0, 0,
	494, 1345, 1345, 543, 0, 0, 0, 0, 0, 1343,
	54, 55, 500, 501, 502, 1, 3, 0, 552, 818,
	0, 0, -2, 550, 0, 0, 928, 928, 928, 0,
	85, 86, 0, 0, 0, 834, 0, 0, 0, 0,
	0, 926, 0, 923, 108, 109, 89, -2, 113, 114,
	0, 118, 366, 327, 369, 325, 355, -2, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 330, 222, 222, 0, 0, -2, 318, 318, 318,
	0, 0, 0, 352, 930, 272, 222, 222, 0, 222,
	222, 222, 222, 0, 0, 222, 222, 222, 222, 222,
	222, 222, 222, 222, 222, 222, 222, 222, 222, 222,
	0, 107, 847, 0, 0, 117, 38, 34, 35, 36,
	0, 0, 0, 924, 924, 0, 418, 632, 943, 944,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	0, 473, 473, 0, 473, 473, 473, 473, 0, 0,
	0, 430, 0, 0, 0, 0, 470, 0, 0, 448,
	450, 0, 0, 457, 473, 1346, 1346, 1346, 913, 0,
	467, 465, 479, 480, 462, 463, 481, 484, 0, 489,
	492, 939, 940, 0, 507, 0, 1157, 499, 512, 513,
	0, 544, 545, 39, 683, 642, 0, 648, 650, 0,
	685, 686, 687, 688, 689, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 715, 716, 717, 718, 795,
	796, 797, 798, 799, 800, 801, 802, 652, 653, 792,
	0, 902, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 783, 0, 752, 752, 752, 752, 752, 752, 752,
	752, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	1345, 0, 522, 0, 810, 50, 0, 548, 553, 554,
	853, 0, 0, 810, 1344, 0, 0, -2, -2, 564,
	570, 571, 572, 573, 549, 0, 576, 580, 0, 0,
	0, 929, 0, 0, 71, 0, 1312, 906, -2, -2,
	0, 0, 941, 942, 915, -2, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, -2, 1102, 0, 0, 127, 128, 0, 37,
	248, 0, 123, 0, 242, 196, 847, 926, 936, 0,
	0, 0, 0, 0, 91, 115, 116, 222, 222, 0,
	117, 117, 334, 335, 336, 0, 0, -2, 246, 0,
	319, 0, 0, 236, 236, 240, 238, 239, 0, 0,
	0, 0, 0, 0, 346, 0, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 223, 0,
	364, 365, 273, 0, 0, 0, 0, 344, 345, 0,
	0, 931, 932, 0, 0, 222, 222, 0, 0, 0,
	0, 222, 222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 838,
	0, 0, 0, 0, 0, 0, -2, 0, 410, 0,
	924, 0, 0, 0, 0, 417, 0, 419, 420, 0,
	0, 421, 0, 470, 470, 468, 469, 423, 424, 425,
	426, 473, 0, 0, 231, 232, 233, 470, 473, 0,
	473, 473, 473, 473, 470, 473, 0, 0, 1346, 1346,
	1346, 0, 1346, 1346, 0, 1346, 1346, 476, 454, 455,
	458, 459, 1347, 1348, 460, 461, 914, 490, 493, 510,
	508, 509, 511, 503, 504, 505, 506, 0, 523, 524,
	529, 0, 0, 0, 0, 535, 536, 537, 0, 0,
	540, 541, 542, 0, 0, 0, 0, 0, 646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 670, 671,
	672, 673, 674, 675, 676, 649, 0, 663, 0, 0,
	0, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	0, 561, 0, 0, 0, 810, 0, 0, 0, 0,
	0, 0, 0, 558, 0, 784, 0, 736, 744, 0,
	737, 745, 738, 746, 739, 0, 740, 747, 741, 748,
	742, 743, 749, 0, 0, 0, 561, 561, 0, 0,
	40, 514, 515, 0, 615, 934, 818, 0, 563, 856,
	0, 0, 819, 811, 812, 815, 818, 0, 585, 574,
	565, 568, 569, 551, 0, 577, 581, 0, 583, 584,
	0, 0, 69, 0, 631, 0, 587, 589, 590, 591,
	613, 0, 0, 0, 0, 65, 67, 632, 0, 1312,
	912, 0, 73, 74, 0, 0, 0, 210, 917, 918,
	919, -2, 229, 0, 135, 203, 147, 148, 149, 196,
	151, 196, 196, 196, 196, 207, 207, 207, 207, 179,
	180, 181, 182, 183, 0, 0, 166, 196, 196, 196,
	196, 186, 187, 188, 189, 190, 191, 192, 193, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 198, 198,
	198, 200, 200, 0, 38, 0, 214, 0, 815, 0,
	838, 0, 0, 937, 0, 936, 936, 936, 106, 0,
	0, 0, 367, 328, 356, 368, 0, 331, 332, -2,
	0, 0, 318, 0, 320, 0, 230, 0, -2, 0,
	0, 0, 236, 240, 237, 240, 228, 241, 348, 792,
	0, 349, 350, 0, 382, 601, 0, 0, 0, 0,
	0, 388, 389, 390, 0, 392, 393, 394, 395, 396,
	397, 398, 399, 400, 401, 357, 358, 359, 360, 361,
	362, 363, 0, 0, 320, 0, 353, 0, 274, 275,
	0, 0, 278, 279, 280, 281, 0, 0, 284, 285,
	286, 287, 288, 312, 313, 314, 289, 290, 291, 292,
	293, 294, 295, 306, 307, 308, 309, 310, 311, 296,
	297, 298, 299, 300, 303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 835, 836, 837, 0, 0,
	0, 0, 0, 261, 63, 925, 416, 633, 945, 946,
	474, 475, 0, 234, 235, 473, 473, 427, 449, 0,
	473, 431, 451, 432, 434, 433, 435, 473, 438, 471,
	472, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	453, 0, 0, 0, 491, 495, 496, 497, 498, 0,
	0, 526, 531, 532, 533, 534, 546, 539, 684, 643,
	644, 645, 647, 664, 0, 666, 668, 654, 655, 679,
	680, 681, 0, 0, 0, 0, 677, 659, 0, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 704, 767, 768, 769, 0, 702, 703, 714, 0,
	0, 0, 562, 793, 0, -2, 0, 682, 901, 818,
	0, 0, 0, 0, 687, 795, 0, 687, 795, 0,
	0, 0, 559, 560, 790, 787, 0, 0, 753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 517, 518,
	520, 0, 635, 0, 616, 0, 618, 619, 0, 935,
	853, 51, 41, 0, 854, 0, 0, 0, 0, 814,
	816, 817, 853, 0, 803, 0, 0, 640, 0, 0,
	566, 47, 582, 578, 0, 640, 0, 0, 630, 0,
	0, 0, 0, 0, 0, 620, 0, 0, 623, 0,
	0, 0, 0, 614, 0, 0, 0, -2, 0, 0,
	0, 61, 62, 0, 0, 0, 907, 72, 0, 0,
	77, 78, 908, 909, 910, 911, 0, 110, -2, 269,
	129, 131, 132, 133, 124, 134, 205, 204, 150, 207,
	207, 173, 174, 210, 0, 210, 210, 210, 0, 0,
	167, 168, 169, 170, 161, 0, 162, 163, 164, 0,
	165, 247, 0, 822, 215, 216, 218, 222, 0, 0,
	243, 244, 0, 0, 100, 0, 938, 0, 0, 0,
	927, 119, 120, 121, 122, 117, 0, 0, 125, 322,
	0, 0, 0, 245, 0, 0, 224, 240, 225, 226,
	0, 351, 0, 0, 384, 385, 386, 387, 0, 0,
	0, 320, 322, 210, 0, 276, 277, 282, 283, 301,
	0, 0, 0, 0, 848, 849, 0, 852, 92, 374,
	376, 375, 379, 0, 0, 0, 0, 411, 261, 822,
	0, 415, 262, 263, 470, 437, 452, 470, 429, 436,
	477, 456, 487, 530, 0, 0, 0, 538, 0, 665,
	667, 669, 656, 677, 660, 0, 657, 0, 0, 651,
	719, 0, 0, 561, 0, 810, 853, 723, 724, 0,
	0, 0, 0, 0, 760, 0, 0, 761, 0, 810,
	0, 788, 0, 0, 735, 754, 0, 0, 755, 756,
	757, 758, 759, 516, 519, 521, 595, 0, 0, 0,
	0, 617, 933, 43, 0, 0, 0, 820, 821, 813,
	42, 0, 920, 921, 804, 805, 806, 0, 575, 586,
	567, 0, 818, 895, 0, 0, 887, 0, 0, 640,
	903, 0, 588, 609, 611, 0, 606, 621, 622, 624,
	0, 626, 0, 628, 629, 592, 593, 594, 0, 640,
	0, 640, 66, 640, 68, 0, 634, 75, 76, 0,
	0, 82, 211, 212, 117, 271, 130, 136, 0, 0,
	0, 140, 0, 0, 143, 145, 146, 206, 210, 210,
	175, 208, 209, 176, 177, 178, 0, 194, 0, 0,
	0, 264, 87, 826, 825, 222, 222, 217, 0, 220,
	0, 197, 0, 102, 0, 0, 0, 0, 326, 599,
	0, 337, 338, 0, 321, 381, 0, 214, 0, 227,
	793, 602, 0, 0, 339, 0, 322, 342, 343, 354,
	304, 305, 302, 597, 839, 840, 841, 0, 851, 95,
	0, 0, 0, 0, 372, 0, 413, 414, 64, 473,
	473, 525, 0, 528, 0, 658, 0, 678, 661, 720,
	721, 0, 794, 818, 45, 0, 196, 196, 773, 196,
	200, 776, 196, 778, 196, 781, 0, 0, 0, 0,
	0, 0, 0, 785, 734, 791, 0, 0, 0, 0,
	0, 0, 0, 0, 207, 858, 855, 44, 808, 0,
	641, 579, 48, 52, 0, 895, 886, 897, 899, 0,
	0, 0, 891, 0, 810, 0, 0, 603, 610, 0,
	0, 604, 0, 605, 625, 627, -2, 810, 640, 59,
	60, 0, 79, 80, 81, 270, 137, 138, 0, 141,
	142, 144, 171, 172, 207, 0, 207, 0, 201, 0,
	253, 265, 0, 823, 824, 0, 0, 219, 221, 597,
	103, 104, 105, 0, 0, 126, 323, 0, 213, 0,
	0, 406, 403, 340, 341, 0, 0, 850, 373, 0,
	93, 94, 0, 0, 378, 412, 422, 428, 527, 547,
	662, 722, 853, 725, 770, 207, 774, 775, 777, 779,
	780, 782, 727, 726, 0, 0, 0, 0, 0, 818,
	0, 789, 0, 0, 0, 0, 0, 615, 207, 878,
	49, 0, 0, 0, 53, 0, 900, 0, 0, 0,
	0, 70, 818, 904, 905, 607, 0, 612, 818, 58,
	139, 210, 195, 210, 0, 0, 266, 827, 828, 829,
	830, 831, 832, 833, 0, 329, 600, 0, 0, 383,
	0, 391, 0, 0, 0, 0, 96, 97, 0, 0,
	0, 46, 771, 772, 0, 0, 0, 0, 762, 0,
	786, 0, 0, 0, 637, 0, 0, 635, 860, 859,
	872, 876, 809, 807, 0, 898, 0, 890, 893, 889,
	892, 56, 0, 57, 184, 185, 199, 202, 0, 0,
	0, 407, 404, 405, 842, 598, 0, 0, 0, 380,
	728, 730, 729, 731, 0, 0, 0, 733, 750, 751,
	636, 638, 639, 596, 878, 0, 871, 874, -2, 0,
	0, 888, 0, 608, 842, 0, 0, 370, 844, 98,
	99, 315, 316, 317, 92, 732, 0, 0, 0, 865,
	863, 863, 876, 0, 880, 0, 885, 0, 896, 894,
	88, 0, 0, 0, 0, 845, 846, 95, 763, 0,
	766, 868, 0, 861, 864, 862, 873, 0, 879, 0,
	0, 877, 408, 409, 249, 0, 377, 764, 857, 0,
	866, 867, 875, 0, 0, 250, 251, 0, 843, 0,
	869, 870, 881, 883, 252, 0, 0, 0, 0, 254,
	256, 257, 0, 0, 255, 765, 258, 259, 260,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 466,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:409
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:414
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:415
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:451
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:480
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:486
		{
			yyVAL.statement = &Load{}
		}
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:492
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:509
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:532
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:540
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:546
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:552
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:560
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:570
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:577
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:589
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.insertAction = InsertAct
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:605
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:611
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:643
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:653
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:663
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:668
		{
			yyVAL.partitions = nil
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:672
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:688
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:694
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:704
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.characteristic = ReadWrite
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.characteristic = ReadOnly
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:726
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.isolationLevel = Serializable
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.scope = SessionScope
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:740
		{
			yyVAL.scope = GlobalScope
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:752
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:759
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:768
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:772
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			yyVAL.boolean = false
		}
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.boolean = true
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:792
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:803
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:808
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:825
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:831
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:845
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].bytes)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:850
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:855
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:860
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 106:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:867
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharsets = nil
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:905
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:918
		{
			yyVAL.boolean = false
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.boolean = true
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:928
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:938
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:942
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:953
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:983
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1002
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptions
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnTypeOptions = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyDollar[1].columnTypeOptions.NotNull = false
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1021
		{
			yyDollar[1].columnTypeOptions.NotNull = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yyDollar[1].columnTypeOptions.Default = yyDollar[3].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1031
		{
			yyDollar[1].columnTypeOptions.OnUpdate = yyDollar[4].expr
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1036
		{
			yyDollar[1].columnTypeOptions.Autoincrement = true
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyDollar[1].columnTypeOptions.Comment = NewStrLiteral(yyDollar[3].bytes)
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyPrimary
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1051
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUniqueKey
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyDollar[1].columnTypeOptions.KeyOpt = colKeyUnique
			yyVAL.columnTypeOptions = yyDollar[1].columnTypeOptions
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1182
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1239
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1284
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1289
		{
			yyVAL.literal = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1293
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1298
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1302
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1320
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.boolean = false
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1332
		{
			yyVAL.boolean = true
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1337
		{
			yyVAL.boolean = false
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.boolean = true
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1346
		{
			yyVAL.str = ""
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1359
		{
			yyVAL.str = ""
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1363
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1367
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 213:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1374
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = nil
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1399
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1403
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = ""
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1432
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1440
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1444
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = yyDollar[2].str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = "key"
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = yyDollar[1].str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = ""
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1516
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1522
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1548
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1552
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1560
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1566
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1584
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1588
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 261:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1605
		{
			yyVAL.str = ""
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1609
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1618
		{
			yyVAL.boolean = true
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.boolean = true
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1626
		{
			yyVAL.boolean = false
		}
	case 267:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1631
		{
			yyVAL.tableOptions = nil
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1641
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1645
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1649
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1669
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1673
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1677
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1697
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1701
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1753
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1769
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1773
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1777
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = ""
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1822
		{
			yyVAL.bytes = []byte("")
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1828
		{
			yyVAL.colName = nil
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.colName = nil
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1841
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1846
		{
			yyVAL.alterOptions = nil
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1854
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1858
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1866
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1872
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1876
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1880
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1906
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 340:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1914
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1918
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1922
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1926
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1930
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1954
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1958
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.alterOption = &Force{}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1966
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 354:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1976
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1990
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1994
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1998
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2002
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2006
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2010
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2018
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2024
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2030
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2037
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 370:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2050
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2061
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2090
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 377:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 378:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2111
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2121
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 380:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2125
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2138
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 383:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2146
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2150
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2154
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2158
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2162
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2166
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2178
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2194
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2210
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2214
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2222
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 403:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.boolean = false
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.boolean = false
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yyVAL.boolean = true
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2246
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 408:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2252
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2256
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2268
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2272
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2278
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[5].tableNames, IfExists: yyDollar[4].boolean, Temp: yyDollar[2].boolean}
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2282
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2305
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2310
		{
			yyVAL.statement = &OtherRead{}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 422:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2324
		{
			yyVAL.statement = &Show{&ShowBasic{Full: yyDollar[2].boolean, Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2328
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2344
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2348
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2352
		{
			yyVAL.statement = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2356
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2360
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].boolean, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2388
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilter}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2392
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2396
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2400
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2404
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2409
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2413
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2417
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2421
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2425
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2429
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2433
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2437
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2441
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2445
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2449
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2454
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2462
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2466
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2471
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2489
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2493
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = ""
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2513
		{
			yyVAL.str = "extended "
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2519
		{
			yyVAL.boolean = false
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.boolean = true
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2533
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.str = ""
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2553
		{
			yyVAL.showFilter = nil
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2561
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2567
		{
			yyVAL.showFilter = nil
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2571
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2577
		{
			yyVAL.empty = struct{}{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2581
		{
			yyVAL.empty = struct{}{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2585
		{
			yyVAL.empty = struct{}{}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2591
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2595
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.statement = &Begin{}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.statement = &Begin{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.statement = &Commit{}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2617
		{
			yyVAL.statement = &Rollback{}
		}
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2621
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2626
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2628
		{
			yyVAL.empty = struct{}{}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2631
		{
			yyVAL.empty = struct{}{}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.empty = struct{}{}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2638
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2649
		{
			yyVAL.explainType = EmptyType
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.explainType = JSONType
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.explainType = TreeType
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.explainType = VitessType
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.explainType = TraditionalType
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.explainType = AnalyzeType
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = ""
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2720
		{
			yyVAL.statement = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2724
		{
			yyVAL.statement = &ExplainStmt{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2734
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2740
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2750
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2762
		{
			yyVAL.lockType = Read
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.lockType = ReadLocal
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2770
		{
			yyVAL.lockType = Write
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2786
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, FlushOptions: yyDollar[3].strs}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean}
		}
	case 525:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2794
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, WithLock: true}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2798
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames}
		}
	case 527:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2802
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, WithLock: true}
		}
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2806
		{
			yyVAL.statement = &Flush{IsLocal: yyDollar[2].boolean, TableNames: yyDollar[4].tableNames, ForExport: true}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2816
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2822
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2826
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2830
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2834
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + yyDollar[3].str
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2871
		{
			yyVAL.boolean = false
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.boolean = true
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.boolean = true
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2884
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2888
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes) + " " + yyDollar[3].colIdent.String()
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2893
		{
			setAllowComments(yylex, true)
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2897
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2903
		{
			yyVAL.bytes2 = nil
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2907
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.boolean = true
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2917
		{
			yyVAL.boolean = false
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2921
		{
			yyVAL.boolean = true
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2930
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2934
		{
			yyVAL.str = SQLCacheStr
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2939
		{
			yyVAL.boolean = false
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.boolean = true
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2947
		{
			yyVAL.boolean = true
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2952
		{
			yyVAL.selectExprs = nil
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2961
		{
			yyVAL.strs = nil
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2965
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2977
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2983
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2987
		{
			yyVAL.str = SQLCacheStr
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.str = DistinctStr
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.str = DistinctStr
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2999
		{
			yyVAL.str = StraightJoinHint
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3013
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3031
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3036
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3056
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3060
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3070
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3088
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3094
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3104
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3109
		{
			yyVAL.columns = nil
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3113
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3129
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3146
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3150
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3154
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3158
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3164
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3166
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 609:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3170
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3176
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3178
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3181
		{
			yyVAL.empty = struct{}{}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.empty = struct{}{}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3186
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3194
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3207
		{
			yyVAL.joinType = NormalJoinType
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.joinType = NormalJoinType
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3215
		{
			yyVAL.joinType = NormalJoinType
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.joinType = StraightJoinType
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3227
		{
			yyVAL.joinType = LeftJoinType
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3231
		{
			yyVAL.joinType = LeftJoinType
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.joinType = RightJoinType
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3239
		{
			yyVAL.joinType = RightJoinType
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3245
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3249
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3259
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3263
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3269
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3273
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3279
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3284
		{
			yyVAL.indexHints = nil
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3288
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3292
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3296
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3300
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3305
		{
			yyVAL.expr = nil
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3349
		{
			yyVAL.str = ""
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3359
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3377
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3381
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 658:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 661:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 662:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3401
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3415
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3423
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3437
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3445
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3453
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3461
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3466
		{
			yyVAL.expr = nil
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3470
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3484
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3490
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3530
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3534
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3538
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3542
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3554
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3558
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3570
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3582
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3586
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3590
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3594
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3598
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3602
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3614
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3628
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3658
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3662
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 722:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3676
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3680
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 725:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3684
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3688
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 727:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3692
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 728:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3696
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 729:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 730:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3704
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 731:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3708
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 732:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3712
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 733:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3716
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3720
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3724
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3734
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3738
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3747
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3757
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3773
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3777
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3781
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3786
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3796
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 750:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3800
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 751:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3804
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3814
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 756:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3832
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3836
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3840
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3844
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.matchExprOption = NoOption
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3858
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3862
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 765:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3866
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3870
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3890
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3894
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3898
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3902
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3906
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3910
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3920
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3928
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3932
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3940
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3945
		{
			yyVAL.expr = nil
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3949
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3954
		{
			yyVAL.str = string("")
		}
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3968
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3974
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3979
		{
			yyVAL.expr = nil
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3983
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3993
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3997
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4003
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4019
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4023
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4027
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4031
		{
			yyVAL.expr = &NullVal{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4037
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4046
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4050
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4055
		{
			yyVAL.exprs = nil
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4064
		{
			yyVAL.expr = nil
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4068
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4073
		{
			yyVAL.orderBy = nil
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4077
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4083
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4087
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4093
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4098
		{
			yyVAL.orderDirection = AscOrder
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.orderDirection = AscOrder
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.orderDirection = DescOrder
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4111
		{
			yyVAL.limit = nil
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4115
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 820:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4119
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4123
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4128
		{
			yyVAL.alterOptions = nil
		}
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4132
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4136
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4151
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4155
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4159
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4169
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4173
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4177
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4182
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4186
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4190
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4194
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = yyDollar[3].str
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = ""
		}
	case 843:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = yyDollar[2].str
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = "cascaded"
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4235
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = yyDollar[3].str
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4254
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4267
		{
			yyVAL.lock = NoLock
		}
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4271
		{
			yyVAL.lock = ForUpdateLock
		}
	case 855:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4275
		{
			yyVAL.lock = ShareModeLock
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4280
		{
			yyVAL.selectInto = nil
		}
	case 857:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4284
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4288
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4292
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4297
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = ""
		}
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = " header"
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = ""
		}
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = " manifest on"
		}
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = " manifest off"
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = " overwrite on"
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4340
		{
			yyVAL.str = " overwrite off"
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = ""
		}
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = ""
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 880:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4387
		{
			yyVAL.str = ""
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4391
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4400
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4405
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = " optionally"
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4422
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 888:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4430
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4434
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4438
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4448
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4452
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4456
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4461
		{
			yyVAL.updateExprs = nil
		}
	case 896:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4465
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4475
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4485
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4491
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4511
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4517
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4527
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4533
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4541
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4545
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4549
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4557
		{
			yyVAL.bytes = []byte("charset")
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4567
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4571
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.expr = &Default{}
		}
	case 922:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4584
		{
			yyVAL.boolean = false
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			yyVAL.boolean = true
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4589
		{
			yyVAL.boolean = false
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4591
		{
			yyVAL.boolean = true
		}
	case 926:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4594
		{
			yyVAL.boolean = false
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4596
		{
			yyVAL.boolean = true
		}
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4599
		{
			yyVAL.ignore = false
		}
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4601
		{
			yyVAL.ignore = true
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4604
		{
			yyVAL.empty = struct{}{}
		}
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4606
		{
			yyVAL.empty = struct{}{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4608
		{
			yyVAL.empty = struct{}{}
		}
	case 933:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4612
		{
			yyVAL.statement = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprs}
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4617
		{
			yyVAL.exprs = nil
		}
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4621
		{
			yyVAL.exprs = yyDollar[1].exprs
		}
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4626
		{
			yyVAL.indexOptions = nil
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4628
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4632
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4638
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4642
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4649
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5096
		{
			decNesting(yylex)
		}
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5101
		{
			skipToEnd(yylex)
		}
	case 1346:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5106
		{
			skipToEnd(yylex)
		}
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5110
		{
			skipToEnd(yylex)
		}
	case 1348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5114
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
