// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const DISCARD = 57439
const IMPORT = 57440
const ENABLE = 57441
const DISABLE = 57442
const TABLESPACE = 57443
const OR = 57444
const XOR = 57445
const AND = 57446
const NOT = 57447
const BETWEEN = 57448
const CASE = 57449
const WHEN = 57450
const THEN = 57451
const ELSE = 57452
const END = 57453
const LE = 57454
const GE = 57455
const NE = 57456
const NULL_SAFE_EQUAL = 57457
const IS = 57458
const LIKE = 57459
const REGEXP = 57460
const IN = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_BINARY = 57469
const UNDERSCORE_UTF8MB4 = 57470
const UNDERSCORE_UTF8 = 57471
const UNDERSCORE_LATIN1 = 57472
const INTERVAL = 57473
const JSON_EXTRACT_OP = 57474
const JSON_UNQUOTE_EXTRACT_OP = 57475
const CREATE = 57476
const ALTER = 57477
const DROP = 57478
const RENAME = 57479
const ANALYZE = 57480
const ADD = 57481
const FLUSH = 57482
const CHANGE = 57483
const SCHEMA = 57484
const TABLE = 57485
const INDEX = 57486
const VIEW = 57487
const TO = 57488
const IGNORE = 57489
const IF = 57490
const UNIQUE = 57491
const PRIMARY = 57492
const COLUMN = 57493
const SPATIAL = 57494
const FULLTEXT = 57495
const KEY_BLOCK_SIZE = 57496
const CHECK = 57497
const INDEXES = 57498
const ACTION = 57499
const CASCADE = 57500
const CONSTRAINT = 57501
const FOREIGN = 57502
const NO = 57503
const REFERENCES = 57504
const RESTRICT = 57505
const SHOW = 57506
const DESCRIBE = 57507
const EXPLAIN = 57508
const DATE = 57509
const ESCAPE = 57510
const REPAIR = 57511
const OPTIMIZE = 57512
const TRUNCATE = 57513
const MAXVALUE = 57514
const PARTITION = 57515
const REORGANIZE = 57516
const LESS = 57517
const THAN = 57518
const PROCEDURE = 57519
const TRIGGER = 57520
const VINDEX = 57521
const VINDEXES = 57522
const DIRECTORY = 57523
const NAME = 57524
const UPGRADE = 57525
const STATUS = 57526
const VARIABLES = 57527
const WARNINGS = 57528
const CASCADED = 57529
const DEFINER = 57530
const OPTION = 57531
const SQL = 57532
const UNDEFINED = 57533
const SEQUENCE = 57534
const MERGE = 57535
const TEMPTABLE = 57536
const INVOKER = 57537
const SECURITY = 57538
const FIRST = 57539
const AFTER = 57540
const BEGIN = 57541
const START = 57542
const TRANSACTION = 57543
const COMMIT = 57544
const ROLLBACK = 57545
const SAVEPOINT = 57546
const RELEASE = 57547
const WORK = 57548
const BIT = 57549
const TINYINT = 57550
const SMALLINT = 57551
const MEDIUMINT = 57552
const INT = 57553
const INTEGER = 57554
const BIGINT = 57555
const INTNUM = 57556
const REAL = 57557
const DOUBLE = 57558
const FLOAT_TYPE = 57559
const DECIMAL = 57560
const NUMERIC = 57561
const TIME = 57562
const TIMESTAMP = 57563
const DATETIME = 57564
const YEAR = 57565
const CHAR = 57566
const VARCHAR = 57567
const BOOL = 57568
const CHARACTER = 57569
const VARBINARY = 57570
const NCHAR = 57571
const TEXT = 57572
const TINYTEXT = 57573
const MEDIUMTEXT = 57574
const LONGTEXT = 57575
const BLOB = 57576
const TINYBLOB = 57577
const MEDIUMBLOB = 57578
const LONGBLOB = 57579
const JSON = 57580
const ENUM = 57581
const GEOMETRY = 57582
const POINT = 57583
const LINESTRING = 57584
const POLYGON = 57585
const GEOMETRYCOLLECTION = 57586
const MULTIPOINT = 57587
const MULTILINESTRING = 57588
const MULTIPOLYGON = 57589
const NULLX = 57590
const AUTO_INCREMENT = 57591
const APPROXNUM = 57592
const SIGNED = 57593
const UNSIGNED = 57594
const ZEROFILL = 57595
const COLLATION = 57596
const DATABASES = 57597
const SCHEMAS = 57598
const TABLES = 57599
const VITESS_METADATA = 57600
const VSCHEMA = 57601
const FULL = 57602
const PROCESSLIST = 57603
const COLUMNS = 57604
const FIELDS = 57605
const ENGINES = 57606
const PLUGINS = 57607
const EXTENDED = 57608
const KEYSPACES = 57609
const VITESS_KEYSPACES = 57610
const VITESS_SHARDS = 57611
const VITESS_TABLETS = 57612
const CODE = 57613
const PRIVILEGES = 57614
const FUNCTION = 57615
const NAMES = 57616
const CHARSET = 57617
const GLOBAL = 57618
const SESSION = 57619
const ISOLATION = 57620
const LEVEL = 57621
const READ = 57622
const WRITE = 57623
const ONLY = 57624
const REPEATABLE = 57625
const COMMITTED = 57626
const UNCOMMITTED = 57627
const SERIALIZABLE = 57628
const CURRENT_TIMESTAMP = 57629
const DATABASE = 57630
const CURRENT_DATE = 57631
const CURRENT_TIME = 57632
const LOCALTIME = 57633
const LOCALTIMESTAMP = 57634
const CURRENT_USER = 57635
const UTC_DATE = 57636
const UTC_TIME = 57637
const UTC_TIMESTAMP = 57638
const REPLACE = 57639
const CONVERT = 57640
const CAST = 57641
const SUBSTR = 57642
const SUBSTRING = 57643
const GROUP_CONCAT = 57644
const SEPARATOR = 57645
const TIMESTAMPADD = 57646
const TIMESTAMPDIFF = 57647
const MATCH = 57648
const AGAINST = 57649
const BOOLEAN = 57650
const LANGUAGE = 57651
const WITH = 57652
const QUERY = 57653
const EXPANSION = 57654
const UNUSED = 57655
const ARRAY = 57656
const CUME_DIST = 57657
const DESCRIPTION = 57658
const DENSE_RANK = 57659
const EMPTY = 57660
const EXCEPT = 57661
const FIRST_VALUE = 57662
const GROUPING = 57663
const GROUPS = 57664
const JSON_TABLE = 57665
const LAG = 57666
const LAST_VALUE = 57667
const LATERAL = 57668
const LEAD = 57669
const MEMBER = 57670
const NTH_VALUE = 57671
const NTILE = 57672
const OF = 57673
const OVER = 57674
const PERCENT_RANK = 57675
const RANK = 57676
const RECURSIVE = 57677
const ROW_NUMBER = 57678
const SYSTEM = 57679
const WINDOW = 57680
const ACTIVE = 57681
const ADMIN = 57682
const BUCKETS = 57683
const CLONE = 57684
const COMPONENT = 57685
const DEFINITION = 57686
const ENFORCED = 57687
const EXCLUDE = 57688
const FOLLOWING = 57689
const GEOMCOLLECTION = 57690
const GET_MASTER_PUBLIC_KEY = 57691
const HISTOGRAM = 57692
const HISTORY = 57693
const INACTIVE = 57694
const INVISIBLE = 57695
const LOCKED = 57696
const MASTER_COMPRESSION_ALGORITHMS = 57697
const MASTER_PUBLIC_KEY_PATH = 57698
const MASTER_TLS_CIPHERSUITES = 57699
const MASTER_ZSTD_COMPRESSION_LEVEL = 57700
const NESTED = 57701
const NETWORK_NAMESPACE = 57702
const NOWAIT = 57703
const NULLS = 57704
const OJ = 57705
const OLD = 57706
const OPTIONAL = 57707
const ORDINALITY = 57708
const ORGANIZATION = 57709
const OTHERS = 57710
const PATH = 57711
const PERSIST = 57712
const PERSIST_ONLY = 57713
const PRECEDING = 57714
const PRIVILEGE_CHECKS_USER = 57715
const PROCESS = 57716
const RANDOM = 57717
const REFERENCE = 57718
const REQUIRE_ROW_FORMAT = 57719
const RESOURCE = 57720
const RESPECT = 57721
const RESTART = 57722
const RETAIN = 57723
const REUSE = 57724
const ROLE = 57725
const SECONDARY = 57726
const SECONDARY_ENGINE = 57727
const SECONDARY_LOAD = 57728
const SECONDARY_UNLOAD = 57729
const SKIP = 57730
const SRID = 57731
const THREAD_PRIORITY = 57732
const TIES = 57733
const UNBOUNDED = 57734
const VCPU = 57735
const VISIBLE = 57736
const FORMAT = 57737
const TREE = 57738
const VITESS = 57739
const TRADITIONAL = 57740
const LOCAL = 57741
const LOW_PRIORITY = 57742

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	161, 837,
	-2, 87,
	-1, 43,
	141, 111,
	244, 111,
	-2, 105,
	-1, 44,
	244, 111,
	-2, 281,
	-1, 51,
	34, 384,
	161, 384,
	173, 384,
	201, 398,
	202, 398,
	-2, 386,
	-1, 56,
	163, 408,
	-2, 406,
	-1, 80,
	55, 451,
	-2, 459,
	-1, 104,
	141, 111,
	244, 111,
	-2, 106,
	-1, 112,
	166, 231,
	167, 231,
	-2, 275,
	-1, 468,
	148, 848,
	-2, 844,
	-1, 469,
	148, 849,
	-2, 845,
	-1, 486,
	55, 452,
	-2, 464,
	-1, 487,
	55, 453,
	-2, 465,
	-1, 507,
	116, 1148,
	-2, 80,
	-1, 508,
	116, 1047,
	-2, 81,
	-1, 513,
	116, 1002,
	-2, 808,
	-1, 515,
	116, 1089,
	-2, 810,
	-1, 676,
	172, 36,
	177, 36,
	-2, 242,
	-1, 703,
	141, 111,
	244, 111,
	-2, 304,
	-1, 990,
	172, 37,
	177, 37,
	-2, 243,
	-1, 1109,
	148, 851,
	-2, 847,
	-1, 1199,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1574,
	5, 705,
	18, 705,
	20, 705,
	32, 705,
	82, 705,
	-2, 490,
	-1, 1782,
	45, 779,
	-2, 777,
}

const yyPrivate = 57344

const yyLast = 20890

var yyAct = [...]int{
	468, 1860, 1847, 1624, 1782, 1483, 1823, 1492, 1400, 1731,
	1555, 412, 427, 1554, 441, 1708, 757, 1221, 820, 871,
	1387, 1146, 1368, 1401, 687, 79, 3, 1551, 1217, 1240,
	1255, 1479, 1260, 1458, 1220, 864, 410, 1196, 1512, 650,
	1566, 1096, 1459, 1328, 716, 1038, 1539, 127, 1285, 755,
	139, 77, 381, 139, 1262, 1103, 1451, 1024, 393, 651,
	139, 1178, 1185, 908, 988, 874, 892, 869, 901, 512,
	1148, 891, 488, 894, 858, 995, 1129, 657, 473, 31,
	414, 1073, 403, 654, 677, 658, 1161, 996, 393, 1263,
	673, 393, 139, 393, 1201, 75, 907, 1251, 674, 905,
	881, 1041, 105, 106, 509, 107, 898, 126, 400, 833,
	111, 1143, 1144, 1059, 74, 1366, 834, 128, 129, 130,
	1833, 974, 80, 139, 1779, 139, 8, 7, 6, 1600,
	1693, 1267, 139, 1866, 709, 1733, 1820, 139, 479, 1859,
	1801, 1529, 1849, 1625, 1819, 1654, 1800, 76, 494, 498,
	116, 666, 1265, 102, 122, 474, 124, 82, 83, 84,
	85, 86, 87, 1473, 1581, 1582, 1367, 1472, 1212, 1213,
	401, 402, 672, 1580, 1211, 453, 372, 459, 460, 457,
	458, 726, 456, 455, 454, 373, 108, 506, 909, 97,
	910, 472, 461, 462, 370, 471, 1431, 724, 1443, 1430,
	684, 33, 1432, 753, 68, 37, 38, 668, 667, 1769,
	782, 781, 791, 792, 784, 785, 786, 787, 788, 789,
	790, 783, 735, 736, 793, 1234, 1494, 1686, 367, 1264,
	670, 1145, 113, 1241, 1008, 941, 691, 379, 102, 132,
	133, 134, 737, 102, 94, 1645, 738, 735, 736, 1643,
	98, 391, 1058, 99, 100, 389, 120, 121, 119, 118,
	128, 129, 130, 395, 1480, 1286, 1469, 1272, 727, 1609,
	125, 1060, 1061, 1062, 1803, 67, 1610, 1854, 358, 977,
	752, 1013, 1106, 1274, 725, 1275, 1276, 751, 128, 129,
	130, 730, 731, 728, 729, 732, 1495, 704, 1497, 101,
	1307, 1496, 1010, 1179, 1704, 360, 361, 362, 114, 377,
	378, 384, 112, 1012, 115, 374, 376, 385, 363, 364,
	387, 386, 1867, 366, 365, 679, 359, 369, 382, 496,
	1014, 1864, 1834, 669, 1845, 655, 500, 33, 34, 35,
	68, 37, 38, 655, 994, 993, 929, 655, 680, 1011,
	708, 653, 749, 663, 1369, 1371, 1498, 72, 139, 1018,
	758, 1748, 39, 65, 66, 744, 63, 746, 1538, 692,
	1468, 1537, 64, 739, 742, 1536, 664, 357, 131, 805,
	806, 1786, 393, 1599, 101, 1266, 1295, 1675, 942, 101,
	1471, 686, 1579, 404, 1392, 686, 393, 393, 1336, 743,
	745, 52, 1799, 1347, 1296, 719, 720, 721, 722, 723,
	1770, 67, 1306, 1207, 885, 1305, 818, 713, 128, 129,
	130, 1241, 1218, 764, 783, 754, 1622, 793, 955, 958,
	959, 960, 961, 962, 963, 793, 964, 965, 966, 967,
	968, 943, 944, 945, 946, 927, 928, 956, 1370, 930,
	383, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 947, 948, 949, 950, 951, 952, 953, 954, 1815,
	1344, 117, 139, 1427, 1804, 1862, 702, 1591, 1863, 748,
	1861, 1039, 42, 45, 48, 47, 50, 1042, 62, 1513,
	803, 750, 718, 861, 707, 741, 1157, 393, 1749, 1747,
	139, 862, 139, 139, 770, 393, 1055, 733, 1294, 69,
	740, 393, 51, 71, 70, 772, 770, 60, 61, 49,
	773, 509, 821, 685, 767, 765, 766, 685, 773, 957,
	1761, 1515, 773, 688, 679, 682, 683, 90, 655, 890,
	805, 806, 676, 680, 104, 859, 1564, 53, 54, 1273,
	55, 56, 57, 58, 675, 699, 978, 700, 911, 768,
	701, 875, 1531, 1130, 836, 838, 840, 842, 844, 846,
	847, 837, 839, 980, 843, 845, 1080, 848, 696, 856,
	695, 91, 1517, 1130, 1521, 1354, 1516, 483, 1514, 1441,
	1078, 1079, 1077, 1519, 1231, 1040, 771, 772, 770, 863,
	1159, 1043, 1518, 717, 1533, 1789, 1232, 805, 806, 1132,
	662, 878, 1162, 1163, 773, 1520, 1522, 782, 781, 791,
	792, 784, 785, 786, 787, 788, 789, 790, 783, 710,
	711, 793, 782, 781, 791, 792, 784, 785, 786, 787,
	788, 789, 790, 783, 1692, 69, 793, 1342, 1691, 1456,
	139, 1343, 1605, 1455, 970, 1341, 786, 787, 788, 789,
	790, 783, 1158, 139, 793, 981, 982, 1454, 1541, 689,
	690, 703, 771, 772, 770, 1329, 393, 990, 1850, 771,
	772, 770, 771, 772, 770, 999, 771, 772, 770, 482,
	773, 1868, 771, 772, 770, 984, 1270, 773, 1840, 393,
	773, 1003, 1006, 139, 773, 1851, 1853, 665, 139, 1852,
	773, 139, 1023, 1651, 139, 987, 1542, 784, 785, 786,
	787, 788, 789, 790, 783, 1841, 139, 793, 139, 1321,
	1322, 1323, 499, 771, 772, 770, 774, 1842, 67, 1831,
	393, 393, 139, 393, 393, 139, 393, 393, 1009, 998,
	1076, 773, 1068, 1070, 1071, 1813, 1721, 1869, 906, 997,
	1027, 969, 1689, 1663, 1069, 128, 129, 130, 873, 1030,
	1543, 1032, 404, 1034, 1035, 1036, 1037, 116, 1464, 1452,
	1044, 831, 985, 1026, 989, 1318, 1028, 1612, 483, 1045,
	1046, 1074, 1048, 1049, 1097, 1051, 1052, 128, 129, 130,
	1754, 1759, 1753, 1099, 1618, 1835, 668, 667, 1618, 1797,
	867, 870, 1618, 1793, 1019, 1703, 1563, 393, 501, 502,
	782, 781, 791, 792, 784, 785, 786, 787, 788, 789,
	790, 783, 1618, 1787, 793, 1107, 1618, 483, 1118, 1121,
	1467, 1113, 1100, 1101, 1131, 1388, 504, 1662, 483, 1053,
	393, 393, 128, 129, 130, 1229, 1098, 1075, 1673, 483,
	1670, 139, 781, 791, 792, 784, 785, 786, 787, 788,
	789, 790, 783, 393, 76, 793, 1108, 128, 129, 130,
	139, 1476, 769, 393, 821, 1794, 1388, 139, 1109, 139,
	430, 429, 432, 433, 434, 435, 78, 139, 139, 431,
	436, 1760, 1107, 33, 393, 1618, 1617, 393, 1137, 1138,
	128, 129, 130, 1182, 1434, 1110, 1597, 1596, 393, 393,
	509, 1203, 1197, 509, 791, 792, 784, 785, 786, 787,
	788, 789, 790, 783, 1222, 67, 793, 128, 129, 130,
	1595, 1282, 33, 1176, 1593, 1594, 1593, 1592, 1172, 1170,
	483, 483, 973, 1482, 1563, 1109, 1477, 1478, 1225, 1182,
	483, 1170, 1242, 1243, 1244, 1171, 1203, 1395, 769, 483,
	973, 972, 918, 917, 393, 1552, 1182, 67, 1228, 1181,
	1421, 1435, 1204, 1174, 1563, 1281, 1210, 393, 1202, 1396,
	1206, 1359, 393, 1358, 1205, 1170, 999, 1202, 999, 1257,
	1152, 1209, 1160, 1208, 1200, 476, 684, 393, 1280, 1227,
	1164, 139, 139, 139, 139, 139, 67, 1226, 139, 139,
	1141, 1017, 139, 393, 903, 671, 1284, 1204, 469, 1182,
	33, 1710, 1298, 1493, 1170, 1202, 1702, 1681, 975, 1256,
	139, 139, 139, 1611, 1289, 1252, 1297, 1235, 1029, 1236,
	1237, 1238, 1239, 1258, 139, 1246, 1245, 139, 393, 1268,
	1292, 1269, 1293, 1253, 1254, 1247, 1248, 1249, 1250, 1288,
	1291, 1279, 1311, 1258, 1287, 1856, 1657, 1738, 140, 67,
	991, 140, 971, 1312, 92, 1461, 394, 661, 140, 1316,
	1711, 1460, 1074, 1567, 1568, 1698, 1694, 1837, 1267, 1063,
	1064, 1065, 1066, 1000, 67, 1114, 1115, 1848, 1586, 1120,
	1123, 1124, 1570, 1552, 1474, 1056, 394, 1021, 1573, 394,
	140, 394, 782, 781, 791, 792, 784, 785, 786, 787,
	788, 789, 790, 783, 1136, 1461, 793, 1139, 1140, 1699,
	1700, 1412, 139, 1695, 1696, 1697, 1413, 1001, 1002, 1572,
	139, 140, 1410, 140, 1116, 1117, 1409, 1411, 1075, 1324,
	140, 1414, 1408, 1191, 1192, 140, 1818, 1187, 1190, 1191,
	1192, 1188, 139, 1189, 1193, 1544, 1377, 1567, 1568, 872,
	1674, 1386, 1385, 139, 139, 139, 139, 139, 1374, 1337,
	474, 1809, 1806, 1402, 1839, 139, 1822, 1824, 1393, 139,
	1381, 1830, 139, 139, 1397, 1353, 139, 139, 139, 1390,
	1375, 1829, 1783, 96, 1016, 859, 1365, 1781, 1376, 1433,
	1373, 393, 470, 1465, 1419, 694, 1126, 693, 1380, 1460,
	865, 1447, 1299, 1007, 983, 1487, 1389, 1222, 1436, 1422,
	1127, 1216, 866, 1424, 916, 1391, 715, 1486, 1440, 108,
	1404, 1405, 1338, 1407, 1403, 1791, 1415, 1406, 1790, 123,
	1736, 1420, 135, 1290, 992, 1668, 1444, 1445, 393, 1446,
	1155, 1448, 1449, 1450, 1428, 1425, 1656, 1026, 1162, 1163,
	489, 1475, 1844, 1277, 1020, 1438, 1755, 1195, 480, 1463,
	393, 78, 999, 1843, 490, 477, 478, 1384, 1481, 1097,
	1097, 1259, 1547, 1453, 1827, 1383, 1810, 1667, 481, 1666,
	1388, 393, 1348, 1488, 1858, 1857, 1462, 876, 877, 492,
	1345, 491, 782, 781, 791, 792, 784, 785, 786, 787,
	788, 789, 790, 783, 886, 879, 793, 393, 489, 1858,
	1490, 1491, 1784, 1097, 1687, 1156, 1489, 476, 76, 81,
	73, 1, 490, 1509, 1108, 368, 1485, 1510, 1142, 857,
	1499, 1500, 380, 1501, 1846, 1626, 1109, 1707, 1278, 1502,
	1457, 1530, 1261, 393, 1511, 486, 487, 492, 678, 491,
	1219, 89, 1524, 139, 1523, 648, 140, 1333, 1334, 88,
	681, 1508, 747, 393, 1283, 1650, 1746, 1442, 1233, 393,
	393, 1685, 1621, 1585, 1553, 1439, 1788, 1402, 1351, 1509,
	394, 1556, 1187, 1190, 1191, 1192, 1188, 924, 1189, 1193,
	922, 1562, 139, 923, 394, 394, 921, 926, 925, 1111,
	1112, 920, 1057, 390, 1194, 912, 393, 880, 393, 1598,
	1230, 1575, 1054, 1577, 375, 1578, 1561, 1571, 1590, 734,
	371, 801, 1222, 1382, 1222, 1584, 1429, 510, 503, 1576,
	1355, 1701, 1558, 95, 1828, 1807, 1606, 1805, 1780, 139,
	1583, 1732, 1153, 1588, 1589, 139, 1808, 1778, 393, 1838,
	1821, 1154, 868, 1665, 1546, 1603, 1604, 1352, 1378, 1379,
	870, 830, 1615, 1602, 1627, 393, 393, 393, 1128, 139,
	140, 1601, 782, 781, 791, 792, 784, 785, 786, 787,
	788, 789, 790, 783, 895, 1616, 793, 1614, 413, 1067,
	1623, 1620, 428, 425, 1619, 394, 426, 1165, 140, 1394,
	140, 140, 1550, 394, 775, 411, 405, 887, 1186, 394,
	1184, 777, 1183, 780, 899, 1632, 1633, 1569, 1641, 794,
	795, 796, 797, 798, 799, 800, 1565, 778, 779, 776,
	782, 781, 791, 792, 784, 785, 786, 787, 788, 789,
	790, 783, 1664, 893, 793, 1402, 1169, 1470, 976, 1271,
	1608, 1669, 1677, 1503, 393, 660, 485, 1678, 93, 1125,
	1768, 1653, 484, 59, 36, 1683, 397, 1684, 1832, 1814,
	1222, 1436, 760, 782, 781, 791, 792, 784, 785, 786,
	787, 788, 789, 790, 783, 493, 30, 793, 29, 393,
	28, 23, 1688, 22, 1690, 21, 393, 20, 19, 25,
	18, 17, 16, 103, 46, 1638, 1639, 43, 1640, 41,
	1714, 1642, 1709, 1644, 109, 110, 44, 1706, 40, 1636,
	705, 27, 26, 15, 14, 13, 12, 11, 10, 393,
	393, 393, 139, 393, 1724, 1726, 1727, 9, 5, 1713,
	4, 763, 1712, 24, 393, 819, 393, 2, 140, 0,
	0, 1737, 393, 1728, 1532, 1556, 1735, 1744, 1741, 1556,
	0, 140, 0, 1730, 0, 0, 0, 0, 1739, 0,
	1750, 0, 0, 393, 394, 139, 0, 1758, 1756, 1331,
	0, 393, 139, 1332, 0, 0, 1762, 1751, 1548, 1752,
	1649, 0, 0, 0, 1339, 1340, 0, 394, 0, 0,
	1346, 140, 0, 1349, 1350, 0, 140, 0, 0, 140,
	0, 1356, 140, 1357, 0, 0, 1360, 1361, 1362, 1363,
	1364, 1777, 1785, 1556, 140, 0, 140, 0, 0, 1648,
	0, 393, 393, 0, 0, 0, 0, 0, 394, 394,
	140, 394, 394, 140, 394, 394, 1795, 1709, 1222, 1796,
	0, 1792, 0, 0, 0, 0, 0, 393, 1802, 0,
	0, 0, 1720, 1811, 0, 393, 1402, 0, 0, 0,
	1816, 0, 0, 0, 0, 1817, 1417, 1418, 0, 0,
	1826, 1825, 0, 0, 0, 0, 1743, 0, 0, 0,
	0, 1836, 1745, 0, 0, 0, 0, 782, 781, 791,
	792, 784, 785, 786, 787, 788, 789, 790, 783, 0,
	0, 793, 0, 0, 0, 394, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 1655, 0, 0, 782, 781, 791, 792,
	784, 785, 786, 787, 788, 789, 790, 783, 394, 394,
	793, 0, 0, 0, 0, 0, 0, 404, 0, 140,
	0, 0, 0, 0, 1679, 0, 0, 1680, 0, 0,
	1682, 394, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 394, 0, 0, 0, 140, 0, 140, 0, 0,
	0, 0, 0, 0, 0, 140, 140, 0, 1330, 0,
	440, 0, 394, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 1506, 1507, 0, 394, 394, 782, 781,
	791, 792, 784, 785, 786, 787, 788, 789, 790, 783,
	0, 0, 793, 782, 781, 791, 792, 784, 785, 786,
	787, 788, 789, 790, 783, 0, 0, 793, 0, 0,
	138, 0, 0, 388, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 1734, 404, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 1559, 0,
	0, 0, 0, 497, 497, 394, 0, 0, 0, 0,
	394, 439, 138, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 140,
	140, 140, 140, 140, 0, 0, 140, 140, 0, 0,
	140, 394, 0, 138, 0, 138, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 138, 140, 140,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 0, 140, 0, 0, 140, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	0, 0, 652, 0, 659, 0, 0, 0, 1635, 0,
	0, 0, 1637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1646, 1647, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1661,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1671, 1672, 0,
	140, 1676, 0, 0, 0, 0, 0, 0, 140, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 140, 140, 140, 140, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 0, 0, 140, 0, 0,
	140, 140, 0, 0, 140, 140, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1725, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 394, 0,
	0, 0, 0, 0, 0, 1764, 1765, 1766, 1767, 0,
	1771, 0, 1772, 1773, 1774, 0, 1775, 1776, 0, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 394, 138, 511, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 0, 0, 0, 497, 759, 761, 0,
	0, 394, 0, 0, 0, 0, 0, 394, 394, 0,
	138, 0, 138, 902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 394, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 407, 0, 140, 0, 0,
	0, 0, 0, 140, 0, 0, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 883, 0,
	0, 0, 0, 394, 394, 394, 511, 140, 0, 0,
	0, 0, 913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 394, 0, 0, 0, 0, 0, 0, 0,
	1005, 1005, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 138, 0,
	0, 138, 0, 0, 1025, 0, 0, 394, 0, 0,
	0, 0, 0, 0, 394, 0, 138, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 860, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 394, 394, 394,
	140, 394, 0, 0, 0, 0, 0, 652, 0, 442,
	32, 0, 394, 0, 394, 0, 0, 0, 0, 0,
	394, 1004, 1004, 0, 0, 0, 0, 0, 0, 0,
	511, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 394, 32, 140, 396, 0, 0, 0, 0, 394,
	140, 0, 0, 0, 0, 0, 0, 0, 497, 1025,
	0, 0, 0, 497, 497, 0, 0, 497, 497, 497,
	0, 511, 511, 1005, 511, 511, 656, 511, 511, 0,
	0, 0, 0, 0, 0, 475, 0, 0, 0, 0,
	0, 0, 497, 497, 497, 497, 497, 0, 0, 394,
	394, 1150, 0, 0, 0, 0, 0, 697, 0, 698,
	0, 0, 0, 0, 0, 0, 706, 0, 0, 0,
	138, 712, 0, 0, 0, 394, 1025, 138, 0, 138,
	0, 0, 0, 394, 0, 0, 0, 138, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1102, 0,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1004, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 883, 0, 0, 511, 0, 0,
	0, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 0, 0, 0, 0, 511, 0, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	652, 138, 138, 138, 138, 138, 0, 0, 138, 138,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1313, 1314, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 714, 0, 0, 497, 497, 0, 0, 0,
	0, 0, 0, 0, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 1320,
	1150, 756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 32, 0, 0,
	0, 497, 138, 0, 0, 0, 0, 0, 802, 804,
	0, 0, 1005, 138, 138, 138, 138, 138, 0, 0,
	0, 0, 0, 0, 0, 1416, 0, 0, 0, 138,
	0, 0, 138, 138, 0, 0, 138, 1426, 1025, 817,
	0, 0, 0, 822, 823, 824, 825, 826, 827, 828,
	829, 0, 832, 835, 835, 835, 841, 835, 835, 841,
	835, 849, 850, 851, 852, 853, 854, 855, 0, 0,
	0, 0, 0, 0, 889, 32, 0, 900, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 896, 0, 1004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1005, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1025, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 497, 0, 0, 0,
	0, 1072, 0, 0, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1004, 0,
	0, 1484, 0, 138, 0, 0, 0, 0, 511, 0,
	0, 0, 0, 0, 919, 0, 1005, 0, 0, 0,
	0, 1133, 511, 0, 0, 0, 0, 979, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1015, 0, 0,
	0, 0, 900, 0, 0, 1022, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 0, 0, 756, 138,
	1031, 0, 1033, 0, 0, 138, 0, 0, 0, 0,
	0, 1005, 0, 0, 511, 0, 1047, 1004, 0, 1050,
	1560, 1540, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 756,
	756, 0, 756, 756, 0, 756, 756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1005, 0, 0, 0, 0, 652,
	0, 0, 1004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 1629, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1173, 0, 0, 0, 0, 0,
	0, 1177, 0, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 1199, 0, 1325, 1326, 1327, 0, 0, 0,
	0, 0, 0, 0, 0, 1004, 0, 0, 0, 0,
	0, 0, 1150, 0, 0, 0, 1198, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	1705, 0, 138, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1484, 1484, 1484, 0, 1729, 1300, 1301, 1302, 1303, 1304,
	0, 0, 1308, 1309, 0, 1740, 1310, 1742, 0, 0,
	0, 0, 0, 1484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1005, 1315, 0, 0, 0,
	0, 0, 756, 0, 1484, 0, 0, 0, 1317, 0,
	0, 1319, 1484, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1004, 1335, 1812, 0,
	475, 0, 0, 0, 0, 0, 1484, 0, 0, 0,
	0, 0, 0, 0, 0, 1504, 1505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1525, 1526, 0, 1527, 1528, 0, 0, 1372, 0, 0,
	0, 0, 0, 0, 1534, 1535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 896, 0, 0, 0, 0, 0, 1423, 1398, 1399,
	0, 0, 896, 896, 896, 896, 896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1198, 0,
	0, 896, 0, 0, 0, 896, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1634,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1557, 0, 32, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1607, 1715, 1716, 1717, 1718, 1719, 1613,
	0, 0, 1722, 1723, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1631, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1652,
	0, 0, 0, 0, 0, 0, 1658, 1659, 1660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1557, 0, 32, 0, 1557, 0, 0, 0, 0, 1757,
	0, 0, 0, 0, 0, 0, 1763, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1557, 632,
	619, 0, 0, 571, 635, 542, 560, 644, 562, 565,
	603, 523, 584, 255, 557, 32, 546, 519, 553, 520,
	544, 573, 182, 577, 541, 621, 587, 634, 219, 0,
	547, 267, 605, 298, 170, 227, 225, 320, 188, 184,
	181, 169, 205, 232, 266, 315, 260, 641, 222, 594,
	0, 307, 241, 0, 0, 0, 575, 624, 582, 615,
	570, 604, 531, 593, 636, 558, 601, 637, 210, 168,
	146, 252, 308, 190, 0, 0, 0, 128, 129, 130,
	0, 1223, 1224, 0, 0, 0, 0, 0, 164, 0,
	598, 631, 555, 600, 179, 208, 183, 178, 318, 602,
	647, 518, 595, 0, 521, 524, 643, 627, 550, 551,
	1437, 0, 0, 0, 0, 0, 0, 574, 583, 612,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 548,
	0, 592, 0, 0, 0, 527, 522, 0, 0, 0,
	0, 572, 0, 0, 0, 530, 0, 549, 613, 0,
	516, 196, 525, 617, 626, 569, 344, 630, 567, 566,
	633, 608, 528, 623, 561, 218, 526, 215, 142, 155,
	0, 559, 251, 285, 289, 622, 545, 554, 171, 552,
	287, 264, 333, 591, 268, 286, 223, 322, 279, 332,
	345, 346, 177, 245, 339, 316, 342, 354, 156, 174,
	258, 312, 336, 304, 240, 319, 214, 303, 195, 145,
	148, 314, 330, 165, 297, 0, 0, 0, 150, 328,
	311, 238, 211, 212, 149, 0, 283, 180, 193, 173,
	254, 325, 326, 172, 355, 157, 341, 152, 158, 340,
	247, 321, 329, 239, 231, 151, 327, 237, 230, 217,
	187, 201, 277, 226, 278, 202, 243, 242, 244, 0,
	147, 0, 309, 337, 356, 162, 540, 618, 317, 350,
	353, 0, 280, 163, 194, 186, 276, 192, 220, 349,
	351, 352, 161, 274, 199, 246, 159, 204, 305, 216,
	224, 610, 646, 263, 288, 166, 335, 306, 535, 539,
	533, 534, 585, 586, 536, 638, 639, 640, 614, 529,
	0, 537, 538, 0, 620, 628, 629, 590, 141, 153,
	221, 642, 281, 191, 338, 517, 532, 176, 543, 0,
	0, 556, 563, 564, 576, 578, 579, 580, 581, 589,
	596, 597, 599, 606, 607, 609, 611, 616, 625, 645,
	143, 144, 154, 160, 167, 175, 185, 189, 197, 200,
	203, 206, 207, 209, 213, 229, 233, 234, 235, 236,
	248, 249, 250, 253, 256, 257, 259, 261, 262, 265,
	269, 270, 271, 272, 273, 275, 282, 284, 290, 291,
	292, 293, 294, 295, 296, 299, 300, 301, 302, 310,
	313, 323, 324, 334, 343, 347, 198, 331, 348, 0,
	228, 588, 632, 619, 0, 0, 571, 635, 542, 560,
	644, 562, 565, 603, 523, 584, 255, 557, 0, 546,
	519, 553, 520, 544, 573, 182, 577, 541, 621, 587,
	634, 219, 0, 547, 267, 605, 298, 170, 227, 225,
	320, 188, 184, 181, 169, 205, 232, 266, 315, 260,
	641, 222, 594, 0, 307, 241, 0, 0, 0, 575,
	624, 582, 615, 570, 604, 531, 593, 636, 558, 601,
	637, 210, 168, 146, 252, 308, 190, 0, 0, 0,
	128, 129, 130, 0, 1223, 1224, 0, 0, 0, 0,
	0, 164, 0, 598, 631, 555, 600, 179, 208, 183,
	178, 318, 602, 647, 518, 595, 0, 521, 524, 643,
	627, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	574, 583, 612, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 548, 0, 592, 0, 0, 0, 527, 522,
	0, 0, 0, 0, 572, 0, 0, 0, 530, 0,
	549, 613, 0, 516, 196, 525, 617, 626, 569, 344,
	630, 567, 566, 633, 608, 528, 623, 561, 218, 526,
	215, 142, 155, 0, 559, 251, 285, 289, 622, 545,
	554, 171, 552, 287, 264, 333, 591, 268, 286, 223,
	322, 279, 332, 345, 346, 177, 245, 339, 316, 342,
	354, 156, 174, 258, 312, 336, 304, 240, 319, 214,
	303, 195, 145, 148, 314, 330, 165, 297, 0, 0,
	0, 150, 328, 311, 238, 211, 212, 149, 0, 283,
	180, 193, 173, 254, 325, 326, 172, 355, 157, 341,
	152, 158, 340, 247, 321, 329, 239, 231, 151, 327,
	237, 230, 217, 187, 201, 277, 226, 278, 202, 243,
	242, 244, 0, 147, 0, 309, 337, 356, 162, 540,
	618, 317, 350, 353, 0, 280, 163, 194, 186, 276,
	192, 220, 349, 351, 352, 161, 274, 199, 246, 159,
	204, 305, 216, 224, 610, 646, 263, 288, 166, 335,
	306, 535, 539, 533, 534, 585, 586, 536, 638, 639,
	640, 614, 529, 0, 537, 538, 0, 620, 628, 629,
	590, 141, 153, 221, 642, 281, 191, 338, 517, 532,
	176, 543, 0, 0, 556, 563, 564, 576, 578, 579,
	580, 581, 589, 596, 597, 599, 606, 607, 609, 611,
	616, 625, 645, 143, 144, 154, 160, 167, 175, 185,
	189, 197, 200, 203, 206, 207, 209, 213, 229, 233,
	234, 235, 236, 248, 249, 250, 253, 256, 257, 259,
	261, 262, 265, 269, 270, 271, 272, 273, 275, 282,
	284, 290, 291, 292, 293, 294, 295, 296, 299, 300,
	301, 302, 310, 313, 323, 324, 334, 343, 347, 198,
	331, 348, 0, 228, 588, 632, 619, 0, 0, 571,
	635, 542, 560, 644, 562, 565, 603, 523, 584, 255,
	557, 0, 546, 519, 553, 520, 544, 573, 182, 577,
	541, 621, 587, 634, 219, 0, 547, 267, 605, 298,
	170, 227, 225, 320, 188, 184, 181, 169, 205, 232,
	266, 315, 260, 641, 222, 594, 0, 307, 241, 0,
	0, 0, 575, 624, 582, 615, 570, 604, 531, 593,
	636, 558, 601, 637, 210, 168, 146, 252, 308, 190,
	0, 0, 0, 128, 129, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 598, 631, 555, 600,
	179, 208, 183, 178, 318, 602, 647, 518, 595, 0,
	521, 524, 643, 627, 550, 551, 0, 0, 0, 0,
	0, 0, 0, 574, 583, 612, 568, 0, 0, 0,
	0, 0, 0, 1549, 0, 548, 0, 592, 0, 0,
	0, 527, 522, 0, 0, 0, 0, 572, 0, 0,
	0, 530, 0, 549, 613, 0, 516, 196, 525, 617,
	626, 569, 344, 630, 567, 566, 633, 608, 528, 623,
	561, 218, 526, 215, 142, 155, 0, 559, 251, 285,
	289, 622, 545, 554, 171, 552, 287, 264, 333, 591,
	268, 286, 223, 322, 279, 332, 345, 346, 177, 245,
	339, 316, 342, 354, 156, 174, 258, 312, 336, 304,
	240, 319, 214, 303, 195, 145, 148, 314, 330, 165,
	297, 0, 0, 0, 150, 328, 311, 238, 211, 212,
	149, 0, 283, 180, 193, 173, 254, 325, 326, 172,
	355, 157, 341, 152, 158, 340, 247, 321, 329, 239,
	231, 151, 327, 237, 230, 217, 187, 201, 277, 226,
	278, 202, 243, 242, 244, 0, 147, 0, 309, 337,
	356, 162, 540, 618, 317, 350, 353, 0, 280, 163,
	194, 186, 276, 192, 220, 349, 351, 352, 161, 274,
	199, 246, 159, 204, 305, 216, 224, 610, 646, 263,
	288, 166, 335, 306, 535, 539, 533, 534, 585, 586,
	536, 638, 639, 640, 614, 529, 0, 537, 538, 0,
	620, 628, 629, 590, 141, 153, 221, 642, 281, 191,
	338, 517, 532, 176, 543, 0, 0, 556, 563, 564,
	576, 578, 579, 580, 581, 589, 596, 597, 599, 606,
	607, 609, 611, 616, 625, 645, 143, 144, 154, 160,
	167, 175, 185, 189, 197, 200, 203, 206, 207, 209,
	213, 229, 233, 234, 235, 236, 248, 249, 250, 253,
	256, 257, 259, 261, 262, 265, 269, 270, 271, 272,
	273, 275, 282, 284, 290, 291, 292, 293, 294, 295,
	296, 299, 300, 301, 302, 310, 313, 323, 324, 334,
	343, 347, 198, 331, 348, 0, 228, 588, 632, 619,
	0, 0, 571, 635, 542, 560, 644, 562, 565, 603,
	523, 584, 255, 557, 0, 546, 519, 553, 520, 544,
	573, 182, 577, 541, 621, 587, 634, 219, 0, 547,
	267, 605, 298, 170, 227, 225, 320, 188, 184, 181,
	169, 205, 232, 266, 315, 260, 641, 222, 594, 0,
	307, 241, 0, 0, 0, 575, 624, 582, 615, 570,
	604, 531, 593, 636, 558, 601, 637, 210, 168, 146,
	252, 308, 190, 67, 0, 0, 128, 129, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 598,
	631, 555, 600, 179, 208, 183, 178, 318, 602, 647,
	518, 595, 0, 521, 524, 643, 627, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 574, 583, 612, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 548, 0,
	592, 0, 0, 0, 527, 522, 0, 0, 0, 0,
	572, 0, 0, 0, 530, 0, 549, 613, 0, 516,
	196, 525, 617, 626, 569, 344, 630, 567, 566, 633,
	608, 528, 623, 561, 218, 526, 215, 142, 155, 0,
	559, 251, 285, 289, 622, 545, 554, 171, 552, 287,
	264, 333, 591, 268, 286, 223, 322, 279, 332, 345,
	346, 177, 245, 339, 316, 342, 354, 156, 174, 258,
	312, 336, 304, 240, 319, 214, 303, 195, 145, 148,
	314, 330, 165, 297, 0, 0, 0, 150, 328, 311,
	238, 211, 212, 149, 0, 283, 180, 193, 173, 254,
	325, 326, 172, 355, 157, 341, 152, 158, 340, 247,
	321, 329, 239, 231, 151, 327, 237, 230, 217, 187,
	201, 277, 226, 278, 202, 243, 242, 244, 0, 147,
	0, 309, 337, 356, 162, 540, 618, 317, 350, 353,
	0, 280, 163, 194, 186, 276, 192, 220, 349, 351,
	352, 161, 274, 199, 246, 159, 204, 305, 216, 224,
	610, 646, 263, 288, 166, 335, 306, 535, 539, 533,
	534, 585, 586, 536, 638, 639, 640, 614, 529, 0,
	537, 538, 0, 620, 628, 629, 590, 141, 153, 221,
	642, 281, 191, 338, 517, 532, 176, 543, 0, 0,
	556, 563, 564, 576, 578, 579, 580, 581, 589, 596,
	597, 599, 606, 607, 609, 611, 616, 625, 645, 143,
	144, 154, 160, 167, 175, 185, 189, 197, 200, 203,
	206, 207, 209, 213, 229, 233, 234, 235, 236, 248,
	249, 250, 253, 256, 257, 259, 261, 262, 265, 269,
	270, 271, 272, 273, 275, 282, 284, 290, 291, 292,
	293, 294, 295, 296, 299, 300, 301, 302, 310, 313,
	323, 324, 334, 343, 347, 198, 331, 348, 0, 228,
	588, 632, 619, 0, 0, 571, 635, 542, 560, 644,
	562, 565, 603, 523, 584, 255, 557, 0, 546, 519,
	553, 520, 544, 573, 182, 577, 541, 621, 587, 634,
	219, 0, 547, 267, 605, 298, 170, 227, 225, 320,
	188, 184, 181, 169, 205, 232, 266, 315, 260, 641,
	222, 594, 0, 307, 241, 0, 0, 0, 575, 624,
	582, 615, 570, 604, 531, 593, 636, 558, 601, 637,
	210, 168, 146, 252, 308, 190, 0, 0, 0, 128,
	129, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 598, 631, 555, 600, 179, 208, 183, 178,
	318, 602, 647, 518, 595, 0, 521, 524, 643, 627,
	550, 551, 0, 0, 0, 0, 0, 0, 0, 574,
	583, 612, 568, 0, 0, 0, 0, 0, 0, 1427,
	0, 548, 0, 592, 0, 0, 0, 527, 522, 0,
	0, 0, 0, 572, 0, 0, 0, 530, 0, 549,
	613, 0, 516, 196, 525, 617, 626, 569, 344, 630,
	567, 566, 633, 608, 528, 623, 561, 218, 526, 215,
	142, 155, 0, 559, 251, 285, 289, 622, 545, 554,
	171, 552, 287, 264, 333, 591, 268, 286, 223, 322,
	279, 332, 345, 346, 177, 245, 339, 316, 342, 354,
	156, 174, 258, 312, 336, 304, 240, 319, 214, 303,
	195, 145, 148, 314, 330, 165, 297, 0, 0, 0,
	150, 328, 311, 238, 211, 212, 149, 0, 283, 180,
	193, 173, 254, 325, 326, 172, 355, 157, 341, 152,
	158, 340, 247, 321, 329, 239, 231, 151, 327, 237,
	230, 217, 187, 201, 277, 226, 278, 202, 243, 242,
	244, 0, 147, 0, 309, 337, 356, 162, 540, 618,
	317, 350, 353, 0, 280, 163, 194, 186, 276, 192,
	220, 349, 351, 352, 161, 274, 199, 246, 159, 204,
	305, 216, 224, 610, 646, 263, 288, 166, 335, 306,
	535, 539, 533, 534, 585, 586, 536, 638, 639, 640,
	614, 529, 0, 537, 538, 0, 620, 628, 629, 590,
	141, 153, 221, 642, 281, 191, 338, 517, 532, 176,
	543, 0, 0, 556, 563, 564, 576, 578, 579, 580,
	581, 589, 596, 597, 599, 606, 607, 609, 611, 616,
	625, 645, 143, 144, 154, 160, 167, 175, 185, 189,
	197, 200, 203, 206, 207, 209, 213, 229, 233, 234,
	235, 236, 248, 249, 250, 253, 256, 257, 259, 261,
	262, 265, 269, 270, 271, 272, 273, 275, 282, 284,
	290, 291, 292, 293, 294, 295, 296, 299, 300, 301,
	302, 310, 313, 323, 324, 334, 343, 347, 198, 331,
	348, 0, 228, 588, 632, 619, 0, 0, 571, 635,
	542, 560, 644, 562, 565, 603, 523, 584, 255, 557,
	0, 546, 519, 553, 520, 544, 573, 182, 577, 541,
	621, 587, 634, 219, 0, 547, 267, 605, 298, 170,
	227, 225, 320, 188, 184, 181, 169, 205, 232, 266,
	315, 260, 641, 222, 594, 0, 307, 241, 0, 0,
	0, 575, 624, 582, 615, 570, 604, 531, 593, 636,
	558, 601, 637, 210, 168, 146, 252, 308, 190, 0,
	0, 0, 128, 129, 130, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 598, 631, 555, 600, 179,
	208, 183, 178, 318, 602, 647, 518, 595, 0, 521,
	524, 643, 627, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 574, 583, 612, 568, 0, 0, 0, 0,
	0, 0, 1175, 0, 548, 0, 592, 0, 0, 0,
	527, 522, 0, 0, 0, 0, 572, 0, 0, 0,
	530, 0, 549, 613, 0, 516, 196, 525, 617, 626,
	569, 344, 630, 567, 566, 633, 608, 528, 623, 561,
	218, 526, 215, 142, 155, 0, 559, 251, 285, 289,
	622, 545, 554, 171, 552, 287, 264, 333, 591, 268,
	286, 223, 322, 279, 332, 345, 346, 177, 245, 339,
	316, 342, 354, 156, 174, 258, 312, 336, 304, 240,
	319, 214, 303, 195, 145, 148, 314, 330, 165, 297,
	0, 0, 0, 150, 328, 311, 238, 211, 212, 149,
	0, 283, 180, 193, 173, 254, 325, 326, 172, 355,
	157, 341, 152, 158, 340, 247, 321, 329, 239, 231,
	151, 327, 237, 230, 217, 187, 201, 277, 226, 278,
	202, 243, 242, 244, 0, 147, 0, 309, 337, 356,
	162, 540, 618, 317, 350, 353, 0, 280, 163, 194,
	186, 276, 192, 220, 349, 351, 352, 161, 274, 199,
	246, 159, 204, 305, 216, 224, 610, 646, 263, 288,
	166, 335, 306, 535, 539, 533, 534, 585, 586, 536,
	638, 639, 640, 614, 529, 0, 537, 538, 0, 620,
	628, 629, 590, 141, 153, 221, 642, 281, 191, 338,
	517, 532, 176, 543, 0, 0, 556, 563, 564, 576,
	578, 579, 580, 581, 589, 596, 597, 599, 606, 607,
	609, 611, 616, 625, 645, 143, 144, 154, 160, 167,
	175, 185, 189, 197, 200, 203, 206, 207, 209, 213,
	229, 233, 234, 235, 236, 248, 249, 250, 253, 256,
	257, 259, 261, 262, 265, 269, 270, 271, 272, 273,
	275, 282, 284, 290, 291, 292, 293, 294, 295, 296,
	299, 300, 301, 302, 310, 313, 323, 324, 334, 343,
	347, 198, 331, 348, 0, 228, 588, 632, 619, 0,
	0, 571, 635, 542, 560, 644, 562, 565, 603, 523,
	584, 255, 557, 0, 546, 519, 553, 520, 544, 573,
	182, 577, 541, 621, 587, 634, 219, 0, 547, 267,
	605, 298, 170, 227, 225, 320, 188, 184, 181, 169,
	205, 232, 266, 315, 260, 641, 222, 594, 0, 307,
	241, 0, 0, 0, 575, 624, 582, 615, 570, 604,
	531, 593, 636, 558, 601, 637, 210, 168, 146, 252,
	308, 190, 0, 0, 0, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 598, 631,
	555, 600, 179, 208, 183, 178, 318, 602, 647, 518,
	595, 0, 521, 524, 643, 627, 550, 551, 0, 0,
	0, 0, 0, 0, 0, 574, 583, 612, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 0, 592,
	0, 0, 0, 527, 522, 0, 0, 0, 0, 572,
	0, 0, 0, 530, 0, 549, 613, 0, 516, 196,
	525, 617, 626, 569, 344, 630, 567, 566, 633, 608,
	528, 623, 561, 218, 526, 215, 142, 155, 0, 559,
	251, 285, 289, 622, 545, 554, 171, 552, 287, 264,
	333, 591, 268, 286, 223, 322, 279, 332, 345, 346,
	177, 245, 339, 316, 342, 354, 156, 174, 258, 312,
	336, 304, 240, 319, 214, 303, 195, 145, 148, 314,
	330, 165, 297, 0, 0, 0, 150, 328, 311, 238,
	211, 212, 149, 0, 283, 180, 193, 173, 254, 325,
	326, 172, 355, 157, 341, 152, 158, 340, 247, 321,
	329, 239, 231, 151, 327, 237, 230, 217, 187, 201,
	277, 226, 278, 202, 243, 242, 244, 0, 147, 0,
	309, 337, 356, 162, 540, 618, 317, 350, 353, 0,
	280, 163, 194, 186, 276, 192, 220, 349, 351, 352,
	161, 274, 199, 246, 159, 204, 305, 216, 224, 610,
	646, 263, 288, 166, 335, 306, 535, 539, 533, 534,
	585, 586, 536, 638, 639, 640, 614, 529, 0, 537,
	538, 0, 620, 628, 629, 590, 141, 153, 221, 642,
	281, 191, 338, 517, 532, 176, 543, 0, 0, 556,
	563, 564, 576, 578, 579, 580, 581, 589, 596, 597,
	599, 606, 607, 609, 611, 616, 625, 645, 143, 144,
	154, 160, 167, 175, 185, 189, 197, 200, 203, 206,
	207, 209, 213, 229, 233, 234, 235, 236, 248, 249,
	250, 253, 256, 257, 259, 261, 262, 265, 269, 270,
	271, 272, 273, 275, 282, 284, 290, 291, 292, 293,
	294, 295, 296, 299, 300, 301, 302, 310, 313, 323,
	324, 334, 343, 347, 198, 331, 348, 0, 228, 588,
	632, 619, 0, 0, 571, 635, 542, 560, 644, 562,
	565, 603, 523, 584, 255, 557, 0, 546, 519, 553,
	520, 544, 573, 182, 577, 541, 621, 587, 634, 219,
	0, 547, 267, 605, 298, 170, 227, 225, 320, 188,
	184, 181, 169, 205, 232, 266, 315, 260, 641, 222,
	594, 0, 307, 241, 0, 0, 0, 575, 624, 582,
	615, 570, 604, 531, 593, 636, 558, 601, 637, 210,
	168, 146, 252, 308, 190, 0, 0, 0, 128, 129,
	130, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 598, 631, 555, 600, 179, 208, 183, 178, 318,
	602, 647, 518, 595, 0, 521, 524, 643, 627, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 574, 583,
	612, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	548, 0, 592, 0, 0, 0, 527, 522, 0, 0,
	0, 0, 572, 0, 0, 0, 530, 0, 549, 613,
	0, 516, 196, 525, 617, 626, 569, 344, 630, 567,
	566, 633, 608, 528, 623, 561, 218, 526, 215, 142,
	155, 0, 559, 251, 285, 289, 622, 545, 554, 171,
	552, 287, 264, 333, 591, 268, 286, 223, 322, 279,
	332, 345, 346, 177, 245, 339, 316, 342, 354, 156,
	174, 258, 312, 336, 304, 240, 319, 214, 303, 195,
	145, 148, 314, 330, 165, 297, 0, 0, 0, 150,
	328, 311, 238, 211, 212, 149, 0, 283, 180, 193,
	173, 254, 325, 326, 172, 355, 157, 341, 152, 514,
	340, 247, 321, 329, 239, 231, 151, 327, 237, 230,
	217, 187, 201, 277, 226, 278, 202, 243, 242, 244,
	0, 147, 0, 309, 337, 356, 162, 540, 618, 317,
	350, 353, 0, 280, 163, 194, 186, 276, 192, 220,
	349, 351, 352, 161, 274, 199, 515, 513, 508, 507,
	216, 224, 610, 646, 263, 288, 166, 335, 306, 535,
	539, 533, 534, 585, 586, 536, 638, 639, 640, 614,
	529, 0, 537, 538, 0, 620, 628, 629, 590, 141,
	153, 221, 642, 281, 191, 338, 517, 532, 176, 543,
	0, 0, 556, 563, 564, 576, 578, 579, 580, 581,
	589, 596, 597, 599, 606, 607, 609, 611, 616, 625,
	645, 143, 144, 154, 160, 167, 175, 185, 189, 197,
	200, 203, 206, 207, 209, 213, 229, 233, 234, 235,
	236, 248, 249, 250, 253, 256, 257, 259, 261, 262,
	265, 269, 270, 271, 272, 273, 275, 282, 284, 290,
	291, 292, 293, 294, 295, 296, 299, 300, 301, 302,
	310, 313, 323, 324, 334, 343, 347, 198, 331, 348,
	0, 228, 588, 632, 619, 0, 0, 571, 635, 542,
	560, 644, 562, 565, 603, 523, 584, 255, 557, 0,
	546, 519, 553, 520, 544, 573, 182, 577, 541, 621,
	587, 634, 219, 0, 547, 267, 605, 298, 170, 227,
	225, 320, 188, 184, 181, 169, 205, 232, 266, 315,
	260, 641, 222, 594, 0, 307, 241, 0, 0, 0,
	575, 624, 582, 615, 570, 604, 531, 593, 636, 558,
	601, 637, 210, 168, 146, 252, 308, 190, 0, 0,
	0, 128, 129, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 598, 631, 555, 600, 179, 208,
	183, 178, 318, 602, 647, 518, 595, 0, 521, 524,
	643, 627, 550, 551, 0, 0, 0, 0, 0, 0,
	0, 574, 583, 612, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 548, 0, 592, 0, 0, 0, 527,
	522, 0, 0, 0, 0, 572, 0, 0, 0, 530,
	0, 549, 613, 0, 516, 196, 525, 617, 626, 569,
	344, 630, 567, 566, 633, 608, 528, 623, 561, 218,
	526, 215, 142, 155, 0, 559, 251, 285, 289, 622,
	545, 554, 171, 552, 287, 264, 333, 591, 268, 286,
	223, 322, 279, 332, 345, 346, 177, 245, 339, 316,
	342, 354, 156, 174, 258, 312, 336, 304, 240, 319,
	214, 303, 195, 145, 148, 314, 904, 165, 297, 0,
	0, 0, 150, 328, 311, 238, 211, 212, 149, 0,
	283, 180, 193, 173, 254, 325, 326, 172, 355, 157,
	341, 152, 514, 340, 247, 321, 329, 239, 231, 151,
	327, 237, 230, 217, 187, 201, 277, 226, 278, 202,
	243, 242, 244, 0, 147, 0, 309, 337, 356, 162,
	540, 618, 317, 350, 353, 0, 280, 163, 194, 186,
	276, 192, 220, 349, 351, 352, 161, 274, 199, 515,
	513, 508, 507, 216, 224, 610, 646, 263, 288, 166,
	335, 306, 535, 539, 533, 534, 585, 586, 536, 638,
	639, 640, 614, 529, 0, 537, 538, 0, 620, 628,
	629, 590, 141, 153, 221, 642, 281, 191, 338, 517,
	532, 176, 543, 0, 0, 556, 563, 564, 576, 578,
	579, 580, 581, 589, 596, 597, 599, 606, 607, 609,
	611, 616, 625, 645, 143, 144, 154, 160, 167, 175,
	185, 189, 197, 200, 203, 206, 207, 209, 213, 229,
	233, 234, 235, 236, 248, 249, 250, 253, 256, 257,
	259, 261, 262, 265, 269, 270, 271, 272, 273, 275,
	282, 284, 290, 291, 292, 293, 294, 295, 296, 299,
	300, 301, 302, 310, 313, 323, 324, 334, 343, 347,
	198, 331, 348, 0, 228, 588, 632, 619, 0, 0,
	571, 635, 542, 560, 644, 562, 565, 603, 523, 584,
	255, 557, 0, 546, 519, 553, 520, 544, 573, 182,
	577, 541, 621, 587, 634, 219, 0, 547, 267, 605,
	298, 170, 227, 225, 320, 188, 184, 181, 169, 205,
	232, 266, 315, 260, 641, 222, 594, 0, 307, 241,
	0, 0, 0, 575, 624, 582, 615, 570, 604, 531,
	593, 636, 558, 601, 637, 210, 168, 146, 252, 308,
	190, 0, 0, 0, 128, 129, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 598, 631, 555,
	600, 179, 208, 183, 178, 318, 602, 647, 518, 595,
	0, 521, 524, 643, 627, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 574, 583, 612, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 548, 0, 592, 0,
	0, 0, 527, 522, 0, 0, 0, 0, 572, 0,
	0, 0, 530, 0, 549, 613, 0, 516, 196, 525,
	617, 626, 569, 344, 630, 567, 566, 633, 608, 528,
	623, 561, 218, 526, 215, 142, 155, 0, 559, 251,
	285, 289, 622, 545, 554, 171, 552, 287, 264, 333,
	591, 268, 286, 223, 322, 279, 332, 345, 346, 177,
	245, 339, 316, 342, 354, 156, 174, 258, 312, 336,
	304, 240, 319, 214, 303, 195, 145, 148, 314, 505,
	165, 297, 0, 0, 0, 150, 328, 311, 238, 211,
	212, 149, 0, 283, 180, 193, 173, 254, 325, 326,
	172, 355, 157, 341, 152, 514, 340, 247, 321, 329,
	239, 231, 151, 327, 237, 230, 217, 187, 201, 277,
	226, 278, 202, 243, 242, 244, 0, 147, 0, 309,
	337, 356, 162, 540, 618, 317, 350, 353, 0, 280,
	163, 194, 186, 276, 192, 220, 349, 351, 352, 161,
	274, 199, 515, 513, 508, 507, 216, 224, 610, 646,
	263, 288, 166, 335, 306, 535, 539, 533, 534, 585,
	586, 536, 638, 639, 640, 614, 529, 0, 537, 538,
	0, 620, 628, 629, 590, 141, 153, 221, 642, 281,
	191, 338, 517, 532, 176, 543, 0, 0, 556, 563,
	564, 576, 578, 579, 580, 581, 589, 596, 597, 599,
	606, 607, 609, 611, 616, 625, 645, 143, 144, 154,
	160, 167, 175, 185, 189, 197, 200, 203, 206, 207,
	209, 213, 229, 233, 234, 235, 236, 248, 249, 250,
	253, 256, 257, 259, 261, 262, 265, 269, 270, 271,
	272, 273, 275, 282, 284, 290, 291, 292, 293, 294,
	295, 296, 299, 300, 301, 302, 310, 313, 323, 324,
	334, 343, 347, 198, 331, 348, 255, 228, 588, 1104,
	0, 409, 0, 0, 0, 182, 0, 408, 0, 0,
	0, 219, 0, 1105, 267, 0, 298, 170, 227, 225,
	320, 188, 184, 181, 169, 205, 232, 266, 315, 260,
	452, 222, 0, 0, 307, 241, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 168, 146, 252, 308, 190, 67, 0, 0,
	128, 129, 130, 430, 429, 432, 433, 434, 435, 0,
	0, 164, 431, 436, 437, 438, 0, 179, 208, 183,
	178, 318, 0, 0, 0, 406, 423, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 420, 421,
	495, 0, 0, 0, 466, 0, 422, 0, 0, 415,
	416, 418, 417, 419, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 465, 0, 0, 344,
	0, 0, 463, 0, 0, 0, 0, 0, 218, 0,
	215, 142, 155, 0, 0, 251, 285, 289, 0, 0,
	0, 171, 0, 287, 264, 333, 0, 268, 286, 223,
	322, 279, 332, 345, 346, 177, 245, 339, 316, 342,
	354, 156, 174, 258, 312, 336, 304, 240, 319, 214,
	303, 195, 145, 148, 314, 330, 165, 297, 0, 0,
	0, 150, 328, 311, 238, 211, 212, 149, 0, 283,
	180, 193, 173, 254, 325, 326, 172, 355, 157, 341,
	152, 158, 340, 247, 321, 329, 239, 231, 151, 327,
	237, 230, 217, 187, 201, 277, 226, 278, 202, 243,
	242, 244, 0, 147, 0, 309, 337, 356, 162, 0,
	0, 317, 350, 353, 0, 280, 163, 194, 186, 276,
	192, 220, 349, 351, 352, 161, 274, 199, 246, 159,
	204, 305, 216, 224, 0, 0, 263, 288, 166, 335,
	306, 453, 464, 459, 460, 457, 458, 0, 456, 455,
	454, 467, 445, 446, 447, 448, 450, 0, 461, 462,
	449, 141, 153, 221, 0, 281, 191, 338, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 144, 154, 160, 167, 175, 185,
	189, 197, 200, 203, 206, 207, 209, 213, 229, 233,
	234, 235, 236, 248, 249, 250, 253, 256, 257, 259,
	261, 262, 265, 269, 270, 271, 272, 273, 275, 282,
	284, 290, 291, 292, 293, 294, 295, 296, 299, 300,
	301, 302, 310, 313, 323, 324, 334, 343, 347, 198,
	331, 348, 255, 228, 0, 0, 0, 409, 0, 0,
	0, 182, 0, 408, 0, 0, 0, 219, 0, 0,
	267, 0, 298, 170, 227, 225, 320, 188, 184, 181,
	169, 205, 232, 266, 315, 260, 452, 222, 0, 0,
	307, 241, 0, 0, 0, 0, 0, 443, 444, 0,
	0, 0, 0, 0, 0, 1214, 0, 210, 168, 146,
	252, 308, 190, 67, 0, 0, 128, 129, 130, 430,
	429, 432, 433, 434, 435, 0, 0, 164, 431, 436,
	437, 438, 1215, 179, 208, 183, 178, 318, 0, 0,
	0, 406, 423, 0, 451, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 420, 421, 0, 0, 0, 0,
	466, 0, 422, 0, 0, 415, 416, 418, 417, 419,
	424, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 465, 0, 0, 344, 0, 0, 463, 0,
	0, 0, 0, 0, 218, 0, 215, 142, 155, 0,
	0, 251, 285, 289, 0, 0, 0, 171, 0, 287,
	264, 333, 0, 268, 286, 223, 322, 279, 332, 345,
	346, 177, 245, 339, 316, 342, 354, 156, 174, 258,
	312, 336, 304, 240, 319, 214, 303, 195, 145, 148,
	314, 330, 165, 297, 0, 0, 0, 150, 328, 311,
	238, 211, 212, 149, 0, 283, 180, 193, 173, 254,
	325, 326, 172, 355, 157, 341, 152, 158, 340, 247,
	321, 329, 239, 231, 151, 327, 237, 230, 217, 187,
	201, 277, 226, 278, 202, 243, 242, 244, 0, 147,
	0, 309, 337, 356, 162, 0, 0, 317, 350, 353,
	0, 280, 163, 194, 186, 276, 192, 220, 349, 351,
	352, 161, 274, 199, 246, 159, 204, 305, 216, 224,
	0, 0, 263, 288, 166, 335, 306, 453, 464, 459,
	460, 457, 458, 0, 456, 455, 454, 467, 445, 446,
	447, 448, 450, 0, 461, 462, 449, 141, 153, 221,
	0, 281, 191, 338, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	144, 154, 160, 167, 175, 185, 189, 197, 200, 203,
	206, 207, 209, 213, 229, 233, 234, 235, 236, 248,
	249, 250, 253, 256, 257, 259, 261, 262, 265, 269,
	270, 271, 272, 273, 275, 282, 284, 290, 291, 292,
	293, 294, 295, 296, 299, 300, 301, 302, 310, 313,
	323, 324, 334, 343, 347, 198, 331, 348, 255, 228,
	0, 0, 0, 409, 0, 0, 0, 182, 0, 408,
	0, 0, 0, 219, 0, 0, 267, 0, 298, 170,
	227, 225, 320, 188, 184, 181, 169, 205, 232, 266,
	315, 260, 452, 222, 0, 0, 307, 241, 0, 0,
	0, 0, 0, 443, 444, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 168, 146, 252, 308, 190, 67,
	0, 483, 128, 129, 130, 430, 429, 432, 433, 434,
	435, 0, 0, 164, 431, 436, 437, 438, 0, 179,
	208, 183, 178, 318, 0, 0, 0, 406, 423, 0,
	451, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	420, 421, 0, 0, 0, 0, 466, 0, 422, 0,
	0, 415, 416, 418, 417, 419, 424, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 465, 0,
	0, 344, 0, 0, 463, 0, 0, 0, 0, 0,
	218, 0, 215, 142, 155, 0, 0, 251, 285, 289,
	0, 0, 0, 171, 0, 287, 264, 333, 0, 268,
	286, 223, 322, 279, 332, 345, 346, 177, 245, 339,
	316, 342, 354, 156, 174, 258, 312, 336, 304, 240,
	319, 214, 303, 195, 145, 148, 314, 330, 165, 297,
	0, 0, 0, 150, 328, 311, 238, 211, 212, 149,
	0, 283, 180, 193, 173, 254, 325, 326, 172, 355,
	157, 341, 152, 158, 340, 247, 321, 329, 239, 231,
	151, 327, 237, 230, 217, 187, 201, 277, 226, 278,
	202, 243, 242, 244, 0, 147, 0, 309, 337, 356,
	162, 0, 0, 317, 350, 353, 0, 280, 163, 194,
	186, 276, 192, 220, 349, 351, 352, 161, 274, 199,
	246, 159, 204, 305, 216, 224, 0, 0, 263, 288,
	166, 335, 306, 453, 464, 459, 460, 457, 458, 0,
	456, 455, 454, 467, 445, 446, 447, 448, 450, 0,
	461, 462, 449, 141, 153, 221, 0, 281, 191, 338,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 144, 154, 160, 167,
	175, 185, 189, 197, 200, 203, 206, 207, 209, 213,
	229, 233, 234, 235, 236, 248, 249, 250, 253, 256,
	257, 259, 261, 262, 265, 269, 270, 271, 272, 273,
	275, 282, 284, 290, 291, 292, 293, 294, 295, 296,
	299, 300, 301, 302, 310, 313, 323, 324, 334, 343,
	347, 198, 331, 348, 255, 228, 0, 0, 0, 409,
	0, 0, 0, 182, 0, 408, 0, 0, 0, 219,
	0, 0, 267, 0, 298, 170, 227, 225, 320, 188,
	184, 181, 169, 205, 232, 266, 315, 260, 452, 222,
	0, 0, 307, 241, 0, 0, 0, 0, 0, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	168, 146, 252, 308, 190, 67, 0, 0, 128, 129,
	130, 430, 429, 432, 433, 434, 435, 0, 0, 164,
	431, 436, 437, 438, 0, 179, 208, 183, 178, 318,
	0, 0, 0, 406, 423, 0, 451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 420, 421, 495, 0,
	0, 0, 466, 0, 422, 0, 0, 415, 416, 418,
	417, 419, 424, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 465, 0, 0, 344, 0, 0,
	463, 0, 0, 0, 0, 0, 218, 0, 215, 142,
	155, 0, 0, 251, 285, 289, 0, 0, 0, 171,
	0, 287, 264, 333, 0, 268, 286, 223, 322, 279,
	332, 345, 346, 177, 245, 339, 316, 342, 354, 156,
	174, 258, 312, 336, 304, 240, 319, 214, 303, 195,
	145, 148, 314, 330, 165, 297, 0, 0, 0, 150,
	328, 311, 238, 211, 212, 149, 0, 283, 180, 193,
	173, 254, 325, 326, 172, 355, 157, 341, 152, 158,
	340, 247, 321, 329, 239, 231, 151, 327, 237, 230,
	217, 187, 201, 277, 226, 278, 202, 243, 242, 244,
	0, 147, 0, 309, 337, 356, 162, 0, 0, 317,
	350, 353, 0, 280, 163, 194, 186, 276, 192, 220,
	349, 351, 352, 161, 274, 199, 246, 159, 204, 305,
	216, 224, 0, 0, 263, 288, 166, 335, 306, 453,
	464, 459, 460, 457, 458, 0, 456, 455, 454, 467,
	445, 446, 447, 448, 450, 0, 461, 462, 449, 141,
	153, 221, 0, 281, 191, 338, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 144, 154, 160, 167, 175, 185, 189, 197,
	200, 203, 206, 207, 209, 213, 229, 233, 234, 235,
	236, 248, 249, 250, 253, 256, 257, 259, 261, 262,
	265, 269, 270, 271, 272, 273, 275, 282, 284, 290,
	291, 292, 293, 294, 295, 296, 299, 300, 301, 302,
	310, 313, 323, 324, 334, 343, 347, 198, 331, 348,
	255, 228, 0, 0, 0, 409, 0, 0, 0, 182,
	0, 408, 0, 0, 0, 219, 0, 0, 267, 0,
	298, 170, 227, 225, 320, 188, 184, 181, 169, 205,
	232, 266, 315, 260, 452, 222, 0, 0, 307, 241,
	0, 0, 0, 0, 0, 443, 444, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 168, 146, 252, 308,
	190, 67, 0, 0, 128, 129, 130, 430, 1122, 432,
	433, 434, 435, 0, 0, 164, 431, 436, 437, 438,
	0, 179, 208, 183, 178, 318, 0, 0, 0, 406,
	423, 0, 451, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 420, 421, 495, 0, 0, 0, 466, 0,
	422, 0, 0, 415, 416, 418, 417, 419, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	465, 0, 0, 344, 0, 0, 463, 0, 0, 0,
	0, 0, 218, 0, 215, 142, 155, 0, 0, 251,
	285, 289, 0, 0, 0, 171, 0, 287, 264, 333,
	0, 268, 286, 223, 322, 279, 332, 345, 346, 177,
	245, 339, 316, 342, 354, 156, 174, 258, 312, 336,
	304, 240, 319, 214, 303, 195, 145, 148, 314, 330,
	165, 297, 0, 0, 0, 150, 328, 311, 238, 211,
	212, 149, 0, 283, 180, 193, 173, 254, 325, 326,
	172, 355, 157, 341, 152, 158, 340, 247, 321, 329,
	239, 231, 151, 327, 237, 230, 217, 187, 201, 277,
	226, 278, 202, 243, 242, 244, 0, 147, 0, 309,
	337, 356, 162, 0, 0, 317, 350, 353, 0, 280,
	163, 194, 186, 276, 192, 220, 349, 351, 352, 161,
	274, 199, 246, 159, 204, 305, 216, 224, 0, 0,
	263, 288, 166, 335, 306, 453, 464, 459, 460, 457,
	458, 0, 456, 455, 454, 467, 445, 446, 447, 448,
	450, 0, 461, 462, 449, 141, 153, 221, 0, 281,
	191, 338, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 144, 154,
	160, 167, 175, 185, 189, 197, 200, 203, 206, 207,
	209, 213, 229, 233, 234, 235, 236, 248, 249, 250,
	253, 256, 257, 259, 261, 262, 265, 269, 270, 271,
	272, 273, 275, 282, 284, 290, 291, 292, 293, 294,
	295, 296, 299, 300, 301, 302, 310, 313, 323, 324,
	334, 343, 347, 198, 331, 348, 255, 228, 0, 0,
	0, 409, 0, 0, 0, 182, 0, 408, 0, 0,
	0, 219, 0, 0, 267, 0, 298, 170, 227, 225,
	320, 188, 184, 181, 169, 205, 232, 266, 315, 260,
	452, 222, 0, 0, 307, 241, 0, 0, 0, 0,
	0, 443, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 168, 146, 252, 308, 190, 67, 0, 0,
	128, 129, 130, 430, 1119, 432, 433, 434, 435, 0,
	0, 164, 431, 436, 437, 438, 0, 179, 208, 183,
	178, 318, 0, 0, 0, 406, 423, 0, 451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 420, 421,
	495, 0, 0, 0, 466, 0, 422, 0, 0, 415,
	416, 418, 417, 419, 424, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 465, 0, 0, 344,
	0, 0, 463, 0, 0, 0, 0, 0, 218, 0,
	215, 142, 155, 0, 0, 251, 285, 289, 0, 0,
	0, 171, 0, 287, 264, 333, 0, 268, 286, 223,
	322, 279, 332, 345, 346, 177, 245, 339, 316, 342,
	354, 156, 174, 258, 312, 336, 304, 240, 319, 214,
	303, 195, 145, 148, 314, 330, 165, 297, 0, 0,
	0, 150, 328, 311, 238, 211, 212, 149, 0, 283,
	180, 193, 173, 254, 325, 326, 172, 355, 157, 341,
	152, 158, 340, 247, 321, 329, 239, 231, 151, 327,
	237, 230, 217, 187, 201, 277, 226, 278, 202, 243,
	242, 244, 0, 147, 0, 309, 337, 356, 162, 0,
	0, 317, 350, 353, 0, 280, 163, 194, 186, 276,
	192, 220, 349, 351, 352, 161, 274, 199, 246, 159,
	204, 305, 216, 224, 0, 0, 263, 288, 166, 335,
	306, 453, 464, 459, 460, 457, 458, 0, 456, 455,
	454, 467, 445, 446, 447, 448, 450, 0, 461, 462,
	449, 141, 153, 221, 0, 281, 191, 338, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 144, 154, 160, 167, 175, 185,
	189, 197, 200, 203, 206, 207, 209, 213, 229, 233,
	234, 235, 236, 248, 249, 250, 253, 256, 257, 259,
	261, 262, 265, 269, 270, 271, 272, 273, 275, 282,
	284, 290, 291, 292, 293, 294, 295, 296, 299, 300,
	301, 302, 310, 313, 323, 324, 334, 343, 347, 198,
	331, 348, 476, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	409, 0, 0, 0, 182, 0, 408, 0, 0, 0,
	219, 0, 0, 267, 0, 298, 170, 227, 225, 320,
	188, 184, 181, 169, 205, 232, 266, 315, 260, 452,
	222, 0, 0, 307, 241, 0, 0, 0, 0, 0,
	443, 444, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 168, 146, 252, 308, 190, 67, 0, 0, 128,
	129, 130, 430, 429, 432, 433, 434, 435, 0, 0,
	164, 431, 436, 437, 438, 0, 179, 208, 183, 178,
	318, 0, 0, 0, 406, 423, 0, 451, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 420, 421, 0,
	0, 0, 0, 466, 0, 422, 0, 0, 415, 416,
	418, 417, 419, 424, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 465, 0, 0, 344, 0,
	0, 463, 0, 0, 0, 0, 0, 218, 0, 215,
	142, 155, 0, 0, 251, 285, 289, 0, 0, 0,
	171, 0, 287, 264, 333, 0, 268, 286, 223, 322,
	279, 332, 345, 346, 177, 245, 339, 316, 342, 354,
	156, 174, 258, 312, 336, 304, 240, 319, 214, 303,
	195, 145, 148, 314, 330, 165, 297, 0, 0, 0,
	150, 328, 311, 238, 211, 212, 149, 0, 283, 180,
	193, 173, 254, 325, 326, 172, 355, 157, 341, 152,
	158, 340, 247, 321, 329, 239, 231, 151, 327, 237,
	230, 217, 187, 201, 277, 226, 278, 202, 243, 242,
	244, 0, 147, 0, 309, 337, 356, 162, 0, 0,
	317, 350, 353, 0, 280, 163, 194, 186, 276, 192,
	220, 349, 351, 352, 161, 274, 199, 246, 159, 204,
	305, 216, 224, 0, 0, 263, 288, 166, 335, 306,
	453, 464, 459, 460, 457, 458, 0, 456, 455, 454,
	467, 445, 446, 447, 448, 450, 0, 461, 462, 449,
	141, 153, 221, 0, 281, 191, 338, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 144, 154, 160, 167, 175, 185, 189,
	197, 200, 203, 206, 207, 209, 213, 229, 233, 234,
	235, 236, 248, 249, 250, 253, 256, 257, 259, 261,
	262, 265, 269, 270, 271, 272, 273, 275, 282, 284,
	290, 291, 292, 293, 294, 295, 296, 299, 300, 301,
	302, 310, 313, 323, 324, 334, 343, 347, 198, 331,
	348, 255, 228, 0, 0, 0, 409, 0, 0, 0,
	182, 0, 408, 0, 0, 0, 219, 0, 0, 267,
	0, 298, 170, 227, 225, 320, 188, 184, 181, 169,
	205, 232, 266, 315, 260, 452, 222, 0, 0, 307,
	241, 0, 0, 0, 0, 0, 443, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 168, 146, 252,
	308, 190, 67, 0, 0, 128, 129, 130, 430, 429,
	432, 433, 434, 435, 0, 0, 164, 431, 436, 437,
	438, 0, 179, 208, 183, 178, 318, 0, 0, 0,
	406, 423, 0, 451, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 420, 421, 0, 0, 0, 0, 466,
	0, 422, 0, 0, 415, 416, 418, 417, 419, 424,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 465, 0, 0, 344, 0, 0, 463, 0, 0,
	0, 0, 0, 218, 0, 215, 142, 155, 0, 0,
	251, 285, 289, 0, 0, 0, 171, 0, 287, 264,
	333, 0, 268, 286, 223, 322, 279, 332, 345, 346,
	177, 245, 339, 316, 342, 354, 156, 174, 258, 312,
	336, 304, 240, 319, 214, 303, 195, 145, 148, 314,
	330, 165, 297, 0, 0, 0, 150, 328, 311, 238,
	211, 212, 149, 0, 283, 180, 193, 173, 254, 325,
	326, 172, 355, 157, 341, 152, 158, 340, 247, 321,
	329, 239, 231, 151, 327, 237, 230, 217, 187, 201,
	277, 226, 278, 202, 243, 242, 244, 0, 147, 0,
	309, 337, 356, 162, 0, 0, 317, 350, 353, 0,
	280, 163, 194, 186, 276, 192, 220, 349, 351, 352,
	161, 274, 199, 246, 159, 204, 305, 216, 224, 0,
	0, 263, 288, 166, 335, 306, 453, 464, 459, 460,
	457, 458, 0, 456, 455, 454, 467, 445, 446, 447,
	448, 450, 0, 461, 462, 449, 141, 153, 221, 0,
	281, 191, 338, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 144,
	154, 160, 167, 175, 185, 189, 197, 200, 203, 206,
	207, 209, 213, 229, 233, 234, 235, 236, 248, 249,
	250, 253, 256, 257, 259, 261, 262, 265, 269, 270,
	271, 272, 273, 275, 282, 284, 290, 291, 292, 293,
	294, 295, 296, 299, 300, 301, 302, 310, 313, 323,
	324, 334, 343, 347, 198, 331, 348, 255, 228, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 219, 0, 0, 267, 0, 298, 170, 227,
	225, 320, 188, 184, 181, 169, 205, 232, 266, 315,
	260, 452, 222, 0, 0, 307, 241, 0, 0, 0,
	0, 0, 443, 444, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 168, 146, 252, 308, 190, 67, 0,
	483, 128, 129, 130, 430, 429, 432, 433, 434, 435,
	0, 0, 164, 431, 436, 437, 438, 0, 179, 208,
	183, 178, 318, 0, 0, 0, 0, 423, 0, 451,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 420,
	421, 0, 0, 0, 0, 466, 0, 422, 0, 0,
	415, 416, 418, 417, 419, 424, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 465, 0, 0,
	344, 0, 0, 463, 0, 0, 0, 0, 0, 218,
	0, 215, 142, 155, 0, 0, 251, 285, 289, 0,
	0, 0, 171, 0, 287, 264, 333, 0, 268, 286,
	223, 322, 279, 332, 345, 346, 177, 245, 339, 316,
	342, 354, 156, 174, 258, 312, 336, 304, 240, 319,
	214, 303, 195, 145, 148, 314, 330, 165, 297, 0,
	0, 0, 150, 328, 311, 238, 211, 212, 149, 0,
	283, 180, 193, 173, 254, 325, 326, 172, 355, 157,
	341, 152, 158, 340, 247, 321, 329, 239, 231, 151,
	327, 237, 230, 217, 187, 201, 277, 226, 278, 202,
	243, 242, 244, 0, 147, 0, 309, 337, 356, 162,
	0, 0, 317, 350, 353, 0, 280, 163, 194, 186,
	276, 192, 220, 349, 351, 352, 161, 274, 199, 246,
	159, 204, 305, 216, 224, 0, 0, 263, 288, 166,
	335, 306, 453, 464, 459, 460, 457, 458, 0, 456,
	455, 454, 467, 445, 446, 447, 448, 450, 0, 461,
	462, 449, 141, 153, 221, 0, 281, 191, 338, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 144, 154, 160, 167, 175,
	185, 189, 197, 200, 203, 206, 207, 209, 213, 229,
	233, 234, 235, 236, 248, 249, 250, 253, 256, 257,
	259, 261, 262, 265, 269, 270, 271, 272, 273, 275,
	282, 284, 290, 291, 292, 293, 294, 295, 296, 299,
	300, 301, 302, 310, 313, 323, 324, 334, 343, 347,
	198, 331, 348, 255, 228, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 219, 0,
	0, 267, 0, 298, 170, 227, 225, 320, 188, 184,
	181, 169, 205, 232, 266, 315, 260, 452, 222, 0,
	0, 307, 241, 0, 0, 0, 0, 0, 443, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 168,
	146, 252, 308, 190, 67, 0, 0, 128, 129, 130,
	430, 429, 432, 433, 434, 435, 0, 0, 164, 431,
	436, 437, 438, 0, 179, 208, 183, 178, 318, 0,
	0, 0, 0, 423, 0, 451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 420, 421, 0, 0, 0,
	0, 466, 0, 422, 0, 0, 415, 416, 418, 417,
	419, 424, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 465, 0, 0, 344, 0, 0, 463,
	0, 0, 0, 0, 0, 218, 0, 215, 142, 155,
	0, 0, 251, 285, 289, 0, 0, 0, 171, 0,
	287, 264, 333, 0, 268, 286, 223, 322, 279, 332,
	345, 346, 177, 245, 339, 316, 342, 354, 156, 174,
	258, 312, 336, 304, 240, 319, 214, 303, 195, 145,
	148, 314, 330, 165, 297, 0, 0, 0, 150, 328,
	311, 238, 211, 212, 149, 0, 283, 180, 193, 173,
	254, 325, 326, 172, 355, 157, 341, 152, 158, 340,
	247, 321, 329, 239, 231, 151, 327, 237, 230, 217,
	187, 201, 277, 226, 278, 202, 243, 242, 244, 0,
	147, 0, 309, 337, 356, 162, 0, 0, 317, 350,
	353, 0, 280, 163, 194, 186, 276, 192, 220, 349,
	351, 352, 161, 274, 199, 246, 159, 204, 305, 216,
	224, 0, 0, 263, 288, 166, 335, 306, 453, 464,
	459, 460, 457, 458, 0, 456, 455, 454, 467, 445,
	446, 447, 448, 450, 0, 461, 462, 449, 141, 153,
	221, 0, 281, 191, 338, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 144, 154, 160, 167, 175, 185, 189, 197, 200,
	203, 206, 207, 209, 213, 229, 233, 234, 235, 236,
	248, 249, 250, 253, 256, 257, 259, 261, 262, 265,
	269, 270, 271, 272, 273, 275, 282, 284, 290, 291,
	292, 293, 294, 295, 296, 299, 300, 301, 302, 310,
	313, 323, 324, 334, 343, 347, 198, 331, 348, 255,
	228, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 219, 0, 0, 267, 0, 298,
	170, 227, 225, 320, 188, 184, 181, 169, 205, 232,
	266, 315, 260, 0, 222, 0, 0, 307, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 168, 146, 252, 308, 190,
	0, 0, 0, 128, 129, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	179, 208, 183, 178, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 782, 781, 791,
	792, 784, 785, 786, 787, 788, 789, 790, 783, 0,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 215, 142, 155, 0, 0, 251, 285,
	289, 0, 0, 0, 171, 0, 287, 264, 333, 0,
	268, 286, 223, 322, 279, 332, 345, 346, 177, 245,
	339, 316, 342, 354, 156, 174, 258, 312, 336, 304,
	240, 319, 214, 303, 195, 145, 148, 314, 330, 165,
	297, 0, 0, 0, 150, 328, 311, 238, 211, 212,
	149, 0, 283, 180, 193, 173, 254, 325, 326, 172,
	355, 157, 341, 152, 158, 340, 247, 321, 329, 239,
	231, 151, 327, 237, 230, 217, 187, 201, 277, 226,
	278, 202, 243, 242, 244, 0, 147, 0, 309, 337,
	356, 162, 0, 0, 317, 350, 353, 0, 280, 163,
	194, 186, 276, 192, 220, 349, 351, 352, 161, 274,
	199, 246, 159, 204, 305, 216, 224, 0, 0, 263,
	288, 166, 335, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 153, 221, 0, 281, 191,
	338, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 144, 154, 160,
	167, 175, 185, 189, 197, 200, 203, 206, 207, 209,
	213, 229, 233, 234, 235, 236, 248, 249, 250, 253,
	256, 257, 259, 261, 262, 265, 269, 270, 271, 272,
	273, 275, 282, 284, 290, 291, 292, 293, 294, 295,
	296, 299, 300, 301, 302, 310, 313, 323, 324, 334,
	343, 347, 198, 331, 348, 255, 228, 0, 0, 0,
	0, 0, 0, 0, 182, 686, 0, 0, 0, 0,
	219, 0, 0, 267, 0, 298, 170, 227, 225, 320,
	188, 184, 181, 169, 205, 232, 266, 315, 260, 0,
	222, 0, 0, 307, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 168, 146, 252, 308, 190, 0, 0, 0, 128,
	129, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 179, 208, 183, 178,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 685, 344, 0,
	0, 0, 0, 0, 0, 682, 683, 218, 655, 215,
	142, 155, 676, 680, 251, 285, 289, 0, 0, 0,
	171, 0, 287, 264, 333, 0, 268, 286, 223, 322,
	279, 332, 345, 346, 177, 245, 339, 316, 342, 354,
	156, 174, 258, 312, 336, 304, 240, 319, 214, 303,
	195, 145, 148, 314, 330, 165, 297, 0, 0, 0,
	150, 328, 311, 238, 211, 212, 149, 0, 283, 180,
	193, 173, 254, 325, 326, 172, 355, 157, 341, 152,
	158, 340, 247, 321, 329, 239, 231, 151, 327, 237,
	230, 217, 187, 201, 277, 226, 278, 202, 243, 242,
	244, 0, 147, 0, 309, 337, 356, 162, 0, 0,
	317, 350, 353, 0, 280, 163, 194, 186, 276, 192,
	220, 349, 351, 352, 161, 274, 199, 246, 159, 204,
	305, 216, 224, 0, 0, 263, 288, 166, 335, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 153, 221, 0, 281, 191, 338, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 144, 154, 160, 167, 175, 185, 189,
	197, 200, 203, 206, 207, 209, 213, 229, 233, 234,
	235, 236, 248, 249, 250, 253, 256, 257, 259, 261,
	262, 265, 269, 270, 271, 272, 273, 275, 282, 284,
	290, 291, 292, 293, 294, 295, 296, 299, 300, 301,
	302, 310, 313, 323, 324, 334, 343, 347, 198, 331,
	348, 255, 228, 0, 0, 882, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 219, 0, 0, 267,
	0, 298, 170, 227, 225, 320, 188, 184, 181, 169,
	205, 232, 266, 315, 260, 0, 222, 0, 0, 307,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 168, 146, 252,
	308, 190, 0, 0, 0, 128, 129, 130, 0, 884,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 179, 208, 183, 178, 318, 771, 772, 770,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 773, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 215, 142, 155, 0, 0,
	251, 285, 289, 0, 0, 0, 171, 0, 287, 264,
	333, 0, 268, 286, 223, 322, 279, 332, 345, 346,
	177, 245, 339, 316, 342, 354, 156, 174, 258, 312,
	336, 304, 240, 319, 214, 303, 195, 145, 148, 314,
	330, 165, 297, 0, 0, 0, 150, 328, 311, 238,
	211, 212, 149, 0, 283, 180, 193, 173, 254, 325,
	326, 172, 355, 157, 341, 152, 158, 340, 247, 321,
	329, 239, 231, 151, 327, 237, 230, 217, 187, 201,
	277, 226, 278, 202, 243, 242, 244, 0, 147, 0,
	309, 337, 356, 162, 0, 0, 317, 350, 353, 0,
	280, 163, 194, 186, 276, 192, 220, 349, 351, 352,
	161, 274, 199, 246, 159, 204, 305, 216, 224, 0,
	0, 263, 288, 166, 335, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 153, 221, 0,
	281, 191, 338, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 144,
	154, 160, 167, 175, 185, 189, 197, 200, 203, 206,
	207, 209, 213, 229, 233, 234, 235, 236, 248, 249,
	250, 253, 256, 257, 259, 261, 262, 265, 269, 270,
	271, 272, 273, 275, 282, 284, 290, 291, 292, 293,
	294, 295, 296, 299, 300, 301, 302, 310, 313, 323,
	324, 334, 343, 347, 198, 331, 348, 33, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 219, 0, 0, 267, 0,
	298, 170, 227, 225, 320, 188, 184, 181, 169, 205,
	232, 266, 315, 260, 0, 222, 0, 0, 307, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 168, 146, 252, 308,
	190, 67, 0, 483, 128, 129, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 179, 208, 183, 178, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 196, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 215, 142, 155, 0, 0, 251,
	285, 289, 0, 0, 0, 171, 0, 287, 264, 333,
	0, 268, 286, 223, 322, 279, 332, 345, 346, 177,
	245, 339, 316, 342, 354, 156, 174, 258, 312, 336,
	304, 240, 319, 214, 303, 195, 145, 148, 314, 330,
	165, 297, 0, 0, 0, 150, 328, 311, 238, 211,
	212, 149, 0, 283, 180, 193, 173, 254, 325, 326,
	172, 355, 157, 341, 152, 158, 340, 247, 321, 329,
	239, 231, 151, 327, 237, 230, 217, 187, 201, 277,
	226, 278, 202, 243, 242, 244, 0, 147, 0, 309,
	337, 356, 162, 0, 0, 317, 350, 353, 0, 280,
	163, 194, 186, 276, 192, 220, 349, 351, 352, 161,
	274, 199, 246, 159, 204, 305, 216, 224, 0, 0,
	263, 288, 166, 335, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 153, 221, 0, 281,
	191, 338, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 144, 154,
	160, 167, 175, 185, 189, 197, 200, 203, 206, 207,
	209, 213, 229, 233, 234, 235, 236, 248, 249, 250,
	253, 256, 257, 259, 261, 262, 265, 269, 270, 271,
	272, 273, 275, 282, 284, 290, 291, 292, 293, 294,
	295, 296, 299, 300, 301, 302, 310, 313, 323, 324,
	334, 343, 347, 198, 331, 348, 255, 228, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 219, 0, 0, 267, 0, 298, 170, 227, 225,
	320, 188, 184, 181, 169, 205, 232, 266, 315, 260,
	0, 222, 0, 0, 307, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 168, 146, 252, 308, 190, 0, 0, 0,
	128, 129, 130, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 179, 208, 183,
	178, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 649, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 0, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 655,
	215, 142, 155, 653, 0, 251, 285, 289, 0, 0,
	0, 171, 0, 287, 264, 333, 0, 268, 286, 223,
	322, 279, 332, 345, 346, 177, 245, 339, 316, 342,
	354, 156, 174, 258, 312, 336, 304, 240, 319, 214,
	303, 195, 145, 148, 314, 330, 165, 297, 0, 0,
	0, 150, 328, 311, 238, 211, 212, 149, 0, 283,
	180, 193, 173, 254, 325, 326, 172, 355, 157, 341,
	152, 158, 340, 247, 321, 329, 239, 231, 151, 327,
	237, 230, 217, 187, 201, 277, 226, 278, 202, 243,
	242, 244, 0, 147, 0, 309, 337, 356, 162, 0,
	0, 317, 350, 353, 0, 280, 163, 194, 186, 276,
	192, 220, 349, 351, 352, 161, 274, 199, 246, 159,
	204, 305, 216, 224, 0, 0, 263, 288, 166, 335,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 153, 221, 0, 281, 191, 338, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 144, 154, 160, 167, 175, 185,
	189, 197, 200, 203, 206, 207, 209, 213, 229, 233,
	234, 235, 236, 248, 249, 250, 253, 256, 257, 259,
	261, 262, 265, 269, 270, 271, 272, 273, 275, 282,
	284, 290, 291, 292, 293, 294, 295, 296, 299, 300,
	301, 302, 310, 313, 323, 324, 334, 343, 347, 198,
	331, 348, 255, 228, 0, 0, 1149, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 219, 0, 0,
	267, 0, 298, 170, 227, 225, 320, 188, 184, 181,
	169, 205, 232, 266, 315, 260, 0, 222, 0, 0,
	307, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 168, 146,
	252, 308, 190, 0, 0, 0, 128, 129, 130, 0,
	1151, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 179, 208, 183, 178, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 215, 142, 155, 0,
	0, 251, 285, 289, 0, 0, 0, 171, 0, 287,
	264, 333, 0, 268, 286, 223, 322, 279, 332, 345,
	346, 177, 245, 339, 316, 342, 354, 156, 174, 258,
	312, 336, 304, 240, 319, 214, 303, 195, 145, 148,
	314, 330, 165, 297, 0, 0, 0, 150, 328, 311,
	238, 211, 212, 149, 0, 283, 180, 193, 173, 254,
	325, 326, 172, 355, 157, 341, 152, 158, 340, 247,
	321, 329, 239, 231, 151, 327, 237, 230, 217, 187,
	201, 277, 226, 278, 202, 243, 242, 244, 0, 147,
	0, 309, 337, 356, 162, 0, 0, 317, 350, 353,
	0, 280, 163, 194, 186, 276, 192, 220, 349, 351,
	352, 161, 274, 199, 246, 159, 204, 305, 216, 224,
	0, 0, 263, 288, 166, 335, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 153, 221,
	0, 281, 191, 338, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	144, 154, 160, 167, 175, 185, 189, 197, 200, 203,
	206, 207, 209, 213, 229, 233, 234, 235, 236, 248,
	249, 250, 253, 256, 257, 259, 261, 262, 265, 269,
	270, 271, 272, 273, 275, 282, 284, 290, 291, 292,
	293, 294, 295, 296, 299, 300, 301, 302, 310, 313,
	323, 324, 334, 343, 347, 198, 331, 348, 33, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 219, 0, 0, 267,
	0, 298, 170, 227, 225, 320, 188, 184, 181, 169,
	205, 232, 266, 315, 260, 0, 222, 0, 0, 307,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 168, 146, 252,
	308, 190, 67, 0, 0, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 179, 208, 183, 178, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 215, 142, 155, 0, 0,
	251, 285, 289, 0, 0, 0, 171, 0, 287, 264,
	333, 0, 268, 286, 223, 322, 279, 332, 345, 346,
	177, 245, 339, 316, 342, 354, 156, 174, 258, 312,
	336, 304, 240, 319, 214, 303, 195, 145, 148, 314,
	330, 165, 297, 0, 0, 0, 150, 328, 311, 238,
	211, 212, 149, 0, 283, 180, 193, 173, 254, 325,
	326, 172, 355, 157, 341, 152, 158, 340, 247, 321,
	329, 239, 231, 151, 327, 237, 230, 217, 187, 201,
	277, 226, 278, 202, 243, 242, 244, 0, 147, 0,
	309, 337, 356, 162, 0, 0, 317, 350, 353, 0,
	280, 163, 194, 186, 276, 192, 220, 349, 351, 352,
	161, 274, 199, 246, 159, 204, 305, 216, 224, 0,
	0, 263, 288, 166, 335, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 153, 221, 0,
	281, 191, 338, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 144,
	154, 160, 167, 175, 185, 189, 197, 200, 203, 206,
	207, 209, 213, 229, 233, 234, 235, 236, 248, 249,
	250, 253, 256, 257, 259, 261, 262, 265, 269, 270,
	271, 272, 273, 275, 282, 284, 290, 291, 292, 293,
	294, 295, 296, 299, 300, 301, 302, 310, 313, 323,
	324, 334, 343, 347, 198, 331, 348, 255, 228, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 219, 0, 0, 267, 0, 298, 170, 227,
	225, 320, 188, 184, 181, 169, 205, 232, 266, 315,
	260, 0, 222, 0, 0, 307, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 168, 146, 252, 308, 190, 0, 0,
	0, 128, 129, 130, 0, 0, 1167, 0, 0, 1168,
	0, 0, 164, 0, 0, 0, 0, 0, 179, 208,
	183, 178, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 215, 142, 155, 0, 0, 251, 285, 289, 0,
	0, 0, 171, 0, 287, 264, 333, 0, 268, 286,
	223, 322, 279, 332, 345, 346, 177, 245, 339, 316,
	342, 354, 156, 174, 258, 312, 336, 304, 240, 319,
	214, 303, 195, 145, 148, 314, 330, 165, 297, 0,
	0, 0, 150, 328, 311, 238, 211, 212, 149, 0,
	283, 180, 193, 173, 254, 325, 326, 172, 355, 157,
	341, 152, 158, 340, 247, 321, 329, 239, 231, 151,
	327, 237, 230, 217, 187, 201, 277, 226, 278, 202,
	243, 242, 244, 0, 147, 0, 309, 337, 356, 162,
	0, 0, 317, 350, 353, 0, 280, 163, 194, 186,
	276, 192, 220, 349, 351, 352, 161, 274, 199, 246,
	159, 204, 305, 216, 224, 0, 0, 263, 288, 166,
	335, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 153, 221, 0, 281, 191, 338, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 144, 154, 160, 167, 175,
	185, 189, 197, 200, 203, 206, 207, 209, 213, 229,
	233, 234, 235, 236, 248, 249, 250, 253, 256, 257,
	259, 261, 262, 265, 269, 270, 271, 272, 273, 275,
	282, 284, 290, 291, 292, 293, 294, 295, 296, 299,
	300, 301, 302, 310, 313, 323, 324, 334, 343, 347,
	198, 331, 348, 255, 228, 0, 0, 1149, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 219, 0,
	0, 267, 0, 298, 170, 227, 225, 320, 188, 184,
	181, 169, 205, 232, 266, 315, 260, 0, 222, 0,
	0, 307, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 168,
	146, 252, 308, 190, 0, 0, 0, 128, 129, 130,
	0, 1151, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 179, 208, 183, 178, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 215, 142, 155,
	0, 0, 251, 285, 289, 0, 0, 0, 171, 0,
	287, 264, 333, 0, 1147, 286, 223, 322, 279, 332,
	345, 346, 177, 245, 339, 316, 342, 354, 156, 174,
	258, 312, 336, 304, 240, 319, 214, 303, 195, 145,
	148, 314, 330, 165, 297, 0, 0, 0, 150, 328,
	311, 238, 211, 212, 149, 0, 283, 180, 193, 173,
	254, 325, 326, 172, 355, 157, 341, 152, 158, 340,
	247, 321, 329, 239, 231, 151, 327, 237, 230, 217,
	187, 201, 277, 226, 278, 202, 243, 242, 244, 0,
	147, 0, 309, 337, 356, 162, 0, 0, 317, 350,
	353, 0, 280, 163, 194, 186, 276, 192, 220, 349,
	351, 352, 161, 274, 199, 246, 159, 204, 305, 216,
	224, 0, 0, 263, 288, 166, 335, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 153,
	221, 0, 281, 191, 338, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 144, 154, 160, 167, 175, 185, 189, 197, 200,
	203, 206, 207, 209, 213, 229, 233, 234, 235, 236,
	248, 249, 250, 253, 256, 257, 259, 261, 262, 265,
	269, 270, 271, 272, 273, 275, 282, 284, 290, 291,
	292, 293, 294, 295, 296, 299, 300, 301, 302, 310,
	313, 323, 324, 334, 343, 347, 198, 331, 348, 255,
	228, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	915, 0, 0, 0, 219, 0, 0, 267, 0, 298,
	170, 227, 225, 320, 188, 184, 181, 169, 205, 232,
	266, 315, 260, 0, 222, 0, 0, 307, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 168, 146, 252, 308, 190,
	0, 0, 0, 128, 129, 130, 0, 914, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	179, 208, 183, 178, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 215, 142, 155, 0, 0, 251, 285,
	289, 0, 0, 0, 171, 0, 287, 264, 333, 0,
	268, 286, 223, 322, 279, 332, 345, 346, 177, 245,
	339, 316, 342, 354, 156, 174, 258, 312, 336, 304,
	240, 319, 214, 303, 195, 145, 148, 314, 330, 165,
	297, 0, 0, 0, 150, 328, 311, 238, 211, 212,
	149, 0, 283, 180, 193, 173, 254, 325, 326, 172,
	355, 157, 341, 152, 158, 340, 247, 321, 329, 239,
	231, 151, 327, 237, 230, 217, 187, 201, 277, 226,
	278, 202, 243, 242, 244, 0, 147, 0, 309, 337,
	356, 162, 0, 0, 317, 350, 353, 0, 280, 163,
	194, 186, 276, 192, 220, 349, 351, 352, 161, 274,
	199, 246, 159, 204, 305, 216, 224, 0, 0, 263,
	288, 166, 335, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 153, 221, 0, 281, 191,
	338, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 144, 154, 160,
	167, 175, 185, 189, 197, 200, 203, 206, 207, 209,
	213, 229, 233, 234, 235, 236, 248, 249, 250, 253,
	256, 257, 259, 261, 262, 265, 269, 270, 271, 272,
	273, 275, 282, 284, 290, 291, 292, 293, 294, 295,
	296, 299, 300, 301, 302, 310, 313, 323, 324, 334,
	343, 347, 198, 331, 348, 255, 228, 0, 0, 0,
	0, 0, 0, 0, 182, 0, 0, 0, 0, 0,
	219, 0, 0, 267, 0, 298, 170, 227, 225, 320,
	188, 184, 181, 169, 205, 232, 266, 315, 260, 0,
	222, 0, 0, 307, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 168, 146, 252, 308, 190, 0, 0, 483, 128,
	129, 130, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 179, 208, 183, 178,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 196, 0, 0, 0, 0, 344, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 0, 215,
	142, 155, 0, 0, 251, 285, 289, 0, 0, 0,
	171, 0, 287, 264, 333, 0, 268, 286, 223, 322,
	279, 332, 345, 346, 177, 245, 339, 316, 342, 354,
	156, 174, 258, 312, 336, 304, 240, 319, 214, 303,
	195, 145, 148, 314, 330, 165, 297, 0, 0, 0,
	150, 328, 311, 238, 211, 212, 149, 0, 283, 180,
	193, 173, 254, 325, 326, 172, 355, 157, 341, 152,
	158, 340, 247, 321, 329, 239, 231, 151, 327, 237,
	230, 217, 187, 201, 277, 226, 278, 202, 243, 242,
	244, 0, 147, 0, 309, 337, 356, 162, 0, 0,
	317, 350, 353, 0, 280, 163, 194, 186, 276, 192,
	220, 349, 351, 352, 161, 274, 199, 246, 159, 204,
	305, 216, 224, 0, 0, 263, 288, 166, 335, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	141, 153, 221, 0, 281, 191, 338, 0, 0, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 144, 154, 160, 167, 175, 185, 189,
	197, 200, 203, 206, 207, 209, 213, 229, 233, 234,
	235, 236, 248, 249, 250, 253, 256, 257, 259, 261,
	262, 265, 269, 270, 271, 272, 273, 275, 282, 284,
	290, 291, 292, 293, 294, 295, 296, 299, 300, 301,
	302, 310, 313, 323, 324, 334, 343, 347, 198, 331,
	348, 255, 228, 0, 0, 0, 0, 0, 0, 0,
	182, 0, 0, 0, 0, 0, 219, 0, 0, 267,
	0, 298, 170, 227, 225, 320, 188, 184, 181, 169,
	205, 232, 266, 315, 260, 0, 222, 0, 0, 307,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 168, 146, 252,
	308, 190, 67, 0, 0, 128, 129, 130, 0, 0,
	0, 0, 0, 0, 0, 0, 164, 0, 0, 0,
	0, 0, 179, 208, 183, 178, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	0, 0, 0, 0, 344, 0, 0, 0, 0, 0,
	0, 0, 0, 218, 0, 215, 142, 155, 0, 0,
	251, 285, 289, 0, 0, 0, 171, 0, 287, 264,
	333, 0, 268, 286, 223, 322, 279, 332, 345, 346,
	177, 245, 339, 316, 342, 354, 156, 174, 258, 312,
	336, 304, 240, 319, 214, 303, 195, 145, 148, 314,
	330, 165, 297, 0, 0, 0, 150, 328, 311, 238,
	211, 212, 149, 0, 283, 180, 193, 173, 254, 325,
	326, 172, 355, 157, 341, 152, 158, 340, 247, 321,
	329, 239, 231, 151, 327, 237, 230, 217, 187, 201,
	277, 226, 278, 202, 243, 242, 244, 0, 147, 0,
	309, 337, 356, 162, 0, 0, 317, 350, 353, 0,
	280, 163, 194, 186, 276, 192, 220, 349, 351, 352,
	161, 274, 199, 246, 159, 204, 305, 216, 224, 0,
	0, 263, 288, 166, 335, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 141, 153, 221, 0,
	281, 191, 338, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 144,
	154, 160, 167, 175, 185, 189, 197, 200, 203, 206,
	207, 209, 213, 229, 233, 234, 235, 236, 248, 249,
	250, 253, 256, 257, 259, 261, 262, 265, 269, 270,
	271, 272, 273, 275, 282, 284, 290, 291, 292, 293,
	294, 295, 296, 299, 300, 301, 302, 310, 313, 323,
	324, 334, 343, 347, 198, 331, 348, 255, 228, 0,
	0, 0, 0, 0, 0, 0, 182, 0, 0, 0,
	0, 0, 219, 0, 0, 267, 0, 298, 170, 227,
	225, 320, 188, 184, 181, 169, 205, 232, 266, 315,
	260, 0, 222, 0, 0, 307, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 168, 146, 252, 308, 190, 0, 0,
	0, 128, 129, 130, 0, 1151, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 179, 208,
	183, 178, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 196, 0, 0, 0, 0,
	344, 0, 0, 0, 0, 0, 0, 0, 0, 218,
	0, 215, 142, 155, 0, 0, 251, 285, 289, 0,
	0, 0, 171, 0, 287, 264, 333, 0, 268, 286,
	223, 322, 279, 332, 345, 346, 177, 245, 339, 316,
	342, 354, 156, 174, 258, 312, 336, 304, 240, 319,
	214, 303, 195, 145, 148, 314, 330, 165, 297, 0,
	0, 0, 150, 328, 311, 238, 211, 212, 149, 0,
	283, 180, 193, 173, 254, 325, 326, 172, 355, 157,
	341, 152, 158, 340, 247, 321, 329, 239, 231, 151,
	327, 237, 230, 217, 187, 201, 277, 226, 278, 202,
	243, 242, 244, 0, 147, 0, 309, 337, 356, 162,
	0, 0, 317, 350, 353, 0, 280, 163, 194, 186,
	276, 192, 220, 349, 351, 352, 161, 274, 199, 246,
	159, 204, 305, 216, 224, 0, 0, 263, 288, 166,
	335, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 141, 153, 221, 0, 281, 191, 338, 0,
	0, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 144, 154, 160, 167, 175,
	185, 189, 197, 200, 203, 206, 207, 209, 213, 229,
	233, 234, 235, 236, 248, 249, 250, 253, 256, 257,
	259, 261, 262, 265, 269, 270, 271, 272, 273, 275,
	282, 284, 290, 291, 292, 293, 294, 295, 296, 299,
	300, 301, 302, 310, 313, 323, 324, 334, 343, 347,
	198, 331, 348, 255, 228, 0, 0, 0, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 219, 0,
	0, 267, 0, 298, 170, 227, 225, 320, 188, 184,
	181, 169, 205, 232, 266, 315, 260, 0, 222, 0,
	0, 307, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 168,
	146, 252, 308, 190, 0, 0, 0, 128, 129, 130,
	0, 884, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 179, 208, 183, 178, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 196, 0, 0, 0, 0, 344, 0, 0, 0,
	0, 0, 0, 0, 0, 218, 0, 215, 142, 155,
	0, 0, 251, 285, 289, 0, 0, 0, 171, 0,
	287, 264, 333, 0, 268, 286, 223, 322, 279, 332,
	345, 346, 177, 245, 339, 316, 342, 354, 156, 174,
	258, 312, 336, 304, 240, 319, 214, 303, 195, 145,
	148, 314, 330, 165, 297, 0, 0, 0, 150, 328,
	311, 238, 211, 212, 149, 0, 283, 180, 193, 173,
	254, 325, 326, 172, 355, 157, 341, 152, 158, 340,
	247, 321, 329, 239, 231, 151, 327, 237, 230, 217,
	187, 201, 277, 226, 278, 202, 243, 242, 244, 0,
	147, 0, 309, 337, 356, 162, 0, 0, 317, 350,
	353, 0, 280, 163, 194, 186, 276, 192, 220, 349,
	351, 352, 161, 274, 199, 246, 159, 204, 305, 216,
	224, 0, 0, 263, 288, 166, 335, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 141, 153,
	221, 0, 281, 191, 338, 0, 0, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	143, 144, 154, 160, 167, 175, 185, 189, 197, 200,
	203, 206, 207, 209, 213, 229, 233, 234, 235, 236,
	248, 249, 250, 253, 256, 257, 259, 261, 262, 265,
	269, 270, 271, 272, 273, 275, 282, 284, 290, 291,
	292, 293, 294, 295, 296, 299, 300, 301, 302, 310,
	313, 323, 324, 334, 343, 347, 198, 331, 348, 255,
	228, 0, 0, 0, 0, 0, 0, 0, 182, 0,
	0, 0, 0, 0, 219, 0, 0, 267, 0, 298,
	170, 227, 225, 320, 188, 184, 181, 169, 205, 232,
	266, 315, 260, 0, 222, 0, 0, 307, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 168, 146, 252, 308, 190,
	986, 0, 0, 128, 129, 130, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	179, 208, 183, 178, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 196, 0, 0,
	0, 0, 344, 0, 0, 0, 0, 0, 0, 0,
	0, 218, 0, 215, 142, 155, 0, 0, 251, 285,
	289, 0, 0, 0, 171, 0, 287, 264, 333, 0,
	268, 286, 223, 322, 279, 332, 345, 346, 177, 245,
	339, 316, 342, 354, 156, 174, 258, 312, 336, 304,
	240, 319, 214, 303, 195, 145, 148, 314, 330, 165,
	297, 0, 0, 0, 150, 328, 311, 238, 211, 212,
	149, 0, 283, 180, 193, 173, 254, 325, 326, 172,
	355, 157, 341, 152, 158, 340, 247, 321, 329, 239,
	231, 151, 327, 237, 230, 217, 187, 201, 277, 226,
	278, 202, 243, 242, 244, 0, 147, 0, 309, 337,
	356, 162, 0, 0, 317, 350, 353, 0, 280, 163,
	194, 186, 276, 192, 220, 349, 351, 352, 161, 274,
	199, 246, 159, 204, 305, 216, 224, 0, 0, 263,
	288, 166, 335, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 153, 221, 0, 281, 191,
	338, 0, 0, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 144, 154, 160,
	167, 175, 185, 189, 197, 200, 203, 206, 207, 209,
	213, 229, 233, 234, 235, 236, 248, 249, 250, 253,
	256, 257, 259, 261, 262, 265, 269, 270, 271, 272,
	273, 275, 282, 284, 290, 291, 292, 293, 294, 295,
	296, 299, 300, 301, 302, 310, 313, 323, 324, 334,
	343, 347, 198, 331, 348, 897, 228, 0, 0, 0,
	0, 0, 255, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 219, 0, 0,
	267, 0, 298, 170, 227, 225, 320, 188, 184, 181,
	169, 205, 232, 266, 315, 260, 0, 222, 0, 0,
	307, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 168, 146,
	252, 308, 190, 0, 0, 0, 128, 129, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 179, 208, 183, 178, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 215, 142, 155, 0,
	0, 251, 285, 289, 0, 0, 0, 171, 0, 287,
	264, 333, 0, 268, 286, 223, 322, 279, 332, 345,
	346, 177, 245, 339, 316, 342, 354, 156, 174, 258,
	312, 336, 304, 240, 319, 214, 303, 195, 145, 148,
	314, 330, 165, 297, 0, 0, 0, 150, 328, 311,
	238, 211, 212, 149, 0, 283, 180, 193, 173, 254,
	325, 326, 172, 355, 157, 341, 152, 158, 340, 247,
	321, 329, 239, 231, 151, 327, 237, 230, 217, 187,
	201, 277, 226, 278, 202, 243, 242, 244, 0, 147,
	0, 309, 337, 356, 162, 0, 0, 317, 350, 353,
	0, 280, 163, 194, 186, 276, 192, 220, 349, 351,
	352, 161, 274, 199, 246, 159, 204, 305, 216, 224,
	0, 0, 263, 288, 166, 335, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 153, 221,
	0, 281, 191, 338, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	144, 154, 160, 167, 175, 185, 189, 197, 200, 203,
	206, 207, 209, 213, 229, 233, 234, 235, 236, 248,
	249, 250, 253, 256, 257, 259, 261, 262, 265, 269,
	270, 271, 272, 273, 275, 282, 284, 290, 291, 292,
	293, 294, 295, 296, 299, 300, 301, 302, 310, 313,
	323, 324, 334, 343, 347, 198, 331, 348, 255, 228,
	0, 0, 0, 0, 0, 0, 888, 182, 0, 0,
	0, 0, 0, 219, 0, 0, 267, 0, 298, 170,
	227, 225, 320, 188, 184, 181, 169, 205, 232, 266,
	315, 260, 0, 222, 0, 0, 307, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 168, 146, 252, 308, 190, 0,
	0, 0, 128, 129, 130, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 179,
	208, 183, 178, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 0, 0, 0,
	0, 344, 0, 0, 0, 0, 0, 0, 0, 0,
	218, 0, 215, 142, 155, 0, 0, 251, 285, 289,
	0, 0, 0, 171, 0, 287, 264, 333, 0, 268,
	286, 223, 322, 279, 332, 345, 346, 177, 245, 339,
	316, 342, 354, 156, 174, 258, 312, 336, 304, 240,
	319, 214, 303, 195, 145, 148, 314, 330, 165, 297,
	0, 0, 0, 150, 328, 311, 238, 211, 212, 149,
	0, 283, 180, 193, 173, 254, 325, 326, 172, 355,
	157, 341, 152, 158, 340, 247, 321, 329, 239, 231,
	151, 327, 237, 230, 217, 187, 201, 277, 226, 278,
	202, 243, 242, 244, 0, 147, 0, 309, 337, 356,
	162, 0, 0, 317, 350, 353, 0, 280, 163, 194,
	186, 276, 192, 220, 349, 351, 352, 161, 274, 199,
	246, 159, 204, 305, 216, 224, 0, 0, 263, 288,
	166, 335, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 141, 153, 221, 0, 281, 191, 338,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 144, 154, 160, 167,
	175, 185, 189, 197, 200, 203, 206, 207, 209, 213,
	229, 233, 234, 235, 236, 248, 249, 250, 253, 256,
	257, 259, 261, 262, 265, 269, 270, 271, 272, 273,
	275, 282, 284, 290, 291, 292, 293, 294, 295, 296,
	299, 300, 301, 302, 310, 313, 323, 324, 334, 343,
	347, 198, 331, 348, 255, 228, 0, 0, 0, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 219,
	0, 0, 267, 0, 298, 170, 227, 225, 320, 188,
	184, 181, 169, 205, 232, 266, 315, 260, 0, 222,
	0, 0, 307, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	168, 146, 252, 308, 190, 0, 0, 0, 128, 129,
	130, 0, 762, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 179, 208, 183, 178, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 196, 0, 0, 0, 0, 344, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 0, 215, 142,
	155, 0, 0, 251, 285, 289, 0, 0, 0, 171,
	0, 287, 264, 333, 0, 268, 286, 223, 322, 279,
	332, 345, 346, 177, 245, 339, 316, 342, 354, 156,
	174, 258, 312, 336, 304, 240, 319, 214, 303, 195,
	145, 148, 314, 330, 165, 297, 0, 0, 0, 150,
	328, 311, 238, 211, 212, 149, 0, 283, 180, 193,
	173, 254, 325, 326, 172, 355, 157, 341, 152, 158,
	340, 247, 321, 329, 239, 231, 151, 327, 237, 230,
	217, 187, 201, 277, 226, 278, 202, 243, 242, 244,
	0, 147, 0, 309, 337, 356, 162, 0, 0, 317,
	350, 353, 0, 280, 163, 194, 186, 276, 192, 220,
	349, 351, 352, 161, 274, 199, 246, 159, 204, 305,
	216, 224, 0, 0, 263, 288, 166, 335, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 141,
	153, 221, 0, 281, 191, 338, 0, 0, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 144, 154, 160, 167, 175, 185, 189, 197,
	200, 203, 206, 207, 209, 213, 229, 233, 234, 235,
	236, 248, 249, 250, 253, 256, 257, 259, 261, 262,
	265, 269, 270, 271, 272, 273, 275, 282, 284, 290,
	291, 292, 293, 294, 295, 296, 299, 300, 301, 302,
	310, 313, 323, 324, 334, 343, 347, 198, 331, 348,
	255, 228, 0, 0, 0, 0, 0, 0, 0, 182,
	0, 0, 0, 0, 0, 219, 0, 0, 267, 0,
	298, 170, 227, 225, 320, 188, 184, 181, 169, 205,
	232, 266, 315, 260, 0, 222, 0, 0, 307, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 168, 146, 252, 308,
	190, 0, 0, 0, 128, 129, 130, 0, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 179, 208, 183, 178, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 196, 0,
	0, 0, 0, 344, 0, 0, 0, 0, 0, 0,
	0, 0, 218, 0, 215, 142, 155, 0, 0, 251,
	285, 289, 0, 0, 0, 171, 0, 287, 264, 333,
	0, 268, 286, 223, 322, 279, 332, 345, 346, 177,
	245, 339, 316, 342, 354, 156, 174, 258, 312, 336,
	304, 240, 319, 214, 303, 195, 145, 148, 314, 330,
	165, 297, 0, 0, 0, 150, 328, 311, 238, 211,
	212, 149, 0, 283, 180, 193, 173, 254, 325, 326,
	172, 355, 157, 341, 152, 158, 340, 247, 321, 329,
	239, 231, 151, 327, 237, 230, 217, 187, 201, 277,
	226, 278, 202, 243, 242, 244, 0, 147, 0, 309,
	337, 356, 162, 0, 0, 317, 350, 353, 0, 280,
	163, 194, 186, 276, 192, 220, 349, 351, 352, 161,
	274, 199, 246, 159, 204, 305, 216, 224, 0, 0,
	263, 288, 166, 335, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 153, 221, 0, 281,
	191, 338, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 144, 154,
	160, 167, 175, 185, 189, 197, 200, 203, 206, 207,
	209, 213, 229, 233, 234, 235, 236, 248, 249, 250,
	253, 256, 257, 259, 261, 262, 265, 269, 270, 271,
	272, 273, 275, 282, 284, 290, 291, 292, 293, 294,
	295, 296, 299, 300, 301, 302, 310, 313, 323, 324,
	334, 343, 347, 398, 331, 348, 255, 228, 0, 0,
	0, 0, 0, 0, 0, 182, 0, 0, 0, 0,
	0, 219, 0, 0, 267, 0, 298, 170, 227, 225,
	320, 188, 184, 181, 169, 205, 232, 266, 315, 260,
	0, 222, 0, 0, 307, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 168, 146, 252, 308, 190, 0, 0, 0,
	128, 129, 130, 0, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 179, 208, 183,
	178, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 196, 0, 0, 136, 0, 344,
	0, 0, 0, 0, 0, 0, 0, 0, 218, 0,
	215, 142, 155, 0, 0, 251, 285, 289, 0, 0,
	0, 171, 0, 287, 264, 333, 0, 268, 286, 223,
	322, 279, 332, 345, 346, 177, 245, 339, 316, 342,
	354, 156, 174, 258, 312, 336, 304, 240, 319, 214,
	303, 195, 145, 148, 314, 330, 165, 297, 0, 0,
	0, 150, 328, 311, 238, 211, 212, 149, 0, 283,
	180, 193, 173, 254, 325, 326, 172, 355, 157, 341,
	152, 158, 340, 247, 321, 329, 239, 231, 151, 327,
	237, 230, 217, 187, 201, 277, 226, 278, 202, 243,
	242, 244, 0, 147, 0, 309, 337, 356, 162, 0,
	0, 317, 350, 353, 0, 280, 163, 194, 186, 276,
	192, 220, 349, 351, 352, 161, 274, 199, 246, 159,
	204, 305, 216, 224, 0, 0, 263, 288, 166, 335,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 141, 153, 221, 0, 281, 191, 338, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 144, 154, 160, 167, 175, 185,
	189, 197, 200, 203, 206, 207, 209, 213, 229, 233,
	234, 235, 236, 248, 249, 250, 253, 256, 257, 259,
	261, 262, 265, 269, 270, 271, 272, 273, 275, 282,
	284, 290, 291, 292, 293, 294, 295, 296, 299, 300,
	301, 302, 310, 313, 323, 324, 334, 343, 347, 198,
	331, 348, 255, 228, 0, 0, 0, 0, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 219, 0, 0,
	267, 0, 298, 170, 227, 225, 320, 188, 184, 181,
	169, 205, 232, 266, 315, 260, 0, 222, 0, 0,
	307, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 168, 146,
	252, 308, 190, 0, 0, 0, 128, 129, 130, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 179, 208, 183, 178, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 0, 0, 0, 0, 344, 0, 0, 0, 0,
	0, 0, 0, 0, 218, 0, 215, 142, 155, 0,
	0, 251, 285, 289, 0, 0, 0, 171, 0, 287,
	264, 333, 0, 268, 286, 223, 322, 279, 332, 345,
	346, 177, 245, 339, 316, 342, 354, 156, 174, 258,
	312, 336, 304, 240, 319, 214, 303, 195, 145, 148,
	314, 330, 165, 297, 0, 0, 0, 150, 328, 311,
	238, 211, 212, 149, 0, 283, 180, 193, 173, 254,
	325, 326, 172, 355, 157, 341, 152, 158, 340, 247,
	321, 329, 239, 231, 151, 327, 237, 230, 217, 187,
	201, 277, 226, 278, 202, 243, 242, 244, 0, 147,
	0, 309, 337, 356, 162, 0, 0, 317, 350, 353,
	0, 280, 163, 194, 186, 276, 192, 220, 349, 351,
	352, 161, 274, 199, 246, 159, 204, 305, 216, 224,
	0, 0, 263, 288, 166, 335, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 153, 221,
	0, 281, 191, 338, 0, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	144, 154, 160, 167, 175, 185, 189, 197, 200, 203,
	206, 207, 209, 213, 229, 233, 234, 235, 236, 248,
	249, 250, 253, 256, 257, 259, 261, 262, 265, 269,
	270, 271, 272, 273, 275, 282, 284, 290, 291, 292,
	293, 294, 295, 296, 299, 300, 301, 302, 310, 313,
	323, 324, 334, 343, 347, 198, 331, 348, 0, 228,
}

var yyPact = [...]int{
	331, -1000, -304, 1343, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1275, 897, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	457, 1004, 84, 1219, 156, -6, 682, 218, 79, 20077,
	217, 34, 20473, -1000, 37, -1000, 28, 20473, 42, 19681,
	-1000, -1000, -1000, 11332, 1182, -79, -83, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 999, 1274, 1270, 1291, 869,
	1316, -1000, 9735, 9735, 172, 172, 172, 8151, -1000, -1000,
	14117, 20473, 20473, 1011, 188, 215, 188, -163, -1000, -1000,
	-1000, -1000, -1000, -1000, 1219, -1000, -1000, 89, -1000, -1000,
	944, -1000, 366, 417, 157, 157, -8, 206, 1193, 1191,
	476, 474, 20473, -1000, 20473, 404, 1219, 97, -1000, -1000,
	-1000, 20473, 185, 682, 185, 185, 20473, -1000, 269, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 20473, 1215, 479,
	479, 479, 479, 479, 479, -4, -1000, -20, 92, 90,
	94, -32, 682, 205, -1000, 318, -1000, 85, 6, -1000,
	479, 5673, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	197, -1000, -1000, -1000, -1000, 20473, 19285, 195, 443, -1000,
	-1000, -1000, -1000, 801, 577, -1000, 11332, 1433, 855, 855,
	-1000, -1000, 230, -1000, -1000, 12124, 12124, 12124, 12124, 12124,
	12124, 12124, 12124, 12124, 12124, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 855,
	268, -1000, 10936, 855, 855, 855, 855, 855, 855, 855,
	855, 11332, 855, 855, 855, 855, 855, 855, 855, 855,
	855, 855, 855, 855, 855, 855, 855, 855, -1000, -1000,
	-1000, 20473, -1000, 1275, -1000, 897, -1000, -1000, -1000, 1210,
	11332, 11332, 1275, -1000, 1124, 9735, -1000, -1000, 1258, -1000,
	-1000, -1000, -1000, 518, 1323, -1000, 13312, 266, 1322, 18889,
	-1000, 16902, 18493, 943, 7738, -107, -1000, -1000, -1000, 442,
	16110, -1000, -1000, -1000, 1213, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 891, 20473,
	-1000, -1000, 204, 682, -1000, 1002, -1000, 889, -1000, 958,
	74, 440, 20473, 465, 682, 682, -1000, -1000, -1000, 1203,
	417, 156, -1000, -1000, -1000, 18090, 682, -1000, 1000, -1000,
	1235, 178, 362, 362, 682, -1000, -1000, 1073, -1000, 20473,
	20473, 1202, -10, -1000, -1000, -1000, -1000, -1000, 5673, 106,
	153, 121, 20473, 1219, 1174, 940, 196, 20473, 1260, 1045,
	20473, 682, -1000, 6912, -1000, 479, -1000, 699, 11332, -1000,
	-1000, -1000, -1000, -1000, 479, 20473, 479, 20473, 479, 479,
	479, 479, 469, 475, 469, -1000, -1000, -1000, -1000, 5673,
	5673, 20473, 5673, 5673, 20473, 5673, 5673, 475, -1000, -1000,
	-1000, 382, -1000, 1043, -1000, -1000, -1000, -1000, 31, -1000,
	-1000, -1000, -1000, -1000, 1343, -1000, -1000, -1000, -142, 11332,
	11332, 11332, 11332, 656, 405, 12124, 658, 466, 12124, 12124,
	12124, 12124, 12124, 12124, 12124, 12124, 12124, 12124, 12124, 12124,
	12124, 12124, 12124, 769, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 682, -1000, 1341, 804, 804, 294, 294, 294,
	294, 294, 294, 294, 294, 294, 12520, 8547, 6912, 869,
	887, 1275, 9735, 9735, 11332, 11332, 10527, 10131, 9735, 1204,
	451, 577, 20473, -1000, -1000, 11728, -1000, -1000, -1000, -1000,
	-1000, 706, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20473,
	20473, 9735, 9735, 9735, 9735, 9735, -1000, 939, -1000, -186,
	15714, 1270, 869, 1258, 1243, 1335, 370, 581, 921, -1000,
	587, 1270, 15318, 953, -1000, 1258, -1000, -1000, -1000, 20473,
	-1000, -1000, 17694, -1000, -1000, 6499, 20473, 113, 20473, -1000,
	948, 1350, -1000, -1000, -1000, 1264, 14922, 20473, 954, 909,
	-1000, -1000, 265, 7325, -107, -1000, 7325, 905, -1000, -122,
	-130, 8943, 281, -1000, -1000, -1000, -1000, 4847, 12916, 773,
	498, -44, -1000, -1000, -1000, 958, -1000, 958, 958, 958,
	958, -11, -11, -11, -11, -1000, -1000, -1000, -1000, -1000,
	976, 975, -1000, 958, 958, 958, 958, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 965, 965, 965, 959, 959, 163,
	-1000, 11332, 58, 20473, 1253, 608, 60, 433, 75, -1000,
	1259, 1025, -1000, 417, 854, -1000, 20473, 51, -1000, 171,
	-1000, 20473, 964, 1234, 362, 682, -1000, 682, -1000, -1000,
	-1000, -1000, -1000, 355, -1000, 256, 20473, 417, 1201, -1000,
	20473, 20473, 20473, 20473, 20473, 259, 102, 20473, 20473, 916,
	-1000, 20473, 5673, -1000, -1000, -1000, -1000, -1000, -1000, 577,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 479, 20473,
	20473, 20473, -1000, -1000, 479, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 20473, -1000, 698, 20473, 20473, -1000, -1000,
	-1000, -1000, -1000, 577, 405, 409, 397, -1000, -1000, 633,
	-1000, -1000, 1836, -1000, -1000, -1000, -1000, 658, 12124, 12124,
	12124, 490, 1836, 1821, 795, 734, 294, 523, 523, 286,
	286, 286, 286, 286, 586, 586, -1000, -1000, -1000, 706,
	-1000, -1000, -1000, 706, 9735, 9735, 914, 855, 250, -1000,
	999, -1000, -1000, 1270, 868, 868, 574, 628, 458, 1308,
	868, 391, 1300, 868, 868, 9735, -1000, -1000, 471, -1000,
	11332, 706, -1000, 505, 912, 910, 868, 706, 706, 868,
	868, 20473, -1000, -301, -1000, -132, 284, 855, -1000, 17298,
	-1000, -1000, 1210, -1000, -1000, 1172, -1000, 1119, 11332, 11332,
	11332, -1000, -1000, -1000, 1210, 1285, -1000, 1129, 1128, 1297,
	9735, 16902, 1258, -1000, -1000, -1000, 246, 1297, 936, 855,
	-1000, 20473, 16902, 16902, 16902, 16902, 16902, -1000, 1100, 1094,
	-1000, 1090, 1079, 1099, 20473, -1000, 878, 869, 14922, 113,
	907, 16902, 20473, -1000, -1000, 16902, 20473, 6086, -1000, 905,
	-107, -101, -1000, -1000, -1000, -1000, 577, -1000, 827, 900,
	4434, -1000, -1000, -1000, -1000, 175, -1000, -1000, -1000, -1000,
	1218, -1000, 493, -72, -1000, -1000, -11, -11, -1000, -1000,
	281, 1200, 281, 281, 281, 692, 692, -1000, -1000, -1000,
	-1000, -1000, 579, -1000, -1000, -1000, 565, -1000, -1000, 567,
	1059, 58, -1000, -1000, 417, 691, 1186, 20473, -1000, -1000,
	758, 208, 53, 80, -1000, -1000, -1000, -1000, 1042, -1000,
	794, -1000, -1000, 875, -1000, 49, 20473, -1000, 871, 20473,
	-1000, 682, -1000, -1000, 1217, 1205, 6912, 51, 769, 769,
	960, -1000, -1000, -1000, -1000, 30, 105, 99, 193, -1000,
	5673, -1000, -1000, -1000, -1000, 469, -1000, 469, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 490, 1836, 1476, -1000, 12124,
	12124, -1000, -1000, 868, 868, 9735, 6912, 1275, 1210, -1000,
	-1000, 347, 769, 347, 12124, 12124, -1000, 12124, 12124, -1000,
	-183, 880, 447, -1000, 11332, 491, -1000, -1000, 12124, 12124,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 214,
	210, 207, 20473, -1000, -1000, 629, 683, 1117, 577, 577,
	-1000, -1000, 20473, -1000, -1000, -1000, -1000, 1288, 11332, -1000,
	895, -1000, 5260, 1270, 1041, 20473, 855, 1343, 13721, 20473,
	873, -1000, 430, 1350, 1021, 1040, 1105, -1000, -1000, -1000,
	-1000, 1087, -1000, 1056, -1000, -1000, -1000, -1000, -1000, 869,
	1297, 16902, 832, -1000, 832, -1000, 244, -1000, -1000, -1000,
	-124, -137, -1000, -1000, -1000, 4847, -1000, 4847, -1000, 1036,
	12124, -1000, -1000, -1000, 281, 281, -1000, 335, -1000, -1000,
	-1000, 865, -1000, 863, 859, 835, 21, -1000, 1009, 1197,
	417, 417, -1000, 564, -1000, 682, -1000, -1000, 20473, 64,
	-1000, 963, 703, -1000, 20473, -1000, -1000, 20473, -1000, -1000,
	20473, -1000, 58, 824, -1000, -1000, -1000, 804, -1000, 49,
	285, 281, -184, 682, 20473, 20473, 20473, -1000, 20473, -1000,
	479, 479, -1000, 12124, 1836, 1836, -1000, -1000, 706, -1000,
	1270, -1000, 706, 958, 958, -1000, 958, 959, -1000, 958,
	20, 958, 16, 706, 706, 1739, 1700, 1375, 693, 855,
	-175, -1000, 577, 11332, 1195, 995, 855, 855, 855, 766,
	-1000, 676, -11, -1000, -1000, -1000, 1294, 1290, 577, -1000,
	-1000, -1000, 1237, 903, 779, -1000, -1000, 9339, 777, 1127,
	239, 766, 1275, 20473, 11332, -1000, -1000, 11332, 957, -1000,
	11332, -1000, -1000, -1000, 1275, 1275, 832, -1000, -1000, 340,
	-1000, -1000, -1000, 4434, -1000, -39, 1334, 1836, -1000, -1000,
	-1000, -1000, -11, 675, -11, 560, -1000, 556, -1000, -1000,
	-232, -1000, -1000, 1066, 1065, -1000, -1000, 956, -1000, -1000,
	-1000, 733, -1000, -1000, -1000, -1000, -1000, 125, 20473, -1000,
	-1000, -1000, 417, -1000, -1000, 6912, -1000, -1000, 951, 1017,
	-1000, -1000, -1000, -1000, 1836, -1000, 1210, -1000, -1000, 177,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12124, 12124,
	12124, 12124, 12124, 1270, 669, 577, 12124, 12124, 16506, 20473,
	20473, 14513, 20473, -11, -57, -1000, 11332, 11332, 1231, -1000,
	855, -1000, 1024, 20473, 855, 20473, -1000, 1270, -1000, 577,
	577, 20473, 577, 1270, -1000, 332, -1000, -129, 281, -1000,
	281, 720, 718, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1263, 20473, -1000, 20473, -1000, 714, 820, -1000, 414,
	20473, 20473, -1000, -1000, -1000, 505, 505, 505, 505, 83,
	706, -1000, 505, 505, 755, -1000, 755, 755, 284, -1000,
	-288, -1000, 1175, 1169, 577, 801, 1332, -1000, 855, 1343,
	233, 779, -1000, -1000, 751, -1000, 511, 1229, -1000, 1226,
	-1000, -1000, -1000, -1000, -1000, 897, 731, 805, -1000, -1000,
	6912, 4847, 727, -1000, -1000, -1000, -1000, -1000, 706, 77,
	-188, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -57, 227,
	-1000, 1141, 1139, 1289, 20473, 779, 20473, -1000, -1000, 668,
	-1000, -1000, 142, -1000, 20473, -1000, -1000, 960, -1000, 1108,
	-182, -193, 1147, 1149, 1149, 1169, 1287, 1167, 1156, -1000,
	652, 735, -1000, -1000, -1000, -84, 723, -184, -1000, 1039,
	-1000, 1144, 626, -1000, -1000, -1000, -1000, 650, -1000, 1276,
	1265, -1000, 162, -1000, -1000, 1035, -1000, -185, -1000, 606,
	-1000, -1000, -1000, 622, 619, 71, 1003, -1000, 1304, -189,
	-1000, -1000, -1000, -1000, -1000, -1000, 1329, 300, 300, -196,
	-1000, -1000, -1000, 148, 661, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1677, 1675, 25, 79, 78, 1673, 1671, 1670, 1668,
	128, 127, 126, 1667, 1658, 1657, 1656, 1655, 1654, 1653,
	1652, 1651, 1650, 1648, 1646, 110, 1645, 1644, 1639, 1637,
	1634, 103, 102, 544, 1633, 105, 1632, 1631, 1630, 1629,
	1628, 1627, 1625, 1623, 1621, 1620, 1618, 1616, 122, 1615,
	1602, 1599, 1598, 1596, 1594, 1593, 1592, 1591, 1590, 1589,
	95, 1588, 43, 282, 55, 65, 1586, 72, 1585, 1580,
	1579, 1578, 1577, 329, 1576, 37, 71, 66, 1573, 40,
	1556, 1547, 106, 1544, 1542, 62, 1540, 1538, 2674, 1537,
	68, 73, 22, 20, 1536, 1535, 1534, 1529, 36, 2495,
	1527, 1526, 12, 1523, 1522, 116, 1519, 81, 18, 13,
	14, 10, 1518, 80, 1514, 11, 48, 31, 1498, 76,
	1491, 1487, 1484, 1483, 19, 1482, 67, 86, 138, 1481,
	6, 9, 1480, 1479, 1477, 1476, 1471, 1468, 4, 1467,
	1465, 1464, 1463, 35, 1462, 5, 1461, 61, 46, 27,
	8, 1458, 1457, 23, 99, 63, 96, 1456, 1453, 1451,
	732, 1450, 45, 1449, 135, 1444, 44, 1442, 494, 610,
	1440, 1439, 1439, 1439, 1439, 69, 1028, 2021, 16, 100,
	1437, 1435, 1930, 57, 70, 21, 1434, 1433, 1432, 108,
	49, 41, 758, 38, 1431, 1428, 1427, 1426, 1423, 1420,
	1417, 121, 1406, 1405, 1403, 29, 28, 1402, 97, 30,
	1401, 1398, 1397, 1396, 56, 39, 1394, 98, 90, 59,
	87, 1392, 101, 75, 64, 1390, 24, 1389, 1385, 1381,
	1380, 34, 17, 1378, 85, 77, 54, 33, 42, 89,
	1372, 32, 1370, 1368, 84, 83, 1368, 1368, 1368, 15,
	1367, 3, 0, 1365, 7, 107, 1365, 1213, 554, 1,
	1364, 2, 1362, 1359, 74, 1358, 1355, 1351, 1350, 2699,
	609, 94, 1349, 109,
}

var yyR1 = [...]int{
	0, 267, 268, 268, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 252, 252, 252, 255, 255, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	271, 271, 82, 82, 83, 83, 147, 147, 13, 14,
	14, 156, 156, 155, 155, 155, 157, 157, 157, 157,
	192, 192, 15, 15, 15, 15, 15, 61, 61, 254,
	254, 253, 251, 251, 250, 250, 249, 23, 24, 28,
	29, 30, 257, 257, 227, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 229, 229, 216,
	216, 228, 228, 228, 228, 228, 228, 228, 215, 194,
	194, 194, 194, 197, 197, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 196, 196, 196, 196, 196, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 214, 214, 201,
	201, 208, 208, 209, 209, 209, 211, 211, 212, 212,
	170, 170, 170, 203, 203, 204, 204, 210, 210, 205,
	205, 205, 206, 206, 206, 207, 207, 207, 213, 213,
	213, 213, 213, 202, 202, 217, 241, 241, 240, 240,
	236, 236, 236, 236, 226, 226, 233, 233, 233, 233,
	233, 225, 225, 221, 221, 221, 222, 222, 223, 223,
	220, 220, 224, 224, 235, 235, 234, 218, 218, 219,
	219, 244, 244, 244, 244, 245, 260, 261, 259, 259,
	259, 259, 259, 171, 171, 171, 230, 230, 230, 231,
	231, 231, 232, 232, 232, 258, 258, 116, 116, 117,
	117, 27, 27, 26, 26, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 256, 256, 256, 256, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 248, 246,
	246, 247, 247, 17, 22, 22, 18, 18, 18, 18,
	19, 19, 36, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	163, 163, 262, 262, 165, 165, 161, 161, 164, 164,
	162, 162, 162, 166, 166, 166, 167, 167, 266, 266,
	266, 38, 38, 40, 40, 41, 42, 42, 187, 187,
	188, 188, 43, 44, 53, 53, 53, 53, 53, 53,
	55, 55, 55, 7, 7, 7, 7, 50, 50, 50,
	6, 6, 39, 39, 46, 263, 263, 264, 265, 265,
	265, 265, 47, 20, 272, 48, 49, 49, 60, 60,
	60, 56, 56, 56, 59, 59, 59, 64, 64, 66,
	66, 66, 66, 66, 67, 67, 67, 67, 67, 67,
	63, 63, 65, 65, 65, 65, 180, 180, 180, 179,
	179, 74, 74, 75, 75, 76, 76, 77, 77, 77,
	114, 91, 91, 146, 146, 145, 145, 148, 148, 78,
	78, 78, 78, 79, 79, 80, 80, 81, 81, 186,
	186, 185, 185, 185, 184, 184, 84, 84, 84, 86,
	85, 85, 85, 85, 87, 87, 89, 89, 88, 88,
	90, 92, 92, 92, 92, 92, 93, 93, 73, 73,
	73, 73, 73, 73, 73, 73, 159, 159, 95, 95,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	106, 106, 106, 106, 106, 106, 96, 96, 96, 96,
	96, 96, 96, 62, 62, 107, 107, 107, 113, 108,
	108, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 103, 103, 103, 103, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 273, 273,
	105, 104, 104, 104, 104, 104, 104, 104, 58, 58,
	58, 58, 58, 191, 191, 193, 193, 193, 193, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 120, 120,
	57, 57, 118, 118, 119, 121, 121, 115, 115, 115,
	98, 98, 98, 98, 98, 98, 98, 98, 100, 100,
	100, 122, 122, 123, 123, 124, 124, 125, 125, 126,
	127, 127, 127, 128, 128, 128, 128, 242, 242, 242,
	242, 242, 237, 237, 237, 237, 238, 238, 238, 68,
	68, 68, 68, 70, 70, 69, 69, 51, 51, 52,
	52, 52, 71, 71, 72, 72, 72, 72, 143, 143,
	143, 129, 129, 129, 129, 134, 134, 134, 130, 130,
	132, 132, 132, 133, 133, 133, 131, 137, 137, 139,
	139, 138, 138, 136, 136, 141, 141, 140, 140, 135,
	135, 97, 97, 97, 97, 97, 144, 144, 144, 144,
	149, 149, 109, 109, 111, 111, 110, 112, 150, 150,
	153, 151, 151, 154, 154, 154, 154, 154, 152, 152,
	152, 181, 181, 181, 158, 158, 168, 168, 169, 169,
	160, 160, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 173, 173, 173, 174, 174, 142, 142, 142,
	142, 243, 243, 239, 177, 177, 178, 178, 182, 182,
	183, 183, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	269, 270, 189, 190, 190, 190,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 3, 3, 0, 2,
	1, 2, 1, 0, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 1, 0, 2, 0,
	2, 0, 1, 1, 3, 2, 2, 2, 5, 5,
	3, 3, 3, 5, 6, 6, 6, 6, 2, 2,
	2, 2, 2, 4, 3, 6, 7, 5, 5, 5,
	12, 7, 5, 9, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 7, 1,
	3, 8, 8, 3, 3, 5, 4, 6, 5, 4,
	3, 2, 3, 4, 3, 3, 3, 3, 3, 3,
	4, 2, 4, 4, 4, 4, 4, 5, 7, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 7,
	2, 4, 5, 4, 3, 3, 5, 2, 3, 3,
	1, 1, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 2, 1, 3, 1, 1, 1, 3, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 5, 4, 5, 5, 0, 2, 1, 3,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 4, 5, 5, 6, 4,
	4, 6, 6, 6, 8, 8, 8, 8, 9, 8,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 0, 2,
	4, 0, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 3, 0,
	3, 0, 3, 0, 4, 0, 3, 0, 4, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 2, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -267, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -269, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 151, -29, -24, 152, -30, 154, 153, 188,
	155, 181, 70, 216, 217, 219, 220, 221, 222, -55,
	186, 187, 157, 35, 41, 32, 33, 80, 9, 314,
	183, 182, 26, -268, 418, -60, 5, -124, 16, -3,
	-48, -272, -48, -48, -48, -48, -48, -48, -227, -229,
	80, 124, 80, -61, 160, -142, -257, 105, 166, 169,
	170, 305, 159, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 156, 76, 152, 158, -35, 315, 103, 102,
	100, 101, 160, -257, 162, 276, -255, -252, 83, 84,
	85, 160, 160, 161, 162, -257, 160, -88, -182, -252,
	-176, 324, 174, 356, 357, 215, 76, 266, 216, 230,
	224, 251, 243, 325, 358, 175, 204, 241, 244, 292,
	359, 288, 271, 279, 94, 219, 301, 360, 75, 47,
	40, 184, 239, 235, 205, 361, 333, 198, 103, 100,
	233, 46, 28, 102, 45, 362, 281, 256, 44, 363,
	79, 329, 283, 234, 280, 214, 157, 364, 412, 290,
	365, 257, 261, 366, 293, 48, 367, 368, 101, 369,
	74, 228, 229, 370, 212, 173, 295, 255, 171, 34,
	284, 326, 54, 192, 296, 42, 259, 41, 416, 371,
	254, 250, 49, 372, 373, 374, 375, 253, 227, 249,
	210, 58, 263, 262, 264, 199, 291, 246, 376, 377,
	378, 178, 77, 379, 236, 19, 380, 381, 206, 382,
	52, 383, 384, 299, 187, 385, 50, 37, 190, 386,
	387, 388, 389, 390, 289, 391, 282, 258, 260, 194,
	278, 328, 392, 232, 393, 179, 191, 186, 300, 180,
	394, 395, 396, 397, 398, 399, 400, 220, 39, 401,
	402, 403, 404, 213, 209, 294, 303, 57, 78, 268,
	405, 226, 207, 406, 217, 51, 201, 274, 104, 211,
	43, 247, 193, 407, 408, 237, 238, 252, 225, 248,
	218, 413, 195, 188, 409, 302, 208, 269, 330, 200,
	245, 242, 202, 410, 162, 196, 197, 411, 414, 285,
	275, 286, 287, 276, 203, 240, 270, 160, 244, 292,
	271, 272, 273, 284, 285, 290, 289, 194, -266, 293,
	160, -161, 142, 151, 281, -165, 282, 275, 276, 203,
	-262, -252, 294, 416, 277, 283, 287, 286, -182, 218,
	-187, 223, -177, -252, -176, 221, -88, -53, 412, 155,
	-189, -189, -189, -108, -73, -94, 108, -99, 30, 24,
	-98, -95, -115, -112, -113, 142, 143, 145, 144, 146,
	131, 132, 139, 109, 147, -103, -101, -102, -104, 87,
	86, 95, 88, 89, 90, 91, 96, 97, 98, -177,
	-182, -110, -269, 64, 65, 315, 316, 317, 318, 323,
	319, 111, 53, 304, 313, 312, 311, 308, 309, 306,
	307, 321, 322, 165, 305, 159, 137, 314, -252, -176,
	40, 274, 274, -5, -4, -269, 6, 21, 22, -128,
	18, 17, -270, 82, -56, -66, 59, 60, -67, 22,
	36, 63, 61, -49, -65, 133, -73, -182, -65, -160,
	164, -160, -160, -151, -192, 218, -154, 294, 293, -178,
	-152, -177, -175, 292, 244, 291, 156, 331, 107, 23,
	25, 110, 142, 17, 111, 158, 172, 141, 168, 315,
	151, 68, 332, 306, 307, 304, 310, 317, 318, 305,
	272, 30, 11, 334, 26, 182, 22, 36, 135, 153,
	114, 115, 185, 24, 183, 98, 337, 20, 71, 177,
	12, 170, 14, 338, 339, 15, 165, 164, 126, 161,
	66, 9, 147, 27, 123, 62, 340, 29, 341, 342,
	343, 344, 64, 124, 18, 308, 309, 32, 417, 345,
	323, 189, 137, 69, 55, 108, 346, 347, 96, 348,
	99, 72, 105, 16, 67, 38, 349, 350, 167, 351,
	297, 352, 125, 154, 314, 65, 353, 159, 273, 6,
	320, 31, 181, 169, 63, 354, 160, 113, 321, 322,
	163, 97, 5, 166, 33, 10, 70, 73, 311, 312,
	313, 53, 327, 112, 13, 355, 298, 106, -228, 124,
	-215, -219, -177, 176, -245, 172, -88, -235, -234, -177,
	-68, 76, -169, 165, 161, -169, 314, -31, -32, 244,
	141, 81, -219, -218, -217, -258, 176, -244, -233, 168,
	177, -225, 169, 170, -220, 161, 29, -226, 116, -258,
	-258, 244, 163, 34, 34, 104, 104, -88, -88, 151,
	153, 156, 72, -33, 200, -22, -88, -168, 165, -252,
	-168, -168, -88, 148, -88, 31, -166, 124, 13, -166,
	-166, -166, -166, -166, 201, 288, 201, 288, 201, 202,
	201, 202, 201, -164, -163, 279, 280, 274, 278, -252,
	305, 290, -252, 194, 160, 195, 162, -221, 161, 34,
	173, 202, 274, 197, -166, -190, -269, -178, 163, -177,
	-50, -177, 87, -7, -3, -11, -10, -12, 116, 81,
	107, 105, 106, 123, -73, -96, 126, 108, 124, 125,
	110, 128, 127, 138, 131, 132, 133, 134, 135, 136,
	137, 129, 130, 141, 116, 117, 118, 119, 120, 121,
	122, -159, -269, -113, -269, 149, 150, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -269, 148, -2,
	-108, -4, -269, -269, -269, -269, -269, -269, -269, -269,
	-120, -73, -269, -273, -105, -269, -273, -105, -273, -105,
	-273, -269, -273, -105, -273, -105, -273, -273, -105, -269,
	-269, -269, -269, -269, -269, -269, -189, -263, -264, -91,
	-88, -124, -3, -48, -143, 20, 32, -73, -125, -126,
	-73, -124, 55, -63, -65, -67, 59, 60, 93, 12,
	-180, -179, 23, -177, 87, 148, 12, -89, 27, -88,
	-75, -76, -77, -78, -91, -114, -269, 12, -82, -83,
	-88, -90, -182, 81, 218, -154, -192, -156, -155, 295,
	297, 116, -181, -177, 87, 30, 31, 82, 81, -88,
	-194, -197, -199, -198, -200, -195, -196, 241, 242, 142,
	245, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 31, 184, 237, 238, 239, 240, 257, 258, 259,
	260, 261, 262, 263, 264, 224, 243, 325, 225, 226,
	227, 228, 229, 230, 232, 233, 234, 235, 236, -255,
	-252, 80, 82, 81, -201, 80, -71, 205, 116, -88,
	108, -252, -252, 31, -226, -25, 80, -215, -224, -255,
	-252, 80, 29, 167, 166, -223, -220, -223, -224, -252,
	30, 74, 75, -115, -177, -182, -115, 31, 244, -190,
	196, 196, 160, 160, 209, -88, 40, 81, 163, -82,
	24, 72, -88, -252, -183, -182, -175, -166, 87, -73,
	-166, -88, -166, -88, -166, -166, -166, -166, -162, 12,
	126, -222, 12, 126, -162, -190, -190, -88, -190, -190,
	-88, -190, -190, -222, -167, 124, 72, -188, 221, 255,
	413, 414, 415, -73, -73, -73, -73, -106, 96, 108,
	97, 98, -99, -107, -110, -113, 92, 126, 124, 125,
	110, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -191, -252, 87, -252,
	-98, -98, -177, -64, 22, 36, -63, -178, -183, -175,
	-60, -270, -270, -124, -63, -63, -73, -73, -115, 87,
	-63, -115, 87, -63, -63, -59, 22, 36, -118, -119,
	112, -115, -270, -99, -177, -177, -63, -64, -64, -63,
	-63, 81, -265, 297, 298, 417, -185, 190, -184, 23,
	-182, 87, -128, -270, -129, 27, 10, 126, 81, 19,
	81, -127, 25, 26, -128, -100, -177, 88, 91, -74,
	81, 12, -67, -88, -179, 133, -183, -88, -147, 190,
	-88, 31, 81, -84, -86, -85, -87, 62, 66, 68,
	63, 64, 65, 69, -186, 23, -75, -3, -269, -88,
	-82, -271, 81, 12, 73, -271, 81, 148, -154, -156,
	81, 296, 298, 299, 72, 99, -73, -206, 141, -230,
	-231, -232, -178, 87, 88, -215, -217, -218, -219, 82,
	-170, 96, 108, -211, 269, -201, -201, -201, -201, -201,
	-205, 244, -205, -205, -205, 80, 80, -201, -201, -201,
	-201, -208, 80, -208, -208, -209, 80, -209, -245, -73,
	-241, -240, -236, -239, 171, 94, 327, 73, -234, -127,
	88, -70, 207, 116, 208, 210, 211, 24, -243, -239,
	-226, -252, 87, -216, -215, -116, 214, -244, -235, 80,
	29, -223, -224, -224, 153, 31, 148, -215, -226, 31,
	-88, -88, -88, -88, -88, 156, 153, 198, -88, -88,
	-88, -190, -166, -182, -182, -88, -166, -88, 87, -88,
	-177, 96, 97, 98, -107, -99, -99, -99, -62, 185,
	107, -270, -270, -63, -63, -269, 148, -5, -128, -270,
	-270, 81, 73, 23, 12, 12, -270, 12, 12, -270,
	-270, -63, -121, -119, 114, -73, -270, -270, 81, 81,
	-270, -270, -270, -270, -270, -264, 416, 298, -92, 70,
	164, 71, -269, -184, -143, 38, 46, 57, -73, -73,
	-126, -143, -158, 20, 12, 53, 53, -93, 13, -65,
	-75, -67, 148, -93, -97, 31, 53, -3, -269, -269,
	-150, -153, -115, -76, -77, -77, -76, -77, 62, 62,
	62, 67, 62, 67, 62, -85, -182, -270, -270, -3,
	-147, 73, -75, -88, -75, -90, -182, 133, -155, -157,
	300, 297, 303, -252, 87, 81, -232, 116, -219, -203,
	30, 96, -212, 270, -205, -205, -206, 31, -206, -206,
	-206, -214, 87, -214, 88, 88, 82, -242, -237, -238,
	32, 76, -236, -226, 87, 37, -177, 82, 162, 213,
	-72, 310, 87, 83, 72, -252, 87, 81, 82, -117,
	215, -115, 82, -145, -177, -224, 30, 30, -178, -116,
	-191, -191, -254, 73, 196, 266, 196, 199, 163, -190,
	-162, -162, -62, 107, -99, -99, -270, -270, -64, -178,
	-124, -143, -193, 142, 241, 184, 239, 235, 255, 246,
	268, 237, 269, -191, -193, -99, -99, -99, -99, 324,
	-124, 115, -73, 113, -99, -99, 161, 161, 161, -148,
	-177, 39, 87, 87, 58, -88, -122, 14, -73, 133,
	-128, -149, 72, -150, -109, -111, -110, -269, -144, -270,
	-177, -148, -93, 81, 116, -80, -79, 72, 73, -81,
	72, -79, 62, 62, -270, -93, -75, -93, -93, 148,
	297, 301, 302, -231, -232, -204, 72, -99, -206, -206,
	-252, 142, 82, 81, 82, 81, 82, 81, -171, 362,
	108, -238, -237, -226, -226, 88, -252, -88, -69, 205,
	212, 80, 84, -88, -215, -115, -241, 82, 81, -98,
	-117, -207, 141, -206, -251, 327, -253, -252, -177, -177,
	-177, -88, -166, -166, -99, -270, -128, -270, -201, -201,
	-201, -209, -201, 229, -201, 229, -270, -270, 20, 20,
	20, 20, -269, -57, 320, -73, 81, 81, -269, -269,
	-269, -270, 81, 87, -205, -123, 15, 17, 28, -149,
	81, -270, -270, 81, 53, 148, -270, -124, -153, -73,
	-73, 80, -73, -124, -93, -210, 266, 10, -205, 87,
	-205, 88, 88, 362, 30, 77, 78, 79, 30, 74,
	75, -146, 80, 82, 179, -177, -226, -250, -249, -178,
	80, 73, -143, -205, -252, -99, -99, -99, -99, -99,
	-128, 87, -99, -99, -145, -270, -145, -145, -185, -177,
	-205, -131, -136, -164, -73, -108, 29, -111, 53, -3,
	-177, -109, -177, -128, -145, -128, -213, 167, 29, 166,
	-102, -206, -206, 82, 82, 23, -145, -88, -252, 87,
	81, 116, -145, -88, -270, -270, -270, -270, -58, 126,
	327, -270, -270, -270, -270, -270, -270, -92, -134, 412,
	-137, 42, -138, 43, 10, -109, 148, 82, -202, 94,
	29, 29, -3, 82, 80, -249, -232, 82, -270, 325,
	69, 328, -131, 47, 247, -139, 51, -140, -135, 52,
	17, -150, -177, 87, -51, 327, -145, -254, 58, 326,
	329, -132, 49, -130, 48, -130, -138, 17, -141, 44,
	45, 87, -52, 204, 416, 82, -251, 58, -133, 50,
	72, 99, 87, 17, 17, 172, -260, -261, 72, 327,
	72, 99, 87, 87, 206, -261, 72, 11, 10, 328,
	-259, 180, 175, 178, 31, -259, 329, 174, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 705, 0, 444, 444, 444, 444, 444, 444, 444,
	0, 0, -2, -2, -2, 0, 36, 0, 0, 0,
	0, -2, 402, 403, 0, 405, -2, 0, 0, 414,
	1202, 1202, 1202, 0, 0, 0, 0, 1200, 53, 54,
	420, 421, 422, 1, 3, 0, 448, 713, 0, 0,
	-2, 446, 0, 0, 820, 820, 820, 0, 82, 83,
	0, 0, 0, 729, 818, 0, 818, 0, 838, 839,
	840, 102, 103, 86, -2, 107, 108, 0, 112, 302,
	282, 283, -2, 224, 275, 275, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 0, 111, 37, 33, 34,
	35, 0, 816, 0, 816, 816, 0, 341, 528, 848,
	849, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
	1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
	1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
	1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 0, 0, 393,
	393, 393, 393, 393, 393, 0, 351, 0, 0, 0,
	0, 0, 0, 0, 367, 0, 370, 0, 0, 377,
	393, 1203, 399, 400, 387, 385, 382, 383, 401, 404,
	0, 409, 412, 844, 845, 0, 427, 0, 1041, 419,
	432, 433, 443, 38, 579, 538, 0, 544, 546, 0,
	581, 582, 583, 584, 585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 612, 613, 614, 690,
	691, 692, 693, 694, 695, 696, 697, 548, 549, 687,
	0, 797, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 678, 0, 648, 648, 648, 648, 648, 648, 648,
	648, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	1202, 0, 442, 705, 49, 0, 444, 449, 450, 748,
	0, 0, 705, 1201, 0, 0, -2, -2, 460, 466,
	467, 468, 469, 445, 0, 472, 476, 0, 0, 0,
	821, 0, 0, 68, 0, 1173, 801, -2, -2, 0,
	0, 846, 847, -2, 1001, -2, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 917, 918, 919, 920, 921, 922, 923, 924, 925,
	926, 927, 928, 929, 930, 931, 932, 933, 934, 935,
	936, 937, 938, 939, 940, 941, 942, 943, 944, 945,
	946, 947, 948, 949, 950, 951, 952, 953, 954, 955,
	956, 957, 958, 959, 960, 961, 962, 963, 964, 965,
	966, 967, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 0, 0,
	121, 122, 0, 36, 250, 0, 117, 0, 244, 179,
	742, 0, 0, 0, 0, 0, 88, 109, 110, 0,
	224, 111, 285, 286, 287, 0, -2, 248, 0, 276,
	0, 0, 238, 238, 242, 240, 241, 0, 225, 0,
	0, 0, 0, 298, 299, 300, 301, 98, 1203, 0,
	0, 0, 0, -2, 0, 333, 0, 0, 0, 0,
	0, 0, 340, 0, 342, 393, 344, 0, 0, 345,
	346, 347, 348, 349, 393, 0, 393, 0, 393, 393,
	393, 393, 390, 0, 390, 388, 389, 380, 381, 1203,
	1203, 0, 1203, 1203, 0, 1203, 1203, 0, 233, 234,
	235, 396, 374, 375, 378, 379, 1204, 1205, 410, 413,
	430, 428, 429, 431, 423, 424, 425, 426, 0, 0,
	0, 0, 0, 0, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 566, 567, 568, 569, 570, 571,
	572, 545, 0, 559, 0, 0, 0, 601, 602, 603,
	604, 605, 606, 607, 608, 609, 0, 457, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 454,
	0, 679, 0, 632, 640, 0, 633, 641, 634, 642,
	635, 0, 636, 643, 637, 644, 638, 639, 645, 0,
	0, 0, 457, 457, 0, 0, 39, 434, 435, 0,
	511, 713, 0, 459, 751, 0, 0, 714, 706, 707,
	710, 713, 0, 481, 470, 461, 464, 465, 447, 0,
	473, 477, 0, 479, 480, 0, 0, 66, 0, 527,
	0, 483, 485, 486, 487, 509, 0, 0, 0, 0,
	62, 64, 528, 0, 1173, 807, 0, 70, 71, 0,
	0, 0, 202, 811, 812, 813, 809, 266, 231, 0,
	190, 186, 130, 131, 132, 179, 134, 179, 179, 179,
	179, 199, 199, 199, 199, 162, 163, 164, 165, 166,
	0, 0, 149, 179, 179, 179, 179, 169, 170, 171,
	172, 173, 174, 175, 176, 135, 136, 137, 138, 139,
	140, 141, 142, 143, 181, 181, 181, 183, 183, 0,
	37, 0, 216, 0, 710, 0, 733, 0, 0, 97,
	0, 841, 100, 224, 0, 284, 0, 277, 232, 0,
	-2, 0, 0, 0, 238, 242, 239, 242, 230, 243,
	290, 291, 292, 0, 687, 0, 0, 224, 0, 303,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 336,
	817, 0, 1203, 339, 529, 850, 851, 343, 394, 395,
	350, 368, 352, 371, 353, 355, 354, 356, 393, 0,
	0, 0, 236, 237, 393, 359, 360, 361, 362, 363,
	364, 365, 366, 0, 373, 0, 0, 0, 411, 415,
	416, 417, 418, 580, 539, 540, 541, 543, 560, 0,
	562, 564, 550, 551, 575, 576, 577, 0, 0, 0,
	0, 573, 555, 0, 586, 587, 588, 589, 590, 591,
	592, 593, 594, 595, 596, 597, 600, 663, 664, 0,
	598, 599, 610, 0, 0, 0, 458, 688, 0, -2,
	0, 578, 796, 713, 0, 0, 0, 0, 583, 690,
	0, 583, 690, 0, 0, 0, 455, 456, 685, 682,
	0, 0, 649, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 437, 438, 440, 0, 531, 1111, 512, 0,
	514, 515, 748, 50, 40, 0, 749, 0, 0, 0,
	0, 709, 711, 712, 748, 0, 698, 0, 0, 536,
	0, 0, 462, 46, 478, 474, 0, 536, 0, 0,
	526, 0, 0, 0, 0, 0, 0, 516, 0, 0,
	519, 0, 0, 0, 0, 510, 0, 0, 0, -2,
	0, 0, 0, 60, 61, 0, 0, 0, 802, 69,
	0, 0, 74, 75, 803, 804, 805, 806, 0, 104,
	267, 269, 272, 273, 274, 123, 125, 126, 127, 118,
	193, 191, 0, 188, 187, 133, 199, 199, 156, 157,
	202, 0, 202, 202, 202, 0, 0, 150, 151, 152,
	153, 144, 0, 145, 146, 147, 0, 148, 249, 0,
	717, 217, 218, 220, 224, 0, 0, 0, 245, 246,
	0, 0, 0, 0, 730, 731, 732, 819, 0, 842,
	0, 115, 116, 0, 119, 279, 0, 247, 0, 0,
	226, 242, 227, 228, 0, 0, 0, 277, 0, 0,
	89, 307, 309, 308, 312, 0, 0, 0, 0, 334,
	1203, 338, 357, 391, 392, 390, 372, 390, 397, 376,
	407, 561, 563, 565, 552, 573, 556, 0, 553, 0,
	0, 547, 615, 0, 0, 457, 0, 705, 748, 619,
	620, 0, 0, 0, 0, 0, 656, 0, 0, 657,
	0, 705, 0, 683, 0, 0, 631, 650, 0, 0,
	651, 652, 653, 654, 655, 436, 439, 441, 491, 0,
	0, 0, 0, 513, 42, 0, 0, 0, 715, 716,
	708, 41, 0, 814, 815, 699, 700, 701, 0, 471,
	482, 463, 0, 713, 790, 0, 0, 782, 0, 0,
	536, 798, 0, 484, 505, 507, 0, 502, 517, 518,
	520, 0, 522, 0, 524, 525, 488, 489, 490, 0,
	536, 0, 536, 63, 536, 65, 0, 530, 72, 73,
	0, 0, 79, 203, 204, 0, 270, 0, 124, 195,
	0, 192, 129, 189, 202, 202, 158, 0, 159, 160,
	161, 0, 177, 0, 0, 0, 263, 84, 721, 720,
	224, 224, 219, 0, 222, 0, 843, 180, 0, 0,
	743, 744, 0, 747, 0, 113, 114, 0, 288, 289,
	0, 278, 216, 0, 495, 229, 293, 0, 688, 279,
	205, 202, 92, 0, 0, 0, 0, 305, 0, 337,
	393, 393, 554, 0, 574, 557, 616, 617, 0, 689,
	713, 44, 0, 179, 179, 668, 179, 183, 671, 179,
	673, 179, 676, 0, 0, 0, 0, 0, 0, 0,
	680, 630, 686, 0, 0, 0, 0, 0, 0, 0,
	497, 0, 199, 753, 750, 43, 703, 0, 537, 475,
	47, 51, 0, 790, 781, 792, 794, 0, 0, 0,
	786, 0, 705, 0, 0, 499, 506, 0, 0, 500,
	0, 501, 521, 523, -2, 705, 536, 58, 59, 0,
	76, 77, 78, 268, 271, 197, 0, 194, 154, 155,
	200, 201, 199, 0, 199, 0, 184, 0, 255, 264,
	0, 718, 719, 0, 0, 221, 223, 493, 734, 735,
	736, 0, 746, 99, 120, 280, 215, 0, 0, 294,
	295, 296, 224, 297, 306, 0, 90, 91, 0, 0,
	311, 335, 358, 369, 558, 618, 748, 621, 665, 199,
	669, 670, 672, 674, 675, 677, 623, 622, 0, 0,
	0, 0, 0, 713, 0, 684, 0, 0, 0, 0,
	0, 511, 0, 199, 773, 48, 0, 0, 0, 52,
	0, 795, 0, 0, 0, 0, 67, 713, 799, 800,
	503, 0, 508, 713, 57, 208, 198, 0, 202, 178,
	202, 0, 0, 265, 722, 723, 724, 725, 726, 727,
	728, 0, 0, 745, 0, 496, 0, 93, 94, 0,
	0, 0, 45, 666, 667, 0, 0, 0, 0, 658,
	0, 681, 0, 0, 0, 533, 0, 0, 531, 498,
	755, 754, 767, 771, 704, 702, 0, 793, 0, 785,
	788, 784, 787, 55, 0, 56, 213, 0, 210, 212,
	196, 167, 168, 182, 185, 0, 0, 0, 206, 207,
	0, 0, 0, 313, 624, 626, 625, 627, 0, 0,
	0, 629, 646, 647, 532, 534, 535, 492, 773, 0,
	766, 769, -2, 0, 0, 783, 0, 504, 128, 0,
	209, 211, 737, 494, 0, 95, 96, 89, 628, 0,
	0, 0, 760, 758, 758, 771, 0, 775, 0, 780,
	0, 791, 789, 214, 85, 739, 0, 92, 659, 0,
	662, 763, 0, 756, 759, 757, 768, 0, 774, 0,
	0, 772, 0, 740, 741, 251, 310, 660, 752, 0,
	761, 762, 770, 0, 0, 0, 252, 253, 0, 0,
	764, 765, 776, 778, 738, 254, 0, 0, 0, 0,
	256, 258, 259, 0, 0, 257, 661, 260, 261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 109, 3, 3, 3, 136, 128, 3,
	80, 82, 133, 131, 81, 132, 148, 134, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 418,
	117, 116, 118, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 139,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 110, 111, 112, 113, 114, 115,
	119, 120, 121, 122, 123, 124, 125, 126, 129, 130,
	135, 137, 140, 141, 142, 143, 144, 145, 146, 147,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:398
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:403
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:404
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:408
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:439
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:445
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:449
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:458
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:468
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:474
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:480
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:489
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:493
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:497
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:520
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:534
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:540
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:558
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:565
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:577
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:605
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:609
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:613
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:650
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:662
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:666
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:686
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:690
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:700
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:730
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:737
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:745
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:756
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:765
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:775
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:780
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:785
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:802
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:808
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:822
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:829
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:847
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:871
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:875
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:890
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:894
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:900
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:904
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:915
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:921
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:945
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:958
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:964
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:975
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1209
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1217
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1227
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1235
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1239
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1267
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1276
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1307
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1333
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.colKeyOpt = colKey
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.literal = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1364
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1373
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1430
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1546
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1550
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1562
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1595
		{
			yyVAL.boolean = true
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.boolean = true
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.boolean = false
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = yyDollar[1].str
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1651
		{
			yyVAL.bytes = []byte("")
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1657
		{
			yyVAL.colName = nil
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1666
		{
			yyVAL.colName = nil
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1675
		{
			yyVAL.alterOptions = nil
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1711
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1723
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1727
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1731
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1735
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1739
		{
			yyVAL.alterOption = &AlterCharset{IsDefault: true, CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1743
		{
			yyVAL.alterOption = &AlterCharset{IsDefault: false, CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1765
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1797
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1801
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1808
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 306:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1815
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1837
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1841
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 310:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1845
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 311:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1858
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1868
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1872
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 328:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1901
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 331:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1917
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 332:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1921
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1937
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 336:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1949
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1954
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1958
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1964
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statement = &OtherRead{}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1979
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1987
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1991
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2007
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2015
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2019
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2027
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2031
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2035
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 358:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2039
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2043
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2056
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2060
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2064
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2068
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2072
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2084
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2089
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2093
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2097
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2107
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2120
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2129
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2159
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2173
		{
			yyVAL.str = "extended "
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.str = "full "
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2213
		{
			yyVAL.showFilter = nil
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2217
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2227
		{
			yyVAL.showFilter = nil
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2237
		{
			yyVAL.empty = struct{}{}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2241
		{
			yyVAL.empty = struct{}{}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.empty = struct{}{}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2251
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.statement = &Begin{}
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2265
		{
			yyVAL.statement = &Begin{}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.statement = &Commit{}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.statement = &Rollback{}
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2281
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2286
		{
			yyVAL.empty = struct{}{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2288
		{
			yyVAL.empty = struct{}{}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2291
		{
			yyVAL.empty = struct{}{}
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.empty = struct{}{}
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2304
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2309
		{
			yyVAL.explainType = EmptyType
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2313
		{
			yyVAL.explainType = JSONType
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yyVAL.explainType = TreeType
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.explainType = VitessType
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2325
		{
			yyVAL.explainType = TraditionalType
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.explainType = AnalyzeType
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = ""
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = ""
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &OtherRead{}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2390
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2394
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2410
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.lockType = Read
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			yyVAL.lockType = ReadLocal
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.lockType = Write
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2440
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2446
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2450
		{
			setAllowComments(yylex, true)
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2460
		{
			yyVAL.bytes2 = nil
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.boolean = true
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2474
		{
			yyVAL.boolean = false
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.boolean = true
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2483
		{
			yyVAL.str = ""
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2487
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = SQLCacheStr
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2496
		{
			yyVAL.boolean = false
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2500
		{
			yyVAL.boolean = true
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.boolean = true
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2509
		{
			yyVAL.selectExprs = nil
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2513
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2518
		{
			yyVAL.strs = nil
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2522
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2526
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2530
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2534
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = SQLCacheStr
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = DistinctStr
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.str = DistinctStr
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = StraightJoinHint
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2570
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2588
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2593
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2608
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2613
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2627
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2637
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2661
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2666
		{
			yyVAL.columns = nil
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2670
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2690
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2703
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2707
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2711
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2715
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2727
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2733
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2735
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2738
		{
			yyVAL.empty = struct{}{}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2740
		{
			yyVAL.empty = struct{}{}
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.joinType = NormalJoinType
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.joinType = NormalJoinType
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2772
		{
			yyVAL.joinType = NormalJoinType
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2778
		{
			yyVAL.joinType = StraightJoinType
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.joinType = LeftJoinType
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2788
		{
			yyVAL.joinType = LeftJoinType
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.joinType = RightJoinType
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2796
		{
			yyVAL.joinType = RightJoinType
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2802
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2836
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2841
		{
			yyVAL.indexHints = nil
		}
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2845
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2849
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 534:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2853
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 535:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2857
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2862
		{
			yyVAL.expr = nil
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2888
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2892
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = ""
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2916
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2926
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2930
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2934
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2938
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2942
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2946
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2950
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2954
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2958
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2962
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2968
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2972
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2994
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3018
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = nil
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3033
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3047
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3079
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3139
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3151
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3185
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3189
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 618:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3223
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3237
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 621:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3241
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3245
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3249
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 624:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 625:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3257
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 626:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3261
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 627:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3265
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 628:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 630:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3277
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3281
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3309
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3334
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3338
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3348
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3353
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 646:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3357
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 647:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3361
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3371
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3381
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3385
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3389
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3393
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3411
		{
			yyVAL.matchExprOption = NoOption
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3419
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 661:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3423
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3433
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3437
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3443
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3463
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3473
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3481
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3485
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3493
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3498
		{
			yyVAL.expr = nil
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = string("")
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3517
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3521
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3527
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3532
		{
			yyVAL.expr = nil
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3536
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3542
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 689:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3550
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3556
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3560
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3564
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3568
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = &NullVal{}
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3590
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3608
		{
			yyVAL.exprs = nil
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3612
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3617
		{
			yyVAL.expr = nil
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3621
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3626
		{
			yyVAL.orderBy = nil
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3651
		{
			yyVAL.orderDirection = AscOrder
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.orderDirection = AscOrder
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3659
		{
			yyVAL.orderDirection = DescOrder
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3664
		{
			yyVAL.limit = nil
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3668
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3672
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3676
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3681
		{
			yyVAL.indexOptions = nil
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3685
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3689
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3697
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3704
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3708
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3712
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3726
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3730
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = ""
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3743
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3747
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3752
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = yyDollar[3].str
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3762
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3766
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3771
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3775
		{
			yyVAL.str = yyDollar[2].str
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = "cascaded"
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3784
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3788
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3793
		{
			yyVAL.str = ""
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.str = yyDollar[3].str
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3807
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3815
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3820
		{
			yyVAL.lock = NoLock
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3824
		{
			yyVAL.lock = ForUpdateLock
		}
	case 750:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3828
		{
			yyVAL.lock = ShareModeLock
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3833
		{
			yyVAL.selectInto = nil
		}
	case 752:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3837
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3841
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3845
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = ""
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = " header"
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3872
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3876
		{
			yyVAL.str = " manifest on"
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3880
		{
			yyVAL.str = " manifest off"
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = ""
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = " overwrite on"
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = " overwrite off"
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3899
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3904
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3908
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3913
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = ""
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3931
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3935
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3940
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3944
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3949
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3953
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3958
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.str = " optionally"
		}
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3975
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 783:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3983
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 784:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3987
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3991
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4001
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4005
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 789:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4009
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4014
		{
			yyVAL.updateExprs = nil
		}
	case 791:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4018
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4034
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4038
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4070
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4076
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4090
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4094
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4098
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4102
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4110
		{
			yyVAL.bytes = []byte("charset")
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4117
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4121
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.expr = &Default{}
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4134
		{
			yyVAL.boolean = false
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4136
		{
			yyVAL.boolean = true
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4139
		{
			yyVAL.boolean = false
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4141
		{
			yyVAL.boolean = true
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4144
		{
			yyVAL.ignore = false
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4146
		{
			yyVAL.ignore = true
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4150
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4152
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4154
		{
			yyVAL.empty = struct{}{}
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4156
		{
			yyVAL.empty = struct{}{}
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4158
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.empty = struct{}{}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.empty = struct{}{}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.empty = struct{}{}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.empty = struct{}{}
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4172
		{
			yyVAL.empty = struct{}{}
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.empty = struct{}{}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.empty = struct{}{}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.empty = struct{}{}
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.empty = struct{}{}
		}
	case 837:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4185
		{
			yyVAL.str = ""
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4189
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4194
		{
			yyVAL.indexOptions = nil
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4200
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4206
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4210
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4234
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4616
		{
			decNesting(yylex)
		}
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4621
		{
			skipToEnd(yylex)
		}
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4626
		{
			skipToEnd(yylex)
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4630
		{
			skipToEnd(yylex)
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
